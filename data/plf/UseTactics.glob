DIGEST c33d092a229dc17e14f3acffc0652554
FPLF.UseTactics
R704:714 Coq.Arith.Arith <> <> lib
R735:738 PLF.Maps <> <> lib
R758:761 PLF.Stlc <> <> lib
R781:785 PLF.Types <> <> lib
R805:813 PLF.Smallstep <> <> lib
R833:842 PLF.LibTactics <> <> lib
R862:866 PLF.Equiv <> <> lib
R886:895 PLF.References <> <> lib
R915:919 PLF.Hoare <> <> lib
R939:941 PLF.Sub <> <> lib
mod 2895:2908 <> IntrovExamples
prf 3458:3476 IntrovExamples ceval_deterministic
binder 3486:3486 <> c:1
binder 3488:3489 <> st:2
binder 3491:3493 <> st1:3
binder 3495:3497 <> st2:4
R3517:3522 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R3504:3507 PLF.Imp <> :::x_'=['_x_']=>'_x not
R3509:3513 PLF.Imp <> :::x_'=['_x_']=>'_x not
R3508:3508 PLF.UseTactics <> c:1 var
R3502:3503 PLF.UseTactics <> st:2 var
R3514:3516 PLF.UseTactics <> st1:3 var
R3538:3543 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R3525:3528 PLF.Imp <> :::x_'=['_x_']=>'_x not
R3530:3534 PLF.Imp <> :::x_'=['_x_']=>'_x not
R3529:3529 PLF.UseTactics <> c:1 var
R3523:3524 PLF.UseTactics <> st:2 var
R3535:3537 PLF.UseTactics <> st2:4 var
R3547:3549 Coq.Init.Logic <> ::type_scope:x_'='_x not
R3544:3546 PLF.UseTactics <> st1:3 var
R3550:3552 PLF.UseTactics <> st2:4 var
prf 3729:3742 IntrovExamples dist_exists_or
binder 3754:3754 <> X:5
R3770:3773 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R3769:3769 PLF.UseTactics <> X:5 var
binder 3763:3763 <> P:6
binder 3765:3765 <> Q:7
R3783:3783 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R3804:3809 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R3784:3790 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R3792:3793 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
binder 3791:3791 <> x:8
R3797:3800 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R3794:3794 PLF.UseTactics <> P:6 var
R3796:3796 PLF.UseTactics <> x:8 var
R3801:3801 PLF.UseTactics <> Q:7 var
R3803:3803 PLF.UseTactics <> x:8 var
R3810:3810 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R3824:3829 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R3843:3843 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R3811:3817 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R3819:3820 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
binder 3818:3818 <> x:9
R3821:3821 PLF.UseTactics <> P:6 var
R3823:3823 PLF.UseTactics <> x:9 var
R3830:3836 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R3838:3839 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
binder 3837:3837 <> x:10
R3840:3840 PLF.UseTactics <> Q:7 var
R3842:3842 PLF.UseTactics <> x:10 var
prf 4007:4026 IntrovExamples ceval_deterministic'
binder 4036:4036 <> c:11
binder 4038:4039 <> st:12
binder 4041:4043 <> st1:13
R4048:4048 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R4064:4070 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R4051:4054 PLF.Imp <> :::x_'=['_x_']=>'_x not
R4056:4060 PLF.Imp <> :::x_'=['_x_']=>'_x not
R4055:4055 PLF.UseTactics <> c:11 var
R4049:4050 PLF.UseTactics <> st:12 var
R4061:4063 PLF.UseTactics <> st1:13 var
binder 4078:4080 <> st2:14
R4085:4085 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R4101:4107 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R4088:4091 PLF.Imp <> :::x_'=['_x_']=>'_x not
R4093:4097 PLF.Imp <> :::x_'=['_x_']=>'_x not
R4092:4092 PLF.UseTactics <> c:11 var
R4086:4087 PLF.UseTactics <> st:12 var
R4098:4100 PLF.UseTactics <> st2:14 var
R4111:4113 Coq.Init.Logic <> ::type_scope:x_'='_x not
R4108:4110 PLF.UseTactics <> st1:13 var
R4114:4116 PLF.UseTactics <> st2:14 var
prf 4294:4304 IntrovExamples exists_impl
binder 4314:4314 <> X:15
R4322:4325 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R4321:4321 PLF.UseTactics <> X:15 var
binder 4317:4317 <> P:16
binder 4333:4333 <> Q:17
binder 4344:4344 <> R:18
R4357:4357 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R4376:4383 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R4404:4404 Coq.Init.Logic <> ::type_scope:x_'->'_x not
binder 4365:4365 <> x:19
R4371:4374 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R4368:4368 PLF.UseTactics <> P:16 var
R4370:4370 PLF.UseTactics <> x:19 var
R4375:4375 PLF.UseTactics <> Q:17 var
R4384:4384 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R4398:4402 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R4385:4391 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R4393:4394 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
binder 4392:4392 <> x:20
R4395:4395 PLF.UseTactics <> P:16 var
R4397:4397 PLF.UseTactics <> x:20 var
R4403:4403 PLF.UseTactics <> Q:17 var
R4690:4703 PLF.UseTactics IntrovExamples <> mod
mod 4818:4832 <> InvertsExamples
prf 5665:5673 InvertsExamples skip_left
binder 5683:5683 <> c:21
R5688:5693 PLF.Equiv <> cequiv def
R5695:5696 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R5704:5705 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R5701:5702 PLF.Imp <> :com:com_scope:x_';'_x not
R5697:5700 PLF.Imp <> :com:com_scope:'skip' not
R5703:5703 PLF.UseTactics <> c:21 var
R5707:5707 PLF.UseTactics <> c:21 var
prf 5991:6009 InvertsExamples ceval_deterministic
binder 6019:6019 <> c:22
binder 6021:6022 <> st:23
binder 6024:6026 <> st1:24
binder 6028:6030 <> st2:25
R6050:6056 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R6037:6040 PLF.Imp <> :::x_'=['_x_']=>'_x not
R6042:6046 PLF.Imp <> :::x_'=['_x_']=>'_x not
R6041:6041 PLF.UseTactics <> c:22 var
R6035:6036 PLF.UseTactics <> st:23 var
R6047:6049 PLF.UseTactics <> st1:24 var
R6072:6077 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R6059:6062 PLF.Imp <> :::x_'=['_x_']=>'_x not
R6064:6068 PLF.Imp <> :::x_'=['_x_']=>'_x not
R6063:6063 PLF.UseTactics <> c:22 var
R6057:6058 PLF.UseTactics <> st:23 var
R6069:6071 PLF.UseTactics <> st2:25 var
R6081:6083 Coq.Init.Logic <> ::type_scope:x_'='_x not
R6078:6080 PLF.UseTactics <> st1:24 var
R6084:6086 PLF.UseTactics <> st2:25 var
prf 6645:6664 InvertsExamples ceval_deterministic'
binder 6674:6674 <> c:26
binder 6676:6677 <> st:27
binder 6679:6681 <> st1:28
binder 6683:6685 <> st2:29
R6705:6711 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R6692:6695 PLF.Imp <> :::x_'=['_x_']=>'_x not
R6697:6701 PLF.Imp <> :::x_'=['_x_']=>'_x not
R6696:6696 PLF.UseTactics <> c:26 var
R6690:6691 PLF.UseTactics <> st:27 var
R6702:6704 PLF.UseTactics <> st1:28 var
R6727:6732 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R6714:6717 PLF.Imp <> :::x_'=['_x_']=>'_x not
R6719:6723 PLF.Imp <> :::x_'=['_x_']=>'_x not
R6718:6718 PLF.UseTactics <> c:26 var
R6712:6713 PLF.UseTactics <> st:27 var
R6724:6726 PLF.UseTactics <> st2:29 var
R6736:6738 Coq.Init.Logic <> ::type_scope:x_'='_x not
R6733:6735 PLF.UseTactics <> st1:28 var
R6739:6741 PLF.UseTactics <> st2:29 var
R7406:7408 Coq.Init.Logic <> ::type_scope:x_'='_x not
R7406:7408 Coq.Init.Logic <> ::type_scope:x_'='_x not
prf 8245:8254 InvertsExamples skip_left'
binder 8264:8264 <> c:30
R8269:8274 PLF.Equiv <> cequiv def
R8276:8278 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R8287:8288 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R8283:8285 PLF.Imp <> :com:com_scope:x_';'_x not
R8279:8282 PLF.Imp <> :com:com_scope:'skip' not
R8286:8286 PLF.UseTactics <> c:30 var
R8290:8290 PLF.UseTactics <> c:30 var
R8427:8441 PLF.UseTactics InvertsExamples <> mod
mod 8598:8613 <> InvertsExamples1
def 8678:8696 InvertsExamples1 typing_nonexample_1
R8702:8703 Coq.Init.Logic <> ::type_scope:'~'_x not
R8704:8710 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R8712:8719 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
binder 8711:8711 <> T:31
R8725:8736 PLF.Stlc STLC :::x_'|-'_x_'\in'_x not
R8787:8799 PLF.Stlc STLC :::x_'|-'_x_'\in'_x not
R8720:8724 PLF.Maps <> empty def
R8737:8737 PLF.Stlc STLC :stlc::'\'_x_':'_x_','_x not
R8739:8739 PLF.Stlc STLC :stlc::'\'_x_':'_x_','_x not
R8744:8757 PLF.Stlc STLC :stlc::'\'_x_':'_x_','_x not
R8738:8738 PLF.Stlc STLC x def
R8740:8743 PLF.Stlc STLC :stlc::'Bool' not
R8758:8758 PLF.Stlc STLC :stlc::'\'_x_':'_x_','_x not
R8760:8760 PLF.Stlc STLC :stlc::'\'_x_':'_x_','_x not
R8765:8781 PLF.Stlc STLC :stlc::'\'_x_':'_x_','_x not
R8759:8759 PLF.Stlc STLC y def
R8761:8764 PLF.Stlc STLC :stlc::'Bool' not
R8782:8782 PLF.Stlc STLC :stlc::'('_x_')' not
R8786:8786 PLF.Stlc STLC :stlc::'('_x_')' not
R8784:8784 PLF.Stlc STLC :stlc::x_x not
R8783:8783 PLF.Stlc STLC x def
R8785:8785 PLF.Stlc STLC y def
R8800:8800 PLF.UseTactics <> T:31 var
R9347:9362 PLF.UseTactics InvertsExamples1 <> mod
mod 10292:10303 <> NaryExamples
prf 10703:10713 NaryExamples demo_splits
binder 10724:10724 <> n:32
binder 10726:10726 <> m:33
R10736:10739 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R10732:10734 Coq.Init.Peano <> ::nat_scope:x_'>'_x not
R10731:10731 PLF.UseTactics <> n:32 var
R10745:10748 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R10741:10743 Coq.Init.Peano <> ::nat_scope:x_'<'_x not
R10740:10740 PLF.UseTactics <> n:32 var
R10744:10744 PLF.UseTactics <> m:33 var
R10757:10760 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R10750:10752 Coq.Init.Peano <> ::nat_scope:x_'<'_x not
R10749:10749 PLF.UseTactics <> m:33 var
R10754:10754 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
R10753:10753 PLF.UseTactics <> n:32 var
R10762:10765 Coq.Init.Logic <> ::type_scope:x_'<>'_x not
R10761:10761 PLF.UseTactics <> m:33 var
prf 11175:11185 NaryExamples demo_branch
binder 11196:11196 <> n:34
binder 11198:11198 <> m:35
R11208:11211 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R11204:11206 Coq.Init.Peano <> ::nat_scope:x_'<'_x not
R11203:11203 PLF.UseTactics <> n:34 var
R11207:11207 PLF.UseTactics <> m:35 var
R11217:11220 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R11213:11215 Coq.Init.Logic <> ::type_scope:x_'='_x not
R11212:11212 PLF.UseTactics <> n:34 var
R11216:11216 PLF.UseTactics <> m:35 var
R11222:11224 Coq.Init.Peano <> ::nat_scope:x_'<'_x not
R11221:11221 PLF.UseTactics <> m:35 var
R11225:11225 PLF.UseTactics <> n:34 var
R11257:11268 Coq.Arith.Compare_dec <> lt_eq_lt_dec def
R11257:11268 Coq.Arith.Compare_dec <> lt_eq_lt_dec def
R11375:11386 PLF.UseTactics NaryExamples <> mod
mod 12202:12217 <> EqualityExamples
prf 12482:12492 EqualityExamples mult_0_plus
R12509:12511 Coq.Init.Datatypes <> nat ind
binder 12503:12503 <> n:36
binder 12505:12505 <> m:37
R12527:12529 Coq.Init.Logic <> ::type_scope:x_'='_x not
R12516:12516 Coq.Init.Peano <> ::nat_scope:x_'*'_x not
R12522:12525 Coq.Init.Peano <> ::nat_scope:x_'*'_x not
R12518:12520 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
R12521:12521 PLF.UseTactics <> n:36 var
R12526:12526 PLF.UseTactics <> m:37 var
R12531:12533 Coq.Init.Peano <> ::nat_scope:x_'*'_x not
R12530:12530 PLF.UseTactics <> n:36 var
R12534:12534 PLF.UseTactics <> m:37 var
R12606:12608 Coq.Init.Logic <> ::type_scope:x_'='_x not
R12602:12604 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
R12606:12608 Coq.Init.Logic <> ::type_scope:x_'='_x not
R12602:12604 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
R12717:12719 Coq.Init.Logic <> ::type_scope:x_'='_x not
R12713:12715 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
R12717:12719 Coq.Init.Logic <> ::type_scope:x_'='_x not
R12713:12715 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
prf 13101:13112 EqualityExamples mult_0_plus'
R13129:13131 Coq.Init.Datatypes <> nat ind
binder 13123:13123 <> n:38
binder 13125:13125 <> m:39
R13147:13149 Coq.Init.Logic <> ::type_scope:x_'='_x not
R13136:13136 Coq.Init.Peano <> ::nat_scope:x_'*'_x not
R13142:13145 Coq.Init.Peano <> ::nat_scope:x_'*'_x not
R13138:13140 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
R13141:13141 PLF.UseTactics <> n:38 var
R13146:13146 PLF.UseTactics <> m:39 var
R13151:13153 Coq.Init.Peano <> ::nat_scope:x_'*'_x not
R13150:13150 PLF.UseTactics <> n:38 var
R13154:13154 PLF.UseTactics <> m:39 var
R13199:13201 Coq.Init.Logic <> ::type_scope:x_'='_x not
R13195:13197 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
R13199:13201 Coq.Init.Logic <> ::type_scope:x_'='_x not
R13195:13197 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
prf 13616:13628 EqualityExamples mult_0_plus''
R13652:13654 Coq.Init.Datatypes <> nat ind
binder 13639:13639 <> u:40
binder 13641:13641 <> v:41
binder 13643:13643 <> w:42
binder 13645:13645 <> x:43
binder 13647:13647 <> y:44
binder 13649:13649 <> z:45
R13684:13686 Coq.Init.Logic <> ::type_scope:x_'='_x not
R13659:13659 Coq.Init.Peano <> ::nat_scope:x_'*'_x not
R13665:13669 Coq.Init.Peano <> ::nat_scope:x_'*'_x not
R13683:13683 Coq.Init.Peano <> ::nat_scope:x_'*'_x not
R13661:13663 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
R13660:13660 PLF.UseTactics <> u:40 var
R13664:13664 PLF.UseTactics <> v:41 var
R13670:13670 Coq.Init.Datatypes <> S constr
R13678:13680 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
R13674:13676 Coq.Init.Peano <> ::nat_scope:x_'*'_x not
R13673:13673 PLF.UseTactics <> w:42 var
R13677:13677 PLF.UseTactics <> x:43 var
R13681:13681 PLF.UseTactics <> y:44 var
R13687:13687 PLF.UseTactics <> z:45 var
binder 13731:13731 <> a:46
binder 13733:13733 <> b:47
R13743:13745 Coq.Init.Logic <> ::type_scope:x_'='_x not
R13737:13738 Coq.Init.Peano <> ::nat_scope:x_'*'_x not
R13742:13742 Coq.Init.Peano <> ::nat_scope:x_'*'_x not
R13736:13736 PLF.UseTactics <> a:46 var
R13739:13739 Coq.Init.Datatypes <> S constr
R13741:13741 PLF.UseTactics <> b:47 var
R13749:13749 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
R13747:13747 Coq.Init.Peano <> ::nat_scope:x_'*'_x not
R13746:13746 PLF.UseTactics <> a:46 var
R13748:13748 PLF.UseTactics <> b:47 var
R13750:13750 PLF.UseTactics <> a:46 var
binder 13731:13731 <> a:48
binder 13733:13733 <> b:49
R13743:13745 Coq.Init.Logic <> ::type_scope:x_'='_x not
R13737:13738 Coq.Init.Peano <> ::nat_scope:x_'*'_x not
R13742:13742 Coq.Init.Peano <> ::nat_scope:x_'*'_x not
R13736:13736 PLF.UseTactics <> a:48 var
R13739:13739 Coq.Init.Datatypes <> S constr
R13741:13741 PLF.UseTactics <> b:49 var
R13749:13749 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
R13747:13747 Coq.Init.Peano <> ::nat_scope:x_'*'_x not
R13746:13746 PLF.UseTactics <> a:48 var
R13748:13748 PLF.UseTactics <> b:49 var
R13750:13750 PLF.UseTactics <> a:48 var
prf 14143:14153 EqualityExamples demo_substs
binder 14164:14164 <> x:50
binder 14166:14166 <> y:51
R14174:14175 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R14171:14173 Coq.Init.Datatypes <> nat ind
R14176:14178 Coq.Init.Datatypes <> nat ind
binder 14169:14169 <> f:52
R14191:14196 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R14185:14187 Coq.Init.Logic <> ::type_scope:x_'='_x not
R14184:14184 PLF.UseTactics <> x:50 var
R14188:14188 PLF.UseTactics <> f:52 var
R14190:14190 PLF.UseTactics <> x:50 var
R14202:14207 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R14198:14200 Coq.Init.Logic <> ::type_scope:x_'='_x not
R14197:14197 PLF.UseTactics <> y:51 var
R14201:14201 PLF.UseTactics <> x:50 var
R14209:14211 Coq.Init.Logic <> ::type_scope:x_'='_x not
R14208:14208 PLF.UseTactics <> y:51 var
R14212:14212 PLF.UseTactics <> f:52 var
R14214:14214 PLF.UseTactics <> x:50 var
prf 14640:14651 EqualityExamples demo_fequals
R14675:14677 Coq.Init.Datatypes <> nat ind
binder 14663:14663 <> a:53
binder 14665:14665 <> b:54
binder 14667:14667 <> c:55
binder 14669:14669 <> d:56
binder 14671:14671 <> e:57
R14688:14689 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R14685:14687 Coq.Init.Datatypes <> nat ind
R14693:14694 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R14690:14692 Coq.Init.Datatypes <> nat ind
R14698:14699 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R14695:14697 Coq.Init.Datatypes <> nat ind
R14703:14704 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R14700:14702 Coq.Init.Datatypes <> nat ind
R14705:14707 Coq.Init.Datatypes <> nat ind
binder 14681:14681 <> f:58
R14718:14723 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R14714:14716 Coq.Init.Logic <> ::type_scope:x_'='_x not
R14713:14713 PLF.UseTactics <> a:53 var
R14729:14734 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R14725:14727 Coq.Init.Logic <> ::type_scope:x_'='_x not
R14724:14724 PLF.UseTactics <> b:54 var
R14728:14728 PLF.UseTactics <> e:57 var
R14740:14745 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R14736:14738 Coq.Init.Logic <> ::type_scope:x_'='_x not
R14735:14735 PLF.UseTactics <> e:57 var
R14755:14757 Coq.Init.Logic <> ::type_scope:x_'='_x not
R14746:14746 PLF.UseTactics <> f:58 var
R14754:14754 PLF.UseTactics <> d:56 var
R14752:14752 PLF.UseTactics <> c:55 var
R14750:14750 PLF.UseTactics <> b:54 var
R14748:14748 PLF.UseTactics <> a:53 var
R14758:14758 PLF.UseTactics <> f:58 var
R14764:14764 PLF.UseTactics <> c:55 var
ax 15574:15593 EqualityExamples big_expression_using
R15600:15601 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R15597:15599 Coq.Init.Datatypes <> nat ind
R15602:15604 Coq.Init.Datatypes <> nat ind
prf 15640:15655 EqualityExamples demo_applys_eq_1
R15672:15673 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R15669:15671 Coq.Init.Datatypes <> nat ind
R15677:15678 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R15674:15676 Coq.Init.Datatypes <> nat ind
binder 15667:15667 <> P:60
binder 15685:15685 <> x:61
binder 15687:15687 <> y:62
binder 15689:15689 <> z:63
R15722:15727 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R15694:15694 PLF.UseTactics <> P:60 var
R15699:15718 PLF.UseTactics EqualityExamples big_expression_using prfax
R15720:15720 PLF.UseTactics <> z:63 var
R15696:15696 PLF.UseTactics <> x:61 var
R15728:15728 PLF.UseTactics <> P:60 var
R15733:15752 PLF.UseTactics EqualityExamples big_expression_using prfax
R15754:15754 PLF.UseTactics <> y:62 var
R15730:15730 PLF.UseTactics <> x:61 var
R15842:15844 Coq.Init.Logic <> ::type_scope:x_'='_x not
R15820:15839 PLF.UseTactics EqualityExamples big_expression_using prfax
R15845:15864 PLF.UseTactics EqualityExamples big_expression_using prfax
R15842:15844 Coq.Init.Logic <> ::type_scope:x_'='_x not
R15820:15839 PLF.UseTactics EqualityExamples big_expression_using prfax
R15845:15864 PLF.UseTactics EqualityExamples big_expression_using prfax
prf 16310:16325 EqualityExamples demo_applys_eq_2
R16342:16343 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R16339:16341 Coq.Init.Datatypes <> nat ind
R16347:16348 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R16344:16346 Coq.Init.Datatypes <> nat ind
binder 16337:16337 <> P:64
binder 16355:16356 <> x1:65
binder 16358:16359 <> x2:66
binder 16361:16362 <> y1:67
binder 16364:16365 <> y2:68
R16423:16428 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R16370:16370 PLF.UseTactics <> P:64 var
R16399:16418 PLF.UseTactics EqualityExamples big_expression_using prfax
R16420:16421 PLF.UseTactics <> y2:68 var
R16373:16392 PLF.UseTactics EqualityExamples big_expression_using prfax
R16394:16395 PLF.UseTactics <> x2:66 var
R16429:16429 PLF.UseTactics <> P:64 var
R16458:16477 PLF.UseTactics EqualityExamples big_expression_using prfax
R16479:16480 PLF.UseTactics <> y1:67 var
R16432:16451 PLF.UseTactics EqualityExamples big_expression_using prfax
R16453:16454 PLF.UseTactics <> x1:65 var
R16673:16688 PLF.UseTactics EqualityExamples <> mod
mod 17526:17539 <> UnfoldsExample
prf 17724:17737 UnfoldsExample bexp_eval_true
binder 17748:17748 <> b:69
binder 17750:17751 <> st:70
R17773:17778 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R17766:17768 Coq.Init.Logic <> ::type_scope:x_'='_x not
R17756:17760 PLF.Imp <> beval def
R17762:17763 PLF.UseTactics <> st:70 var
R17765:17765 PLF.UseTactics <> b:69 var
R17769:17772 PLF.Imp <> :::'true' not
R17780:17784 PLF.Hoare <> bassn def
R17786:17786 PLF.UseTactics <> b:69 var
R17789:17790 PLF.UseTactics <> st:70 var
R17857:17861 PLF.Hoare <> bassn def
R18182:18195 PLF.UseTactics UnfoldsExample <> mod
prf 18637:18646 <> demo_false
binder 18657:18657 <> n:71
R18669:18674 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R18665:18667 Coq.Init.Logic <> ::type_scope:x_'='_x not
R18662:18662 Coq.Init.Datatypes <> S constr
R18664:18664 PLF.UseTactics <> n:71 var
R18676:18678 Coq.Init.Logic <> ::type_scope:x_'='_x not
R18675:18675 PLF.UseTactics <> n:71 var
prf 18863:18876 <> demo_false_arg
R18882:18882 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R18907:18913 Coq.Init.Logic <> ::type_scope:x_'->'_x not
binder 18890:18890 <> n:72
R18898:18901 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R18894:18896 Coq.Init.Peano <> ::nat_scope:x_'<'_x not
R18893:18893 PLF.UseTactics <> n:72 var
R18902:18906 Coq.Init.Logic <> False ind
R18919:18924 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R18915:18917 Coq.Init.Peano <> ::nat_scope:x_'<'_x not
R18926:18928 Coq.Init.Peano <> ::nat_scope:x_'<'_x not
prf 19172:19184 <> demo_tryfalse
binder 19195:19195 <> n:73
R19207:19212 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R19203:19205 Coq.Init.Logic <> ::type_scope:x_'='_x not
R19200:19200 Coq.Init.Datatypes <> S constr
R19202:19202 PLF.UseTactics <> n:73 var
R19214:19216 Coq.Init.Logic <> ::type_scope:x_'='_x not
R19213:19213 PLF.UseTactics <> n:73 var
mod 19556:19565 <> GenExample
prf 19620:19648 GenExample substitution_preserves_typing
binder 19659:19663 <> Gamma:74
binder 19665:19665 <> x:75
binder 19667:19667 <> U:76
binder 19669:19669 <> t:77
binder 19671:19671 <> v:78
binder 19673:19673 <> T:79
R19704:19709 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R19693:19696 PLF.Stlc STLC :::x_'|-'_x_'\in'_x not
R19698:19702 PLF.Stlc STLC :::x_'|-'_x_'\in'_x not
R19679:19683 PLF.Maps <> :::x_'|->'_x_';'_x not
R19685:19687 PLF.Maps <> :::x_'|->'_x_';'_x not
R19688:19692 PLF.UseTactics <> Gamma:74 var
R19678:19678 PLF.UseTactics <> x:75 var
R19684:19684 PLF.UseTactics <> U:76 var
R19697:19697 PLF.UseTactics <> t:77 var
R19703:19703 PLF.UseTactics <> T:79 var
R19726:19733 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R19715:19718 PLF.Stlc STLC :::x_'|-'_x_'\in'_x not
R19720:19724 PLF.Stlc STLC :::x_'|-'_x_'\in'_x not
R19710:19714 PLF.Maps <> empty def
R19719:19719 PLF.UseTactics <> v:78 var
R19725:19725 PLF.UseTactics <> U:76 var
R19739:19742 PLF.Stlc STLC :::x_'|-'_x_'\in'_x not
R19750:19754 PLF.Stlc STLC :::x_'|-'_x_'\in'_x not
R19734:19738 PLF.UseTactics <> Gamma:74 var
R19743:19743 PLF.Stlc STLC :stlc::'['_x_':='_x_']'_x not
R19745:19746 PLF.Stlc STLC :stlc::'['_x_':='_x_']'_x not
R19748:19748 PLF.Stlc STLC :stlc::'['_x_':='_x_']'_x not
R19744:19744 PLF.UseTactics <> x:75 var
R19747:19747 PLF.UseTactics <> v:78 var
R19749:19749 PLF.UseTactics <> t:77 var
R19755:19755 PLF.UseTactics <> T:79 var
R20143:20152 PLF.UseTactics GenExample <> mod
mod 20479:20489 <> SkipExample
prf 20773:20783 SkipExample demo_admits
R20787:20790 Coq.Init.Logic <> True ind
R20826:20828 Coq.Init.Datatypes <> nat ind
binder 20820:20820 <> n:80
binder 20822:20822 <> m:81
R20842:20844 Coq.Init.Logic <> ::type_scope:x_'='_x not
R20831:20831 Coq.Init.Peano <> ::nat_scope:x_'*'_x not
R20837:20840 Coq.Init.Peano <> ::nat_scope:x_'*'_x not
R20833:20835 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
R20836:20836 PLF.UseTactics <> n:80 var
R20841:20841 PLF.UseTactics <> m:81 var
R20846:20848 Coq.Init.Peano <> ::nat_scope:x_'*'_x not
R20845:20845 PLF.UseTactics <> n:80 var
R20849:20849 PLF.UseTactics <> m:81 var
R20826:20828 Coq.Init.Datatypes <> nat ind
binder 20820:20820 <> n:82
binder 20822:20822 <> m:83
R20842:20844 Coq.Init.Logic <> ::type_scope:x_'='_x not
R20831:20831 Coq.Init.Peano <> ::nat_scope:x_'*'_x not
R20837:20840 Coq.Init.Peano <> ::nat_scope:x_'*'_x not
R20833:20835 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
R20836:20836 PLF.UseTactics <> n:82 var
R20841:20841 PLF.UseTactics <> m:83 var
R20846:20848 Coq.Init.Peano <> ::nat_scope:x_'*'_x not
R20845:20845 PLF.UseTactics <> n:82 var
R20849:20849 PLF.UseTactics <> m:83 var
prf 21009:21019 SkipExample mult_plus_0
R21036:21038 Coq.Init.Datatypes <> nat ind
binder 21030:21030 <> n:84
binder 21032:21032 <> m:85
R21054:21056 Coq.Init.Logic <> ::type_scope:x_'='_x not
R21043:21043 Coq.Init.Peano <> ::nat_scope:x_'*'_x not
R21049:21052 Coq.Init.Peano <> ::nat_scope:x_'*'_x not
R21045:21047 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
R21044:21044 PLF.UseTactics <> n:84 var
R21053:21053 PLF.UseTactics <> m:85 var
R21058:21060 Coq.Init.Peano <> ::nat_scope:x_'*'_x not
R21057:21057 PLF.UseTactics <> n:84 var
R21061:21061 PLF.UseTactics <> m:85 var
R21136:21138 Coq.Init.Logic <> ::type_scope:x_'='_x not
R21132:21134 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
R21136:21138 Coq.Init.Logic <> ::type_scope:x_'='_x not
R21132:21134 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
R21248:21250 Coq.Init.Logic <> ::type_scope:x_'='_x not
R21244:21246 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
R21248:21250 Coq.Init.Logic <> ::type_scope:x_'='_x not
R21244:21246 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
binder 21425:21425 <> a:86
R21433:21435 Coq.Init.Logic <> ::type_scope:x_'='_x not
R21429:21431 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
R21428:21428 PLF.UseTactics <> a:86 var
R21436:21436 PLF.UseTactics <> a:86 var
binder 21425:21425 <> a:87
R21433:21435 Coq.Init.Logic <> ::type_scope:x_'='_x not
R21429:21431 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
R21428:21428 PLF.UseTactics <> a:87 var
R21436:21436 PLF.UseTactics <> a:87 var
prf 21996:22014 SkipExample ceval_deterministic
binder 22024:22024 <> c:88
binder 22026:22027 <> st:89
binder 22029:22031 <> st1:90
binder 22033:22035 <> st2:91
R22055:22060 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R22042:22045 PLF.Imp <> :::x_'=['_x_']=>'_x not
R22047:22051 PLF.Imp <> :::x_'=['_x_']=>'_x not
R22046:22046 PLF.UseTactics <> c:88 var
R22040:22041 PLF.UseTactics <> st:89 var
R22052:22054 PLF.UseTactics <> st1:90 var
R22076:22081 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R22063:22066 PLF.Imp <> :::x_'=['_x_']=>'_x not
R22068:22072 PLF.Imp <> :::x_'=['_x_']=>'_x not
R22067:22067 PLF.UseTactics <> c:88 var
R22061:22062 PLF.UseTactics <> st:89 var
R22073:22075 PLF.UseTactics <> st2:91 var
R22085:22087 Coq.Init.Logic <> ::type_scope:x_'='_x not
R22082:22084 PLF.UseTactics <> st1:90 var
R22088:22090 PLF.UseTactics <> st2:91 var
R22647:22649 Coq.Init.Logic <> ::type_scope:x_'='_x not
R22647:22649 Coq.Init.Logic <> ::type_scope:x_'='_x not
R22955:22965 PLF.UseTactics SkipExample <> mod
mod 23077:23088 <> SortExamples
prf 23304:23322 SortExamples ceval_deterministic
binder 23332:23332 <> c:92
binder 23334:23335 <> st:93
binder 23337:23339 <> st1:94
binder 23341:23343 <> st2:95
R23363:23368 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R23350:23353 PLF.Imp <> :::x_'=['_x_']=>'_x not
R23355:23359 PLF.Imp <> :::x_'=['_x_']=>'_x not
R23354:23354 PLF.UseTactics <> c:92 var
R23348:23349 PLF.UseTactics <> st:93 var
R23360:23362 PLF.UseTactics <> st1:94 var
R23384:23389 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R23371:23374 PLF.Imp <> :::x_'=['_x_']=>'_x not
R23376:23380 PLF.Imp <> :::x_'=['_x_']=>'_x not
R23375:23375 PLF.UseTactics <> c:92 var
R23369:23370 PLF.UseTactics <> st:93 var
R23381:23383 PLF.UseTactics <> st2:95 var
R23393:23395 Coq.Init.Logic <> ::type_scope:x_'='_x not
R23390:23392 PLF.UseTactics <> st1:94 var
R23396:23398 PLF.UseTactics <> st2:95 var
R23623:23634 PLF.UseTactics SortExamples <> mod
mod 25982:25993 <> ExamplesLets
ax 26157:26176 ExamplesLets typing_inversion_var
binder 26187:26191 <> Gamma:96
R26196:26201 Coq.Strings.String <> string ind
binder 26194:26194 <> x:97
binder 26204:26204 <> T:98
R26225:26230 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R26214:26217 PLF.Sub <> :::x_'|-'_x_'\in'_x not
R26219:26223 PLF.Sub <> :::x_'|-'_x_'\in'_x not
R26209:26213 PLF.UseTactics <> Gamma:96 var
R26218:26218 PLF.UseTactics <> x:97 var
R26224:26224 PLF.UseTactics <> T:98 var
R26231:26237 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R26239:26244 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
binder 26238:26238 <> S:99
R26261:26264 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R26252:26254 Coq.Init.Logic <> ::type_scope:x_'='_x not
R26245:26249 PLF.UseTactics <> Gamma:96 var
R26251:26251 PLF.UseTactics <> x:97 var
R26255:26258 Coq.Init.Datatypes <> Some constr
R26260:26260 PLF.UseTactics <> S:99 var
R26266:26269 PLF.Sub <> :::x_'<:'_x not
R26265:26265 PLF.UseTactics <> S:99 var
R26270:26270 PLF.UseTactics <> T:98 var
prf 26528:26538 ExamplesLets demo_lets_1
R26552:26558 PLF.Sub <> context def
binder 26550:26550 <> G:101
R26564:26569 Coq.Strings.String <> string ind
binder 26562:26562 <> x:102
R26575:26576 PLF.Sub <> ty ind
binder 26573:26573 <> T:103
R26594:26599 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R26583:26586 PLF.Sub <> :::x_'|-'_x_'\in'_x not
R26588:26592 PLF.Sub <> :::x_'|-'_x_'\in'_x not
R26582:26582 PLF.UseTactics <> G:101 var
R26587:26587 PLF.UseTactics <> x:102 var
R26593:26593 PLF.UseTactics <> T:103 var
R26600:26603 Coq.Init.Logic <> True ind
R26669:26688 PLF.UseTactics ExamplesLets typing_inversion_var prfax
R26669:26688 PLF.UseTactics ExamplesLets typing_inversion_var prfax
R26779:26798 PLF.UseTactics ExamplesLets typing_inversion_var prfax
R26779:26798 PLF.UseTactics ExamplesLets typing_inversion_var prfax
prf 27240:27250 ExamplesLets demo_lets_2
R27264:27270 PLF.Sub <> context def
binder 27262:27262 <> G:104
R27276:27281 Coq.Strings.String <> string ind
binder 27274:27274 <> x:105
R27287:27288 PLF.Sub <> ty ind
binder 27285:27285 <> T:106
R27292:27295 Coq.Init.Logic <> True ind
R27344:27363 PLF.UseTactics ExamplesLets typing_inversion_var prfax
R27371:27373 PLF.LibTactics <> ::ltac_scope:'___' not
R27344:27363 PLF.UseTactics ExamplesLets typing_inversion_var prfax
R27371:27373 PLF.LibTactics <> ::ltac_scope:'___' not
prf 27752:27762 ExamplesLets demo_lets_3
R27776:27781 Coq.Strings.String <> string ind
binder 27774:27774 <> x:107
R27785:27788 Coq.Init.Logic <> True ind
R27833:27852 PLF.UseTactics ExamplesLets typing_inversion_var prfax
R27856:27858 PLF.LibTactics <> ::ltac_scope:'___' not
R27833:27852 PLF.UseTactics ExamplesLets typing_inversion_var prfax
R27856:27858 PLF.LibTactics <> ::ltac_scope:'___' not
prf 28038:28048 ExamplesLets demo_lets_4
R28052:28055 Coq.Init.Logic <> True ind
R28088:28107 PLF.UseTactics ExamplesLets typing_inversion_var prfax
R28109:28111 PLF.LibTactics <> ::ltac_scope:'___' not
R28088:28107 PLF.UseTactics ExamplesLets typing_inversion_var prfax
R28109:28111 PLF.LibTactics <> ::ltac_scope:'___' not
prf 28316:28326 ExamplesLets demo_lets_5
R28330:28333 Coq.Init.Logic <> True ind
R28353:28372 PLF.UseTactics ExamplesLets typing_inversion_var prfax
R28353:28372 PLF.UseTactics ExamplesLets typing_inversion_var prfax
prf 28809:28828 ExamplesLets demo_lets_underscore
R28834:28834 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R28864:28870 Coq.Init.Logic <> ::type_scope:x_'->'_x not
binder 28842:28842 <> n:108
binder 28844:28844 <> m:109
R28853:28856 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R28848:28851 Coq.Init.Peano <> ::nat_scope:x_'<='_x not
R28847:28847 PLF.UseTactics <> n:108 var
R28852:28852 PLF.UseTactics <> m:109 var
R28858:28860 Coq.Init.Peano <> ::nat_scope:x_'<'_x not
R28857:28857 PLF.UseTactics <> n:108 var
R28862:28862 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
R28861:28861 PLF.UseTactics <> m:109 var
R28871:28874 Coq.Init.Logic <> True ind
R29297:29298 PLF.LibTactics <> ::ltac_scope:'__' not
R29297:29298 PLF.LibTactics <> ::ltac_scope:'__' not
R29775:29786 PLF.UseTactics ExamplesLets <> mod
