\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:280> * <var:r> + <var:B> * <nat:428> + <nat:226> * <var:c> + <nat:464> * <var:J> + <nat:330> + <var:Y> * <nat:166> + <var:f> * <nat:300> + <nat:396> * <var:A> + <nat:388> * <var:E> $ must be even . \end{theorem} \begin{proof} Remember the expression $ <var:A> * <nat:396> + <var:E> * <nat:388> + <nat:280> * <var:r> + <var:c> * <nat:226> + <var:Y> * <nat:166> + <nat:428> * <var:B> + <var:f> * <nat:300> + <var:J> * <nat:464> $ is guaranteed to be even . Notice the pairs $ <nat:280> \cdot <var:r> $ , $ <var:f> \cdot <nat:300> $ , $ <nat:464> \cdot <var:J> $ , $ <nat:388> \cdot <var:E> $ , in addition to $ <var:B> \cdot <nat:428> $ are obviously even . In addition , $ <nat:396> \cdot <var:A> $ is clearly an even positive integer . Observe the pair $ <nat:166> \cdot <var:Y> $ is known to be even . Remember the term $ <nat:226> \cdot <var:c> $ is an even integer . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:r> <var:B> <var:c> <var:J> <var:Y> <var:f> <var:A> <var:E> : nat , Nat . even ( <nat:280> * <var:r> + <nat:428> * <var:B> + <nat:226> * <var:c> + <nat:464> * <var:J> + <nat:166> * <var:Y> + <nat:300> * <var:f> + <nat:396> * <var:A> + <nat:388> * <var:E> + <nat:330> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:280> * <var:r> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:300> * <var:f> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:464> * <var:J> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:388> * <var:E> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:428> * <var:B> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:396> * <var:A> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:166> * <var:Y> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:226> * <var:c> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:280> * <var:r> + <nat:428> * <var:B> + <nat:226> * <var:c> + <nat:464> * <var:J> + <nat:166> * <var:Y> + <nat:300> * <var:f> + <nat:396> * <var:A> + <nat:388> * <var:E> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . even_add . rewrite <genH> . auto . Qed . 