\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Assuming any terms $ <var:k> $ , $ <var:f> $ , $ <var:K> $ , and $ <var:L> $ $ <var:f> \cdot <nat:282> + <nat:308> \cdot <var:k> + <nat:386> \cdot <var:K> + <nat:76> \cdot <var:L> + <nat:193> $ will be odd . \end{theorem} \begin{proof} This proposition must be true by reason that $ <var:K> \times <nat:386> + <nat:308> \times <var:k> + <nat:76> \times <var:L> + <nat:282> \times <var:f> $ is known as even . The term $ <var:f> <nat:282> $ is obviously an even element of $ \mathbb{Z}^+ $ . The term $ <nat:386> <var:K> $ is obviously an even natural . Adding on , remember the term $ <var:k> <nat:308> $ is trivially an even natural number . This holds as a consequence that multiplying of an even positive integer and some element of $ \mathbb{N} $ must be even . In addition to this , we know the term $ <var:L> <nat:76> $ is an even number . This fact is true from the knowledge taking the product between an even element of $ \mathbb{N} $ and some number in $ \mathbb{N} $ must be by definition an even number in $ \mathbb{Z}^+ $ . Because the summing of even numbers in $ \mathbb{N} $ with an even element of $ \mathbb{N} $ is even , as well as from the fact the product of even elements of $ \mathbb{Z}^+ $ and an arbitrary element of $ \mathbb{Z}^+ $ is guaranteed to be even . Remember $ <nat:193> $ is trivially an odd whole number . Because the summation between even numbers in $ \mathbb{Z}^+ $ collectively and an odd element of $ \mathbb{Z}^+ $ is odd , then this result holds . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:k> <var:f> <var:K> <var:L> : nat , Nat . odd ( <nat:282> * <var:f> + <nat:308> * <var:k> + <nat:386> * <var:K> + <nat:76> * <var:L> + <nat:193> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:282> * <var:f> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:386> * <var:K> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:308> * <var:k> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:76> * <var:L> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:282> * <var:f> + <nat:308> * <var:k> + <nat:386> * <var:K> + <nat:76> * <var:L> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } assert ( <genH> : Nat . odd <nat:193> = true ) . { auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . rewrite <genH> . auto . Qed . 