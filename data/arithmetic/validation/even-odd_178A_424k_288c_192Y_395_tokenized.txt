\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} With some positive numbers $ <var:c> $ , $ <var:k> $ , $ <var:A> $ , and $ <var:Y> $ the sum $ <var:c> \cdot <nat:288> + <var:A> \cdot <nat:178> + <nat:395> + <var:k> \cdot <nat:424> + <var:Y> \cdot <nat:192> $ is odd . \end{theorem} \begin{proof} This lemma is proven by reason that $ <nat:192> \cdot <var:Y> + <var:c> \cdot <nat:288> + <var:k> \cdot <nat:424> + <nat:178> \cdot <var:A> $ is clearly even . Recall that the term $ <var:A> <nat:178> $ is obviously an even number . Remember that the terms $ <nat:424> <var:k> $ in addition to $ <var:c> <nat:288> $ are obviously even numbers in $ \mathbb{N} $ . This must be true from the fact the product between an even element of $ \mathbb{Z}^+ $ with any element of $ \mathbb{N} $ will be clearly an even element of $ \mathbb{Z}^+ $ . Recall the term $ <nat:192> <var:Y> $ is trivially even . By reason that multiplying of an even number in $ \mathbb{Z}^+ $ with a whole number is even the summation $ <nat:178> \cdot <var:A> + <nat:424> \cdot <var:k> + <nat:288> \cdot <var:c> + <var:Y> \cdot <nat:192> $ will be even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:c> <var:k> <var:A> <var:Y> : nat , Nat . odd ( <nat:288> * <var:c> + <nat:178> * <var:A> + <nat:424> * <var:k> + <nat:192> * <var:Y> + <nat:395> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:178> * <var:A> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:424> * <var:k> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:288> * <var:c> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:192> * <var:Y> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:288> * <var:c> + <nat:178> * <var:A> + <nat:424> * <var:k> + <nat:192> * <var:Y> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . auto . Qed . 