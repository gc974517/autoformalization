\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:f> <nat:494> + <nat:348> <var:S> + <var:r> <nat:426> + <nat:24> <var:t> + <nat:224> <var:z> + <var:T> <nat:250> + <nat:96> <var:e> + <nat:461> + <var:q> <nat:164> $ will be odd for every variables $ <var:z> $ , $ <var:t> $ , $ <var:q> $ , $ <var:e> $ , $ <var:r> $ , $ <var:T> $ , $ <var:f> $ , and $ <var:S> $ . \end{theorem} \begin{proof} We verify $ <var:f> \cdot <nat:494> + <nat:461> + <nat:24> \cdot <var:t> + <var:e> \cdot <nat:96> + <var:T> \cdot <nat:250> + <var:z> \cdot <nat:224> + <var:r> \cdot <nat:426> + <var:S> \cdot <nat:348> + <nat:164> \cdot <var:q> $ must be odd . Remember that the expression $ <var:z> \times <nat:224> + <nat:96> \times <var:e> + <var:S> \times <nat:348> + <nat:494> \times <var:f> + <var:T> \times <nat:250> + <var:r> \times <nat:426> + <var:t> \times <nat:24> + <var:q> \times <nat:164> $ is even . Observe that the pairs $ <var:e> <nat:96> $ , $ <var:q> <nat:164> $ , and $ <var:S> <nat:348> $ are even . In addition , we know that $ <var:r> <nat:426> $ is guaranteed to be even . This claim holds as a consequence that multiplying of an even integer with any element of $ \mathbb{N} $ is even . The term $ <nat:250> <var:T> $ is obviously an even number in $ \mathbb{N} $ . The terms $ <nat:24> <var:t> $ as well as $ <nat:224> <var:z> $ are even elements of $ \mathbb{N} $ . We know $ <var:f> <nat:494> $ is trivially an even whole number . The totaling of even naturals and an odd number in $ \mathbb{N} $ is guaranteed to be an odd whole number . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:z> <var:t> <var:q> <var:e> <var:r> <var:T> <var:f> <var:S> : nat , Nat . odd ( <nat:494> * <var:f> + <nat:348> * <var:S> + <nat:426> * <var:r> + <nat:24> * <var:t> + <nat:224> * <var:z> + <nat:250> * <var:T> + <nat:96> * <var:e> + <nat:164> * <var:q> + <nat:461> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:96> * <var:e> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:164> * <var:q> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:348> * <var:S> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:426> * <var:r> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:250> * <var:T> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:24> * <var:t> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:224> * <var:z> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:494> * <var:f> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:494> * <var:f> + <nat:348> * <var:S> + <nat:426> * <var:r> + <nat:24> * <var:t> + <nat:224> * <var:z> + <nat:250> * <var:T> + <nat:96> * <var:e> + <nat:164> * <var:q> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . auto . Qed . 