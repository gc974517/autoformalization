\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:w> \cdot <nat:472> + <nat:14> \cdot <var:P> + <nat:323> + <var:F> \cdot <nat:60> + <nat:214> \cdot <var:B> $ is guaranteed to be odd given every whole numbers $ <var:F> $ , $ <var:P> $ , $ <var:B> $ , and $ <var:w> $ . \end{theorem} \begin{proof} Take note the formula $ <var:w> \times <nat:472> + <nat:14> \times <var:P> + <var:B> \times <nat:214> + <nat:60> \times <var:F> + <nat:323> $ is odd from the knowledge the sum $ <var:F> \cdot <nat:60> + <nat:472> \cdot <var:w> + <nat:214> \cdot <var:B> + <nat:14> \cdot <var:P> $ is clearly even . Take note the addition between even whole numbers concurrently and an even natural is guaranteed to be in itself an even natural number . Likewise , the terms $ <nat:60> \cdot <var:F> $ , $ <nat:472> \cdot <var:w> $ , $ <nat:214> \cdot <var:B> $ , and moreover $ <nat:14> \cdot <var:P> $ are known as even integers . This fact holds as a consequence that taking the product of an even number in $ \mathbb{N} $ and any integer will be an even number in $ \mathbb{Z}^+ $ and moreover the positive integers $ <nat:60> $ , $ <nat:472> $ , $ <nat:214> $ , as well as $ <nat:14> $ are known as even whole numbers . and likewise because taking the product of an even number and a natural is guaranteed to be an even number in $ \mathbb{N} $ . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:F> <var:P> <var:B> <var:w> : nat , Nat . odd ( <nat:472> * <var:w> + <nat:14> * <var:P> + <nat:60> * <var:F> + <nat:214> * <var:B> + <nat:323> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:60> = true ) . { auto . } assert ( <genH> : Nat . even <nat:472> = true ) . { auto . } assert ( <genH> : Nat . even <nat:214> = true ) . { auto . } assert ( <genH> : Nat . even <nat:14> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:60> * <var:F> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:472> * <var:w> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:214> * <var:B> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:14> * <var:P> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:472> * <var:w> + <nat:14> * <var:P> + <nat:60> * <var:F> + <nat:214> * <var:B> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . auto . Qed . 