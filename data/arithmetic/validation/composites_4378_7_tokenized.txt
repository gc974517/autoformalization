\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \newtheorem{definition}{Definition} \begin{document} \begin{definition} Assume $ <var:z> $ , $ <var:G> $ , $ <var:M> $ , $ <var:R> $ , $ <var:v> $ , $ <var:Q> $ , $ <var:k> $ are numbers . Take that some $ <var:N> $ will be a <def:seven-composite> number when $ <var:M> \cdot <var:R> \cdot <var:k> \cdot <var:G> \cdot <var:z> \cdot <var:Q> \cdot <var:v> = <var:N> $ plus larger than or equal to <nat:2> . \end{definition} \begin{theorem} $ <nat:604800> = <var:N> $ is a <def:seven-composite> natural number . \end{theorem} \begin{proof} Recall <nat:604800> is a <def:seven-composite> positive integer with the condition it is the product of natural numbers $ <var:M> $ , $ <var:G> $ , $ <var:z> $ , $ <var:k> $ , $ <var:Q> $ , $ <var:R> $ , and $ <var:v> $ so that $ <var:v> $ , $ <var:G> $ , $ <var:R> $ , $ <var:k> $ , $ <var:z> $ , $ <var:M> $ , $ <var:Q> \geq <nat:2> $ . Note that $ <nat:9> $ , $ <nat:6> $ , $ <nat:8> $ , $ <nat:5> $ , $ <nat:4> $ , $ <nat:10> $ , and $ <nat:7> $ are greater than or equivalent to <nat:2> . Also notice additionally $ <nat:604800> = <var:z> \cdot <var:v> \cdot <var:Q> \cdot <var:G> \cdot <var:R> \cdot <var:M> \cdot <var:k> $ hints $ <var:Q> = <nat:7> $ , $ <var:R> = <nat:5> $ , $ <var:M> = <nat:10> $ , $ <var:z> = <nat:9> $ , $ <var:k> = <nat:6> $ , $ <var:v> = <nat:8> $ , and $ <var:G> = <nat:4> $ . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:seven-composite> ( <var:N> : nat ) := exists <var:z> <var:G> <var:M> <var:R> <var:v> <var:Q> <var:k> : nat , ( <var:M> * <var:R> * <var:k> * <var:G> * <var:z> * <var:Q> * <var:v> = <var:N> ) /\ ( <var:z> >= <nat:2> ) /\ ( <var:G> >= <nat:2> ) /\ ( <var:M> >= <nat:2> ) /\ ( <var:R> >= <nat:2> ) /\ ( <var:v> >= <nat:2> ) /\ ( <var:Q> >= <nat:2> ) /\ ( <var:k> >= <nat:2> ) . Theorem <genP:1> : <def:seven-composite> <nat:604800> . Proof . unfold <def:seven-composite> . assert ( <genH> : <nat:9> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:6> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:8> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:5> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:4> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:10> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:7> >= <nat:2> ) . { lia . } exists <nat:9> . exists <nat:4> . exists <nat:10> . exists <nat:5> . exists <nat:8> . exists <nat:7> . exists <nat:6> . repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 