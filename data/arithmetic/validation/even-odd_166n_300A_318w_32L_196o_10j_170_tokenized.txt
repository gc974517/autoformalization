\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:166> * <var:n> + <var:A> * <nat:300> + <nat:318> * <var:w> + <nat:170> + <var:L> * <nat:32> + <var:o> * <nat:196> + <nat:10> * <var:j> $ must be even using any terms $ <var:L> $ , $ <var:j> $ , $ <var:A> $ , $ <var:w> $ , $ <var:n> $ , and $ <var:o> $ . \end{theorem} \begin{proof} Notice that the products $ <nat:196> \times <var:o> $ , $ <nat:10> \times <var:j> $ , plus $ <var:L> \times <nat:32> $ will be even integers since multiplying between an even whole number with any natural number is even . On top of this , take note the terms $ <nat:166> \times <var:n> $ as well as $ <var:w> \times <nat:318> $ are obviously even . Recall the pair $ <nat:300> \times <var:A> $ is clearly an even number in $ \mathbb{N} $ . This fact is proven because the multiplication of an even element of $ \mathbb{N} $ with an arbitrary integer is guaranteed to be even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:L> <var:j> <var:A> <var:w> <var:n> <var:o> : nat , Nat . even ( <nat:166> * <var:n> + <nat:300> * <var:A> + <nat:318> * <var:w> + <nat:32> * <var:L> + <nat:196> * <var:o> + <nat:10> * <var:j> + <nat:170> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:196> * <var:o> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:10> * <var:j> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:32> * <var:L> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:166> * <var:n> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:318> * <var:w> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:300> * <var:A> ) = true ) . { rewrite Nat . even_mul . auto . } repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 