\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:374> * <var:m> + <nat:477> + <nat:60> * <var:p> + <nat:212> * <var:r> + <nat:30> * <var:R> + <nat:148> * <var:y> + <var:N> * <nat:382> + <nat:4> * <var:E> $ will be odd . \end{theorem} \begin{proof} The whole numbers $ <nat:374> $ , $ <nat:60> $ , $ <nat:212> $ , $ <nat:30> $ , $ <nat:148> $ , $ <nat:382> $ , and likewise $ <nat:4> $ must be even integers . As a consequence , the terms $ <var:m> \cdot <nat:374> $ , $ <nat:60> \cdot <var:p> $ , $ <nat:212> \cdot <var:r> $ , $ <var:R> \cdot <nat:30> $ , $ <var:y> \cdot <nat:148> $ , $ <var:N> \cdot <nat:382> $ , and likewise $ <nat:4> \cdot <var:E> $ is guaranteed to be even also . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:m> <var:p> <var:r> <var:R> <var:y> <var:N> <var:E> : nat , Nat . odd ( <nat:374> * <var:m> + <nat:60> * <var:p> + <nat:212> * <var:r> + <nat:30> * <var:R> + <nat:148> * <var:y> + <nat:382> * <var:N> + <nat:4> * <var:E> + <nat:477> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:374> = true ) . { auto . } assert ( <genH> : Nat . even <nat:60> = true ) . { auto . } assert ( <genH> : Nat . even <nat:212> = true ) . { auto . } assert ( <genH> : Nat . even <nat:30> = true ) . { auto . } assert ( <genH> : Nat . even <nat:148> = true ) . { auto . } assert ( <genH> : Nat . even <nat:382> = true ) . { auto . } assert ( <genH> : Nat . even <nat:4> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:374> * <var:m> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:60> * <var:p> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:212> * <var:r> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:30> * <var:R> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:148> * <var:y> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:382> * <var:N> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:4> * <var:E> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 