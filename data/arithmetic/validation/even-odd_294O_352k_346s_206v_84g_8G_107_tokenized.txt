\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:107> + <nat:352> <var:k> + <var:s> <nat:346> + <var:G> <nat:8> + <nat:294> <var:O> + <var:g> <nat:84> + <var:v> <nat:206> $ is odd . \end{theorem} \begin{proof} We use the knowledge that the expression $ <nat:294> \times <var:O> + <nat:352> \times <var:k> + <nat:346> \times <var:s> + <var:v> \times <nat:206> + <nat:84> \times <var:g> + <var:G> \times <nat:8> $ is known to be even . Notice the terms $ <var:v> \times <nat:206> $ , $ <var:s> \times <nat:346> $ , and also $ <var:G> \times <nat:8> $ are guaranteed to be even naturals . The product $ <var:O> \times <nat:294> $ is trivially an even element of $ \mathbb{Z}^+ $ since the multiplication of an even element of $ \mathbb{N} $ and any element of $ \mathbb{N} $ is even . The product $ <nat:84> \times <var:g> $ is obviously an even integer by reason that the multiplication between an even element of $ \mathbb{Z}^+ $ and a natural is guaranteed to be even . Building on , take note the pair $ <var:k> \times <nat:352> $ is obviously even . It can be verified that the lemma is proven . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:k> <var:s> <var:G> <var:O> <var:g> <var:v> : nat , Nat . odd ( <nat:352> * <var:k> + <nat:346> * <var:s> + <nat:8> * <var:G> + <nat:294> * <var:O> + <nat:84> * <var:g> + <nat:206> * <var:v> + <nat:107> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:206> * <var:v> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:346> * <var:s> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:8> * <var:G> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:294> * <var:O> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:84> * <var:g> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:352> * <var:k> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:352> * <var:k> + <nat:346> * <var:s> + <nat:8> * <var:G> + <nat:294> * <var:O> + <nat:84> * <var:g> + <nat:206> * <var:v> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . auto . Qed . 