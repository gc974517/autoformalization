\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:z> \times <nat:178> + <nat:176> \times <var:w> + <nat:410> \times <var:P> + <nat:408> \times <var:N> + <var:g> \times <nat:450> + <var:k> \times <nat:308> + <nat:471> $ is odd . \end{theorem} \begin{proof} Recall that the products $ <var:P> \times <nat:410> $ additionally $ <var:z> \times <nat:178> $ are known to be even . This fact is true by reason that the product of an even number in $ \mathbb{Z}^+ $ with an arbitrary positive integer is even . Further , recall that the terms $ <var:k> \times <nat:308> $ in addition to $ <nat:408> \times <var:N> $ are trivially even . Furthermore , the product $ <nat:450> \times <var:g> $ is guaranteed to be an even element of $ \mathbb{Z}^+ $ . This claim must be true from the fact the product between an even element of $ \mathbb{N} $ with some element of $ \mathbb{Z}^+ $ is guaranteed to be an even integer . Take note that the product $ <nat:176> \times <var:w> $ is known to be an even integer since multiplying between an even natural number and any number is guaranteed to be in itself an even number in $ \mathbb{N} $ . We justify the formula $ <var:k> \times <nat:308> + <nat:408> \times <var:N> + <var:P> \times <nat:410> + <nat:471> + <var:z> \times <nat:178> + <var:w> \times <nat:176> + <var:g> \times <nat:450> $ is odd . See $ <nat:471> $ is an odd number . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:z> <var:w> <var:P> <var:N> <var:g> <var:k> : nat , Nat . odd ( <nat:178> * <var:z> + <nat:176> * <var:w> + <nat:410> * <var:P> + <nat:408> * <var:N> + <nat:450> * <var:g> + <nat:308> * <var:k> + <nat:471> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:410> * <var:P> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:178> * <var:z> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:308> * <var:k> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:408> * <var:N> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:450> * <var:g> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:176> * <var:w> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . odd <nat:471> = true ) . { auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 