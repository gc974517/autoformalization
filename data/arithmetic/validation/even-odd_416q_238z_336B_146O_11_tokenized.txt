\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:q> * <nat:416> + <nat:11> + <nat:336> * <var:B> + <nat:146> * <var:O> + <var:z> * <nat:238> $ is guaranteed to be odd . \end{theorem} \begin{proof} We show this proposition is proven . $ <nat:416> \times <var:q> $ is obviously an even number in $ \mathbb{N} $ . This claim is proven by reason that taking the product of an even whole number and an arbitrary element of $ \mathbb{N} $ must be even , which is true because the whole number $ <nat:416> $ is known as trivially an even element of $ \mathbb{Z}^+ $ . On top of this , the term $ <nat:238> \times <var:z> $ is an even whole number . This claim is true as a consequence that taking the product between an even element of $ \mathbb{N} $ with a natural is even . This claim holds from the fact the number $ <nat:238> $ is guaranteed to be an even natural number . The number $ <nat:336> $ is even . So , $ <var:B> \times <nat:336> $ is even in addition . Recall the whole number $ <nat:146> $ is trivially an even integer . Hence , $ <var:O> \times <nat:146> $ is even additionally . The summing of even naturals collectively with an odd element of $ \mathbb{Z}^+ $ is an odd element of $ \mathbb{Z}^+ $ . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:q> <var:B> <var:O> <var:z> : nat , Nat . odd ( <nat:416> * <var:q> + <nat:336> * <var:B> + <nat:146> * <var:O> + <nat:238> * <var:z> + <nat:11> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:416> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:416> * <var:q> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:238> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:238> * <var:z> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:336> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:336> * <var:B> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:146> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:146> * <var:O> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 