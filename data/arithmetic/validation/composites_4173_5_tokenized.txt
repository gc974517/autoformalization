\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \newtheorem{definition}{Definition} \begin{document} \begin{definition} Allow $ <var:W> $ , $ <var:G> $ , $ <var:b> $ , $ <var:U> $ , $ <var:T> $ are whole numbers satisfying the condition that $ <var:T> $ , $ <var:G> $ , $ <var:W> $ , $ <var:b> $ , and $ <var:U> > <nat:1> $ . Define that $ <var:P> \in \mathbb{Z}^+ $ is named a <def:five-composite> positive integer when $ <var:P> = <var:b> * <var:G> * <var:T> * <var:W> * <var:U> $ . \end{definition} \begin{theorem} The positive integer <nat:7920> is a <def:five-composite> positive integer . \end{theorem} \begin{proof} Let $ <var:T> = <nat:11> $ , $ <var:b> = <nat:3> $ , $ <var:G> = <nat:4> $ , $ <var:W> = <nat:10> $ and $ <var:U> = <nat:6> $ . We verify <nat:7920> is a <def:five-composite> natural number for $ <var:G> = <nat:4> $ , $ <var:b> = <nat:3> $ , $ <var:W> = <nat:10> $ , $ <var:T> = <nat:11> $ and $ <var:U> = <nat:6> > <nat:1> $ . Therefore , <nat:7920> is the product between $ <var:W> $ , $ <var:U> $ , $ <var:T> $ , $ <var:G> $ and $ <var:b> \in \mathbb{N} $ is validated . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:five-composite> ( <var:P> : nat ) := exists <var:W> <var:G> <var:b> <var:U> <var:T> : nat , ( <var:T> > <nat:1> ) /\ ( <var:G> > <nat:1> ) /\ ( <var:W> > <nat:1> ) /\ ( <var:b> > <nat:1> ) /\ ( <var:U> > <nat:1> ) /\ ( <var:P> = <var:b> * <var:G> * <var:T> * <var:W> * <var:U> ) . Theorem <genP:1> : <def:five-composite> <nat:7920> . Proof . unfold <def:five-composite> . exists <nat:10> . exists <nat:4> . exists <nat:3> . exists <nat:6> . exists <nat:11> . assert ( <genH> : <nat:4> > <nat:1> ) . { lia . } assert ( <genH> : <nat:3> > <nat:1> ) . { lia . } assert ( <genH> : <nat:10> > <nat:1> ) . { lia . } assert ( <genH> : <nat:11> > <nat:1> ) . { lia . } assert ( <genH> : <nat:6> > <nat:1> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 