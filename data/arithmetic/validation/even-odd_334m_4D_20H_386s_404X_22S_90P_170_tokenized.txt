\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:s> \cdot <nat:386> + <nat:90> \cdot <var:P> + <nat:334> \cdot <var:m> + <nat:22> \cdot <var:S> + <var:X> \cdot <nat:404> + <nat:170> + <var:H> \cdot <nat:20> + <nat:4> \cdot <var:D> $ will be even . \end{theorem} \begin{proof} See that $ <nat:170> $ is guaranteed to be even . It can be demonstrated that the expression $ <var:m> * <nat:334> + <nat:4> * <var:D> + <var:H> * <nat:20> + <nat:386> * <var:s> + <var:X> * <nat:404> + <nat:22> * <var:S> + <nat:170> + <nat:90> * <var:P> $ is even . The pairs $ <nat:334> \times <var:m> $ , $ <var:D> \times <nat:4> $ , $ <var:H> \times <nat:20> $ , $ <nat:386> \times <var:s> $ , $ <nat:404> \times <var:X> $ , $ <nat:22> \times <var:S> $ , and likewise $ <var:P> \times <nat:90> $ are known as even . This claim is proven since the whole numbers $ <nat:334> $ , $ <nat:4> $ , $ <nat:20> $ , $ <nat:386> $ , $ <nat:404> $ , $ <nat:22> $ , as well as $ <nat:90> $ will be even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:s> <var:P> <var:m> <var:S> <var:X> <var:H> <var:D> : nat , Nat . even ( <nat:386> * <var:s> + <nat:90> * <var:P> + <nat:334> * <var:m> + <nat:22> * <var:S> + <nat:404> * <var:X> + <nat:20> * <var:H> + <nat:4> * <var:D> + <nat:170> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:170> = true ) . { auto . } assert ( <genH> : Nat . even <nat:334> = true ) . { auto . } assert ( <genH> : Nat . even <nat:4> = true ) . { auto . } assert ( <genH> : Nat . even <nat:20> = true ) . { auto . } assert ( <genH> : Nat . even <nat:386> = true ) . { auto . } assert ( <genH> : Nat . even <nat:404> = true ) . { auto . } assert ( <genH> : Nat . even <nat:22> = true ) . { auto . } assert ( <genH> : Nat . even <nat:90> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:334> * <var:m> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:4> * <var:D> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:20> * <var:H> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:386> * <var:s> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:404> * <var:X> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:22> * <var:S> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:90> * <var:P> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 