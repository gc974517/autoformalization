\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:q> * <nat:24> + <nat:377> + <var:G> * <nat:128> + <nat:220> * <var:l> + <var:L> * <nat:380> $ is guaranteed to be odd with natural numbers $ <var:G> $ , $ <var:L> $ , $ <var:q> $ , and $ <var:l> $ . \end{theorem} \begin{proof} The adding of even positive integers successively and an odd positive integer must be an odd number in $ \mathbb{N} $ . Therefore , $ <nat:220> \cdot <var:l> + <nat:128> \cdot <var:G> + <var:q> \cdot <nat:24> + <nat:377> + <nat:380> \cdot <var:L> $ is guaranteed to be odd . Notice $ <nat:377> $ is obviously odd . The terms $ <nat:380> \cdot <var:L> $ , $ <var:G> \cdot <nat:128> $ , as well as $ <nat:24> \cdot <var:q> $ are known as even since the numbers $ <nat:380> $ , $ <nat:128> $ , and $ <nat:24> $ are guaranteed to be even . What's more , the whole number $ <nat:220> $ is known to be an even natural . Hence , the term $ <nat:220> \cdot <var:l> $ is guaranteed to be even too . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:G> <var:L> <var:q> <var:l> : nat , Nat . odd ( <nat:24> * <var:q> + <nat:128> * <var:G> + <nat:220> * <var:l> + <nat:380> * <var:L> + <nat:377> ) = true . Proof . intros . rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . assert ( <genH> : Nat . odd <nat:377> = true ) . { auto . } assert ( <genH> : Nat . even <nat:380> = true ) . { auto . } assert ( <genH> : Nat . even <nat:128> = true ) . { auto . } assert ( <genH> : Nat . even <nat:24> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:380> * <var:L> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:128> * <var:G> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:24> * <var:q> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:220> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:220> * <var:l> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 