\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:f> \cdot <nat:398> + <nat:409> + <nat:264> \cdot <var:F> + <var:m> \cdot <nat:272> + <nat:440> \cdot <var:g> + <nat:430> \cdot <var:e> + <nat:400> \cdot <var:a> $ will be odd with all integers $ <var:g> $ , $ <var:f> $ , $ <var:m> $ , $ <var:e> $ , $ <var:F> $ , and $ <var:a> $ . \end{theorem} \begin{proof} We know $ <nat:409> $ is odd . It can be justified that the main result is true . The sum $ <nat:272> \cdot <var:m> + <nat:440> \cdot <var:g> + <var:F> \cdot <nat:264> + <var:a> \cdot <nat:400> + <var:e> \cdot <nat:430> + <var:f> \cdot <nat:398> $ is obviously even . The integers $ <nat:440> $ , $ <nat:400> $ , plus $ <nat:264> $ are clearly even Further , recall that the integers $ <nat:430> $ plus $ <nat:398> $ are even elements of $ \mathbb{Z}^+ $ Further , notice the leading term $ <nat:272> $ is trivially even \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:g> <var:f> <var:m> <var:e> <var:F> <var:a> : nat , Nat . odd ( <nat:398> * <var:f> + <nat:264> * <var:F> + <nat:272> * <var:m> + <nat:440> * <var:g> + <nat:430> * <var:e> + <nat:400> * <var:a> + <nat:409> ) = true . Proof . intros . assert ( <genH> : Nat . odd <nat:409> = true ) . { auto . } assert ( <genH> : Nat . even <nat:440> = true ) . { auto . } assert ( <genH> : Nat . even <nat:400> = true ) . { auto . } assert ( <genH> : Nat . even <nat:264> = true ) . { auto . } assert ( <genH> : Nat . even <nat:430> = true ) . { auto . } assert ( <genH> : Nat . even <nat:398> = true ) . { auto . } assert ( <genH> : Nat . even <nat:272> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:398> * <var:f> + <nat:264> * <var:F> + <nat:272> * <var:m> + <nat:440> * <var:g> + <nat:430> * <var:e> + <nat:400> * <var:a> ) = true ) . { repeat rewrite Nat . even_add . repeat rewrite Nat . even_mul . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . rewrite <genH> . auto . Qed . 