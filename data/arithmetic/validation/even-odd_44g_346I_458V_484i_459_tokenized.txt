\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Given some $ <var:i> $ , $ <var:g> $ , $ <var:I> $ , and $ <var:V> \in \mathbb{N} $ the summation $ <var:g> \times <nat:44> + <nat:346> \times <var:I> + <var:V> \times <nat:458> + <var:i> \times <nat:484> + <nat:459> $ must be odd . \end{theorem} \begin{proof} Recall the positive integer $ <nat:44> $ is clearly even . Thus , $ <var:g> \cdot <nat:44> $ will be even additionally . The pair $ <var:I> \cdot <nat:346> $ is known to be even since the coefficient $ <nat:346> $ is obviously even . On top of this , the pair $ <nat:458> \cdot <var:V> $ is trivially even . This claim is true from the knowledge the natural number $ <nat:458> $ is clearly clearly an even number . In addition , observe the term $ <var:i> \cdot <nat:484> $ is known as even from the fact the natural number $ <nat:484> $ is even . The totaling between an even element of $ \mathbb{Z}^+ $ with an odd number in $ \mathbb{N} $ is instrinsically an odd integer . So , the theorem must be true . Remember $ <nat:459> $ is known to be an odd element of $ \mathbb{N} $ . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:i> <var:g> <var:I> <var:V> : nat , Nat . odd ( <nat:44> * <var:g> + <nat:346> * <var:I> + <nat:458> * <var:V> + <nat:484> * <var:i> + <nat:459> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:44> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:44> * <var:g> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:346> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:346> * <var:I> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:458> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:458> * <var:V> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:484> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:484> * <var:i> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . assert ( <genH> : Nat . odd <nat:459> = true ) . { auto . } rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 