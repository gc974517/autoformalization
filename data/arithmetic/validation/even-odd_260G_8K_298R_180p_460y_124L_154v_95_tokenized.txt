\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Taking some terms $ <var:G> $ , $ <var:L> $ , $ <var:v> $ , $ <var:p> $ , $ <var:R> $ , $ <var:y> $ , and $ <var:K> $ the expression $ <var:G> \cdot <nat:260> + <var:K> \cdot <nat:8> + <nat:298> \cdot <var:R> + <var:p> \cdot <nat:180> + <var:y> \cdot <nat:460> + <nat:95> + <var:L> \cdot <nat:124> + <nat:154> \cdot <var:v> $ is guaranteed to be odd . \end{theorem} \begin{proof} The integers $ <nat:154> $ , $ <nat:124> $ , $ <nat:8> $ , and moreover $ <nat:298> $ are known as even positive integers The number $ <nat:460> $ is guaranteed to be even Furthermore , observe the coefficient $ <nat:260> $ is obviously even Additionally , we know the coefficient $ <nat:180> $ is an even positive integer The summing between an even integer with an odd natural number is an odd natural number . Recall that $ <nat:95> $ is known to be odd . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:G> <var:L> <var:v> <var:p> <var:R> <var:y> <var:K> : nat , Nat . odd ( <nat:260> * <var:G> + <nat:8> * <var:K> + <nat:298> * <var:R> + <nat:180> * <var:p> + <nat:460> * <var:y> + <nat:124> * <var:L> + <nat:154> * <var:v> + <nat:95> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:154> = true ) . { auto . } assert ( <genH> : Nat . even <nat:124> = true ) . { auto . } assert ( <genH> : Nat . even <nat:8> = true ) . { auto . } assert ( <genH> : Nat . even <nat:298> = true ) . { auto . } assert ( <genH> : Nat . even <nat:460> = true ) . { auto . } assert ( <genH> : Nat . even <nat:260> = true ) . { auto . } assert ( <genH> : Nat . even <nat:180> = true ) . { auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . assert ( <genH> : Nat . odd <nat:95> = true ) . { auto . } repeat rewrite Nat . even_mul . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 