\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:198> \cdot <var:G> + <var:C> \cdot <nat:382> + <var:N> \cdot <nat:392> + <nat:80> \cdot <var:W> + <nat:348> \cdot <var:S> + <nat:132> + <var:z> \cdot <nat:230> + <var:P> \cdot <nat:210> + <nat:326> \cdot <var:K> $ will be even . \end{theorem} \begin{proof} Observe that the pairs $ <var:N> <nat:392> $ , $ <var:C> <nat:382> $ , $ <nat:230> <var:z> $ , as well as $ <var:G> <nat:198> $ are known to be even from the knowledge the product of an even number with an arbitrary positive integer must be an even integer . Adding on , the terms $ <var:W> <nat:80> $ plus $ <nat:348> <var:S> $ must be even whole numbers . $ <var:K> <nat:326> $ is obviously an even natural . This claim must be true as a consequence that multiplying between an even integer and a whole number is guaranteed to be even . Likewise , observe the pair $ <nat:210> <var:P> $ is even . This fact holds as a consequence that taking the product of an even number with some whole number is guaranteed to be even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:G> <var:C> <var:N> <var:W> <var:S> <var:z> <var:P> <var:K> : nat , Nat . even ( <nat:198> * <var:G> + <nat:382> * <var:C> + <nat:392> * <var:N> + <nat:80> * <var:W> + <nat:348> * <var:S> + <nat:230> * <var:z> + <nat:210> * <var:P> + <nat:326> * <var:K> + <nat:132> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:392> * <var:N> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:382> * <var:C> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:230> * <var:z> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:198> * <var:G> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:80> * <var:W> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:348> * <var:S> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:326> * <var:K> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:210> * <var:P> ) = true ) . { rewrite Nat . even_mul . auto . } repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 