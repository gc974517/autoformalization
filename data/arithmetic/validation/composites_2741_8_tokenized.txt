\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} There are $ <var:t> $ , $ <var:z> $ , $ <var:y> $ , $ <var:s> $ , $ <var:d> $ , $ <var:I> $ , $ <var:V> $ and $ <var:W> \in \mathbb{N} $ so that $ <var:W> $ , $ <var:V> $ , $ <var:d> $ , $ <var:y> $ , $ <var:t> $ , $ <var:z> $ , $ <var:s> $ , and $ <var:I> $ more than <nat:1> as well as where the number <nat:1663200> is the multiplication between positive integers $ <var:t> $ , $ <var:z> $ , $ <var:y> $ , $ <var:s> $ , $ <var:d> $ , $ <var:I> $ , $ <var:V> $ , $ <var:W> \in \mathbb{N} $ . \end{theorem} \begin{proof} We justify the statement is true seeing that $ <nat:1663200> = <var:d> * <var:W> * <var:V> * <var:s> * <var:I> * <var:y> * <var:z> * <var:t> $ gives $ <var:W> = <nat:12> $ , $ <var:s> = <nat:5> $ , $ <var:d> = <nat:2> $ , $ <var:y> = <nat:11> $ , $ <var:I> = <nat:7> $ , $ <var:z> = <nat:10> $ , $ <var:t> = <nat:3> $ , and $ <var:V> = <nat:6> $ as well as because $ <nat:11> $ , $ <nat:3> $ , $ <nat:2> $ , $ <nat:10> $ , $ <nat:5> $ , $ <nat:12> $ , $ <nat:7> $ , $ <nat:6> > <nat:1> $ . \end{proof} \end{document} 
~
Require Import Lia . Theorem <genP:1> : exists <var:t> <var:z> <var:y> <var:s> <var:d> <var:I> <var:V> <var:W> : nat , ( <var:W> > <nat:1> ) /\ ( <var:V> > <nat:1> ) /\ ( <var:d> > <nat:1> ) /\ ( <var:y> > <nat:1> ) /\ ( <var:t> > <nat:1> ) /\ ( <var:z> > <nat:1> ) /\ ( <var:s> > <nat:1> ) /\ ( <var:I> > <nat:1> ) /\ ( <nat:1663200> = <var:t> * <var:z> * <var:y> * <var:s> * <var:d> * <var:I> * <var:V> * <var:W> ) . Proof . exists <nat:3> . exists <nat:10> . exists <nat:11> . exists <nat:5> . exists <nat:2> . exists <nat:7> . exists <nat:6> . exists <nat:12> . assert ( <genH> : <nat:11> > <nat:1> ) . { lia . } assert ( <genH> : <nat:3> > <nat:1> ) . { lia . } assert ( <genH> : <nat:2> > <nat:1> ) . { lia . } assert ( <genH> : <nat:10> > <nat:1> ) . { lia . } assert ( <genH> : <nat:5> > <nat:1> ) . { lia . } assert ( <genH> : <nat:12> > <nat:1> ) . { lia . } assert ( <genH> : <nat:7> > <nat:1> ) . { lia . } assert ( <genH> : <nat:6> > <nat:1> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 