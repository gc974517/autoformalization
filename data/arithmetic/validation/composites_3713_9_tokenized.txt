\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Claim that with the condition that there are $ <var:h> $ , $ <var:Y> $ , $ <var:x> $ , $ <var:z> $ , $ <var:E> $ , $ <var:d> $ , $ <var:Q> $ , $ <var:Z> $ , $ <var:c> \in \mathbb{Z}^+ $ then we say that some $ <var:P> $ will be called a <def:nine-composite> whole number assuming $ <var:P> = <var:z> * <var:Q> * <var:Z> * <var:E> * <var:x> * <var:d> * <var:Y> * <var:h> * <var:c> $ and factors are more than or equivalent to <nat:2> . Thus <nat:6842880> is a <def:nine-composite> number . \end{theorem} \begin{proof} Allow $ <var:x> = <nat:12> $ , $ <var:E> = <nat:4> $ , $ <var:h> = <nat:3> $ , $ <var:Y> = <nat:5> $ , $ <var:Q> = <nat:2> $ , $ <var:d> = <nat:9> $ , $ <var:c> = <nat:6> $ , $ <var:Z> = <nat:11> $ , and $ <var:z> = <nat:8> $ . We show the claim is true because By reason of $ <nat:11> $ , $ <nat:4> $ , $ <nat:2> $ , $ <nat:6> $ , $ <nat:5> $ , $ <nat:3> $ , $ <nat:9> $ , $ <nat:12> $ , $ <nat:8> \geq <nat:2> $ . Thus , $ <nat:6842880> = <var:E> * <var:h> * <var:x> * <var:c> * <var:Q> * <var:z> * <var:Y> * <var:Z> * <var:d> $ as well as $ <var:Z> $ , $ <var:Q> $ , $ <var:z> $ , $ <var:Y> $ , $ <var:d> $ , $ <var:h> $ , $ <var:x> $ , $ <var:c> $ , $ <var:E> \geq <nat:2> $ is proven . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:nine-composite> ( <var:P> : nat ) := exists <var:h> <var:Y> <var:x> <var:z> <var:E> <var:d> <var:Q> <var:Z> <var:c> : nat , ( <var:P> = <var:z> * <var:Q> * <var:Z> * <var:E> * <var:x> * <var:d> * <var:Y> * <var:h> * <var:c> ) /\ ( <var:h> >= <nat:2> ) /\ ( <var:Y> >= <nat:2> ) /\ ( <var:x> >= <nat:2> ) /\ ( <var:z> >= <nat:2> ) /\ ( <var:E> >= <nat:2> ) /\ ( <var:d> >= <nat:2> ) /\ ( <var:Q> >= <nat:2> ) /\ ( <var:Z> >= <nat:2> ) /\ ( <var:c> >= <nat:2> ) . Theorem <genP:1> : <def:nine-composite> <nat:6842880> . Proof . unfold <def:nine-composite> . exists <nat:3> . exists <nat:5> . exists <nat:12> . exists <nat:8> . exists <nat:4> . exists <nat:9> . exists <nat:2> . exists <nat:11> . exists <nat:6> . assert ( <genH> : <nat:11> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:4> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:2> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:6> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:5> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:3> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:9> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:12> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:8> >= <nat:2> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 