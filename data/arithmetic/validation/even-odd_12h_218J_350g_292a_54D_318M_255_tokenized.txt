\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:255> + <nat:218> * <var:J> + <nat:54> * <var:D> + <var:h> * <nat:12> + <nat:318> * <var:M> + <nat:350> * <var:g> + <var:a> * <nat:292> $ is guaranteed to be odd . \end{theorem} \begin{proof} It can be checked that $ <var:J> \cdot <nat:218> + <nat:54> \cdot <var:D> + <nat:255> + <nat:350> \cdot <var:g> + <nat:292> \cdot <var:a> + <var:M> \cdot <nat:318> + <var:h> \cdot <nat:12> $ is guaranteed to be odd . See that the summation $ <nat:12> * <var:h> + <nat:255> + <var:M> * <nat:318> + <nat:218> * <var:J> + <var:a> * <nat:292> + <var:D> * <nat:54> + <var:g> * <nat:350> $ is obviously odd from the fact $ <nat:12> \cdot <var:h> + <var:J> \cdot <nat:218> + <var:g> \cdot <nat:350> + <var:a> \cdot <nat:292> + <nat:54> \cdot <var:D> + <var:M> \cdot <nat:318> $ is known to be even . Observe that the leading terms $ <nat:12> $ , $ <nat:218> $ , $ <nat:350> $ , $ <nat:292> $ , $ <nat:54> $ , $ <nat:318> $ , must be even . Accordingly , the products $ <nat:12> <var:h> $ , $ <nat:218> <var:J> $ , $ <nat:350> <var:g> $ , $ <var:a> <nat:292> $ , $ <nat:54> <var:D> $ , $ <var:M> <nat:318> $ , will be even at the same time . The totaling of even numbers collectively with an odd number in $ \mathbb{Z}^+ $ is odd . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:J> <var:D> <var:h> <var:M> <var:g> <var:a> : nat , Nat . odd ( <nat:218> * <var:J> + <nat:54> * <var:D> + <nat:12> * <var:h> + <nat:318> * <var:M> + <nat:350> * <var:g> + <nat:292> * <var:a> + <nat:255> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:12> = true ) . { auto . } assert ( <genH> : Nat . even <nat:218> = true ) . { auto . } assert ( <genH> : Nat . even <nat:350> = true ) . { auto . } assert ( <genH> : Nat . even <nat:292> = true ) . { auto . } assert ( <genH> : Nat . even <nat:54> = true ) . { auto . } assert ( <genH> : Nat . even <nat:318> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:12> * <var:h> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:218> * <var:J> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:350> * <var:g> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:292> * <var:a> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:54> * <var:D> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:318> * <var:M> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:218> * <var:J> + <nat:54> * <var:D> + <nat:12> * <var:h> + <nat:318> * <var:M> + <nat:350> * <var:g> + <nat:292> * <var:a> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . auto . Qed . 