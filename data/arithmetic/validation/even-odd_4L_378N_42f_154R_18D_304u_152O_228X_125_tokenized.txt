\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:f> * <nat:42> + <nat:18> * <var:D> + <var:X> * <nat:228> + <nat:304> * <var:u> + <nat:152> * <var:O> + <nat:4> * <var:L> + <var:R> * <nat:154> + <nat:125> + <var:N> * <nat:378> $ must be odd . \end{theorem} \begin{proof} Take note that $ <nat:125> $ is trivially odd . The adding of even numbers in $ \mathbb{Z}^+ $ successively with an odd whole number is odd . For this reason , $ <var:L> \cdot <nat:4> + <var:N> \cdot <nat:378> + <var:f> \cdot <nat:42> + <nat:154> \cdot <var:R> + <var:D> \cdot <nat:18> + <var:u> \cdot <nat:304> + <var:O> \cdot <nat:152> + <var:X> \cdot <nat:228> + <nat:125> $ itself must be odd . The product $ <nat:152> <var:O> $ is trivially even . This is proven from the fact multiplying of an even number in $ \mathbb{N} $ and a positive integer must be even . The products $ <nat:18> <var:D> $ , $ <nat:304> <var:u> $ , $ <var:R> <nat:154> $ , $ <var:L> <nat:4> $ , $ <nat:228> <var:X> $ , and likewise $ <nat:378> <var:N> $ are clearly even positive integers . This fact must be true from the fact taking the product between an even whole number and any integer is an even natural . The product $ <nat:42> <var:f> $ is trivially even as a consequence that taking the product between an even number in $ \mathbb{Z}^+ $ and a number is guaranteed to be even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:f> <var:D> <var:X> <var:u> <var:O> <var:L> <var:R> <var:N> : nat , Nat . odd ( <nat:42> * <var:f> + <nat:18> * <var:D> + <nat:228> * <var:X> + <nat:304> * <var:u> + <nat:152> * <var:O> + <nat:4> * <var:L> + <nat:154> * <var:R> + <nat:378> * <var:N> + <nat:125> ) = true . Proof . intros . assert ( <genH> : Nat . odd <nat:125> = true ) . { auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . assert ( <genH> : Nat . even ( <nat:152> * <var:O> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:18> * <var:D> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:304> * <var:u> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:154> * <var:R> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:4> * <var:L> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:228> * <var:X> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:378> * <var:N> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:42> * <var:f> ) = true ) . { rewrite Nat . even_mul . auto . } rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 