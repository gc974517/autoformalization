\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:462> <var:R> + <var:F> <nat:324> + <var:j> <nat:228> + <nat:32> <var:C> + <var:r> <nat:374> + <nat:139> + <nat:388> <var:k> + <var:M> <nat:276> $ must be odd . \end{theorem} \begin{proof} See the products $ <var:R> <nat:462> $ , $ <nat:374> <var:r> $ , $ <var:M> <nat:276> $ , and also $ <var:j> <nat:228> $ are clearly even because the leading terms $ <nat:462> $ , $ <nat:374> $ , $ <nat:276> $ , and also $ <nat:228> $ are even naturals . Remember that the term $ <var:k> <nat:388> $ is known to be even . This must be true from the fact the integer $ <nat:388> $ is clearly fundamentally an even whole number . See the pair $ <var:F> <nat:324> $ is trivially an even number in $ \mathbb{Z}^+ $ because the positive integer $ <nat:324> $ is obviously by its very nature an even element of $ \mathbb{N} $ . Recall the coefficient $ <nat:32> $ is trivially even . Accordingly , the pair $ <nat:32> <var:C> $ is even in addition . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:R> <var:F> <var:j> <var:C> <var:r> <var:k> <var:M> : nat , Nat . odd ( <nat:462> * <var:R> + <nat:324> * <var:F> + <nat:228> * <var:j> + <nat:32> * <var:C> + <nat:374> * <var:r> + <nat:388> * <var:k> + <nat:276> * <var:M> + <nat:139> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:462> = true ) . { auto . } assert ( <genH> : Nat . even <nat:374> = true ) . { auto . } assert ( <genH> : Nat . even <nat:276> = true ) . { auto . } assert ( <genH> : Nat . even <nat:228> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:462> * <var:R> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:374> * <var:r> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:276> * <var:M> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:228> * <var:j> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:388> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:388> * <var:k> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:324> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:324> * <var:F> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:32> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:32> * <var:C> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 