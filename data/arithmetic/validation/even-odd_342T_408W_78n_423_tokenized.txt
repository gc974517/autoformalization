\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} With some unknowns $ <var:W> $ , $ <var:n> $ , and $ <var:T> $ the sum $ <nat:408> \times <var:W> + <nat:342> \times <var:T> + <nat:423> + <var:n> \times <nat:78> $ is odd . \end{theorem} \begin{proof} The addition between even positive integers and an odd element of $ \mathbb{N} $ is guaranteed to be odd . Take note that $ <nat:423> $ is guaranteed to be odd . We justify that the formula $ <nat:342> * <var:T> + <nat:78> * <var:n> + <nat:423> + <var:W> * <nat:408> $ is clearly odd because $ <var:T> * <nat:342> + <var:n> * <nat:78> + <var:W> * <nat:408> $ is obviously even . In addition , remember the products $ <var:T> \cdot <nat:342> $ , $ <nat:78> \cdot <var:n> $ , as well as $ <var:W> \cdot <nat:408> $ are obviously even elements of $ \mathbb{Z}^+ $ as a consequence that the multiplication between an even element of $ \mathbb{N} $ with some element of $ \mathbb{N} $ is guaranteed to be an even positive integer and the integers $ <nat:342> $ , $ <nat:78> $ , additionally $ <nat:408> $ are even . The sum $ <nat:342> * <var:T> + <var:W> * <nat:408> + <nat:78> * <var:n> $ is even from the knowledge the multiplication of even naturals with any whole number is even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:W> <var:n> <var:T> : nat , Nat . odd ( <nat:408> * <var:W> + <nat:342> * <var:T> + <nat:78> * <var:n> + <nat:423> ) = true . Proof . intros . rewrite Nat . odd_add . assert ( <genH> : Nat . odd <nat:423> = true ) . { auto . } assert ( <genH> : Nat . even <nat:342> = true ) . { auto . } assert ( <genH> : Nat . even <nat:78> = true ) . { auto . } assert ( <genH> : Nat . even <nat:408> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:342> * <var:T> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:78> * <var:n> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:408> * <var:W> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:408> * <var:W> + <nat:342> * <var:T> + <nat:78> * <var:n> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite <- Nat . negb_even . rewrite <genH> . rewrite <genH> . auto . Qed . 