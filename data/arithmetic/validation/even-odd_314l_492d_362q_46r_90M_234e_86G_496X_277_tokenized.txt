\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Assuming some natural terms $ <var:q> $ , $ <var:d> $ , $ <var:X> $ , $ <var:e> $ , $ <var:G> $ , $ <var:M> $ , $ <var:r> $ , and $ <var:l> $ $ <var:l> \times <nat:314> + <nat:492> \times <var:d> + <nat:362> \times <var:q> + <nat:46> \times <var:r> + <var:M> \times <nat:90> + <nat:234> \times <var:e> + <var:G> \times <nat:86> + <nat:277> + <var:X> \times <nat:496> $ will be odd . \end{theorem} \begin{proof} The pairs $ <nat:90> \times <var:M> $ , $ <var:l> \times <nat:314> $ , $ <nat:362> \times <var:q> $ , $ <nat:492> \times <var:d> $ , $ <var:X> \times <nat:496> $ , and also $ <nat:86> \times <var:G> $ are obviously even elements of $ \mathbb{Z}^+ $ . This fact is true from the fact the multiplication between an even element of $ \mathbb{Z}^+ $ and any natural number is guaranteed to be even . What's more , we know that $ <nat:46> \times <var:r> $ is trivially even by reason that multiplying between an even positive integer with any element of $ \mathbb{Z}^+ $ must be even . The term $ <var:e> \times <nat:234> $ is clearly even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:q> <var:d> <var:X> <var:e> <var:G> <var:M> <var:r> <var:l> : nat , Nat . odd ( <nat:314> * <var:l> + <nat:492> * <var:d> + <nat:362> * <var:q> + <nat:46> * <var:r> + <nat:90> * <var:M> + <nat:234> * <var:e> + <nat:86> * <var:G> + <nat:496> * <var:X> + <nat:277> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:90> * <var:M> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:314> * <var:l> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:362> * <var:q> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:492> * <var:d> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:496> * <var:X> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:86> * <var:G> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:46> * <var:r> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:234> * <var:e> ) = true ) . { rewrite Nat . even_mul . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 