\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} With every positive terms $ <var:C> $ , $ <var:J> $ , $ <var:g> $ , $ <var:c> $ , $ <var:q> $ , $ <var:L> $ , and $ <var:i> $ the summation $ <nat:302> \cdot <var:L> + <nat:495> + <nat:314> \cdot <var:i> + <var:g> \cdot <nat:234> + <var:c> \cdot <nat:238> + <var:J> \cdot <nat:370> + <var:C> \cdot <nat:248> + <var:q> \cdot <nat:6> $ will be odd . \end{theorem} \begin{proof} The term $ <var:C> \cdot <nat:248> $ is clearly an even element of $ \mathbb{Z}^+ $ . The products $ <nat:370> \cdot <var:J> $ additionally $ <nat:238> \cdot <var:c> $ are trivially even numbers . This claim must be true from the fact multiplying of an even integer and an arbitrary number in $ \mathbb{N} $ will be even . Recall the pairs $ <var:g> \cdot <nat:234> $ plus $ <var:L> \cdot <nat:302> $ are guaranteed to be even naturals . Furthermore , remember that the term $ <nat:6> \cdot <var:q> $ is guaranteed to be an even number . Furthermore , recall $ <nat:314> \cdot <var:i> $ is an even number . This fact holds by reason that the product between an even positive integer with an arbitrary number must be even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:C> <var:J> <var:g> <var:c> <var:q> <var:L> <var:i> : nat , Nat . odd ( <nat:302> * <var:L> + <nat:314> * <var:i> + <nat:234> * <var:g> + <nat:238> * <var:c> + <nat:370> * <var:J> + <nat:248> * <var:C> + <nat:6> * <var:q> + <nat:495> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:248> * <var:C> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:370> * <var:J> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:238> * <var:c> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:234> * <var:g> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:302> * <var:L> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:6> * <var:q> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:314> * <var:i> ) = true ) . { rewrite Nat . even_mul . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 