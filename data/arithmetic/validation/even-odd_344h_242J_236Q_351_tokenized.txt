\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Taking every whole numbers $ <var:J> $ , $ <var:h> $ , and $ <var:Q> $ the expression $ <nat:344> \times <var:h> + <nat:236> \times <var:Q> + <nat:351> + <nat:242> \times <var:J> $ is guaranteed to be odd . \end{theorem} \begin{proof} The addition between an even whole number with an odd positive integer must be an odd integer . Recall that $ <nat:351> $ is an odd natural . The claim is proven since $ <var:h> * <nat:344> + <var:Q> * <nat:236> + <var:J> * <nat:242> $ is clearly even , from the fact the addition between an even integer with an even element of $ \mathbb{Z}^+ $ is even . The coefficient $ <nat:344> $ is obviously an even element of $ \mathbb{N} $ . Hence , the product $ <nat:344> \times <var:h> $ must be even also . In addition to this , remember the product $ <var:J> \times <nat:242> $ is even . This fact is proven from the fact the multiplication of an even element of $ \mathbb{Z}^+ $ and any element of $ \mathbb{Z}^+ $ is even . This fact is proven since the leading term $ <nat:242> $ is known to be even . The term $ <var:Q> \times <nat:236> $ is known to be even . This fact is proven by reason that the integer $ <nat:236> $ is guaranteed to be an even whole number . and moreover because the multiplication between even numbers in $ \mathbb{N} $ and a whole number is even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:J> <var:h> <var:Q> : nat , Nat . odd ( <nat:344> * <var:h> + <nat:236> * <var:Q> + <nat:242> * <var:J> + <nat:351> ) = true . Proof . intros . rewrite Nat . odd_add . assert ( <genH> : Nat . odd <nat:351> = true ) . { auto . } assert ( <genH> : Nat . even <nat:344> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:344> * <var:h> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:242> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:242> * <var:J> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:236> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:236> * <var:Q> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:344> * <var:h> + <nat:236> * <var:Q> + <nat:242> * <var:J> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite <- Nat . negb_even . rewrite <genH> . rewrite <genH> . auto . Qed . 