\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \newtheorem{definition}{Definition} \begin{document} \begin{definition} We define that $ <var:u> $ is a <def:five-composite> whole number if and only if there are $ <var:E> $ , $ <var:w> $ , $ <var:c> $ , $ <var:b> $ , $ <var:S> \in \mathbb{Z}^+ $ where so that $ <var:E> $ , $ <var:c> $ , $ <var:S> $ , $ <var:b> $ , and $ <var:w> > <nat:1> $ as well as assuming $ <var:u> \in \mathbb{Z}^+ $ , $ <var:S> \times <var:w> \times <var:b> \times <var:c> \times <var:E> = <var:u> $ . \end{definition} \begin{theorem} The number <nat:1440> is a <def:five-composite> integer . \end{theorem} \begin{proof} We present $ <var:c> $ , $ <var:S> $ , $ <var:b> $ , $ <var:E> $ , and $ <var:w> > <nat:1> $ plus $ <var:c> \cdot <var:E> \cdot <var:b> \cdot <var:S> \cdot <var:w> = <nat:1440> $ . We demonstrate <nat:1440> is a <def:five-composite> integer seeing that $ <nat:1440> = <nat:2> \times <nat:3> \times <nat:4> \times <nat:5> \times <nat:12> = <var:E> \times <var:w> \times <var:S> \times <var:b> \times <var:c> $ and considering $ <nat:3> $ , $ <nat:5> $ , $ <nat:12> $ , $ <nat:4> $ , and $ <nat:2> $ are larger than <nat:1> . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:five-composite> ( <var:u> : nat ) := exists <var:E> <var:w> <var:c> <var:b> <var:S> : nat , ( <var:E> > <nat:1> ) /\ ( <var:c> > <nat:1> ) /\ ( <var:S> > <nat:1> ) /\ ( <var:b> > <nat:1> ) /\ ( <var:w> > <nat:1> ) /\ ( <var:S> * <var:w> * <var:b> * <var:c> * <var:E> = <var:u> ) . Theorem <genP:1> : <def:five-composite> <nat:1440> . Proof . unfold <def:five-composite> . exists <nat:2> . exists <nat:3> . exists <nat:12> . exists <nat:5> . exists <nat:4> . assert ( <genH> : <nat:3> > <nat:1> ) . { lia . } assert ( <genH> : <nat:5> > <nat:1> ) . { lia . } assert ( <genH> : <nat:12> > <nat:1> ) . { lia . } assert ( <genH> : <nat:4> > <nat:1> ) . { lia . } assert ( <genH> : <nat:2> > <nat:1> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 