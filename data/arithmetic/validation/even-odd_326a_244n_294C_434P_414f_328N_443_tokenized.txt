\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:414> \times <var:f> + <var:N> \times <nat:328> + <nat:443> + <var:C> \times <nat:294> + <var:P> \times <nat:434> + <var:n> \times <nat:244> + <var:a> \times <nat:326> $ must be odd . \end{theorem} \begin{proof} The claim holds since $ <nat:326> <var:a> + <nat:244> <var:n> + <nat:294> <var:C> + <var:P> <nat:434> + <var:f> <nat:414> + <var:N> <nat:328> $ is clearly even . The products $ <nat:326> <var:a> $ , $ <var:n> <nat:244> $ , $ <nat:294> <var:C> $ , $ <var:P> <nat:434> $ , $ <nat:414> <var:f> $ , additionally $ <nat:328> <var:N> $ are clearly even from the fact the natural numbers $ <nat:326> $ , $ <nat:244> $ , $ <nat:294> $ , $ <nat:434> $ , $ <nat:414> $ , additionally $ <nat:328> $ will be even numbers in $ \mathbb{Z}^+ $ . From the knowledge the summation of an even number in $ \mathbb{N} $ with even positive integers is even , additionally from the fact taking the product of an even element of $ \mathbb{N} $ and any number must be an even whole number . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:f> <var:N> <var:C> <var:P> <var:n> <var:a> : nat , Nat . odd ( <nat:414> * <var:f> + <nat:328> * <var:N> + <nat:294> * <var:C> + <nat:434> * <var:P> + <nat:244> * <var:n> + <nat:326> * <var:a> + <nat:443> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:326> = true ) . { auto . } assert ( <genH> : Nat . even <nat:244> = true ) . { auto . } assert ( <genH> : Nat . even <nat:294> = true ) . { auto . } assert ( <genH> : Nat . even <nat:434> = true ) . { auto . } assert ( <genH> : Nat . even <nat:414> = true ) . { auto . } assert ( <genH> : Nat . even <nat:328> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:326> * <var:a> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:244> * <var:n> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:294> * <var:C> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:434> * <var:P> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:414> * <var:f> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:328> * <var:N> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:414> * <var:f> + <nat:328> * <var:N> + <nat:294> * <var:C> + <nat:434> * <var:P> + <nat:244> * <var:n> + <nat:326> * <var:a> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . auto . Qed . 