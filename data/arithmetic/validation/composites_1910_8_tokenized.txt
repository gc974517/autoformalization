\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Claim that supposing there exist natural numbers $ <var:G> $ , $ <var:J> $ , $ <var:n> $ , $ <var:q> $ , $ <var:b> $ , $ <var:X> $ , $ <var:I> $ , $ <var:Z> $ larger than or equal to <nat:2> . Define that some number $ <var:m> $ will be named a <def:eight-composite> number if $ <var:Z> \cdot <var:G> \cdot <var:n> \cdot <var:b> \cdot <var:q> \cdot <var:I> \cdot <var:X> \cdot <var:J> = <var:m> $ . Therefore the natural number <nat:5322240> is a <def:eight-composite> integer . \end{theorem} \begin{proof} Recall <nat:5322240> is <def:eight-composite> granted it is the product between numbers $ <var:q> $ , $ <var:n> $ , $ <var:I> $ , $ <var:G> $ , $ <var:b> $ , $ <var:J> $ , $ <var:Z> $ , $ <var:X> $ more than or equal to <nat:2> . We verify <nat:5322240> is a <def:eight-composite> whole number . Note $ <var:q> \cdot <var:Z> \cdot <var:n> \cdot <var:I> \cdot <var:X> \cdot <var:b> \cdot <var:J> \cdot <var:G> = <nat:5322240> $ produces $ <var:I> = <nat:4> $ , $ <var:Z> = <nat:8> $ , $ <var:b> = <nat:12> $ , $ <var:q> = <nat:10> $ , $ <var:G> = <nat:11> $ , $ <var:J> = <nat:3> $ , $ <var:n> = <nat:7> $ , $ <var:X> = <nat:6> $ . Plus note $ <nat:6> $ , $ <nat:4> $ , $ <nat:10> $ , $ <nat:8> $ , $ <nat:3> $ , $ <nat:12> $ , $ <nat:7> $ and $ <nat:11> \geq <nat:2> $ . This indicates our theorem holds . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:eight-composite> ( <var:m> : nat ) := exists <var:G> <var:J> <var:n> <var:q> <var:b> <var:X> <var:I> <var:Z> : nat , ( <var:G> >= <nat:2> ) /\ ( <var:J> >= <nat:2> ) /\ ( <var:n> >= <nat:2> ) /\ ( <var:q> >= <nat:2> ) /\ ( <var:b> >= <nat:2> ) /\ ( <var:X> >= <nat:2> ) /\ ( <var:I> >= <nat:2> ) /\ ( <var:Z> >= <nat:2> ) /\ ( <var:Z> * <var:G> * <var:n> * <var:b> * <var:q> * <var:I> * <var:X> * <var:J> = <var:m> ) . Theorem <genP:1> : <def:eight-composite> <nat:5322240> . Proof . unfold <def:eight-composite> . exists <nat:11> . exists <nat:3> . exists <nat:7> . exists <nat:10> . exists <nat:12> . exists <nat:6> . exists <nat:4> . exists <nat:8> . assert ( <genH> : <nat:6> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:4> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:10> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:8> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:3> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:12> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:7> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:11> >= <nat:2> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 