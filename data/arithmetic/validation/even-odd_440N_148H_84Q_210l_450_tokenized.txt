\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:H> \cdot <nat:148> + <var:l> \cdot <nat:210> + <nat:450> + <var:Q> \cdot <nat:84> + <var:N> \cdot <nat:440> $ will be even using every $ <var:Q> $ , $ <var:l> $ , $ <var:H> $ , and $ <var:N> \in \mathbb{Z}^+ $ . \end{theorem} \begin{proof} See $ <nat:450> $ is trivially an even number in $ \mathbb{Z}^+ $ . Since the totaling of even whole numbers together must be even , as a consequence the proposition is proven . We demonstrate the expression $ <nat:210> * <var:l> + <var:Q> * <nat:84> + <nat:450> + <var:N> * <nat:440> + <nat:148> * <var:H> $ is even from the knowledge the summation $ <var:Q> * <nat:84> + <var:N> * <nat:440> + <var:l> * <nat:210> + <nat:148> * <var:H> $ is trivially even . The positive integer $ <nat:440> $ is obviously even . Hence , the pair $ <nat:440> \cdot <var:N> $ will be even in addition . The product $ <nat:148> \cdot <var:H> $ is an even number in $ \mathbb{N} $ because the multiplication of an even natural with a whole number is guaranteed to be even . This claim is proven as a consequence that the number $ <nat:148> $ is known as by itself an even number . Notice that the pair $ <nat:84> \cdot <var:Q> $ is guaranteed to be an even natural number . This must be true because multiplying of an even positive integer and a integer is guaranteed to be by itself an even whole number . This claim is proven from the knowledge the coefficient $ <nat:84> $ is guaranteed to be even . Further , the number $ <nat:210> $ is known to be even . Thus , the product $ <nat:210> \cdot <var:l> $ must be even too . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:Q> <var:l> <var:H> <var:N> : nat , Nat . even ( <nat:148> * <var:H> + <nat:210> * <var:l> + <nat:84> * <var:Q> + <nat:440> * <var:N> + <nat:450> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:450> = true ) . { auto . } rewrite Nat . even_add . assert ( <genH> : Nat . even <nat:440> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:440> * <var:N> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:148> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:148> * <var:H> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:84> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:84> * <var:Q> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:210> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:210> * <var:l> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:148> * <var:H> + <nat:210> * <var:l> + <nat:84> * <var:Q> + <nat:440> * <var:N> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite <genH> . rewrite <genH> . auto . Qed . 