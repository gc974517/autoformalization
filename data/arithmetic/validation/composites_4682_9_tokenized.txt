\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \newtheorem{definition}{Definition} \begin{document} \begin{definition} Define that $ <var:d> $ is a <def:nine-composite> integer if and only if there are some $ <var:u> $ , $ <var:Y> $ , $ <var:r> $ , $ <var:K> $ , $ <var:f> $ , $ <var:H> $ , $ <var:P> $ , $ <var:D> $ , $ <var:h> $ where $ <var:r> \cdot <var:K> \cdot <var:D> \cdot <var:Y> \cdot <var:f> \cdot <var:P> \cdot <var:h> \cdot <var:H> \cdot <var:u> = <var:d> $ with some integer $ <var:d> $ as well as satisfying the condition that $ <var:Y> $ , $ <var:r> $ , $ <var:u> $ , $ <var:K> $ , $ <var:D> $ , $ <var:P> $ , $ <var:h> $ , $ <var:H> $ , and $ <var:f> \geq <nat:2> $ . \end{definition} \begin{theorem} $ <nat:7257600> = <var:d> $ is a <def:nine-composite> number . \end{theorem} \begin{proof} Recall that a <def:nine-composite> whole number is the product of whole numbers $ <var:Y> $ , $ <var:K> $ , $ <var:f> $ , $ <var:P> $ , $ <var:u> $ , $ <var:D> $ , $ <var:H> $ , $ <var:r> $ , $ <var:h> $ satisfying the condition that $ <var:H> $ , $ <var:r> $ , $ <var:f> $ , $ <var:Y> $ , $ <var:D> $ , $ <var:h> $ , $ <var:P> $ , $ <var:K> $ , and $ <var:u> \geq <nat:2> $ . Note that $ <nat:8> $ , $ <nat:2> $ , $ <nat:4> $ , $ <nat:9> $ , $ <nat:3> $ , $ <nat:10> $ , $ <nat:7> $ , $ <nat:12> $ and $ <nat:5> \geq <nat:2> $ . Further observe that likewise $ <nat:7257600> = <var:f> \times <var:h> \times <var:P> \times <var:Y> \times <var:K> \times <var:r> \times <var:u> \times <var:H> \times <var:D> $ implies $ <var:u> = <nat:8> $ , $ <var:r> = <nat:7> $ , $ <var:H> = <nat:10> $ , $ <var:Y> = <nat:9> $ , $ <var:D> = <nat:12> $ , $ <var:P> = <nat:3> $ , $ <var:h> = <nat:4> $ , $ <var:K> = <nat:2> $ , $ <var:f> = <nat:5> $ . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:nine-composite> ( <var:d> : nat ) := exists <var:u> <var:Y> <var:r> <var:K> <var:f> <var:H> <var:P> <var:D> <var:h> : nat , ( <var:r> * <var:K> * <var:D> * <var:Y> * <var:f> * <var:P> * <var:h> * <var:H> * <var:u> = <var:d> ) /\ ( <var:Y> >= <nat:2> ) /\ ( <var:r> >= <nat:2> ) /\ ( <var:u> >= <nat:2> ) /\ ( <var:K> >= <nat:2> ) /\ ( <var:D> >= <nat:2> ) /\ ( <var:P> >= <nat:2> ) /\ ( <var:h> >= <nat:2> ) /\ ( <var:H> >= <nat:2> ) /\ ( <var:f> >= <nat:2> ) . Theorem <genP:1> : <def:nine-composite> <nat:7257600> . Proof . unfold <def:nine-composite> . assert ( <genH> : <nat:8> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:2> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:4> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:9> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:3> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:10> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:7> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:12> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:5> >= <nat:2> ) . { lia . } exists <nat:8> . exists <nat:9> . exists <nat:7> . exists <nat:2> . exists <nat:5> . exists <nat:10> . exists <nat:3> . exists <nat:12> . exists <nat:4> . repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 