\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:34> <var:X> + <var:g> <nat:346> + <var:C> <nat:462> + <var:S> <nat:444> + <nat:90> <var:Q> + <var:n> <nat:254> + <nat:16> <var:F> + <var:H> <nat:6> + <nat:204> $ is even for positive numbers $ <var:F> $ , $ <var:H> $ , $ <var:C> $ , $ <var:n> $ , $ <var:Q> $ , $ <var:S> $ , $ <var:X> $ , and $ <var:g> $ . \end{theorem} \begin{proof} The products $ <nat:16> \cdot <var:F> $ , $ <var:S> \cdot <nat:444> $ , $ <var:C> \cdot <nat:462> $ , $ <nat:90> \cdot <var:Q> $ , $ <var:n> \cdot <nat:254> $ , $ <var:g> \cdot <nat:346> $ , and likewise $ <nat:6> \cdot <var:H> $ will be even . Additionally , the pair $ <var:X> \cdot <nat:34> $ is clearly an even number in $ \mathbb{N} $ as a consequence that multiplying of an even number in $ \mathbb{N} $ and some natural number is guaranteed to be even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:F> <var:H> <var:C> <var:n> <var:Q> <var:S> <var:X> <var:g> : nat , Nat . even ( <nat:34> * <var:X> + <nat:346> * <var:g> + <nat:462> * <var:C> + <nat:444> * <var:S> + <nat:90> * <var:Q> + <nat:254> * <var:n> + <nat:16> * <var:F> + <nat:6> * <var:H> + <nat:204> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:16> * <var:F> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:444> * <var:S> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:462> * <var:C> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:90> * <var:Q> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:254> * <var:n> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:346> * <var:g> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:6> * <var:H> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:34> * <var:X> ) = true ) . { rewrite Nat . even_mul . auto . } repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 