\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:160> \cdot <var:a> + <var:D> \cdot <nat:478> + <nat:290> + <nat:54> \cdot <var:X> + <var:Q> \cdot <nat:74> + <var:G> \cdot <nat:16> + <var:u> \cdot <nat:28> $ is even . \end{theorem} \begin{proof} The pairs $ <nat:160> * <var:a> $ and also $ <nat:28> * <var:u> $ will be even from the knowledge multiplying between an even positive integer with an arbitrary number in $ \mathbb{Z}^+ $ will be an even positive integer . $ <var:G> * <nat:16> $ is clearly even because the multiplication between an even number in $ \mathbb{N} $ with any number must be instrinsically an even number in $ \mathbb{Z}^+ $ . Notice that the pair $ <nat:54> * <var:X> $ is guaranteed to be an even number in $ \mathbb{Z}^+ $ because the product between an even whole number and an arbitrary number in $ \mathbb{Z}^+ $ is guaranteed to be even . What's more , notice the term $ <var:D> * <nat:478> $ is obviously even . This is true as a consequence that multiplying between an even natural with an arbitrary number in $ \mathbb{N} $ will be even . Likewise , $ <nat:74> * <var:Q> $ is clearly an even number in $ \mathbb{N} $ . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:a> <var:D> <var:X> <var:Q> <var:G> <var:u> : nat , Nat . even ( <nat:160> * <var:a> + <nat:478> * <var:D> + <nat:54> * <var:X> + <nat:74> * <var:Q> + <nat:16> * <var:G> + <nat:28> * <var:u> + <nat:290> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:160> * <var:a> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:28> * <var:u> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:16> * <var:G> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:54> * <var:X> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:478> * <var:D> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:74> * <var:Q> ) = true ) . { rewrite Nat . even_mul . auto . } repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 