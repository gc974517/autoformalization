\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:p> \times <nat:276> + <nat:306> \times <var:r> + <var:V> \times <nat:260> + <var:w> \times <nat:428> + <var:g> \times <nat:194> + <nat:156> + <var:q> \times <nat:468> + <nat:462> \times <var:b> $ is even with every variables $ <var:r> $ , $ <var:g> $ , $ <var:p> $ , $ <var:w> $ , $ <var:q> $ , $ <var:V> $ , and $ <var:b> $ . \end{theorem} \begin{proof} We prove our lemma holds . It can be justified that that the formula $ <nat:260> <var:V> + <nat:462> <var:b> + <var:w> <nat:428> + <nat:306> <var:r> + <var:p> <nat:276> + <nat:194> <var:g> + <var:q> <nat:468> $ is clearly even . See the adding between an even element of $ \mathbb{N} $ with an even element of $ \mathbb{Z}^+ $ must be an even element of $ \mathbb{N} $ . The products $ <nat:276> \cdot <var:p> $ , $ <nat:428> \cdot <var:w> $ , $ <var:q> \cdot <nat:468> $ , $ <nat:260> \cdot <var:V> $ , and moreover $ <nat:462> \cdot <var:b> $ are known to be even . Building on , the pair $ <nat:306> \cdot <var:r> $ is guaranteed to be an even element of $ \mathbb{N} $ from the knowledge the product of an even natural with any number in $ \mathbb{Z}^+ $ must be even . The product $ <var:g> \cdot <nat:194> $ is an even natural . as well as by reason that the multiplication between an even element of $ \mathbb{N} $ with any number in $ \mathbb{Z}^+ $ will be fundamentally an even element of $ \mathbb{Z}^+ $ . The totaling between even numbers in $ \mathbb{Z}^+ $ collectively is even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:r> <var:g> <var:p> <var:w> <var:q> <var:V> <var:b> : nat , Nat . even ( <nat:276> * <var:p> + <nat:306> * <var:r> + <nat:260> * <var:V> + <nat:428> * <var:w> + <nat:194> * <var:g> + <nat:468> * <var:q> + <nat:462> * <var:b> + <nat:156> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:276> * <var:p> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:428> * <var:w> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:468> * <var:q> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:260> * <var:V> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:462> * <var:b> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:306> * <var:r> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:194> * <var:g> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:276> * <var:p> + <nat:306> * <var:r> + <nat:260> * <var:V> + <nat:428> * <var:w> + <nat:194> * <var:g> + <nat:468> * <var:q> + <nat:462> * <var:b> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . even_add . rewrite <genH> . auto . Qed . 