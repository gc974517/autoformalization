\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Assume $ <var:n> $ , $ <var:r> $ , $ <var:v> $ , $ <var:z> $ , $ <var:V> $ , $ <var:u> $ , $ <var:J> $ , $ <var:Z> $ , $ <var:c> $ are natural numbers . Denote that some $ <var:e> $ is considered to be a <def:nine-composite> whole number when $ <var:e> = <var:r> \cdot <var:V> \cdot <var:u> \cdot <var:J> \cdot <var:v> \cdot <var:n> \cdot <var:z> \cdot <var:Z> \cdot <var:c> $ and terms are greater than <nat:1> . Therefore the number <nat:39916800> is a <def:nine-composite> integer . \end{theorem} \begin{proof} Let $ <var:u> = <nat:8> $ , $ <var:z> = <nat:4> $ , $ <var:J> = <nat:11> $ , $ <var:c> = <nat:10> $ , $ <var:Z> = <nat:5> $ , $ <var:r> = <nat:9> $ , $ <var:v> = <nat:12> $ , $ <var:V> = <nat:7> $ , and $ <var:n> = <nat:3> $ . Notice that $ <var:Z> = <nat:5> $ , $ <var:r> = <nat:9> $ , $ <var:c> = <nat:10> $ , $ <var:n> = <nat:3> $ , $ <var:v> = <nat:12> $ , $ <var:J> = <nat:11> $ , $ <var:V> = <nat:7> $ , $ <var:u> = <nat:8> $ and $ <var:z> = <nat:4> $ are larger than <nat:1> . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:nine-composite> ( <var:e> : nat ) := exists <var:n> <var:r> <var:v> <var:z> <var:V> <var:u> <var:J> <var:Z> <var:c> : nat , ( <var:e> = <var:r> * <var:V> * <var:u> * <var:J> * <var:v> * <var:n> * <var:z> * <var:Z> * <var:c> ) /\ ( <var:n> > <nat:1> ) /\ ( <var:r> > <nat:1> ) /\ ( <var:v> > <nat:1> ) /\ ( <var:z> > <nat:1> ) /\ ( <var:V> > <nat:1> ) /\ ( <var:u> > <nat:1> ) /\ ( <var:J> > <nat:1> ) /\ ( <var:Z> > <nat:1> ) /\ ( <var:c> > <nat:1> ) . Theorem <genP:1> : <def:nine-composite> <nat:39916800> . Proof . unfold <def:nine-composite> . exists <nat:3> . exists <nat:9> . exists <nat:12> . exists <nat:4> . exists <nat:7> . exists <nat:8> . exists <nat:11> . exists <nat:5> . exists <nat:10> . assert ( <genH> : <nat:5> > <nat:1> ) . { lia . } assert ( <genH> : <nat:9> > <nat:1> ) . { lia . } assert ( <genH> : <nat:10> > <nat:1> ) . { lia . } assert ( <genH> : <nat:3> > <nat:1> ) . { lia . } assert ( <genH> : <nat:12> > <nat:1> ) . { lia . } assert ( <genH> : <nat:11> > <nat:1> ) . { lia . } assert ( <genH> : <nat:7> > <nat:1> ) . { lia . } assert ( <genH> : <nat:8> > <nat:1> ) . { lia . } assert ( <genH> : <nat:4> > <nat:1> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 