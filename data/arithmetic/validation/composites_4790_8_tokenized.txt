\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Let $ <var:V> $ , $ <var:G> $ , $ <var:z> $ , $ <var:C> $ , $ <var:h> $ , $ <var:i> $ , $ <var:Q> $ , and $ <var:s> \in \mathbb{N} $ such that $ <var:i> $ , $ <var:C> $ , $ <var:z> $ , $ <var:Q> $ , $ <var:h> $ , $ <var:s> $ , $ <var:V> $ , $ <var:G> $ greater than or equal to <nat:2> as well as satisfying the condition that the positive integer <nat:2851200> is the product of positive integers $ <var:V> $ , $ <var:G> $ , $ <var:z> $ , $ <var:C> $ , $ <var:h> $ , $ <var:i> $ , $ <var:Q> $ and $ <var:s> \in \mathbb{N} $ . \end{theorem} \begin{proof} Allow $ <var:h> = <nat:4> $ , $ <var:s> = <nat:8> $ , $ <var:C> = <nat:5> $ , $ <var:z> = <nat:11> $ , $ <var:Q> = <nat:3> $ , $ <var:i> = <nat:6> $ , $ <var:G> = <nat:9> $ , and $ <var:V> = <nat:10> $ . We show $ <var:h> \cdot <var:V> \cdot <var:Q> \cdot <var:G> \cdot <var:C> \cdot <var:s> \cdot <var:i> \cdot <var:z> = <nat:2851200> $ . We show our statement is true as Because $ <var:G> = <nat:9> $ , $ <var:h> = <nat:4> $ , $ <var:Q> = <nat:3> $ , $ <var:C> = <nat:5> $ , $ <var:s> = <nat:8> $ , $ <var:z> = <nat:11> $ , $ <var:i> = <nat:6> $ , and $ <var:V> = <nat:10> \geq <nat:2> $ . \end{proof} \end{document} 
~
Require Import Lia . Theorem <genP:1> : exists <var:V> <var:G> <var:z> <var:C> <var:h> <var:i> <var:Q> <var:s> : nat , ( <var:i> >= <nat:2> ) /\ ( <var:C> >= <nat:2> ) /\ ( <var:z> >= <nat:2> ) /\ ( <var:Q> >= <nat:2> ) /\ ( <var:h> >= <nat:2> ) /\ ( <var:s> >= <nat:2> ) /\ ( <var:V> >= <nat:2> ) /\ ( <var:G> >= <nat:2> ) /\ ( <nat:2851200> = <var:V> * <var:G> * <var:z> * <var:C> * <var:h> * <var:i> * <var:Q> * <var:s> ) . Proof . exists <nat:10> . exists <nat:9> . exists <nat:11> . exists <nat:5> . exists <nat:4> . exists <nat:6> . exists <nat:3> . exists <nat:8> . assert ( <genH> : <nat:9> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:4> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:3> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:5> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:8> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:11> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:6> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:10> >= <nat:2> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 