\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Take $ <var:Q> $ , $ <var:F> $ , $ <var:v> $ , $ <var:J> $ , $ <var:b> $ , $ <var:n> $ , $ <var:Z> \in \mathbb{Z}^+ $ . We denote that $ <var:L> \in \mathbb{N} $ will be named a <def:seven-composite> positive integer assuming $ <var:Q> \times <var:F> \times <var:v> \times <var:b> \times <var:n> \times <var:Z> \times <var:J> = <var:L> $ plus such that $ <var:n> $ , $ <var:v> $ , $ <var:J> $ , $ <var:Z> $ , $ <var:b> $ , $ <var:F> $ , $ <var:Q> > <nat:1> $ . Consequently $ <nat:172800> = <var:L> $ is a <def:seven-composite> natural number . \end{theorem} \begin{proof} Recall <nat:172800> is a <def:seven-composite> positive integer only if <nat:172800> is the product between positive integers $ <var:Q> $ , $ <var:b> $ , $ <var:J> $ , $ <var:n> $ , $ <var:v> $ , $ <var:F> $ and $ <var:Z> $ where $ <var:F> $ , $ <var:Z> $ , $ <var:Q> $ , $ <var:J> $ , $ <var:n> $ , $ <var:v> $ and $ <var:b> > <nat:1> $ . Allow $ <var:v> = <nat:5> $ , $ <var:b> = <nat:9> $ , $ <var:F> = <nat:10> $ , $ <var:Z> = <nat:2> $ , $ <var:J> = <nat:6> $ , $ <var:Q> = <nat:8> $ , and $ <var:n> = <nat:4> $ . We demonstrate our proposition is true seeing that $ <nat:6> * <nat:2> * <nat:4> * <nat:8> * <nat:5> * <nat:10> * <nat:9> = <nat:172800> $ plus by reason of $ <nat:2> $ , $ <nat:6> $ , $ <nat:10> $ , $ <nat:8> $ , $ <nat:5> $ , $ <nat:9> $ , $ <nat:4> $ are greater than <nat:1> . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:seven-composite> ( <var:L> : nat ) := exists <var:Q> <var:F> <var:v> <var:J> <var:b> <var:n> <var:Z> : nat , ( <var:Q> * <var:F> * <var:v> * <var:b> * <var:n> * <var:Z> * <var:J> = <var:L> ) /\ ( <var:n> > <nat:1> ) /\ ( <var:v> > <nat:1> ) /\ ( <var:J> > <nat:1> ) /\ ( <var:Z> > <nat:1> ) /\ ( <var:b> > <nat:1> ) /\ ( <var:F> > <nat:1> ) /\ ( <var:Q> > <nat:1> ) . Theorem <genP:1> : <def:seven-composite> <nat:172800> . Proof . unfold <def:seven-composite> . exists <nat:8> . exists <nat:10> . exists <nat:5> . exists <nat:6> . exists <nat:9> . exists <nat:4> . exists <nat:2> . assert ( <genH> : <nat:2> > <nat:1> ) . { lia . } assert ( <genH> : <nat:6> > <nat:1> ) . { lia . } assert ( <genH> : <nat:10> > <nat:1> ) . { lia . } assert ( <genH> : <nat:8> > <nat:1> ) . { lia . } assert ( <genH> : <nat:5> > <nat:1> ) . { lia . } assert ( <genH> : <nat:9> > <nat:1> ) . { lia . } assert ( <genH> : <nat:4> > <nat:1> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 