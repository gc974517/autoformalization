\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Assume that $ <var:y> $ is a <def:five-composite> integer whenever taking some integers $ <var:s> $ , $ <var:T> $ , $ <var:S> $ , $ <var:C> $ , $ <var:Z> $ we have so that $ <var:S> $ , $ <var:Z> $ , $ <var:s> $ , $ <var:C> $ and $ <var:T> > <nat:1> $ as well as assuming some integer $ <var:y> $ , $ <var:Z> * <var:T> * <var:S> * <var:s> * <var:C> = <var:y> $ . Then the number <nat:10560> is a <def:five-composite> number . \end{theorem} \begin{proof} Recollect that <nat:10560> is a <def:five-composite> integer when <nat:10560> is the multiplication between natural numbers $ <var:T> $ , $ <var:Z> $ , $ <var:S> $ , $ <var:s> $ , $ <var:C> $ greater than <nat:1> . Let $ <var:S> = <nat:4> $ , $ <var:T> = <nat:2> $ , $ <var:Z> = <nat:12> $ , $ <var:C> = <nat:10> $ , and $ <var:s> = <nat:11> $ . We prove <nat:10560> is a <def:five-composite> number . We verify <nat:10560> is a <def:five-composite> number considering $ <nat:10560> = <nat:12> * <nat:2> * <nat:10> * <nat:4> * <nat:11> $ plus in consideration of $ <var:C> = <nat:10> $ , $ <var:T> = <nat:2> $ , $ <var:s> = <nat:11> $ , $ <var:Z> = <nat:12> $ , and $ <var:S> = <nat:4> > <nat:1> $ . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:five-composite> ( <var:y> : nat ) := exists <var:s> <var:T> <var:S> <var:C> <var:Z> : nat , ( <var:S> > <nat:1> ) /\ ( <var:Z> > <nat:1> ) /\ ( <var:s> > <nat:1> ) /\ ( <var:C> > <nat:1> ) /\ ( <var:T> > <nat:1> ) /\ ( <var:Z> * <var:T> * <var:S> * <var:s> * <var:C> = <var:y> ) . Theorem <genP:1> : <def:five-composite> <nat:10560> . Proof . unfold <def:five-composite> . exists <nat:11> . exists <nat:2> . exists <nat:4> . exists <nat:10> . exists <nat:12> . assert ( <genH> : <nat:10> > <nat:1> ) . { lia . } assert ( <genH> : <nat:2> > <nat:1> ) . { lia . } assert ( <genH> : <nat:11> > <nat:1> ) . { lia . } assert ( <genH> : <nat:12> > <nat:1> ) . { lia . } assert ( <genH> : <nat:4> > <nat:1> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 