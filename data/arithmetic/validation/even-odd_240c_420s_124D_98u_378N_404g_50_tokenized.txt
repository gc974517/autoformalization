\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:240> \cdot <var:c> + <nat:420> \cdot <var:s> + <nat:124> \cdot <var:D> + <nat:50> + <nat:98> \cdot <var:u> + <nat:378> \cdot <var:N> + <var:g> \cdot <nat:404> $ must be even using every whole numbers $ <var:D> $ , $ <var:c> $ , $ <var:u> $ , $ <var:s> $ , $ <var:g> $ , and $ <var:N> $ . \end{theorem} \begin{proof} Observe that the numbers $ <nat:240> $ , $ <nat:420> $ , $ <nat:124> $ , $ <nat:98> $ , $ <nat:378> $ , additionally $ <nat:404> $ are even positive integers . So , the products $ <var:c> \cdot <nat:240> $ , $ <var:s> \cdot <nat:420> $ , $ <var:D> \cdot <nat:124> $ , $ <nat:98> \cdot <var:u> $ , $ <nat:378> \cdot <var:N> $ , plus $ <nat:404> \cdot <var:g> $ is guaranteed to be even in addition . Take note that the summation between an even number in $ \mathbb{N} $ and an even positive integer will be even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:D> <var:c> <var:u> <var:s> <var:g> <var:N> : nat , Nat . even ( <nat:240> * <var:c> + <nat:420> * <var:s> + <nat:124> * <var:D> + <nat:98> * <var:u> + <nat:378> * <var:N> + <nat:404> * <var:g> + <nat:50> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:240> = true ) . { auto . } assert ( <genH> : Nat . even <nat:420> = true ) . { auto . } assert ( <genH> : Nat . even <nat:124> = true ) . { auto . } assert ( <genH> : Nat . even <nat:98> = true ) . { auto . } assert ( <genH> : Nat . even <nat:378> = true ) . { auto . } assert ( <genH> : Nat . even <nat:404> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:240> * <var:c> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:420> * <var:s> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:124> * <var:D> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:98> * <var:u> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:378> * <var:N> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:404> * <var:g> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 