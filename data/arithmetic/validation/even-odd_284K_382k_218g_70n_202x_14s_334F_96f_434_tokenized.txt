\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:K> <nat:284> + <nat:382> <var:k> + <nat:434> + <nat:218> <var:g> + <var:n> <nat:70> + <var:x> <nat:202> + <nat:14> <var:s> + <var:F> <nat:334> + <var:f> <nat:96> $ is even . \end{theorem} \begin{proof} The products $ <nat:96> <var:f> $ , $ <var:k> <nat:382> $ , $ <nat:218> <var:g> $ , $ <nat:284> <var:K> $ , and moreover $ <var:s> <nat:14> $ must be even . This claim holds from the fact taking the product between an even positive integer with a number in $ \mathbb{N} $ must be even . The term $ <nat:202> <var:x> $ is even since the product of an even integer with a number in $ \mathbb{N} $ must be an even number . Observe the product $ <var:n> <nat:70> $ is trivially even . This claim is proven from the fact multiplying between an even element of $ \mathbb{Z}^+ $ and any positive integer is an even number . Furthermore , the product $ <var:F> <nat:334> $ is trivially an even number in $ \mathbb{N} $ since the multiplication of an even natural number with any positive integer is even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:K> <var:k> <var:g> <var:n> <var:x> <var:s> <var:F> <var:f> : nat , Nat . even ( <nat:284> * <var:K> + <nat:382> * <var:k> + <nat:218> * <var:g> + <nat:70> * <var:n> + <nat:202> * <var:x> + <nat:14> * <var:s> + <nat:334> * <var:F> + <nat:96> * <var:f> + <nat:434> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:96> * <var:f> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:382> * <var:k> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:218> * <var:g> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:284> * <var:K> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:14> * <var:s> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:202> * <var:x> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:70> * <var:n> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:334> * <var:F> ) = true ) . { rewrite Nat . even_mul . auto . } repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 