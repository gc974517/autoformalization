\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Assuming every unknowns $ <var:z> $ , $ <var:m> $ , and $ <var:B> $ the expression $ <nat:446> <var:m> + <var:B> <nat:144> + <var:z> <nat:200> + <nat:116> $ is even . \end{theorem} \begin{proof} The expression $ <var:B> \times <nat:144> + <nat:116> + <var:m> \times <nat:446> + <nat:200> \times <var:z> $ is known to be even from the knowledge $ <var:B> \times <nat:144> + <var:z> \times <nat:200> + <nat:446> \times <var:m> $ is trivially even . Observe the terms $ <var:z> <nat:200> $ and $ <var:m> <nat:446> $ will be even integers . This claim holds because the product of an even number and any number in $ \mathbb{N} $ is guaranteed to be even . In addition , see the product $ <var:B> <nat:144> $ is clearly an even integer . This claim must be true as a consequence that taking the product between an even positive integer and any integer is guaranteed to be even . $ <nat:144> \times <var:B> + <var:z> \times <nat:200> + <var:m> \times <nat:446> $ is guaranteed to be by its very nature even by reason that the addition of an even number in $ \mathbb{N} $ and an even element of $ \mathbb{N} $ is guaranteed to be an even number in $ \mathbb{N} $ . Observe that $ <nat:116> $ is trivially an even positive integer . It can be demonstrated that the claim holds . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:z> <var:m> <var:B> : nat , Nat . even ( <nat:446> * <var:m> + <nat:144> * <var:B> + <nat:200> * <var:z> + <nat:116> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:200> * <var:z> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:446> * <var:m> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:144> * <var:B> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:446> * <var:m> + <nat:144> * <var:B> + <nat:200> * <var:z> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:116> = true ) . { auto . } rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . auto . Qed . 