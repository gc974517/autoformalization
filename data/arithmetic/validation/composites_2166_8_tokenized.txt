\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Claim that $ <var:R> $ is a <def:eight-composite> whole number when given some whole numbers $ <var:C> $ , $ <var:x> $ , $ <var:j> $ , $ <var:w> $ , $ <var:c> $ , $ <var:K> $ , $ <var:t> $ , $ <var:G> $ we get $ <var:K> \cdot <var:x> \cdot <var:j> \cdot <var:t> \cdot <var:c> \cdot <var:w> \cdot <var:G> \cdot <var:C> = <var:R> $ with some $ <var:R> $ as well as satisfying the condition that $ <var:x> $ , $ <var:K> $ , $ <var:w> $ , $ <var:c> $ , $ <var:t> $ , $ <var:C> $ , $ <var:j> $ and $ <var:G> \geq <nat:2> $ . Consequently <nat:2177280> is a <def:eight-composite> natural number . \end{theorem} \begin{proof} We present the principle holds seeing that $ <nat:2177280> = <var:C> \cdot <var:c> \cdot <var:j> \cdot <var:K> \cdot <var:x> \cdot <var:w> \cdot <var:G> \cdot <var:t> $ implies $ <var:x> = <nat:9> $ , $ <var:j> = <nat:3> $ , $ <var:c> = <nat:12> $ , $ <var:t> = <nat:8> $ , $ <var:G> = <nat:5> $ , $ <var:C> = <nat:7> $ , $ <var:w> = <nat:6> $ , and $ <var:K> = <nat:4> $ and by reason of $ <nat:12> $ , $ <nat:6> $ , $ <nat:7> $ , $ <nat:5> $ , $ <nat:3> $ , $ <nat:9> $ , $ <nat:4> $ and $ <nat:8> > <nat:1> $ . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:eight-composite> ( <var:R> : nat ) := exists <var:C> <var:x> <var:j> <var:w> <var:c> <var:K> <var:t> <var:G> : nat , ( <var:K> * <var:x> * <var:j> * <var:t> * <var:c> * <var:w> * <var:G> * <var:C> = <var:R> ) /\ ( <var:x> >= <nat:2> ) /\ ( <var:K> >= <nat:2> ) /\ ( <var:w> >= <nat:2> ) /\ ( <var:c> >= <nat:2> ) /\ ( <var:t> >= <nat:2> ) /\ ( <var:C> >= <nat:2> ) /\ ( <var:j> >= <nat:2> ) /\ ( <var:G> >= <nat:2> ) . Theorem <genP:1> : <def:eight-composite> <nat:2177280> . Proof . unfold <def:eight-composite> . exists <nat:7> . exists <nat:9> . exists <nat:3> . exists <nat:6> . exists <nat:12> . exists <nat:4> . exists <nat:8> . exists <nat:5> . assert ( <genH> : <nat:12> > <nat:1> ) . { lia . } assert ( <genH> : <nat:6> > <nat:1> ) . { lia . } assert ( <genH> : <nat:7> > <nat:1> ) . { lia . } assert ( <genH> : <nat:5> > <nat:1> ) . { lia . } assert ( <genH> : <nat:3> > <nat:1> ) . { lia . } assert ( <genH> : <nat:9> > <nat:1> ) . { lia . } assert ( <genH> : <nat:4> > <nat:1> ) . { lia . } assert ( <genH> : <nat:8> > <nat:1> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 