\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:458> <var:u> + <var:o> <nat:236> + <nat:480> <var:z> + <nat:267> + <var:j> <nat:142> + <var:I> <nat:400> + <var:Y> <nat:372> $ is odd assuming some positive terms $ <var:j> $ , $ <var:I> $ , $ <var:u> $ , $ <var:z> $ , $ <var:Y> $ , and $ <var:o> $ . \end{theorem} \begin{proof} Take note the summing of even whole numbers successively and an odd element of $ \mathbb{N} $ will be by its very nature an odd integer . The terms $ <nat:400> <var:I> $ as well as $ <var:u> <nat:458> $ are guaranteed to be even . This fact holds because taking the product of an even natural with any element of $ \mathbb{N} $ must be even . Likewise , the pairs $ <nat:142> <var:j> $ and moreover $ <nat:372> <var:Y> $ are known to be even natural numbers . The term $ <nat:236> <var:o> $ is guaranteed to be even . Adding on , notice that the pair $ <var:z> <nat:480> $ is guaranteed to be even . It can be justified that the sum $ <var:u> <nat:458> + <var:z> <nat:480> + <nat:372> <var:Y> + <nat:267> + <var:I> <nat:400> + <nat:142> <var:j> + <var:o> <nat:236> $ will be odd . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:j> <var:I> <var:u> <var:z> <var:Y> <var:o> : nat , Nat . odd ( <nat:458> * <var:u> + <nat:236> * <var:o> + <nat:480> * <var:z> + <nat:142> * <var:j> + <nat:400> * <var:I> + <nat:372> * <var:Y> + <nat:267> ) = true . Proof . intros . rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . assert ( <genH> : Nat . even ( <nat:400> * <var:I> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:458> * <var:u> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:142> * <var:j> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:372> * <var:Y> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:236> * <var:o> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:480> * <var:z> ) = true ) . { rewrite Nat . even_mul . auto . } rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 