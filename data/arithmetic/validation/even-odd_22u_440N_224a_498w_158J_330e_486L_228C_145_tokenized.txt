\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} With integers $ <var:C> $ , $ <var:w> $ , $ <var:a> $ , $ <var:N> $ , $ <var:e> $ , $ <var:J> $ , $ <var:u> $ , and $ <var:L> $ the formula $ <var:u> * <nat:22> + <nat:440> * <var:N> + <var:a> * <nat:224> + <var:w> * <nat:498> + <nat:145> + <nat:158> * <var:J> + <nat:330> * <var:e> + <nat:486> * <var:L> + <nat:228> * <var:C> $ is odd . \end{theorem} \begin{proof} The integers $ <nat:224> $ , $ <nat:486> $ , $ <nat:440> $ , as well as $ <nat:158> $ are known to be even numbers in $ \mathbb{N} $ See that the whole numbers $ <nat:22> $ , $ <nat:498> $ , as well as $ <nat:228> $ are guaranteed to be even The natural number $ <nat:330> $ is obviously an even element of $ \mathbb{Z}^+ $ It can be checked that our proposition is proven . See $ <nat:145> $ is clearly an odd integer . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:C> <var:w> <var:a> <var:N> <var:e> <var:J> <var:u> <var:L> : nat , Nat . odd ( <nat:22> * <var:u> + <nat:440> * <var:N> + <nat:224> * <var:a> + <nat:498> * <var:w> + <nat:158> * <var:J> + <nat:330> * <var:e> + <nat:486> * <var:L> + <nat:228> * <var:C> + <nat:145> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:224> = true ) . { auto . } assert ( <genH> : Nat . even <nat:486> = true ) . { auto . } assert ( <genH> : Nat . even <nat:440> = true ) . { auto . } assert ( <genH> : Nat . even <nat:158> = true ) . { auto . } assert ( <genH> : Nat . even <nat:22> = true ) . { auto . } assert ( <genH> : Nat . even <nat:498> = true ) . { auto . } assert ( <genH> : Nat . even <nat:228> = true ) . { auto . } assert ( <genH> : Nat . even <nat:330> = true ) . { auto . } assert ( <genH> : Nat . odd <nat:145> = true ) . { auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . repeat rewrite Nat . even_mul . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 