\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:494> + <var:H> * <nat:474> + <nat:268> * <var:w> + <var:u> * <nat:254> + <nat:260> * <var:B> $ must be even . \end{theorem} \begin{proof} Our main result is proven because $ <var:u> <nat:254> + <nat:474> <var:H> + <nat:268> <var:w> + <nat:260> <var:B> $ is guaranteed to be even . We know the term $ <nat:474> * <var:H> $ is obviously even . Furthermore , remember $ <nat:254> * <var:u> $ is clearly an even number as a consequence that multiplying of an even element of $ \mathbb{Z}^+ $ and a natural number must be even . Furthermore , the term $ <var:B> * <nat:260> $ is known to be even . See the product $ <nat:268> * <var:w> $ is obviously an even integer from the knowledge taking the product between an even integer with an arbitrary positive integer is even . Observe $ <nat:494> $ is obviously an even natural number . The summing between even numbers in $ \mathbb{Z}^+ $ collectively is even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:H> <var:w> <var:u> <var:B> : nat , Nat . even ( <nat:474> * <var:H> + <nat:268> * <var:w> + <nat:254> * <var:u> + <nat:260> * <var:B> + <nat:494> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:474> * <var:H> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:254> * <var:u> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:260> * <var:B> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:268> * <var:w> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:474> * <var:H> + <nat:268> * <var:w> + <nat:254> * <var:u> + <nat:260> * <var:B> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:494> = true ) . { auto . } rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . auto . Qed . 