\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:437> + <var:n> <nat:100> + <nat:452> <var:R> + <nat:216> <var:O> $ will be odd . \end{theorem} \begin{proof} The result must be true since $ <var:n> * <nat:100> + <var:O> * <nat:216> + <var:R> * <nat:452> $ is guaranteed to be even , from the knowledge the addition of an even number in $ \mathbb{Z}^+ $ with an even natural must be an even positive integer . Remember the product $ <var:n> \cdot <nat:100> $ is obviously even since taking the product between an even whole number and an arbitrary number in $ \mathbb{Z}^+ $ is fundamentally an even natural . $ <nat:452> \cdot <var:R> $ is known to be an even whole number . This is proven by reason that taking the product between an even natural with an arbitrary integer is even . $ <var:O> \cdot <nat:216> $ is trivially even . This fact is proven as a consequence that multiplying of an even integer and an arbitrary positive integer is even . additionally as a consequence that the product between an even whole number and a integer will be even our theorem is proven . The totaling of even numbers in $ \mathbb{N} $ concurrently and an odd whole number must be an odd natural . Recall $ <nat:437> $ is trivially an odd integer . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:n> <var:R> <var:O> : nat , Nat . odd ( <nat:100> * <var:n> + <nat:452> * <var:R> + <nat:216> * <var:O> + <nat:437> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:100> * <var:n> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:452> * <var:R> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:216> * <var:O> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:100> * <var:n> + <nat:452> * <var:R> + <nat:216> * <var:O> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . assert ( <genH> : Nat . odd <nat:437> = true ) . { auto . } rewrite <- Nat . negb_even . rewrite <genH> . rewrite <genH> . auto . Qed . 