\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:I> \cdot <nat:490> + <var:Z> \cdot <nat:8> + <nat:164> \cdot <var:W> + <nat:408> \cdot <var:n> + <nat:72> \cdot <var:K> + <nat:200> \cdot <var:S> + <nat:208> $ is even . \end{theorem} \begin{proof} It can be proven that that $ <var:n> \cdot <nat:408> + <var:Z> \cdot <nat:8> + <var:W> \cdot <nat:164> + <var:S> \cdot <nat:200> + <nat:72> \cdot <var:K> + <nat:208> + <nat:490> \cdot <var:I> $ is known to be even since the formula $ <var:K> \times <nat:72> + <var:I> \times <nat:490> + <var:W> \times <nat:164> + <nat:200> \times <var:S> + <nat:408> \times <var:n> + <nat:8> \times <var:Z> $ is known to be even , from the knowledge the summation of even positive integers collectively with an even natural number is guaranteed to be even . See that the natural numbers $ <nat:408> $ , $ <nat:8> $ , $ <nat:72> $ , $ <nat:490> $ , in addition to $ <nat:164> $ must be even whole numbers . Consequently , the pairs $ <nat:408> \cdot <var:n> $ , $ <var:Z> \cdot <nat:8> $ , $ <nat:72> \cdot <var:K> $ , $ <var:I> \cdot <nat:490> $ , as well as $ <var:W> \cdot <nat:164> $ will be even also . Notice that the natural number $ <nat:200> $ is clearly even . Consequently , $ <nat:200> \cdot <var:S> $ is even additionally . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:I> <var:Z> <var:W> <var:n> <var:K> <var:S> : nat , Nat . even ( <nat:490> * <var:I> + <nat:8> * <var:Z> + <nat:164> * <var:W> + <nat:408> * <var:n> + <nat:72> * <var:K> + <nat:200> * <var:S> + <nat:208> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:408> = true ) . { auto . } assert ( <genH> : Nat . even <nat:8> = true ) . { auto . } assert ( <genH> : Nat . even <nat:72> = true ) . { auto . } assert ( <genH> : Nat . even <nat:490> = true ) . { auto . } assert ( <genH> : Nat . even <nat:164> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:408> * <var:n> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:8> * <var:Z> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:72> * <var:K> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:490> * <var:I> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:164> * <var:W> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:200> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:200> * <var:S> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:490> * <var:I> + <nat:8> * <var:Z> + <nat:164> * <var:W> + <nat:408> * <var:n> + <nat:72> * <var:K> + <nat:200> * <var:S> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . even_add . rewrite <genH> . auto . Qed . 