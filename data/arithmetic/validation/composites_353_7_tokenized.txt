\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Take $ <var:X> $ , $ <var:h> $ , $ <var:A> $ , $ <var:x> $ , $ <var:d> $ , $ <var:z> $ , and $ <var:a> \in \mathbb{Z}^+ $ where $ <var:X> $ , $ <var:h> $ , $ <var:z> $ , $ <var:d> $ , $ <var:x> $ , $ <var:a> $ , and $ <var:A> \geq <nat:2> $ plus satisfying the condition that $ <var:A> * <var:x> * <var:h> * <var:a> * <var:d> * <var:z> * <var:X> $ is $ <nat:147840> $ . \end{theorem} \begin{proof} Notice $ <nat:147840> = <nat:7> * <nat:2> * <nat:8> * <nat:11> * <nat:4> * <nat:6> * <nat:5> = <var:h> * <var:A> * <var:X> * <var:d> * <var:x> * <var:a> * <var:z> $ . Further note that $ <nat:7> $ , $ <nat:6> $ , $ <nat:4> $ , $ <nat:2> $ , $ <nat:5> $ , $ <nat:8> $ , and $ <nat:11> $ are larger than or equivalent to <nat:2> . Because of this , $ <var:X> $ , $ <var:x> $ , $ <var:A> $ , $ <var:d> $ , $ <var:z> $ , $ <var:h> $ , $ <var:a> \geq <nat:2> $ plus $ <var:A> \times <var:X> \times <var:h> \times <var:a> \times <var:d> \times <var:x> \times <var:z> = <nat:147840> $ is validated . \end{proof} \end{document} 
~
Require Import Lia . Theorem <genP:1> : exists <var:X> <var:h> <var:A> <var:x> <var:d> <var:z> <var:a> : nat , ( <var:X> >= <nat:2> ) /\ ( <var:h> >= <nat:2> ) /\ ( <var:z> >= <nat:2> ) /\ ( <var:d> >= <nat:2> ) /\ ( <var:x> >= <nat:2> ) /\ ( <var:a> >= <nat:2> ) /\ ( <var:A> >= <nat:2> ) /\ ( <var:A> * <var:x> * <var:h> * <var:a> * <var:d> * <var:z> * <var:X> = <nat:147840> ) . Proof . exists <nat:8> . exists <nat:7> . exists <nat:2> . exists <nat:4> . exists <nat:11> . exists <nat:5> . exists <nat:6> . assert ( <genH> : <nat:7> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:6> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:4> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:2> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:5> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:8> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:11> >= <nat:2> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 