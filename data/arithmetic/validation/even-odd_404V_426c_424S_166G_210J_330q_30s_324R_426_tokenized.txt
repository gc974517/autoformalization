\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:R> <nat:324> + <nat:210> <var:J> + <nat:426> <var:c> + <nat:404> <var:V> + <nat:30> <var:s> + <var:S> <nat:424> + <nat:426> + <nat:330> <var:q> + <var:G> <nat:166> $ will be even using some whole numbers $ <var:R> $ , $ <var:q> $ , $ <var:c> $ , $ <var:G> $ , $ <var:S> $ , $ <var:s> $ , $ <var:J> $ , and $ <var:V> $ . \end{theorem} \begin{proof} We apply the assumption the knowledge the summation $ <nat:210> \cdot <var:J> + <var:c> \cdot <nat:426> + <nat:404> \cdot <var:V> + <var:s> \cdot <nat:30> + <nat:424> \cdot <var:S> + <var:G> \cdot <nat:166> + <var:q> \cdot <nat:330> + <var:R> \cdot <nat:324> + <nat:426> $ is known as even from the knowledge the formula $ <var:V> * <nat:404> + <nat:426> * <var:c> + <var:S> * <nat:424> + <var:G> * <nat:166> + <nat:210> * <var:J> + <nat:330> * <var:q> + <var:s> * <nat:30> + <nat:324> * <var:R> $ is even . The terms $ <var:V> \cdot <nat:404> $ , $ <nat:426> \cdot <var:c> $ , $ <var:S> \cdot <nat:424> $ , $ <nat:166> \cdot <var:G> $ , $ <nat:210> \cdot <var:J> $ , $ <var:q> \cdot <nat:330> $ , $ <nat:30> \cdot <var:s> $ , $ <nat:324> \cdot <var:R> $ , will be even since taking the product of an even number in $ \mathbb{Z}^+ $ with an arbitrary number is guaranteed to be even . This claim is proven from the fact the leading terms $ <nat:404> $ , $ <nat:426> $ , $ <nat:424> $ , $ <nat:166> $ , $ <nat:210> $ , $ <nat:330> $ , $ <nat:30> $ , $ <nat:324> $ , must be even numbers in $ \mathbb{Z}^+ $ . From the fact the adding between an even number in $ \mathbb{Z}^+ $ with an even positive integer will be even , plus since multiplying of an even natural and any element of $ \mathbb{N} $ will be even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:R> <var:q> <var:c> <var:G> <var:S> <var:s> <var:J> <var:V> : nat , Nat . even ( <nat:324> * <var:R> + <nat:210> * <var:J> + <nat:426> * <var:c> + <nat:404> * <var:V> + <nat:30> * <var:s> + <nat:424> * <var:S> + <nat:330> * <var:q> + <nat:166> * <var:G> + <nat:426> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:404> = true ) . { auto . } assert ( <genH> : Nat . even <nat:426> = true ) . { auto . } assert ( <genH> : Nat . even <nat:424> = true ) . { auto . } assert ( <genH> : Nat . even <nat:166> = true ) . { auto . } assert ( <genH> : Nat . even <nat:210> = true ) . { auto . } assert ( <genH> : Nat . even <nat:330> = true ) . { auto . } assert ( <genH> : Nat . even <nat:30> = true ) . { auto . } assert ( <genH> : Nat . even <nat:324> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:404> * <var:V> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:426> * <var:c> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:424> * <var:S> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:166> * <var:G> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:210> * <var:J> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:330> * <var:q> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:30> * <var:s> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:324> * <var:R> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:324> * <var:R> + <nat:210> * <var:J> + <nat:426> * <var:c> + <nat:404> * <var:V> + <nat:30> * <var:s> + <nat:424> * <var:S> + <nat:330> * <var:q> + <nat:166> * <var:G> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . even_add . rewrite <genH> . auto . Qed . 