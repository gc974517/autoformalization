\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} The number <nat:299376> is the multiplication between numbers $ <var:U> $ , $ <var:n> $ , $ <var:f> $ , $ <var:M> $ , $ <var:X> $ , $ <var:G> $ , and $ <var:H> $ such that $ <var:f> $ , $ <var:G> $ , $ <var:M> $ , $ <var:H> $ , $ <var:U> $ , $ <var:X> $ , and $ <var:n> > <nat:1> $ . \end{theorem} \begin{proof} Take $ <var:X> = <nat:7> $ , $ <var:G> = <nat:6> $ , $ <var:H> = <nat:12> $ , $ <var:M> = <nat:3> $ , $ <var:U> = <nat:2> $ , $ <var:f> = <nat:9> $ and $ <var:n> = <nat:11> $ . We justify our result holds by reason of $ <var:X> = <nat:7> $ , $ <var:G> = <nat:6> $ , $ <var:H> = <nat:12> $ , $ <var:n> = <nat:11> $ , $ <var:M> = <nat:3> $ , $ <var:f> = <nat:9> $ , $ <var:U> = <nat:2> > <nat:1> $ as well as $ <nat:299376> = <var:f> * <var:H> * <var:U> * <var:n> * <var:X> * <var:G> * <var:M> $ . Hence , <nat:299376> is the product of some integers $ <var:M> $ , $ <var:f> $ , $ <var:G> $ , $ <var:H> $ , $ <var:X> $ , $ <var:n> $ and $ <var:U> $ as well as $ <var:X> $ , $ <var:n> $ , $ <var:f> $ , $ <var:H> $ , $ <var:M> $ , $ <var:U> $ , $ <var:G> $ are more than <nat:1> is validated . \end{proof} \end{document} 
~
Require Import Lia . Theorem <genP:1> : exists <var:U> <var:n> <var:f> <var:M> <var:X> <var:G> <var:H> : nat , ( <nat:299376> = <var:U> * <var:n> * <var:f> * <var:M> * <var:X> * <var:G> * <var:H> ) /\ ( <var:f> > <nat:1> ) /\ ( <var:G> > <nat:1> ) /\ ( <var:M> > <nat:1> ) /\ ( <var:H> > <nat:1> ) /\ ( <var:U> > <nat:1> ) /\ ( <var:X> > <nat:1> ) /\ ( <var:n> > <nat:1> ) . Proof . exists <nat:2> . exists <nat:11> . exists <nat:9> . exists <nat:3> . exists <nat:7> . exists <nat:6> . exists <nat:12> . assert ( <genH> : <nat:7> > <nat:1> ) . { lia . } assert ( <genH> : <nat:6> > <nat:1> ) . { lia . } assert ( <genH> : <nat:12> > <nat:1> ) . { lia . } assert ( <genH> : <nat:11> > <nat:1> ) . { lia . } assert ( <genH> : <nat:3> > <nat:1> ) . { lia . } assert ( <genH> : <nat:9> > <nat:1> ) . { lia . } assert ( <genH> : <nat:2> > <nat:1> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 