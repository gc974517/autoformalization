\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:410> * <var:O> + <var:Z> * <nat:342> + <var:t> * <nat:228> + <var:c> * <nat:20> + <var:J> * <nat:96> + <nat:455> + <var:N> * <nat:182> + <nat:66> * <var:F> $ will be odd . \end{theorem} \begin{proof} Furthermore , the coefficients $ <nat:410> $ , $ <nat:342> $ , $ <nat:228> $ , $ <nat:20> $ , $ <nat:96> $ , $ <nat:182> $ , plus $ <nat:66> $ will be even . Accordingly , the pairs $ <var:O> <nat:410> $ , $ <nat:342> <var:Z> $ , $ <var:t> <nat:228> $ , $ <nat:20> <var:c> $ , $ <nat:96> <var:J> $ , $ <var:N> <nat:182> $ , and moreover $ <var:F> <nat:66> $ will be even also . See that the adding between even elements of $ \mathbb{Z}^+ $ and an odd number in $ \mathbb{Z}^+ $ is odd . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:O> <var:Z> <var:t> <var:c> <var:J> <var:N> <var:F> : nat , Nat . odd ( <nat:410> * <var:O> + <nat:342> * <var:Z> + <nat:228> * <var:t> + <nat:20> * <var:c> + <nat:96> * <var:J> + <nat:182> * <var:N> + <nat:66> * <var:F> + <nat:455> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:410> = true ) . { auto . } assert ( <genH> : Nat . even <nat:342> = true ) . { auto . } assert ( <genH> : Nat . even <nat:228> = true ) . { auto . } assert ( <genH> : Nat . even <nat:20> = true ) . { auto . } assert ( <genH> : Nat . even <nat:96> = true ) . { auto . } assert ( <genH> : Nat . even <nat:182> = true ) . { auto . } assert ( <genH> : Nat . even <nat:66> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:410> * <var:O> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:342> * <var:Z> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:228> * <var:t> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:20> * <var:c> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:96> * <var:J> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:182> * <var:N> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:66> * <var:F> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 