\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} We define that $ <var:p> $ is a <def:five-composite> number with the condition that there exist some integers $ <var:t> $ , $ <var:g> $ , $ <var:r> $ , $ <var:W> $ , $ <var:Y> $ so that $ <var:p> = <var:W> \cdot <var:r> \cdot <var:Y> \cdot <var:t> \cdot <var:g> $ with $ <var:p> \in \mathbb{N} $ as well as so that $ <var:W> $ , $ <var:Y> $ , $ <var:r> $ , $ <var:t> $ , and $ <var:g> \geq <nat:2> $ . Therefore $ <nat:18480> = <var:p> $ is a <def:five-composite> positive integer . \end{theorem} \begin{proof} Recall that a <def:five-composite> whole number is the multiplication of integers $ <var:W> $ , $ <var:g> $ , $ <var:Y> $ , $ <var:r> $ , $ <var:t> $ larger than <nat:1> . Let $ <var:r> = <nat:7> $ , $ <var:W> = <nat:10> $ , $ <var:t> = <nat:12> $ , $ <var:g> = <nat:2> $ , and $ <var:Y> = <nat:11> $ . Notice that $ <nat:11> $ , $ <nat:7> $ , $ <nat:12> $ , $ <nat:10> $ and $ <nat:2> $ are more than <nat:1> . Also note too $ <var:r> \times <var:W> \times <var:t> \times <var:Y> \times <var:g> = <nat:18480> $ . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:five-composite> ( <var:p> : nat ) := exists <var:t> <var:g> <var:r> <var:W> <var:Y> : nat , ( <var:p> = <var:W> * <var:r> * <var:Y> * <var:t> * <var:g> ) /\ ( <var:W> >= <nat:2> ) /\ ( <var:Y> >= <nat:2> ) /\ ( <var:r> >= <nat:2> ) /\ ( <var:t> >= <nat:2> ) /\ ( <var:g> >= <nat:2> ) . Theorem <genP:1> : <def:five-composite> <nat:18480> . Proof . unfold <def:five-composite> . exists <nat:12> . exists <nat:2> . exists <nat:7> . exists <nat:10> . exists <nat:11> . assert ( <genH> : <nat:11> > <nat:1> ) . { lia . } assert ( <genH> : <nat:7> > <nat:1> ) . { lia . } assert ( <genH> : <nat:12> > <nat:1> ) . { lia . } assert ( <genH> : <nat:10> > <nat:1> ) . { lia . } assert ( <genH> : <nat:2> > <nat:1> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 