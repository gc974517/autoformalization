\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:154> \times <var:t> + <nat:478> \times <var:D> + <nat:20> \times <var:C> + <var:w> \times <nat:258> + <nat:336> \times <var:A> + <var:Q> \times <nat:162> + <nat:161> $ is odd . \end{theorem} \begin{proof} We use the knowledge the expression $ <nat:478> <var:D> + <nat:161> + <nat:162> <var:Q> + <nat:154> <var:t> + <var:w> <nat:258> + <var:C> <nat:20> + <var:A> <nat:336> $ is known to be odd from the knowledge $ <var:t> \cdot <nat:154> + <var:C> \cdot <nat:20> + <var:D> \cdot <nat:478> + <nat:258> \cdot <var:w> + <nat:162> \cdot <var:Q> + <var:A> \cdot <nat:336> $ is known to be even . Recall the summing of an even integer with an even element of $ \mathbb{N} $ is guaranteed to be even . Notice the terms $ <nat:336> <var:A> $ , $ <nat:154> <var:t> $ , $ <var:C> <nat:20> $ , $ <nat:258> <var:w> $ , in addition to $ <var:D> <nat:478> $ are trivially even . This claim is true as a consequence that multiplying between an even element of $ \mathbb{Z}^+ $ with some natural number is obviously an even integer . Take note that the term $ <var:Q> <nat:162> $ is an even natural number since multiplying of an even positive integer with some whole number is guaranteed to be even . The totaling of even numbers and an odd element of $ \mathbb{N} $ is guaranteed to be an odd natural number . We know $ <nat:161> $ is obviously an odd natural number . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:t> <var:D> <var:C> <var:w> <var:A> <var:Q> : nat , Nat . odd ( <nat:154> * <var:t> + <nat:478> * <var:D> + <nat:20> * <var:C> + <nat:258> * <var:w> + <nat:336> * <var:A> + <nat:162> * <var:Q> + <nat:161> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:336> * <var:A> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:154> * <var:t> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:20> * <var:C> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:258> * <var:w> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:478> * <var:D> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:162> * <var:Q> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:154> * <var:t> + <nat:478> * <var:D> + <nat:20> * <var:C> + <nat:258> * <var:w> + <nat:336> * <var:A> + <nat:162> * <var:Q> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . assert ( <genH> : Nat . odd <nat:161> = true ) . { auto . } rewrite <- Nat . negb_even . rewrite <genH> . rewrite <genH> . auto . Qed . 