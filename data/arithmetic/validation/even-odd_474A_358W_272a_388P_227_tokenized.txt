\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:a> * <nat:272> + <var:A> * <nat:474> + <var:P> * <nat:388> + <nat:227> + <var:W> * <nat:358> $ is odd . \end{theorem} \begin{proof} The summing between even numbers in $ \mathbb{Z}^+ $ successively and an odd whole number is odd . The result must be true by reason that $ <nat:474> <var:A> + <nat:388> <var:P> + <nat:272> <var:a> + <nat:358> <var:W> $ is trivially even . Recall $ <var:W> <nat:358> $ is obviously even . This claim must be true from the fact multiplying between an even number and an arbitrary number in $ \mathbb{N} $ is guaranteed to be clearly an even natural number . Further , recall $ <nat:272> <var:a> $ is known to be even since the multiplication between an even integer with any element of $ \mathbb{Z}^+ $ will be even . Recall $ <nat:388> <var:P> $ is an even element of $ \mathbb{Z}^+ $ . This is proven from the fact the multiplication between an even number in $ \mathbb{Z}^+ $ and some number in $ \mathbb{Z}^+ $ will be even . The term $ <nat:474> <var:A> $ is guaranteed to be an even number in $ \mathbb{N} $ . The claim holds from the fact the summation of an even natural and an even natural number is guaranteed to be even and moreover since the product between an even element of $ \mathbb{N} $ with a natural number is guaranteed to be even . We demonstrate the formula $ <nat:474> * <var:A> + <var:W> * <nat:358> + <nat:227> + <nat:272> * <var:a> + <nat:388> * <var:P> $ is odd . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:a> <var:A> <var:P> <var:W> : nat , Nat . odd ( <nat:272> * <var:a> + <nat:474> * <var:A> + <nat:388> * <var:P> + <nat:358> * <var:W> + <nat:227> ) = true . Proof . intros . rewrite Nat . odd_add . assert ( <genH> : Nat . even ( <nat:358> * <var:W> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:272> * <var:a> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:388> * <var:P> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:474> * <var:A> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:272> * <var:a> + <nat:474> * <var:A> + <nat:388> * <var:P> + <nat:358> * <var:W> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite <- Nat . negb_even . rewrite <genH> . auto . Qed . 