\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Supposing we get $ <var:S> = <var:L> * <var:O> * <var:o> * <var:b> * <var:P> * <var:J> * <var:q> * <var:i> * <var:a> $ given some number $ <var:S> $ given some whole numbers $ <var:L> $ , $ <var:a> $ , $ <var:O> $ , $ <var:o> $ , $ <var:b> $ , $ <var:i> $ , $ <var:q> $ , $ <var:J> $ , $ <var:P> $ , then denote that $ <var:S> $ is a <def:nine-composite> number . Accordingly $ <nat:59875200> = <var:S> $ is a <def:nine-composite> positive integer . \end{theorem} \begin{proof} Recall a <def:nine-composite> number is the multiplication of numbers $ <var:b> $ , $ <var:i> $ , $ <var:J> $ , $ <var:q> $ , $ <var:L> $ , $ <var:P> $ , $ <var:a> $ , $ <var:O> $ , and $ <var:o> $ greater than <nat:1> . Allow $ <var:q> = <nat:6> $ , $ <var:o> = <nat:8> $ , $ <var:O> = <nat:11> $ , $ <var:L> = <nat:10> $ , $ <var:P> = <nat:12> $ , $ <var:J> = <nat:7> $ , $ <var:b> = <nat:9> $ , $ <var:a> = <nat:3> $ , $ <var:i> = <nat:5> $ . We present the belief holds considering $ <nat:3> \cdot <nat:12> \cdot <nat:11> \cdot <nat:6> \cdot <nat:10> \cdot <nat:8> \cdot <nat:9> \cdot <nat:5> \cdot <nat:7> = <nat:59875200> $ . So , <nat:59875200> is <def:nine-composite> is true has been proven . Hence , $ <nat:59875200> = <var:i> \cdot <var:o> \cdot <var:P> \cdot <var:q> \cdot <var:L> \cdot <var:O> \cdot <var:b> \cdot <var:a> \cdot <var:J> $ has been verified . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:nine-composite> ( <var:S> : nat ) := exists <var:L> <var:a> <var:O> <var:o> <var:b> <var:i> <var:q> <var:J> <var:P> : nat , ( <var:S> = <var:L> * <var:O> * <var:o> * <var:b> * <var:P> * <var:J> * <var:q> * <var:i> * <var:a> ) . Theorem <genP:1> : <def:nine-composite> <nat:59875200> . Proof . unfold <def:nine-composite> . exists <nat:10> . exists <nat:3> . exists <nat:11> . exists <nat:8> . exists <nat:9> . exists <nat:5> . exists <nat:6> . exists <nat:7> . exists <nat:12> . repeat split . all : lia . Qed . 