\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Take as given that given there exist $ <var:V> $ , $ <var:p> $ , $ <var:P> $ , $ <var:C> $ , $ <var:v> $ , $ <var:L> $ , $ <var:W> $ , $ <var:H> $ , $ <var:s> \in \mathbb{N} $ where $ <var:s> $ , $ <var:W> $ , $ <var:P> $ , $ <var:H> $ , $ <var:C> $ , $ <var:p> $ , $ <var:v> $ , $ <var:V> $ and $ <var:L> \geq <nat:2> $ . We claim that $ <var:y> \in \mathbb{Z}^+ $ is defined as a <def:nine-composite> whole number if $ <var:W> \times <var:H> \times <var:s> \times <var:P> \times <var:v> \times <var:p> \times <var:C> \times <var:L> \times <var:V> = <var:y> $ . So the integer <nat:26611200> is a <def:nine-composite> natural number . \end{theorem} \begin{proof} Recall that <nat:26611200> is a <def:nine-composite> integer only if <nat:26611200> is the multiplication of numbers $ <var:L> $ , $ <var:s> $ , $ <var:C> $ , $ <var:V> $ , $ <var:P> $ , $ <var:v> $ , $ <var:W> $ , $ <var:H> $ , $ <var:p> $ where $ <var:H> $ , $ <var:W> $ , $ <var:s> $ , $ <var:P> $ , $ <var:L> $ , $ <var:C> $ , $ <var:V> $ , $ <var:p> $ and $ <var:v> \geq <nat:2> $ . Assume $ <var:W> = <nat:7> $ , $ <var:L> = <nat:12> $ , $ <var:s> = <nat:4> $ , $ <var:v> = <nat:2> $ , $ <var:P> = <nat:5> $ , $ <var:H> = <nat:8> $ , $ <var:V> = <nat:10> $ , $ <var:p> = <nat:11> $ , $ <var:C> = <nat:9> $ . We prove <nat:26611200> is a <def:nine-composite> integer . Observe $ <var:V> = <nat:10> $ , $ <var:L> = <nat:12> $ , $ <var:v> = <nat:2> $ , $ <var:H> = <nat:8> $ , $ <var:s> = <nat:4> $ , $ <var:C> = <nat:9> $ , $ <var:P> = <nat:5> $ , $ <var:p> = <nat:11> $ , $ <var:W> = <nat:7> \geq <nat:2> $ . Furthermore observe still $ <nat:26611200> = <nat:11> \times <nat:2> \times <nat:4> \times <nat:10> \times <nat:5> \times <nat:8> \times <nat:7> \times <nat:9> \times <nat:12> = <var:p> \times <var:v> \times <var:s> \times <var:V> \times <var:P> \times <var:H> \times <var:W> \times <var:C> \times <var:L> $ . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:nine-composite> ( <var:y> : nat ) := exists <var:V> <var:p> <var:P> <var:C> <var:v> <var:L> <var:W> <var:H> <var:s> : nat , ( <var:s> >= <nat:2> ) /\ ( <var:W> >= <nat:2> ) /\ ( <var:P> >= <nat:2> ) /\ ( <var:H> >= <nat:2> ) /\ ( <var:C> >= <nat:2> ) /\ ( <var:p> >= <nat:2> ) /\ ( <var:v> >= <nat:2> ) /\ ( <var:V> >= <nat:2> ) /\ ( <var:L> >= <nat:2> ) /\ ( <var:W> * <var:H> * <var:s> * <var:P> * <var:v> * <var:p> * <var:C> * <var:L> * <var:V> = <var:y> ) . Theorem <genP:1> : <def:nine-composite> <nat:26611200> . Proof . unfold <def:nine-composite> . exists <nat:10> . exists <nat:11> . exists <nat:5> . exists <nat:9> . exists <nat:2> . exists <nat:12> . exists <nat:7> . exists <nat:8> . exists <nat:4> . assert ( <genH> : <nat:10> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:12> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:2> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:8> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:4> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:9> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:5> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:11> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:7> >= <nat:2> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 