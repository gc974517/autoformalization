\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:7257600> $ is $ <var:g> * <var:O> * <var:m> * <var:X> * <var:j> * <var:a> * <var:s> * <var:k> * <var:e> $ such that $ <var:O> $ , $ <var:g> $ , $ <var:e> $ , $ <var:j> $ , $ <var:a> $ , $ <var:k> $ , $ <var:s> $ , $ <var:X> $ and $ <var:m> > <nat:1> $ . \end{theorem} \begin{proof} Assume $ <var:k> = <nat:8> $ , $ <var:j> = <nat:4> $ , $ <var:g> = <nat:7> $ , $ <var:e> = <nat:3> $ , $ <var:O> = <nat:12> $ , $ <var:s> = <nat:2> $ , $ <var:m> = <nat:10> $ , $ <var:a> = <nat:5> $ , and $ <var:X> = <nat:9> $ . We verify $ <nat:7257600> = <var:X> * <var:s> * <var:O> * <var:a> * <var:e> * <var:m> * <var:k> * <var:j> * <var:g> $ . Further note $ <nat:12> $ , $ <nat:7> $ , $ <nat:8> $ , $ <nat:2> $ , $ <nat:3> $ , $ <nat:5> $ , $ <nat:10> $ , $ <nat:9> $ and $ <nat:4> $ are larger than <nat:1> . \end{proof} \end{document} 
~
Require Import Lia . Theorem <genP:1> : exists <var:X> <var:k> <var:j> <var:s> <var:O> <var:m> <var:a> <var:g> <var:e> : nat , ( <nat:7257600> = <var:g> * <var:O> * <var:m> * <var:X> * <var:j> * <var:a> * <var:s> * <var:k> * <var:e> ) /\ ( <var:O> > <nat:1> ) /\ ( <var:g> > <nat:1> ) /\ ( <var:e> > <nat:1> ) /\ ( <var:j> > <nat:1> ) /\ ( <var:a> > <nat:1> ) /\ ( <var:k> > <nat:1> ) /\ ( <var:s> > <nat:1> ) /\ ( <var:X> > <nat:1> ) /\ ( <var:m> > <nat:1> ) . Proof . exists <nat:9> . exists <nat:8> . exists <nat:4> . exists <nat:2> . exists <nat:12> . exists <nat:10> . exists <nat:5> . exists <nat:7> . exists <nat:3> . assert ( <genH> : <nat:12> > <nat:1> ) . { lia . } assert ( <genH> : <nat:7> > <nat:1> ) . { lia . } assert ( <genH> : <nat:8> > <nat:1> ) . { lia . } assert ( <genH> : <nat:2> > <nat:1> ) . { lia . } assert ( <genH> : <nat:3> > <nat:1> ) . { lia . } assert ( <genH> : <nat:5> > <nat:1> ) . { lia . } assert ( <genH> : <nat:10> > <nat:1> ) . { lia . } assert ( <genH> : <nat:9> > <nat:1> ) . { lia . } assert ( <genH> : <nat:4> > <nat:1> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 