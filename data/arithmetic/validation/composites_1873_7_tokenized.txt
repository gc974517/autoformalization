\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \newtheorem{definition}{Definition} \begin{document} \begin{definition} With the condition there are numbers $ <var:X> $ , $ <var:D> $ , $ <var:d> $ , $ <var:r> $ , $ <var:z> $ , $ <var:A> $ , $ <var:W> $ then we denote that some natural number $ <var:E> $ is called <def:seven-composite> given $ <var:E> = <var:A> * <var:z> * <var:r> * <var:D> * <var:W> * <var:d> * <var:X> $ and unique terms are more than <nat:1> . \end{definition} \begin{theorem} The natural number <nat:285120> is a <def:seven-composite> integer . \end{theorem} \begin{proof} Allow $ <var:A> = <nat:9> $ , $ <var:X> = <nat:11> $ , $ <var:d> = <nat:3> $ , $ <var:z> = <nat:8> $ , $ <var:W> = <nat:4> $ , $ <var:r> = <nat:6> $ and $ <var:D> = <nat:5> $ . We confirm <nat:285120> is a <def:seven-composite> whole number for $ <var:z> = <nat:8> $ , $ <var:X> = <nat:11> $ , $ <var:r> = <nat:6> $ , $ <var:W> = <nat:4> $ , $ <var:D> = <nat:5> $ , $ <var:d> = <nat:3> $ , $ <var:A> = <nat:9> > <nat:1> $ . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:seven-composite> ( <var:E> : nat ) := exists <var:X> <var:D> <var:d> <var:r> <var:z> <var:A> <var:W> : nat , ( <var:E> = <var:A> * <var:z> * <var:r> * <var:D> * <var:W> * <var:d> * <var:X> ) /\ ( <var:X> > <nat:1> ) /\ ( <var:D> > <nat:1> ) /\ ( <var:d> > <nat:1> ) /\ ( <var:r> > <nat:1> ) /\ ( <var:z> > <nat:1> ) /\ ( <var:A> > <nat:1> ) /\ ( <var:W> > <nat:1> ) . Theorem <genP:1> : <def:seven-composite> <nat:285120> . Proof . unfold <def:seven-composite> . exists <nat:11> . exists <nat:5> . exists <nat:3> . exists <nat:6> . exists <nat:8> . exists <nat:9> . exists <nat:4> . assert ( <genH> : <nat:8> > <nat:1> ) . { lia . } assert ( <genH> : <nat:11> > <nat:1> ) . { lia . } assert ( <genH> : <nat:6> > <nat:1> ) . { lia . } assert ( <genH> : <nat:4> > <nat:1> ) . { lia . } assert ( <genH> : <nat:5> > <nat:1> ) . { lia . } assert ( <genH> : <nat:3> > <nat:1> ) . { lia . } assert ( <genH> : <nat:9> > <nat:1> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 