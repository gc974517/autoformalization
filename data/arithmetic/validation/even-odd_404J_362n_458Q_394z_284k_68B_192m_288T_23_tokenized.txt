\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:J> \times <nat:404> + <nat:362> \times <var:n> + <var:Q> \times <nat:458> + <var:z> \times <nat:394> + <var:k> \times <nat:284> + <nat:68> \times <var:B> + <nat:192> \times <var:m> + <nat:288> \times <var:T> + <nat:23> $ must be odd . \end{theorem} \begin{proof} The products $ <nat:404> \times <var:J> $ , $ <nat:362> \times <var:n> $ , $ <nat:458> \times <var:Q> $ , $ <nat:394> \times <var:z> $ , $ <var:k> \times <nat:284> $ , $ <var:B> \times <nat:68> $ , $ <var:m> \times <nat:192> $ , $ <nat:288> \times <var:T> $ , are obviously even whole numbers . This fact is proven by reason that multiplying of an even number and a number in $ \mathbb{Z}^+ $ is guaranteed to be even . This claim is true as a consequence that the natural numbers $ <nat:404> $ , $ <nat:362> $ , $ <nat:458> $ , $ <nat:394> $ , $ <nat:284> $ , $ <nat:68> $ , $ <nat:192> $ , $ <nat:288> $ , are obviously even elements of $ \mathbb{N} $ . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:J> <var:n> <var:Q> <var:z> <var:k> <var:B> <var:m> <var:T> : nat , Nat . odd ( <nat:404> * <var:J> + <nat:362> * <var:n> + <nat:458> * <var:Q> + <nat:394> * <var:z> + <nat:284> * <var:k> + <nat:68> * <var:B> + <nat:192> * <var:m> + <nat:288> * <var:T> + <nat:23> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:404> = true ) . { auto . } assert ( <genH> : Nat . even <nat:362> = true ) . { auto . } assert ( <genH> : Nat . even <nat:458> = true ) . { auto . } assert ( <genH> : Nat . even <nat:394> = true ) . { auto . } assert ( <genH> : Nat . even <nat:284> = true ) . { auto . } assert ( <genH> : Nat . even <nat:68> = true ) . { auto . } assert ( <genH> : Nat . even <nat:192> = true ) . { auto . } assert ( <genH> : Nat . even <nat:288> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:404> * <var:J> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:362> * <var:n> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:458> * <var:Q> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:394> * <var:z> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:284> * <var:k> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:68> * <var:B> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:192> * <var:m> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:288> * <var:T> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 