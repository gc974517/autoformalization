\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Given any integers $ <var:C> $ , $ <var:v> $ , $ <var:w> $ , $ <var:E> $ , $ <var:e> $ , $ <var:W> $ , $ <var:p> $ , and $ <var:j> $ $ <var:e> * <nat:184> + <nat:228> * <var:E> + <nat:322> + <var:W> * <nat:40> + <nat:494> * <var:w> + <nat:482> * <var:p> + <nat:82> * <var:j> + <nat:346> * <var:v> + <nat:262> * <var:C> $ is even . \end{theorem} \begin{proof} Notice $ <nat:322> $ is obviously an even element of $ \mathbb{Z}^+ $ . Recall the adding of an even integer and an even number in $ \mathbb{N} $ will be an even element of $ \mathbb{N} $ . Notice the leading terms $ <nat:184> $ , $ <nat:228> $ , $ <nat:40> $ , $ <nat:494> $ , $ <nat:482> $ , $ <nat:82> $ , $ <nat:346> $ , and moreover $ <nat:262> $ must be even whole numbers . As a consequence , the pairs $ <var:e> * <nat:184> $ , $ <nat:228> * <var:E> $ , $ <nat:40> * <var:W> $ , $ <var:w> * <nat:494> $ , $ <nat:482> * <var:p> $ , $ <nat:82> * <var:j> $ , $ <var:v> * <nat:346> $ , and likewise $ <var:C> * <nat:262> $ is guaranteed to be even at the same time . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:C> <var:v> <var:w> <var:E> <var:e> <var:W> <var:p> <var:j> : nat , Nat . even ( <nat:184> * <var:e> + <nat:228> * <var:E> + <nat:40> * <var:W> + <nat:494> * <var:w> + <nat:482> * <var:p> + <nat:82> * <var:j> + <nat:346> * <var:v> + <nat:262> * <var:C> + <nat:322> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:322> = true ) . { auto . } repeat rewrite Nat . even_add . assert ( <genH> : Nat . even <nat:184> = true ) . { auto . } assert ( <genH> : Nat . even <nat:228> = true ) . { auto . } assert ( <genH> : Nat . even <nat:40> = true ) . { auto . } assert ( <genH> : Nat . even <nat:494> = true ) . { auto . } assert ( <genH> : Nat . even <nat:482> = true ) . { auto . } assert ( <genH> : Nat . even <nat:82> = true ) . { auto . } assert ( <genH> : Nat . even <nat:346> = true ) . { auto . } assert ( <genH> : Nat . even <nat:262> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:184> * <var:e> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:228> * <var:E> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:40> * <var:W> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:494> * <var:w> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:482> * <var:p> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:82> * <var:j> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:346> * <var:v> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:262> * <var:C> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 