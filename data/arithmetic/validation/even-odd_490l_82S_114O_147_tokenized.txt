\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:O> <nat:114> + <nat:147> + <nat:490> <var:l> + <nat:82> <var:S> $ must be odd . \end{theorem} \begin{proof} Observe that $ <nat:147> $ is guaranteed to be odd . We demonstrate the result is true . Notice the pair $ <var:S> <nat:82> $ is known to be even . This must be true since the number $ <nat:82> $ is guaranteed to be even . Adding on , recall the natural number $ <nat:490> $ is obviously an even whole number . Thus , $ <var:l> <nat:490> $ is even as well . The positive integer $ <nat:114> $ is guaranteed to be even . Accordingly , the product $ <var:O> <nat:114> $ must be even additionally . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:O> <var:l> <var:S> : nat , Nat . odd ( <nat:114> * <var:O> + <nat:490> * <var:l> + <nat:82> * <var:S> + <nat:147> ) = true . Proof . intros . assert ( <genH> : Nat . odd <nat:147> = true ) . { auto . } assert ( <genH> : Nat . even <nat:82> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:82> * <var:S> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:490> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:490> * <var:l> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:114> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:114> * <var:O> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 