\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} With the condition we have $ <var:d> = <var:c> \cdot <var:N> \cdot <var:A> \cdot <var:v> \cdot <var:I> \cdot <var:b> \cdot <var:t> \cdot <var:R> $ with some natural number $ <var:d> $ and so that $ <var:R> $ , $ <var:c> $ , $ <var:t> $ , $ <var:A> $ , $ <var:I> $ , $ <var:v> $ , $ <var:b> $ , $ <var:N> \geq <nat:2> $ taking some $ <var:t> $ , $ <var:R> $ , $ <var:b> $ , $ <var:N> $ , $ <var:A> $ , $ <var:I> $ , $ <var:c> $ , $ <var:v> \in \mathbb{N} $ , we claim that $ <var:d> $ is a <def:eight-composite> integer . Accordingly the natural number <nat:1663200> is a <def:eight-composite> natural number . \end{theorem} \begin{proof} Allow $ <var:A> = <nat:2> $ , $ <var:b> = <nat:11> $ , $ <var:t> = <nat:12> $ , $ <var:c> = <nat:5> $ , $ <var:N> = <nat:6> $ , $ <var:R> = <nat:10> $ , $ <var:I> = <nat:3> $ , $ <var:v> = <nat:7> $ . Note that $ <var:A> = <nat:2> $ , $ <var:I> = <nat:3> $ , $ <var:v> = <nat:7> $ , $ <var:N> = <nat:6> $ , $ <var:R> = <nat:10> $ , $ <var:t> = <nat:12> $ , $ <var:b> = <nat:11> $ and $ <var:c> = <nat:5> $ are greater than or equivalent to <nat:2> . What's more observe likewise $ <var:t> \times <var:N> \times <var:I> \times <var:v> \times <var:R> \times <var:A> \times <var:c> \times <var:b> = <nat:1663200> $ . This indicates <nat:1663200> is a <def:eight-composite> number . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:eight-composite> ( <var:d> : nat ) := exists <var:t> <var:R> <var:b> <var:N> <var:A> <var:I> <var:c> <var:v> : nat , ( <var:d> = <var:c> * <var:N> * <var:A> * <var:v> * <var:I> * <var:b> * <var:t> * <var:R> ) /\ ( <var:R> >= <nat:2> ) /\ ( <var:c> >= <nat:2> ) /\ ( <var:t> >= <nat:2> ) /\ ( <var:A> >= <nat:2> ) /\ ( <var:I> >= <nat:2> ) /\ ( <var:v> >= <nat:2> ) /\ ( <var:b> >= <nat:2> ) /\ ( <var:N> >= <nat:2> ) . Theorem <genP:1> : <def:eight-composite> <nat:1663200> . Proof . unfold <def:eight-composite> . exists <nat:12> . exists <nat:10> . exists <nat:11> . exists <nat:6> . exists <nat:2> . exists <nat:3> . exists <nat:5> . exists <nat:7> . assert ( <genH> : <nat:2> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:3> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:7> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:6> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:10> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:12> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:11> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:5> >= <nat:2> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 