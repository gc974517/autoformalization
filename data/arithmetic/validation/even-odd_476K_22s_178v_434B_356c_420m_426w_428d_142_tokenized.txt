\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:476> \cdot <var:K> + <nat:142> + <nat:22> \cdot <var:s> + <nat:178> \cdot <var:v> + <var:B> \cdot <nat:434> + <var:c> \cdot <nat:356> + <var:m> \cdot <nat:420> + <nat:426> \cdot <var:w> + <nat:428> \cdot <var:d> $ is guaranteed to be even . \end{theorem} \begin{proof} The products $ <var:w> <nat:426> $ , $ <nat:476> <var:K> $ , and likewise $ <nat:420> <var:m> $ are trivially even . Building on , the pairs $ <nat:356> <var:c> $ , $ <var:v> <nat:178> $ , and likewise $ <nat:434> <var:B> $ are trivially even numbers . Further , we know the product $ <var:s> <nat:22> $ is an even whole number since multiplying of an even number with an arbitrary number will be even . Likewise , $ <var:d> <nat:428> $ is known to be even from the knowledge multiplying of an even element of $ \mathbb{Z}^+ $ and a number in $ \mathbb{N} $ will be an even number . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:K> <var:s> <var:v> <var:B> <var:c> <var:m> <var:w> <var:d> : nat , Nat . even ( <nat:476> * <var:K> + <nat:22> * <var:s> + <nat:178> * <var:v> + <nat:434> * <var:B> + <nat:356> * <var:c> + <nat:420> * <var:m> + <nat:426> * <var:w> + <nat:428> * <var:d> + <nat:142> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:426> * <var:w> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:476> * <var:K> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:420> * <var:m> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:356> * <var:c> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:178> * <var:v> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:434> * <var:B> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:22> * <var:s> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:428> * <var:d> ) = true ) . { rewrite Nat . even_mul . auto . } repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 