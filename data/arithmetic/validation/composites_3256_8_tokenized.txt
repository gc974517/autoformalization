\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} There are some positive integers $ <var:W> $ , $ <var:O> $ , $ <var:j> $ , $ <var:L> $ , $ <var:w> $ , $ <var:P> $ , $ <var:B> $ , $ <var:f> $ satisfying the condition that $ <var:L> $ , $ <var:O> $ , $ <var:w> $ , $ <var:P> $ , $ <var:W> $ , $ <var:f> $ , $ <var:B> $ , and $ <var:j> \geq <nat:2> $ plus where the integer <nat:2661120> is the product between numbers $ <var:W> $ , $ <var:O> $ , $ <var:j> $ , $ <var:L> $ , $ <var:w> $ , $ <var:P> $ , $ <var:B> $ , $ <var:f> $ . \end{theorem} \begin{proof} Assume $ <var:L> = <nat:9> $ , $ <var:O> = <nat:10> $ , $ <var:f> = <nat:7> $ , $ <var:W> = <nat:4> $ , $ <var:P> = <nat:8> $ , $ <var:j> = <nat:11> $ , $ <var:B> = <nat:6> $ , and $ <var:w> = <nat:2> $ . We justify our result is valid for $ <nat:2> $ , $ <nat:11> $ , $ <nat:8> $ , $ <nat:6> $ , $ <nat:4> $ , $ <nat:10> $ , $ <nat:7> $ and $ <nat:9> $ are greater than or equal to <nat:2> plus considering $ <var:w> * <var:O> * <var:j> * <var:L> * <var:W> * <var:B> * <var:f> * <var:P> = <nat:2661120> = <nat:2> * <nat:10> * <nat:11> * <nat:9> * <nat:4> * <nat:6> * <nat:7> * <nat:8> $ . \end{proof} \end{document} 
~
Require Import Lia . Theorem <genP:1> : exists <var:W> <var:O> <var:j> <var:L> <var:w> <var:P> <var:B> <var:f> : nat , ( <var:L> >= <nat:2> ) /\ ( <var:O> >= <nat:2> ) /\ ( <var:w> >= <nat:2> ) /\ ( <var:P> >= <nat:2> ) /\ ( <var:W> >= <nat:2> ) /\ ( <var:f> >= <nat:2> ) /\ ( <var:B> >= <nat:2> ) /\ ( <var:j> >= <nat:2> ) /\ ( <nat:2661120> = <var:W> * <var:O> * <var:j> * <var:L> * <var:w> * <var:P> * <var:B> * <var:f> ) . Proof . exists <nat:4> . exists <nat:10> . exists <nat:11> . exists <nat:9> . exists <nat:2> . exists <nat:8> . exists <nat:6> . exists <nat:7> . assert ( <genH> : <nat:2> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:11> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:8> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:6> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:4> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:10> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:7> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:9> >= <nat:2> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 