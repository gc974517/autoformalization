\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Take $ <var:c> $ , $ <var:T> $ , $ <var:D> $ , $ <var:M> $ , $ <var:V> $ , $ <var:g> $ , $ <var:k> $ as integers satisfying the condition that $ <var:g> $ , $ <var:M> $ , $ <var:T> $ , $ <var:V> $ , $ <var:D> $ , $ <var:k> $ and $ <var:c> \geq <nat:2> $ and where the positive integer <nat:798336> is the product between natural numbers $ <var:c> $ , $ <var:T> $ , $ <var:D> $ , $ <var:M> $ , $ <var:V> $ , $ <var:g> $ and $ <var:k> $ . \end{theorem} \begin{proof} Take $ <var:c> = <nat:7> $ , $ <var:V> = <nat:2> $ , $ <var:M> = <nat:9> $ , $ <var:T> = <nat:8> $ , $ <var:D> = <nat:6> $ , $ <var:g> = <nat:12> $ , and $ <var:k> = <nat:11> $ . We present $ <nat:798336> = <var:g> \times <var:c> \times <var:k> \times <var:T> \times <var:V> \times <var:D> \times <var:M> $ and $ <var:g> $ , $ <var:c> $ , $ <var:D> $ , $ <var:V> $ , $ <var:M> $ , $ <var:T> $ , and $ <var:k> $ are larger than or equal to <nat:2> . Notice $ <var:T> = <nat:8> $ , $ <var:D> = <nat:6> $ , $ <var:c> = <nat:7> $ , $ <var:g> = <nat:12> $ , $ <var:V> = <nat:2> $ , $ <var:k> = <nat:11> $ , $ <var:M> = <nat:9> $ are larger than or equal to <nat:2> . \end{proof} \end{document} 
~
Require Import Lia . Theorem <genP:1> : exists <var:c> <var:T> <var:D> <var:M> <var:V> <var:g> <var:k> : nat , ( <var:g> >= <nat:2> ) /\ ( <var:M> >= <nat:2> ) /\ ( <var:T> >= <nat:2> ) /\ ( <var:V> >= <nat:2> ) /\ ( <var:D> >= <nat:2> ) /\ ( <var:k> >= <nat:2> ) /\ ( <var:c> >= <nat:2> ) /\ ( <nat:798336> = <var:c> * <var:T> * <var:D> * <var:M> * <var:V> * <var:g> * <var:k> ) . Proof . exists <nat:7> . exists <nat:8> . exists <nat:6> . exists <nat:9> . exists <nat:2> . exists <nat:12> . exists <nat:11> . assert ( <genH> : <nat:8> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:6> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:7> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:12> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:2> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:11> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:9> >= <nat:2> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 