\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Using some whole numbers $ <var:u> $ , $ <var:y> $ , $ <var:z> $ , $ <var:Z> $ , $ <var:n> $ , $ <var:l> $ , $ <var:D> $ , and $ <var:a> $ the formula $ <nat:397> + <var:u> * <nat:318> + <nat:128> * <var:y> + <nat:84> * <var:l> + <var:z> * <nat:172> + <nat:118> * <var:D> + <nat:142> * <var:a> + <nat:360> * <var:n> + <nat:38> * <var:Z> $ must be odd . \end{theorem} \begin{proof} We verify our lemma is proven . Observe that $ <nat:397> $ is odd . This main result is true since $ <nat:118> \times <var:D> + <var:a> \times <nat:142> + <var:y> \times <nat:128> + <nat:84> \times <var:l> + <var:Z> \times <nat:38> + <var:n> \times <nat:360> + <nat:318> \times <var:u> + <var:z> \times <nat:172> $ is obviously even . The product $ <nat:118> <var:D> $ is guaranteed to be even . This is proven from the knowledge the natural number $ <nat:118> $ is guaranteed to be even . Furthermore , the number $ <nat:38> $ is even . Hence , the product $ <var:Z> <nat:38> $ is guaranteed to be even in addition . We know that the product $ <var:l> <nat:84> $ is known to be even . This claim is proven since the leading term $ <nat:84> $ is trivially in itself an even positive integer . Likewise , notice $ <nat:142> <var:a> $ is guaranteed to be even because multiplying of an even number and an arbitrary number in $ \mathbb{N} $ must be an even natural number , and is true by reason that the whole number $ <nat:142> $ is known to be an even number in $ \mathbb{N} $ . Building on , the product $ <var:y> <nat:128> $ is guaranteed to be even because multiplying of an even natural with any number in $ \mathbb{Z}^+ $ will be an even element of $ \mathbb{N} $ , which is true from the fact the leading term $ <nat:128> $ is trivially even . In addition to this , the positive integer $ <nat:360> $ is obviously an even number . Therefore , the term $ <var:n> <nat:360> $ must be even additionally . The leading term $ <nat:318> $ is clearly an even number . Thus , $ <nat:318> <var:u> $ must be even in addition . Recall that the product $ <var:z> <nat:172> $ is guaranteed to be even from the knowledge taking the product between an even integer and any natural number is even plus the whole number $ <nat:172> $ is obviously even . This claim is true as a consequence that taking the product between an even positive integer with some number is guaranteed to be an even natural number . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:u> <var:y> <var:z> <var:Z> <var:n> <var:l> <var:D> <var:a> : nat , Nat . odd ( <nat:318> * <var:u> + <nat:128> * <var:y> + <nat:84> * <var:l> + <nat:172> * <var:z> + <nat:118> * <var:D> + <nat:142> * <var:a> + <nat:360> * <var:n> + <nat:38> * <var:Z> + <nat:397> ) = true . Proof . intros . assert ( <genH> : Nat . odd <nat:397> = true ) . { auto . } assert ( <genH> : Nat . even <nat:118> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:118> * <var:D> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:38> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:38> * <var:Z> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:84> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:84> * <var:l> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:142> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:142> * <var:a> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:128> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:128> * <var:y> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:360> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:360> * <var:n> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:318> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:318> * <var:u> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:172> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:172> * <var:z> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:318> * <var:u> + <nat:128> * <var:y> + <nat:84> * <var:l> + <nat:172> * <var:z> + <nat:118> * <var:D> + <nat:142> * <var:a> + <nat:360> * <var:n> + <nat:38> * <var:Z> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . rewrite <genH> . auto . Qed . 