\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:434> <var:g> + <var:J> <nat:354> + <nat:360> <var:F> + <nat:260> <var:T> + <var:Y> <nat:58> + <var:a> <nat:192> + <nat:205> $ will be odd with every unknowns $ <var:Y> $ , $ <var:g> $ , $ <var:F> $ , $ <var:a> $ , $ <var:T> $ , and $ <var:J> $ . \end{theorem} \begin{proof} We prove the sum $ <nat:354> <var:J> + <var:F> <nat:360> + <nat:260> <var:T> + <nat:192> <var:a> + <nat:434> <var:g> + <var:Y> <nat:58> + <nat:205> $ must be odd . Take note the formula $ <var:Y> \cdot <nat:58> + <nat:205> + <var:T> \cdot <nat:260> + <var:J> \cdot <nat:354> + <var:F> \cdot <nat:360> + <nat:434> \cdot <var:g> + <nat:192> \cdot <var:a> $ is guaranteed to be odd as a consequence that the sum $ <nat:260> <var:T> + <var:Y> <nat:58> + <var:J> <nat:354> + <var:F> <nat:360> + <var:g> <nat:434> + <var:a> <nat:192> $ is known as even . The positive integers $ <nat:260> $ , $ <nat:58> $ , $ <nat:354> $ , $ <nat:360> $ , $ <nat:434> $ , plus $ <nat:192> $ will be even . For this reason , the pairs $ <nat:260> \cdot <var:T> $ , $ <var:Y> \cdot <nat:58> $ , $ <var:J> \cdot <nat:354> $ , $ <nat:360> \cdot <var:F> $ , $ <var:g> \cdot <nat:434> $ , as well as $ <nat:192> \cdot <var:a> $ will be even in addition . The summation $ <var:T> \times <nat:260> + <var:F> \times <nat:360> + <nat:434> \times <var:g> + <var:Y> \times <nat:58> + <nat:192> \times <var:a> + <var:J> \times <nat:354> $ is guaranteed to be even because multiplying of an even natural with some element of $ \mathbb{Z}^+ $ is even . Take note that the totaling of an even number with an odd natural number will be in itself an odd integer . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:Y> <var:g> <var:F> <var:a> <var:T> <var:J> : nat , Nat . odd ( <nat:434> * <var:g> + <nat:354> * <var:J> + <nat:360> * <var:F> + <nat:260> * <var:T> + <nat:58> * <var:Y> + <nat:192> * <var:a> + <nat:205> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:260> = true ) . { auto . } assert ( <genH> : Nat . even <nat:58> = true ) . { auto . } assert ( <genH> : Nat . even <nat:354> = true ) . { auto . } assert ( <genH> : Nat . even <nat:360> = true ) . { auto . } assert ( <genH> : Nat . even <nat:434> = true ) . { auto . } assert ( <genH> : Nat . even <nat:192> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:260> * <var:T> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:58> * <var:Y> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:354> * <var:J> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:360> * <var:F> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:434> * <var:g> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:192> * <var:a> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:434> * <var:g> + <nat:354> * <var:J> + <nat:360> * <var:F> + <nat:260> * <var:T> + <nat:58> * <var:Y> + <nat:192> * <var:a> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . auto . Qed . 