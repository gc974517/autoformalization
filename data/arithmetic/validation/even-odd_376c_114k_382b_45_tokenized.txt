\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:376> \cdot <var:c> + <var:k> \cdot <nat:114> + <nat:45> + <nat:382> \cdot <var:b> $ is guaranteed to be odd assuming all unknowns $ <var:c> $ , $ <var:k> $ , and $ <var:b> $ . \end{theorem} \begin{proof} It can be shown that the sum $ <nat:45> + <var:c> <nat:376> + <var:k> <nat:114> + <nat:382> <var:b> $ is known to be odd by reason that the summation $ <nat:376> <var:c> + <nat:114> <var:k> + <var:b> <nat:382> $ is obviously even . Notice the summing between an even positive integer with an even element of $ \mathbb{N} $ is guaranteed to be even . Notice $ <nat:382> \times <var:b> $ is obviously an even whole number . This holds from the fact the number $ <nat:382> $ is known as clearly an even element of $ \mathbb{Z}^+ $ . Remember that the product $ <var:k> \times <nat:114> $ is known to be an even element of $ \mathbb{Z}^+ $ . This must be true by reason that multiplying between an even natural number with some natural number must be even . This claim holds since the whole number $ <nat:114> $ is guaranteed to be even . Building on , take note that the number $ <nat:376> $ is known as even . Thus , the pair $ <nat:376> \times <var:c> $ must be even too . It can be shown that the lemma holds . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:c> <var:k> <var:b> : nat , Nat . odd ( <nat:376> * <var:c> + <nat:114> * <var:k> + <nat:382> * <var:b> + <nat:45> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:382> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:382> * <var:b> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:114> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:114> * <var:k> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:376> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:376> * <var:c> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:376> * <var:c> + <nat:114> * <var:k> + <nat:382> * <var:b> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . auto . Qed . 