\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \newtheorem{definition}{Definition} \begin{document} \begin{definition} Under the condition there exist positive integers $ <var:G> $ , $ <var:b> $ , $ <var:f> $ , $ <var:J> $ , $ <var:S> $ , $ <var:j> $ , $ <var:o> $ then we define that some positive integer $ <var:E> $ is called a <def:seven-composite> number assuming $ <var:j> * <var:G> * <var:f> * <var:S> * <var:J> * <var:b> * <var:o> = <var:E> $ . \end{definition} \begin{theorem} The natural number <nat:285120> is a <def:seven-composite> positive integer . \end{theorem} \begin{proof} Recall a <def:seven-composite> integer is the multiplication between $ <var:G> $ , $ <var:b> $ , $ <var:j> $ , $ <var:J> $ , $ <var:S> $ , $ <var:o> $ , and $ <var:f> $ where $ <var:o> $ , $ <var:j> $ , $ <var:G> $ , $ <var:S> $ , $ <var:J> $ , $ <var:f> $ , and $ <var:b> > <nat:1> $ . Observe that $ <nat:285120> = <var:b> \times <var:o> \times <var:j> \times <var:J> \times <var:f> \times <var:G> \times <var:S> $ gives $ <var:f> = <nat:9> $ , $ <var:G> = <nat:5> $ , $ <var:o> = <nat:12> $ , $ <var:S> = <nat:2> $ , $ <var:J> = <nat:11> $ , $ <var:j> = <nat:8> $ , and $ <var:b> = <nat:3> $ . This yields <nat:285120> is a <def:seven-composite> integer . Thus , <nat:285120> is a <def:seven-composite> number has been validated . Hence , <nat:285120> is the multiplication between $ <var:J> $ , $ <var:f> $ , $ <var:G> $ , $ <var:b> $ , $ <var:S> $ , $ <var:j> $ , $ <var:o> \in \mathbb{N} $ is true has been proven . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:seven-composite> ( <var:E> : nat ) := exists <var:G> <var:b> <var:f> <var:J> <var:S> <var:j> <var:o> : nat , ( <var:j> * <var:G> * <var:f> * <var:S> * <var:J> * <var:b> * <var:o> = <var:E> ) . Theorem <genP:1> : <def:seven-composite> <nat:285120> . Proof . unfold <def:seven-composite> . exists <nat:5> . exists <nat:3> . exists <nat:9> . exists <nat:11> . exists <nat:2> . exists <nat:8> . exists <nat:12> . repeat split . all : lia . Qed . 