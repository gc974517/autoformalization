\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:94> \times <var:P> + <var:J> \times <nat:116> + <nat:160> \times <var:W> + <nat:188> \times <var:h> + <nat:426> \times <var:O> + <nat:114> \times <var:Q> + <nat:289> $ must be odd using some terms $ <var:O> $ , $ <var:W> $ , $ <var:J> $ , $ <var:P> $ , $ <var:h> $ , and $ <var:Q> $ . \end{theorem} \begin{proof} Notice the multiplication of even integers must be even . The natural number $ <nat:188> $ is clearly an even positive integer We know that the leading term $ <nat:114> $ is an even number in $ \mathbb{N} $ Recall that the whole number $ <nat:116> $ is known as an even number in $ \mathbb{Z}^+ $ What's more , the coefficients $ <nat:426> $ and moreover $ <nat:160> $ are clearly even In addition to this , take note that the leading term $ <nat:94> $ is known as an even number in $ \mathbb{N} $ It can be proven that that the sum $ <var:Q> * <nat:114> + <nat:160> * <var:W> + <nat:289> + <nat:94> * <var:P> + <var:h> * <nat:188> + <nat:426> * <var:O> + <nat:116> * <var:J> $ must be odd . Recall that the totaling of an even natural number and an odd element of $ \mathbb{Z}^+ $ is odd . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:O> <var:W> <var:J> <var:P> <var:h> <var:Q> : nat , Nat . odd ( <nat:94> * <var:P> + <nat:116> * <var:J> + <nat:160> * <var:W> + <nat:188> * <var:h> + <nat:426> * <var:O> + <nat:114> * <var:Q> + <nat:289> ) = true . Proof . intros . rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . repeat rewrite Nat . even_mul . assert ( <genH> : Nat . even <nat:188> = true ) . { auto . } assert ( <genH> : Nat . even <nat:114> = true ) . { auto . } assert ( <genH> : Nat . even <nat:116> = true ) . { auto . } assert ( <genH> : Nat . even <nat:426> = true ) . { auto . } assert ( <genH> : Nat . even <nat:160> = true ) . { auto . } assert ( <genH> : Nat . even <nat:94> = true ) . { auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 