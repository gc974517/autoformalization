\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Taking every $ <var:X> $ , $ <var:B> $ , $ <var:f> $ , $ <var:k> $ , $ <var:N> $ , and $ <var:a> \in \mathbb{N} $ the expression $ <nat:361> + <nat:216> * <var:f> + <nat:328> * <var:B> + <var:X> * <nat:134> + <var:N> * <nat:8> + <nat:432> * <var:k> + <nat:68> * <var:a> $ will be odd . \end{theorem} \begin{proof} Our result holds because $ <nat:134> * <var:X> + <nat:68> * <var:a> + <nat:8> * <var:N> + <var:k> * <nat:432> + <var:B> * <nat:328> + <var:f> * <nat:216> $ is trivially even . Observe the terms $ <var:k> * <nat:432> $ , $ <nat:68> * <var:a> $ , and moreover $ <nat:8> * <var:N> $ are clearly even . $ <var:B> * <nat:328> $ is guaranteed to be even . On top of this , take note that $ <var:X> * <nat:134> $ is known as an even integer . This fact must be true because the multiplication of an even number with any number is guaranteed to be instrinsically an even natural number . Notice that the product $ <var:f> * <nat:216> $ is trivially an even integer . This holds by reason that the multiplication between an even number in $ \mathbb{N} $ and a integer is guaranteed to be an even positive integer . See that the addition of even elements of $ \mathbb{Z}^+ $ and an odd positive integer must be odd . Take note $ <nat:361> $ is odd . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:X> <var:B> <var:f> <var:k> <var:N> <var:a> : nat , Nat . odd ( <nat:216> * <var:f> + <nat:328> * <var:B> + <nat:134> * <var:X> + <nat:8> * <var:N> + <nat:432> * <var:k> + <nat:68> * <var:a> + <nat:361> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:432> * <var:k> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:68> * <var:a> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:8> * <var:N> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:328> * <var:B> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:134> * <var:X> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:216> * <var:f> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:216> * <var:f> + <nat:328> * <var:B> + <nat:134> * <var:X> + <nat:8> * <var:N> + <nat:432> * <var:k> + <nat:68> * <var:a> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . assert ( <genH> : Nat . odd <nat:361> = true ) . { auto . } rewrite <- Nat . negb_even . rewrite <genH> . rewrite <genH> . auto . Qed . 