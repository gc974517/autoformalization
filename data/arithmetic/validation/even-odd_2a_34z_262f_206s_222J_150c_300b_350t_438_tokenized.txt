\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Assuming any positive numbers $ <var:c> $ , $ <var:t> $ , $ <var:J> $ , $ <var:z> $ , $ <var:f> $ , $ <var:b> $ , $ <var:a> $ , and $ <var:s> $ the summation $ <nat:438> + <nat:222> \cdot <var:J> + <var:s> \cdot <nat:206> + <nat:300> \cdot <var:b> + <var:c> \cdot <nat:150> + <var:t> \cdot <nat:350> + <nat:2> \cdot <var:a> + <var:f> \cdot <nat:262> + <nat:34> \cdot <var:z> $ will be even . \end{theorem} \begin{proof} We know $ <nat:438> $ is obviously an even positive integer . It can be checked that the formula $ <nat:438> + <var:a> <nat:2> + <var:c> <nat:150> + <nat:350> <var:t> + <nat:300> <var:b> + <var:J> <nat:222> + <nat:34> <var:z> + <var:f> <nat:262> + <var:s> <nat:206> $ will be even using the understanding the addition between even natural numbers concurrently and an even element of $ \mathbb{N} $ is guaranteed to be obviously an even number in $ \mathbb{Z}^+ $ . It can be checked that $ <var:a> \cdot <nat:2> + <var:z> \cdot <nat:34> + <nat:262> \cdot <var:f> + <var:s> \cdot <nat:206> + <var:J> \cdot <nat:222> + <nat:150> \cdot <var:c> + <nat:300> \cdot <var:b> + <var:t> \cdot <nat:350> $ is guaranteed to be even . In addition , remember the terms $ <nat:2> * <var:a> $ , $ <var:z> * <nat:34> $ , $ <var:f> * <nat:262> $ , $ <nat:206> * <var:s> $ , $ <nat:222> * <var:J> $ , $ <nat:150> * <var:c> $ , $ <nat:300> * <var:b> $ , and moreover $ <var:t> * <nat:350> $ are trivially even whole numbers as a consequence that taking the product of an even number with an arbitrary number in $ \mathbb{N} $ must be even in addition to the coefficients $ <nat:2> $ , $ <nat:34> $ , $ <nat:262> $ , $ <nat:206> $ , $ <nat:222> $ , $ <nat:150> $ , $ <nat:300> $ , and $ <nat:350> $ are known to be even naturals . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:c> <var:t> <var:J> <var:z> <var:f> <var:b> <var:a> <var:s> : nat , Nat . even ( <nat:222> * <var:J> + <nat:206> * <var:s> + <nat:300> * <var:b> + <nat:150> * <var:c> + <nat:350> * <var:t> + <nat:2> * <var:a> + <nat:262> * <var:f> + <nat:34> * <var:z> + <nat:438> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:438> = true ) . { auto . } rewrite Nat . even_add . assert ( <genH> : Nat . even <nat:2> = true ) . { auto . } assert ( <genH> : Nat . even <nat:34> = true ) . { auto . } assert ( <genH> : Nat . even <nat:262> = true ) . { auto . } assert ( <genH> : Nat . even <nat:206> = true ) . { auto . } assert ( <genH> : Nat . even <nat:222> = true ) . { auto . } assert ( <genH> : Nat . even <nat:150> = true ) . { auto . } assert ( <genH> : Nat . even <nat:300> = true ) . { auto . } assert ( <genH> : Nat . even <nat:350> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:2> * <var:a> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:34> * <var:z> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:262> * <var:f> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:206> * <var:s> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:222> * <var:J> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:150> * <var:c> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:300> * <var:b> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:350> * <var:t> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:222> * <var:J> + <nat:206> * <var:s> + <nat:300> * <var:b> + <nat:150> * <var:c> + <nat:350> * <var:t> + <nat:2> * <var:a> + <nat:262> * <var:f> + <nat:34> * <var:z> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite <genH> . rewrite <genH> . auto . Qed . 