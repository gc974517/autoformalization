\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Under the condition we have $ <var:N> = <var:L> \times <var:g> \times <var:r> \times <var:t> \times <var:p> \times <var:C> \times <var:v> $ assuming $ <var:N> \in \mathbb{Z}^+ $ and satisfying the condition that $ <var:p> $ , $ <var:L> $ , $ <var:v> $ , $ <var:g> $ , $ <var:C> $ , $ <var:t> $ , and $ <var:r> \geq <nat:2> $ given some $ <var:t> $ , $ <var:r> $ , $ <var:v> $ , $ <var:p> $ , $ <var:g> $ , $ <var:L> $ , $ <var:C> \in \mathbb{Z}^+ $ , then say that $ <var:N> $ is a <def:seven-composite> whole number . For this reason the natural number <nat:237600> is a <def:seven-composite> whole number . \end{theorem} \begin{proof} Let $ <var:C> = <nat:2> $ , $ <var:t> = <nat:5> $ , $ <var:p> = <nat:10> $ , $ <var:g> = <nat:3> $ , $ <var:r> = <nat:11> $ , $ <var:v> = <nat:6> $ , and $ <var:L> = <nat:12> $ . Note that $ <nat:3> $ , $ <nat:5> $ , $ <nat:11> $ , $ <nat:10> $ , $ <nat:2> $ , $ <nat:12> $ and $ <nat:6> $ are more than or equivalent to <nat:2> . As a consequence , $ <var:p> \cdot <var:C> \cdot <var:v> \cdot <var:r> \cdot <var:t> \cdot <var:L> \cdot <var:g> = <nat:237600> $ is proven . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:seven-composite> ( <var:N> : nat ) := exists <var:t> <var:r> <var:v> <var:p> <var:g> <var:L> <var:C> : nat , ( <var:N> = <var:L> * <var:g> * <var:r> * <var:t> * <var:p> * <var:C> * <var:v> ) /\ ( <var:p> >= <nat:2> ) /\ ( <var:L> >= <nat:2> ) /\ ( <var:v> >= <nat:2> ) /\ ( <var:g> >= <nat:2> ) /\ ( <var:C> >= <nat:2> ) /\ ( <var:t> >= <nat:2> ) /\ ( <var:r> >= <nat:2> ) . Theorem <genP:1> : <def:seven-composite> <nat:237600> . Proof . unfold <def:seven-composite> . exists <nat:5> . exists <nat:11> . exists <nat:6> . exists <nat:10> . exists <nat:3> . exists <nat:12> . exists <nat:2> . assert ( <genH> : <nat:3> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:5> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:11> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:10> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:2> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:12> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:6> >= <nat:2> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 