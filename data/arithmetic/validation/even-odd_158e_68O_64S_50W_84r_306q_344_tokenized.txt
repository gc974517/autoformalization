\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:68> \cdot <var:O> + <nat:344> + <nat:50> \cdot <var:W> + <nat:64> \cdot <var:S> + <nat:84> \cdot <var:r> + <var:q> \cdot <nat:306> + <var:e> \cdot <nat:158> $ must be even . \end{theorem} \begin{proof} We apply the assumption the understanding that the formula $ <nat:344> + <nat:64> <var:S> + <nat:306> <var:q> + <var:O> <nat:68> + <nat:158> <var:e> + <var:r> <nat:84> + <nat:50> <var:W> $ is clearly even by reason that $ <nat:84> * <var:r> + <nat:158> * <var:e> + <var:q> * <nat:306> + <nat:64> * <var:S> + <var:W> * <nat:50> + <nat:68> * <var:O> $ is known to be even . The pair $ <var:S> \cdot <nat:64> $ is even since multiplying between an even positive integer and an arbitrary positive integer must be an even number in $ \mathbb{N} $ additionally the coefficient $ <nat:64> $ is guaranteed to be even . The products $ <var:e> \cdot <nat:158> $ as well as $ <var:O> \cdot <nat:68> $ are known to be even naturals from the knowledge the natural numbers $ <nat:158> $ plus $ <nat:68> $ are clearly even . In addition to this , the positive integer $ <nat:50> $ is known as even . So , the pair $ <nat:50> \cdot <var:W> $ is guaranteed to be even as well . In addition to this , we know that the product $ <nat:306> \cdot <var:q> $ is known to be an even positive integer since the integer $ <nat:306> $ is trivially even . In addition to this , recall the product $ <nat:84> \cdot <var:r> $ is an even integer because the product of an even positive integer with a element of $ \mathbb{N} $ must be by definition an even integer plus the leading term $ <nat:84> $ is known to be even . Our main result is true from the fact multiplying of an even positive integer with an arbitrary number in $ \mathbb{N} $ must be instrinsically an even whole number . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:O> <var:W> <var:S> <var:r> <var:q> <var:e> : nat , Nat . even ( <nat:68> * <var:O> + <nat:50> * <var:W> + <nat:64> * <var:S> + <nat:84> * <var:r> + <nat:306> * <var:q> + <nat:158> * <var:e> + <nat:344> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:64> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:64> * <var:S> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:158> = true ) . { auto . } assert ( <genH> : Nat . even <nat:68> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:158> * <var:e> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:68> * <var:O> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:50> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:50> * <var:W> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:306> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:306> * <var:q> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:84> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:84> * <var:r> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:68> * <var:O> + <nat:50> * <var:W> + <nat:64> * <var:S> + <nat:84> * <var:r> + <nat:306> * <var:q> + <nat:158> * <var:e> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . even_add . rewrite <genH> . auto . Qed . 