\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:290> \times <var:i> + <var:K> \times <nat:114> + <var:L> \times <nat:276> + <nat:244> \times <var:E> + <nat:107> + <nat:238> \times <var:h> + <nat:106> \times <var:d> $ is odd . \end{theorem} \begin{proof} We know that the numbers $ <nat:290> $ , $ <nat:106> $ , $ <nat:114> $ , $ <nat:276> $ , in addition to $ <nat:244> $ will be even whole numbers . Therefore , the pairs $ <var:i> \times <nat:290> $ , $ <var:d> \times <nat:106> $ , $ <nat:114> \times <var:K> $ , $ <nat:276> \times <var:L> $ , in addition to $ <var:E> \times <nat:244> $ will be even additionally . What's more , remember the integer $ <nat:238> $ is known to be even . Therefore , the pair $ <var:h> \times <nat:238> $ must be even also . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:i> <var:K> <var:L> <var:E> <var:h> <var:d> : nat , Nat . odd ( <nat:290> * <var:i> + <nat:114> * <var:K> + <nat:276> * <var:L> + <nat:244> * <var:E> + <nat:238> * <var:h> + <nat:106> * <var:d> + <nat:107> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:290> = true ) . { auto . } assert ( <genH> : Nat . even <nat:106> = true ) . { auto . } assert ( <genH> : Nat . even <nat:114> = true ) . { auto . } assert ( <genH> : Nat . even <nat:276> = true ) . { auto . } assert ( <genH> : Nat . even <nat:244> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:290> * <var:i> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:106> * <var:d> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:114> * <var:K> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:276> * <var:L> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:244> * <var:E> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:238> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:238> * <var:h> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 