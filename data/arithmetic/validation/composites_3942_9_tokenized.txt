\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \newtheorem{definition}{Definition} \begin{document} \begin{definition} Assume $ <var:i> $ , $ <var:j> $ , $ <var:D> $ , $ <var:u> $ , $ <var:l> $ , $ <var:V> $ , $ <var:y> $ , $ <var:x> $ , $ <var:v> $ as whole numbers larger than or equivalent to <nat:2> . We assume that $ <var:w> \in \mathbb{N} $ will be considered to be a <def:nine-composite> integer given $ <var:j> * <var:x> * <var:v> * <var:l> * <var:V> * <var:y> * <var:i> * <var:u> * <var:D> = <var:w> $ . \end{definition} \begin{theorem} $ <var:w> = <nat:11975040> $ is a <def:nine-composite> whole number . \end{theorem} \begin{proof} Take $ <var:x> = <nat:9> $ , $ <var:u> = <nat:11> $ , $ <var:V> = <nat:10> $ , $ <var:y> = <nat:6> $ , $ <var:v> = <nat:2> $ , $ <var:l> = <nat:12> $ , $ <var:i> = <nat:7> $ , $ <var:D> = <nat:4> $ , and $ <var:j> = <nat:3> $ . Observe $ <nat:4> \times <nat:2> \times <nat:6> \times <nat:10> \times <nat:9> \times <nat:3> \times <nat:11> \times <nat:7> \times <nat:12> = <nat:11975040> = <var:D> \times <var:v> \times <var:y> \times <var:V> \times <var:x> \times <var:j> \times <var:u> \times <var:i> \times <var:l> $ . What's more notice $ <nat:9> $ , $ <nat:10> $ , $ <nat:4> $ , $ <nat:11> $ , $ <nat:3> $ , $ <nat:7> $ , $ <nat:12> $ , $ <nat:6> $ and $ <nat:2> \geq <nat:2> $ . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:nine-composite> ( <var:w> : nat ) := exists <var:i> <var:j> <var:D> <var:u> <var:l> <var:V> <var:y> <var:x> <var:v> : nat , ( <var:i> >= <nat:2> ) /\ ( <var:j> >= <nat:2> ) /\ ( <var:D> >= <nat:2> ) /\ ( <var:u> >= <nat:2> ) /\ ( <var:l> >= <nat:2> ) /\ ( <var:V> >= <nat:2> ) /\ ( <var:y> >= <nat:2> ) /\ ( <var:x> >= <nat:2> ) /\ ( <var:v> >= <nat:2> ) /\ ( <var:j> * <var:x> * <var:v> * <var:l> * <var:V> * <var:y> * <var:i> * <var:u> * <var:D> = <var:w> ) . Theorem <genP:1> : <def:nine-composite> <nat:11975040> . Proof . unfold <def:nine-composite> . exists <nat:7> . exists <nat:3> . exists <nat:4> . exists <nat:11> . exists <nat:12> . exists <nat:10> . exists <nat:6> . exists <nat:9> . exists <nat:2> . assert ( <genH> : <nat:9> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:10> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:4> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:11> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:3> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:7> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:12> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:6> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:2> >= <nat:2> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 