\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:h> \cdot <nat:48> + <nat:260> \cdot <var:z> + <var:C> \cdot <nat:340> + <nat:334> + <var:t> \cdot <nat:448> + <nat:16> \cdot <var:L> + <var:P> \cdot <nat:278> + <nat:248> \cdot <var:S> + <var:p> \cdot <nat:330> $ is even . \end{theorem} \begin{proof} This theorem must be true because $ <nat:330> \times <var:p> + <nat:248> \times <var:S> + <nat:340> \times <var:C> + <nat:48> \times <var:h> + <nat:260> \times <var:z> + <nat:448> \times <var:t> + <nat:16> \times <var:L> + <var:P> \times <nat:278> $ is clearly even . See the whole numbers $ <nat:330> $ , $ <nat:48> $ , $ <nat:16> $ , $ <nat:340> $ , and moreover $ <nat:248> $ are even Furthermore , the leading terms $ <nat:278> $ and moreover $ <nat:260> $ are clearly even whole numbers In addition to this , the integer $ <nat:448> $ is an even element of $ \mathbb{N} $ \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:h> <var:z> <var:C> <var:t> <var:L> <var:P> <var:S> <var:p> : nat , Nat . even ( <nat:48> * <var:h> + <nat:260> * <var:z> + <nat:340> * <var:C> + <nat:448> * <var:t> + <nat:16> * <var:L> + <nat:278> * <var:P> + <nat:248> * <var:S> + <nat:330> * <var:p> + <nat:334> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:330> = true ) . { auto . } assert ( <genH> : Nat . even <nat:48> = true ) . { auto . } assert ( <genH> : Nat . even <nat:16> = true ) . { auto . } assert ( <genH> : Nat . even <nat:340> = true ) . { auto . } assert ( <genH> : Nat . even <nat:248> = true ) . { auto . } assert ( <genH> : Nat . even <nat:278> = true ) . { auto . } assert ( <genH> : Nat . even <nat:260> = true ) . { auto . } assert ( <genH> : Nat . even <nat:448> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:48> * <var:h> + <nat:260> * <var:z> + <nat:340> * <var:C> + <nat:448> * <var:t> + <nat:16> * <var:L> + <nat:278> * <var:P> + <nat:248> * <var:S> + <nat:330> * <var:p> ) = true ) . { repeat rewrite Nat . even_add . repeat rewrite Nat . even_mul . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . even_add . rewrite <genH> . auto . Qed . 