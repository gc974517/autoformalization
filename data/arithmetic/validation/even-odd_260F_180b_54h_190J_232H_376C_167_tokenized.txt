\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Using positive numbers $ <var:C> $ , $ <var:H> $ , $ <var:J> $ , $ <var:h> $ , $ <var:b> $ , and $ <var:F> $ the summation $ <nat:167> + <var:h> * <nat:54> + <var:b> * <nat:180> + <var:F> * <nat:260> + <nat:190> * <var:J> + <var:H> * <nat:232> + <nat:376> * <var:C> $ is odd . \end{theorem} \begin{proof} The summing of an even integer and an odd whole number will be odd . Observe that $ <nat:167> $ is odd . It can be justified that that $ <var:F> * <nat:260> + <nat:180> * <var:b> + <nat:54> * <var:h> + <var:J> * <nat:190> + <var:H> * <nat:232> + <var:C> * <nat:376> $ is clearly even . Take note that the summing between even integers collectively and an even number in $ \mathbb{Z}^+ $ must be even . See that the whole numbers $ <nat:190> $ and likewise $ <nat:376> $ will be even What's more , the positive integer $ <nat:54> $ is known to be even In addition , the number $ <nat:232> $ is trivially even Notice that the natural number $ <nat:260> $ is known as an even natural number Adding on , the coefficient $ <nat:180> $ is clearly an even integer and from the fact the product between an even integer with an arbitrary positive integer must be by its very nature an even number . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:C> <var:H> <var:J> <var:h> <var:b> <var:F> : nat , Nat . odd ( <nat:54> * <var:h> + <nat:180> * <var:b> + <nat:260> * <var:F> + <nat:190> * <var:J> + <nat:232> * <var:H> + <nat:376> * <var:C> + <nat:167> ) = true . Proof . intros . rewrite Nat . odd_add . assert ( <genH> : Nat . odd <nat:167> = true ) . { auto . } assert ( <genH> : Nat . even <nat:190> = true ) . { auto . } assert ( <genH> : Nat . even <nat:376> = true ) . { auto . } assert ( <genH> : Nat . even <nat:54> = true ) . { auto . } assert ( <genH> : Nat . even <nat:232> = true ) . { auto . } assert ( <genH> : Nat . even <nat:260> = true ) . { auto . } assert ( <genH> : Nat . even <nat:180> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:54> * <var:h> + <nat:180> * <var:b> + <nat:260> * <var:F> + <nat:190> * <var:J> + <nat:232> * <var:H> + <nat:376> * <var:C> ) = true ) . { repeat rewrite Nat . even_add . repeat rewrite Nat . even_mul . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite <- Nat . negb_even . rewrite <genH> . rewrite <genH> . auto . Qed . 