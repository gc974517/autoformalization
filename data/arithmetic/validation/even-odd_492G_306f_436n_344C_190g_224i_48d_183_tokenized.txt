\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} With some unknowns $ <var:n> $ , $ <var:f> $ , $ <var:g> $ , $ <var:G> $ , $ <var:C> $ , $ <var:d> $ , and $ <var:i> $ the sum $ <var:G> \times <nat:492> + <nat:306> \times <var:f> + <var:n> \times <nat:436> + <nat:344> \times <var:C> + <var:g> \times <nat:190> + <nat:224> \times <var:i> + <nat:183> + <var:d> \times <nat:48> $ is guaranteed to be odd . \end{theorem} \begin{proof} It can be checked that our proposition holds . We know that the products $ <var:f> \times <nat:306> $ , $ <var:g> \times <nat:190> $ , $ <nat:224> \times <var:i> $ , $ <var:d> \times <nat:48> $ , $ <nat:344> \times <var:C> $ , as well as $ <nat:436> \times <var:n> $ are trivially even natural numbers from the knowledge multiplying of an even element of $ \mathbb{Z}^+ $ with a number in $ \mathbb{Z}^+ $ is guaranteed to be even . The pair $ <var:G> \times <nat:492> $ is an even number . This claim must be true since the multiplication between an even integer and some element of $ \mathbb{Z}^+ $ is guaranteed to be even . The adding of even natural numbers collectively and an odd element of $ \mathbb{N} $ is odd . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:n> <var:f> <var:g> <var:G> <var:C> <var:d> <var:i> : nat , Nat . odd ( <nat:492> * <var:G> + <nat:306> * <var:f> + <nat:436> * <var:n> + <nat:344> * <var:C> + <nat:190> * <var:g> + <nat:224> * <var:i> + <nat:48> * <var:d> + <nat:183> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:306> * <var:f> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:190> * <var:g> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:224> * <var:i> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:48> * <var:d> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:344> * <var:C> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:436> * <var:n> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:492> * <var:G> ) = true ) . { rewrite Nat . even_mul . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 