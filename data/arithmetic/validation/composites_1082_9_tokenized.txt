\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \newtheorem{definition}{Definition} \begin{document} \begin{definition} There exist numbers $ <var:r> $ , $ <var:k> $ , $ <var:t> $ , $ <var:p> $ , $ <var:h> $ , $ <var:U> $ , $ <var:A> $ , $ <var:S> $ , $ <var:x> $ more than or equal to <nat:2> . Define that $ <var:j> \in \mathbb{N} $ is called a <def:nine-composite> positive integer given $ <var:r> \times <var:p> \times <var:x> \times <var:k> \times <var:h> \times <var:t> \times <var:U> \times <var:A> \times <var:S> = <var:j> $ . \end{definition} \begin{theorem} $ <nat:10644480> = <var:j> $ is a <def:nine-composite> natural number . \end{theorem} \begin{proof} Recall that <nat:10644480> is a <def:nine-composite> number granted <nat:10644480> is the multiplication between whole numbers $ <var:k> $ , $ <var:t> $ , $ <var:U> $ , $ <var:h> $ , $ <var:r> $ , $ <var:A> $ , $ <var:S> $ , $ <var:p> $ and $ <var:x> $ greater than or equivalent to <nat:2> . We show <nat:10644480> is a <def:nine-composite> natural number by reason of $ <nat:10> $ , $ <nat:4> $ , $ <nat:6> $ , $ <nat:2> $ , $ <nat:7> $ , $ <nat:11> $ , $ <nat:3> $ , $ <nat:8> $ , and $ <nat:12> $ are more than or equivalent to <nat:2> and by reason of $ <var:S> \cdot <var:h> \cdot <var:k> \cdot <var:t> \cdot <var:p> \cdot <var:x> \cdot <var:A> \cdot <var:r> \cdot <var:U> = <nat:10644480> $ produces $ <var:U> = <nat:2> $ , $ <var:h> = <nat:6> $ , $ <var:A> = <nat:11> $ , $ <var:t> = <nat:8> $ , $ <var:S> = <nat:4> $ , $ <var:r> = <nat:3> $ , $ <var:p> = <nat:7> $ , $ <var:k> = <nat:12> $ , $ <var:x> = <nat:10> $ . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:nine-composite> ( <var:j> : nat ) := exists <var:r> <var:k> <var:t> <var:p> <var:h> <var:U> <var:A> <var:S> <var:x> : nat , ( <var:r> >= <nat:2> ) /\ ( <var:k> >= <nat:2> ) /\ ( <var:t> >= <nat:2> ) /\ ( <var:p> >= <nat:2> ) /\ ( <var:h> >= <nat:2> ) /\ ( <var:U> >= <nat:2> ) /\ ( <var:A> >= <nat:2> ) /\ ( <var:S> >= <nat:2> ) /\ ( <var:x> >= <nat:2> ) /\ ( <var:r> * <var:p> * <var:x> * <var:k> * <var:h> * <var:t> * <var:U> * <var:A> * <var:S> = <var:j> ) . Theorem <genP:1> : <def:nine-composite> <nat:10644480> . Proof . unfold <def:nine-composite> . assert ( <genH> : <nat:10> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:4> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:6> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:2> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:7> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:11> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:3> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:8> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:12> >= <nat:2> ) . { lia . } exists <nat:3> . exists <nat:12> . exists <nat:8> . exists <nat:7> . exists <nat:6> . exists <nat:2> . exists <nat:11> . exists <nat:4> . exists <nat:10> . repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 