\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:152> \cdot <var:i> + <nat:422> \cdot <var:I> + <nat:376> \cdot <var:F> + <nat:320> \cdot <var:u> + <nat:244> \cdot <var:q> + <nat:41> + <nat:180> \cdot <var:E> + <nat:460> \cdot <var:w> + <var:v> \cdot <nat:136> $ is odd . \end{theorem} \begin{proof} We show the expression $ <var:E> \times <nat:180> + <nat:422> \times <var:I> + <var:v> \times <nat:136> + <nat:376> \times <var:F> + <nat:460> \times <var:w> + <nat:152> \times <var:i> + <nat:320> \times <var:u> + <nat:41> + <var:q> \times <nat:244> $ is guaranteed to be odd . Recall that $ <nat:41> $ is clearly odd . We work with the assumption the knowledge that the formula $ <nat:244> <var:q> + <var:F> <nat:376> + <nat:180> <var:E> + <var:i> <nat:152> + <nat:320> <var:u> + <nat:460> <var:w> + <var:I> <nat:422> + <nat:136> <var:v> $ is even . Remember the product $ <nat:460> \times <var:w> $ is known as an even integer . Notice that the terms $ <var:u> \times <nat:320> $ and $ <var:v> \times <nat:136> $ are guaranteed to be even integers . In addition , we know the products $ <nat:180> \times <var:E> $ , $ <nat:244> \times <var:q> $ , and moreover $ <nat:422> \times <var:I> $ are known to be even . Building on , remember that $ <var:i> \times <nat:152> $ is clearly even . Notice the term $ <var:F> \times <nat:376> $ is known as even . As a consequence that the product between even elements of $ \mathbb{Z}^+ $ with a whole number is guaranteed to be even our proposition is true . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:i> <var:I> <var:F> <var:u> <var:q> <var:E> <var:w> <var:v> : nat , Nat . odd ( <nat:152> * <var:i> + <nat:422> * <var:I> + <nat:376> * <var:F> + <nat:320> * <var:u> + <nat:244> * <var:q> + <nat:180> * <var:E> + <nat:460> * <var:w> + <nat:136> * <var:v> + <nat:41> ) = true . Proof . intros . assert ( <genH> : Nat . odd <nat:41> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:460> * <var:w> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:320> * <var:u> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:136> * <var:v> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:180> * <var:E> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:244> * <var:q> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:422> * <var:I> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:152> * <var:i> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:376> * <var:F> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:152> * <var:i> + <nat:422> * <var:I> + <nat:376> * <var:F> + <nat:320> * <var:u> + <nat:244> * <var:q> + <nat:180> * <var:E> + <nat:460> * <var:w> + <nat:136> * <var:v> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . rewrite <genH> . auto . Qed . 