\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} <nat:29937600> is the product of natural numbers $ <var:C> $ , $ <var:f> $ , $ <var:A> $ , $ <var:D> $ , $ <var:z> $ , $ <var:y> $ , $ <var:T> $ , $ <var:M> $ , and $ <var:P> $ where $ <var:D> $ , $ <var:y> $ , $ <var:T> $ , $ <var:f> $ , $ <var:C> $ , $ <var:A> $ , $ <var:z> $ , $ <var:P> $ and $ <var:M> $ more than or equivalent to <nat:2> . \end{theorem} \begin{proof} We present $ <var:z> \cdot <var:y> \cdot <var:A> \cdot <var:M> \cdot <var:P> \cdot <var:D> \cdot <var:C> \cdot <var:T> \cdot <var:f> = <nat:29937600> $ . We present the theory holds seeing that $ <nat:29937600> = <var:P> * <var:D> * <var:y> * <var:z> * <var:A> * <var:f> * <var:M> * <var:T> * <var:C> $ shows $ <var:P> = <nat:3> $ , $ <var:f> = <nat:5> $ , $ <var:A> = <nat:11> $ , $ <var:y> = <nat:4> $ , $ <var:D> = <nat:7> $ , $ <var:T> = <nat:12> $ , $ <var:C> = <nat:10> $ , $ <var:z> = <nat:6> $ , and $ <var:M> = <nat:9> $ and as $ <nat:11> $ , $ <nat:9> $ , $ <nat:7> $ , $ <nat:6> $ , $ <nat:5> $ , $ <nat:3> $ , $ <nat:12> $ , $ <nat:4> $ and $ <nat:10> $ are larger than or equal to <nat:2> . \end{proof} \end{document} 
~
Require Import Lia . Theorem <genP:1> : exists <var:C> <var:f> <var:A> <var:D> <var:z> <var:y> <var:T> <var:M> <var:P> : nat , ( <nat:29937600> = <var:C> * <var:f> * <var:A> * <var:D> * <var:z> * <var:y> * <var:T> * <var:M> * <var:P> ) /\ ( <var:D> >= <nat:2> ) /\ ( <var:y> >= <nat:2> ) /\ ( <var:T> >= <nat:2> ) /\ ( <var:f> >= <nat:2> ) /\ ( <var:C> >= <nat:2> ) /\ ( <var:A> >= <nat:2> ) /\ ( <var:z> >= <nat:2> ) /\ ( <var:P> >= <nat:2> ) /\ ( <var:M> >= <nat:2> ) . Proof . exists <nat:10> . exists <nat:5> . exists <nat:11> . exists <nat:7> . exists <nat:6> . exists <nat:4> . exists <nat:12> . exists <nat:9> . exists <nat:3> . assert ( <genH> : <nat:11> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:9> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:7> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:6> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:5> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:3> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:12> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:4> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:10> >= <nat:2> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 