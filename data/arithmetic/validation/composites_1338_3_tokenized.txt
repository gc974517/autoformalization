\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} We define that assuming there exist $ <var:o> $ , $ <var:Y> $ , $ <var:D> \in \mathbb{N} $ then we define that some positive integer $ <var:A> $ is called a <def:three-composite> integer assuming $ <var:A> = <var:D> \cdot <var:o> \cdot <var:Y> $ and larger than <nat:1> . So the positive integer <nat:70> is a <def:three-composite> whole number . \end{theorem} \begin{proof} Assume $ <var:D> = <nat:2> $ , $ <var:o> = <nat:5> $ , and $ <var:Y> = <nat:7> $ . Notice $ <nat:5> $ , $ <nat:7> $ and $ <nat:2> $ are more than <nat:1> . As a result , <nat:70> is the product between $ <var:o> $ , $ <var:D> $ and $ <var:Y> \in \mathbb{N} $ and $ <var:D> $ , $ <var:o> $ , and $ <var:Y> > <nat:1> $ is validated . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:three-composite> ( <var:A> : nat ) := exists <var:o> <var:Y> <var:D> : nat , ( <var:A> = <var:D> * <var:o> * <var:Y> ) /\ ( <var:o> > <nat:1> ) /\ ( <var:Y> > <nat:1> ) /\ ( <var:D> > <nat:1> ) . Theorem <genP:1> : <def:three-composite> <nat:70> . Proof . unfold <def:three-composite> . exists <nat:5> . exists <nat:7> . exists <nat:2> . assert ( <genH> : <nat:5> > <nat:1> ) . { lia . } assert ( <genH> : <nat:7> > <nat:1> ) . { lia . } assert ( <genH> : <nat:2> > <nat:1> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 