\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \newtheorem{definition}{Definition} \begin{document} \begin{definition} With the condition we get $ <var:v> = <var:Q> \cdot <var:W> \cdot <var:A> \cdot <var:x> \cdot <var:C> \cdot <var:H> \cdot <var:D> \cdot <var:g> \cdot <var:G> $ with $ <var:v> \in \mathbb{N} $ as well as where $ <var:g> $ , $ <var:C> $ , $ <var:G> $ , $ <var:A> $ , $ <var:D> $ , $ <var:W> $ , $ <var:H> $ , $ <var:x> $ , $ <var:Q> \geq <nat:2> $ taking some numbers $ <var:H> $ , $ <var:C> $ , $ <var:x> $ , $ <var:D> $ , $ <var:A> $ , $ <var:G> $ , $ <var:g> $ , $ <var:W> $ , $ <var:Q> $ , we say that $ <var:v> $ is a <def:nine-composite> positive integer . \end{definition} \begin{theorem} The number <nat:11404800> is a <def:nine-composite> integer . \end{theorem} \begin{proof} Recollect that <nat:11404800> is a <def:nine-composite> number whenever it is the multiplication of integers $ <var:A> $ , $ <var:C> $ , $ <var:G> $ , $ <var:D> $ , $ <var:x> $ , $ <var:W> $ , $ <var:Q> $ , $ <var:g> $ , and $ <var:H> $ larger than <nat:1> . Note $ <nat:9> * <nat:4> * <nat:5> * <nat:11> * <nat:3> * <nat:2> * <nat:12> * <nat:10> * <nat:8> = <nat:11404800> $ . This gives our claim is true . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:nine-composite> ( <var:v> : nat ) := exists <var:H> <var:C> <var:x> <var:D> <var:A> <var:G> <var:g> <var:W> <var:Q> : nat , ( <var:v> = <var:Q> * <var:W> * <var:A> * <var:x> * <var:C> * <var:H> * <var:D> * <var:g> * <var:G> ) /\ ( <var:g> >= <nat:2> ) /\ ( <var:C> >= <nat:2> ) /\ ( <var:G> >= <nat:2> ) /\ ( <var:A> >= <nat:2> ) /\ ( <var:D> >= <nat:2> ) /\ ( <var:W> >= <nat:2> ) /\ ( <var:H> >= <nat:2> ) /\ ( <var:x> >= <nat:2> ) /\ ( <var:Q> >= <nat:2> ) . Theorem <genP:1> : <def:nine-composite> <nat:11404800> . Proof . unfold <def:nine-composite> . exists <nat:12> . exists <nat:3> . exists <nat:4> . exists <nat:9> . exists <nat:10> . exists <nat:5> . exists <nat:11> . exists <nat:2> . exists <nat:8> . repeat split . all : lia . Qed . 