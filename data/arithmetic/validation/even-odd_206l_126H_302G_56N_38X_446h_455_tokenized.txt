\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} With all natural terms $ <var:X> $ , $ <var:h> $ , $ <var:l> $ , $ <var:G> $ , $ <var:N> $ , and $ <var:H> $ the sum $ <var:X> \times <nat:38> + <var:h> \times <nat:446> + <nat:126> \times <var:H> + <nat:455> + <nat:302> \times <var:G> + <nat:56> \times <var:N> + <var:l> \times <nat:206> $ is guaranteed to be odd . \end{theorem} \begin{proof} We utilize the understanding that $ <var:G> * <nat:302> + <nat:56> * <var:N> + <nat:446> * <var:h> + <nat:126> * <var:H> + <nat:38> * <var:X> + <nat:206> * <var:l> $ is guaranteed to be even . The integers $ <nat:126> $ , $ <nat:446> $ , and likewise $ <nat:302> $ are obviously even whole numbers Remember the number $ <nat:38> $ is known to be even The number $ <nat:206> $ is known as even Remember the coefficient $ <nat:56> $ is clearly an even number Because the summation of even positive integers and even integers will be even , the expression $ <nat:206> \times <var:l> + <var:H> \times <nat:126> + <var:G> \times <nat:302> + <nat:56> \times <var:N> + <var:X> \times <nat:38> + <nat:446> \times <var:h> $ is guaranteed to be even . The summing of an even number and an odd positive integer is in itself an odd whole number . Observe $ <nat:455> $ is guaranteed to be odd . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:X> <var:h> <var:l> <var:G> <var:N> <var:H> : nat , Nat . odd ( <nat:38> * <var:X> + <nat:446> * <var:h> + <nat:126> * <var:H> + <nat:302> * <var:G> + <nat:56> * <var:N> + <nat:206> * <var:l> + <nat:455> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:126> = true ) . { auto . } assert ( <genH> : Nat . even <nat:446> = true ) . { auto . } assert ( <genH> : Nat . even <nat:302> = true ) . { auto . } assert ( <genH> : Nat . even <nat:38> = true ) . { auto . } assert ( <genH> : Nat . even <nat:206> = true ) . { auto . } assert ( <genH> : Nat . even <nat:56> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:38> * <var:X> + <nat:446> * <var:h> + <nat:126> * <var:H> + <nat:302> * <var:G> + <nat:56> * <var:N> + <nat:206> * <var:l> ) = true ) . { repeat rewrite Nat . even_add . repeat rewrite Nat . even_mul . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . assert ( <genH> : Nat . odd <nat:455> = true ) . { auto . } rewrite <- Nat . negb_even . rewrite <genH> . rewrite <genH> . auto . Qed . 