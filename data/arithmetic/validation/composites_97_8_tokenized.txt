\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Take $ <var:I> $ , $ <var:T> $ , $ <var:M> $ , $ <var:e> $ , $ <var:A> $ , $ <var:w> $ , $ <var:u> $ , $ <var:i> $ as whole numbers such that $ <var:i> $ , $ <var:M> $ , $ <var:T> $ , $ <var:u> $ , $ <var:w> $ , $ <var:A> $ , $ <var:e> $ and $ <var:I> $ larger than or equivalent to <nat:2> and satisfying the condition that $ <nat:725760> $ is equal to $ <var:M> \times <var:A> \times <var:i> \times <var:u> \times <var:w> \times <var:e> \times <var:I> \times <var:T> $ . \end{theorem} \begin{proof} Let $ <var:I> = <nat:8> $ , $ <var:w> = <nat:7> $ , $ <var:A> = <nat:3> $ , $ <var:i> = <nat:6> $ , $ <var:u> = <nat:10> $ , $ <var:e> = <nat:9> $ , $ <var:M> = <nat:4> $ , $ <var:T> = <nat:2> $ . Observe $ <nat:10> $ , $ <nat:8> $ , $ <nat:6> $ , $ <nat:2> $ , $ <nat:7> $ , $ <nat:4> $ , $ <nat:9> $ and $ <nat:3> \geq <nat:2> $ . In addition note that additionally $ <nat:2> * <nat:3> * <nat:7> * <nat:8> * <nat:9> * <nat:10> * <nat:4> * <nat:6> = <var:T> * <var:A> * <var:w> * <var:I> * <var:e> * <var:u> * <var:M> * <var:i> = <nat:725760> $ . \end{proof} \end{document} 
~
Require Import Lia . Theorem <genP:1> : exists <var:I> <var:T> <var:M> <var:e> <var:A> <var:w> <var:u> <var:i> : nat , ( <var:i> >= <nat:2> ) /\ ( <var:M> >= <nat:2> ) /\ ( <var:T> >= <nat:2> ) /\ ( <var:u> >= <nat:2> ) /\ ( <var:w> >= <nat:2> ) /\ ( <var:A> >= <nat:2> ) /\ ( <var:e> >= <nat:2> ) /\ ( <var:I> >= <nat:2> ) /\ ( <nat:725760> = <var:M> * <var:A> * <var:i> * <var:u> * <var:w> * <var:e> * <var:I> * <var:T> ) . Proof . exists <nat:8> . exists <nat:2> . exists <nat:4> . exists <nat:9> . exists <nat:3> . exists <nat:7> . exists <nat:10> . exists <nat:6> . assert ( <genH> : <nat:10> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:8> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:6> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:2> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:7> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:4> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:9> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:3> >= <nat:2> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 