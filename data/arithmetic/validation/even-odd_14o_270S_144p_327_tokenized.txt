\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} With unknowns $ <var:o> $ , $ <var:p> $ , and $ <var:S> $ the summation $ <var:S> <nat:270> + <nat:327> + <nat:14> <var:o> + <nat:144> <var:p> $ is odd . \end{theorem} \begin{proof} It can be shown that the sum $ <nat:270> \cdot <var:S> + <nat:327> + <nat:144> \cdot <var:p> + <var:o> \cdot <nat:14> $ must be odd . We know that $ <nat:327> + <nat:14> \cdot <var:o> + <var:p> \cdot <nat:144> + <nat:270> \cdot <var:S> $ is trivially odd from the knowledge the expression $ <var:p> * <nat:144> + <var:S> * <nat:270> + <var:o> * <nat:14> $ is known to be even . The terms $ <nat:270> \cdot <var:S> $ as well as $ <nat:14> \cdot <var:o> $ are obviously even by reason that the product between an even natural with an arbitrary positive integer is guaranteed to be even . This fact is proven by reason that the natural numbers $ <nat:270> $ and likewise $ <nat:14> $ must be . The product $ <var:p> \cdot <nat:144> $ is guaranteed to be an even positive integer from the knowledge multiplying between an even whole number with some number is by itself an even positive integer and likewise the number $ <nat:144> $ is clearly in itself an even natural . From the knowledge the product of an even number and any element of $ \mathbb{N} $ is guaranteed to be an even number $ <var:o> * <nat:14> + <var:S> * <nat:270> + <var:p> * <nat:144> $ is even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:o> <var:p> <var:S> : nat , Nat . odd ( <nat:270> * <var:S> + <nat:14> * <var:o> + <nat:144> * <var:p> + <nat:327> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:270> = true ) . { auto . } assert ( <genH> : Nat . even <nat:14> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:270> * <var:S> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:14> * <var:o> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:144> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:144> * <var:p> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:270> * <var:S> + <nat:14> * <var:o> + <nat:144> * <var:p> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . auto . Qed . 