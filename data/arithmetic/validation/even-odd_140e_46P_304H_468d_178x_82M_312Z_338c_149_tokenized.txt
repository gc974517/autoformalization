\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:338> \times <var:c> + <nat:140> \times <var:e> + <nat:468> \times <var:d> + <var:P> \times <nat:46> + <nat:304> \times <var:H> + <var:M> \times <nat:82> + <nat:149> + <var:x> \times <nat:178> + <nat:312> \times <var:Z> $ is guaranteed to be odd . \end{theorem} \begin{proof} The claim holds from the knowledge $ <var:c> \times <nat:338> + <var:x> \times <nat:178> + <var:e> \times <nat:140> + <nat:468> \times <var:d> + <var:H> \times <nat:304> + <var:M> \times <nat:82> + <nat:312> \times <var:Z> + <var:P> \times <nat:46> $ is known as even . Notice that the numbers $ <nat:178> $ , $ <nat:312> $ , $ <nat:304> $ , $ <nat:140> $ , $ <nat:338> $ , $ <nat:468> $ , and likewise $ <nat:82> $ are trivially even The natural number $ <nat:46> $ is known to be an even positive integer We show the sum $ <nat:140> * <var:e> + <var:P> * <nat:46> + <var:H> * <nat:304> + <var:d> * <nat:468> + <var:x> * <nat:178> + <nat:82> * <var:M> + <nat:312> * <var:Z> + <nat:338> * <var:c> + <nat:149> $ is guaranteed to be odd . Observe the summing between an even element of $ \mathbb{N} $ and an odd element of $ \mathbb{N} $ is guaranteed to be an odd whole number . Remember $ <nat:149> $ is trivially odd . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:c> <var:e> <var:d> <var:P> <var:H> <var:M> <var:x> <var:Z> : nat , Nat . odd ( <nat:338> * <var:c> + <nat:140> * <var:e> + <nat:468> * <var:d> + <nat:46> * <var:P> + <nat:304> * <var:H> + <nat:82> * <var:M> + <nat:178> * <var:x> + <nat:312> * <var:Z> + <nat:149> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:178> = true ) . { auto . } assert ( <genH> : Nat . even <nat:312> = true ) . { auto . } assert ( <genH> : Nat . even <nat:304> = true ) . { auto . } assert ( <genH> : Nat . even <nat:140> = true ) . { auto . } assert ( <genH> : Nat . even <nat:338> = true ) . { auto . } assert ( <genH> : Nat . even <nat:468> = true ) . { auto . } assert ( <genH> : Nat . even <nat:82> = true ) . { auto . } assert ( <genH> : Nat . even <nat:46> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:338> * <var:c> + <nat:140> * <var:e> + <nat:468> * <var:d> + <nat:46> * <var:P> + <nat:304> * <var:H> + <nat:82> * <var:M> + <nat:178> * <var:x> + <nat:312> * <var:Z> ) = true ) . { repeat rewrite Nat . even_add . repeat rewrite Nat . even_mul . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . assert ( <genH> : Nat . odd <nat:149> = true ) . { auto . } rewrite <- Nat . negb_even . rewrite <genH> . rewrite <genH> . auto . Qed . 