\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Under the condition that there exist $ <var:x> $ , $ <var:J> $ , $ <var:p> $ , $ <var:N> $ , $ <var:s> $ , $ <var:u> $ , $ <var:b> $ , $ <var:l> $ , $ <var:O> \in \mathbb{Z}^+ $ greater than or equivalent to <nat:2> . Claim that $ <var:z> \in \mathbb{Z}^+ $ will be considered to be a <def:nine-composite> positive integer when $ <var:s> \cdot <var:u> \cdot <var:p> \cdot <var:J> \cdot <var:b> \cdot <var:N> \cdot <var:x> \cdot <var:l> \cdot <var:O> = <var:z> $ . Consequently the whole number <nat:6652800> is a <def:nine-composite> number . \end{theorem} \begin{proof} Note $ <nat:9> * <nat:10> * <nat:3> * <nat:7> * <nat:8> * <nat:4> * <nat:5> * <nat:11> * <nat:2> = <nat:6652800> $ . Also notice $ <nat:10> $ , $ <nat:7> $ , $ <nat:4> $ , $ <nat:8> $ , $ <nat:3> $ , $ <nat:11> $ , $ <nat:9> $ , $ <nat:5> $ and $ <nat:2> \geq <nat:2> $ . Hence , $ <var:x> $ , $ <var:l> $ , $ <var:O> $ , $ <var:s> $ , $ <var:u> $ , $ <var:p> $ , $ <var:N> $ , $ <var:J> $ and $ <var:b> \geq <nat:2> $ and <nat:6652800> is the product of some natural numbers $ <var:s> $ , $ <var:x> $ , $ <var:u> $ , $ <var:p> $ , $ <var:l> $ , $ <var:J> $ , $ <var:N> $ , $ <var:b> $ , and $ <var:O> $ has been verified . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:nine-composite> ( <var:z> : nat ) := exists <var:x> <var:J> <var:p> <var:N> <var:s> <var:u> <var:b> <var:l> <var:O> : nat , ( <var:x> >= <nat:2> ) /\ ( <var:J> >= <nat:2> ) /\ ( <var:p> >= <nat:2> ) /\ ( <var:N> >= <nat:2> ) /\ ( <var:s> >= <nat:2> ) /\ ( <var:u> >= <nat:2> ) /\ ( <var:b> >= <nat:2> ) /\ ( <var:l> >= <nat:2> ) /\ ( <var:O> >= <nat:2> ) /\ ( <var:s> * <var:u> * <var:p> * <var:J> * <var:b> * <var:N> * <var:x> * <var:l> * <var:O> = <var:z> ) . Theorem <genP:1> : <def:nine-composite> <nat:6652800> . Proof . unfold <def:nine-composite> . exists <nat:11> . exists <nat:3> . exists <nat:4> . exists <nat:8> . exists <nat:7> . exists <nat:10> . exists <nat:2> . exists <nat:5> . exists <nat:9> . assert ( <genH> : <nat:10> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:7> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:4> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:8> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:3> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:11> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:9> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:5> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:2> >= <nat:2> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 