\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Supposing that we get $ <var:z> $ , $ <var:P> $ , $ <var:e> $ , $ <var:R> $ and $ <var:Y> \geq <nat:2> $ where with $ <var:f> \in \mathbb{Z}^+ $ , $ <var:e> \cdot <var:R> \cdot <var:P> \cdot <var:z> \cdot <var:Y> = <var:f> $ using some $ <var:z> $ , $ <var:e> $ , $ <var:P> $ , $ <var:Y> $ , $ <var:R> \in \mathbb{N} $ , then assume that $ <var:f> $ is a <def:five-composite> whole number . Then the positive integer <nat:10080> is a <def:five-composite> natural number . \end{theorem} \begin{proof} Remember that <nat:10080> is a <def:five-composite> number whenever <nat:10080> is the product of integers $ <var:z> $ , $ <var:R> $ , $ <var:e> $ , $ <var:Y> $ , and $ <var:P> $ where $ <var:z> $ , $ <var:Y> $ , $ <var:R> $ , $ <var:e> $ and $ <var:P> \geq <nat:2> $ . Notice that $ <nat:5> $ , $ <nat:6> $ , $ <nat:7> $ , $ <nat:12> $ and $ <nat:4> $ are greater than or equivalent to <nat:2> . Plus observe additionally $ <nat:10080> = <var:z> \cdot <var:R> \cdot <var:e> \cdot <var:Y> \cdot <var:P> $ hints $ <var:z> = <nat:4> $ , $ <var:P> = <nat:5> $ , $ <var:Y> = <nat:7> $ , $ <var:e> = <nat:6> $ and $ <var:R> = <nat:12> $ . Because of this , <nat:10080> is a <def:five-composite> positive integer has been verified . So , <nat:10080> is the multiplication between some positive integers $ <var:z> $ , $ <var:Y> $ , $ <var:R> $ , $ <var:e> $ , and $ <var:P> $ is verified . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:five-composite> ( <var:f> : nat ) := exists <var:z> <var:e> <var:P> <var:Y> <var:R> : nat , ( <var:z> >= <nat:2> ) /\ ( <var:P> >= <nat:2> ) /\ ( <var:e> >= <nat:2> ) /\ ( <var:R> >= <nat:2> ) /\ ( <var:Y> >= <nat:2> ) /\ ( <var:e> * <var:R> * <var:P> * <var:z> * <var:Y> = <var:f> ) . Theorem <genP:1> : <def:five-composite> <nat:10080> . Proof . unfold <def:five-composite> . assert ( <genH> : <nat:5> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:6> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:7> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:12> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:4> >= <nat:2> ) . { lia . } exists <nat:4> . exists <nat:6> . exists <nat:5> . exists <nat:7> . exists <nat:12> . repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 