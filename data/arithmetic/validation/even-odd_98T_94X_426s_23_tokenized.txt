\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Assuming all natural numbers $ <var:T> $ , $ <var:X> $ , and $ <var:s> $ the expression $ <nat:98> * <var:T> + <nat:23> + <nat:94> * <var:X> + <var:s> * <nat:426> $ is odd . \end{theorem} \begin{proof} We show the sum $ <nat:94> \times <var:X> + <nat:23> + <nat:98> \times <var:T> + <nat:426> \times <var:s> $ will be odd . Recall that $ <nat:23> $ is obviously odd . $ <nat:23> + <nat:94> <var:X> + <nat:98> <var:T> + <var:s> <nat:426> $ is trivially odd as a consequence that $ <nat:98> \times <var:T> + <nat:426> \times <var:s> + <nat:94> \times <var:X> $ is clearly even . We know the numbers $ <nat:98> $ , $ <nat:426> $ , in addition to $ <nat:94> $ are trivially even naturals . Accordingly , the products $ <var:T> <nat:98> $ , $ <var:s> <nat:426> $ , plus $ <nat:94> <var:X> $ is even too . As a consequence that the totaling of an even number and even integers must be fundamentally an even integer , the expression $ <nat:98> \cdot <var:T> + <nat:94> \cdot <var:X> + <nat:426> \cdot <var:s> $ is even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:T> <var:X> <var:s> : nat , Nat . odd ( <nat:98> * <var:T> + <nat:94> * <var:X> + <nat:426> * <var:s> + <nat:23> ) = true . Proof . intros . assert ( <genH> : Nat . odd <nat:23> = true ) . { auto . } assert ( <genH> : Nat . even <nat:98> = true ) . { auto . } assert ( <genH> : Nat . even <nat:426> = true ) . { auto . } assert ( <genH> : Nat . even <nat:94> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:98> * <var:T> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:426> * <var:s> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:94> * <var:X> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:98> * <var:T> + <nat:94> * <var:X> + <nat:426> * <var:s> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . rewrite <genH> . auto . Qed . 