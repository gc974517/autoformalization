\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:400> \cdot <var:I> + <nat:52> \cdot <var:z> + <var:w> \cdot <nat:256> + <var:O> \cdot <nat:356> + <var:Q> \cdot <nat:228> + <nat:308> + <nat:488> \cdot <var:t> + <nat:112> \cdot <var:a> $ is guaranteed to be even . \end{theorem} \begin{proof} We check $ <nat:400> <var:I> + <nat:356> <var:O> + <var:z> <nat:52> + <var:w> <nat:256> + <nat:308> + <var:t> <nat:488> + <var:a> <nat:112> + <var:Q> <nat:228> $ is guaranteed to be even . The terms $ <nat:52> \cdot <var:z> $ , $ <var:O> \cdot <nat:356> $ , $ <nat:400> \cdot <var:I> $ , additionally $ <nat:488> \cdot <var:t> $ are clearly even numbers in $ \mathbb{N} $ because the multiplication of an even element of $ \mathbb{Z}^+ $ with an arbitrary element of $ \mathbb{N} $ is instrinsically an even whole number . We know the product $ <var:w> \cdot <nat:256> $ is clearly an even integer from the fact the multiplication between an even natural number with a whole number will be even . The product $ <var:a> \cdot <nat:112> $ is known to be even . On top of this , notice that the term $ <var:Q> \cdot <nat:228> $ is known as even from the fact the product between an even positive integer and a natural is guaranteed to be even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:I> <var:z> <var:w> <var:O> <var:Q> <var:t> <var:a> : nat , Nat . even ( <nat:400> * <var:I> + <nat:52> * <var:z> + <nat:256> * <var:w> + <nat:356> * <var:O> + <nat:228> * <var:Q> + <nat:488> * <var:t> + <nat:112> * <var:a> + <nat:308> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:52> * <var:z> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:356> * <var:O> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:400> * <var:I> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:488> * <var:t> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:256> * <var:w> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:112> * <var:a> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:228> * <var:Q> ) = true ) . { rewrite Nat . even_mul . auto . } repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 