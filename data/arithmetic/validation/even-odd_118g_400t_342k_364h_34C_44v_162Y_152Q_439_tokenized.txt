\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:44> \cdot <var:v> + <nat:439> + <var:Y> \cdot <nat:162> + <var:h> \cdot <nat:364> + <var:k> \cdot <nat:342> + <var:t> \cdot <nat:400> + <nat:34> \cdot <var:C> + <nat:152> \cdot <var:Q> + <var:g> \cdot <nat:118> $ is odd . \end{theorem} \begin{proof} $ <nat:118> \cdot <var:g> + <nat:400> \cdot <var:t> + <nat:342> \cdot <var:k> + <nat:364> \cdot <var:h> + <nat:34> \cdot <var:C> + <nat:44> \cdot <var:v> + <var:Y> \cdot <nat:162> + <var:Q> \cdot <nat:152> $ is known to be even . The leading terms $ <nat:44> $ , $ <nat:118> $ , $ <nat:400> $ , $ <nat:34> $ , $ <nat:152> $ , $ <nat:342> $ , and likewise $ <nat:162> $ are trivially even natural numbers See that the whole number $ <nat:364> $ is guaranteed to be even \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:v> <var:Y> <var:h> <var:k> <var:t> <var:C> <var:Q> <var:g> : nat , Nat . odd ( <nat:44> * <var:v> + <nat:162> * <var:Y> + <nat:364> * <var:h> + <nat:342> * <var:k> + <nat:400> * <var:t> + <nat:34> * <var:C> + <nat:152> * <var:Q> + <nat:118> * <var:g> + <nat:439> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:44> = true ) . { auto . } assert ( <genH> : Nat . even <nat:118> = true ) . { auto . } assert ( <genH> : Nat . even <nat:400> = true ) . { auto . } assert ( <genH> : Nat . even <nat:34> = true ) . { auto . } assert ( <genH> : Nat . even <nat:152> = true ) . { auto . } assert ( <genH> : Nat . even <nat:342> = true ) . { auto . } assert ( <genH> : Nat . even <nat:162> = true ) . { auto . } assert ( <genH> : Nat . even <nat:364> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:44> * <var:v> + <nat:162> * <var:Y> + <nat:364> * <var:h> + <nat:342> * <var:k> + <nat:400> * <var:t> + <nat:34> * <var:C> + <nat:152> * <var:Q> + <nat:118> * <var:g> ) = true ) . { repeat rewrite Nat . even_add . repeat rewrite Nat . even_mul . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . auto . Qed . 