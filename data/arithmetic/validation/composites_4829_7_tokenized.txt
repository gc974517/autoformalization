\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \newtheorem{definition}{Definition} \begin{document} \begin{definition} Iff we get $ <var:a> * <var:o> * <var:I> * <var:S> * <var:P> * <var:m> * <var:s> = <var:T> $ assuming some $ <var:T> $ plus satisfying the condition that $ <var:I> $ , $ <var:o> $ , $ <var:P> $ , $ <var:s> $ , $ <var:m> $ , $ <var:a> $ , and $ <var:S> \geq <nat:2> $ , denote that $ <var:T> $ is a <def:seven-composite> positive integer for some natural numbers $ <var:o> $ , $ <var:P> $ , $ <var:I> $ , $ <var:a> $ , $ <var:S> $ , $ <var:s> $ , $ <var:m> $ . \end{definition} \begin{theorem} $ <var:T> = <nat:332640> $ is a <def:seven-composite> positive integer . \end{theorem} \begin{proof} Remember a <def:seven-composite> natural number is the product of integers $ <var:a> $ , $ <var:P> $ , $ <var:m> $ , $ <var:s> $ , $ <var:I> $ , $ <var:S> $ , and $ <var:o> $ such that $ <var:I> $ , $ <var:m> $ , $ <var:s> $ , $ <var:P> $ , $ <var:S> $ , $ <var:o> $ , $ <var:a> \geq <nat:2> $ . Allow $ <var:s> = <nat:6> $ , $ <var:a> = <nat:2> $ , $ <var:I> = <nat:5> $ , $ <var:P> = <nat:11> $ , $ <var:m> = <nat:9> $ , $ <var:S> = <nat:8> $ , and $ <var:o> = <nat:7> $ . We prove <nat:332640> is a <def:seven-composite> whole number . Plus observe $ <var:P> = <nat:11> $ , $ <var:s> = <nat:6> $ , $ <var:o> = <nat:7> $ , $ <var:m> = <nat:9> $ , $ <var:a> = <nat:2> $ , $ <var:S> = <nat:8> $ , and $ <var:I> = <nat:5> $ are more than or equal to <nat:2> . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:seven-composite> ( <var:T> : nat ) := exists <var:o> <var:P> <var:I> <var:a> <var:S> <var:s> <var:m> : nat , ( <var:a> * <var:o> * <var:I> * <var:S> * <var:P> * <var:m> * <var:s> = <var:T> ) /\ ( <var:I> >= <nat:2> ) /\ ( <var:o> >= <nat:2> ) /\ ( <var:P> >= <nat:2> ) /\ ( <var:s> >= <nat:2> ) /\ ( <var:m> >= <nat:2> ) /\ ( <var:a> >= <nat:2> ) /\ ( <var:S> >= <nat:2> ) . Theorem <genP:1> : <def:seven-composite> <nat:332640> . Proof . unfold <def:seven-composite> . exists <nat:7> . exists <nat:11> . exists <nat:5> . exists <nat:2> . exists <nat:8> . exists <nat:6> . exists <nat:9> . assert ( <genH> : <nat:11> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:6> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:7> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:9> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:2> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:8> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:5> >= <nat:2> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 