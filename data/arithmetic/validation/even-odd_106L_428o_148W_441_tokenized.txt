\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} For every whole numbers $ <var:o> $ , $ <var:L> $ , and $ <var:W> $ the expression $ <nat:428> * <var:o> + <nat:441> + <var:L> * <nat:106> + <var:W> * <nat:148> $ is odd . \end{theorem} \begin{proof} Recall that the sum $ <nat:428> \times <var:o> + <var:L> \times <nat:106> + <nat:148> \times <var:W> $ is known as even . Building on , the pairs $ <nat:428> * <var:o> $ , $ <var:L> * <nat:106> $ , and likewise $ <nat:148> * <var:W> $ are guaranteed to be even . This fact must be true by reason that the whole numbers $ <nat:428> $ , $ <nat:106> $ , and moreover $ <nat:148> $ are guaranteed to be trivially even natural numbers . The formula $ <nat:428> * <var:o> + <var:L> * <nat:106> + <nat:148> * <var:W> $ is guaranteed to be even since taking the product between even elements of $ \mathbb{Z}^+ $ and a element of $ \mathbb{Z}^+ $ is guaranteed to be even . Notice $ <nat:441> $ is obviously odd . We justify the formula $ <nat:441> + <var:L> \cdot <nat:106> + <nat:428> \cdot <var:o> + <nat:148> \cdot <var:W> $ is odd . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:o> <var:L> <var:W> : nat , Nat . odd ( <nat:428> * <var:o> + <nat:106> * <var:L> + <nat:148> * <var:W> + <nat:441> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:428> = true ) . { auto . } assert ( <genH> : Nat . even <nat:106> = true ) . { auto . } assert ( <genH> : Nat . even <nat:148> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:428> * <var:o> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:106> * <var:L> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:148> * <var:W> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:428> * <var:o> + <nat:106> * <var:L> + <nat:148> * <var:W> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } assert ( <genH> : Nat . odd <nat:441> = true ) . { auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . rewrite <genH> . auto . Qed . 