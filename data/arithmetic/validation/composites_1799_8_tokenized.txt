\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} We say that under the condition that there are $ <var:l> $ , $ <var:x> $ , $ <var:c> $ , $ <var:D> $ , $ <var:Y> $ , $ <var:q> $ , $ <var:Q> $ , $ <var:Z> \in \mathbb{Z}^+ $ then let that some natural number $ <var:j> $ is defined as a <def:eight-composite> integer if $ <var:l> \times <var:Y> \times <var:Z> \times <var:q> \times <var:x> \times <var:D> \times <var:Q> \times <var:c> = <var:j> $ as well as unique terms are more than <nat:1> . Accordingly the natural number <nat:1995840> is a <def:eight-composite> natural number . \end{theorem} \begin{proof} Observe that $ <nat:3> $ , $ <nat:8> $ , $ <nat:6> $ , $ <nat:10> $ , $ <nat:11> $ , $ <nat:7> $ , $ <nat:2> $ , $ <nat:9> > <nat:1> $ . Also notice that likewise $ <nat:1995840> = <var:Y> \cdot <var:l> \cdot <var:D> \cdot <var:q> \cdot <var:x> \cdot <var:c> \cdot <var:Q> \cdot <var:Z> $ suggests $ <var:l> = <nat:6> $ , $ <var:D> = <nat:10> $ , $ <var:x> = <nat:2> $ , $ <var:Z> = <nat:7> $ , $ <var:c> = <nat:11> $ , $ <var:Y> = <nat:8> $ , $ <var:Q> = <nat:9> $ , $ <var:q> = <nat:3> $ . This implies <nat:1995840> is <def:eight-composite> . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:eight-composite> ( <var:j> : nat ) := exists <var:l> <var:x> <var:c> <var:D> <var:Y> <var:q> <var:Q> <var:Z> : nat , ( <var:l> * <var:Y> * <var:Z> * <var:q> * <var:x> * <var:D> * <var:Q> * <var:c> = <var:j> ) /\ ( <var:l> > <nat:1> ) /\ ( <var:x> > <nat:1> ) /\ ( <var:c> > <nat:1> ) /\ ( <var:D> > <nat:1> ) /\ ( <var:Y> > <nat:1> ) /\ ( <var:q> > <nat:1> ) /\ ( <var:Q> > <nat:1> ) /\ ( <var:Z> > <nat:1> ) . Theorem <genP:1> : <def:eight-composite> <nat:1995840> . Proof . unfold <def:eight-composite> . assert ( <genH> : <nat:3> > <nat:1> ) . { lia . } assert ( <genH> : <nat:8> > <nat:1> ) . { lia . } assert ( <genH> : <nat:6> > <nat:1> ) . { lia . } assert ( <genH> : <nat:10> > <nat:1> ) . { lia . } assert ( <genH> : <nat:11> > <nat:1> ) . { lia . } assert ( <genH> : <nat:7> > <nat:1> ) . { lia . } assert ( <genH> : <nat:2> > <nat:1> ) . { lia . } assert ( <genH> : <nat:9> > <nat:1> ) . { lia . } exists <nat:6> . exists <nat:2> . exists <nat:11> . exists <nat:10> . exists <nat:8> . exists <nat:3> . exists <nat:9> . exists <nat:7> . repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 