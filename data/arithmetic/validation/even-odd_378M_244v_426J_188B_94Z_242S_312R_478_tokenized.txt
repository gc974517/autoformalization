\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:M> \cdot <nat:378> + <nat:244> \cdot <var:v> + <var:J> \cdot <nat:426> + <nat:188> \cdot <var:B> + <var:Z> \cdot <nat:94> + <nat:478> + <var:S> \cdot <nat:242> + <var:R> \cdot <nat:312> $ is guaranteed to be even . \end{theorem} \begin{proof} See that the products $ <nat:378> \cdot <var:M> $ , $ <var:v> \cdot <nat:244> $ , $ <var:J> \cdot <nat:426> $ , $ <var:B> \cdot <nat:188> $ , $ <nat:94> \cdot <var:Z> $ , $ <nat:242> \cdot <var:S> $ , as well as $ <nat:312> \cdot <var:R> $ are even . This claim must be true by reason that the leading terms $ <nat:378> $ , $ <nat:244> $ , $ <nat:426> $ , $ <nat:188> $ , $ <nat:94> $ , $ <nat:242> $ , plus $ <nat:312> $ are in themselves even integers . We know that the addition of an even whole number and an even element of $ \mathbb{Z}^+ $ is guaranteed to be even . See that $ <nat:478> $ is known to be even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:M> <var:v> <var:J> <var:B> <var:Z> <var:S> <var:R> : nat , Nat . even ( <nat:378> * <var:M> + <nat:244> * <var:v> + <nat:426> * <var:J> + <nat:188> * <var:B> + <nat:94> * <var:Z> + <nat:242> * <var:S> + <nat:312> * <var:R> + <nat:478> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:378> = true ) . { auto . } assert ( <genH> : Nat . even <nat:244> = true ) . { auto . } assert ( <genH> : Nat . even <nat:426> = true ) . { auto . } assert ( <genH> : Nat . even <nat:188> = true ) . { auto . } assert ( <genH> : Nat . even <nat:94> = true ) . { auto . } assert ( <genH> : Nat . even <nat:242> = true ) . { auto . } assert ( <genH> : Nat . even <nat:312> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:378> * <var:M> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:244> * <var:v> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:426> * <var:J> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:188> * <var:B> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:94> * <var:Z> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:242> * <var:S> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:312> * <var:R> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } repeat rewrite Nat . even_add . assert ( <genH> : Nat . even <nat:478> = true ) . { auto . } rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 