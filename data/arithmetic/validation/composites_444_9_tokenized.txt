\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Say that $ <var:k> $ is a <def:nine-composite> number under the condition there exist some positive integers $ <var:c> $ , $ <var:z> $ , $ <var:o> $ , $ <var:U> $ , $ <var:w> $ , $ <var:x> $ , $ <var:u> $ , $ <var:Q> $ , $ <var:O> $ such that $ <var:k> = <var:O> \cdot <var:o> \cdot <var:Q> \cdot <var:x> \cdot <var:w> \cdot <var:u> \cdot <var:z> \cdot <var:c> \cdot <var:U> $ with some integer $ <var:k> $ and where $ <var:x> $ , $ <var:w> $ , $ <var:z> $ , $ <var:U> $ , $ <var:Q> $ , $ <var:u> $ , $ <var:o> $ , $ <var:O> $ and $ <var:c> \geq <nat:2> $ . Therefore the integer <nat:8870400> is a <def:nine-composite> whole number . \end{theorem} \begin{proof} Assume $ <var:z> = <nat:3> $ , $ <var:o> = <nat:4> $ , $ <var:x> = <nat:5> $ , $ <var:u> = <nat:2> $ , $ <var:w> = <nat:12> $ , $ <var:c> = <nat:10> $ , $ <var:U> = <nat:7> $ , $ <var:O> = <nat:8> $ , and $ <var:Q> = <nat:11> $ . Observe that $ <var:x> = <nat:5> $ , $ <var:u> = <nat:2> $ , $ <var:O> = <nat:8> $ , $ <var:w> = <nat:12> $ , $ <var:z> = <nat:3> $ , $ <var:o> = <nat:4> $ , $ <var:c> = <nat:10> $ , $ <var:Q> = <nat:11> $ and $ <var:U> = <nat:7> $ are greater than <nat:1> . Therefore , $ <nat:8870400> = <var:x> \times <var:o> \times <var:z> \times <var:Q> \times <var:c> \times <var:U> \times <var:u> \times <var:O> \times <var:w> $ has been verified . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:nine-composite> ( <var:k> : nat ) := exists <var:c> <var:z> <var:o> <var:U> <var:w> <var:x> <var:u> <var:Q> <var:O> : nat , ( <var:k> = <var:O> * <var:o> * <var:Q> * <var:x> * <var:w> * <var:u> * <var:z> * <var:c> * <var:U> ) /\ ( <var:x> >= <nat:2> ) /\ ( <var:w> >= <nat:2> ) /\ ( <var:z> >= <nat:2> ) /\ ( <var:U> >= <nat:2> ) /\ ( <var:Q> >= <nat:2> ) /\ ( <var:u> >= <nat:2> ) /\ ( <var:o> >= <nat:2> ) /\ ( <var:O> >= <nat:2> ) /\ ( <var:c> >= <nat:2> ) . Theorem <genP:1> : <def:nine-composite> <nat:8870400> . Proof . unfold <def:nine-composite> . exists <nat:10> . exists <nat:3> . exists <nat:4> . exists <nat:7> . exists <nat:12> . exists <nat:5> . exists <nat:2> . exists <nat:11> . exists <nat:8> . assert ( <genH> : <nat:5> > <nat:1> ) . { lia . } assert ( <genH> : <nat:2> > <nat:1> ) . { lia . } assert ( <genH> : <nat:8> > <nat:1> ) . { lia . } assert ( <genH> : <nat:12> > <nat:1> ) . { lia . } assert ( <genH> : <nat:3> > <nat:1> ) . { lia . } assert ( <genH> : <nat:4> > <nat:1> ) . { lia . } assert ( <genH> : <nat:10> > <nat:1> ) . { lia . } assert ( <genH> : <nat:11> > <nat:1> ) . { lia . } assert ( <genH> : <nat:7> > <nat:1> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 