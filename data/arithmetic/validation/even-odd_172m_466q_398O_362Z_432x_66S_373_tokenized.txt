\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:466> * <var:q> + <nat:66> * <var:S> + <var:m> * <nat:172> + <nat:432> * <var:x> + <var:Z> * <nat:362> + <nat:373> + <nat:398> * <var:O> $ is odd . \end{theorem} \begin{proof} The natural number $ <nat:172> $ is known as an even element of $ \mathbb{Z}^+ $ . In consequence , $ <var:m> \times <nat:172> $ is even at the same time . In addition , the leading term $ <nat:466> $ is known as an even integer . For this reason , the pair $ <nat:466> \times <var:q> $ must be even in addition . The coefficient $ <nat:398> $ is even . As a consequence , the product $ <nat:398> \times <var:O> $ is guaranteed to be even additionally . Take note that $ <nat:362> \times <var:Z> $ is known to be even . This fact is true by reason that taking the product between an even positive integer with any number in $ \mathbb{Z}^+ $ is guaranteed to be an even element of $ \mathbb{N} $ and moreover the natural number $ <nat:362> $ is known as even . We know that the pair $ <var:x> \times <nat:432> $ is obviously an even element of $ \mathbb{N} $ . This fact holds because the integer $ <nat:432> $ is known as even . Likewise , see that the number $ <nat:66> $ is guaranteed to be even . Therefore , the term $ <var:S> \times <nat:66> $ is guaranteed to be even too . It can be shown that the claim is proven . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:q> <var:S> <var:m> <var:x> <var:Z> <var:O> : nat , Nat . odd ( <nat:466> * <var:q> + <nat:66> * <var:S> + <nat:172> * <var:m> + <nat:432> * <var:x> + <nat:362> * <var:Z> + <nat:398> * <var:O> + <nat:373> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:172> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:172> * <var:m> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:466> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:466> * <var:q> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:398> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:398> * <var:O> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:362> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:362> * <var:Z> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:432> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:432> * <var:x> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:66> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:66> * <var:S> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 