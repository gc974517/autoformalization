\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:i> <nat:48> + <nat:346> <var:y> + <var:g> <nat:206> + <var:k> <nat:400> + <var:x> <nat:484> + <var:S> <nat:278> + <nat:10> $ must be even with all whole numbers $ <var:x> $ , $ <var:k> $ , $ <var:y> $ , $ <var:i> $ , $ <var:S> $ , and $ <var:g> $ . \end{theorem} \begin{proof} Take note the leading terms $ <nat:346> $ , $ <nat:206> $ , $ <nat:484> $ , as well as $ <nat:278> $ are even numbers . Hence , the pairs $ <var:y> <nat:346> $ , $ <var:g> <nat:206> $ , $ <nat:484> <var:x> $ , additionally $ <nat:278> <var:S> $ is even too . The number $ <nat:400> $ is clearly even . Accordingly , $ <nat:400> <var:k> $ is even also . See that the coefficient $ <nat:48> $ is trivially even . Accordingly , the product $ <var:i> <nat:48> $ will be even too . The addition of an even whole number and an even element of $ \mathbb{N} $ is guaranteed to be an even whole number . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:x> <var:k> <var:y> <var:i> <var:S> <var:g> : nat , Nat . even ( <nat:48> * <var:i> + <nat:346> * <var:y> + <nat:206> * <var:g> + <nat:400> * <var:k> + <nat:484> * <var:x> + <nat:278> * <var:S> + <nat:10> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:346> = true ) . { auto . } assert ( <genH> : Nat . even <nat:206> = true ) . { auto . } assert ( <genH> : Nat . even <nat:484> = true ) . { auto . } assert ( <genH> : Nat . even <nat:278> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:346> * <var:y> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:206> * <var:g> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:484> * <var:x> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:278> * <var:S> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:400> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:400> * <var:k> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:48> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:48> * <var:i> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 