\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} There exist some integers $ <var:O> $ , $ <var:f> $ , $ <var:w> $ , $ <var:S> $ , $ <var:Z> $ , $ <var:T> $ , $ <var:P> $ , $ <var:z> $ so that $ <var:f> $ , $ <var:P> $ , $ <var:T> $ , $ <var:w> $ , $ <var:Z> $ , $ <var:S> $ , $ <var:z> $ and $ <var:O> \geq <nat:2> $ and satisfying the condition that <nat:1088640> is the product between numbers $ <var:O> $ , $ <var:f> $ , $ <var:w> $ , $ <var:S> $ , $ <var:Z> $ , $ <var:T> $ , $ <var:P> $ , and $ <var:z> $ . \end{theorem} \begin{proof} Let $ <var:S> = <nat:10> $ , $ <var:z> = <nat:6> $ , $ <var:f> = <nat:4> $ , $ <var:O> = <nat:2> $ , $ <var:w> = <nat:12> $ , $ <var:Z> = <nat:9> $ , $ <var:T> = <nat:3> $ and $ <var:P> = <nat:7> $ . We present our statement is valid because $ <var:P> \times <var:z> \times <var:Z> \times <var:S> \times <var:f> \times <var:w> \times <var:O> \times <var:T> = <nat:1088640> $ plus on account of $ <var:Z> = <nat:9> $ , $ <var:T> = <nat:3> $ , $ <var:O> = <nat:2> $ , $ <var:f> = <nat:4> $ , $ <var:z> = <nat:6> $ , $ <var:w> = <nat:12> $ , $ <var:S> = <nat:10> $ , and $ <var:P> = <nat:7> \geq <nat:2> $ . \end{proof} \end{document} 
~
Require Import Lia . Theorem <genP:1> : exists <var:O> <var:f> <var:w> <var:S> <var:Z> <var:T> <var:P> <var:z> : nat , ( <var:f> >= <nat:2> ) /\ ( <var:P> >= <nat:2> ) /\ ( <var:T> >= <nat:2> ) /\ ( <var:w> >= <nat:2> ) /\ ( <var:Z> >= <nat:2> ) /\ ( <var:S> >= <nat:2> ) /\ ( <var:z> >= <nat:2> ) /\ ( <var:O> >= <nat:2> ) /\ ( <nat:1088640> = <var:O> * <var:f> * <var:w> * <var:S> * <var:Z> * <var:T> * <var:P> * <var:z> ) . Proof . exists <nat:2> . exists <nat:4> . exists <nat:12> . exists <nat:10> . exists <nat:9> . exists <nat:3> . exists <nat:7> . exists <nat:6> . assert ( <genH> : <nat:9> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:3> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:2> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:4> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:6> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:12> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:10> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:7> >= <nat:2> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 