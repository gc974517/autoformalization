\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \newtheorem{definition}{Definition} \begin{document} \begin{definition} Take as given that $ <var:q> $ is a <def:five-composite> integer assuming using some $ <var:s> $ , $ <var:d> $ , $ <var:S> $ , $ <var:n> $ , $ <var:F> \in \mathbb{N} $ we have $ <var:S> * <var:s> * <var:d> * <var:n> * <var:F> = <var:q> $ assuming some whole number $ <var:q> $ as well as such that $ <var:n> $ , $ <var:S> $ , $ <var:s> $ , $ <var:F> $ , and $ <var:d> \geq <nat:2> $ . \end{definition} \begin{theorem} $ <nat:4800> = <var:q> $ is a <def:five-composite> integer . \end{theorem} \begin{proof} We confirm $ <var:S> \cdot <var:d> \cdot <var:s> \cdot <var:F> \cdot <var:n> = <nat:4800> $ . Observe that $ <nat:5> $ , $ <nat:3> $ , $ <nat:8> $ , $ <nat:10> $ and $ <nat:4> $ are larger than or equivalent to <nat:2> . Plus observe that also $ <var:n> \times <var:d> \times <var:S> \times <var:s> \times <var:F> = <nat:4800> $ yields $ <var:d> = <nat:3> $ , $ <var:S> = <nat:4> $ , $ <var:s> = <nat:5> $ , $ <var:n> = <nat:10> $ , and $ <var:F> = <nat:8> $ . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:five-composite> ( <var:q> : nat ) := exists <var:s> <var:d> <var:S> <var:n> <var:F> : nat , ( <var:S> * <var:s> * <var:d> * <var:n> * <var:F> = <var:q> ) /\ ( <var:n> >= <nat:2> ) /\ ( <var:S> >= <nat:2> ) /\ ( <var:s> >= <nat:2> ) /\ ( <var:F> >= <nat:2> ) /\ ( <var:d> >= <nat:2> ) . Theorem <genP:1> : <def:five-composite> <nat:4800> . Proof . unfold <def:five-composite> . assert ( <genH> : <nat:5> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:3> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:8> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:10> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:4> >= <nat:2> ) . { lia . } exists <nat:5> . exists <nat:3> . exists <nat:4> . exists <nat:10> . exists <nat:8> . repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 