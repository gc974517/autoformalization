\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \newtheorem{definition}{Definition} \begin{document} \begin{definition} Allow $ <var:G> $ , $ <var:T> $ , $ <var:b> $ , $ <var:F> $ , $ <var:n> \in \mathbb{N} $ so that $ <var:F> $ , $ <var:n> $ , $ <var:b> $ , $ <var:T> $ , and $ <var:G> > <nat:1> $ . We claim that some integer $ <var:I> $ will be called <def:five-composite> assuming $ <var:T> \times <var:F> \times <var:n> \times <var:b> \times <var:G> = <var:I> $ . \end{definition} \begin{theorem} <nat:27720> is a <def:five-composite> integer . \end{theorem} \begin{proof} Recall <nat:27720> is a <def:five-composite> number with the condition <nat:27720> is the product of numbers $ <var:G> $ , $ <var:F> $ , $ <var:b> $ , $ <var:T> $ , and $ <var:n> $ so that $ <var:b> $ , $ <var:F> $ , $ <var:T> $ , $ <var:G> $ , $ <var:n> > <nat:1> $ . Allow $ <var:b> = <nat:9> $ , $ <var:G> = <nat:4> $ , $ <var:n> = <nat:10> $ , $ <var:F> = <nat:11> $ , $ <var:T> = <nat:7> $ . Observe $ <nat:10> $ , $ <nat:4> $ , $ <nat:9> $ , $ <nat:7> $ and $ <nat:11> $ are greater than <nat:1> . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:five-composite> ( <var:I> : nat ) := exists <var:G> <var:T> <var:b> <var:F> <var:n> : nat , ( <var:F> > <nat:1> ) /\ ( <var:n> > <nat:1> ) /\ ( <var:b> > <nat:1> ) /\ ( <var:T> > <nat:1> ) /\ ( <var:G> > <nat:1> ) /\ ( <var:T> * <var:F> * <var:n> * <var:b> * <var:G> = <var:I> ) . Theorem <genP:1> : <def:five-composite> <nat:27720> . Proof . unfold <def:five-composite> . exists <nat:4> . exists <nat:7> . exists <nat:9> . exists <nat:11> . exists <nat:10> . assert ( <genH> : <nat:10> > <nat:1> ) . { lia . } assert ( <genH> : <nat:4> > <nat:1> ) . { lia . } assert ( <genH> : <nat:9> > <nat:1> ) . { lia . } assert ( <genH> : <nat:7> > <nat:1> ) . { lia . } assert ( <genH> : <nat:11> > <nat:1> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 