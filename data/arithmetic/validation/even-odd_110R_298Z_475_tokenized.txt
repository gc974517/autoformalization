\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:R> * <nat:110> + <nat:298> * <var:Z> + <nat:475> $ must be odd for every terms $ <var:Z> $ , and $ <var:R> $ . \end{theorem} \begin{proof} See the summation $ <var:R> \times <nat:110> + <nat:298> \times <var:Z> $ is even . We know that the adding between an even integer with an even element of $ \mathbb{Z}^+ $ is by itself an even positive integer . Additionally , take note that the products $ <var:R> * <nat:110> $ as well as $ <var:Z> * <nat:298> $ are trivially even since the product between an even number and a positive integer is fundamentally an even natural . This fact is proven because the positive integers $ <nat:110> $ additionally $ <nat:298> $ are guaranteed to be even . and likewise as a consequence that multiplying between even numbers with an arbitrary integer is an even element of $ \mathbb{Z}^+ $ our result is proven . The addition of an even number in $ \mathbb{Z}^+ $ and an odd positive integer will be an odd natural number . Then , this claim must be true . Observe $ <nat:475> $ is obviously an odd number in $ \mathbb{Z}^+ $ . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:Z> <var:R> : nat , Nat . odd ( <nat:110> * <var:R> + <nat:298> * <var:Z> + <nat:475> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:110> = true ) . { auto . } assert ( <genH> : Nat . even <nat:298> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:110> * <var:R> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:298> * <var:Z> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:110> * <var:R> + <nat:298> * <var:Z> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . assert ( <genH> : Nat . odd <nat:475> = true ) . { auto . } rewrite <- Nat . negb_even . rewrite <genH> . rewrite <genH> . auto . Qed . 