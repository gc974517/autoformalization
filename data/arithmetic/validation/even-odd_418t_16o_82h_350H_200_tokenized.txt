\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:350> <var:H> + <nat:16> <var:o> + <var:t> <nat:418> + <var:h> <nat:82> + <nat:200> $ must be even given terms $ <var:h> $ , $ <var:o> $ , $ <var:t> $ , and $ <var:H> $ . \end{theorem} \begin{proof} The totaling between even numbers collectively will be fundamentally an even natural . Notice that $ <nat:200> $ is guaranteed to be an even whole number . Our result is true since $ <var:t> <nat:418> + <nat:16> <var:o> + <var:h> <nat:82> + <nat:350> <var:H> $ is known as even . On top of this , observe the integers $ <nat:418> $ , $ <nat:16> $ , $ <nat:82> $ , $ <nat:350> $ , will be even . Thus , the pairs $ <var:t> <nat:418> $ , $ <nat:16> <var:o> $ , $ <var:h> <nat:82> $ , $ <var:H> <nat:350> $ , is even in addition . By reason that the adding between an even number with even elements of $ \mathbb{Z}^+ $ will be by itself an even number in $ \mathbb{Z}^+ $ , as well as as a consequence that the product between an even positive integer with an arbitrary whole number must be an even number in $ \mathbb{Z}^+ $ . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:h> <var:o> <var:t> <var:H> : nat , Nat . even ( <nat:350> * <var:H> + <nat:16> * <var:o> + <nat:418> * <var:t> + <nat:82> * <var:h> + <nat:200> ) = true . Proof . intros . rewrite Nat . even_add . assert ( <genH> : Nat . even <nat:200> = true ) . { auto . } assert ( <genH> : Nat . even <nat:418> = true ) . { auto . } assert ( <genH> : Nat . even <nat:16> = true ) . { auto . } assert ( <genH> : Nat . even <nat:82> = true ) . { auto . } assert ( <genH> : Nat . even <nat:350> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:418> * <var:t> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:16> * <var:o> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:82> * <var:h> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:350> * <var:H> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:350> * <var:H> + <nat:16> * <var:o> + <nat:418> * <var:t> + <nat:82> * <var:h> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite <genH> . rewrite <genH> . auto . Qed . 