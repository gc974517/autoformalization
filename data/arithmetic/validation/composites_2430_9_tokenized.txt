\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:d> * <var:t> * <var:a> * <var:I> * <var:T> * <var:s> * <var:H> * <var:l> * <var:M> $ is the same as $ <nat:15966720> $ assuming $ <var:s> $ , $ <var:l> $ , $ <var:d> $ , $ <var:T> $ , $ <var:H> $ , $ <var:I> $ , $ <var:M> $ , $ <var:a> $ and $ <var:t> \in \mathbb{Z}^+ $ where $ <var:l> $ , $ <var:H> $ , $ <var:s> $ , $ <var:d> $ , $ <var:a> $ , $ <var:T> $ , $ <var:t> $ , $ <var:I> $ , and $ <var:M> \geq <nat:2> $ . \end{theorem} \begin{proof} Allow $ <var:H> = <nat:6> $ , $ <var:d> = <nat:11> $ , $ <var:M> = <nat:7> $ , $ <var:s> = <nat:9> $ , $ <var:a> = <nat:12> $ , $ <var:I> = <nat:4> $ , $ <var:T> = <nat:5> $ , $ <var:l> = <nat:8> $ and $ <var:t> = <nat:2> $ . Notice $ <nat:15966720> = <var:M> \times <var:T> \times <var:l> \times <var:d> \times <var:t> \times <var:a> \times <var:I> \times <var:H> \times <var:s> $ . Furthermore observe $ <nat:4> $ , $ <nat:9> $ , $ <nat:8> $ , $ <nat:2> $ , $ <nat:12> $ , $ <nat:7> $ , $ <nat:5> $ , $ <nat:6> $ , $ <nat:11> \geq <nat:2> $ . \end{proof} \end{document} 
~
Require Import Lia . Theorem <genP:1> : exists <var:s> <var:l> <var:d> <var:T> <var:H> <var:I> <var:M> <var:a> <var:t> : nat , ( <var:d> * <var:t> * <var:a> * <var:I> * <var:T> * <var:s> * <var:H> * <var:l> * <var:M> = <nat:15966720> ) /\ ( <var:l> >= <nat:2> ) /\ ( <var:H> >= <nat:2> ) /\ ( <var:s> >= <nat:2> ) /\ ( <var:d> >= <nat:2> ) /\ ( <var:a> >= <nat:2> ) /\ ( <var:T> >= <nat:2> ) /\ ( <var:t> >= <nat:2> ) /\ ( <var:I> >= <nat:2> ) /\ ( <var:M> >= <nat:2> ) . Proof . exists <nat:9> . exists <nat:8> . exists <nat:11> . exists <nat:5> . exists <nat:6> . exists <nat:4> . exists <nat:7> . exists <nat:12> . exists <nat:2> . assert ( <genH> : <nat:4> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:9> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:8> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:2> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:12> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:7> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:5> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:6> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:11> >= <nat:2> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 