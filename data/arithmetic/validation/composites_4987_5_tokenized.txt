\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} We define that $ <var:l> $ is a <def:five-composite> number under the condition that there exist some natural numbers $ <var:X> $ , $ <var:c> $ , $ <var:W> $ , $ <var:n> $ , $ <var:i> $ where so that $ <var:c> $ , $ <var:n> $ , $ <var:X> $ , $ <var:i> $ and $ <var:W> > <nat:1> $ plus using some whole number $ <var:l> $ , $ <var:X> \times <var:W> \times <var:c> \times <var:i> \times <var:n> = <var:l> $ . Hence $ <var:l> = <nat:83160> $ is a <def:five-composite> whole number . \end{theorem} \begin{proof} Recall a <def:five-composite> is the multiplication between whole numbers $ <var:W> $ , $ <var:i> $ , $ <var:n> $ , $ <var:c> $ and $ <var:X> $ larger than <nat:1> . Assume $ <var:c> = <nat:10> $ , $ <var:n> = <nat:7> $ , $ <var:i> = <nat:12> $ , $ <var:W> = <nat:11> $ , $ <var:X> = <nat:9> $ . Note $ <nat:10> $ , $ <nat:11> $ , $ <nat:7> $ , $ <nat:12> $ and $ <nat:9> $ are larger than <nat:1> . This implies <nat:83160> is a <def:five-composite> integer . Therefore , <nat:83160> is a <def:five-composite> positive integer has been verified . Hence , $ <var:W> $ , $ <var:c> $ , $ <var:n> $ , $ <var:i> $ , and $ <var:X> > <nat:1> $ and $ <nat:83160> = <var:i> \times <var:W> \times <var:X> \times <var:n> \times <var:c> $ has been validated . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:five-composite> ( <var:l> : nat ) := exists <var:X> <var:c> <var:W> <var:n> <var:i> : nat , ( <var:c> > <nat:1> ) /\ ( <var:n> > <nat:1> ) /\ ( <var:X> > <nat:1> ) /\ ( <var:i> > <nat:1> ) /\ ( <var:W> > <nat:1> ) /\ ( <var:X> * <var:W> * <var:c> * <var:i> * <var:n> = <var:l> ) . Theorem <genP:1> : <def:five-composite> <nat:83160> . Proof . unfold <def:five-composite> . exists <nat:9> . exists <nat:10> . exists <nat:11> . exists <nat:7> . exists <nat:12> . assert ( <genH> : <nat:10> > <nat:1> ) . { lia . } assert ( <genH> : <nat:11> > <nat:1> ) . { lia . } assert ( <genH> : <nat:7> > <nat:1> ) . { lia . } assert ( <genH> : <nat:12> > <nat:1> ) . { lia . } assert ( <genH> : <nat:9> > <nat:1> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 