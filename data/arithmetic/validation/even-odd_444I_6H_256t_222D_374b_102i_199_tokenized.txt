\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:444> <var:I> + <nat:199> + <nat:6> <var:H> + <nat:256> <var:t> + <nat:222> <var:D> + <var:b> <nat:374> + <nat:102> <var:i> $ must be odd taking some terms $ <var:t> $ , $ <var:i> $ , $ <var:b> $ , $ <var:I> $ , $ <var:D> $ , and $ <var:H> $ . \end{theorem} \begin{proof} Recall that the products $ <var:i> * <nat:102> $ , $ <var:t> * <nat:256> $ , and moreover $ <nat:444> * <var:I> $ must be even . This must be true since taking the product between an even element of $ \mathbb{N} $ and any number in $ \mathbb{Z}^+ $ will be an even number in $ \mathbb{N} $ . Observe $ <nat:374> * <var:b> $ is known as even . Additionally , the pair $ <var:D> * <nat:222> $ is trivially an even number in $ \mathbb{Z}^+ $ from the knowledge multiplying between an even positive integer and an arbitrary whole number will be instrinsically an even element of $ \mathbb{N} $ . The pair $ <nat:6> * <var:H> $ is obviously even by reason that the product of an even whole number with a number in $ \mathbb{Z}^+ $ is even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:t> <var:i> <var:b> <var:I> <var:D> <var:H> : nat , Nat . odd ( <nat:444> * <var:I> + <nat:6> * <var:H> + <nat:256> * <var:t> + <nat:222> * <var:D> + <nat:374> * <var:b> + <nat:102> * <var:i> + <nat:199> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:102> * <var:i> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:256> * <var:t> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:444> * <var:I> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:374> * <var:b> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:222> * <var:D> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:6> * <var:H> ) = true ) . { rewrite Nat . even_mul . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 