\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:18> + <var:T> \cdot <nat:460> + <var:B> \cdot <nat:40> + <var:m> \cdot <nat:160> + <nat:364> \cdot <var:f> + <var:r> \cdot <nat:242> + <nat:312> \cdot <var:M> $ is even taking all unknowns $ <var:T> $ , $ <var:B> $ , $ <var:m> $ , $ <var:f> $ , $ <var:M> $ , and $ <var:r> $ . \end{theorem} \begin{proof} Recall the positive integers $ <nat:460> $ , $ <nat:40> $ , $ <nat:160> $ , $ <nat:364> $ , $ <nat:242> $ , as well as $ <nat:312> $ are trivially even . In consequence , the products $ <var:T> <nat:460> $ , $ <var:B> <nat:40> $ , $ <nat:160> <var:m> $ , $ <nat:364> <var:f> $ , $ <nat:242> <var:r> $ , as well as $ <var:M> <nat:312> $ is even as well . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:T> <var:B> <var:m> <var:f> <var:M> <var:r> : nat , Nat . even ( <nat:460> * <var:T> + <nat:40> * <var:B> + <nat:160> * <var:m> + <nat:364> * <var:f> + <nat:242> * <var:r> + <nat:312> * <var:M> + <nat:18> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:460> = true ) . { auto . } assert ( <genH> : Nat . even <nat:40> = true ) . { auto . } assert ( <genH> : Nat . even <nat:160> = true ) . { auto . } assert ( <genH> : Nat . even <nat:364> = true ) . { auto . } assert ( <genH> : Nat . even <nat:242> = true ) . { auto . } assert ( <genH> : Nat . even <nat:312> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:460> * <var:T> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:40> * <var:B> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:160> * <var:m> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:364> * <var:f> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:242> * <var:r> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:312> * <var:M> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 