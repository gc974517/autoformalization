\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Assume that $ <var:J> $ is a <def:seven-composite> integer given there are some natural numbers $ <var:Z> $ , $ <var:P> $ , $ <var:w> $ , $ <var:h> $ , $ <var:l> $ , $ <var:i> $ , $ <var:r> $ so that such that $ <var:Z> $ , $ <var:i> $ , $ <var:l> $ , $ <var:P> $ , $ <var:h> $ , $ <var:r> $ , $ <var:w> > <nat:1> $ as well as for $ <var:J> \in \mathbb{Z}^+ $ , $ <var:l> * <var:w> * <var:h> * <var:P> * <var:i> * <var:Z> * <var:r> = <var:J> $ . So the positive integer <nat:73920> is a <def:seven-composite> integer . \end{theorem} \begin{proof} Note that $ <var:l> \cdot <var:h> \cdot <var:Z> \cdot <var:P> \cdot <var:r> \cdot <var:w> \cdot <var:i> = <nat:73920> $ shows $ <var:w> = <nat:4> $ , $ <var:h> = <nat:3> $ , $ <var:l> = <nat:7> $ , $ <var:r> = <nat:11> $ , $ <var:P> = <nat:5> $ , $ <var:i> = <nat:2> $ , $ <var:Z> = <nat:8> $ . Additionally notice that $ <nat:11> $ , $ <nat:5> $ , $ <nat:3> $ , $ <nat:4> $ , $ <nat:8> $ , $ <nat:2> $ and $ <nat:7> $ are greater than <nat:1> . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:seven-composite> ( <var:J> : nat ) := exists <var:Z> <var:P> <var:w> <var:h> <var:l> <var:i> <var:r> : nat , ( <var:Z> > <nat:1> ) /\ ( <var:i> > <nat:1> ) /\ ( <var:l> > <nat:1> ) /\ ( <var:P> > <nat:1> ) /\ ( <var:h> > <nat:1> ) /\ ( <var:r> > <nat:1> ) /\ ( <var:w> > <nat:1> ) /\ ( <var:l> * <var:w> * <var:h> * <var:P> * <var:i> * <var:Z> * <var:r> = <var:J> ) . Theorem <genP:1> : <def:seven-composite> <nat:73920> . Proof . unfold <def:seven-composite> . exists <nat:8> . exists <nat:5> . exists <nat:4> . exists <nat:3> . exists <nat:7> . exists <nat:2> . exists <nat:11> . assert ( <genH> : <nat:11> > <nat:1> ) . { lia . } assert ( <genH> : <nat:5> > <nat:1> ) . { lia . } assert ( <genH> : <nat:3> > <nat:1> ) . { lia . } assert ( <genH> : <nat:4> > <nat:1> ) . { lia . } assert ( <genH> : <nat:8> > <nat:1> ) . { lia . } assert ( <genH> : <nat:2> > <nat:1> ) . { lia . } assert ( <genH> : <nat:7> > <nat:1> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 