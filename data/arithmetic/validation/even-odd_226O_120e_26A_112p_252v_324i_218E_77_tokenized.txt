\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:O> <nat:226> + <nat:120> <var:e> + <nat:26> <var:A> + <nat:112> <var:p> + <var:v> <nat:252> + <nat:77> + <nat:324> <var:i> + <nat:218> <var:E> $ will be odd . \end{theorem} \begin{proof} Additionally , see that the pairs $ <nat:226> \times <var:O> $ , $ <nat:120> \times <var:e> $ , $ <nat:26> \times <var:A> $ , $ <nat:112> \times <var:p> $ , $ <var:v> \times <nat:252> $ , $ <var:i> \times <nat:324> $ , and also $ <nat:218> \times <var:E> $ will be even whole numbers since the product between an even element of $ \mathbb{N} $ with some number must be even . This claim holds as a consequence that the positive integers $ <nat:226> $ , $ <nat:120> $ , $ <nat:26> $ , $ <nat:112> $ , $ <nat:252> $ , $ <nat:324> $ , as well as $ <nat:218> $ are obviously even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:O> <var:e> <var:A> <var:p> <var:v> <var:i> <var:E> : nat , Nat . odd ( <nat:226> * <var:O> + <nat:120> * <var:e> + <nat:26> * <var:A> + <nat:112> * <var:p> + <nat:252> * <var:v> + <nat:324> * <var:i> + <nat:218> * <var:E> + <nat:77> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:226> = true ) . { auto . } assert ( <genH> : Nat . even <nat:120> = true ) . { auto . } assert ( <genH> : Nat . even <nat:26> = true ) . { auto . } assert ( <genH> : Nat . even <nat:112> = true ) . { auto . } assert ( <genH> : Nat . even <nat:252> = true ) . { auto . } assert ( <genH> : Nat . even <nat:324> = true ) . { auto . } assert ( <genH> : Nat . even <nat:218> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:226> * <var:O> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:120> * <var:e> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:26> * <var:A> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:112> * <var:p> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:252> * <var:v> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:324> * <var:i> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:218> * <var:E> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 