\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:60> \cdot <var:Z> + <nat:266> \cdot <var:T> + <nat:154> \cdot <var:n> + <var:w> \cdot <nat:152> + <nat:44> \cdot <var:e> + <nat:335> + <nat:262> \cdot <var:N> $ is guaranteed to be odd . \end{theorem} \begin{proof} We prove $ <nat:152> * <var:w> + <nat:154> * <var:n> + <var:e> * <nat:44> + <var:N> * <nat:262> + <nat:335> + <nat:266> * <var:T> + <var:Z> * <nat:60> $ must be odd . We prove that the formula $ <var:e> <nat:44> + <var:w> <nat:152> + <var:N> <nat:262> + <var:T> <nat:266> + <var:Z> <nat:60> + <nat:335> + <nat:154> <var:n> $ is obviously odd from the knowledge $ <nat:152> \times <var:w> + <nat:266> \times <var:T> + <nat:262> \times <var:N> + <var:Z> \times <nat:60> + <nat:44> \times <var:e> + <nat:154> \times <var:n> $ is clearly even . The pair $ <nat:154> <var:n> $ is known as an even element of $ \mathbb{N} $ . This fact holds because the multiplication of an even number and an arbitrary natural number must be itself an even integer . Furthermore , remember that the products $ <var:Z> <nat:60> $ , $ <var:T> <nat:266> $ , plus $ <var:N> <nat:262> $ are trivially even numbers from the fact the product of an even number and any natural number must be an even element of $ \mathbb{N} $ . See that the product $ <var:e> <nat:44> $ is guaranteed to be an even number in $ \mathbb{Z}^+ $ . This claim is proven because the product between an even element of $ \mathbb{Z}^+ $ and an arbitrary positive integer will be an even natural . Building on , $ <nat:152> <var:w> $ is known to be even . The adding of even elements of $ \mathbb{Z}^+ $ successively and an odd integer is odd . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:Z> <var:T> <var:n> <var:w> <var:e> <var:N> : nat , Nat . odd ( <nat:60> * <var:Z> + <nat:266> * <var:T> + <nat:154> * <var:n> + <nat:152> * <var:w> + <nat:44> * <var:e> + <nat:262> * <var:N> + <nat:335> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:154> * <var:n> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:60> * <var:Z> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:266> * <var:T> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:262> * <var:N> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:44> * <var:e> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:152> * <var:w> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:60> * <var:Z> + <nat:266> * <var:T> + <nat:154> * <var:n> + <nat:152> * <var:w> + <nat:44> * <var:e> + <nat:262> * <var:N> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . auto . Qed . 