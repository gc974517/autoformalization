\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:428> <var:Z> + <nat:85> + <nat:328> <var:V> + <var:W> <nat:424> + <var:U> <nat:178> + <nat:486> <var:k> + <nat:268> <var:u> $ is odd for some positive integers $ <var:W> $ , $ <var:Z> $ , $ <var:U> $ , $ <var:V> $ , $ <var:u> $ , and $ <var:k> $ . \end{theorem} \begin{proof} $ <var:Z> \times <nat:428> $ is clearly an even number . This fact is proven by reason that the product of an even integer with an arbitrary natural number will be even . $ <nat:268> \times <var:u> $ is known as even . This claim holds because the multiplication of an even element of $ \mathbb{N} $ with a number in $ \mathbb{Z}^+ $ must be an even element of $ \mathbb{N} $ . Notice the pairs $ <var:U> \times <nat:178> $ and moreover $ <nat:328> \times <var:V> $ are clearly even numbers . Notice the term $ <nat:424> \times <var:W> $ is clearly even . In addition to this , take note that the term $ <nat:486> \times <var:k> $ is obviously even by reason that taking the product between an even element of $ \mathbb{Z}^+ $ and a number is guaranteed to be an even whole number . It can be shown that $ <var:k> \times <nat:486> + <var:U> \times <nat:178> + <var:Z> \times <nat:428> + <nat:268> \times <var:u> + <nat:328> \times <var:V> + <nat:85> + <nat:424> \times <var:W> $ is guaranteed to be odd . Observe that $ <nat:85> $ is known as an odd number in $ \mathbb{N} $ . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:W> <var:Z> <var:U> <var:V> <var:u> <var:k> : nat , Nat . odd ( <nat:428> * <var:Z> + <nat:328> * <var:V> + <nat:424> * <var:W> + <nat:178> * <var:U> + <nat:486> * <var:k> + <nat:268> * <var:u> + <nat:85> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:428> * <var:Z> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:268> * <var:u> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:178> * <var:U> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:328> * <var:V> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:424> * <var:W> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:486> * <var:k> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . odd <nat:85> = true ) . { auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 