\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:j> * <nat:312> + <nat:454> * <var:e> + <nat:318> * <var:F> + <var:q> * <nat:446> + <nat:308> * <var:g> + <var:U> * <nat:36> + <nat:51> + <var:k> * <nat:56> + <nat:272> * <var:b> $ will be odd using some variables $ <var:q> $ , $ <var:j> $ , $ <var:U> $ , $ <var:k> $ , $ <var:b> $ , $ <var:F> $ , $ <var:g> $ , and $ <var:e> $ . \end{theorem} \begin{proof} Take note that the terms $ <nat:312> <var:j> $ plus $ <nat:272> <var:b> $ are guaranteed to be even numbers in $ \mathbb{Z}^+ $ by reason that the product between an even element of $ \mathbb{N} $ with any number in $ \mathbb{Z}^+ $ must be an even number in $ \mathbb{N} $ . Further , the products $ <nat:56> <var:k> $ as well as $ <nat:308> <var:g> $ are obviously even numbers in $ \mathbb{Z}^+ $ . Additionally , observe that the terms $ <var:e> <nat:454> $ and also $ <nat:318> <var:F> $ are even . On top of this , the pair $ <nat:36> <var:U> $ is known as an even element of $ \mathbb{N} $ . Further , see the pair $ <nat:446> <var:q> $ is obviously an even number . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:q> <var:j> <var:U> <var:k> <var:b> <var:F> <var:g> <var:e> : nat , Nat . odd ( <nat:312> * <var:j> + <nat:454> * <var:e> + <nat:318> * <var:F> + <nat:446> * <var:q> + <nat:308> * <var:g> + <nat:36> * <var:U> + <nat:56> * <var:k> + <nat:272> * <var:b> + <nat:51> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:312> * <var:j> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:272> * <var:b> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:56> * <var:k> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:308> * <var:g> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:454> * <var:e> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:318> * <var:F> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:36> * <var:U> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:446> * <var:q> ) = true ) . { rewrite Nat . even_mul . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 