\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Allow $ <var:B> $ , $ <var:J> $ , $ <var:X> $ , $ <var:M> $ , $ <var:o> $ , $ <var:N> $ , $ <var:f> $ as numbers . We define that some integer $ <var:s> $ is a <def:seven-composite> positive integer assuming $ <var:s> = <var:J> * <var:B> * <var:o> * <var:X> * <var:f> * <var:M> * <var:N> $ and satisfying the condition that $ <var:N> $ , $ <var:J> $ , $ <var:X> $ , $ <var:f> $ , $ <var:o> $ , $ <var:M> $ , and $ <var:B> \geq <nat:2> $ . Therefore <nat:2217600> is a <def:seven-composite> whole number . \end{theorem} \begin{proof} Let $ <var:N> = <nat:5> $ , $ <var:B> = <nat:6> $ , $ <var:M> = <nat:10> $ , $ <var:J> = <nat:7> $ , $ <var:o> = <nat:12> $ , $ <var:f> = <nat:11> $ and $ <var:X> = <nat:8> $ . Notice $ <nat:10> $ , $ <nat:5> $ , $ <nat:8> $ , $ <nat:7> $ , $ <nat:12> $ , $ <nat:11> $ , $ <nat:6> $ are greater than or equivalent to <nat:2> . Similarly observe that likewise $ <var:N> * <var:B> * <var:X> * <var:o> * <var:M> * <var:J> * <var:f> = <nat:2217600> $ . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:seven-composite> ( <var:s> : nat ) := exists <var:B> <var:J> <var:X> <var:M> <var:o> <var:N> <var:f> : nat , ( <var:s> = <var:J> * <var:B> * <var:o> * <var:X> * <var:f> * <var:M> * <var:N> ) /\ ( <var:N> >= <nat:2> ) /\ ( <var:J> >= <nat:2> ) /\ ( <var:X> >= <nat:2> ) /\ ( <var:f> >= <nat:2> ) /\ ( <var:o> >= <nat:2> ) /\ ( <var:M> >= <nat:2> ) /\ ( <var:B> >= <nat:2> ) . Theorem <genP:1> : <def:seven-composite> <nat:2217600> . Proof . unfold <def:seven-composite> . exists <nat:6> . exists <nat:7> . exists <nat:8> . exists <nat:10> . exists <nat:12> . exists <nat:5> . exists <nat:11> . assert ( <genH> : <nat:10> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:5> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:8> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:7> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:12> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:11> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:6> >= <nat:2> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 