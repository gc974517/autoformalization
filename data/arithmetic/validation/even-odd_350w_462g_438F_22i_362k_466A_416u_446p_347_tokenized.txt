\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:w> \times <nat:350> + <nat:462> \times <var:g> + <nat:347> + <nat:438> \times <var:F> + <var:i> \times <nat:22> + <var:k> \times <nat:362> + <var:A> \times <nat:466> + <var:u> \times <nat:416> + <var:p> \times <nat:446> $ is odd . \end{theorem} \begin{proof} Further , see the whole numbers $ <nat:350> $ , $ <nat:462> $ , $ <nat:438> $ , $ <nat:22> $ , $ <nat:362> $ , $ <nat:466> $ , $ <nat:416> $ , as well as $ <nat:446> $ are trivially even numbers . So , the terms $ <var:w> * <nat:350> $ , $ <var:g> * <nat:462> $ , $ <var:F> * <nat:438> $ , $ <nat:22> * <var:i> $ , $ <var:k> * <nat:362> $ , $ <var:A> * <nat:466> $ , $ <var:u> * <nat:416> $ , plus $ <nat:446> * <var:p> $ is guaranteed to be even also . It can be verified that this proposition is proven . We know that $ <nat:347> $ is known to be an odd natural . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:w> <var:g> <var:F> <var:i> <var:k> <var:A> <var:u> <var:p> : nat , Nat . odd ( <nat:350> * <var:w> + <nat:462> * <var:g> + <nat:438> * <var:F> + <nat:22> * <var:i> + <nat:362> * <var:k> + <nat:466> * <var:A> + <nat:416> * <var:u> + <nat:446> * <var:p> + <nat:347> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:350> = true ) . { auto . } assert ( <genH> : Nat . even <nat:462> = true ) . { auto . } assert ( <genH> : Nat . even <nat:438> = true ) . { auto . } assert ( <genH> : Nat . even <nat:22> = true ) . { auto . } assert ( <genH> : Nat . even <nat:362> = true ) . { auto . } assert ( <genH> : Nat . even <nat:466> = true ) . { auto . } assert ( <genH> : Nat . even <nat:416> = true ) . { auto . } assert ( <genH> : Nat . even <nat:446> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:350> * <var:w> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:462> * <var:g> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:438> * <var:F> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:22> * <var:i> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:362> * <var:k> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:466> * <var:A> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:416> * <var:u> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:446> * <var:p> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . odd <nat:347> = true ) . { auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 