\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:170> * <var:C> + <nat:44> * <var:s> + <nat:102> * <var:T> + <nat:120> * <var:A> + <nat:178> * <var:x> + <nat:151> + <var:K> * <nat:492> + <nat:64> * <var:n> $ is guaranteed to be odd given some natural terms $ <var:n> $ , $ <var:s> $ , $ <var:K> $ , $ <var:C> $ , $ <var:T> $ , $ <var:A> $ , and $ <var:x> $ . \end{theorem} \begin{proof} The formula $ <var:x> <nat:178> + <var:K> <nat:492> + <var:n> <nat:64> + <nat:44> <var:s> + <nat:102> <var:T> + <var:A> <nat:120> + <nat:170> <var:C> $ is clearly even . The pairs $ <var:n> * <nat:64> $ additionally $ <var:T> * <nat:102> $ will be even as a consequence that taking the product of an even integer and a number in $ \mathbb{Z}^+ $ is guaranteed to be an even element of $ \mathbb{N} $ . The products $ <var:A> * <nat:120> $ , $ <nat:44> * <var:s> $ , $ <var:x> * <nat:178> $ , and moreover $ <nat:170> * <var:C> $ will be even numbers in $ \mathbb{N} $ as a consequence that the product of an even element of $ \mathbb{Z}^+ $ and a positive integer must be even . The product $ <var:K> * <nat:492> $ is guaranteed to be even . We verify $ <var:T> <nat:102> + <var:n> <nat:64> + <nat:170> <var:C> + <var:K> <nat:492> + <nat:151> + <var:s> <nat:44> + <var:A> <nat:120> + <var:x> <nat:178> $ is guaranteed to be odd . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:n> <var:s> <var:K> <var:C> <var:T> <var:A> <var:x> : nat , Nat . odd ( <nat:170> * <var:C> + <nat:44> * <var:s> + <nat:102> * <var:T> + <nat:120> * <var:A> + <nat:178> * <var:x> + <nat:492> * <var:K> + <nat:64> * <var:n> + <nat:151> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:64> * <var:n> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:102> * <var:T> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:120> * <var:A> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:44> * <var:s> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:178> * <var:x> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:170> * <var:C> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:492> * <var:K> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:170> * <var:C> + <nat:44> * <var:s> + <nat:102> * <var:T> + <nat:120> * <var:A> + <nat:178> * <var:x> + <nat:492> * <var:K> + <nat:64> * <var:n> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . auto . Qed . 