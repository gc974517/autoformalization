\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \newtheorem{definition}{Definition} \begin{document} \begin{definition} There are $ <var:U> $ , $ <var:L> $ , $ <var:K> $ , $ <var:S> $ , $ <var:x> $ , $ <var:W> $ , $ <var:l> $ , $ <var:h> $ , $ <var:o> \in \mathbb{N} $ satisfying the condition that $ <var:S> $ , $ <var:W> $ , $ <var:L> $ , $ <var:l> $ , $ <var:U> $ , $ <var:K> $ , $ <var:x> $ , $ <var:o> $ and $ <var:h> \geq <nat:2> $ . We say that $ <var:B> \in \mathbb{Z}^+ $ is considered to be a <def:nine-composite> integer given $ <var:B> = <var:l> * <var:L> * <var:K> * <var:W> * <var:S> * <var:U> * <var:h> * <var:o> * <var:x> $ . \end{definition} \begin{theorem} $ <nat:7257600> = <var:B> $ is a <def:nine-composite> integer . \end{theorem} \begin{proof} Notice that $ <nat:10> $ , $ <nat:9> $ , $ <nat:3> $ , $ <nat:5> $ , $ <nat:7> $ , $ <nat:2> $ , $ <nat:12> $ , $ <nat:8> $ and $ <nat:4> $ are larger than or equivalent to <nat:2> . Moreover notice too $ <nat:7257600> = <nat:5> \cdot <nat:9> \cdot <nat:12> \cdot <nat:4> \cdot <nat:10> \cdot <nat:3> \cdot <nat:2> \cdot <nat:7> \cdot <nat:8> = <var:h> \cdot <var:W> \cdot <var:K> \cdot <var:o> \cdot <var:S> \cdot <var:x> \cdot <var:L> \cdot <var:l> \cdot <var:U> $ . This shows <nat:7257600> is a <def:nine-composite> number . Hence , $ <nat:7257600> = <var:L> * <var:U> * <var:l> * <var:o> * <var:x> * <var:S> * <var:W> * <var:h> * <var:K> $ is validated . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:nine-composite> ( <var:B> : nat ) := exists <var:U> <var:L> <var:K> <var:S> <var:x> <var:W> <var:l> <var:h> <var:o> : nat , ( <var:S> >= <nat:2> ) /\ ( <var:W> >= <nat:2> ) /\ ( <var:L> >= <nat:2> ) /\ ( <var:l> >= <nat:2> ) /\ ( <var:U> >= <nat:2> ) /\ ( <var:K> >= <nat:2> ) /\ ( <var:x> >= <nat:2> ) /\ ( <var:o> >= <nat:2> ) /\ ( <var:h> >= <nat:2> ) /\ ( <var:B> = <var:l> * <var:L> * <var:K> * <var:W> * <var:S> * <var:U> * <var:h> * <var:o> * <var:x> ) . Theorem <genP:1> : <def:nine-composite> <nat:7257600> . Proof . unfold <def:nine-composite> . assert ( <genH> : <nat:10> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:9> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:3> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:5> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:7> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:2> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:12> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:8> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:4> >= <nat:2> ) . { lia . } exists <nat:8> . exists <nat:2> . exists <nat:12> . exists <nat:10> . exists <nat:3> . exists <nat:9> . exists <nat:7> . exists <nat:5> . exists <nat:4> . repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 