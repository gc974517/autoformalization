\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:e> <nat:134> + <nat:450> <var:A> + <var:S> <nat:312> + <nat:238> <var:b> + <nat:287> + <var:p> <nat:162> + <var:w> <nat:24> $ must be odd . \end{theorem} \begin{proof} Take note that $ <nat:287> $ is trivially an odd number in $ \mathbb{N} $ . Take note the adding of even numbers concurrently and an odd number will be itself an odd number in $ \mathbb{N} $ . We make use the knowledge that the sum $ <nat:312> \times <var:S> + <var:e> \times <nat:134> + <nat:162> \times <var:p> + <var:A> \times <nat:450> + <nat:287> + <nat:24> \times <var:w> + <var:b> \times <nat:238> $ is guaranteed to be odd by reason that the formula $ <var:p> \times <nat:162> + <var:w> \times <nat:24> + <nat:450> \times <var:A> + <var:S> \times <nat:312> + <var:b> \times <nat:238> + <var:e> \times <nat:134> $ is obviously even , as a consequence that the summing between an even integer and an even integer must be even . See the pair $ <nat:450> <var:A> $ is trivially an even number in $ \mathbb{Z}^+ $ . This holds since the integer $ <nat:450> $ is obviously obviously an even element of $ \mathbb{Z}^+ $ . In addition , the pair $ <var:p> <nat:162> $ is guaranteed to be even . This claim is proven by reason that the leading term $ <nat:162> $ is trivially even . Furthermore , take note the integer $ <nat:134> $ is clearly even . So , $ <var:e> <nat:134> $ is even too . What's more , the whole number $ <nat:238> $ is trivially an even number in $ \mathbb{Z}^+ $ . Thus , $ <nat:238> <var:b> $ is guaranteed to be even in addition . On top of this , observe that the term $ <nat:312> <var:S> $ is guaranteed to be even . This claim must be true by reason that taking the product between an even element of $ \mathbb{N} $ with an arbitrary number in $ \mathbb{N} $ will be by itself an even element of $ \mathbb{Z}^+ $ . This fact must be true since the integer $ <nat:312> $ is clearly an even number in $ \mathbb{Z}^+ $ . We know that the product $ <nat:24> <var:w> $ is known to be even . This claim holds by reason that multiplying between an even element of $ \mathbb{N} $ and some natural is even additionally the integer $ <nat:24> $ is known as itself an even natural . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:e> <var:A> <var:S> <var:b> <var:p> <var:w> : nat , Nat . odd ( <nat:134> * <var:e> + <nat:450> * <var:A> + <nat:312> * <var:S> + <nat:238> * <var:b> + <nat:162> * <var:p> + <nat:24> * <var:w> + <nat:287> ) = true . Proof . intros . assert ( <genH> : Nat . odd <nat:287> = true ) . { auto . } rewrite Nat . odd_add . assert ( <genH> : Nat . even <nat:450> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:450> * <var:A> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:162> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:162> * <var:p> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:134> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:134> * <var:e> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:238> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:238> * <var:b> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:312> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:312> * <var:S> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:24> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:24> * <var:w> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:134> * <var:e> + <nat:450> * <var:A> + <nat:312> * <var:S> + <nat:238> * <var:b> + <nat:162> * <var:p> + <nat:24> * <var:w> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite <- Nat . negb_even . rewrite <genH> . rewrite <genH> . auto . Qed . 