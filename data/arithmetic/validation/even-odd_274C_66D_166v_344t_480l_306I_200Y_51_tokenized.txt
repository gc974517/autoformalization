\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:306> * <var:I> + <var:Y> * <nat:200> + <var:l> * <nat:480> + <nat:166> * <var:v> + <var:D> * <nat:66> + <nat:51> + <var:t> * <nat:344> + <nat:274> * <var:C> $ must be odd . \end{theorem} \begin{proof} We check $ <var:v> * <nat:166> + <var:D> * <nat:66> + <nat:480> * <var:l> + <nat:51> + <var:C> * <nat:274> + <var:Y> * <nat:200> + <var:t> * <nat:344> + <nat:306> * <var:I> $ must be odd . Take note $ <nat:274> * <var:C> + <nat:66> * <var:D> + <nat:306> * <var:I> + <var:v> * <nat:166> + <nat:480> * <var:l> + <nat:200> * <var:Y> + <nat:51> + <var:t> * <nat:344> $ is clearly odd because $ <var:C> <nat:274> + <var:D> <nat:66> + <var:v> <nat:166> + <nat:344> <var:t> + <var:l> <nat:480> + <nat:306> <var:I> + <var:Y> <nat:200> $ is guaranteed to be even . Notice that the products $ <var:v> <nat:166> $ and moreover $ <var:l> <nat:480> $ will be even . Likewise , recall the pairs $ <var:D> <nat:66> $ , $ <nat:200> <var:Y> $ , $ <var:t> <nat:344> $ , in addition to $ <nat:306> <var:I> $ must be even . This fact is proven since the multiplication between an even natural and a integer is guaranteed to be an even positive integer . In addition , recall that the product $ <var:C> <nat:274> $ is an even number in $ \mathbb{Z}^+ $ . The addition between even natural numbers together with an odd positive integer will be an odd whole number . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:I> <var:Y> <var:l> <var:v> <var:D> <var:t> <var:C> : nat , Nat . odd ( <nat:306> * <var:I> + <nat:200> * <var:Y> + <nat:480> * <var:l> + <nat:166> * <var:v> + <nat:66> * <var:D> + <nat:344> * <var:t> + <nat:274> * <var:C> + <nat:51> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:166> * <var:v> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:480> * <var:l> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:66> * <var:D> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:200> * <var:Y> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:344> * <var:t> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:306> * <var:I> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:274> * <var:C> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:306> * <var:I> + <nat:200> * <var:Y> + <nat:480> * <var:l> + <nat:166> * <var:v> + <nat:66> * <var:D> + <nat:344> * <var:t> + <nat:274> * <var:C> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . auto . Qed . 