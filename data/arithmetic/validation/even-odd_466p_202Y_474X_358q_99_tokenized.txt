\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} For unknowns $ <var:q> $ , $ <var:Y> $ , $ <var:X> $ , and $ <var:p> $ the expression $ <nat:474> <var:X> + <nat:358> <var:q> + <nat:99> + <nat:202> <var:Y> + <var:p> <nat:466> $ is odd . \end{theorem} \begin{proof} See that $ <nat:99> $ is trivially odd . It can be justified that $ <var:p> \times <nat:466> + <nat:202> \times <var:Y> + <nat:99> + <var:X> \times <nat:474> + <nat:358> \times <var:q> $ is guaranteed to be odd . What's more , notice the coefficients $ <nat:466> $ , $ <nat:202> $ , $ <nat:474> $ , additionally $ <nat:358> $ are known to be even numbers in $ \mathbb{N} $ . Consequently , the pairs $ <nat:466> \times <var:p> $ , $ <nat:202> \times <var:Y> $ , $ <nat:474> \times <var:X> $ , and also $ <var:q> \times <nat:358> $ must be even at the same time . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:q> <var:Y> <var:X> <var:p> : nat , Nat . odd ( <nat:474> * <var:X> + <nat:358> * <var:q> + <nat:202> * <var:Y> + <nat:466> * <var:p> + <nat:99> ) = true . Proof . intros . assert ( <genH> : Nat . odd <nat:99> = true ) . { auto . } assert ( <genH> : Nat . even <nat:466> = true ) . { auto . } assert ( <genH> : Nat . even <nat:202> = true ) . { auto . } assert ( <genH> : Nat . even <nat:474> = true ) . { auto . } assert ( <genH> : Nat . even <nat:358> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:466> * <var:p> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:202> * <var:Y> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:474> * <var:X> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:358> * <var:q> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 