\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Assuming all variables $ <var:g> $ , $ <var:U> $ , $ <var:P> $ , $ <var:s> $ , $ <var:J> $ , $ <var:h> $ , $ <var:C> $ , and $ <var:b> $ $ <var:C> \cdot <nat:496> + <var:P> \cdot <nat:342> + <var:g> \cdot <nat:428> + <nat:74> \cdot <var:b> + <nat:86> \cdot <var:s> + <nat:5> + <nat:322> \cdot <var:h> + <nat:404> \cdot <var:U> + <var:J> \cdot <nat:54> $ is odd . \end{theorem} \begin{proof} See that $ <nat:5> $ is trivially odd . Recall the summing of an even natural and an odd number is guaranteed to be odd . Remember that the products $ <var:h> <nat:322> $ , $ <var:g> <nat:428> $ , plus $ <var:U> <nat:404> $ are known to be even as a consequence that taking the product between an even element of $ \mathbb{Z}^+ $ with some number in $ \mathbb{Z}^+ $ will be even . This is proven by reason that the natural numbers $ <nat:322> $ , $ <nat:428> $ , and moreover $ <nat:404> $ are trivially even numbers . The natural numbers $ <nat:496> $ , $ <nat:342> $ , $ <nat:86> $ , additionally $ <nat:54> $ are obviously even positive integers . As a consequence , the products $ <var:C> <nat:496> $ , $ <nat:342> <var:P> $ , $ <nat:86> <var:s> $ , additionally $ <nat:54> <var:J> $ is guaranteed to be even in addition . Recall the product $ <var:b> <nat:74> $ is known as an even number in $ \mathbb{Z}^+ $ because multiplying of an even whole number and an arbitrary integer will be an even natural number and likewise the integer $ <nat:74> $ is known as by itself an even natural number . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:g> <var:U> <var:P> <var:s> <var:J> <var:h> <var:C> <var:b> : nat , Nat . odd ( <nat:496> * <var:C> + <nat:342> * <var:P> + <nat:428> * <var:g> + <nat:74> * <var:b> + <nat:86> * <var:s> + <nat:322> * <var:h> + <nat:404> * <var:U> + <nat:54> * <var:J> + <nat:5> ) = true . Proof . intros . assert ( <genH> : Nat . odd <nat:5> = true ) . { auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . assert ( <genH> : Nat . even <nat:322> = true ) . { auto . } assert ( <genH> : Nat . even <nat:428> = true ) . { auto . } assert ( <genH> : Nat . even <nat:404> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:322> * <var:h> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:428> * <var:g> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:404> * <var:U> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:496> = true ) . { auto . } assert ( <genH> : Nat . even <nat:342> = true ) . { auto . } assert ( <genH> : Nat . even <nat:86> = true ) . { auto . } assert ( <genH> : Nat . even <nat:54> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:496> * <var:C> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:342> * <var:P> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:86> * <var:s> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:54> * <var:J> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:74> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:74> * <var:b> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 