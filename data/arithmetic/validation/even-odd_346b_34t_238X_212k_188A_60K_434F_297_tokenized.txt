\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Assuming some terms $ <var:t> $ , $ <var:X> $ , $ <var:F> $ , $ <var:K> $ , $ <var:k> $ , $ <var:b> $ , and $ <var:A> $ the formula $ <var:k> \cdot <nat:212> + <nat:297> + <var:A> \cdot <nat:188> + <nat:238> \cdot <var:X> + <nat:346> \cdot <var:b> + <var:t> \cdot <nat:34> + <nat:434> \cdot <var:F> + <nat:60> \cdot <var:K> $ is odd . \end{theorem} \begin{proof} The pairs $ <var:K> * <nat:60> $ , $ <nat:34> * <var:t> $ , $ <nat:346> * <var:b> $ , as well as $ <var:k> * <nat:212> $ must be even numbers in $ \mathbb{Z}^+ $ as a consequence that the coefficients $ <nat:60> $ , $ <nat:34> $ , $ <nat:346> $ , additionally $ <nat:212> $ are known to be even . The natural numbers $ <nat:434> $ as well as $ <nat:238> $ must be even . Thus , the products $ <nat:434> * <var:F> $ as well as $ <var:X> * <nat:238> $ is even too . Additionally , recall the product $ <nat:188> * <var:A> $ is trivially even from the knowledge the positive integer $ <nat:188> $ is guaranteed to be an even number in $ \mathbb{N} $ . It can be demonstrated that the summation $ <nat:297> + <var:b> * <nat:346> + <nat:34> * <var:t> + <nat:238> * <var:X> + <var:k> * <nat:212> + <nat:188> * <var:A> + <var:K> * <nat:60> + <var:F> * <nat:434> $ will be odd . We know $ <nat:297> $ is guaranteed to be an odd integer . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:t> <var:X> <var:F> <var:K> <var:k> <var:b> <var:A> : nat , Nat . odd ( <nat:212> * <var:k> + <nat:188> * <var:A> + <nat:238> * <var:X> + <nat:346> * <var:b> + <nat:34> * <var:t> + <nat:434> * <var:F> + <nat:60> * <var:K> + <nat:297> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:60> = true ) . { auto . } assert ( <genH> : Nat . even <nat:34> = true ) . { auto . } assert ( <genH> : Nat . even <nat:346> = true ) . { auto . } assert ( <genH> : Nat . even <nat:212> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:60> * <var:K> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:34> * <var:t> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:346> * <var:b> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:212> * <var:k> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:434> = true ) . { auto . } assert ( <genH> : Nat . even <nat:238> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:434> * <var:F> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:238> * <var:X> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:188> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:188> * <var:A> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . odd <nat:297> = true ) . { auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 