\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} We denote that with the condition that there exist numbers $ <var:N> $ , $ <var:I> $ , $ <var:r> $ , $ <var:H> $ , $ <var:i> $ , $ <var:z> $ , $ <var:h> $ then assume that some integer $ <var:V> $ is defined as a <def:seven-composite> whole number given $ <var:z> \cdot <var:H> \cdot <var:h> \cdot <var:I> \cdot <var:r> \cdot <var:i> \cdot <var:N> = <var:V> $ and terms are more than <nat:1> . So $ <var:V> = <nat:1425600> $ is <def:seven-composite> . \end{theorem} \begin{proof} Recall a <def:seven-composite> positive integer is the product of whole numbers $ <var:z> $ , $ <var:r> $ , $ <var:I> $ , $ <var:i> $ , $ <var:h> $ , $ <var:H> $ , and $ <var:N> $ so that $ <var:z> $ , $ <var:i> $ , $ <var:r> $ , $ <var:N> $ , $ <var:I> $ , $ <var:H> $ and $ <var:h> > <nat:1> $ . Let $ <var:r> = <nat:3> $ , $ <var:N> = <nat:5> $ , $ <var:h> = <nat:9> $ , $ <var:I> = <nat:11> $ , $ <var:i> = <nat:8> $ , $ <var:z> = <nat:10> $ and $ <var:H> = <nat:12> $ . Notice that $ <nat:1425600> = <var:H> \cdot <var:I> \cdot <var:i> \cdot <var:r> \cdot <var:z> \cdot <var:N> \cdot <var:h> $ . Further note $ <nat:11> $ , $ <nat:9> $ , $ <nat:5> $ , $ <nat:10> $ , $ <nat:3> $ , $ <nat:8> $ and $ <nat:12> $ are greater than <nat:1> . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:seven-composite> ( <var:V> : nat ) := exists <var:N> <var:I> <var:r> <var:H> <var:i> <var:z> <var:h> : nat , ( <var:z> * <var:H> * <var:h> * <var:I> * <var:r> * <var:i> * <var:N> = <var:V> ) /\ ( <var:N> > <nat:1> ) /\ ( <var:I> > <nat:1> ) /\ ( <var:r> > <nat:1> ) /\ ( <var:H> > <nat:1> ) /\ ( <var:i> > <nat:1> ) /\ ( <var:z> > <nat:1> ) /\ ( <var:h> > <nat:1> ) . Theorem <genP:1> : <def:seven-composite> <nat:1425600> . Proof . unfold <def:seven-composite> . exists <nat:5> . exists <nat:11> . exists <nat:3> . exists <nat:12> . exists <nat:8> . exists <nat:10> . exists <nat:9> . assert ( <genH> : <nat:11> > <nat:1> ) . { lia . } assert ( <genH> : <nat:9> > <nat:1> ) . { lia . } assert ( <genH> : <nat:5> > <nat:1> ) . { lia . } assert ( <genH> : <nat:10> > <nat:1> ) . { lia . } assert ( <genH> : <nat:3> > <nat:1> ) . { lia . } assert ( <genH> : <nat:8> > <nat:1> ) . { lia . } assert ( <genH> : <nat:12> > <nat:1> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 