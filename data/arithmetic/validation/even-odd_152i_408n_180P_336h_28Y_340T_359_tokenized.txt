\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:359> + <var:P> * <nat:180> + <var:i> * <nat:152> + <var:Y> * <nat:28> + <nat:408> * <var:n> + <var:h> * <nat:336> + <var:T> * <nat:340> $ will be odd . \end{theorem} \begin{proof} The product $ <nat:152> \times <var:i> $ is trivially even . The pairs $ <var:T> \times <nat:340> $ and likewise $ <nat:408> \times <var:n> $ are obviously even . Recall that the pairs $ <nat:336> \times <var:h> $ additionally $ <var:Y> \times <nat:28> $ will be even . $ <nat:180> \times <var:P> $ is guaranteed to be an even integer . We check that the summation $ <nat:152> \cdot <var:i> + <var:n> \cdot <nat:408> + <nat:359> + <nat:180> \cdot <var:P> + <nat:336> \cdot <var:h> + <nat:28> \cdot <var:Y> + <nat:340> \cdot <var:T> $ is odd . We know that the adding between an even natural number with an odd number will be instrinsically an odd number in $ \mathbb{Z}^+ $ . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:P> <var:i> <var:Y> <var:n> <var:h> <var:T> : nat , Nat . odd ( <nat:180> * <var:P> + <nat:152> * <var:i> + <nat:28> * <var:Y> + <nat:408> * <var:n> + <nat:336> * <var:h> + <nat:340> * <var:T> + <nat:359> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:152> * <var:i> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:340> * <var:T> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:408> * <var:n> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:336> * <var:h> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:28> * <var:Y> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:180> * <var:P> ) = true ) . { rewrite Nat . even_mul . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 