\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \newtheorem{definition}{Definition} \begin{document} \begin{definition} Assuming there are $ <var:c> $ , $ <var:J> $ , $ <var:W> $ , $ <var:v> $ , $ <var:O> $ , $ <var:D> $ , $ <var:d> \in \mathbb{Z}^+ $ say that some integer $ <var:h> $ is said to be a <def:seven-composite> positive integer given $ <var:J> \times <var:D> \times <var:d> \times <var:c> \times <var:W> \times <var:O> \times <var:v> = <var:h> $ and terms are larger than or equal to <nat:2> . \end{definition} \begin{theorem} $ <var:h> = <nat:831600> $ is a <def:seven-composite> natural number . \end{theorem} \begin{proof} Remember a <def:seven-composite> integer is the product of numbers $ <var:v> $ , $ <var:d> $ , $ <var:J> $ , $ <var:D> $ , $ <var:c> $ , $ <var:O> $ and $ <var:W> $ larger than or equal to <nat:2> . Assume $ <var:O> = <nat:10> $ , $ <var:d> = <nat:3> $ , $ <var:D> = <nat:9> $ , $ <var:W> = <nat:5> $ , $ <var:v> = <nat:11> $ , $ <var:J> = <nat:7> $ , $ <var:c> = <nat:8> $ . Observe $ <nat:7> $ , $ <nat:9> $ , $ <nat:10> $ , $ <nat:11> $ , $ <nat:3> $ , $ <nat:5> $ , $ <nat:8> \geq <nat:2> $ . Similarly notice that additionally $ <nat:831600> = <var:W> \times <var:d> \times <var:O> \times <var:c> \times <var:J> \times <var:D> \times <var:v> = <nat:5> \times <nat:3> \times <nat:10> \times <nat:8> \times <nat:7> \times <nat:9> \times <nat:11> $ . This hints our claim is valid . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:seven-composite> ( <var:h> : nat ) := exists <var:c> <var:J> <var:W> <var:v> <var:O> <var:D> <var:d> : nat , ( <var:J> * <var:D> * <var:d> * <var:c> * <var:W> * <var:O> * <var:v> = <var:h> ) /\ ( <var:c> >= <nat:2> ) /\ ( <var:J> >= <nat:2> ) /\ ( <var:W> >= <nat:2> ) /\ ( <var:v> >= <nat:2> ) /\ ( <var:O> >= <nat:2> ) /\ ( <var:D> >= <nat:2> ) /\ ( <var:d> >= <nat:2> ) . Theorem <genP:1> : <def:seven-composite> <nat:831600> . Proof . unfold <def:seven-composite> . exists <nat:8> . exists <nat:7> . exists <nat:5> . exists <nat:11> . exists <nat:10> . exists <nat:9> . exists <nat:3> . assert ( <genH> : <nat:7> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:9> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:10> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:11> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:3> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:5> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:8> >= <nat:2> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 