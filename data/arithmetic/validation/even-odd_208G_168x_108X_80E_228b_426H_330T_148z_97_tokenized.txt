\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:E> * <nat:80> + <var:X> * <nat:108> + <var:H> * <nat:426> + <nat:208> * <var:G> + <nat:228> * <var:b> + <var:x> * <nat:168> + <nat:148> * <var:z> + <var:T> * <nat:330> + <nat:97> $ must be odd . \end{theorem} \begin{proof} It can be demonstrated that the expression $ <var:X> * <nat:108> + <var:b> * <nat:228> + <var:E> * <nat:80> + <var:T> * <nat:330> + <var:H> * <nat:426> + <nat:97> + <var:x> * <nat:168> + <nat:208> * <var:G> + <var:z> * <nat:148> $ must be odd . Notice $ <nat:97> $ is known to be an odd number in $ \mathbb{Z}^+ $ . It can be verified that that the summation $ <nat:97> + <nat:330> <var:T> + <var:H> <nat:426> + <nat:168> <var:x> + <var:z> <nat:148> + <var:G> <nat:208> + <var:X> <nat:108> + <var:b> <nat:228> + <var:E> <nat:80> $ is clearly odd since $ <var:G> * <nat:208> + <var:x> * <nat:168> + <nat:108> * <var:X> + <nat:80> * <var:E> + <var:b> * <nat:228> + <nat:426> * <var:H> + <nat:330> * <var:T> + <nat:148> * <var:z> $ is known as even . The pairs $ <var:x> * <nat:168> $ , $ <nat:208> * <var:G> $ , $ <nat:426> * <var:H> $ , $ <var:T> * <nat:330> $ , $ <var:z> * <nat:148> $ , plus $ <nat:80> * <var:E> $ will be even from the knowledge multiplying of an even element of $ \mathbb{N} $ with some natural is guaranteed to be even . Likewise , $ <nat:108> * <var:X> $ is clearly even . This claim must be true from the knowledge multiplying of an even number with any positive integer is guaranteed to be even . Adding on , the term $ <var:b> * <nat:228> $ is trivially an even positive integer by reason that multiplying of an even element of $ \mathbb{N} $ and any integer will be by its very nature an even positive integer . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:E> <var:X> <var:H> <var:G> <var:b> <var:x> <var:z> <var:T> : nat , Nat . odd ( <nat:80> * <var:E> + <nat:108> * <var:X> + <nat:426> * <var:H> + <nat:208> * <var:G> + <nat:228> * <var:b> + <nat:168> * <var:x> + <nat:148> * <var:z> + <nat:330> * <var:T> + <nat:97> ) = true . Proof . intros . assert ( <genH> : Nat . odd <nat:97> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:168> * <var:x> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:208> * <var:G> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:426> * <var:H> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:330> * <var:T> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:148> * <var:z> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:80> * <var:E> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:108> * <var:X> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:228> * <var:b> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:80> * <var:E> + <nat:108> * <var:X> + <nat:426> * <var:H> + <nat:208> * <var:G> + <nat:228> * <var:b> + <nat:168> * <var:x> + <nat:148> * <var:z> + <nat:330> * <var:T> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . rewrite <genH> . auto . Qed . 