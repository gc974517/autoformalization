\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Let $ <var:n> $ , $ <var:P> $ , $ <var:M> $ , $ <var:U> $ , $ <var:e> $ , $ <var:i> $ , $ <var:b> $ , $ <var:y> \in \mathbb{Z}^+ $ where $ <var:y> $ , $ <var:e> $ , $ <var:U> $ , $ <var:M> $ , $ <var:b> $ , $ <var:P> $ , $ <var:n> $ , and $ <var:i> > <nat:1> $ . We claim that $ <var:I> \in \mathbb{Z}^+ $ is defined to be <def:eight-composite> assuming $ <var:y> * <var:U> * <var:P> * <var:i> * <var:M> * <var:e> * <var:n> * <var:b> = <var:I> $ . For this reason the whole number <nat:831600> is <def:eight-composite> . \end{theorem} \begin{proof} We demonstrate $ <var:P> $ , $ <var:n> $ , $ <var:U> $ , $ <var:e> $ , $ <var:y> $ , $ <var:i> $ , $ <var:b> $ , $ <var:M> $ are larger than <nat:1> as well as $ <nat:831600> = <var:M> \cdot <var:b> \cdot <var:e> \cdot <var:P> \cdot <var:y> \cdot <var:n> \cdot <var:i> \cdot <var:U> $ . Observe $ <nat:5> \times <nat:3> \times <nat:7> \times <nat:4> \times <nat:11> \times <nat:10> \times <nat:2> \times <nat:9> = <nat:831600> $ . Plus note that $ <nat:4> $ , $ <nat:10> $ , $ <nat:11> $ , $ <nat:9> $ , $ <nat:5> $ , $ <nat:3> $ , $ <nat:2> $ and $ <nat:7> > <nat:1> $ . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:eight-composite> ( <var:I> : nat ) := exists <var:n> <var:P> <var:M> <var:U> <var:e> <var:i> <var:b> <var:y> : nat , ( <var:y> > <nat:1> ) /\ ( <var:e> > <nat:1> ) /\ ( <var:U> > <nat:1> ) /\ ( <var:M> > <nat:1> ) /\ ( <var:b> > <nat:1> ) /\ ( <var:P> > <nat:1> ) /\ ( <var:n> > <nat:1> ) /\ ( <var:i> > <nat:1> ) /\ ( <var:y> * <var:U> * <var:P> * <var:i> * <var:M> * <var:e> * <var:n> * <var:b> = <var:I> ) . Theorem <genP:1> : <def:eight-composite> <nat:831600> . Proof . unfold <def:eight-composite> . exists <nat:10> . exists <nat:2> . exists <nat:11> . exists <nat:9> . exists <nat:7> . exists <nat:5> . exists <nat:4> . exists <nat:3> . assert ( <genH> : <nat:4> > <nat:1> ) . { lia . } assert ( <genH> : <nat:10> > <nat:1> ) . { lia . } assert ( <genH> : <nat:11> > <nat:1> ) . { lia . } assert ( <genH> : <nat:9> > <nat:1> ) . { lia . } assert ( <genH> : <nat:5> > <nat:1> ) . { lia . } assert ( <genH> : <nat:3> > <nat:1> ) . { lia . } assert ( <genH> : <nat:2> > <nat:1> ) . { lia . } assert ( <genH> : <nat:7> > <nat:1> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 