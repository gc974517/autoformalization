\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} <nat:4989600> is the product of natural numbers $ <var:g> $ , $ <var:D> $ , $ <var:J> $ , $ <var:o> $ , $ <var:C> $ , $ <var:e> $ , $ <var:X> $ , $ <var:W> $ and $ <var:l> \in \mathbb{N} $ such that $ <var:l> $ , $ <var:C> $ , $ <var:e> $ , $ <var:X> $ , $ <var:g> $ , $ <var:J> $ , $ <var:W> $ , $ <var:o> $ , and $ <var:D> $ larger than or equivalent to <nat:2> . \end{theorem} \begin{proof} Note that $ <var:J> * <var:e> * <var:C> * <var:o> * <var:W> * <var:g> * <var:D> * <var:l> * <var:X> = <nat:4989600> $ suggests $ <var:W> = <nat:4> $ , $ <var:D> = <nat:9> $ , $ <var:l> = <nat:10> $ , $ <var:J> = <nat:6> $ , $ <var:o> = <nat:7> $ , $ <var:e> = <nat:2> $ , $ <var:C> = <nat:3> $ , $ <var:g> = <nat:5> $ , $ <var:X> = <nat:11> $ . What's more notice that $ <nat:5> $ , $ <nat:9> $ , $ <nat:3> $ , $ <nat:11> $ , $ <nat:4> $ , $ <nat:7> $ , $ <nat:10> $ , $ <nat:6> $ , $ <nat:2> \geq <nat:2> $ . \end{proof} \end{document} 
~
Require Import Lia . Theorem <genP:1> : exists <var:g> <var:D> <var:J> <var:o> <var:C> <var:e> <var:X> <var:W> <var:l> : nat , ( <nat:4989600> = <var:g> * <var:D> * <var:J> * <var:o> * <var:C> * <var:e> * <var:X> * <var:W> * <var:l> ) /\ ( <var:l> >= <nat:2> ) /\ ( <var:C> >= <nat:2> ) /\ ( <var:e> >= <nat:2> ) /\ ( <var:X> >= <nat:2> ) /\ ( <var:g> >= <nat:2> ) /\ ( <var:J> >= <nat:2> ) /\ ( <var:W> >= <nat:2> ) /\ ( <var:o> >= <nat:2> ) /\ ( <var:D> >= <nat:2> ) . Proof . exists <nat:5> . exists <nat:9> . exists <nat:6> . exists <nat:7> . exists <nat:3> . exists <nat:2> . exists <nat:11> . exists <nat:4> . exists <nat:10> . assert ( <genH> : <nat:5> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:9> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:3> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:11> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:4> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:7> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:10> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:6> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:2> >= <nat:2> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 