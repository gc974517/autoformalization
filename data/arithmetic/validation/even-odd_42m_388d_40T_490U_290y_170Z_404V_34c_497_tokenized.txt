\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:290> * <var:y> + <nat:34> * <var:c> + <nat:497> + <var:d> * <nat:388> + <var:U> * <nat:490> + <nat:42> * <var:m> + <var:V> * <nat:404> + <nat:40> * <var:T> + <var:Z> * <nat:170> $ must be odd using some variables $ <var:U> $ , $ <var:d> $ , $ <var:c> $ , $ <var:m> $ , $ <var:Z> $ , $ <var:V> $ , $ <var:y> $ , and $ <var:T> $ . \end{theorem} \begin{proof} See $ <nat:497> $ is trivially odd . As a consequence that the addition between even elements of $ \mathbb{N} $ and an odd integer is odd , then the theorem holds . Observe the numbers $ <nat:34> $ , $ <nat:170> $ , and $ <nat:490> $ are clearly even natural numbers . Thus , the pairs $ <nat:34> \cdot <var:c> $ , $ <var:Z> \cdot <nat:170> $ , additionally $ <var:U> \cdot <nat:490> $ is guaranteed to be even at the same time . On top of this , we know the coefficients $ <nat:42> $ plus $ <nat:404> $ will be even . Accordingly , the products $ <nat:42> \cdot <var:m> $ and likewise $ <var:V> \cdot <nat:404> $ must be even additionally . $ <nat:290> \cdot <var:y> $ is known as even . This fact must be true because the leading term $ <nat:290> $ is clearly trivially an even number . Further , the term $ <var:T> \cdot <nat:40> $ is clearly even as a consequence that taking the product between an even number in $ \mathbb{N} $ and an arbitrary integer will be obviously an even whole number and likewise the number $ <nat:40> $ is guaranteed to be an even whole number . The positive integer $ <nat:388> $ is guaranteed to be even . In consequence , the term $ <nat:388> \cdot <var:d> $ is even at the same time . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:U> <var:d> <var:c> <var:m> <var:Z> <var:V> <var:y> <var:T> : nat , Nat . odd ( <nat:290> * <var:y> + <nat:34> * <var:c> + <nat:388> * <var:d> + <nat:490> * <var:U> + <nat:42> * <var:m> + <nat:404> * <var:V> + <nat:40> * <var:T> + <nat:170> * <var:Z> + <nat:497> ) = true . Proof . intros . assert ( <genH> : Nat . odd <nat:497> = true ) . { auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . assert ( <genH> : Nat . even <nat:34> = true ) . { auto . } assert ( <genH> : Nat . even <nat:170> = true ) . { auto . } assert ( <genH> : Nat . even <nat:490> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:34> * <var:c> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:170> * <var:Z> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:490> * <var:U> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:42> = true ) . { auto . } assert ( <genH> : Nat . even <nat:404> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:42> * <var:m> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:404> * <var:V> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:290> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:290> * <var:y> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:40> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:40> * <var:T> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:388> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:388> * <var:d> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 