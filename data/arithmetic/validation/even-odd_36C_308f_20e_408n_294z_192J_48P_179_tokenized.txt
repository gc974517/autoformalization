\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Given positive integers $ <var:z> $ , $ <var:e> $ , $ <var:f> $ , $ <var:n> $ , $ <var:J> $ , $ <var:P> $ , and $ <var:C> $ the expression $ <nat:36> \times <var:C> + <nat:179> + <var:f> \times <nat:308> + <var:e> \times <nat:20> + <var:n> \times <nat:408> + <nat:294> \times <var:z> + <var:J> \times <nat:192> + <var:P> \times <nat:48> $ is odd . \end{theorem} \begin{proof} The adding between an even whole number with an odd number in $ \mathbb{N} $ is an odd positive integer . Then , the theorem is proven . Notice $ <nat:179> $ is an odd whole number . We know that the pairs $ <var:f> * <nat:308> $ , $ <nat:408> * <var:n> $ , $ <var:C> * <nat:36> $ , $ <var:J> * <nat:192> $ , plus $ <var:e> * <nat:20> $ are known as even . Building on , see $ <nat:48> * <var:P> $ is obviously an even number in $ \mathbb{Z}^+ $ by reason that taking the product of an even natural number and an arbitrary whole number will be even . In addition , $ <nat:294> * <var:z> $ is trivially an even number . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:z> <var:e> <var:f> <var:n> <var:J> <var:P> <var:C> : nat , Nat . odd ( <nat:36> * <var:C> + <nat:308> * <var:f> + <nat:20> * <var:e> + <nat:408> * <var:n> + <nat:294> * <var:z> + <nat:192> * <var:J> + <nat:48> * <var:P> + <nat:179> ) = true . Proof . intros . rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . assert ( <genH> : Nat . odd <nat:179> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:308> * <var:f> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:408> * <var:n> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:36> * <var:C> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:192> * <var:J> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:20> * <var:e> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:48> * <var:P> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:294> * <var:z> ) = true ) . { rewrite Nat . even_mul . auto . } rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 