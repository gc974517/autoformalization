\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:v> * <nat:216> + <nat:432> * <var:g> + <var:E> * <nat:118> + <nat:397> + <var:m> * <nat:484> + <var:V> * <nat:270> + <nat:328> * <var:f> + <var:S> * <nat:414> + <var:q> * <nat:334> $ will be odd . \end{theorem} \begin{proof} We justify $ <var:S> <nat:414> + <nat:270> <var:V> + <nat:328> <var:f> + <nat:432> <var:g> + <nat:118> <var:E> + <var:m> <nat:484> + <var:q> <nat:334> + <var:v> <nat:216> + <nat:397> $ is odd . The numbers $ <nat:334> $ , $ <nat:216> $ , $ <nat:414> $ , $ <nat:270> $ , $ <nat:328> $ , $ <nat:432> $ , and also $ <nat:118> $ are guaranteed to be even positive integers The positive integer $ <nat:484> $ is obviously an even number in $ \mathbb{Z}^+ $ Take note that the product of an even number in $ \mathbb{N} $ with any integer must be even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:v> <var:g> <var:E> <var:m> <var:V> <var:f> <var:S> <var:q> : nat , Nat . odd ( <nat:216> * <var:v> + <nat:432> * <var:g> + <nat:118> * <var:E> + <nat:484> * <var:m> + <nat:270> * <var:V> + <nat:328> * <var:f> + <nat:414> * <var:S> + <nat:334> * <var:q> + <nat:397> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:334> = true ) . { auto . } assert ( <genH> : Nat . even <nat:216> = true ) . { auto . } assert ( <genH> : Nat . even <nat:414> = true ) . { auto . } assert ( <genH> : Nat . even <nat:270> = true ) . { auto . } assert ( <genH> : Nat . even <nat:328> = true ) . { auto . } assert ( <genH> : Nat . even <nat:432> = true ) . { auto . } assert ( <genH> : Nat . even <nat:118> = true ) . { auto . } assert ( <genH> : Nat . even <nat:484> = true ) . { auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . repeat rewrite Nat . even_mul . rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 