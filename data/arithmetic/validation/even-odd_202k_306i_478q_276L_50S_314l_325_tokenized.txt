\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:i> <nat:306> + <nat:202> <var:k> + <nat:276> <var:L> + <var:l> <nat:314> + <nat:50> <var:S> + <var:q> <nat:478> + <nat:325> $ is odd given all variables $ <var:k> $ , $ <var:l> $ , $ <var:i> $ , $ <var:q> $ , $ <var:L> $ , and $ <var:S> $ . \end{theorem} \begin{proof} $ <nat:202> \times <var:k> + <nat:306> \times <var:i> + <nat:478> \times <var:q> + <nat:276> \times <var:L> + <var:S> \times <nat:50> + <var:l> \times <nat:314> $ is known to be even . The terms $ <nat:306> <var:i> $ , $ <nat:478> <var:q> $ , $ <var:S> <nat:50> $ , $ <nat:314> <var:l> $ , and likewise $ <nat:276> <var:L> $ are clearly even whole numbers since the multiplication of an even integer with a number in $ \mathbb{Z}^+ $ is guaranteed to be even . In addition to this , take note the term $ <var:k> <nat:202> $ is even . This must be true by reason that multiplying between an even number and a number in $ \mathbb{Z}^+ $ will be an even element of $ \mathbb{Z}^+ $ . The adding between even positive integers together and an odd natural must be odd . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:k> <var:l> <var:i> <var:q> <var:L> <var:S> : nat , Nat . odd ( <nat:306> * <var:i> + <nat:202> * <var:k> + <nat:276> * <var:L> + <nat:314> * <var:l> + <nat:50> * <var:S> + <nat:478> * <var:q> + <nat:325> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:306> * <var:i> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:478> * <var:q> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:50> * <var:S> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:314> * <var:l> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:276> * <var:L> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:202> * <var:k> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:306> * <var:i> + <nat:202> * <var:k> + <nat:276> * <var:L> + <nat:314> * <var:l> + <nat:50> * <var:S> + <nat:478> * <var:q> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . auto . Qed . 