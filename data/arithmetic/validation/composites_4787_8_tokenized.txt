\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} We assume that assuming there exist positive integers $ <var:q> $ , $ <var:z> $ , $ <var:b> $ , $ <var:y> $ , $ <var:g> $ , $ <var:V> $ , $ <var:l> $ , $ <var:k> $ then define that $ <var:v> \in \mathbb{N} $ will be considered to be a <def:eight-composite> positive integer if $ <var:k> \times <var:V> \times <var:y> \times <var:b> \times <var:q> \times <var:z> \times <var:g> \times <var:l> = <var:v> $ plus where $ <var:k> $ , $ <var:l> $ , $ <var:q> $ , $ <var:g> $ , $ <var:V> $ , $ <var:z> $ , $ <var:y> $ and $ <var:b> > <nat:1> $ . Hence $ <nat:2073600> = <var:v> $ is a <def:eight-composite> number . \end{theorem} \begin{proof} Note that $ <nat:9> $ , $ <nat:12> $ , $ <nat:4> $ , $ <nat:10> $ , $ <nat:2> $ , $ <nat:8> $ , $ <nat:5> $ , and $ <nat:6> $ are more than <nat:1> . Also observe that still $ <nat:2073600> = <var:y> * <var:g> * <var:b> * <var:V> * <var:q> * <var:l> * <var:z> * <var:k> $ indicates $ <var:l> = <nat:8> $ , $ <var:y> = <nat:9> $ , $ <var:q> = <nat:2> $ , $ <var:z> = <nat:6> $ , $ <var:V> = <nat:12> $ , $ <var:b> = <nat:4> $ , $ <var:g> = <nat:5> $ , and $ <var:k> = <nat:10> $ . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:eight-composite> ( <var:v> : nat ) := exists <var:q> <var:z> <var:b> <var:y> <var:g> <var:V> <var:l> <var:k> : nat , ( <var:k> * <var:V> * <var:y> * <var:b> * <var:q> * <var:z> * <var:g> * <var:l> = <var:v> ) /\ ( <var:k> > <nat:1> ) /\ ( <var:l> > <nat:1> ) /\ ( <var:q> > <nat:1> ) /\ ( <var:g> > <nat:1> ) /\ ( <var:V> > <nat:1> ) /\ ( <var:z> > <nat:1> ) /\ ( <var:y> > <nat:1> ) /\ ( <var:b> > <nat:1> ) . Theorem <genP:1> : <def:eight-composite> <nat:2073600> . Proof . unfold <def:eight-composite> . assert ( <genH> : <nat:9> > <nat:1> ) . { lia . } assert ( <genH> : <nat:12> > <nat:1> ) . { lia . } assert ( <genH> : <nat:4> > <nat:1> ) . { lia . } assert ( <genH> : <nat:10> > <nat:1> ) . { lia . } assert ( <genH> : <nat:2> > <nat:1> ) . { lia . } assert ( <genH> : <nat:8> > <nat:1> ) . { lia . } assert ( <genH> : <nat:5> > <nat:1> ) . { lia . } assert ( <genH> : <nat:6> > <nat:1> ) . { lia . } exists <nat:2> . exists <nat:6> . exists <nat:4> . exists <nat:9> . exists <nat:5> . exists <nat:12> . exists <nat:8> . exists <nat:10> . repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 