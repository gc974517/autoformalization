\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} For all whole numbers $ <var:g> $ , $ <var:w> $ , $ <var:B> $ , $ <var:o> $ , $ <var:H> $ , $ <var:L> $ , $ <var:z> $ , and $ <var:x> $ the sum $ <var:g> * <nat:114> + <var:o> * <nat:478> + <var:B> * <nat:122> + <nat:192> * <var:x> + <var:w> * <nat:262> + <var:L> * <nat:150> + <nat:30> + <nat:454> * <var:H> + <var:z> * <nat:70> $ is guaranteed to be even . \end{theorem} \begin{proof} We know the leading terms $ <nat:70> $ , $ <nat:150> $ , $ <nat:454> $ , $ <nat:192> $ , and also $ <nat:478> $ are known as even numbers in $ \mathbb{Z}^+ $ . For this reason , the pairs $ <var:z> <nat:70> $ , $ <var:L> <nat:150> $ , $ <nat:454> <var:H> $ , $ <nat:192> <var:x> $ , as well as $ <var:o> <nat:478> $ is even at the same time . The product $ <var:B> <nat:122> $ is obviously an even number since the natural number $ <nat:122> $ is known as trivially an even number in $ \mathbb{N} $ . The coefficient $ <nat:262> $ is known as even . As a consequence , the pair $ <var:w> <nat:262> $ must be even at the same time . The natural number $ <nat:114> $ is trivially even . As a consequence , the term $ <nat:114> <var:g> $ will be even in addition . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:g> <var:w> <var:B> <var:o> <var:H> <var:L> <var:z> <var:x> : nat , Nat . even ( <nat:114> * <var:g> + <nat:478> * <var:o> + <nat:122> * <var:B> + <nat:192> * <var:x> + <nat:262> * <var:w> + <nat:150> * <var:L> + <nat:454> * <var:H> + <nat:70> * <var:z> + <nat:30> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:70> = true ) . { auto . } assert ( <genH> : Nat . even <nat:150> = true ) . { auto . } assert ( <genH> : Nat . even <nat:454> = true ) . { auto . } assert ( <genH> : Nat . even <nat:192> = true ) . { auto . } assert ( <genH> : Nat . even <nat:478> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:70> * <var:z> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:150> * <var:L> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:454> * <var:H> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:192> * <var:x> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:478> * <var:o> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:122> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:122> * <var:B> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:262> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:262> * <var:w> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:114> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:114> * <var:g> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 