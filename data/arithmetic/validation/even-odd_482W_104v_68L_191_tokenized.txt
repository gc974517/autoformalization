\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} With all $ <var:v> $ , $ <var:W> $ , and $ <var:L> \in \mathbb{N} $ $ <nat:68> * <var:L> + <var:v> * <nat:104> + <nat:191> + <nat:482> * <var:W> $ is odd . \end{theorem} \begin{proof} See that $ <nat:191> $ is known as an odd element of $ \mathbb{N} $ . Notice that the summing between even natural numbers together and an odd natural number must be odd . We use the fact the summation $ <nat:104> * <var:v> + <var:L> * <nat:68> + <nat:191> + <nat:482> * <var:W> $ is odd by reason that the summation $ <var:W> * <nat:482> + <var:v> * <nat:104> + <nat:68> * <var:L> $ is known as even . The pairs $ <var:L> \times <nat:68> $ in addition to $ <var:v> \times <nat:104> $ are trivially even whole numbers . This is true since multiplying of an even whole number with an arbitrary natural will be even . We know $ <var:W> \times <nat:482> $ is trivially even . The sum $ <nat:482> \times <var:W> + <var:v> \times <nat:104> + <nat:68> \times <var:L> $ must be even since taking the product of an even number in $ \mathbb{N} $ with some natural is even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:v> <var:W> <var:L> : nat , Nat . odd ( <nat:68> * <var:L> + <nat:104> * <var:v> + <nat:482> * <var:W> + <nat:191> ) = true . Proof . intros . assert ( <genH> : Nat . odd <nat:191> = true ) . { auto . } rewrite Nat . odd_add . assert ( <genH> : Nat . even ( <nat:68> * <var:L> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:104> * <var:v> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:482> * <var:W> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:68> * <var:L> + <nat:104> * <var:v> + <nat:482> * <var:W> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite <- Nat . negb_even . rewrite <genH> . rewrite <genH> . auto . Qed . 