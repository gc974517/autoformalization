\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:165> + <var:M> \times <nat:242> + <nat:312> \times <var:F> + <nat:58> \times <var:j> + <var:p> \times <nat:398> $ must be odd using whole numbers $ <var:M> $ , $ <var:j> $ , $ <var:p> $ , and $ <var:F> $ . \end{theorem} \begin{proof} Recall $ <var:F> <nat:312> + <var:M> <nat:242> + <var:j> <nat:58> + <nat:398> <var:p> $ is guaranteed to be even . We know the totaling of an even number in $ \mathbb{Z}^+ $ and an even natural number will be fundamentally an even positive integer . The pair $ <nat:58> <var:j> $ is an even natural from the fact the natural number $ <nat:58> $ is clearly even . Furthermore , the number $ <nat:398> $ is clearly an even number in $ \mathbb{N} $ . Hence , the term $ <nat:398> <var:p> $ is even in addition . The positive integer $ <nat:312> $ is an even natural number . Consequently , the pair $ <nat:312> <var:F> $ will be even additionally . What's more , see the product $ <var:M> <nat:242> $ is guaranteed to be an even integer because the coefficient $ <nat:242> $ is guaranteed to be even . and also from the fact the multiplication of even numbers in $ \mathbb{Z}^+ $ with an arbitrary element of $ \mathbb{N} $ will be even . Recall $ <nat:165> $ is trivially an odd natural . We justify the claim is true with the totaling between even whole numbers concurrently and an odd element of $ \mathbb{Z}^+ $ is guaranteed to be fundamentally an odd natural number . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:M> <var:j> <var:p> <var:F> : nat , Nat . odd ( <nat:242> * <var:M> + <nat:312> * <var:F> + <nat:58> * <var:j> + <nat:398> * <var:p> + <nat:165> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:58> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:58> * <var:j> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:398> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:398> * <var:p> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:312> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:312> * <var:F> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:242> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:242> * <var:M> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:242> * <var:M> + <nat:312> * <var:F> + <nat:58> * <var:j> + <nat:398> * <var:p> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } assert ( <genH> : Nat . odd <nat:165> = true ) . { auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . rewrite <genH> . auto . Qed . 