\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:F> \times <nat:240> + <nat:204> \times <var:y> + <var:G> \times <nat:270> + <var:I> \times <nat:382> + <nat:462> \times <var:J> + <nat:428> \times <var:N> + <var:n> \times <nat:280> + <var:L> \times <nat:386> + <nat:121> $ is guaranteed to be odd assuming some $ <var:L> $ , $ <var:y> $ , $ <var:N> $ , $ <var:J> $ , $ <var:n> $ , $ <var:F> $ , $ <var:G> $ , and $ <var:I> \in \mathbb{Z}^+ $ . \end{theorem} \begin{proof} The pairs $ <nat:280> <var:n> $ , $ <var:J> <nat:462> $ , $ <nat:270> <var:G> $ , plus $ <nat:204> <var:y> $ are known as even from the fact the natural numbers $ <nat:280> $ , $ <nat:462> $ , $ <nat:270> $ , and also $ <nat:204> $ must be even . The terms $ <nat:240> <var:F> $ and $ <var:N> <nat:428> $ will be even because the product of an even element of $ \mathbb{N} $ and some element of $ \mathbb{Z}^+ $ is guaranteed to be even . This claim holds by reason that the natural numbers $ <nat:240> $ and likewise $ <nat:428> $ are even . The whole number $ <nat:382> $ is obviously even . In consequence , the pair $ <var:I> <nat:382> $ must be even additionally . In addition to this , see the product $ <nat:386> <var:L> $ is guaranteed to be an even whole number . This claim is true from the knowledge the whole number $ <nat:386> $ is guaranteed to be even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:L> <var:y> <var:N> <var:J> <var:n> <var:F> <var:G> <var:I> : nat , Nat . odd ( <nat:240> * <var:F> + <nat:204> * <var:y> + <nat:270> * <var:G> + <nat:382> * <var:I> + <nat:462> * <var:J> + <nat:428> * <var:N> + <nat:280> * <var:n> + <nat:386> * <var:L> + <nat:121> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:280> = true ) . { auto . } assert ( <genH> : Nat . even <nat:462> = true ) . { auto . } assert ( <genH> : Nat . even <nat:270> = true ) . { auto . } assert ( <genH> : Nat . even <nat:204> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:280> * <var:n> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:462> * <var:J> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:270> * <var:G> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:204> * <var:y> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:240> = true ) . { auto . } assert ( <genH> : Nat . even <nat:428> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:240> * <var:F> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:428> * <var:N> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:382> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:382> * <var:I> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:386> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:386> * <var:L> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 