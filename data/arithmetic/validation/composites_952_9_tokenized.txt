\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \newtheorem{definition}{Definition} \begin{document} \begin{definition} With the condition we get $ <var:K> = <var:A> * <var:c> * <var:B> * <var:H> * <var:y> * <var:p> * <var:r> * <var:l> * <var:V> $ given some $ <var:K> $ as well as so that $ <var:l> $ , $ <var:p> $ , $ <var:V> $ , $ <var:y> $ , $ <var:B> $ , $ <var:H> $ , $ <var:A> $ , $ <var:c> $ , $ <var:r> \geq <nat:2> $ taking some $ <var:y> $ , $ <var:p> $ , $ <var:B> $ , $ <var:V> $ , $ <var:H> $ , $ <var:c> $ , $ <var:l> $ , $ <var:A> $ , $ <var:r> \in \mathbb{Z}^+ $ , denote that $ <var:K> $ is a <def:nine-composite> positive integer . \end{definition} \begin{theorem} The number <nat:13685760> is <def:nine-composite> . \end{theorem} \begin{proof} We confirm <nat:13685760> is the multiplication between $ <var:V> $ , $ <var:r> $ , $ <var:B> $ , $ <var:p> $ , $ <var:H> $ , $ <var:y> $ , $ <var:l> $ , $ <var:A> $ , and $ <var:c> \in \mathbb{N} $ . Notice $ <var:V> * <var:l> * <var:B> * <var:y> * <var:H> * <var:p> * <var:A> * <var:c> * <var:r> = <nat:8> * <nat:11> * <nat:12> * <nat:3> * <nat:10> * <nat:6> * <nat:2> * <nat:4> * <nat:9> = <nat:13685760> $ . Moreover note $ <nat:4> $ , $ <nat:11> $ , $ <nat:8> $ , $ <nat:12> $ , $ <nat:2> $ , $ <nat:10> $ , $ <nat:3> $ , $ <nat:6> $ , and $ <nat:9> $ are more than or equivalent to <nat:2> . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:nine-composite> ( <var:K> : nat ) := exists <var:y> <var:p> <var:B> <var:V> <var:H> <var:c> <var:l> <var:A> <var:r> : nat , ( <var:K> = <var:A> * <var:c> * <var:B> * <var:H> * <var:y> * <var:p> * <var:r> * <var:l> * <var:V> ) /\ ( <var:l> >= <nat:2> ) /\ ( <var:p> >= <nat:2> ) /\ ( <var:V> >= <nat:2> ) /\ ( <var:y> >= <nat:2> ) /\ ( <var:B> >= <nat:2> ) /\ ( <var:H> >= <nat:2> ) /\ ( <var:A> >= <nat:2> ) /\ ( <var:c> >= <nat:2> ) /\ ( <var:r> >= <nat:2> ) . Theorem <genP:1> : <def:nine-composite> <nat:13685760> . Proof . unfold <def:nine-composite> . exists <nat:3> . exists <nat:6> . exists <nat:12> . exists <nat:8> . exists <nat:10> . exists <nat:4> . exists <nat:11> . exists <nat:2> . exists <nat:9> . assert ( <genH> : <nat:4> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:11> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:8> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:12> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:2> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:10> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:3> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:6> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:9> >= <nat:2> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 