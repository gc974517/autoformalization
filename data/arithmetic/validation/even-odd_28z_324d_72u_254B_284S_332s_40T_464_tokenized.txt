\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:d> \cdot <nat:324> + <var:S> \cdot <nat:284> + <nat:72> \cdot <var:u> + <nat:332> \cdot <var:s> + <nat:464> + <nat:40> \cdot <var:T> + <nat:28> \cdot <var:z> + <nat:254> \cdot <var:B> $ is even . \end{theorem} \begin{proof} We use the understanding $ <nat:284> \times <var:S> + <nat:40> \times <var:T> + <var:z> \times <nat:28> + <nat:464> + <nat:72> \times <var:u> + <nat:254> \times <var:B> + <var:s> \times <nat:332> + <var:d> \times <nat:324> $ is clearly even because the sum $ <var:z> <nat:28> + <var:d> <nat:324> + <nat:72> <var:u> + <var:B> <nat:254> + <var:S> <nat:284> + <nat:332> <var:s> + <var:T> <nat:40> $ is clearly even , as a consequence that the addition of even integers concurrently and an even number in $ \mathbb{Z}^+ $ will be an even number . What's more , the leading terms $ <nat:28> $ , $ <nat:324> $ , $ <nat:72> $ , $ <nat:254> $ , $ <nat:284> $ , $ <nat:332> $ , plus $ <nat:40> $ are known to be even . Hence , the products $ <nat:28> \cdot <var:z> $ , $ <nat:324> \cdot <var:d> $ , $ <var:u> \cdot <nat:72> $ , $ <nat:254> \cdot <var:B> $ , $ <var:S> \cdot <nat:284> $ , $ <var:s> \cdot <nat:332> $ , in addition to $ <nat:40> \cdot <var:T> $ must be even at the same time . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:d> <var:S> <var:u> <var:s> <var:T> <var:z> <var:B> : nat , Nat . even ( <nat:324> * <var:d> + <nat:284> * <var:S> + <nat:72> * <var:u> + <nat:332> * <var:s> + <nat:40> * <var:T> + <nat:28> * <var:z> + <nat:254> * <var:B> + <nat:464> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:28> = true ) . { auto . } assert ( <genH> : Nat . even <nat:324> = true ) . { auto . } assert ( <genH> : Nat . even <nat:72> = true ) . { auto . } assert ( <genH> : Nat . even <nat:254> = true ) . { auto . } assert ( <genH> : Nat . even <nat:284> = true ) . { auto . } assert ( <genH> : Nat . even <nat:332> = true ) . { auto . } assert ( <genH> : Nat . even <nat:40> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:28> * <var:z> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:324> * <var:d> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:72> * <var:u> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:254> * <var:B> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:284> * <var:S> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:332> * <var:s> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:40> * <var:T> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:324> * <var:d> + <nat:284> * <var:S> + <nat:72> * <var:u> + <nat:332> * <var:s> + <nat:40> * <var:T> + <nat:28> * <var:z> + <nat:254> * <var:B> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . even_add . rewrite <genH> . auto . Qed . 