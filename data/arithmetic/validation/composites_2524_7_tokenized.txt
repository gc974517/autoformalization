\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Assume $ <var:t> $ , $ <var:K> $ , $ <var:S> $ , $ <var:y> $ , $ <var:m> $ , $ <var:h> $ , $ <var:a> \in \mathbb{Z}^+ $ . We assume that some number $ <var:r> $ is defined to be a <def:seven-composite> integer assuming $ <var:m> * <var:S> * <var:a> * <var:t> * <var:h> * <var:K> * <var:y> = <var:r> $ plus unique factors are more than or equivalent to <nat:2> . For this reason $ <var:r> = <nat:1900800> $ is a <def:seven-composite> integer . \end{theorem} \begin{proof} Remember that <nat:1900800> is a <def:seven-composite> whole number when <nat:1900800> is the product between $ <var:y> $ , $ <var:m> $ , $ <var:t> $ , $ <var:h> $ , $ <var:K> $ , $ <var:S> $ and $ <var:a> $ greater than or equivalent to <nat:2> . Observe that $ <var:K> * <var:t> * <var:S> * <var:h> * <var:y> * <var:m> * <var:a> = <nat:1900800> $ indicates $ <var:a> = <nat:4> $ , $ <var:m> = <nat:8> $ , $ <var:S> = <nat:11> $ , $ <var:y> = <nat:9> $ , $ <var:K> = <nat:5> $ , $ <var:h> = <nat:10> $ and $ <var:t> = <nat:12> $ . Similarly notice that $ <nat:5> $ , $ <nat:11> $ , $ <nat:9> $ , $ <nat:8> $ , $ <nat:4> $ , $ <nat:12> $ and $ <nat:10> \geq <nat:2> $ . As a consequence , <nat:1900800> is a <def:seven-composite> number is true has been proven . Therefore , $ <nat:1900800> = <var:K> * <var:a> * <var:h> * <var:y> * <var:m> * <var:S> * <var:t> $ is verified . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:seven-composite> ( <var:r> : nat ) := exists <var:t> <var:K> <var:S> <var:y> <var:m> <var:h> <var:a> : nat , ( <var:m> * <var:S> * <var:a> * <var:t> * <var:h> * <var:K> * <var:y> = <var:r> ) /\ ( <var:t> >= <nat:2> ) /\ ( <var:K> >= <nat:2> ) /\ ( <var:S> >= <nat:2> ) /\ ( <var:y> >= <nat:2> ) /\ ( <var:m> >= <nat:2> ) /\ ( <var:h> >= <nat:2> ) /\ ( <var:a> >= <nat:2> ) . Theorem <genP:1> : <def:seven-composite> <nat:1900800> . Proof . unfold <def:seven-composite> . exists <nat:12> . exists <nat:5> . exists <nat:11> . exists <nat:9> . exists <nat:8> . exists <nat:10> . exists <nat:4> . assert ( <genH> : <nat:5> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:11> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:9> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:8> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:4> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:12> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:10> >= <nat:2> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 