\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:292> <var:v> + <nat:282> <var:V> + <nat:380> <var:z> + <var:y> <nat:458> + <nat:362> <var:E> + <nat:280> <var:b> + <var:G> <nat:80> + <nat:298> <var:j> + <nat:421> $ must be odd assuming some unknowns $ <var:V> $ , $ <var:j> $ , $ <var:b> $ , $ <var:G> $ , $ <var:z> $ , $ <var:E> $ , $ <var:y> $ , and $ <var:v> $ . \end{theorem} \begin{proof} It can be proven that the summation $ <nat:421> + <nat:282> <var:V> + <var:G> <nat:80> + <var:E> <nat:362> + <var:y> <nat:458> + <var:v> <nat:292> + <nat:380> <var:z> + <nat:298> <var:j> + <var:b> <nat:280> $ is guaranteed to be odd . We make use the fact that the formula $ <nat:380> \cdot <var:z> + <nat:458> \cdot <var:y> + <var:b> \cdot <nat:280> + <var:v> \cdot <nat:292> + <nat:362> \cdot <var:E> + <nat:282> \cdot <var:V> + <nat:298> \cdot <var:j> + <var:G> \cdot <nat:80> $ is even , as a consequence that the addition of an even number and an even integer is guaranteed to be an even number . Notice the pairs $ <var:E> * <nat:362> $ and also $ <nat:280> * <var:b> $ are trivially even elements of $ \mathbb{Z}^+ $ . This is true because multiplying between an even number with some number will be even . Adding on , see that the terms $ <var:z> * <nat:380> $ and also $ <var:y> * <nat:458> $ are guaranteed to be even naturals . Further , notice $ <nat:298> * <var:j> $ is known to be even since multiplying of an even natural number with an arbitrary element of $ \mathbb{Z}^+ $ must be by its very nature an even integer . Observe that the pair $ <nat:282> * <var:V> $ is known as even . This claim is proven by reason that taking the product between an even natural number with any integer is guaranteed to be even . Likewise , see that the pair $ <nat:80> * <var:G> $ is trivially an even natural number . This must be true by reason that taking the product between an even natural number with any number in $ \mathbb{N} $ is guaranteed to be obviously an even number in $ \mathbb{Z}^+ $ . Take note the pair $ <nat:292> * <var:v> $ is obviously an even element of $ \mathbb{N} $ . in addition to by reason that taking the product between even numbers with a number in $ \mathbb{Z}^+ $ must be even the expression $ <nat:298> \times <var:j> + <var:G> \times <nat:80> + <var:y> \times <nat:458> + <nat:362> \times <var:E> + <nat:282> \times <var:V> + <var:v> \times <nat:292> + <var:z> \times <nat:380> + <nat:280> \times <var:b> $ is even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:V> <var:j> <var:b> <var:G> <var:z> <var:E> <var:y> <var:v> : nat , Nat . odd ( <nat:292> * <var:v> + <nat:282> * <var:V> + <nat:380> * <var:z> + <nat:458> * <var:y> + <nat:362> * <var:E> + <nat:280> * <var:b> + <nat:80> * <var:G> + <nat:298> * <var:j> + <nat:421> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:362> * <var:E> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:280> * <var:b> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:380> * <var:z> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:458> * <var:y> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:298> * <var:j> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:282> * <var:V> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:80> * <var:G> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:292> * <var:v> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:292> * <var:v> + <nat:282> * <var:V> + <nat:380> * <var:z> + <nat:458> * <var:y> + <nat:362> * <var:E> + <nat:280> * <var:b> + <nat:80> * <var:G> + <nat:298> * <var:j> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . auto . Qed . 