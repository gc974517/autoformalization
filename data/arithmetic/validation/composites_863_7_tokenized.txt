\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \newtheorem{definition}{Definition} \begin{document} \begin{definition} Let $ <var:y> $ , $ <var:w> $ , $ <var:z> $ , $ <var:V> $ , $ <var:m> $ , $ <var:n> $ , $ <var:Z> $ be positive integers . Define that some positive integer $ <var:N> $ will be called a <def:seven-composite> integer assuming $ <var:N> = <var:m> \times <var:y> \times <var:Z> \times <var:z> \times <var:n> \times <var:V> \times <var:w> $ plus factors are greater than or equal to <nat:2> . \end{definition} \begin{theorem} $ <nat:356400> = <var:N> $ is <def:seven-composite> . \end{theorem} \begin{proof} Remember that a <def:seven-composite> natural number is the multiplication between integers $ <var:Z> $ , $ <var:z> $ , $ <var:w> $ , $ <var:y> $ , $ <var:V> $ , $ <var:n> $ and $ <var:m> $ satisfying the condition that $ <var:V> $ , $ <var:w> $ , $ <var:m> $ , $ <var:z> $ , $ <var:Z> $ , $ <var:n> $ , and $ <var:y> \geq <nat:2> $ . Notice that $ <nat:10> $ , $ <nat:6> $ , $ <nat:5> $ , $ <nat:4> $ , $ <nat:3> $ , $ <nat:9> $ , and $ <nat:11> \geq <nat:2> $ . In addition note too $ <nat:5> * <nat:4> * <nat:9> * <nat:10> * <nat:6> * <nat:11> * <nat:3> = <nat:356400> $ . This suggests the belief holds . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:seven-composite> ( <var:N> : nat ) := exists <var:y> <var:w> <var:z> <var:V> <var:m> <var:n> <var:Z> : nat , ( <var:N> = <var:m> * <var:y> * <var:Z> * <var:z> * <var:n> * <var:V> * <var:w> ) /\ ( <var:y> >= <nat:2> ) /\ ( <var:w> >= <nat:2> ) /\ ( <var:z> >= <nat:2> ) /\ ( <var:V> >= <nat:2> ) /\ ( <var:m> >= <nat:2> ) /\ ( <var:n> >= <nat:2> ) /\ ( <var:Z> >= <nat:2> ) . Theorem <genP:1> : <def:seven-composite> <nat:356400> . Proof . unfold <def:seven-composite> . assert ( <genH> : <nat:10> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:6> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:5> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:4> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:3> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:9> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:11> >= <nat:2> ) . { lia . } exists <nat:10> . exists <nat:6> . exists <nat:9> . exists <nat:4> . exists <nat:3> . exists <nat:11> . exists <nat:5> . repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 