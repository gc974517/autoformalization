\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:64> \times <var:P> + <nat:106> \times <var:F> + <nat:6> \times <var:m> + <nat:367> + <var:Q> \times <nat:260> + <nat:154> \times <var:R> + <nat:344> \times <var:Z> + <nat:350> \times <var:C> + <nat:282> \times <var:c> $ must be odd . \end{theorem} \begin{proof} Recall the pair $ <nat:64> <var:P> $ is known to be an even element of $ \mathbb{Z}^+ $ . The products $ <nat:154> <var:R> $ , $ <var:Z> <nat:344> $ , and also $ <var:Q> <nat:260> $ are clearly even . This must be true because taking the product between an even number and any natural number is even . Likewise , recall the pairs $ <nat:282> <var:c> $ and $ <var:C> <nat:350> $ are clearly even numbers in $ \mathbb{N} $ . Likewise , notice that $ <var:F> <nat:106> $ is guaranteed to be even . The product $ <nat:6> <var:m> $ is an even integer . This claim must be true since multiplying between an even natural and a number in $ \mathbb{Z}^+ $ will be an even positive integer . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:P> <var:F> <var:m> <var:Q> <var:R> <var:Z> <var:C> <var:c> : nat , Nat . odd ( <nat:64> * <var:P> + <nat:106> * <var:F> + <nat:6> * <var:m> + <nat:260> * <var:Q> + <nat:154> * <var:R> + <nat:344> * <var:Z> + <nat:350> * <var:C> + <nat:282> * <var:c> + <nat:367> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:64> * <var:P> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:154> * <var:R> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:344> * <var:Z> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:260> * <var:Q> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:282> * <var:c> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:350> * <var:C> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:106> * <var:F> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:6> * <var:m> ) = true ) . { rewrite Nat . even_mul . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 