\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \newtheorem{definition}{Definition} \begin{document} \begin{definition} When we get $ <var:r> * <var:Q> * <var:x> * <var:U> * <var:B> * <var:P> * <var:M> * <var:W> * <var:O> = <var:J> $ for $ <var:J> \in \mathbb{N} $ and satisfying the condition that $ <var:O> $ , $ <var:r> $ , $ <var:M> $ , $ <var:B> $ , $ <var:W> $ , $ <var:x> $ , $ <var:U> $ , $ <var:P> $ and $ <var:Q> \geq <nat:2> $ , then we denote that $ <var:J> $ is a <def:nine-composite> number with some $ <var:B> $ , $ <var:O> $ , $ <var:W> $ , $ <var:Q> $ , $ <var:M> $ , $ <var:P> $ , $ <var:U> $ , $ <var:r> $ , $ <var:x> \in \mathbb{N} $ . \end{definition} \begin{theorem} $ <nat:11404800> = <var:J> $ is a <def:nine-composite> whole number . \end{theorem} \begin{proof} Remember that <nat:11404800> is a <def:nine-composite> integer with the condition it is the product between whole numbers $ <var:r> $ , $ <var:W> $ , $ <var:M> $ , $ <var:B> $ , $ <var:Q> $ , $ <var:U> $ , $ <var:O> $ , $ <var:P> $ , and $ <var:x> $ more than or equivalent to <nat:2> . Let $ <var:M> = <nat:11> $ , $ <var:O> = <nat:9> $ , $ <var:B> = <nat:2> $ , $ <var:Q> = <nat:10> $ , $ <var:P> = <nat:8> $ , $ <var:x> = <nat:12> $ , $ <var:r> = <nat:3> $ , $ <var:W> = <nat:5> $ , $ <var:U> = <nat:4> $ . Note that $ <nat:11404800> = <nat:10> \cdot <nat:5> \cdot <nat:2> \cdot <nat:3> \cdot <nat:8> \cdot <nat:4> \cdot <nat:11> \cdot <nat:9> \cdot <nat:12> $ . Furthermore observe that $ <var:P> = <nat:8> $ , $ <var:W> = <nat:5> $ , $ <var:Q> = <nat:10> $ , $ <var:U> = <nat:4> $ , $ <var:x> = <nat:12> $ , $ <var:r> = <nat:3> $ , $ <var:O> = <nat:9> $ , $ <var:B> = <nat:2> $ and $ <var:M> = <nat:11> \geq <nat:2> $ . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:nine-composite> ( <var:J> : nat ) := exists <var:B> <var:O> <var:W> <var:Q> <var:M> <var:P> <var:U> <var:r> <var:x> : nat , ( <var:r> * <var:Q> * <var:x> * <var:U> * <var:B> * <var:P> * <var:M> * <var:W> * <var:O> = <var:J> ) /\ ( <var:O> >= <nat:2> ) /\ ( <var:r> >= <nat:2> ) /\ ( <var:M> >= <nat:2> ) /\ ( <var:B> >= <nat:2> ) /\ ( <var:W> >= <nat:2> ) /\ ( <var:x> >= <nat:2> ) /\ ( <var:U> >= <nat:2> ) /\ ( <var:P> >= <nat:2> ) /\ ( <var:Q> >= <nat:2> ) . Theorem <genP:1> : <def:nine-composite> <nat:11404800> . Proof . unfold <def:nine-composite> . exists <nat:2> . exists <nat:9> . exists <nat:5> . exists <nat:10> . exists <nat:11> . exists <nat:8> . exists <nat:4> . exists <nat:3> . exists <nat:12> . assert ( <genH> : <nat:8> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:5> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:10> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:4> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:12> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:3> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:9> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:2> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:11> >= <nat:2> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 