\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:b> <nat:198> + <var:X> <nat:356> + <nat:154> <var:i> + <nat:202> <var:j> + <var:v> <nat:100> + <nat:383> + <nat:380> <var:B> + <var:q> <nat:80> $ is guaranteed to be odd . \end{theorem} \begin{proof} We know that the expression $ <var:B> * <nat:380> + <var:v> * <nat:100> + <nat:198> * <var:b> + <var:i> * <nat:154> + <var:X> * <nat:356> + <nat:383> + <var:j> * <nat:202> + <var:q> * <nat:80> $ is trivially odd since the formula $ <nat:356> \times <var:X> + <var:q> \times <nat:80> + <nat:380> \times <var:B> + <nat:198> \times <var:b> + <nat:100> \times <var:v> + <nat:202> \times <var:j> + <var:i> \times <nat:154> $ is obviously even . The pairs $ <var:X> * <nat:356> $ , $ <var:q> * <nat:80> $ , $ <nat:380> * <var:B> $ , $ <var:b> * <nat:198> $ , $ <var:v> * <nat:100> $ , $ <var:j> * <nat:202> $ , additionally $ <nat:154> * <var:i> $ will be even . This fact must be true from the knowledge the product of an even number and an arbitrary element of $ \mathbb{N} $ will be an even element of $ \mathbb{N} $ plus the coefficients $ <nat:356> $ , $ <nat:80> $ , $ <nat:380> $ , $ <nat:198> $ , $ <nat:100> $ , $ <nat:202> $ , and $ <nat:154> $ are known as even naturals . Since the multiplication between even naturals and some integer is even the sum $ <var:j> * <nat:202> + <nat:100> * <var:v> + <var:b> * <nat:198> + <nat:80> * <var:q> + <var:i> * <nat:154> + <nat:380> * <var:B> + <nat:356> * <var:X> $ is guaranteed to be instrinsically even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:b> <var:X> <var:i> <var:j> <var:v> <var:B> <var:q> : nat , Nat . odd ( <nat:198> * <var:b> + <nat:356> * <var:X> + <nat:154> * <var:i> + <nat:202> * <var:j> + <nat:100> * <var:v> + <nat:380> * <var:B> + <nat:80> * <var:q> + <nat:383> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:356> = true ) . { auto . } assert ( <genH> : Nat . even <nat:80> = true ) . { auto . } assert ( <genH> : Nat . even <nat:380> = true ) . { auto . } assert ( <genH> : Nat . even <nat:198> = true ) . { auto . } assert ( <genH> : Nat . even <nat:100> = true ) . { auto . } assert ( <genH> : Nat . even <nat:202> = true ) . { auto . } assert ( <genH> : Nat . even <nat:154> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:356> * <var:X> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:80> * <var:q> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:380> * <var:B> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:198> * <var:b> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:100> * <var:v> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:202> * <var:j> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:154> * <var:i> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:198> * <var:b> + <nat:356> * <var:X> + <nat:154> * <var:i> + <nat:202> * <var:j> + <nat:100> * <var:v> + <nat:380> * <var:B> + <nat:80> * <var:q> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . auto . Qed . 