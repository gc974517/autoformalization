\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Supposing that we have satisfying the condition that $ <var:u> $ , $ <var:A> $ , $ <var:J> $ , $ <var:Z> $ , $ <var:Y> $ , $ <var:H> $ , $ <var:B> $ , $ <var:G> $ , $ <var:a> > <nat:1> $ where taking some number $ <var:K> $ , $ <var:A> \times <var:G> \times <var:Z> \times <var:u> \times <var:H> \times <var:B> \times <var:Y> \times <var:J> \times <var:a> = <var:K> $ , then take that $ <var:K> $ is a <def:nine-composite> number for some whole numbers $ <var:A> $ , $ <var:u> $ , $ <var:Z> $ , $ <var:Y> $ , $ <var:a> $ , $ <var:J> $ , $ <var:H> $ , $ <var:B> $ , $ <var:G> $ . Thus the positive integer <nat:21772800> is a <def:nine-composite> integer . \end{theorem} \begin{proof} Observe that $ <nat:3> $ , $ <nat:7> $ , $ <nat:8> $ , $ <nat:5> $ , $ <nat:9> $ , $ <nat:12> $ , $ <nat:4> $ , $ <nat:10> $ , and $ <nat:6> $ are more than <nat:1> . Furthermore notice that likewise $ <nat:6> * <nat:10> * <nat:7> * <nat:4> * <nat:3> * <nat:9> * <nat:8> * <nat:5> * <nat:12> = <nat:21772800> $ . As a consequence , $ <var:G> * <var:H> * <var:J> * <var:a> * <var:Y> * <var:u> * <var:Z> * <var:B> * <var:A> = <nat:21772800> $ is verified . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:nine-composite> ( <var:K> : nat ) := exists <var:A> <var:u> <var:Z> <var:Y> <var:a> <var:J> <var:H> <var:B> <var:G> : nat , ( <var:u> > <nat:1> ) /\ ( <var:A> > <nat:1> ) /\ ( <var:J> > <nat:1> ) /\ ( <var:Z> > <nat:1> ) /\ ( <var:Y> > <nat:1> ) /\ ( <var:H> > <nat:1> ) /\ ( <var:B> > <nat:1> ) /\ ( <var:G> > <nat:1> ) /\ ( <var:a> > <nat:1> ) /\ ( <var:A> * <var:G> * <var:Z> * <var:u> * <var:H> * <var:B> * <var:Y> * <var:J> * <var:a> = <var:K> ) . Theorem <genP:1> : <def:nine-composite> <nat:21772800> . Proof . unfold <def:nine-composite> . assert ( <genH> : <nat:3> > <nat:1> ) . { lia . } assert ( <genH> : <nat:7> > <nat:1> ) . { lia . } assert ( <genH> : <nat:8> > <nat:1> ) . { lia . } assert ( <genH> : <nat:5> > <nat:1> ) . { lia . } assert ( <genH> : <nat:9> > <nat:1> ) . { lia . } assert ( <genH> : <nat:12> > <nat:1> ) . { lia . } assert ( <genH> : <nat:4> > <nat:1> ) . { lia . } assert ( <genH> : <nat:10> > <nat:1> ) . { lia . } assert ( <genH> : <nat:6> > <nat:1> ) . { lia . } exists <nat:10> . exists <nat:5> . exists <nat:12> . exists <nat:7> . exists <nat:9> . exists <nat:6> . exists <nat:8> . exists <nat:3> . exists <nat:4> . repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 