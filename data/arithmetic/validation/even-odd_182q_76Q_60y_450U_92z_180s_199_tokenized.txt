\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:U> * <nat:450> + <var:z> * <nat:92> + <var:q> * <nat:182> + <nat:180> * <var:s> + <nat:60> * <var:y> + <nat:199> + <nat:76> * <var:Q> $ is guaranteed to be odd using all natural numbers $ <var:U> $ , $ <var:z> $ , $ <var:s> $ , $ <var:y> $ , $ <var:Q> $ , and $ <var:q> $ . \end{theorem} \begin{proof} The products $ <nat:92> * <var:z> $ , $ <var:U> * <nat:450> $ , in addition to $ <var:y> * <nat:60> $ are known as even numbers in $ \mathbb{Z}^+ $ . This holds because taking the product of an even element of $ \mathbb{N} $ and any element of $ \mathbb{N} $ is even . This must be true from the fact the coefficients $ <nat:92> $ , $ <nat:450> $ , as well as $ <nat:60> $ must be even naturals . Notice that the terms $ <var:s> * <nat:180> $ and likewise $ <var:Q> * <nat:76> $ will be even numbers in $ \mathbb{N} $ . This fact is proven from the fact the product between an even number in $ \mathbb{Z}^+ $ and a natural number must be obviously an even natural in addition to the integers $ <nat:180> $ plus $ <nat:76> $ are obviously even elements of $ \mathbb{Z}^+ $ . What's more , recall the leading term $ <nat:182> $ is clearly an even natural . So , the pair $ <var:q> * <nat:182> $ must be even as well . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:U> <var:z> <var:s> <var:y> <var:Q> <var:q> : nat , Nat . odd ( <nat:450> * <var:U> + <nat:92> * <var:z> + <nat:182> * <var:q> + <nat:180> * <var:s> + <nat:60> * <var:y> + <nat:76> * <var:Q> + <nat:199> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:92> = true ) . { auto . } assert ( <genH> : Nat . even <nat:450> = true ) . { auto . } assert ( <genH> : Nat . even <nat:60> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:92> * <var:z> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:450> * <var:U> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:60> * <var:y> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:180> = true ) . { auto . } assert ( <genH> : Nat . even <nat:76> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:180> * <var:s> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:76> * <var:Q> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:182> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:182> * <var:q> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 