\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \newtheorem{definition}{Definition} \begin{document} \begin{definition} Allow $ <var:S> $ , $ <var:n> $ , $ <var:f> $ , $ <var:R> $ , $ <var:u> $ , $ <var:r> $ , $ <var:w> $ , $ <var:B> \in \mathbb{Z}^+ $ more than <nat:1> . We say that some integer $ <var:O> $ will be considered to be a <def:eight-composite> number assuming $ <var:f> \cdot <var:B> \cdot <var:S> \cdot <var:n> \cdot <var:R> \cdot <var:r> \cdot <var:w> \cdot <var:u> = <var:O> $ . \end{definition} \begin{theorem} The number <nat:7484400> is a <def:eight-composite> number . \end{theorem} \begin{proof} Recall a <def:eight-composite> positive integer is the product of numbers $ <var:w> $ , $ <var:u> $ , $ <var:n> $ , $ <var:f> $ , $ <var:S> $ , $ <var:R> $ , $ <var:B> $ , and $ <var:r> $ larger than <nat:1> . Note that $ <nat:9> $ , $ <nat:5> $ , $ <nat:12> $ , $ <nat:10> $ , $ <nat:6> $ , $ <nat:11> $ , $ <nat:7> $ , $ <nat:3> $ are more than <nat:1> . Moreover notice still $ <var:w> * <var:B> * <var:u> * <var:S> * <var:r> * <var:R> * <var:f> * <var:n> = <nat:7484400> $ yields $ <var:w> = <nat:5> $ , $ <var:f> = <nat:7> $ , $ <var:B> = <nat:3> $ , $ <var:S> = <nat:12> $ , $ <var:n> = <nat:6> $ , $ <var:r> = <nat:10> $ , $ <var:R> = <nat:11> $ and $ <var:u> = <nat:9> $ . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:eight-composite> ( <var:O> : nat ) := exists <var:S> <var:n> <var:f> <var:R> <var:u> <var:r> <var:w> <var:B> : nat , ( <var:S> > <nat:1> ) /\ ( <var:n> > <nat:1> ) /\ ( <var:f> > <nat:1> ) /\ ( <var:R> > <nat:1> ) /\ ( <var:u> > <nat:1> ) /\ ( <var:r> > <nat:1> ) /\ ( <var:w> > <nat:1> ) /\ ( <var:B> > <nat:1> ) /\ ( <var:f> * <var:B> * <var:S> * <var:n> * <var:R> * <var:r> * <var:w> * <var:u> = <var:O> ) . Theorem <genP:1> : <def:eight-composite> <nat:7484400> . Proof . unfold <def:eight-composite> . assert ( <genH> : <nat:9> > <nat:1> ) . { lia . } assert ( <genH> : <nat:5> > <nat:1> ) . { lia . } assert ( <genH> : <nat:12> > <nat:1> ) . { lia . } assert ( <genH> : <nat:10> > <nat:1> ) . { lia . } assert ( <genH> : <nat:6> > <nat:1> ) . { lia . } assert ( <genH> : <nat:11> > <nat:1> ) . { lia . } assert ( <genH> : <nat:7> > <nat:1> ) . { lia . } assert ( <genH> : <nat:3> > <nat:1> ) . { lia . } exists <nat:12> . exists <nat:6> . exists <nat:7> . exists <nat:11> . exists <nat:9> . exists <nat:10> . exists <nat:5> . exists <nat:3> . repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 