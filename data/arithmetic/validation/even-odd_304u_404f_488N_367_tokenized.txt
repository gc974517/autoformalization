\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:367> + <var:u> \cdot <nat:304> + <nat:488> \cdot <var:N> + <nat:404> \cdot <var:f> $ is odd . \end{theorem} \begin{proof} Recall that $ <nat:367> $ is known as an odd element of $ \mathbb{Z}^+ $ . By reason that the summing of an even number in $ \mathbb{Z}^+ $ and an odd positive integer must be odd , thus our claim holds . We know that the positive integer $ <nat:304> $ is obviously even . Therefore , the term $ <nat:304> \times <var:u> $ is even at the same time . Adding on , the pair $ <var:f> \times <nat:404> $ is an even element of $ \mathbb{N} $ . This fact is true from the knowledge the coefficient $ <nat:404> $ is clearly even . In addition to this , we know that the pair $ <var:N> \times <nat:488> $ is an even number in $ \mathbb{Z}^+ $ . This is true since the multiplication between an even element of $ \mathbb{N} $ with any natural must be even and also the coefficient $ <nat:488> $ is known to be even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:u> <var:N> <var:f> : nat , Nat . odd ( <nat:304> * <var:u> + <nat:488> * <var:N> + <nat:404> * <var:f> + <nat:367> ) = true . Proof . intros . assert ( <genH> : Nat . odd <nat:367> = true ) . { auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . assert ( <genH> : Nat . even <nat:304> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:304> * <var:u> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:404> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:404> * <var:f> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:488> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:488> * <var:N> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 