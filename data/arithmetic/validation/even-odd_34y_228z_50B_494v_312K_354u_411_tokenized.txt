\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:312> <var:K> + <var:u> <nat:354> + <nat:228> <var:z> + <nat:50> <var:B> + <nat:34> <var:y> + <nat:411> + <nat:494> <var:v> $ is odd . \end{theorem} \begin{proof} Observe that the expression $ <nat:354> * <var:u> + <nat:34> * <var:y> + <var:B> * <nat:50> + <nat:411> + <var:v> * <nat:494> + <nat:312> * <var:K> + <nat:228> * <var:z> $ is known to be odd from the fact the sum $ <nat:34> \times <var:y> + <nat:228> \times <var:z> + <var:B> \times <nat:50> + <nat:494> \times <var:v> + <nat:312> \times <var:K> + <var:u> \times <nat:354> $ is known to be even , by reason that the adding of an even integer and an even number in $ \mathbb{N} $ will be even . Remember that the products $ <nat:50> \times <var:B> $ and likewise $ <var:z> \times <nat:228> $ will be even . The terms $ <var:u> \times <nat:354> $ , $ <nat:34> \times <var:y> $ , and $ <nat:312> \times <var:K> $ are clearly even naturals . On top of this , we know that the pair $ <var:v> \times <nat:494> $ is obviously an even element of $ \mathbb{Z}^+ $ . and also from the fact the product between an even whole number with an arbitrary number in $ \mathbb{N} $ will be even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:K> <var:u> <var:z> <var:B> <var:y> <var:v> : nat , Nat . odd ( <nat:312> * <var:K> + <nat:354> * <var:u> + <nat:228> * <var:z> + <nat:50> * <var:B> + <nat:34> * <var:y> + <nat:494> * <var:v> + <nat:411> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:50> * <var:B> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:228> * <var:z> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:354> * <var:u> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:34> * <var:y> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:312> * <var:K> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:494> * <var:v> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:312> * <var:K> + <nat:354> * <var:u> + <nat:228> * <var:z> + <nat:50> * <var:B> + <nat:34> * <var:y> + <nat:494> * <var:v> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . auto . Qed . 