\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:392> * <var:H> + <nat:277> + <nat:160> * <var:D> + <nat:468> * <var:y> + <var:j> * <nat:366> + <nat:314> * <var:A> + <nat:222> * <var:m> + <var:G> * <nat:306> + <var:r> * <nat:188> $ will be odd . \end{theorem} \begin{proof} The summation $ <var:G> \cdot <nat:306> + <nat:366> \cdot <var:j> + <nat:222> \cdot <var:m> + <nat:314> \cdot <var:A> + <nat:392> \cdot <var:H> + <var:r> \cdot <nat:188> + <nat:160> \cdot <var:D> + <var:y> \cdot <nat:468> $ is guaranteed to be even . Further , take note the integers $ <nat:306> $ , $ <nat:366> $ , $ <nat:222> $ , $ <nat:314> $ , $ <nat:392> $ , $ <nat:188> $ , $ <nat:160> $ , $ <nat:468> $ , are guaranteed to be even . As a consequence , the terms $ <nat:306> \cdot <var:G> $ , $ <nat:366> \cdot <var:j> $ , $ <nat:222> \cdot <var:m> $ , $ <nat:314> \cdot <var:A> $ , $ <nat:392> \cdot <var:H> $ , $ <var:r> \cdot <nat:188> $ , $ <var:D> \cdot <nat:160> $ , $ <var:y> \cdot <nat:468> $ , must be even additionally . Observe that the summation between even elements of $ \mathbb{Z}^+ $ successively and an odd element of $ \mathbb{Z}^+ $ is guaranteed to be trivially an odd whole number . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:H> <var:D> <var:y> <var:j> <var:A> <var:m> <var:G> <var:r> : nat , Nat . odd ( <nat:392> * <var:H> + <nat:160> * <var:D> + <nat:468> * <var:y> + <nat:366> * <var:j> + <nat:314> * <var:A> + <nat:222> * <var:m> + <nat:306> * <var:G> + <nat:188> * <var:r> + <nat:277> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:306> = true ) . { auto . } assert ( <genH> : Nat . even <nat:366> = true ) . { auto . } assert ( <genH> : Nat . even <nat:222> = true ) . { auto . } assert ( <genH> : Nat . even <nat:314> = true ) . { auto . } assert ( <genH> : Nat . even <nat:392> = true ) . { auto . } assert ( <genH> : Nat . even <nat:188> = true ) . { auto . } assert ( <genH> : Nat . even <nat:160> = true ) . { auto . } assert ( <genH> : Nat . even <nat:468> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:306> * <var:G> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:366> * <var:j> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:222> * <var:m> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:314> * <var:A> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:392> * <var:H> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:188> * <var:r> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:160> * <var:D> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:468> * <var:y> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:392> * <var:H> + <nat:160> * <var:D> + <nat:468> * <var:y> + <nat:366> * <var:j> + <nat:314> * <var:A> + <nat:222> * <var:m> + <nat:306> * <var:G> + <nat:188> * <var:r> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . auto . Qed . 