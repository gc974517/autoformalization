\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:Z> \cdot <nat:362> + <var:x> \cdot <nat:414> + <var:S> \cdot <nat:380> + <nat:409> + <nat:234> \cdot <var:f> + <var:F> \cdot <nat:480> + <nat:450> \cdot <var:M> + <var:Y> \cdot <nat:52> $ will be odd with some positive numbers $ <var:S> $ , $ <var:x> $ , $ <var:F> $ , $ <var:Z> $ , $ <var:f> $ , $ <var:Y> $ , and $ <var:M> $ . \end{theorem} \begin{proof} The leading terms $ <nat:380> $ as well as $ <nat:52> $ will be even Adding on , see that the whole numbers $ <nat:414> $ and moreover $ <nat:450> $ are guaranteed to be even Furthermore , the whole number $ <nat:480> $ is obviously even Further , the whole number $ <nat:362> $ is trivially an even number in $ \mathbb{Z}^+ $ Furthermore , notice that the leading term $ <nat:234> $ is known to be an even number in $ \mathbb{Z}^+ $ Notice $ <nat:409> $ is trivially odd . It can be justified that $ <nat:450> <var:M> + <var:f> <nat:234> + <var:x> <nat:414> + <var:Y> <nat:52> + <var:F> <nat:480> + <nat:409> + <var:Z> <nat:362> + <nat:380> <var:S> $ is odd . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:S> <var:x> <var:F> <var:Z> <var:f> <var:Y> <var:M> : nat , Nat . odd ( <nat:362> * <var:Z> + <nat:414> * <var:x> + <nat:380> * <var:S> + <nat:234> * <var:f> + <nat:480> * <var:F> + <nat:450> * <var:M> + <nat:52> * <var:Y> + <nat:409> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:380> = true ) . { auto . } assert ( <genH> : Nat . even <nat:52> = true ) . { auto . } assert ( <genH> : Nat . even <nat:414> = true ) . { auto . } assert ( <genH> : Nat . even <nat:450> = true ) . { auto . } assert ( <genH> : Nat . even <nat:480> = true ) . { auto . } assert ( <genH> : Nat . even <nat:362> = true ) . { auto . } assert ( <genH> : Nat . even <nat:234> = true ) . { auto . } assert ( <genH> : Nat . odd <nat:409> = true ) . { auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . repeat rewrite Nat . even_mul . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 