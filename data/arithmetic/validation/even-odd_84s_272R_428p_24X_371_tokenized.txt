\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} With every whole numbers $ <var:X> $ , $ <var:s> $ , $ <var:R> $ , and $ <var:p> $ $ <var:X> * <nat:24> + <nat:84> * <var:s> + <nat:371> + <var:p> * <nat:428> + <nat:272> * <var:R> $ must be odd . \end{theorem} \begin{proof} We demonstrate $ <nat:24> * <var:X> + <nat:272> * <var:R> + <var:s> * <nat:84> + <nat:371> + <nat:428> * <var:p> $ is guaranteed to be odd . We know that $ <nat:371> + <nat:428> \times <var:p> + <nat:84> \times <var:s> + <var:X> \times <nat:24> + <var:R> \times <nat:272> $ is trivially odd because the expression $ <var:s> \times <nat:84> + <nat:272> \times <var:R> + <nat:428> \times <var:p> + <var:X> \times <nat:24> $ is known as even . See that the adding between even elements of $ \mathbb{N} $ collectively with an even number in $ \mathbb{Z}^+ $ is an even element of $ \mathbb{N} $ . Take note the whole numbers $ <nat:84> $ , $ <nat:272> $ , $ <nat:428> $ , and also $ <nat:24> $ must be even . So , the terms $ <nat:84> <var:s> $ , $ <nat:272> <var:R> $ , $ <nat:428> <var:p> $ , and also $ <var:X> <nat:24> $ is even at the same time . additionally since the product between an even number in $ \mathbb{N} $ with a integer will be even the theorem holds . Take note the summation between even numbers in $ \mathbb{Z}^+ $ successively and an odd positive integer will be an odd natural . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:X> <var:s> <var:R> <var:p> : nat , Nat . odd ( <nat:24> * <var:X> + <nat:84> * <var:s> + <nat:428> * <var:p> + <nat:272> * <var:R> + <nat:371> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:84> = true ) . { auto . } assert ( <genH> : Nat . even <nat:272> = true ) . { auto . } assert ( <genH> : Nat . even <nat:428> = true ) . { auto . } assert ( <genH> : Nat . even <nat:24> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:84> * <var:s> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:272> * <var:R> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:428> * <var:p> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:24> * <var:X> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:24> * <var:X> + <nat:84> * <var:s> + <nat:428> * <var:p> + <nat:272> * <var:R> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . auto . Qed . 