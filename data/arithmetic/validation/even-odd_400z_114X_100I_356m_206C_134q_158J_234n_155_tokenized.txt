\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:400> \times <var:z> + <nat:114> \times <var:X> + <nat:100> \times <var:I> + <nat:356> \times <var:m> + <nat:155> + <var:C> \times <nat:206> + <var:q> \times <nat:134> + <var:J> \times <nat:158> + <var:n> \times <nat:234> $ must be odd for all positive numbers $ <var:m> $ , $ <var:n> $ , $ <var:C> $ , $ <var:z> $ , $ <var:J> $ , $ <var:I> $ , $ <var:q> $ , and $ <var:X> $ . \end{theorem} \begin{proof} See that the totaling of even numbers in $ \mathbb{N} $ concurrently and an odd positive integer will be odd . The terms $ <var:J> \times <nat:158> $ , $ <var:z> \times <nat:400> $ , $ <nat:234> \times <var:n> $ , and moreover $ <nat:134> \times <var:q> $ must be even from the fact the multiplication of an even positive integer and an arbitrary number in $ \mathbb{Z}^+ $ must be even . We know the pair $ <nat:356> \times <var:m> $ is clearly even . The pairs $ <var:X> \times <nat:114> $ and likewise $ <nat:206> \times <var:C> $ are known to be even . We know $ <nat:100> \times <var:I> $ is an even element of $ \mathbb{Z}^+ $ . This holds from the fact the product of an even whole number with an arbitrary positive integer is even . We prove this lemma is proven . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:m> <var:n> <var:C> <var:z> <var:J> <var:I> <var:q> <var:X> : nat , Nat . odd ( <nat:400> * <var:z> + <nat:114> * <var:X> + <nat:100> * <var:I> + <nat:356> * <var:m> + <nat:206> * <var:C> + <nat:134> * <var:q> + <nat:158> * <var:J> + <nat:234> * <var:n> + <nat:155> ) = true . Proof . intros . rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . assert ( <genH> : Nat . even ( <nat:158> * <var:J> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:400> * <var:z> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:234> * <var:n> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:134> * <var:q> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:356> * <var:m> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:114> * <var:X> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:206> * <var:C> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:100> * <var:I> ) = true ) . { rewrite Nat . even_mul . auto . } rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 