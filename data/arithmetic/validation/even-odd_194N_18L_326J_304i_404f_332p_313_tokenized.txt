\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:p> <nat:332> + <nat:313> + <nat:404> <var:f> + <var:J> <nat:326> + <nat:18> <var:L> + <nat:194> <var:N> + <nat:304> <var:i> $ must be odd taking natural numbers $ <var:J> $ , $ <var:N> $ , $ <var:f> $ , $ <var:i> $ , $ <var:p> $ , and $ <var:L> $ . \end{theorem} \begin{proof} We show that the expression $ <var:f> \times <nat:404> + <var:L> \times <nat:18> + <nat:332> \times <var:p> + <nat:326> \times <var:J> + <var:i> \times <nat:304> + <var:N> \times <nat:194> + <nat:313> $ is guaranteed to be odd because the expression $ <nat:194> * <var:N> + <var:i> * <nat:304> + <nat:326> * <var:J> + <var:f> * <nat:404> + <nat:332> * <var:p> + <nat:18> * <var:L> $ is trivially even . The products $ <var:f> \times <nat:404> $ , $ <var:p> \times <nat:332> $ , and moreover $ <var:L> \times <nat:18> $ are trivially even numbers in $ \mathbb{N} $ as a consequence that the product between an even natural with an arbitrary number must be itself an even number in $ \mathbb{Z}^+ $ . Likewise , $ <nat:326> \times <var:J> $ is guaranteed to be even because the multiplication between an even element of $ \mathbb{Z}^+ $ and some number in $ \mathbb{N} $ will be even . On top of this , notice that $ <var:N> \times <nat:194> $ is trivially even . The product $ <var:i> \times <nat:304> $ is clearly an even number in $ \mathbb{Z}^+ $ . The expression $ <var:N> \cdot <nat:194> + <nat:18> \cdot <var:L> + <var:J> \cdot <nat:326> + <var:i> \cdot <nat:304> + <nat:404> \cdot <var:f> + <nat:332> \cdot <var:p> $ will be by itself even from the fact the product between an even number with an arbitrary integer is guaranteed to be even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:J> <var:N> <var:f> <var:i> <var:p> <var:L> : nat , Nat . odd ( <nat:332> * <var:p> + <nat:404> * <var:f> + <nat:326> * <var:J> + <nat:18> * <var:L> + <nat:194> * <var:N> + <nat:304> * <var:i> + <nat:313> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:404> * <var:f> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:332> * <var:p> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:18> * <var:L> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:326> * <var:J> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:194> * <var:N> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:304> * <var:i> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:332> * <var:p> + <nat:404> * <var:f> + <nat:326> * <var:J> + <nat:18> * <var:L> + <nat:194> * <var:N> + <nat:304> * <var:i> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . auto . Qed . 