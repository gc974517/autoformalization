\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:t> \cdot <nat:66> + <nat:252> \cdot <var:l> + <nat:272> \cdot <var:b> + <nat:476> \cdot <var:S> + <nat:400> \cdot <var:w> + <var:A> \cdot <nat:478> + <nat:458> \cdot <var:U> + <nat:51> $ must be odd using any $ <var:t> $ , $ <var:w> $ , $ <var:A> $ , $ <var:l> $ , $ <var:U> $ , $ <var:S> $ , and $ <var:b> $ . \end{theorem} \begin{proof} We use that the expression $ <var:l> * <nat:252> + <nat:66> * <var:t> + <nat:400> * <var:w> + <nat:51> + <nat:272> * <var:b> + <nat:458> * <var:U> + <var:S> * <nat:476> + <nat:478> * <var:A> $ is known as odd by reason that $ <nat:458> * <var:U> + <nat:272> * <var:b> + <nat:400> * <var:w> + <var:t> * <nat:66> + <nat:252> * <var:l> + <nat:476> * <var:S> + <var:A> * <nat:478> $ is trivially even . The product $ <var:U> \cdot <nat:458> $ is guaranteed to be even from the knowledge taking the product between an even natural and any number in $ \mathbb{N} $ must be by its very nature an even integer . The pairs $ <var:A> \cdot <nat:478> $ , $ <nat:272> \cdot <var:b> $ , $ <var:w> \cdot <nat:400> $ , $ <nat:66> \cdot <var:t> $ , and moreover $ <nat:476> \cdot <var:S> $ are trivially even natural numbers . We know the term $ <nat:252> \cdot <var:l> $ is known to be even . The main result is proven from the fact the product of an even element of $ \mathbb{Z}^+ $ and some integer will be obviously an even natural . It can be shown that our lemma must be true . Take note $ <nat:51> $ is known to be an odd whole number . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:t> <var:w> <var:A> <var:l> <var:U> <var:S> <var:b> : nat , Nat . odd ( <nat:66> * <var:t> + <nat:252> * <var:l> + <nat:272> * <var:b> + <nat:476> * <var:S> + <nat:400> * <var:w> + <nat:478> * <var:A> + <nat:458> * <var:U> + <nat:51> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:458> * <var:U> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:478> * <var:A> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:272> * <var:b> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:400> * <var:w> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:66> * <var:t> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:476> * <var:S> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:252> * <var:l> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:66> * <var:t> + <nat:252> * <var:l> + <nat:272> * <var:b> + <nat:476> * <var:S> + <nat:400> * <var:w> + <nat:478> * <var:A> + <nat:458> * <var:U> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } assert ( <genH> : Nat . odd <nat:51> = true ) . { auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . rewrite <genH> . auto . Qed . 