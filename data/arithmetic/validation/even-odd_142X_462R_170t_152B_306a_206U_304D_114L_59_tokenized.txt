\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:L> \cdot <nat:114> + <nat:59> + <nat:142> \cdot <var:X> + <var:t> \cdot <nat:170> + <nat:462> \cdot <var:R> + <var:U> \cdot <nat:206> + <var:a> \cdot <nat:306> + <var:B> \cdot <nat:152> + <nat:304> \cdot <var:D> $ must be odd taking some positive integers $ <var:U> $ , $ <var:t> $ , $ <var:R> $ , $ <var:L> $ , $ <var:B> $ , $ <var:a> $ , $ <var:X> $ , and $ <var:D> $ . \end{theorem} \begin{proof} Remember the totaling of an even element of $ \mathbb{Z}^+ $ with an odd whole number will be by itself an odd number . It can be justified that $ <nat:462> <var:R> + <nat:114> <var:L> + <var:X> <nat:142> + <var:B> <nat:152> + <var:D> <nat:304> + <nat:306> <var:a> + <nat:206> <var:U> + <var:t> <nat:170> $ is clearly even , because the summing between even numbers in $ \mathbb{Z}^+ $ collectively with an even natural is even . The products $ <var:L> * <nat:114> $ plus $ <var:B> * <nat:152> $ are known as even naturals since taking the product of an even number in $ \mathbb{N} $ with a natural number will be an even number . This claim is proven from the fact the positive integers $ <nat:114> $ and likewise $ <nat:152> $ are even whole numbers . Further , the leading terms $ <nat:304> $ , $ <nat:462> $ , $ <nat:170> $ , $ <nat:206> $ , and likewise $ <nat:142> $ are guaranteed to be even . For this reason , the terms $ <nat:304> * <var:D> $ , $ <nat:462> * <var:R> $ , $ <nat:170> * <var:t> $ , $ <nat:206> * <var:U> $ , and moreover $ <var:X> * <nat:142> $ is guaranteed to be even additionally . In addition to this , see that the pair $ <nat:306> * <var:a> $ is obviously an even element of $ \mathbb{N} $ . This is true from the knowledge the natural number $ <nat:306> $ is clearly trivially an even integer . as well as from the knowledge the multiplication of an even positive integer with any element of $ \mathbb{N} $ is guaranteed to be an even element of $ \mathbb{Z}^+ $ . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:U> <var:t> <var:R> <var:L> <var:B> <var:a> <var:X> <var:D> : nat , Nat . odd ( <nat:114> * <var:L> + <nat:142> * <var:X> + <nat:170> * <var:t> + <nat:462> * <var:R> + <nat:206> * <var:U> + <nat:306> * <var:a> + <nat:152> * <var:B> + <nat:304> * <var:D> + <nat:59> ) = true . Proof . intros . rewrite Nat . odd_add . assert ( <genH> : Nat . even <nat:114> = true ) . { auto . } assert ( <genH> : Nat . even <nat:152> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:114> * <var:L> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:152> * <var:B> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:304> = true ) . { auto . } assert ( <genH> : Nat . even <nat:462> = true ) . { auto . } assert ( <genH> : Nat . even <nat:170> = true ) . { auto . } assert ( <genH> : Nat . even <nat:206> = true ) . { auto . } assert ( <genH> : Nat . even <nat:142> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:304> * <var:D> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:462> * <var:R> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:170> * <var:t> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:206> * <var:U> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:142> * <var:X> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:306> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:306> * <var:a> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:114> * <var:L> + <nat:142> * <var:X> + <nat:170> * <var:t> + <nat:462> * <var:R> + <nat:206> * <var:U> + <nat:306> * <var:a> + <nat:152> * <var:B> + <nat:304> * <var:D> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite <- Nat . negb_even . rewrite <genH> . auto . Qed . 