\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:148> <var:v> + <nat:404> <var:D> + <var:L> <nat:396> + <var:U> <nat:180> + <nat:481> + <var:i> <nat:208> + <nat:494> <var:M> + <nat:200> <var:Q> $ will be odd . \end{theorem} \begin{proof} We verify the formula $ <nat:481> + <nat:200> \times <var:Q> + <var:D> \times <nat:404> + <var:U> \times <nat:180> + <nat:396> \times <var:L> + <var:M> \times <nat:494> + <nat:148> \times <var:v> + <var:i> \times <nat:208> $ will be odd by applying the knowledge that the summation between an even positive integer with an odd element of $ \mathbb{N} $ is clearly an odd number in $ \mathbb{Z}^+ $ . Recall that $ <nat:481> $ is known as odd . This lemma must be true from the fact $ <var:v> \times <nat:148> + <nat:396> \times <var:L> + <var:U> \times <nat:180> + <nat:404> \times <var:D> + <nat:200> \times <var:Q> + <var:M> \times <nat:494> + <var:i> \times <nat:208> $ is even . Take note that the terms $ <nat:148> \times <var:v> $ as well as $ <nat:208> \times <var:i> $ must be even whole numbers . Furthermore , the terms $ <nat:180> \times <var:U> $ , $ <nat:396> \times <var:L> $ , and moreover $ <var:Q> \times <nat:200> $ are trivially even positive integers . Building on , take note the pair $ <var:D> \times <nat:404> $ is an even natural . The product $ <nat:494> \times <var:M> $ is guaranteed to be even . This claim is true by reason that the multiplication of an even number in $ \mathbb{Z}^+ $ and any element of $ \mathbb{Z}^+ $ is guaranteed to be an even natural . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:v> <var:D> <var:L> <var:U> <var:i> <var:M> <var:Q> : nat , Nat . odd ( <nat:148> * <var:v> + <nat:404> * <var:D> + <nat:396> * <var:L> + <nat:180> * <var:U> + <nat:208> * <var:i> + <nat:494> * <var:M> + <nat:200> * <var:Q> + <nat:481> ) = true . Proof . intros . rewrite Nat . odd_add . assert ( <genH> : Nat . odd <nat:481> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:148> * <var:v> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:208> * <var:i> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:180> * <var:U> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:396> * <var:L> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:200> * <var:Q> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:404> * <var:D> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:494> * <var:M> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:148> * <var:v> + <nat:404> * <var:D> + <nat:396> * <var:L> + <nat:180> * <var:U> + <nat:208> * <var:i> + <nat:494> * <var:M> + <nat:200> * <var:Q> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite <- Nat . negb_even . rewrite <genH> . rewrite <genH> . auto . Qed . 