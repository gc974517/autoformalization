\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Let $ <var:C> $ , $ <var:I> $ , $ <var:e> $ , $ <var:r> $ , $ <var:R> $ , $ <var:S> $ , $ <var:k> $ and $ <var:h> \in \mathbb{N} $ where $ <var:k> $ , $ <var:r> $ , $ <var:e> $ , $ <var:C> $ , $ <var:R> $ , $ <var:h> $ , $ <var:I> $ , $ <var:S> $ more than <nat:1> . the number <nat:1900800> is the product between whole numbers $ <var:C> $ , $ <var:I> $ , $ <var:e> $ , $ <var:r> $ , $ <var:R> $ , $ <var:S> $ , $ <var:k> $ , $ <var:h> \in \mathbb{N} $ . \end{theorem} \begin{proof} Assume $ <var:k> = <nat:8> $ , $ <var:h> = <nat:11> $ , $ <var:r> = <nat:6> $ , $ <var:I> = <nat:2> $ , $ <var:e> = <nat:3> $ , $ <var:C> = <nat:5> $ , $ <var:S> = <nat:12> $ , $ <var:R> = <nat:10> $ . Notice $ <var:C> \cdot <var:R> \cdot <var:r> \cdot <var:I> \cdot <var:h> \cdot <var:e> \cdot <var:k> \cdot <var:S> = <nat:1900800> $ . Similarly notice that $ <nat:10> $ , $ <nat:8> $ , $ <nat:11> $ , $ <nat:2> $ , $ <nat:12> $ , $ <nat:6> $ , $ <nat:5> $ , and $ <nat:3> > <nat:1> $ . \end{proof} \end{document} 
~
Require Import Lia . Theorem <genP:1> : exists <var:C> <var:I> <var:e> <var:r> <var:R> <var:S> <var:k> <var:h> : nat , ( <var:k> > <nat:1> ) /\ ( <var:r> > <nat:1> ) /\ ( <var:e> > <nat:1> ) /\ ( <var:C> > <nat:1> ) /\ ( <var:R> > <nat:1> ) /\ ( <var:h> > <nat:1> ) /\ ( <var:I> > <nat:1> ) /\ ( <var:S> > <nat:1> ) /\ ( <nat:1900800> = <var:C> * <var:I> * <var:e> * <var:r> * <var:R> * <var:S> * <var:k> * <var:h> ) . Proof . exists <nat:5> . exists <nat:2> . exists <nat:3> . exists <nat:6> . exists <nat:10> . exists <nat:12> . exists <nat:8> . exists <nat:11> . assert ( <genH> : <nat:10> > <nat:1> ) . { lia . } assert ( <genH> : <nat:8> > <nat:1> ) . { lia . } assert ( <genH> : <nat:11> > <nat:1> ) . { lia . } assert ( <genH> : <nat:2> > <nat:1> ) . { lia . } assert ( <genH> : <nat:12> > <nat:1> ) . { lia . } assert ( <genH> : <nat:6> > <nat:1> ) . { lia . } assert ( <genH> : <nat:5> > <nat:1> ) . { lia . } assert ( <genH> : <nat:3> > <nat:1> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 