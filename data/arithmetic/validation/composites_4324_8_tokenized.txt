\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} The number <nat:2661120> is the product of $ <var:q> $ , $ <var:D> $ , $ <var:E> $ , $ <var:u> $ , $ <var:X> $ , $ <var:G> $ , $ <var:Y> $ and $ <var:h> $ such that $ <var:E> $ , $ <var:q> $ , $ <var:G> $ , $ <var:h> $ , $ <var:u> $ , $ <var:Y> $ , $ <var:X> $ , $ <var:D> $ larger than <nat:1> . \end{theorem} \begin{proof} Assume $ <var:D> = <nat:2> $ , $ <var:h> = <nat:8> $ , $ <var:X> = <nat:12> $ , $ <var:Y> = <nat:10> $ , $ <var:E> = <nat:6> $ , $ <var:G> = <nat:3> $ , $ <var:q> = <nat:7> $ , $ <var:u> = <nat:11> $ . Note that $ <nat:6> $ , $ <nat:8> $ , $ <nat:7> $ , $ <nat:3> $ , $ <nat:10> $ , $ <nat:11> $ , $ <nat:2> $ , $ <nat:12> > <nat:1> $ . Additionally note moreover $ <nat:2661120> = <var:E> \times <var:u> \times <var:h> \times <var:D> \times <var:Y> \times <var:X> \times <var:G> \times <var:q> $ . This yields the principle is true . Consequently , $ <nat:2661120> = <var:u> \times <var:G> \times <var:q> \times <var:X> \times <var:E> \times <var:D> \times <var:h> \times <var:Y> $ plus $ <var:X> $ , $ <var:E> $ , $ <var:G> $ , $ <var:D> $ , $ <var:q> $ , $ <var:h> $ , $ <var:Y> $ and $ <var:u> $ are greater than <nat:1> has been validated . \end{proof} \end{document} 
~
Require Import Lia . Theorem <genP:1> : exists <var:q> <var:D> <var:E> <var:u> <var:X> <var:G> <var:Y> <var:h> : nat , ( <nat:2661120> = <var:q> * <var:D> * <var:E> * <var:u> * <var:X> * <var:G> * <var:Y> * <var:h> ) /\ ( <var:E> > <nat:1> ) /\ ( <var:q> > <nat:1> ) /\ ( <var:G> > <nat:1> ) /\ ( <var:h> > <nat:1> ) /\ ( <var:u> > <nat:1> ) /\ ( <var:Y> > <nat:1> ) /\ ( <var:X> > <nat:1> ) /\ ( <var:D> > <nat:1> ) . Proof . exists <nat:7> . exists <nat:2> . exists <nat:6> . exists <nat:11> . exists <nat:12> . exists <nat:3> . exists <nat:10> . exists <nat:8> . assert ( <genH> : <nat:6> > <nat:1> ) . { lia . } assert ( <genH> : <nat:8> > <nat:1> ) . { lia . } assert ( <genH> : <nat:7> > <nat:1> ) . { lia . } assert ( <genH> : <nat:3> > <nat:1> ) . { lia . } assert ( <genH> : <nat:10> > <nat:1> ) . { lia . } assert ( <genH> : <nat:11> > <nat:1> ) . { lia . } assert ( <genH> : <nat:2> > <nat:1> ) . { lia . } assert ( <genH> : <nat:12> > <nat:1> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 