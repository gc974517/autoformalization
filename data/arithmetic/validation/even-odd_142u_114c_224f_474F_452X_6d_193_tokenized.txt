\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:142> * <var:u> + <var:c> * <nat:114> + <nat:193> + <var:f> * <nat:224> + <var:F> * <nat:474> + <nat:452> * <var:X> + <nat:6> * <var:d> $ will be odd given unknowns $ <var:f> $ , $ <var:d> $ , $ <var:c> $ , $ <var:u> $ , $ <var:F> $ , and $ <var:X> $ . \end{theorem} \begin{proof} Observe that the pairs $ <var:u> <nat:142> $ , $ <var:F> <nat:474> $ , $ <var:f> <nat:224> $ , additionally $ <var:X> <nat:452> $ are obviously even . This is proven by reason that taking the product of an even natural and any whole number must be an even element of $ \mathbb{Z}^+ $ . On top of this , recall the pair $ <var:d> <nat:6> $ is known as even . This must be true from the knowledge multiplying of an even number with a natural is guaranteed to be even . The term $ <nat:114> <var:c> $ is trivially an even integer . This fact must be true because multiplying of an even number in $ \mathbb{N} $ and a natural must be an even natural number . The addition of even naturals successively and an odd number in $ \mathbb{Z}^+ $ is odd . See that $ <nat:193> $ is guaranteed to be odd . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:f> <var:d> <var:c> <var:u> <var:F> <var:X> : nat , Nat . odd ( <nat:142> * <var:u> + <nat:114> * <var:c> + <nat:224> * <var:f> + <nat:474> * <var:F> + <nat:452> * <var:X> + <nat:6> * <var:d> + <nat:193> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:142> * <var:u> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:474> * <var:F> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:224> * <var:f> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:452> * <var:X> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:6> * <var:d> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:114> * <var:c> ) = true ) . { rewrite Nat . even_mul . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . assert ( <genH> : Nat . odd <nat:193> = true ) . { auto . } rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 