\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:66> \times <var:T> + <nat:98> \times <var:n> + <nat:59> + <nat:350> \times <var:h> + <var:Q> \times <nat:404> + <nat:250> \times <var:p> + <var:K> \times <nat:74> + <var:W> \times <nat:164> $ is odd . \end{theorem} \begin{proof} We justify that the sum $ <var:T> * <nat:66> + <nat:98> * <var:n> + <nat:404> * <var:Q> + <nat:74> * <var:K> + <var:h> * <nat:350> + <nat:59> + <var:W> * <nat:164> + <var:p> * <nat:250> $ is obviously odd from the fact $ <var:W> \cdot <nat:164> + <nat:74> \cdot <var:K> + <var:n> \cdot <nat:98> + <var:T> \cdot <nat:66> + <var:Q> \cdot <nat:404> + <var:h> \cdot <nat:350> + <nat:250> \cdot <var:p> $ is guaranteed to be even . The pairs $ <nat:250> \cdot <var:p> $ in addition to $ <nat:74> \cdot <var:K> $ are obviously even . Recall that the pairs $ <nat:66> \cdot <var:T> $ , $ <nat:164> \cdot <var:W> $ , as well as $ <var:Q> \cdot <nat:404> $ are known as even . Additionally , the term $ <nat:350> \cdot <var:h> $ is known as even because multiplying of an even natural with any number is even . Furthermore , take note the pair $ <var:n> \cdot <nat:98> $ is trivially an even element of $ \mathbb{N} $ . This is true since the product between an even number in $ \mathbb{N} $ with some element of $ \mathbb{Z}^+ $ is guaranteed to be even . Notice that the totaling of an even number in $ \mathbb{N} $ with an odd integer must be odd . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:T> <var:n> <var:h> <var:Q> <var:p> <var:K> <var:W> : nat , Nat . odd ( <nat:66> * <var:T> + <nat:98> * <var:n> + <nat:350> * <var:h> + <nat:404> * <var:Q> + <nat:250> * <var:p> + <nat:74> * <var:K> + <nat:164> * <var:W> + <nat:59> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:250> * <var:p> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:74> * <var:K> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:66> * <var:T> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:164> * <var:W> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:404> * <var:Q> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:350> * <var:h> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:98> * <var:n> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:66> * <var:T> + <nat:98> * <var:n> + <nat:350> * <var:h> + <nat:404> * <var:Q> + <nat:250> * <var:p> + <nat:74> * <var:K> + <nat:164> * <var:W> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . auto . Qed . 