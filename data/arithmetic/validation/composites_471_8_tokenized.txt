\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \newtheorem{definition}{Definition} \begin{document} \begin{definition} Assuming we have where $ <var:V> $ , $ <var:B> $ , $ <var:S> $ , $ <var:K> $ , $ <var:L> $ , $ <var:T> $ , $ <var:s> $ and $ <var:A> > <nat:1> $ satisfying the condition that with $ <var:u> \in \mathbb{Z}^+ $ , $ <var:S> \cdot <var:T> \cdot <var:s> \cdot <var:L> \cdot <var:B> \cdot <var:K> \cdot <var:A> \cdot <var:V> = <var:u> $ , take that $ <var:u> $ is a <def:eight-composite> positive integer for some $ <var:K> $ , $ <var:B> $ , $ <var:A> $ , $ <var:V> $ , $ <var:s> $ , $ <var:T> $ , $ <var:S> $ , $ <var:L> \in \mathbb{N} $ . \end{definition} \begin{theorem} $ <var:u> = <nat:1368576> $ is a <def:eight-composite> integer . \end{theorem} \begin{proof} Allow $ <var:L> = <nat:2> $ , $ <var:S> = <nat:9> $ , $ <var:s> = <nat:8> $ , $ <var:V> = <nat:12> $ , $ <var:A> = <nat:6> $ , $ <var:T> = <nat:4> $ , $ <var:B> = <nat:3> $ , and $ <var:K> = <nat:11> $ . We show <nat:1368576> is <def:eight-composite> by reason of $ <nat:12> $ , $ <nat:4> $ , $ <nat:2> $ , $ <nat:6> $ , $ <nat:3> $ , $ <nat:11> $ , $ <nat:8> $ , and $ <nat:9> $ are greater than <nat:1> . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:eight-composite> ( <var:u> : nat ) := exists <var:K> <var:B> <var:A> <var:V> <var:s> <var:T> <var:S> <var:L> : nat , ( <var:V> > <nat:1> ) /\ ( <var:B> > <nat:1> ) /\ ( <var:S> > <nat:1> ) /\ ( <var:K> > <nat:1> ) /\ ( <var:L> > <nat:1> ) /\ ( <var:T> > <nat:1> ) /\ ( <var:s> > <nat:1> ) /\ ( <var:A> > <nat:1> ) /\ ( <var:S> * <var:T> * <var:s> * <var:L> * <var:B> * <var:K> * <var:A> * <var:V> = <var:u> ) . Theorem <genP:1> : <def:eight-composite> <nat:1368576> . Proof . unfold <def:eight-composite> . exists <nat:11> . exists <nat:3> . exists <nat:6> . exists <nat:12> . exists <nat:8> . exists <nat:4> . exists <nat:9> . exists <nat:2> . assert ( <genH> : <nat:12> > <nat:1> ) . { lia . } assert ( <genH> : <nat:4> > <nat:1> ) . { lia . } assert ( <genH> : <nat:2> > <nat:1> ) . { lia . } assert ( <genH> : <nat:6> > <nat:1> ) . { lia . } assert ( <genH> : <nat:3> > <nat:1> ) . { lia . } assert ( <genH> : <nat:11> > <nat:1> ) . { lia . } assert ( <genH> : <nat:8> > <nat:1> ) . { lia . } assert ( <genH> : <nat:9> > <nat:1> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 