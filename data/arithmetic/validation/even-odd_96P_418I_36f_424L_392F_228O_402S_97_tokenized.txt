\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Using any integers $ <var:f> $ , $ <var:L> $ , $ <var:F> $ , $ <var:O> $ , $ <var:I> $ , $ <var:P> $ , and $ <var:S> $ the summation $ <nat:228> <var:O> + <nat:392> <var:F> + <nat:418> <var:I> + <var:P> <nat:96> + <var:S> <nat:402> + <nat:97> + <nat:36> <var:f> + <var:L> <nat:424> $ is odd . \end{theorem} \begin{proof} The adding between an even number in $ \mathbb{N} $ and an odd positive integer is odd . We use the knowledge that $ <nat:392> \times <var:F> + <nat:402> \times <var:S> + <var:P> \times <nat:96> + <var:O> \times <nat:228> + <var:f> \times <nat:36> + <nat:424> \times <var:L> + <nat:97> + <var:I> \times <nat:418> $ is known as odd from the fact the summation $ <var:L> \times <nat:424> + <var:F> \times <nat:392> + <var:I> \times <nat:418> + <var:P> \times <nat:96> + <var:O> \times <nat:228> + <nat:36> \times <var:f> + <var:S> \times <nat:402> $ is known as even . Remember that the numbers $ <nat:424> $ , $ <nat:392> $ , $ <nat:418> $ , $ <nat:96> $ , $ <nat:228> $ , $ <nat:36> $ , $ <nat:402> $ , are guaranteed to be even . Hence , the products $ <nat:424> \cdot <var:L> $ , $ <nat:392> \cdot <var:F> $ , $ <nat:418> \cdot <var:I> $ , $ <nat:96> \cdot <var:P> $ , $ <nat:228> \cdot <var:O> $ , $ <nat:36> \cdot <var:f> $ , $ <nat:402> \cdot <var:S> $ , will be even also . It can be shown that $ <var:P> <nat:96> + <var:I> <nat:418> + <nat:36> <var:f> + <var:L> <nat:424> + <var:F> <nat:392> + <var:O> <nat:228> + <nat:97> + <nat:402> <var:S> $ must be odd . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:f> <var:L> <var:F> <var:O> <var:I> <var:P> <var:S> : nat , Nat . odd ( <nat:228> * <var:O> + <nat:392> * <var:F> + <nat:418> * <var:I> + <nat:96> * <var:P> + <nat:402> * <var:S> + <nat:36> * <var:f> + <nat:424> * <var:L> + <nat:97> ) = true . Proof . intros . rewrite Nat . odd_add . assert ( <genH> : Nat . even <nat:424> = true ) . { auto . } assert ( <genH> : Nat . even <nat:392> = true ) . { auto . } assert ( <genH> : Nat . even <nat:418> = true ) . { auto . } assert ( <genH> : Nat . even <nat:96> = true ) . { auto . } assert ( <genH> : Nat . even <nat:228> = true ) . { auto . } assert ( <genH> : Nat . even <nat:36> = true ) . { auto . } assert ( <genH> : Nat . even <nat:402> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:424> * <var:L> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:392> * <var:F> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:418> * <var:I> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:96> * <var:P> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:228> * <var:O> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:36> * <var:f> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:402> * <var:S> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:228> * <var:O> + <nat:392> * <var:F> + <nat:418> * <var:I> + <nat:96> * <var:P> + <nat:402> * <var:S> + <nat:36> * <var:f> + <nat:424> * <var:L> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite <- Nat . negb_even . rewrite <genH> . auto . Qed . 