\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Take $ <var:V> $ , $ <var:b> $ , $ <var:M> $ , $ <var:j> $ , $ <var:n> $ , $ <var:o> $ , $ <var:u> $ , $ <var:c> $ are positive integers satisfying the condition that $ <var:j> $ , $ <var:u> $ , $ <var:c> $ , $ <var:b> $ , $ <var:M> $ , $ <var:n> $ , $ <var:V> $ , $ <var:o> > <nat:1> $ . Take that some integer $ <var:B> $ is said to be a <def:eight-composite> natural number given $ <var:b> \times <var:o> \times <var:n> \times <var:M> \times <var:V> \times <var:u> \times <var:c> \times <var:j> = <var:B> $ . So <nat:1360800> is <def:eight-composite> . \end{theorem} \begin{proof} Assume $ <var:o> = <nat:7> $ , $ <var:b> = <nat:2> $ , $ <var:j> = <nat:9> $ , $ <var:u> = <nat:10> $ , $ <var:n> = <nat:6> $ , $ <var:M> = <nat:5> $ , $ <var:c> = <nat:3> $ and $ <var:V> = <nat:12> $ . We justify $ <var:c> $ , $ <var:b> $ , $ <var:M> $ , $ <var:n> $ , $ <var:u> $ , $ <var:V> $ , $ <var:o> $ , and $ <var:j> $ are greater than <nat:1> plus <nat:1360800> is the product of some integers $ <var:M> $ , $ <var:V> $ , $ <var:n> $ , $ <var:o> $ , $ <var:j> $ , $ <var:b> $ , $ <var:c> $ , and $ <var:u> $ . Additionally note $ <var:n> = <nat:6> $ , $ <var:c> = <nat:3> $ , $ <var:V> = <nat:12> $ , $ <var:M> = <nat:5> $ , $ <var:u> = <nat:10> $ , $ <var:b> = <nat:2> $ , $ <var:j> = <nat:9> $ , and $ <var:o> = <nat:7> $ are greater than <nat:1> . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:eight-composite> ( <var:B> : nat ) := exists <var:V> <var:b> <var:M> <var:j> <var:n> <var:o> <var:u> <var:c> : nat , ( <var:j> > <nat:1> ) /\ ( <var:u> > <nat:1> ) /\ ( <var:c> > <nat:1> ) /\ ( <var:b> > <nat:1> ) /\ ( <var:M> > <nat:1> ) /\ ( <var:n> > <nat:1> ) /\ ( <var:V> > <nat:1> ) /\ ( <var:o> > <nat:1> ) /\ ( <var:b> * <var:o> * <var:n> * <var:M> * <var:V> * <var:u> * <var:c> * <var:j> = <var:B> ) . Theorem <genP:1> : <def:eight-composite> <nat:1360800> . Proof . unfold <def:eight-composite> . exists <nat:12> . exists <nat:2> . exists <nat:5> . exists <nat:9> . exists <nat:6> . exists <nat:7> . exists <nat:10> . exists <nat:3> . assert ( <genH> : <nat:6> > <nat:1> ) . { lia . } assert ( <genH> : <nat:3> > <nat:1> ) . { lia . } assert ( <genH> : <nat:12> > <nat:1> ) . { lia . } assert ( <genH> : <nat:5> > <nat:1> ) . { lia . } assert ( <genH> : <nat:10> > <nat:1> ) . { lia . } assert ( <genH> : <nat:2> > <nat:1> ) . { lia . } assert ( <genH> : <nat:9> > <nat:1> ) . { lia . } assert ( <genH> : <nat:7> > <nat:1> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 