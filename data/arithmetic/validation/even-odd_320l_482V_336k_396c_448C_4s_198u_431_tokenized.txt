\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} With some positive integers $ <var:V> $ , $ <var:C> $ , $ <var:k> $ , $ <var:u> $ , $ <var:s> $ , $ <var:c> $ , and $ <var:l> $ the summation $ <nat:396> \cdot <var:c> + <var:l> \cdot <nat:320> + <nat:448> \cdot <var:C> + <var:u> \cdot <nat:198> + <var:k> \cdot <nat:336> + <nat:482> \cdot <var:V> + <nat:431> + <nat:4> \cdot <var:s> $ must be odd . \end{theorem} \begin{proof} Take note that the addition between even elements of $ \mathbb{N} $ successively and an odd natural will be odd . The result must be true from the knowledge $ <nat:482> \cdot <var:V> + <var:l> \cdot <nat:320> + <nat:396> \cdot <var:c> + <nat:336> \cdot <var:k> + <nat:448> \cdot <var:C> + <nat:198> \cdot <var:u> + <nat:4> \cdot <var:s> $ is guaranteed to be even , because the adding of even whole numbers collectively with an even natural number is guaranteed to be even . Take note the products $ <nat:4> \times <var:s> $ , $ <nat:448> \times <var:C> $ , $ <nat:198> \times <var:u> $ , and $ <var:l> \times <nat:320> $ are even elements of $ \mathbb{Z}^+ $ . The terms $ <nat:336> \times <var:k> $ in addition to $ <nat:396> \times <var:c> $ are clearly even naturals because multiplying between an even positive integer and any element of $ \mathbb{Z}^+ $ is guaranteed to be an even positive integer . Building on , remember the term $ <var:V> \times <nat:482> $ is clearly an even whole number . It can be checked that $ <var:l> \times <nat:320> + <var:V> \times <nat:482> + <nat:431> + <nat:336> \times <var:k> + <var:c> \times <nat:396> + <var:C> \times <nat:448> + <var:s> \times <nat:4> + <var:u> \times <nat:198> $ will be odd . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:V> <var:C> <var:k> <var:u> <var:s> <var:c> <var:l> : nat , Nat . odd ( <nat:396> * <var:c> + <nat:320> * <var:l> + <nat:448> * <var:C> + <nat:198> * <var:u> + <nat:336> * <var:k> + <nat:482> * <var:V> + <nat:4> * <var:s> + <nat:431> ) = true . Proof . intros . rewrite Nat . odd_add . assert ( <genH> : Nat . even ( <nat:4> * <var:s> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:448> * <var:C> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:198> * <var:u> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:320> * <var:l> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:336> * <var:k> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:396> * <var:c> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:482> * <var:V> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:396> * <var:c> + <nat:320> * <var:l> + <nat:448> * <var:C> + <nat:198> * <var:u> + <nat:336> * <var:k> + <nat:482> * <var:V> + <nat:4> * <var:s> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite <- Nat . negb_even . rewrite <genH> . auto . Qed . 