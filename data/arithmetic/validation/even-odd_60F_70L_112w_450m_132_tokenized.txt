\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Using some variables $ <var:m> $ , $ <var:F> $ , $ <var:w> $ , and $ <var:L> $ the summation $ <nat:60> * <var:F> + <nat:450> * <var:m> + <nat:132> + <var:L> * <nat:70> + <var:w> * <nat:112> $ is guaranteed to be even . \end{theorem} \begin{proof} It can be proven that our result is proven . Recall the term $ <var:L> <nat:70> $ is guaranteed to be even . This claim must be true as a consequence that the multiplication of an even element of $ \mathbb{Z}^+ $ with any number is even , and is true by reason that the whole number $ <nat:70> $ is an even number . The integer $ <nat:112> $ is trivially an even natural . Accordingly , the pair $ <nat:112> <var:w> $ must be even at the same time . The positive integer $ <nat:450> $ is clearly an even whole number . Hence , the pair $ <var:m> <nat:450> $ must be even at the same time . Adding on , the term $ <nat:60> <var:F> $ is obviously even . This claim holds by reason that the whole number $ <nat:60> $ is clearly fundamentally an even element of $ \mathbb{N} $ . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:m> <var:F> <var:w> <var:L> : nat , Nat . even ( <nat:60> * <var:F> + <nat:450> * <var:m> + <nat:70> * <var:L> + <nat:112> * <var:w> + <nat:132> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:70> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:70> * <var:L> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:112> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:112> * <var:w> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:450> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:450> * <var:m> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:60> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:60> * <var:F> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 