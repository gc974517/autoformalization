\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} With $ <var:q> $ , $ <var:B> $ , $ <var:Z> $ , $ <var:K> $ , $ <var:F> $ , $ <var:I> $ , $ <var:L> $ , and $ <var:p> \in \mathbb{N} $ the formula $ <nat:114> \times <var:Z> + <nat:386> \times <var:L> + <nat:494> \times <var:K> + <nat:448> \times <var:I> + <nat:468> \times <var:B> + <nat:10> \times <var:q> + <nat:2> \times <var:F> + <nat:383> + <var:p> \times <nat:310> $ must be odd . \end{theorem} \begin{proof} We show our theorem must be true . We use the assumption the knowledge the formula $ <nat:10> \times <var:q> + <var:p> \times <nat:310> + <var:Z> \times <nat:114> + <nat:383> + <var:K> \times <nat:494> + <nat:448> \times <var:I> + <nat:2> \times <var:F> + <var:B> \times <nat:468> + <var:L> \times <nat:386> $ is known to be odd since $ <var:K> * <nat:494> + <nat:310> * <var:p> + <var:I> * <nat:448> + <var:L> * <nat:386> + <var:Z> * <nat:114> + <nat:2> * <var:F> + <var:q> * <nat:10> + <nat:468> * <var:B> $ is known as even . The terms $ <nat:310> * <var:p> $ in addition to $ <nat:114> * <var:Z> $ are known to be even . Further , the terms $ <nat:386> * <var:L> $ , $ <nat:448> * <var:I> $ , plus $ <var:K> * <nat:494> $ are obviously even numbers in $ \mathbb{Z}^+ $ . The pair $ <nat:10> * <var:q> $ is known to be even . This is proven since taking the product between an even natural with some integer is guaranteed to be an even number . Take note the term $ <var:B> * <nat:468> $ is clearly even . The product $ <var:F> * <nat:2> $ is known to be an even number . The totaling of an even natural number and an odd positive integer must be odd . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:q> <var:B> <var:Z> <var:K> <var:F> <var:I> <var:L> <var:p> : nat , Nat . odd ( <nat:114> * <var:Z> + <nat:386> * <var:L> + <nat:494> * <var:K> + <nat:448> * <var:I> + <nat:468> * <var:B> + <nat:10> * <var:q> + <nat:2> * <var:F> + <nat:310> * <var:p> + <nat:383> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:310> * <var:p> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:114> * <var:Z> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:386> * <var:L> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:448> * <var:I> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:494> * <var:K> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:10> * <var:q> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:468> * <var:B> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:2> * <var:F> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:114> * <var:Z> + <nat:386> * <var:L> + <nat:494> * <var:K> + <nat:448> * <var:I> + <nat:468> * <var:B> + <nat:10> * <var:q> + <nat:2> * <var:F> + <nat:310> * <var:p> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . auto . Qed . 