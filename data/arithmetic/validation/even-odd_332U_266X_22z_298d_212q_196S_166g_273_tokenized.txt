\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Using every positive numbers $ <var:q> $ , $ <var:d> $ , $ <var:U> $ , $ <var:g> $ , $ <var:z> $ , $ <var:X> $ , and $ <var:S> $ the sum $ <nat:212> \cdot <var:q> + <nat:298> \cdot <var:d> + <var:X> \cdot <nat:266> + <var:U> \cdot <nat:332> + <nat:196> \cdot <var:S> + <nat:166> \cdot <var:g> + <var:z> \cdot <nat:22> + <nat:273> $ will be odd . \end{theorem} \begin{proof} Remember the coefficient $ <nat:166> $ is obviously an even integer We know that the whole numbers $ <nat:22> $ , $ <nat:332> $ , and also $ <nat:298> $ are known as even numbers The whole number $ <nat:266> $ is clearly even Additionally , the whole number $ <nat:212> $ is trivially even Building on , take note that the leading term $ <nat:196> $ is known to be an even number in $ \mathbb{N} $ Notice that $ <nat:273> $ is clearly an odd whole number . The addition between even numbers in $ \mathbb{Z}^+ $ together and an odd integer is odd . Additionally the product of an even integer with a natural is even . So , the summation $ <nat:332> \cdot <var:U> + <var:X> \cdot <nat:266> + <nat:22> \cdot <var:z> + <var:d> \cdot <nat:298> + <var:q> \cdot <nat:212> + <nat:273> + <nat:196> \cdot <var:S> + <var:g> \cdot <nat:166> $ will be odd . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:q> <var:d> <var:U> <var:g> <var:z> <var:X> <var:S> : nat , Nat . odd ( <nat:212> * <var:q> + <nat:298> * <var:d> + <nat:266> * <var:X> + <nat:332> * <var:U> + <nat:196> * <var:S> + <nat:166> * <var:g> + <nat:22> * <var:z> + <nat:273> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:166> = true ) . { auto . } assert ( <genH> : Nat . even <nat:22> = true ) . { auto . } assert ( <genH> : Nat . even <nat:332> = true ) . { auto . } assert ( <genH> : Nat . even <nat:298> = true ) . { auto . } assert ( <genH> : Nat . even <nat:266> = true ) . { auto . } assert ( <genH> : Nat . even <nat:212> = true ) . { auto . } assert ( <genH> : Nat . even <nat:196> = true ) . { auto . } assert ( <genH> : Nat . odd <nat:273> = true ) . { auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . repeat rewrite Nat . even_mul . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 