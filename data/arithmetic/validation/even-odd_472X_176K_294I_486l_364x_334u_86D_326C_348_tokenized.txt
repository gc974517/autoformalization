\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:X> \times <nat:472> + <var:K> \times <nat:176> + <nat:294> \times <var:I> + <nat:486> \times <var:l> + <nat:364> \times <var:x> + <nat:334> \times <var:u> + <var:D> \times <nat:86> + <nat:348> + <var:C> \times <nat:326> $ must be even . \end{theorem} \begin{proof} Observe the summation of an even element of $ \mathbb{N} $ and an even number in $ \mathbb{Z}^+ $ must be itself an even element of $ \mathbb{N} $ . Observe $ <nat:348> $ is obviously even . Additionally , the pairs $ <var:X> * <nat:472> $ , $ <nat:176> * <var:K> $ , $ <var:I> * <nat:294> $ , $ <nat:486> * <var:l> $ , $ <var:x> * <nat:364> $ , $ <var:u> * <nat:334> $ , $ <var:D> * <nat:86> $ , additionally $ <var:C> * <nat:326> $ are even numbers from the knowledge the product between an even positive integer and an arbitrary natural number is guaranteed to be an even whole number as well as the coefficients $ <nat:472> $ , $ <nat:176> $ , $ <nat:294> $ , $ <nat:486> $ , $ <nat:364> $ , $ <nat:334> $ , $ <nat:86> $ , in addition to $ <nat:326> $ are even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:X> <var:K> <var:I> <var:l> <var:x> <var:u> <var:D> <var:C> : nat , Nat . even ( <nat:472> * <var:X> + <nat:176> * <var:K> + <nat:294> * <var:I> + <nat:486> * <var:l> + <nat:364> * <var:x> + <nat:334> * <var:u> + <nat:86> * <var:D> + <nat:326> * <var:C> + <nat:348> ) = true . Proof . intros . repeat rewrite Nat . even_add . assert ( <genH> : Nat . even <nat:348> = true ) . { auto . } assert ( <genH> : Nat . even <nat:472> = true ) . { auto . } assert ( <genH> : Nat . even <nat:176> = true ) . { auto . } assert ( <genH> : Nat . even <nat:294> = true ) . { auto . } assert ( <genH> : Nat . even <nat:486> = true ) . { auto . } assert ( <genH> : Nat . even <nat:364> = true ) . { auto . } assert ( <genH> : Nat . even <nat:334> = true ) . { auto . } assert ( <genH> : Nat . even <nat:86> = true ) . { auto . } assert ( <genH> : Nat . even <nat:326> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:472> * <var:X> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:176> * <var:K> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:294> * <var:I> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:486> * <var:l> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:364> * <var:x> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:334> * <var:u> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:86> * <var:D> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:326> * <var:C> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 