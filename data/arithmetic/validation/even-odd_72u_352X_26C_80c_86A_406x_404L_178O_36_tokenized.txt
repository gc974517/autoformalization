\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Using some positive terms $ <var:A> $ , $ <var:u> $ , $ <var:c> $ , $ <var:x> $ , $ <var:L> $ , $ <var:O> $ , $ <var:C> $ , and $ <var:X> $ the sum $ <var:u> \cdot <nat:72> + <nat:178> \cdot <var:O> + <nat:80> \cdot <var:c> + <var:x> \cdot <nat:406> + <nat:36> + <nat:86> \cdot <var:A> + <var:C> \cdot <nat:26> + <var:L> \cdot <nat:404> + <nat:352> \cdot <var:X> $ is even . \end{theorem} \begin{proof} The coefficients $ <nat:86> $ , $ <nat:178> $ , $ <nat:404> $ , $ <nat:72> $ , and likewise $ <nat:406> $ are guaranteed to be even naturals . As a consequence , the products $ <nat:86> <var:A> $ , $ <var:O> <nat:178> $ , $ <nat:404> <var:L> $ , $ <nat:72> <var:u> $ , and $ <nat:406> <var:x> $ will be even also . We know that the natural numbers $ <nat:80> $ and $ <nat:26> $ are obviously even . Accordingly , the terms $ <var:c> <nat:80> $ plus $ <nat:26> <var:C> $ is guaranteed to be even in addition . What's more , the natural number $ <nat:352> $ is guaranteed to be even . Then , $ <var:X> <nat:352> $ is even additionally . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:A> <var:u> <var:c> <var:x> <var:L> <var:O> <var:C> <var:X> : nat , Nat . even ( <nat:72> * <var:u> + <nat:178> * <var:O> + <nat:80> * <var:c> + <nat:406> * <var:x> + <nat:86> * <var:A> + <nat:26> * <var:C> + <nat:404> * <var:L> + <nat:352> * <var:X> + <nat:36> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:86> = true ) . { auto . } assert ( <genH> : Nat . even <nat:178> = true ) . { auto . } assert ( <genH> : Nat . even <nat:404> = true ) . { auto . } assert ( <genH> : Nat . even <nat:72> = true ) . { auto . } assert ( <genH> : Nat . even <nat:406> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:86> * <var:A> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:178> * <var:O> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:404> * <var:L> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:72> * <var:u> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:406> * <var:x> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:80> = true ) . { auto . } assert ( <genH> : Nat . even <nat:26> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:80> * <var:c> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:26> * <var:C> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:352> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:352> * <var:X> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 