\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Taking some natural terms $ <var:C> $ , $ <var:V> $ , $ <var:J> $ , $ <var:p> $ , $ <var:Y> $ , $ <var:w> $ , and $ <var:u> $ $ <nat:64> * <var:J> + <var:p> * <nat:256> + <nat:100> * <var:V> + <var:C> * <nat:358> + <nat:114> * <var:Y> + <nat:455> + <var:w> * <nat:118> + <var:u> * <nat:414> $ must be odd . \end{theorem} \begin{proof} The addition of even numbers in $ \mathbb{N} $ and an odd number in $ \mathbb{N} $ must be odd . So , the sum $ <var:C> <nat:358> + <var:Y> <nat:114> + <var:V> <nat:100> + <nat:455> + <nat:118> <var:w> + <nat:414> <var:u> + <var:p> <nat:256> + <nat:64> <var:J> $ must be odd . The products $ <nat:118> <var:w> $ as well as $ <var:p> <nat:256> $ are clearly even elements of $ \mathbb{N} $ from the fact multiplying between an even whole number and any element of $ \mathbb{Z}^+ $ will be even . The pair $ <nat:100> <var:V> $ is an even number in $ \mathbb{N} $ since the product between an even number in $ \mathbb{Z}^+ $ and some number will be an even element of $ \mathbb{N} $ . Take note that the term $ <var:Y> <nat:114> $ is guaranteed to be an even natural . This must be true from the knowledge the product between an even natural and a natural is an even natural . Further , the terms $ <var:u> <nat:414> $ as well as $ <nat:64> <var:J> $ are guaranteed to be even . This fact holds since the multiplication of an even whole number and a integer must be an even positive integer . Take note that $ <nat:358> <var:C> $ is obviously an even element of $ \mathbb{Z}^+ $ . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:C> <var:V> <var:J> <var:p> <var:Y> <var:w> <var:u> : nat , Nat . odd ( <nat:64> * <var:J> + <nat:256> * <var:p> + <nat:100> * <var:V> + <nat:358> * <var:C> + <nat:114> * <var:Y> + <nat:118> * <var:w> + <nat:414> * <var:u> + <nat:455> ) = true . Proof . intros . rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . assert ( <genH> : Nat . even ( <nat:118> * <var:w> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:256> * <var:p> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:100> * <var:V> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:114> * <var:Y> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:414> * <var:u> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:64> * <var:J> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:358> * <var:C> ) = true ) . { rewrite Nat . even_mul . auto . } rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 