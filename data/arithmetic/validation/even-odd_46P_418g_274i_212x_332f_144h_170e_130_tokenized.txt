\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:130> + <nat:274> <var:i> + <nat:170> <var:e> + <var:f> <nat:332> + <var:x> <nat:212> + <var:h> <nat:144> + <var:g> <nat:418> + <var:P> <nat:46> $ must be even . \end{theorem} \begin{proof} The whole number $ <nat:144> $ is trivially even . Accordingly , the product $ <nat:144> \cdot <var:h> $ is even too . Additionally , the integers $ <nat:170> $ , $ <nat:212> $ , $ <nat:274> $ , additionally $ <nat:418> $ are known as even . Then , the terms $ <nat:170> \cdot <var:e> $ , $ <nat:212> \cdot <var:x> $ , $ <nat:274> \cdot <var:i> $ , in addition to $ <nat:418> \cdot <var:g> $ is guaranteed to be even as well . What's more , remember that the natural number $ <nat:332> $ is obviously an even whole number . Therefore , $ <var:f> \cdot <nat:332> $ is guaranteed to be even also . Furthermore , the product $ <var:P> \cdot <nat:46> $ is even since the positive integer $ <nat:46> $ is an even integer . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:i> <var:e> <var:f> <var:x> <var:h> <var:g> <var:P> : nat , Nat . even ( <nat:274> * <var:i> + <nat:170> * <var:e> + <nat:332> * <var:f> + <nat:212> * <var:x> + <nat:144> * <var:h> + <nat:418> * <var:g> + <nat:46> * <var:P> + <nat:130> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:144> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:144> * <var:h> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:170> = true ) . { auto . } assert ( <genH> : Nat . even <nat:212> = true ) . { auto . } assert ( <genH> : Nat . even <nat:274> = true ) . { auto . } assert ( <genH> : Nat . even <nat:418> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:170> * <var:e> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:212> * <var:x> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:274> * <var:i> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:418> * <var:g> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:332> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:332> * <var:f> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:46> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:46> * <var:P> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 