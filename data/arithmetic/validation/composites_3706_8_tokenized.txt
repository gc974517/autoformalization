\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} We claim that under the condition that there exist numbers $ <var:y> $ , $ <var:U> $ , $ <var:o> $ , $ <var:t> $ , $ <var:Y> $ , $ <var:a> $ , $ <var:M> $ , $ <var:X> $ we assume that $ <var:l> \in \mathbb{N} $ will be a <def:eight-composite> natural number when $ <var:U> \cdot <var:a> \cdot <var:t> \cdot <var:M> \cdot <var:Y> \cdot <var:o> \cdot <var:y> \cdot <var:X> = <var:l> $ plus larger than <nat:1> . Therefore $ <var:l> = <nat:2217600> $ is a <def:eight-composite> natural number . \end{theorem} \begin{proof} We demonstrate <nat:2217600> is the multiplication between $ <var:a> $ , $ <var:U> $ , $ <var:X> $ , $ <var:t> $ , $ <var:o> $ , $ <var:Y> $ , $ <var:y> $ and $ <var:M> \in \mathbb{N} $ plus $ <var:M> $ , $ <var:U> $ , $ <var:X> $ , $ <var:y> $ , $ <var:o> $ , $ <var:a> $ , $ <var:Y> $ , and $ <var:t> > <nat:1> $ . Notice that $ <nat:2217600> = <nat:11> \times <nat:12> \times <nat:7> \times <nat:5> \times <nat:10> \times <nat:6> \times <nat:4> \times <nat:2> $ . Also observe $ <nat:12> $ , $ <nat:2> $ , $ <nat:7> $ , $ <nat:4> $ , $ <nat:5> $ , $ <nat:6> $ , $ <nat:11> $ , and $ <nat:10> $ are more than <nat:1> . This implies <nat:2217600> is a <def:eight-composite> number . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:eight-composite> ( <var:l> : nat ) := exists <var:y> <var:U> <var:o> <var:t> <var:Y> <var:a> <var:M> <var:X> : nat , ( <var:U> * <var:a> * <var:t> * <var:M> * <var:Y> * <var:o> * <var:y> * <var:X> = <var:l> ) /\ ( <var:y> > <nat:1> ) /\ ( <var:U> > <nat:1> ) /\ ( <var:o> > <nat:1> ) /\ ( <var:t> > <nat:1> ) /\ ( <var:Y> > <nat:1> ) /\ ( <var:a> > <nat:1> ) /\ ( <var:M> > <nat:1> ) /\ ( <var:X> > <nat:1> ) . Theorem <genP:1> : <def:eight-composite> <nat:2217600> . Proof . unfold <def:eight-composite> . exists <nat:12> . exists <nat:10> . exists <nat:4> . exists <nat:7> . exists <nat:5> . exists <nat:11> . exists <nat:6> . exists <nat:2> . assert ( <genH> : <nat:12> > <nat:1> ) . { lia . } assert ( <genH> : <nat:2> > <nat:1> ) . { lia . } assert ( <genH> : <nat:7> > <nat:1> ) . { lia . } assert ( <genH> : <nat:4> > <nat:1> ) . { lia . } assert ( <genH> : <nat:5> > <nat:1> ) . { lia . } assert ( <genH> : <nat:6> > <nat:1> ) . { lia . } assert ( <genH> : <nat:11> > <nat:1> ) . { lia . } assert ( <genH> : <nat:10> > <nat:1> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 