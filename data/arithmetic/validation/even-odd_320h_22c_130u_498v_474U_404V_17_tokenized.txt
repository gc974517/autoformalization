\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:v> * <nat:498> + <var:U> * <nat:474> + <var:c> * <nat:22> + <nat:130> * <var:u> + <var:V> * <nat:404> + <var:h> * <nat:320> + <nat:17> $ is odd assuming every unknowns $ <var:c> $ , $ <var:U> $ , $ <var:u> $ , $ <var:h> $ , $ <var:v> $ , and $ <var:V> $ . \end{theorem} \begin{proof} We prove the sum $ <var:h> \cdot <nat:320> + <nat:22> \cdot <var:c> + <var:u> \cdot <nat:130> + <nat:498> \cdot <var:v> + <var:U> \cdot <nat:474> + <var:V> \cdot <nat:404> + <nat:17> $ will be odd employing the fact that the addition of an even number in $ \mathbb{Z}^+ $ and an odd natural is itself an odd element of $ \mathbb{N} $ . The products $ <nat:320> \times <var:h> $ , $ <var:c> \times <nat:22> $ , $ <nat:130> \times <var:u> $ , $ <var:v> \times <nat:498> $ , $ <var:U> \times <nat:474> $ , $ <nat:404> \times <var:V> $ , are known to be even elements of $ \mathbb{N} $ . This fact is true by reason that taking the product between an even positive integer and an arbitrary number in $ \mathbb{Z}^+ $ is by itself an even element of $ \mathbb{N} $ , and is proven from the knowledge the numbers $ <nat:320> $ , $ <nat:22> $ , $ <nat:130> $ , $ <nat:498> $ , $ <nat:474> $ , $ <nat:404> $ , are guaranteed to be even whole numbers . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:c> <var:U> <var:u> <var:h> <var:v> <var:V> : nat , Nat . odd ( <nat:498> * <var:v> + <nat:474> * <var:U> + <nat:22> * <var:c> + <nat:130> * <var:u> + <nat:404> * <var:V> + <nat:320> * <var:h> + <nat:17> ) = true . Proof . intros . rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . assert ( <genH> : Nat . even <nat:320> = true ) . { auto . } assert ( <genH> : Nat . even <nat:22> = true ) . { auto . } assert ( <genH> : Nat . even <nat:130> = true ) . { auto . } assert ( <genH> : Nat . even <nat:498> = true ) . { auto . } assert ( <genH> : Nat . even <nat:474> = true ) . { auto . } assert ( <genH> : Nat . even <nat:404> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:320> * <var:h> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:22> * <var:c> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:130> * <var:u> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:498> * <var:v> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:474> * <var:U> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:404> * <var:V> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 