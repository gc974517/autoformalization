\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:18> * <var:i> + <var:Y> * <nat:12> + <var:L> * <nat:482> + <var:P> * <nat:266> + <var:r> * <nat:152> + <var:s> * <nat:128> + <nat:131> + <nat:294> * <var:e> + <nat:148> * <var:S> $ is odd taking some variables $ <var:e> $ , $ <var:i> $ , $ <var:P> $ , $ <var:r> $ , $ <var:Y> $ , $ <var:S> $ , $ <var:s> $ , and $ <var:L> $ . \end{theorem} \begin{proof} We show this result is proven . Remember $ <nat:131> $ is guaranteed to be odd . See the whole numbers $ <nat:148> $ and moreover $ <nat:294> $ are known to be even positive integers The numbers $ <nat:128> $ , $ <nat:266> $ , $ <nat:18> $ , $ <nat:12> $ , and moreover $ <nat:152> $ must be even whole numbers The positive integer $ <nat:482> $ is obviously an even number in $ \mathbb{N} $ \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:e> <var:i> <var:P> <var:r> <var:Y> <var:S> <var:s> <var:L> : nat , Nat . odd ( <nat:18> * <var:i> + <nat:12> * <var:Y> + <nat:482> * <var:L> + <nat:266> * <var:P> + <nat:152> * <var:r> + <nat:128> * <var:s> + <nat:294> * <var:e> + <nat:148> * <var:S> + <nat:131> ) = true . Proof . intros . assert ( <genH> : Nat . odd <nat:131> = true ) . { auto . } assert ( <genH> : Nat . even <nat:148> = true ) . { auto . } assert ( <genH> : Nat . even <nat:294> = true ) . { auto . } assert ( <genH> : Nat . even <nat:128> = true ) . { auto . } assert ( <genH> : Nat . even <nat:266> = true ) . { auto . } assert ( <genH> : Nat . even <nat:18> = true ) . { auto . } assert ( <genH> : Nat . even <nat:12> = true ) . { auto . } assert ( <genH> : Nat . even <nat:152> = true ) . { auto . } assert ( <genH> : Nat . even <nat:482> = true ) . { auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . repeat rewrite Nat . even_mul . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 