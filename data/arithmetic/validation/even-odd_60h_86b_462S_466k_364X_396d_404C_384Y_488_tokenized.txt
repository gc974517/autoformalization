\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:h> * <nat:60> + <nat:86> * <var:b> + <var:S> * <nat:462> + <nat:466> * <var:k> + <nat:364> * <var:X> + <nat:488> + <var:d> * <nat:396> + <nat:404> * <var:C> + <var:Y> * <nat:384> $ is even with all terms $ <var:S> $ , $ <var:b> $ , $ <var:d> $ , $ <var:h> $ , $ <var:Y> $ , $ <var:C> $ , $ <var:X> $ , and $ <var:k> $ . \end{theorem} \begin{proof} Additionally , take note the positive integers $ <nat:60> $ , $ <nat:86> $ , $ <nat:462> $ , $ <nat:466> $ , $ <nat:364> $ , $ <nat:396> $ , $ <nat:404> $ , plus $ <nat:384> $ are even elements of $ \mathbb{Z}^+ $ . Therefore , the pairs $ <var:h> <nat:60> $ , $ <var:b> <nat:86> $ , $ <var:S> <nat:462> $ , $ <nat:466> <var:k> $ , $ <var:X> <nat:364> $ , $ <nat:396> <var:d> $ , $ <var:C> <nat:404> $ , and likewise $ <nat:384> <var:Y> $ must be even as well . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:S> <var:b> <var:d> <var:h> <var:Y> <var:C> <var:X> <var:k> : nat , Nat . even ( <nat:60> * <var:h> + <nat:86> * <var:b> + <nat:462> * <var:S> + <nat:466> * <var:k> + <nat:364> * <var:X> + <nat:396> * <var:d> + <nat:404> * <var:C> + <nat:384> * <var:Y> + <nat:488> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:60> = true ) . { auto . } assert ( <genH> : Nat . even <nat:86> = true ) . { auto . } assert ( <genH> : Nat . even <nat:462> = true ) . { auto . } assert ( <genH> : Nat . even <nat:466> = true ) . { auto . } assert ( <genH> : Nat . even <nat:364> = true ) . { auto . } assert ( <genH> : Nat . even <nat:396> = true ) . { auto . } assert ( <genH> : Nat . even <nat:404> = true ) . { auto . } assert ( <genH> : Nat . even <nat:384> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:60> * <var:h> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:86> * <var:b> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:462> * <var:S> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:466> * <var:k> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:364> * <var:X> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:396> * <var:d> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:404> * <var:C> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:384> * <var:Y> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 