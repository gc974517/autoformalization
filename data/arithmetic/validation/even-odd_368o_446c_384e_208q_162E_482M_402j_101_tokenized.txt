\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:368> \times <var:o> + <nat:446> \times <var:c> + <nat:101> + <var:e> \times <nat:384> + <nat:208> \times <var:q> + <nat:162> \times <var:E> + <var:M> \times <nat:482> + <nat:402> \times <var:j> $ will be odd given any positive terms $ <var:o> $ , $ <var:q> $ , $ <var:M> $ , $ <var:E> $ , $ <var:c> $ , $ <var:e> $ , and $ <var:j> $ . \end{theorem} \begin{proof} Remember the adding between an even integer and an odd element of $ \mathbb{N} $ is odd . The pairs $ <nat:384> \times <var:e> $ , $ <var:q> \times <nat:208> $ , $ <var:M> \times <nat:482> $ , $ <var:j> \times <nat:402> $ , and also $ <var:E> \times <nat:162> $ are even . The term $ <var:c> \times <nat:446> $ is even . Building on , the product $ <var:o> \times <nat:368> $ is trivially an even natural number from the knowledge the multiplication between an even element of $ \mathbb{Z}^+ $ with an arbitrary number in $ \mathbb{N} $ is guaranteed to be by its very nature an even number in $ \mathbb{N} $ . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:o> <var:q> <var:M> <var:E> <var:c> <var:e> <var:j> : nat , Nat . odd ( <nat:368> * <var:o> + <nat:446> * <var:c> + <nat:384> * <var:e> + <nat:208> * <var:q> + <nat:162> * <var:E> + <nat:482> * <var:M> + <nat:402> * <var:j> + <nat:101> ) = true . Proof . intros . rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . assert ( <genH> : Nat . even ( <nat:384> * <var:e> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:208> * <var:q> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:482> * <var:M> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:402> * <var:j> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:162> * <var:E> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:446> * <var:c> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:368> * <var:o> ) = true ) . { rewrite Nat . even_mul . auto . } rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 