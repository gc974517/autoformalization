\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Allow $ <var:z> $ , $ <var:U> $ , $ <var:x> $ , $ <var:b> $ , $ <var:k> $ , $ <var:D> $ , $ <var:p> \in \mathbb{N} $ where $ <var:p> $ , $ <var:k> $ , $ <var:x> $ , $ <var:U> $ , $ <var:D> $ , $ <var:b> $ , and $ <var:z> > <nat:1> $ . We define that $ <var:K> \in \mathbb{N} $ will be a <def:seven-composite> number if $ <var:K> = <var:x> \cdot <var:D> \cdot <var:p> \cdot <var:U> \cdot <var:b> \cdot <var:z> \cdot <var:k> $ . Consequently the natural number <nat:680400> is a <def:seven-composite> natural number . \end{theorem} \begin{proof} Recall a <def:seven-composite> is the product of numbers $ <var:k> $ , $ <var:p> $ , $ <var:U> $ , $ <var:b> $ , $ <var:x> $ , $ <var:D> $ , $ <var:z> $ where $ <var:U> $ , $ <var:z> $ , $ <var:k> $ , $ <var:D> $ , $ <var:x> $ , $ <var:p> $ and $ <var:b> > <nat:1> $ . Assume $ <var:D> = <nat:3> $ , $ <var:U> = <nat:5> $ , $ <var:z> = <nat:7> $ , $ <var:b> = <nat:10> $ , $ <var:p> = <nat:12> $ , $ <var:x> = <nat:9> $ , $ <var:k> = <nat:6> $ . Observe $ <var:U> = <nat:5> $ , $ <var:b> = <nat:10> $ , $ <var:k> = <nat:6> $ , $ <var:D> = <nat:3> $ , $ <var:p> = <nat:12> $ , $ <var:x> = <nat:9> $ , and $ <var:z> = <nat:7> $ are greater than <nat:1> . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:seven-composite> ( <var:K> : nat ) := exists <var:z> <var:U> <var:x> <var:b> <var:k> <var:D> <var:p> : nat , ( <var:p> > <nat:1> ) /\ ( <var:k> > <nat:1> ) /\ ( <var:x> > <nat:1> ) /\ ( <var:U> > <nat:1> ) /\ ( <var:D> > <nat:1> ) /\ ( <var:b> > <nat:1> ) /\ ( <var:z> > <nat:1> ) /\ ( <var:K> = <var:x> * <var:D> * <var:p> * <var:U> * <var:b> * <var:z> * <var:k> ) . Theorem <genP:1> : <def:seven-composite> <nat:680400> . Proof . unfold <def:seven-composite> . exists <nat:7> . exists <nat:5> . exists <nat:9> . exists <nat:10> . exists <nat:6> . exists <nat:3> . exists <nat:12> . assert ( <genH> : <nat:5> > <nat:1> ) . { lia . } assert ( <genH> : <nat:10> > <nat:1> ) . { lia . } assert ( <genH> : <nat:6> > <nat:1> ) . { lia . } assert ( <genH> : <nat:3> > <nat:1> ) . { lia . } assert ( <genH> : <nat:12> > <nat:1> ) . { lia . } assert ( <genH> : <nat:9> > <nat:1> ) . { lia . } assert ( <genH> : <nat:7> > <nat:1> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 