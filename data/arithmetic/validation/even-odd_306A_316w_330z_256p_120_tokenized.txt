\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:330> \times <var:z> + <var:w> \times <nat:316> + <nat:256> \times <var:p> + <nat:120> + <var:A> \times <nat:306> $ will be even . \end{theorem} \begin{proof} The products $ <var:z> \cdot <nat:330> $ , $ <var:w> \cdot <nat:316> $ , $ <nat:256> \cdot <var:p> $ , and also $ <var:A> \cdot <nat:306> $ are obviously even . This fact is proven as a consequence that the multiplication of an even element of $ \mathbb{Z}^+ $ with an arbitrary element of $ \mathbb{N} $ is guaranteed to be even . This fact is proven since the whole numbers $ <nat:330> $ , $ <nat:316> $ , $ <nat:256> $ , and also $ <nat:306> $ will be even . Because the summing between an even positive integer and an even number in $ \mathbb{N} $ will be even , then the formula $ <var:A> \times <nat:306> + <var:w> \times <nat:316> + <nat:330> \times <var:z> + <nat:256> \times <var:p> + <nat:120> $ clearly is guaranteed to be even . Observe that $ <nat:120> $ is an even number in $ \mathbb{Z}^+ $ . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:z> <var:w> <var:p> <var:A> : nat , Nat . even ( <nat:330> * <var:z> + <nat:316> * <var:w> + <nat:256> * <var:p> + <nat:306> * <var:A> + <nat:120> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:330> = true ) . { auto . } assert ( <genH> : Nat . even <nat:316> = true ) . { auto . } assert ( <genH> : Nat . even <nat:256> = true ) . { auto . } assert ( <genH> : Nat . even <nat:306> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:330> * <var:z> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:316> * <var:w> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:256> * <var:p> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:306> * <var:A> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } repeat rewrite Nat . even_add . assert ( <genH> : Nat . even <nat:120> = true ) . { auto . } rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 