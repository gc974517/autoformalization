\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Assuming every whole numbers $ <var:F> $ , $ <var:q> $ , and $ <var:e> $ the formula $ <var:e> * <nat:190> + <nat:172> * <var:F> + <nat:302> + <nat:462> * <var:q> $ will be even . \end{theorem} \begin{proof} $ <var:F> <nat:172> + <nat:462> <var:q> + <nat:190> <var:e> $ is known as even . Take note that the integer $ <nat:172> $ is trivially an even natural number . For this reason , the pair $ <var:F> \cdot <nat:172> $ must be even in addition . On top of this , the term $ <var:e> \cdot <nat:190> $ is even . This fact must be true by reason that the number $ <nat:190> $ is known to be an even integer . Furthermore , the product $ <nat:462> \cdot <var:q> $ is known to be even . This claim must be true as a consequence that the product between an even number and an arbitrary element of $ \mathbb{N} $ is an even positive integer . This fact must be true from the fact the number $ <nat:462> $ is even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:F> <var:q> <var:e> : nat , Nat . even ( <nat:190> * <var:e> + <nat:172> * <var:F> + <nat:462> * <var:q> + <nat:302> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:172> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:172> * <var:F> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:190> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:190> * <var:e> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:462> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:462> * <var:q> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:190> * <var:e> + <nat:172> * <var:F> + <nat:462> * <var:q> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . even_add . rewrite <genH> . auto . Qed . 