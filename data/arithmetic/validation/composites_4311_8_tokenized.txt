\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \newtheorem{definition}{Definition} \begin{document} \begin{definition} Take $ <var:d> $ , $ <var:h> $ , $ <var:T> $ , $ <var:M> $ , $ <var:I> $ , $ <var:v> $ , $ <var:r> $ , $ <var:G> \in \mathbb{Z}^+ $ greater than or equivalent to <nat:2> . Take that some whole number $ <var:y> $ will be a <def:eight-composite> number assuming $ <var:h> \cdot <var:v> \cdot <var:M> \cdot <var:T> \cdot <var:G> \cdot <var:d> \cdot <var:r> \cdot <var:I> = <var:y> $ . \end{definition} \begin{theorem} The natural number <nat:1247400> is <def:eight-composite> . \end{theorem} \begin{proof} Allow $ <var:d> = <nat:5> $ , $ <var:G> = <nat:3> $ , $ <var:r> = <nat:7> $ , $ <var:M> = <nat:11> $ , $ <var:T> = <nat:10> $ , $ <var:I> = <nat:9> $ , $ <var:h> = <nat:6> $ , $ <var:v> = <nat:2> $ . We prove $ <nat:1247400> = <var:M> * <var:v> * <var:G> * <var:I> * <var:h> * <var:T> * <var:r> * <var:d> $ . We demonstrate <nat:1247400> is a <def:eight-composite> whole number because In view of $ <var:T> = <nat:10> $ , $ <var:I> = <nat:9> $ , $ <var:h> = <nat:6> $ , $ <var:v> = <nat:2> $ , $ <var:d> = <nat:5> $ , $ <var:G> = <nat:3> $ , $ <var:M> = <nat:11> $ , and $ <var:r> = <nat:7> \geq <nat:2> $ . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:eight-composite> ( <var:y> : nat ) := exists <var:d> <var:h> <var:T> <var:M> <var:I> <var:v> <var:r> <var:G> : nat , ( <var:d> >= <nat:2> ) /\ ( <var:h> >= <nat:2> ) /\ ( <var:T> >= <nat:2> ) /\ ( <var:M> >= <nat:2> ) /\ ( <var:I> >= <nat:2> ) /\ ( <var:v> >= <nat:2> ) /\ ( <var:r> >= <nat:2> ) /\ ( <var:G> >= <nat:2> ) /\ ( <var:h> * <var:v> * <var:M> * <var:T> * <var:G> * <var:d> * <var:r> * <var:I> = <var:y> ) . Theorem <genP:1> : <def:eight-composite> <nat:1247400> . Proof . unfold <def:eight-composite> . exists <nat:5> . exists <nat:6> . exists <nat:10> . exists <nat:11> . exists <nat:9> . exists <nat:2> . exists <nat:7> . exists <nat:3> . assert ( <genH> : <nat:10> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:9> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:6> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:2> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:5> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:3> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:11> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:7> >= <nat:2> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 