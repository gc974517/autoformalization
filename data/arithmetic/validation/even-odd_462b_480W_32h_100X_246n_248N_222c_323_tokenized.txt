\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:b> \times <nat:462> + <nat:480> \times <var:W> + <nat:32> \times <var:h> + <var:X> \times <nat:100> + <var:n> \times <nat:246> + <var:N> \times <nat:248> + <nat:323> + <nat:222> \times <var:c> $ is odd using any positive numbers $ <var:n> $ , $ <var:h> $ , $ <var:W> $ , $ <var:b> $ , $ <var:N> $ , $ <var:c> $ , and $ <var:X> $ . \end{theorem} \begin{proof} The products $ <nat:248> \cdot <var:N> $ , $ <var:c> \cdot <nat:222> $ , $ <var:b> \cdot <nat:462> $ , $ <nat:32> \cdot <var:h> $ , $ <nat:480> \cdot <var:W> $ , and likewise $ <nat:246> \cdot <var:n> $ are known to be even . This must be true from the knowledge the product of an even number in $ \mathbb{N} $ and an arbitrary element of $ \mathbb{N} $ is guaranteed to be an even number . See that the product $ <nat:100> \cdot <var:X> $ is clearly an even natural by reason that taking the product of an even number in $ \mathbb{N} $ and a natural will be clearly an even element of $ \mathbb{N} $ . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:n> <var:h> <var:W> <var:b> <var:N> <var:c> <var:X> : nat , Nat . odd ( <nat:462> * <var:b> + <nat:480> * <var:W> + <nat:32> * <var:h> + <nat:100> * <var:X> + <nat:246> * <var:n> + <nat:248> * <var:N> + <nat:222> * <var:c> + <nat:323> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:248> * <var:N> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:222> * <var:c> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:462> * <var:b> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:32> * <var:h> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:480> * <var:W> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:246> * <var:n> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:100> * <var:X> ) = true ) . { rewrite Nat . even_mul . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 