\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} For any natural numbers $ <var:e> $ , $ <var:d> $ , $ <var:g> $ , and $ <var:Q> $ the expression $ <var:Q> \times <nat:312> + <nat:182> \times <var:g> + <nat:311> + <nat:228> \times <var:d> + <var:e> \times <nat:414> $ is guaranteed to be odd . \end{theorem} \begin{proof} We demonstrate our result is proven . We know that $ <nat:311> $ is clearly an odd number . We check the expression $ <nat:311> + <var:d> \cdot <nat:228> + <nat:182> \cdot <var:g> + <nat:414> \cdot <var:e> + <nat:312> \cdot <var:Q> $ is trivially odd by reason that the expression $ <nat:414> \cdot <var:e> + <nat:312> \cdot <var:Q> + <var:g> \cdot <nat:182> + <nat:228> \cdot <var:d> $ is guaranteed to be even . Notice that the whole numbers $ <nat:182> $ , $ <nat:414> $ , and likewise $ <nat:228> $ are obviously even positive integers We know that the positive integer $ <nat:312> $ is clearly an even element of $ \mathbb{Z}^+ $ By reason that the addition of even elements of $ \mathbb{N} $ and even naturals is even , as well as from the fact the multiplication between even naturals and a element of $ \mathbb{Z}^+ $ is even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:e> <var:d> <var:g> <var:Q> : nat , Nat . odd ( <nat:312> * <var:Q> + <nat:182> * <var:g> + <nat:228> * <var:d> + <nat:414> * <var:e> + <nat:311> ) = true . Proof . intros . assert ( <genH> : Nat . odd <nat:311> = true ) . { auto . } assert ( <genH> : Nat . even <nat:182> = true ) . { auto . } assert ( <genH> : Nat . even <nat:414> = true ) . { auto . } assert ( <genH> : Nat . even <nat:228> = true ) . { auto . } assert ( <genH> : Nat . even <nat:312> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:312> * <var:Q> + <nat:182> * <var:g> + <nat:228> * <var:d> + <nat:414> * <var:e> ) = true ) . { repeat rewrite Nat . even_add . repeat rewrite Nat . even_mul . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . rewrite <genH> . auto . Qed . 