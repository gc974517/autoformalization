\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} If and only if there are whole numbers $ <var:B> $ , $ <var:t> $ , $ <var:Y> $ , $ <var:Z> $ , $ <var:q> $ , $ <var:f> $ , $ <var:M> $ , $ <var:k> $ , $ <var:C> $ we say that $ <var:m> \in \mathbb{N} $ is named a <def:nine-composite> positive integer assuming $ <var:Z> * <var:q> * <var:M> * <var:C> * <var:Y> * <var:t> * <var:f> * <var:B> * <var:k> = <var:m> $ as well as such that $ <var:B> $ , $ <var:t> $ , $ <var:k> $ , $ <var:Y> $ , $ <var:C> $ , $ <var:Z> $ , $ <var:M> $ , $ <var:q> $ and $ <var:f> > <nat:1> $ . Therefore $ <var:m> = <nat:17107200> $ is <def:nine-composite> . \end{theorem} \begin{proof} Recollect that a <def:nine-composite> natural number is the multiplication of natural numbers $ <var:k> $ , $ <var:Z> $ , $ <var:q> $ , $ <var:M> $ , $ <var:t> $ , $ <var:C> $ , $ <var:Y> $ , $ <var:f> $ , $ <var:B> $ greater than <nat:1> . Let $ <var:q> = <nat:12> $ , $ <var:Y> = <nat:8> $ , $ <var:B> = <nat:11> $ , $ <var:t> = <nat:10> $ , $ <var:k> = <nat:5> $ , $ <var:Z> = <nat:3> $ , $ <var:M> = <nat:2> $ , $ <var:C> = <nat:9> $ , and $ <var:f> = <nat:6> $ . Note $ <nat:17107200> = <var:k> \cdot <var:Y> \cdot <var:q> \cdot <var:B> \cdot <var:C> \cdot <var:t> \cdot <var:f> \cdot <var:Z> \cdot <var:M> = <nat:5> \cdot <nat:8> \cdot <nat:12> \cdot <nat:11> \cdot <nat:9> \cdot <nat:10> \cdot <nat:6> \cdot <nat:3> \cdot <nat:2> $ . Moreover notice $ <var:C> = <nat:9> $ , $ <var:q> = <nat:12> $ , $ <var:t> = <nat:10> $ , $ <var:M> = <nat:2> $ , $ <var:Z> = <nat:3> $ , $ <var:k> = <nat:5> $ , $ <var:B> = <nat:11> $ , $ <var:Y> = <nat:8> $ , and $ <var:f> = <nat:6> $ are larger than <nat:1> . This gives <nat:17107200> is a <def:nine-composite> integer . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:nine-composite> ( <var:m> : nat ) := exists <var:B> <var:t> <var:Y> <var:Z> <var:q> <var:f> <var:M> <var:k> <var:C> : nat , ( <var:Z> * <var:q> * <var:M> * <var:C> * <var:Y> * <var:t> * <var:f> * <var:B> * <var:k> = <var:m> ) /\ ( <var:B> > <nat:1> ) /\ ( <var:t> > <nat:1> ) /\ ( <var:k> > <nat:1> ) /\ ( <var:Y> > <nat:1> ) /\ ( <var:C> > <nat:1> ) /\ ( <var:Z> > <nat:1> ) /\ ( <var:M> > <nat:1> ) /\ ( <var:q> > <nat:1> ) /\ ( <var:f> > <nat:1> ) . Theorem <genP:1> : <def:nine-composite> <nat:17107200> . Proof . unfold <def:nine-composite> . exists <nat:11> . exists <nat:10> . exists <nat:8> . exists <nat:3> . exists <nat:12> . exists <nat:6> . exists <nat:2> . exists <nat:5> . exists <nat:9> . assert ( <genH> : <nat:9> > <nat:1> ) . { lia . } assert ( <genH> : <nat:12> > <nat:1> ) . { lia . } assert ( <genH> : <nat:10> > <nat:1> ) . { lia . } assert ( <genH> : <nat:2> > <nat:1> ) . { lia . } assert ( <genH> : <nat:3> > <nat:1> ) . { lia . } assert ( <genH> : <nat:5> > <nat:1> ) . { lia . } assert ( <genH> : <nat:11> > <nat:1> ) . { lia . } assert ( <genH> : <nat:8> > <nat:1> ) . { lia . } assert ( <genH> : <nat:6> > <nat:1> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 