\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Assume $ <var:N> $ , $ <var:K> $ , $ <var:C> $ , $ <var:Z> $ , $ <var:k> $ , $ <var:Q> $ , $ <var:J> $ , $ <var:U> \in \mathbb{N} $ satisfying the condition that $ <var:U> $ , $ <var:Z> $ , $ <var:k> $ , $ <var:N> $ , $ <var:J> $ , $ <var:Q> $ , $ <var:C> $ , $ <var:K> \geq <nat:2> $ and such that the integer <nat:622080> is the product between numbers $ <var:N> $ , $ <var:K> $ , $ <var:C> $ , $ <var:Z> $ , $ <var:k> $ , $ <var:Q> $ , $ <var:J> $ and $ <var:U> \in \mathbb{N} $ . \end{theorem} \begin{proof} Take $ <var:Z> = <nat:3> $ , $ <var:J> = <nat:12> $ , $ <var:N> = <nat:4> $ , $ <var:K> = <nat:6> $ , $ <var:C> = <nat:9> $ , $ <var:k> = <nat:8> $ , $ <var:U> = <nat:5> $ , and $ <var:Q> = <nat:2> $ . We prove $ <var:U> \cdot <var:N> \cdot <var:C> \cdot <var:J> \cdot <var:K> \cdot <var:Q> \cdot <var:Z> \cdot <var:k> = <nat:622080> $ . What's more notice that $ <var:k> = <nat:8> $ , $ <var:K> = <nat:6> $ , $ <var:J> = <nat:12> $ , $ <var:U> = <nat:5> $ , $ <var:N> = <nat:4> $ , $ <var:C> = <nat:9> $ , $ <var:Z> = <nat:3> $ and $ <var:Q> = <nat:2> \geq <nat:2> $ . This hints the theory is valid . \end{proof} \end{document} 
~
Require Import Lia . Theorem <genP:1> : exists <var:N> <var:K> <var:C> <var:Z> <var:k> <var:Q> <var:J> <var:U> : nat , ( <var:U> >= <nat:2> ) /\ ( <var:Z> >= <nat:2> ) /\ ( <var:k> >= <nat:2> ) /\ ( <var:N> >= <nat:2> ) /\ ( <var:J> >= <nat:2> ) /\ ( <var:Q> >= <nat:2> ) /\ ( <var:C> >= <nat:2> ) /\ ( <var:K> >= <nat:2> ) /\ ( <nat:622080> = <var:N> * <var:K> * <var:C> * <var:Z> * <var:k> * <var:Q> * <var:J> * <var:U> ) . Proof . exists <nat:4> . exists <nat:6> . exists <nat:9> . exists <nat:3> . exists <nat:8> . exists <nat:2> . exists <nat:12> . exists <nat:5> . assert ( <genH> : <nat:8> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:6> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:12> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:5> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:4> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:9> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:3> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:2> >= <nat:2> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 