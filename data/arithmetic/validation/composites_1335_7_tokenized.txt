\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \newtheorem{definition}{Definition} \begin{document} \begin{definition} There exist $ <var:O> $ , $ <var:j> $ , $ <var:F> $ , $ <var:T> $ , $ <var:s> $ , $ <var:e> $ , $ <var:J> $ more than or equal to <nat:2> . Assume that $ <var:B> \in \mathbb{Z}^+ $ is defined as a <def:seven-composite> number when $ <var:J> \times <var:F> \times <var:e> \times <var:s> \times <var:T> \times <var:O> \times <var:j> = <var:B> $ . \end{definition} \begin{theorem} $ <var:B> = <nat:80640> $ is a <def:seven-composite> natural number . \end{theorem} \begin{proof} Assume $ <var:J> = <nat:12> $ , $ <var:e> = <nat:8> $ , $ <var:j> = <nat:7> $ , $ <var:F> = <nat:3> $ , $ <var:s> = <nat:5> $ , $ <var:T> = <nat:4> $ , $ <var:O> = <nat:2> $ . Notice $ <nat:8> $ , $ <nat:4> $ , $ <nat:5> $ , $ <nat:7> $ , $ <nat:12> $ , $ <nat:3> $ , $ <nat:2> $ are larger than or equivalent to <nat:2> . In addition note moreover $ <nat:80640> = <var:j> \cdot <var:O> \cdot <var:F> \cdot <var:T> \cdot <var:e> \cdot <var:s> \cdot <var:J> $ . As a consequence , $ <var:O> * <var:T> * <var:j> * <var:e> * <var:J> * <var:s> * <var:F> = <nat:80640> $ is proven . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:seven-composite> ( <var:B> : nat ) := exists <var:O> <var:j> <var:F> <var:T> <var:s> <var:e> <var:J> : nat , ( <var:O> >= <nat:2> ) /\ ( <var:j> >= <nat:2> ) /\ ( <var:F> >= <nat:2> ) /\ ( <var:T> >= <nat:2> ) /\ ( <var:s> >= <nat:2> ) /\ ( <var:e> >= <nat:2> ) /\ ( <var:J> >= <nat:2> ) /\ ( <var:J> * <var:F> * <var:e> * <var:s> * <var:T> * <var:O> * <var:j> = <var:B> ) . Theorem <genP:1> : <def:seven-composite> <nat:80640> . Proof . unfold <def:seven-composite> . exists <nat:2> . exists <nat:7> . exists <nat:3> . exists <nat:4> . exists <nat:5> . exists <nat:8> . exists <nat:12> . assert ( <genH> : <nat:8> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:4> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:5> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:7> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:12> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:3> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:2> >= <nat:2> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 