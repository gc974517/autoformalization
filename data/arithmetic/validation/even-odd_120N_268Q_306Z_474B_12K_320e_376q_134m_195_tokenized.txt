\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:120> \cdot <var:N> + <nat:268> \cdot <var:Q> + <var:Z> \cdot <nat:306> + <nat:474> \cdot <var:B> + <var:K> \cdot <nat:12> + <var:e> \cdot <nat:320> + <nat:376> \cdot <var:q> + <nat:195> + <nat:134> \cdot <var:m> $ will be odd using some positive integers $ <var:m> $ , $ <var:e> $ , $ <var:B> $ , $ <var:K> $ , $ <var:q> $ , $ <var:N> $ , $ <var:Z> $ , and $ <var:Q> $ . \end{theorem} \begin{proof} The coefficients $ <nat:120> $ , $ <nat:268> $ , $ <nat:306> $ , $ <nat:474> $ , $ <nat:12> $ , $ <nat:320> $ , $ <nat:376> $ , and $ <nat:134> $ are clearly even . Then , the products $ <nat:120> <var:N> $ , $ <var:Q> <nat:268> $ , $ <var:Z> <nat:306> $ , $ <nat:474> <var:B> $ , $ <nat:12> <var:K> $ , $ <var:e> <nat:320> $ , $ <nat:376> <var:q> $ , and $ <var:m> <nat:134> $ is even in addition . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:m> <var:e> <var:B> <var:K> <var:q> <var:N> <var:Z> <var:Q> : nat , Nat . odd ( <nat:120> * <var:N> + <nat:268> * <var:Q> + <nat:306> * <var:Z> + <nat:474> * <var:B> + <nat:12> * <var:K> + <nat:320> * <var:e> + <nat:376> * <var:q> + <nat:134> * <var:m> + <nat:195> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:120> = true ) . { auto . } assert ( <genH> : Nat . even <nat:268> = true ) . { auto . } assert ( <genH> : Nat . even <nat:306> = true ) . { auto . } assert ( <genH> : Nat . even <nat:474> = true ) . { auto . } assert ( <genH> : Nat . even <nat:12> = true ) . { auto . } assert ( <genH> : Nat . even <nat:320> = true ) . { auto . } assert ( <genH> : Nat . even <nat:376> = true ) . { auto . } assert ( <genH> : Nat . even <nat:134> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:120> * <var:N> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:268> * <var:Q> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:306> * <var:Z> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:474> * <var:B> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:12> * <var:K> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:320> * <var:e> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:376> * <var:q> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:134> * <var:m> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 