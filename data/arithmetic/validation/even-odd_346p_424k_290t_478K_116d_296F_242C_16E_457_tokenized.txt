\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:K> <nat:478> + <nat:116> <var:d> + <nat:296> <var:F> + <nat:457> + <var:t> <nat:290> + <nat:424> <var:k> + <var:E> <nat:16> + <var:p> <nat:346> + <nat:242> <var:C> $ is guaranteed to be odd for every variables $ <var:C> $ , $ <var:F> $ , $ <var:t> $ , $ <var:E> $ , $ <var:k> $ , $ <var:d> $ , $ <var:K> $ , and $ <var:p> $ . \end{theorem} \begin{proof} We show the sum $ <var:p> \cdot <nat:346> + <nat:424> \cdot <var:k> + <var:t> \cdot <nat:290> + <var:K> \cdot <nat:478> + <nat:116> \cdot <var:d> + <nat:296> \cdot <var:F> + <nat:457> + <nat:242> \cdot <var:C> + <var:E> \cdot <nat:16> $ will be odd . Further , see the coefficients $ <nat:346> $ , $ <nat:424> $ , $ <nat:290> $ , $ <nat:478> $ , $ <nat:116> $ , $ <nat:296> $ , $ <nat:242> $ , additionally $ <nat:16> $ are trivially even . Thus , the pairs $ <var:p> <nat:346> $ , $ <var:k> <nat:424> $ , $ <nat:290> <var:t> $ , $ <var:K> <nat:478> $ , $ <var:d> <nat:116> $ , $ <nat:296> <var:F> $ , $ <nat:242> <var:C> $ , plus $ <var:E> <nat:16> $ must be even at the same time . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:C> <var:F> <var:t> <var:E> <var:k> <var:d> <var:K> <var:p> : nat , Nat . odd ( <nat:478> * <var:K> + <nat:116> * <var:d> + <nat:296> * <var:F> + <nat:290> * <var:t> + <nat:424> * <var:k> + <nat:16> * <var:E> + <nat:346> * <var:p> + <nat:242> * <var:C> + <nat:457> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:346> = true ) . { auto . } assert ( <genH> : Nat . even <nat:424> = true ) . { auto . } assert ( <genH> : Nat . even <nat:290> = true ) . { auto . } assert ( <genH> : Nat . even <nat:478> = true ) . { auto . } assert ( <genH> : Nat . even <nat:116> = true ) . { auto . } assert ( <genH> : Nat . even <nat:296> = true ) . { auto . } assert ( <genH> : Nat . even <nat:242> = true ) . { auto . } assert ( <genH> : Nat . even <nat:16> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:346> * <var:p> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:424> * <var:k> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:290> * <var:t> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:478> * <var:K> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:116> * <var:d> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:296> * <var:F> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:242> * <var:C> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:16> * <var:E> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 