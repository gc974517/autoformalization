\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:h> * <nat:216> + <var:F> * <nat:324> + <nat:48> * <var:f> + <nat:39> + <nat:342> * <var:A> + <var:Z> * <nat:76> + <var:w> * <nat:494> + <nat:384> * <var:j> + <nat:444> * <var:a> $ is odd with any $ <var:j> $ , $ <var:a> $ , $ <var:w> $ , $ <var:A> $ , $ <var:h> $ , $ <var:f> $ , $ <var:Z> $ , and $ <var:F> \in \mathbb{N} $ . \end{theorem} \begin{proof} Recall the products $ <nat:216> \times <var:h> $ , $ <nat:324> \times <var:F> $ , $ <nat:48> \times <var:f> $ , $ <nat:342> \times <var:A> $ , $ <nat:76> \times <var:Z> $ , $ <var:w> \times <nat:494> $ , $ <nat:384> \times <var:j> $ , additionally $ <nat:444> \times <var:a> $ are trivially even positive integers . This fact is true as a consequence that the multiplication between an even number in $ \mathbb{N} $ with a natural number is guaranteed to be even in addition to the natural numbers $ <nat:216> $ , $ <nat:324> $ , $ <nat:48> $ , $ <nat:342> $ , $ <nat:76> $ , $ <nat:494> $ , $ <nat:384> $ , and moreover $ <nat:444> $ will be by themselves even naturals . From the knowledge the totaling between an even natural number with an odd number in $ \mathbb{N} $ is guaranteed to be odd , this lemma holds . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:j> <var:a> <var:w> <var:A> <var:h> <var:f> <var:Z> <var:F> : nat , Nat . odd ( <nat:216> * <var:h> + <nat:324> * <var:F> + <nat:48> * <var:f> + <nat:342> * <var:A> + <nat:76> * <var:Z> + <nat:494> * <var:w> + <nat:384> * <var:j> + <nat:444> * <var:a> + <nat:39> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:216> = true ) . { auto . } assert ( <genH> : Nat . even <nat:324> = true ) . { auto . } assert ( <genH> : Nat . even <nat:48> = true ) . { auto . } assert ( <genH> : Nat . even <nat:342> = true ) . { auto . } assert ( <genH> : Nat . even <nat:76> = true ) . { auto . } assert ( <genH> : Nat . even <nat:494> = true ) . { auto . } assert ( <genH> : Nat . even <nat:384> = true ) . { auto . } assert ( <genH> : Nat . even <nat:444> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:216> * <var:h> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:324> * <var:F> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:48> * <var:f> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:342> * <var:A> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:76> * <var:Z> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:494> * <var:w> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:384> * <var:j> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:444> * <var:a> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 