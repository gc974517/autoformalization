\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:m> * <nat:456> + <nat:279> + <nat:492> * <var:P> + <var:H> * <nat:392> + <nat:66> * <var:p> + <var:t> * <nat:288> + <nat:484> * <var:a> $ will be odd using some $ <var:p> $ , $ <var:a> $ , $ <var:t> $ , $ <var:H> $ , $ <var:m> $ , and $ <var:P> \in \mathbb{N} $ . \end{theorem} \begin{proof} We use the assumption the formula $ <nat:456> \times <var:m> + <nat:392> \times <var:H> + <var:p> \times <nat:66> + <var:P> \times <nat:492> + <nat:288> \times <var:t> + <nat:484> \times <var:a> $ is obviously even . Take note that the whole numbers $ <nat:492> $ , $ <nat:66> $ , and $ <nat:484> $ are trivially even natural numbers . Consequently , the products $ <nat:492> * <var:P> $ , $ <var:p> * <nat:66> $ , in addition to $ <nat:484> * <var:a> $ is even as well . Further , notice the coefficients $ <nat:392> $ as well as $ <nat:456> $ are known as even . Then , the products $ <var:H> * <nat:392> $ additionally $ <nat:456> * <var:m> $ is even too . The number $ <nat:288> $ is an even whole number . So , the term $ <nat:288> * <var:t> $ is guaranteed to be even as well . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:p> <var:a> <var:t> <var:H> <var:m> <var:P> : nat , Nat . odd ( <nat:456> * <var:m> + <nat:492> * <var:P> + <nat:392> * <var:H> + <nat:66> * <var:p> + <nat:288> * <var:t> + <nat:484> * <var:a> + <nat:279> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:492> = true ) . { auto . } assert ( <genH> : Nat . even <nat:66> = true ) . { auto . } assert ( <genH> : Nat . even <nat:484> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:492> * <var:P> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:66> * <var:p> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:484> * <var:a> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:392> = true ) . { auto . } assert ( <genH> : Nat . even <nat:456> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:392> * <var:H> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:456> * <var:m> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:288> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:288> * <var:t> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:456> * <var:m> + <nat:492> * <var:P> + <nat:392> * <var:H> + <nat:66> * <var:p> + <nat:288> * <var:t> + <nat:484> * <var:a> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . auto . Qed . 