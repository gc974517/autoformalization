\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} There are some integers $ <var:P> $ , $ <var:j> $ , $ <var:a> $ , $ <var:C> $ , $ <var:M> $ , $ <var:e> $ , and $ <var:Y> $ satisfying the condition that $ <var:M> $ , $ <var:e> $ , $ <var:j> $ , $ <var:C> $ , $ <var:Y> $ , $ <var:P> $ , $ <var:a> $ more than or equivalent to <nat:2> as well as satisfying the condition that $ <nat:277200> $ is equivalent to $ <var:e> * <var:Y> * <var:j> * <var:M> * <var:C> * <var:P> * <var:a> $ . \end{theorem} \begin{proof} Assume $ <var:Y> = <nat:5> $ , $ <var:a> = <nat:7> $ , $ <var:C> = <nat:9> $ , $ <var:j> = <nat:11> $ , $ <var:M> = <nat:4> $ , $ <var:P> = <nat:10> $ and $ <var:e> = <nat:2> $ . We demonstrate $ <var:P> $ , $ <var:j> $ , $ <var:a> $ , $ <var:Y> $ , $ <var:C> $ , $ <var:e> $ , $ <var:M> \geq <nat:2> $ and $ <var:a> \times <var:e> \times <var:Y> \times <var:j> \times <var:C> \times <var:P> \times <var:M> = <nat:277200> $ . Note that $ <var:Y> = <nat:5> $ , $ <var:a> = <nat:7> $ , $ <var:M> = <nat:4> $ , $ <var:C> = <nat:9> $ , $ <var:P> = <nat:10> $ , $ <var:j> = <nat:11> $ and $ <var:e> = <nat:2> $ are more than or equal to <nat:2> . \end{proof} \end{document} 
~
Require Import Lia . Theorem <genP:1> : exists <var:P> <var:j> <var:a> <var:C> <var:M> <var:e> <var:Y> : nat , ( <var:M> >= <nat:2> ) /\ ( <var:e> >= <nat:2> ) /\ ( <var:j> >= <nat:2> ) /\ ( <var:C> >= <nat:2> ) /\ ( <var:Y> >= <nat:2> ) /\ ( <var:P> >= <nat:2> ) /\ ( <var:a> >= <nat:2> ) /\ ( <nat:277200> = <var:e> * <var:Y> * <var:j> * <var:M> * <var:C> * <var:P> * <var:a> ) . Proof . exists <nat:10> . exists <nat:11> . exists <nat:7> . exists <nat:9> . exists <nat:4> . exists <nat:2> . exists <nat:5> . assert ( <genH> : <nat:5> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:7> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:4> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:9> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:10> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:11> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:2> >= <nat:2> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 