\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} The positive integer <nat:2534400> is the product between numbers $ <var:V> $ , $ <var:E> $ , $ <var:x> $ , $ <var:T> $ , $ <var:t> $ , $ <var:f> $ , $ <var:n> $ , and $ <var:G> \in \mathbb{N} $ where $ <var:V> $ , $ <var:G> $ , $ <var:t> $ , $ <var:f> $ , $ <var:T> $ , $ <var:n> $ , $ <var:E> $ , $ <var:x> $ greater than or equal to <nat:2> . \end{theorem} \begin{proof} Allow $ <var:G> = <nat:10> $ , $ <var:f> = <nat:5> $ , $ <var:T> = <nat:6> $ , $ <var:t> = <nat:11> $ , $ <var:n> = <nat:12> $ , $ <var:x> = <nat:4> $ , $ <var:E> = <nat:8> $ and $ <var:V> = <nat:2> $ . Note $ <nat:2534400> = <var:E> \cdot <var:n> \cdot <var:V> \cdot <var:f> \cdot <var:G> \cdot <var:T> \cdot <var:x> \cdot <var:t> $ . Moreover notice that $ <nat:5> $ , $ <nat:12> $ , $ <nat:2> $ , $ <nat:8> $ , $ <nat:11> $ , $ <nat:10> $ , $ <nat:4> $ , $ <nat:6> $ are greater than or equivalent to <nat:2> . \end{proof} \end{document} 
~
Require Import Lia . Theorem <genP:1> : exists <var:V> <var:E> <var:x> <var:T> <var:t> <var:f> <var:n> <var:G> : nat , ( <nat:2534400> = <var:V> * <var:E> * <var:x> * <var:T> * <var:t> * <var:f> * <var:n> * <var:G> ) /\ ( <var:V> >= <nat:2> ) /\ ( <var:G> >= <nat:2> ) /\ ( <var:t> >= <nat:2> ) /\ ( <var:f> >= <nat:2> ) /\ ( <var:T> >= <nat:2> ) /\ ( <var:n> >= <nat:2> ) /\ ( <var:E> >= <nat:2> ) /\ ( <var:x> >= <nat:2> ) . Proof . exists <nat:2> . exists <nat:8> . exists <nat:4> . exists <nat:6> . exists <nat:11> . exists <nat:5> . exists <nat:12> . exists <nat:10> . assert ( <genH> : <nat:5> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:12> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:2> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:8> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:11> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:10> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:4> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:6> >= <nat:2> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 