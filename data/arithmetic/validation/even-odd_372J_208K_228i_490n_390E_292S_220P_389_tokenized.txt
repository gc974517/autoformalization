\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Assuming variables $ <var:P> $ , $ <var:J> $ , $ <var:i> $ , $ <var:n> $ , $ <var:K> $ , $ <var:E> $ , and $ <var:S> $ the summation $ <var:S> \cdot <nat:292> + <nat:208> \cdot <var:K> + <nat:228> \cdot <var:i> + <nat:220> \cdot <var:P> + <var:n> \cdot <nat:490> + <nat:389> + <nat:372> \cdot <var:J> + <var:E> \cdot <nat:390> $ is guaranteed to be odd . \end{theorem} \begin{proof} We know that $ <nat:389> $ is trivially odd . The summation of even elements of $ \mathbb{N} $ and an odd number in $ \mathbb{Z}^+ $ is odd . We work with the assumption the fact the expression $ <nat:372> * <var:J> + <var:K> * <nat:208> + <nat:228> * <var:i> + <var:n> * <nat:490> + <var:E> * <nat:390> + <var:S> * <nat:292> + <var:P> * <nat:220> $ is known as even . Take note the pairs $ <var:P> * <nat:220> $ , $ <var:S> * <nat:292> $ , $ <nat:228> * <var:i> $ , as well as $ <var:J> * <nat:372> $ are guaranteed to be even numbers in $ \mathbb{N} $ from the fact multiplying of an even whole number and any whole number is guaranteed to be in itself an even element of $ \mathbb{Z}^+ $ . Remember that the pairs $ <nat:390> * <var:E> $ and likewise $ <var:K> * <nat:208> $ will be even . The product $ <var:n> * <nat:490> $ is even . This lemma must be true since the product of an even number and some element of $ \mathbb{Z}^+ $ will be even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:P> <var:J> <var:i> <var:n> <var:K> <var:E> <var:S> : nat , Nat . odd ( <nat:292> * <var:S> + <nat:208> * <var:K> + <nat:228> * <var:i> + <nat:220> * <var:P> + <nat:490> * <var:n> + <nat:372> * <var:J> + <nat:390> * <var:E> + <nat:389> ) = true . Proof . intros . assert ( <genH> : Nat . odd <nat:389> = true ) . { auto . } rewrite Nat . odd_add . assert ( <genH> : Nat . even ( <nat:220> * <var:P> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:292> * <var:S> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:228> * <var:i> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:372> * <var:J> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:390> * <var:E> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:208> * <var:K> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:490> * <var:n> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:292> * <var:S> + <nat:208> * <var:K> + <nat:228> * <var:i> + <nat:220> * <var:P> + <nat:490> * <var:n> + <nat:372> * <var:J> + <nat:390> * <var:E> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite <- Nat . negb_even . rewrite <genH> . rewrite <genH> . auto . Qed . 