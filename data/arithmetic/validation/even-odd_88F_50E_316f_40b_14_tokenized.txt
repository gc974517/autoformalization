\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:F> <nat:88> + <nat:40> <var:b> + <nat:14> + <var:f> <nat:316> + <nat:50> <var:E> $ will be even with some whole numbers $ <var:F> $ , $ <var:E> $ , $ <var:f> $ , and $ <var:b> $ . \end{theorem} \begin{proof} Recall $ <nat:40> * <var:b> + <var:F> * <nat:88> + <nat:50> * <var:E> + <nat:14> + <var:f> * <nat:316> $ is known to be even since the expression $ <nat:88> \cdot <var:F> + <nat:50> \cdot <var:E> + <nat:316> \cdot <var:f> + <var:b> \cdot <nat:40> $ is guaranteed to be even . The terms $ <var:E> * <nat:50> $ , $ <var:F> * <nat:88> $ , additionally $ <var:f> * <nat:316> $ are known to be even integers . This holds since taking the product of an even number with some element of $ \mathbb{N} $ is guaranteed to be an even whole number . Recall that $ <nat:40> * <var:b> $ is known to be even . Our main result must be true by reason that multiplying of even elements of $ \mathbb{Z}^+ $ and a element of $ \mathbb{N} $ is guaranteed to be an even integer . Notice that $ <nat:14> $ is guaranteed to be an even positive integer . It can be checked that our claim is true . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:F> <var:E> <var:f> <var:b> : nat , Nat . even ( <nat:88> * <var:F> + <nat:40> * <var:b> + <nat:316> * <var:f> + <nat:50> * <var:E> + <nat:14> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:50> * <var:E> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:88> * <var:F> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:316> * <var:f> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:40> * <var:b> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:88> * <var:F> + <nat:40> * <var:b> + <nat:316> * <var:f> + <nat:50> * <var:E> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:14> = true ) . { auto . } rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . auto . Qed . 