\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:322> \times <var:b> + <nat:397> + <var:c> \times <nat:108> + <var:N> \times <nat:94> + <var:F> \times <nat:114> + <nat:426> \times <var:y> + <nat:260> \times <var:u> + <nat:182> \times <var:B> + <nat:354> \times <var:d> $ is guaranteed to be odd . \end{theorem} \begin{proof} Our result is proven since $ <nat:426> \cdot <var:y> + <nat:94> \cdot <var:N> + <nat:108> \cdot <var:c> + <var:b> \cdot <nat:322> + <nat:354> \cdot <var:d> + <nat:114> \cdot <var:F> + <var:u> \cdot <nat:260> + <nat:182> \cdot <var:B> $ is even . We know the pairs $ <var:c> \cdot <nat:108> $ , $ <var:u> \cdot <nat:260> $ , $ <nat:354> \cdot <var:d> $ , $ <var:F> \cdot <nat:114> $ , $ <var:B> \cdot <nat:182> $ , $ <nat:426> \cdot <var:y> $ , and moreover $ <var:b> \cdot <nat:322> $ must be even naturals . What's more , see $ <var:N> \cdot <nat:94> $ is even . This fact is proven as a consequence that taking the product between an even positive integer with a whole number must be even . By reason that multiplying between an even number in $ \mathbb{N} $ with an arbitrary whole number will be an even natural number the expression $ <nat:260> \times <var:u> + <nat:322> \times <var:b> + <nat:94> \times <var:N> + <nat:182> \times <var:B> + <var:c> \times <nat:108> + <nat:426> \times <var:y> + <var:F> \times <nat:114> + <var:d> \times <nat:354> $ is guaranteed to be even . Remember that $ <nat:397> $ is known as an odd number . The addition between an even number with an odd positive integer must be odd . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:b> <var:c> <var:N> <var:F> <var:y> <var:u> <var:B> <var:d> : nat , Nat . odd ( <nat:322> * <var:b> + <nat:108> * <var:c> + <nat:94> * <var:N> + <nat:114> * <var:F> + <nat:426> * <var:y> + <nat:260> * <var:u> + <nat:182> * <var:B> + <nat:354> * <var:d> + <nat:397> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:108> * <var:c> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:260> * <var:u> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:354> * <var:d> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:114> * <var:F> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:182> * <var:B> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:426> * <var:y> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:322> * <var:b> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:94> * <var:N> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:322> * <var:b> + <nat:108> * <var:c> + <nat:94> * <var:N> + <nat:114> * <var:F> + <nat:426> * <var:y> + <nat:260> * <var:u> + <nat:182> * <var:B> + <nat:354> * <var:d> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } assert ( <genH> : Nat . odd <nat:397> = true ) . { auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . rewrite <genH> . auto . Qed . 