\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:362> <var:y> + <var:c> <nat:428> + <var:z> <nat:492> + <var:P> <nat:10> + <var:J> <nat:466> + <var:M> <nat:192> + <var:R> <nat:314> + <nat:20> <var:j> + <nat:409> $ is odd . \end{theorem} \begin{proof} It can be shown that the formula $ <nat:314> <var:R> + <var:J> <nat:466> + <var:j> <nat:20> + <nat:192> <var:M> + <nat:492> <var:z> + <var:y> <nat:362> + <var:c> <nat:428> + <nat:409> + <var:P> <nat:10> $ must be odd . Notice the pair $ <nat:314> \cdot <var:R> $ is even . The product $ <nat:466> \cdot <var:J> $ is trivially an even number in $ \mathbb{N} $ . We know that the terms $ <var:j> \cdot <nat:20> $ , $ <var:z> \cdot <nat:492> $ , and also $ <nat:362> \cdot <var:y> $ are obviously even as a consequence that the multiplication between an even natural with a number in $ \mathbb{Z}^+ $ must be even . Notice the term $ <nat:192> \cdot <var:M> $ is trivially even . This claim holds as a consequence that multiplying between an even natural number with a number in $ \mathbb{N} $ must be an even natural number . Further , observe that the pair $ <nat:10> \cdot <var:P> $ is trivially an even positive integer because the multiplication of an even integer and an arbitrary integer must be even . In addition , $ <nat:428> \cdot <var:c> $ is known to be an even number in $ \mathbb{Z}^+ $ . The adding between an even whole number with an odd integer must be an odd integer . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:y> <var:c> <var:z> <var:P> <var:J> <var:M> <var:R> <var:j> : nat , Nat . odd ( <nat:362> * <var:y> + <nat:428> * <var:c> + <nat:492> * <var:z> + <nat:10> * <var:P> + <nat:466> * <var:J> + <nat:192> * <var:M> + <nat:314> * <var:R> + <nat:20> * <var:j> + <nat:409> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:314> * <var:R> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:466> * <var:J> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:20> * <var:j> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:492> * <var:z> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:362> * <var:y> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:192> * <var:M> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:10> * <var:P> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:428> * <var:c> ) = true ) . { rewrite Nat . even_mul . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 