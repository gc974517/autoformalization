\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:s> <nat:22> + <var:W> <nat:420> + <nat:440> <var:P> + <nat:433> + <var:J> <nat:138> + <nat:60> <var:C> + <nat:50> <var:o> + <var:B> <nat:180> + <nat:178> <var:i> $ is guaranteed to be odd . \end{theorem} \begin{proof} The summation between even numbers in $ \mathbb{Z}^+ $ successively with an odd element of $ \mathbb{Z}^+ $ is guaranteed to be odd . In addition to this , the positive integers $ <nat:22> $ , $ <nat:420> $ , $ <nat:440> $ , $ <nat:138> $ , $ <nat:60> $ , $ <nat:50> $ , $ <nat:180> $ , and also $ <nat:178> $ are guaranteed to be even numbers in $ \mathbb{N} $ . As a consequence , the pairs $ <var:s> \cdot <nat:22> $ , $ <var:W> \cdot <nat:420> $ , $ <var:P> \cdot <nat:440> $ , $ <var:J> \cdot <nat:138> $ , $ <var:C> \cdot <nat:60> $ , $ <nat:50> \cdot <var:o> $ , $ <var:B> \cdot <nat:180> $ , in addition to $ <nat:178> \cdot <var:i> $ is even also . We verify the expression $ <nat:138> \times <var:J> + <var:W> \times <nat:420> + <nat:433> + <var:P> \times <nat:440> + <nat:22> \times <var:s> + <nat:60> \times <var:C> + <nat:50> \times <var:o> + <nat:178> \times <var:i> + <nat:180> \times <var:B> $ is odd . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:s> <var:W> <var:P> <var:J> <var:C> <var:o> <var:B> <var:i> : nat , Nat . odd ( <nat:22> * <var:s> + <nat:420> * <var:W> + <nat:440> * <var:P> + <nat:138> * <var:J> + <nat:60> * <var:C> + <nat:50> * <var:o> + <nat:180> * <var:B> + <nat:178> * <var:i> + <nat:433> ) = true . Proof . intros . rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . assert ( <genH> : Nat . even <nat:22> = true ) . { auto . } assert ( <genH> : Nat . even <nat:420> = true ) . { auto . } assert ( <genH> : Nat . even <nat:440> = true ) . { auto . } assert ( <genH> : Nat . even <nat:138> = true ) . { auto . } assert ( <genH> : Nat . even <nat:60> = true ) . { auto . } assert ( <genH> : Nat . even <nat:50> = true ) . { auto . } assert ( <genH> : Nat . even <nat:180> = true ) . { auto . } assert ( <genH> : Nat . even <nat:178> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:22> * <var:s> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:420> * <var:W> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:440> * <var:P> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:138> * <var:J> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:60> * <var:C> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:50> * <var:o> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:180> * <var:B> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:178> * <var:i> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 