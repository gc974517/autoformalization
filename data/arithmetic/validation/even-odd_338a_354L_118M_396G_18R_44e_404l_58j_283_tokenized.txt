\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:338> <var:a> + <var:L> <nat:354> + <var:M> <nat:118> + <var:G> <nat:396> + <var:R> <nat:18> + <nat:44> <var:e> + <var:l> <nat:404> + <var:j> <nat:58> + <nat:283> $ is odd for every integers $ <var:e> $ , $ <var:M> $ , $ <var:a> $ , $ <var:j> $ , $ <var:l> $ , $ <var:R> $ , $ <var:L> $ , and $ <var:G> $ . \end{theorem} \begin{proof} Notice $ <nat:283> $ is known to be an odd natural number . We show the theorem holds . The pairs $ <nat:396> <var:G> $ and likewise $ <nat:338> <var:a> $ are trivially even elements of $ \mathbb{Z}^+ $ since multiplying between an even element of $ \mathbb{N} $ with any natural number is even . What's more , the terms $ <var:M> <nat:118> $ , $ <var:R> <nat:18> $ , $ <nat:58> <var:j> $ , $ <var:e> <nat:44> $ , additionally $ <var:L> <nat:354> $ are even . Furthermore , the product $ <nat:404> <var:l> $ is an even whole number since taking the product between an even number in $ \mathbb{N} $ and any element of $ \mathbb{Z}^+ $ will be even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:e> <var:M> <var:a> <var:j> <var:l> <var:R> <var:L> <var:G> : nat , Nat . odd ( <nat:338> * <var:a> + <nat:354> * <var:L> + <nat:118> * <var:M> + <nat:396> * <var:G> + <nat:18> * <var:R> + <nat:44> * <var:e> + <nat:404> * <var:l> + <nat:58> * <var:j> + <nat:283> ) = true . Proof . intros . assert ( <genH> : Nat . odd <nat:283> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:396> * <var:G> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:338> * <var:a> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:118> * <var:M> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:18> * <var:R> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:58> * <var:j> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:44> * <var:e> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:354> * <var:L> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:404> * <var:l> ) = true ) . { rewrite Nat . even_mul . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 