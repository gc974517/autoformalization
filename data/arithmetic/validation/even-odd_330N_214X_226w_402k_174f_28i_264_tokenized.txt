\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:X> \cdot <nat:214> + <var:N> \cdot <nat:330> + <nat:226> \cdot <var:w> + <nat:174> \cdot <var:f> + <var:i> \cdot <nat:28> + <nat:402> \cdot <var:k> + <nat:264> $ must be even . \end{theorem} \begin{proof} This lemma is true by reason that $ <var:N> * <nat:330> + <nat:402> * <var:k> + <nat:226> * <var:w> + <nat:214> * <var:X> + <nat:174> * <var:f> + <var:i> * <nat:28> $ is clearly even . See the addition of even numbers concurrently will be even . Take note the pairs $ <nat:402> <var:k> $ , $ <var:f> <nat:174> $ , $ <nat:214> <var:X> $ , $ <nat:28> <var:i> $ , and moreover $ <nat:226> <var:w> $ are even numbers . This fact is true from the knowledge the positive integers $ <nat:402> $ , $ <nat:174> $ , $ <nat:214> $ , $ <nat:28> $ , and also $ <nat:226> $ are clearly in themselves even positive integers . Furthermore , see the positive integer $ <nat:330> $ is trivially even . In consequence , the product $ <nat:330> <var:N> $ must be even also . We verify this claim is true . Remember $ <nat:264> $ is guaranteed to be even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:X> <var:N> <var:w> <var:f> <var:i> <var:k> : nat , Nat . even ( <nat:214> * <var:X> + <nat:330> * <var:N> + <nat:226> * <var:w> + <nat:174> * <var:f> + <nat:28> * <var:i> + <nat:402> * <var:k> + <nat:264> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:402> = true ) . { auto . } assert ( <genH> : Nat . even <nat:174> = true ) . { auto . } assert ( <genH> : Nat . even <nat:214> = true ) . { auto . } assert ( <genH> : Nat . even <nat:28> = true ) . { auto . } assert ( <genH> : Nat . even <nat:226> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:402> * <var:k> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:174> * <var:f> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:214> * <var:X> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:28> * <var:i> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:226> * <var:w> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:330> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:330> * <var:N> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:214> * <var:X> + <nat:330> * <var:N> + <nat:226> * <var:w> + <nat:174> * <var:f> + <nat:28> * <var:i> + <nat:402> * <var:k> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:264> = true ) . { auto . } rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . auto . Qed . 