\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:458> \times <var:f> + <nat:152> \times <var:z> + <var:e> \times <nat:428> + <var:Q> \times <nat:114> + <nat:232> \times <var:X> + <nat:418> + <nat:180> \times <var:u> + <nat:166> \times <var:h> + <nat:272> \times <var:L> $ is guaranteed to be even . \end{theorem} \begin{proof} Remember that $ <nat:418> $ is an even natural number . We show our result holds . On top of this , the products $ <nat:458> \cdot <var:f> $ , $ <nat:152> \cdot <var:z> $ , $ <var:e> \cdot <nat:428> $ , $ <nat:114> \cdot <var:Q> $ , $ <nat:232> \cdot <var:X> $ , $ <var:u> \cdot <nat:180> $ , $ <var:h> \cdot <nat:166> $ , and likewise $ <var:L> \cdot <nat:272> $ must be even as a consequence that taking the product between an even positive integer with a number in $ \mathbb{N} $ will be an even positive integer . This is proven as a consequence that the coefficients $ <nat:458> $ , $ <nat:152> $ , $ <nat:428> $ , $ <nat:114> $ , $ <nat:232> $ , $ <nat:180> $ , $ <nat:166> $ , plus $ <nat:272> $ are obviously even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:f> <var:z> <var:e> <var:Q> <var:X> <var:u> <var:h> <var:L> : nat , Nat . even ( <nat:458> * <var:f> + <nat:152> * <var:z> + <nat:428> * <var:e> + <nat:114> * <var:Q> + <nat:232> * <var:X> + <nat:180> * <var:u> + <nat:166> * <var:h> + <nat:272> * <var:L> + <nat:418> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:418> = true ) . { auto . } assert ( <genH> : Nat . even <nat:458> = true ) . { auto . } assert ( <genH> : Nat . even <nat:152> = true ) . { auto . } assert ( <genH> : Nat . even <nat:428> = true ) . { auto . } assert ( <genH> : Nat . even <nat:114> = true ) . { auto . } assert ( <genH> : Nat . even <nat:232> = true ) . { auto . } assert ( <genH> : Nat . even <nat:180> = true ) . { auto . } assert ( <genH> : Nat . even <nat:166> = true ) . { auto . } assert ( <genH> : Nat . even <nat:272> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:458> * <var:f> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:152> * <var:z> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:428> * <var:e> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:114> * <var:Q> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:232> * <var:X> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:180> * <var:u> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:166> * <var:h> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:272> * <var:L> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 