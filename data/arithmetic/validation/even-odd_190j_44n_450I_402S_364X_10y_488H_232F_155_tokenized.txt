\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Taking some terms $ <var:F> $ , $ <var:S> $ , $ <var:H> $ , $ <var:j> $ , $ <var:I> $ , $ <var:n> $ , $ <var:y> $ , and $ <var:X> $ $ <var:j> * <nat:190> + <nat:44> * <var:n> + <var:I> * <nat:450> + <var:S> * <nat:402> + <var:X> * <nat:364> + <nat:155> + <nat:10> * <var:y> + <var:H> * <nat:488> + <nat:232> * <var:F> $ is odd . \end{theorem} \begin{proof} The totaling between even elements of $ \mathbb{Z}^+ $ concurrently and an odd element of $ \mathbb{N} $ must be an odd natural number . Observe that the product $ <nat:488> \cdot <var:H> $ is guaranteed to be an even positive integer . Notice that the terms $ <nat:364> \cdot <var:X> $ , $ <nat:402> \cdot <var:S> $ , $ <nat:44> \cdot <var:n> $ , $ <nat:10> \cdot <var:y> $ , as well as $ <var:I> \cdot <nat:450> $ are trivially even . Remember the term $ <nat:190> \cdot <var:j> $ is an even number . See the product $ <nat:232> \cdot <var:F> $ is guaranteed to be even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:F> <var:S> <var:H> <var:j> <var:I> <var:n> <var:y> <var:X> : nat , Nat . odd ( <nat:190> * <var:j> + <nat:44> * <var:n> + <nat:450> * <var:I> + <nat:402> * <var:S> + <nat:364> * <var:X> + <nat:10> * <var:y> + <nat:488> * <var:H> + <nat:232> * <var:F> + <nat:155> ) = true . Proof . intros . rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . assert ( <genH> : Nat . even ( <nat:488> * <var:H> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:364> * <var:X> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:402> * <var:S> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:44> * <var:n> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:10> * <var:y> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:450> * <var:I> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:190> * <var:j> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:232> * <var:F> ) = true ) . { rewrite Nat . even_mul . auto . } rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 