\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:148> + <nat:14> \cdot <var:f> + <var:Q> \cdot <nat:304> + <nat:180> \cdot <var:s> + <var:F> \cdot <nat:172> + <nat:276> \cdot <var:M> + <nat:396> \cdot <var:d> + <var:g> \cdot <nat:354> + <nat:40> \cdot <var:C> $ will be even assuming every variables $ <var:C> $ , $ <var:d> $ , $ <var:g> $ , $ <var:Q> $ , $ <var:f> $ , $ <var:M> $ , $ <var:F> $ , and $ <var:s> $ . \end{theorem} \begin{proof} The terms $ <var:f> <nat:14> $ , $ <nat:304> <var:Q> $ , $ <var:s> <nat:180> $ , $ <nat:172> <var:F> $ , $ <nat:276> <var:M> $ , $ <nat:396> <var:d> $ , $ <nat:354> <var:g> $ , and moreover $ <nat:40> <var:C> $ will be even . This is true because taking the product between an even integer and an arbitrary integer will be even . This claim holds from the knowledge the natural numbers $ <nat:14> $ , $ <nat:304> $ , $ <nat:180> $ , $ <nat:172> $ , $ <nat:276> $ , $ <nat:396> $ , $ <nat:354> $ , and moreover $ <nat:40> $ will be even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:C> <var:d> <var:g> <var:Q> <var:f> <var:M> <var:F> <var:s> : nat , Nat . even ( <nat:14> * <var:f> + <nat:304> * <var:Q> + <nat:180> * <var:s> + <nat:172> * <var:F> + <nat:276> * <var:M> + <nat:396> * <var:d> + <nat:354> * <var:g> + <nat:40> * <var:C> + <nat:148> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:14> = true ) . { auto . } assert ( <genH> : Nat . even <nat:304> = true ) . { auto . } assert ( <genH> : Nat . even <nat:180> = true ) . { auto . } assert ( <genH> : Nat . even <nat:172> = true ) . { auto . } assert ( <genH> : Nat . even <nat:276> = true ) . { auto . } assert ( <genH> : Nat . even <nat:396> = true ) . { auto . } assert ( <genH> : Nat . even <nat:354> = true ) . { auto . } assert ( <genH> : Nat . even <nat:40> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:14> * <var:f> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:304> * <var:Q> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:180> * <var:s> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:172> * <var:F> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:276> * <var:M> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:396> * <var:d> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:354> * <var:g> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:40> * <var:C> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 