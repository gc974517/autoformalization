\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Assuming all variables $ <var:s> $ , $ <var:X> $ , $ <var:A> $ , $ <var:k> $ , $ <var:r> $ , $ <var:N> $ , $ <var:c> $ , and $ <var:H> $ $ <var:A> \cdot <nat:190> + <var:H> \cdot <nat:468> + <var:c> \cdot <nat:306> + <nat:206> + <var:N> \cdot <nat:412> + <var:X> \cdot <nat:420> + <var:r> \cdot <nat:88> + <nat:394> \cdot <var:k> + <nat:484> \cdot <var:s> $ must be even . \end{theorem} \begin{proof} Notice that $ <nat:206> $ is known to be an even natural number . The summation between even naturals successively is even . Our main result is true from the fact $ <var:A> <nat:190> + <var:s> <nat:484> + <var:k> <nat:394> + <var:X> <nat:420> + <nat:306> <var:c> + <var:r> <nat:88> + <var:N> <nat:412> + <nat:468> <var:H> $ is guaranteed to be even . The leading terms $ <nat:420> $ as well as $ <nat:88> $ are guaranteed to be even elements of $ \mathbb{N} $ . Hence , the terms $ <var:X> \times <nat:420> $ as well as $ <var:r> \times <nat:88> $ is even too . Remember the terms $ <nat:484> \times <var:s> $ , $ <nat:306> \times <var:c> $ , in addition to $ <var:A> \times <nat:190> $ are even . This claim must be true from the fact multiplying between an even integer with an arbitrary element of $ \mathbb{N} $ must be an even natural number additionally the leading terms $ <nat:484> $ , $ <nat:306> $ , and $ <nat:190> $ will be even . See the number $ <nat:412> $ is known as even . Thus , the term $ <var:N> \times <nat:412> $ must be even at the same time . On top of this , recall the integer $ <nat:394> $ is trivially an even number . In consequence , the term $ <nat:394> \times <var:k> $ must be even additionally . In addition to this , see that the pair $ <var:H> \times <nat:468> $ is known to be an even element of $ \mathbb{N} $ from the knowledge the coefficient $ <nat:468> $ is obviously an even element of $ \mathbb{Z}^+ $ . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:s> <var:X> <var:A> <var:k> <var:r> <var:N> <var:c> <var:H> : nat , Nat . even ( <nat:190> * <var:A> + <nat:468> * <var:H> + <nat:306> * <var:c> + <nat:412> * <var:N> + <nat:420> * <var:X> + <nat:88> * <var:r> + <nat:394> * <var:k> + <nat:484> * <var:s> + <nat:206> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:206> = true ) . { auto . } rewrite Nat . even_add . assert ( <genH> : Nat . even <nat:420> = true ) . { auto . } assert ( <genH> : Nat . even <nat:88> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:420> * <var:X> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:88> * <var:r> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:484> = true ) . { auto . } assert ( <genH> : Nat . even <nat:306> = true ) . { auto . } assert ( <genH> : Nat . even <nat:190> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:484> * <var:s> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:306> * <var:c> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:190> * <var:A> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:412> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:412> * <var:N> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:394> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:394> * <var:k> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:468> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:468> * <var:H> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:190> * <var:A> + <nat:468> * <var:H> + <nat:306> * <var:c> + <nat:412> * <var:N> + <nat:420> * <var:X> + <nat:88> * <var:r> + <nat:394> * <var:k> + <nat:484> * <var:s> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite <genH> . rewrite <genH> . auto . Qed . 