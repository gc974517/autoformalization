\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:P> <nat:70> + <nat:170> <var:I> + <var:e> <nat:384> + <var:d> <nat:256> + <nat:192> + <nat:292> <var:z> + <nat:150> <var:p> + <var:B> <nat:254> $ is even . \end{theorem} \begin{proof} The products $ <var:e> \times <nat:384> $ and likewise $ <nat:254> \times <var:B> $ are known to be even integers . The product $ <nat:170> \times <var:I> $ is obviously even . Building on , we know the term $ <nat:150> \times <var:p> $ is obviously an even number in $ \mathbb{Z}^+ $ . This fact is true as a consequence that the multiplication of an even whole number and any element of $ \mathbb{N} $ will be an even whole number . See that the terms $ <nat:292> \times <var:z> $ and likewise $ <nat:256> \times <var:d> $ are clearly even . The term $ <var:P> \times <nat:70> $ is guaranteed to be an even element of $ \mathbb{N} $ since multiplying between an even number in $ \mathbb{Z}^+ $ with some natural number is guaranteed to be even . Since the summation between even integers collectively will be an even positive integer , our theorem must be true . Take note $ <nat:192> $ is trivially an even element of $ \mathbb{N} $ . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:P> <var:I> <var:e> <var:d> <var:z> <var:p> <var:B> : nat , Nat . even ( <nat:70> * <var:P> + <nat:170> * <var:I> + <nat:384> * <var:e> + <nat:256> * <var:d> + <nat:292> * <var:z> + <nat:150> * <var:p> + <nat:254> * <var:B> + <nat:192> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:384> * <var:e> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:254> * <var:B> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:170> * <var:I> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:150> * <var:p> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:292> * <var:z> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:256> * <var:d> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:70> * <var:P> ) = true ) . { rewrite Nat . even_mul . auto . } repeat rewrite Nat . even_add . assert ( <genH> : Nat . even <nat:192> = true ) . { auto . } rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 