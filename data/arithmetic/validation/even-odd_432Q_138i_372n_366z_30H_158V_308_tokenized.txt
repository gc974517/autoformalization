\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:30> \cdot <var:H> + <nat:138> \cdot <var:i> + <nat:372> \cdot <var:n> + <nat:432> \cdot <var:Q> + <nat:366> \cdot <var:z> + <nat:308> + <nat:158> \cdot <var:V> $ must be even taking terms $ <var:Q> $ , $ <var:z> $ , $ <var:i> $ , $ <var:H> $ , $ <var:V> $ , and $ <var:n> $ . \end{theorem} \begin{proof} It can be justified that our lemma is true . Recall that $ <nat:308> $ is guaranteed to be even . We verify that $ <var:Q> * <nat:432> + <var:i> * <nat:138> + <var:n> * <nat:372> + <nat:366> * <var:z> + <nat:30> * <var:H> + <var:V> * <nat:158> $ is obviously even . The products $ <nat:30> \cdot <var:H> $ , $ <nat:372> \cdot <var:n> $ , $ <var:i> \cdot <nat:138> $ , $ <nat:366> \cdot <var:z> $ , and also $ <nat:158> \cdot <var:V> $ are known as even because multiplying between an even positive integer and an arbitrary number in $ \mathbb{N} $ is even . $ <var:Q> \cdot <nat:432> $ is trivially an even natural because the product between an even positive integer with any number in $ \mathbb{Z}^+ $ must be even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:Q> <var:z> <var:i> <var:H> <var:V> <var:n> : nat , Nat . even ( <nat:30> * <var:H> + <nat:138> * <var:i> + <nat:372> * <var:n> + <nat:432> * <var:Q> + <nat:366> * <var:z> + <nat:158> * <var:V> + <nat:308> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:308> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:30> * <var:H> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:372> * <var:n> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:138> * <var:i> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:366> * <var:z> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:158> * <var:V> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:432> * <var:Q> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:30> * <var:H> + <nat:138> * <var:i> + <nat:372> * <var:n> + <nat:432> * <var:Q> + <nat:366> * <var:z> + <nat:158> * <var:V> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . auto . Qed . 