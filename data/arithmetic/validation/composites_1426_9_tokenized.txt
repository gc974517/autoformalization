\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:K> * <var:J> * <var:t> * <var:X> * <var:r> * <var:C> * <var:x> * <var:R> * <var:L> $ is $ <nat:13305600> $ for $ <var:X> $ , $ <var:x> $ , $ <var:r> $ , $ <var:J> $ , $ <var:t> $ , $ <var:C> $ , $ <var:L> $ , $ <var:K> $ and $ <var:R> \in \mathbb{N} $ where $ <var:J> $ , $ <var:R> $ , $ <var:X> $ , $ <var:r> $ , $ <var:L> $ , $ <var:x> $ , $ <var:t> $ , $ <var:K> $ , $ <var:C> > <nat:1> $ . \end{theorem} \begin{proof} Let $ <var:R> = <nat:12> $ , $ <var:L> = <nat:11> $ , $ <var:x> = <nat:7> $ , $ <var:K> = <nat:5> $ , $ <var:C> = <nat:3> $ , $ <var:r> = <nat:10> $ , $ <var:t> = <nat:8> $ , $ <var:X> = <nat:6> $ , and $ <var:J> = <nat:2> $ . Similarly note $ <var:L> = <nat:11> $ , $ <var:J> = <nat:2> $ , $ <var:R> = <nat:12> $ , $ <var:C> = <nat:3> $ , $ <var:K> = <nat:5> $ , $ <var:r> = <nat:10> $ , $ <var:t> = <nat:8> $ , $ <var:X> = <nat:6> $ and $ <var:x> = <nat:7> $ are greater than <nat:1> . Because of this , $ <var:t> * <var:C> * <var:J> * <var:x> * <var:K> * <var:X> * <var:R> * <var:L> * <var:r> = <nat:13305600> $ is verified . \end{proof} \end{document} 
~
Require Import Lia . Theorem <genP:1> : exists <var:X> <var:x> <var:r> <var:J> <var:t> <var:C> <var:L> <var:K> <var:R> : nat , ( <var:K> * <var:J> * <var:t> * <var:X> * <var:r> * <var:C> * <var:x> * <var:R> * <var:L> = <nat:13305600> ) /\ ( <var:J> > <nat:1> ) /\ ( <var:R> > <nat:1> ) /\ ( <var:X> > <nat:1> ) /\ ( <var:r> > <nat:1> ) /\ ( <var:L> > <nat:1> ) /\ ( <var:x> > <nat:1> ) /\ ( <var:t> > <nat:1> ) /\ ( <var:K> > <nat:1> ) /\ ( <var:C> > <nat:1> ) . Proof . exists <nat:6> . exists <nat:7> . exists <nat:10> . exists <nat:2> . exists <nat:8> . exists <nat:3> . exists <nat:11> . exists <nat:5> . exists <nat:12> . assert ( <genH> : <nat:11> > <nat:1> ) . { lia . } assert ( <genH> : <nat:2> > <nat:1> ) . { lia . } assert ( <genH> : <nat:12> > <nat:1> ) . { lia . } assert ( <genH> : <nat:3> > <nat:1> ) . { lia . } assert ( <genH> : <nat:5> > <nat:1> ) . { lia . } assert ( <genH> : <nat:10> > <nat:1> ) . { lia . } assert ( <genH> : <nat:8> > <nat:1> ) . { lia . } assert ( <genH> : <nat:6> > <nat:1> ) . { lia . } assert ( <genH> : <nat:7> > <nat:1> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 