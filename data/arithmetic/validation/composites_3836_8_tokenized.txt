\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} We say that granted there exist $ <var:O> $ , $ <var:G> $ , $ <var:P> $ , $ <var:w> $ , $ <var:S> $ , $ <var:n> $ , $ <var:j> $ , $ <var:Q> \in \mathbb{Z}^+ $ larger than <nat:1> . Define that $ <var:J> \in \mathbb{Z}^+ $ will be named a <def:eight-composite> natural number when $ <var:S> \cdot <var:w> \cdot <var:G> \cdot <var:O> \cdot <var:P> \cdot <var:n> \cdot <var:Q> \cdot <var:j> = <var:J> $ . Consequently $ <var:J> = <nat:5322240> $ is a <def:eight-composite> positive integer . \end{theorem} \begin{proof} Remember a <def:eight-composite> number is the multiplication of natural numbers $ <var:S> $ , $ <var:n> $ , $ <var:P> $ , $ <var:G> $ , $ <var:O> $ , $ <var:Q> $ , $ <var:w> $ , $ <var:j> $ greater than <nat:1> . Allow $ <var:n> = <nat:10> $ , $ <var:Q> = <nat:2> $ , $ <var:G> = <nat:12> $ , $ <var:S> = <nat:7> $ , $ <var:w> = <nat:8> $ , $ <var:O> = <nat:11> $ , $ <var:j> = <nat:4> $ , and $ <var:P> = <nat:9> $ . We demonstrate <nat:5322240> is a <def:eight-composite> natural number . Note $ <nat:4> $ , $ <nat:7> $ , $ <nat:11> $ , $ <nat:2> $ , $ <nat:10> $ , $ <nat:8> $ , $ <nat:9> $ , and $ <nat:12> > <nat:1> $ . This yields the result is true . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:eight-composite> ( <var:J> : nat ) := exists <var:O> <var:G> <var:P> <var:w> <var:S> <var:n> <var:j> <var:Q> : nat , ( <var:O> > <nat:1> ) /\ ( <var:G> > <nat:1> ) /\ ( <var:P> > <nat:1> ) /\ ( <var:w> > <nat:1> ) /\ ( <var:S> > <nat:1> ) /\ ( <var:n> > <nat:1> ) /\ ( <var:j> > <nat:1> ) /\ ( <var:Q> > <nat:1> ) /\ ( <var:S> * <var:w> * <var:G> * <var:O> * <var:P> * <var:n> * <var:Q> * <var:j> = <var:J> ) . Theorem <genP:1> : <def:eight-composite> <nat:5322240> . Proof . unfold <def:eight-composite> . exists <nat:11> . exists <nat:12> . exists <nat:9> . exists <nat:8> . exists <nat:7> . exists <nat:10> . exists <nat:4> . exists <nat:2> . assert ( <genH> : <nat:4> > <nat:1> ) . { lia . } assert ( <genH> : <nat:7> > <nat:1> ) . { lia . } assert ( <genH> : <nat:11> > <nat:1> ) . { lia . } assert ( <genH> : <nat:2> > <nat:1> ) . { lia . } assert ( <genH> : <nat:10> > <nat:1> ) . { lia . } assert ( <genH> : <nat:8> > <nat:1> ) . { lia . } assert ( <genH> : <nat:9> > <nat:1> ) . { lia . } assert ( <genH> : <nat:12> > <nat:1> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 