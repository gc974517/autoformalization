\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:240> <var:i> + <nat:2> <var:Q> + <nat:186> <var:f> + <nat:214> <var:D> + <nat:95> $ will be odd assuming any natural numbers $ <var:D> $ , $ <var:Q> $ , $ <var:i> $ , and $ <var:f> $ . \end{theorem} \begin{proof} The sum $ <nat:240> * <var:i> + <var:D> * <nat:214> + <var:f> * <nat:186> + <nat:95> + <nat:2> * <var:Q> $ is trivially odd since $ <nat:214> * <var:D> + <nat:186> * <var:f> + <nat:240> * <var:i> + <var:Q> * <nat:2> $ is known to be even . See the pairs $ <nat:240> \times <var:i> $ , $ <nat:2> \times <var:Q> $ , and $ <nat:186> \times <var:f> $ are clearly even . The term $ <var:D> \times <nat:214> $ is known as even . This is true by reason that taking the product of an even natural with a integer will be an even element of $ \mathbb{Z}^+ $ . As a consequence that multiplying between an even natural number with some integer will be even the summation $ <nat:186> * <var:f> + <nat:240> * <var:i> + <var:D> * <nat:214> + <var:Q> * <nat:2> $ is guaranteed to be even . By reason that the totaling between even elements of $ \mathbb{Z}^+ $ successively and an odd natural number is guaranteed to be an odd number in $ \mathbb{N} $ , the theorem must be true . We know $ <nat:95> $ is guaranteed to be an odd whole number . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:D> <var:Q> <var:i> <var:f> : nat , Nat . odd ( <nat:240> * <var:i> + <nat:2> * <var:Q> + <nat:186> * <var:f> + <nat:214> * <var:D> + <nat:95> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:240> * <var:i> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:2> * <var:Q> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:186> * <var:f> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:214> * <var:D> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:240> * <var:i> + <nat:2> * <var:Q> + <nat:186> * <var:f> + <nat:214> * <var:D> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . assert ( <genH> : Nat . odd <nat:95> = true ) . { auto . } rewrite <- Nat . negb_even . rewrite <genH> . rewrite <genH> . auto . Qed . 