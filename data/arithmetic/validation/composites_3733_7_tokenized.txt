\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Let $ <var:h> $ , $ <var:A> $ , $ <var:g> $ , $ <var:W> $ , $ <var:I> $ , $ <var:r> $ , $ <var:p> $ be whole numbers satisfying the condition that $ <var:I> $ , $ <var:p> $ , $ <var:h> $ , $ <var:r> $ , $ <var:W> $ , $ <var:A> $ , $ <var:g> > <nat:1> $ . Take that some positive integer $ <var:G> $ will be a <def:seven-composite> positive integer given $ <var:I> * <var:W> * <var:g> * <var:A> * <var:h> * <var:r> * <var:p> = <var:G> $ . Then $ <nat:207900> = <var:G> $ is a <def:seven-composite> positive integer . \end{theorem} \begin{proof} Remember that a <def:seven-composite> positive integer is the product between numbers $ <var:A> $ , $ <var:W> $ , $ <var:h> $ , $ <var:p> $ , $ <var:r> $ , $ <var:g> $ , and $ <var:I> $ so that $ <var:A> $ , $ <var:h> $ , $ <var:p> $ , $ <var:W> $ , $ <var:r> $ , $ <var:g> $ , $ <var:I> > <nat:1> $ . Assume $ <var:A> = <nat:7> $ , $ <var:W> = <nat:11> $ , $ <var:h> = <nat:3> $ , $ <var:g> = <nat:2> $ , $ <var:I> = <nat:10> $ , $ <var:p> = <nat:5> $ , and $ <var:r> = <nat:9> $ . We prove <nat:207900> is <def:seven-composite> . We show our result is true in view of $ <var:h> = <nat:3> $ , $ <var:I> = <nat:10> $ , $ <var:W> = <nat:11> $ , $ <var:r> = <nat:9> $ , $ <var:g> = <nat:2> $ , $ <var:p> = <nat:5> $ , and $ <var:A> = <nat:7> > <nat:1> $ . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:seven-composite> ( <var:G> : nat ) := exists <var:h> <var:A> <var:g> <var:W> <var:I> <var:r> <var:p> : nat , ( <var:I> > <nat:1> ) /\ ( <var:p> > <nat:1> ) /\ ( <var:h> > <nat:1> ) /\ ( <var:r> > <nat:1> ) /\ ( <var:W> > <nat:1> ) /\ ( <var:A> > <nat:1> ) /\ ( <var:g> > <nat:1> ) /\ ( <var:I> * <var:W> * <var:g> * <var:A> * <var:h> * <var:r> * <var:p> = <var:G> ) . Theorem <genP:1> : <def:seven-composite> <nat:207900> . Proof . unfold <def:seven-composite> . exists <nat:3> . exists <nat:7> . exists <nat:2> . exists <nat:11> . exists <nat:10> . exists <nat:9> . exists <nat:5> . assert ( <genH> : <nat:3> > <nat:1> ) . { lia . } assert ( <genH> : <nat:10> > <nat:1> ) . { lia . } assert ( <genH> : <nat:11> > <nat:1> ) . { lia . } assert ( <genH> : <nat:9> > <nat:1> ) . { lia . } assert ( <genH> : <nat:2> > <nat:1> ) . { lia . } assert ( <genH> : <nat:5> > <nat:1> ) . { lia . } assert ( <genH> : <nat:7> > <nat:1> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 