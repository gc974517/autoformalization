\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Using some $ <var:k> $ , $ <var:v> $ , $ <var:P> $ , $ <var:u> $ , $ <var:C> $ , $ <var:o> $ , and $ <var:j> \in \mathbb{N} $ the expression $ <nat:282> <var:j> + <nat:214> <var:u> + <nat:246> <var:o> + <nat:21> + <var:v> <nat:28> + <nat:406> <var:P> + <nat:436> <var:C> + <nat:388> <var:k> $ is odd . \end{theorem} \begin{proof} The summing between even numbers in $ \mathbb{N} $ with an odd integer is an odd element of $ \mathbb{N} $ . Furthermore , the leading terms $ <nat:282> $ , $ <nat:214> $ , $ <nat:246> $ , $ <nat:28> $ , $ <nat:406> $ , $ <nat:436> $ , and likewise $ <nat:388> $ will be even . Thus , the products $ <var:j> \times <nat:282> $ , $ <var:u> \times <nat:214> $ , $ <var:o> \times <nat:246> $ , $ <nat:28> \times <var:v> $ , $ <nat:406> \times <var:P> $ , $ <var:C> \times <nat:436> $ , additionally $ <nat:388> \times <var:k> $ is guaranteed to be even additionally . It can be verified that the expression $ <nat:214> * <var:u> + <nat:246> * <var:o> + <nat:406> * <var:P> + <var:j> * <nat:282> + <nat:21> + <var:C> * <nat:436> + <var:v> * <nat:28> + <nat:388> * <var:k> $ will be odd . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:k> <var:v> <var:P> <var:u> <var:C> <var:o> <var:j> : nat , Nat . odd ( <nat:282> * <var:j> + <nat:214> * <var:u> + <nat:246> * <var:o> + <nat:28> * <var:v> + <nat:406> * <var:P> + <nat:436> * <var:C> + <nat:388> * <var:k> + <nat:21> ) = true . Proof . intros . rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . assert ( <genH> : Nat . even <nat:282> = true ) . { auto . } assert ( <genH> : Nat . even <nat:214> = true ) . { auto . } assert ( <genH> : Nat . even <nat:246> = true ) . { auto . } assert ( <genH> : Nat . even <nat:28> = true ) . { auto . } assert ( <genH> : Nat . even <nat:406> = true ) . { auto . } assert ( <genH> : Nat . even <nat:436> = true ) . { auto . } assert ( <genH> : Nat . even <nat:388> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:282> * <var:j> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:214> * <var:u> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:246> * <var:o> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:28> * <var:v> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:406> * <var:P> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:436> * <var:C> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:388> * <var:k> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 