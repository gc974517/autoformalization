\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:1520640> $ is the same as $ <var:u> \cdot <var:g> \cdot <var:j> \cdot <var:h> \cdot <var:X> \cdot <var:i> \cdot <var:a> \cdot <var:Q> $ where $ <var:g> $ , $ <var:h> $ , $ <var:X> $ , $ <var:a> $ , $ <var:j> $ , $ <var:Q> $ , $ <var:i> $ , and $ <var:u> \geq <nat:2> $ . \end{theorem} \begin{proof} Assume $ <var:h> = <nat:12> $ , $ <var:j> = <nat:10> $ , $ <var:i> = <nat:6> $ , $ <var:a> = <nat:3> $ , $ <var:Q> = <nat:2> $ , $ <var:X> = <nat:8> $ , $ <var:u> = <nat:4> $ , and $ <var:g> = <nat:11> $ . We verify the thesis is true because $ <nat:12> $ , $ <nat:3> $ , $ <nat:10> $ , $ <nat:2> $ , $ <nat:6> $ , $ <nat:8> $ , $ <nat:11> $ and $ <nat:4> $ are more than or equivalent to <nat:2> plus for $ <nat:1520640> = <nat:2> * <nat:11> * <nat:4> * <nat:3> * <nat:8> * <nat:10> * <nat:6> * <nat:12> $ . As a result , $ <var:Q> \times <var:j> \times <var:u> \times <var:g> \times <var:a> \times <var:i> \times <var:h> \times <var:X> = <nat:1520640> $ is validated . \end{proof} \end{document} 
~
Require Import Lia . Theorem <genP:1> : exists <var:g> <var:u> <var:h> <var:i> <var:Q> <var:X> <var:j> <var:a> : nat , ( <nat:1520640> = <var:u> * <var:g> * <var:j> * <var:h> * <var:X> * <var:i> * <var:a> * <var:Q> ) /\ ( <var:g> >= <nat:2> ) /\ ( <var:h> >= <nat:2> ) /\ ( <var:X> >= <nat:2> ) /\ ( <var:a> >= <nat:2> ) /\ ( <var:j> >= <nat:2> ) /\ ( <var:Q> >= <nat:2> ) /\ ( <var:i> >= <nat:2> ) /\ ( <var:u> >= <nat:2> ) . Proof . exists <nat:11> . exists <nat:4> . exists <nat:12> . exists <nat:6> . exists <nat:2> . exists <nat:8> . exists <nat:10> . exists <nat:3> . assert ( <genH> : <nat:12> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:3> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:10> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:2> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:6> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:8> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:11> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:4> >= <nat:2> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 