\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:s> <nat:484> + <nat:426> <var:M> + <nat:176> <var:n> + <nat:392> <var:q> + <nat:346> <var:x> + <var:N> <nat:360> + <var:c> <nat:126> + <nat:283> + <var:R> <nat:304> $ must be odd given every positive integers $ <var:n> $ , $ <var:q> $ , $ <var:R> $ , $ <var:c> $ , $ <var:s> $ , $ <var:N> $ , $ <var:x> $ , and $ <var:M> $ . \end{theorem} \begin{proof} See the pairs $ <var:M> \times <nat:426> $ , $ <var:s> \times <nat:484> $ , $ <var:q> \times <nat:392> $ , $ <var:x> \times <nat:346> $ , $ <var:n> \times <nat:176> $ , $ <nat:126> \times <var:c> $ , additionally $ <nat:360> \times <var:N> $ are trivially even . This must be true from the knowledge the multiplication of an even element of $ \mathbb{Z}^+ $ and a element of $ \mathbb{N} $ is guaranteed to be even . See that the pair $ <nat:304> \times <var:R> $ is trivially even since multiplying between an even number in $ \mathbb{N} $ and any element of $ \mathbb{Z}^+ $ will be by definition an even number in $ \mathbb{N} $ . Recall that $ <nat:283> $ is guaranteed to be odd . The summing of even naturals successively and an odd natural number must be odd . Thus , the formula $ <var:x> * <nat:346> + <var:N> * <nat:360> + <nat:176> * <var:n> + <nat:426> * <var:M> + <nat:392> * <var:q> + <var:s> * <nat:484> + <nat:304> * <var:R> + <nat:126> * <var:c> + <nat:283> $ trivially is guaranteed to be odd . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:n> <var:q> <var:R> <var:c> <var:s> <var:N> <var:x> <var:M> : nat , Nat . odd ( <nat:484> * <var:s> + <nat:426> * <var:M> + <nat:176> * <var:n> + <nat:392> * <var:q> + <nat:346> * <var:x> + <nat:360> * <var:N> + <nat:126> * <var:c> + <nat:304> * <var:R> + <nat:283> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:426> * <var:M> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:484> * <var:s> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:392> * <var:q> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:346> * <var:x> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:176> * <var:n> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:126> * <var:c> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:360> * <var:N> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:304> * <var:R> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . odd <nat:283> = true ) . { auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 