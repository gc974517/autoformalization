\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Assume $ <var:j> $ , $ <var:D> $ , $ <var:P> $ , $ <var:w> $ , $ <var:C> $ , $ <var:h> $ , $ <var:O> $ , $ <var:Z> \in \mathbb{N} $ . We claim that some natural number $ <var:k> $ will be called a <def:eight-composite> number given $ <var:k> = <var:C> \cdot <var:w> \cdot <var:h> \cdot <var:D> \cdot <var:P> \cdot <var:O> \cdot <var:Z> \cdot <var:j> $ as well as unique terms are larger than or equal to <nat:2> . Thus $ <var:k> = <nat:1478400> $ is <def:eight-composite> . \end{theorem} \begin{proof} Notice $ <nat:7> \cdot <nat:2> \cdot <nat:6> \cdot <nat:4> \cdot <nat:8> \cdot <nat:10> \cdot <nat:5> \cdot <nat:11> = <nat:1478400> $ . In addition note that $ <nat:8> $ , $ <nat:6> $ , $ <nat:10> $ , $ <nat:5> $ , $ <nat:2> $ , $ <nat:7> $ , $ <nat:11> $ , and $ <nat:4> \geq <nat:2> $ . This yields our claim is true . Thus , $ <var:C> \times <var:w> \times <var:h> \times <var:D> \times <var:Z> \times <var:O> \times <var:j> \times <var:P> = <nat:1478400> $ is verified . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:eight-composite> ( <var:k> : nat ) := exists <var:j> <var:D> <var:P> <var:w> <var:C> <var:h> <var:O> <var:Z> : nat , ( <var:k> = <var:C> * <var:w> * <var:h> * <var:D> * <var:P> * <var:O> * <var:Z> * <var:j> ) /\ ( <var:j> >= <nat:2> ) /\ ( <var:D> >= <nat:2> ) /\ ( <var:P> >= <nat:2> ) /\ ( <var:w> >= <nat:2> ) /\ ( <var:C> >= <nat:2> ) /\ ( <var:h> >= <nat:2> ) /\ ( <var:O> >= <nat:2> ) /\ ( <var:Z> >= <nat:2> ) . Theorem <genP:1> : <def:eight-composite> <nat:1478400> . Proof . unfold <def:eight-composite> . exists <nat:6> . exists <nat:8> . exists <nat:4> . exists <nat:5> . exists <nat:7> . exists <nat:10> . exists <nat:11> . exists <nat:2> . assert ( <genH> : <nat:8> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:6> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:10> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:5> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:2> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:7> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:11> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:4> >= <nat:2> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 