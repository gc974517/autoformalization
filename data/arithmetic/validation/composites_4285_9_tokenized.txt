\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} There are some natural numbers $ <var:B> $ , $ <var:v> $ , $ <var:L> $ , $ <var:H> $ , $ <var:p> $ , $ <var:X> $ , $ <var:f> $ , $ <var:P> $ , $ <var:b> $ satisfying the condition that $ <var:f> $ , $ <var:p> $ , $ <var:H> $ , $ <var:v> $ , $ <var:b> $ , $ <var:L> $ , $ <var:X> $ , $ <var:B> $ and $ <var:P> \geq <nat:2> $ plus so that the whole number <nat:10886400> is the multiplication of positive integers $ <var:B> $ , $ <var:v> $ , $ <var:L> $ , $ <var:H> $ , $ <var:p> $ , $ <var:X> $ , $ <var:f> $ , $ <var:P> $ , and $ <var:b> $ . \end{theorem} \begin{proof} Take $ <var:p> = <nat:10> $ , $ <var:X> = <nat:2> $ , $ <var:P> = <nat:5> $ , $ <var:H> = <nat:6> $ , $ <var:f> = <nat:7> $ , $ <var:B> = <nat:3> $ , $ <var:L> = <nat:12> $ , $ <var:b> = <nat:9> $ , $ <var:v> = <nat:8> $ . Note that $ <nat:6> $ , $ <nat:3> $ , $ <nat:7> $ , $ <nat:2> $ , $ <nat:5> $ , $ <nat:9> $ , $ <nat:10> $ , $ <nat:12> $ and $ <nat:8> \geq <nat:2> $ . As a consequence , <nat:10886400> is the multiplication of some integers $ <var:p> $ , $ <var:L> $ , $ <var:P> $ , $ <var:B> $ , $ <var:H> $ , $ <var:f> $ , $ <var:X> $ , $ <var:b> $ , and $ <var:v> $ is proven . \end{proof} \end{document} 
~
Require Import Lia . Theorem <genP:1> : exists <var:B> <var:v> <var:L> <var:H> <var:p> <var:X> <var:f> <var:P> <var:b> : nat , ( <var:f> >= <nat:2> ) /\ ( <var:p> >= <nat:2> ) /\ ( <var:H> >= <nat:2> ) /\ ( <var:v> >= <nat:2> ) /\ ( <var:b> >= <nat:2> ) /\ ( <var:L> >= <nat:2> ) /\ ( <var:X> >= <nat:2> ) /\ ( <var:B> >= <nat:2> ) /\ ( <var:P> >= <nat:2> ) /\ ( <nat:10886400> = <var:B> * <var:v> * <var:L> * <var:H> * <var:p> * <var:X> * <var:f> * <var:P> * <var:b> ) . Proof . exists <nat:3> . exists <nat:8> . exists <nat:12> . exists <nat:6> . exists <nat:10> . exists <nat:2> . exists <nat:7> . exists <nat:5> . exists <nat:9> . assert ( <genH> : <nat:6> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:3> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:7> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:2> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:5> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:9> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:10> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:12> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:8> >= <nat:2> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 