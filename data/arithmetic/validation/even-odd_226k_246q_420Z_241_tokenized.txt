\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} For $ <var:Z> $ , $ <var:q> $ , and $ <var:k> \in \mathbb{N} $ the summation $ <nat:226> * <var:k> + <nat:241> + <var:Z> * <nat:420> + <nat:246> * <var:q> $ is guaranteed to be odd . \end{theorem} \begin{proof} The sum $ <nat:420> * <var:Z> + <var:q> * <nat:246> + <nat:226> * <var:k> $ is known as even . In addition to this , the products $ <nat:420> \times <var:Z> $ , $ <var:q> \times <nat:246> $ , additionally $ <nat:226> \times <var:k> $ are even numbers because multiplying between an even number in $ \mathbb{N} $ with an arbitrary integer is guaranteed to be even . This fact is proven from the knowledge the leading terms $ <nat:420> $ , $ <nat:246> $ , and moreover $ <nat:226> $ are trivially even . From the knowledge the product between even elements of $ \mathbb{Z}^+ $ and a number in $ \mathbb{Z}^+ $ is guaranteed to be even the summation $ <nat:246> \times <var:q> + <nat:420> \times <var:Z> + <nat:226> \times <var:k> $ will be even . See $ <nat:241> $ is guaranteed to be odd . It can be demonstrated that the formula $ <var:k> * <nat:226> + <nat:246> * <var:q> + <var:Z> * <nat:420> + <nat:241> $ is odd . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:Z> <var:q> <var:k> : nat , Nat . odd ( <nat:226> * <var:k> + <nat:420> * <var:Z> + <nat:246> * <var:q> + <nat:241> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:420> = true ) . { auto . } assert ( <genH> : Nat . even <nat:246> = true ) . { auto . } assert ( <genH> : Nat . even <nat:226> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:420> * <var:Z> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:246> * <var:q> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:226> * <var:k> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:226> * <var:k> + <nat:420> * <var:Z> + <nat:246> * <var:q> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } assert ( <genH> : Nat . odd <nat:241> = true ) . { auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . rewrite <genH> . auto . Qed . 