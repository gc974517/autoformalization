\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} With some positive terms $ <var:U> $ , $ <var:m> $ , $ <var:I> $ , and $ <var:F> $ $ <nat:278> <var:F> + <var:I> <nat:470> + <nat:491> + <var:m> <nat:454> + <nat:126> <var:U> $ is odd . \end{theorem} \begin{proof} Observe that the coefficient $ <nat:454> $ is known as even . So , the product $ <var:m> \cdot <nat:454> $ is even additionally . Remember the natural number $ <nat:278> $ is even . In consequence , the pair $ <nat:278> \cdot <var:F> $ is guaranteed to be even as well . Likewise , the product $ <var:I> \cdot <nat:470> $ is even . This fact is true since the positive integer $ <nat:470> $ is guaranteed to be an even integer . In addition , take note $ <nat:126> \cdot <var:U> $ is even as a consequence that the natural number $ <nat:126> $ is trivially an even positive integer . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:U> <var:m> <var:I> <var:F> : nat , Nat . odd ( <nat:278> * <var:F> + <nat:470> * <var:I> + <nat:454> * <var:m> + <nat:126> * <var:U> + <nat:491> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:454> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:454> * <var:m> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:278> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:278> * <var:F> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:470> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:470> * <var:I> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:126> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:126> * <var:U> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 