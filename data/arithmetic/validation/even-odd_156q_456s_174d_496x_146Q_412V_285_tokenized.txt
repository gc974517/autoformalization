\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:156> <var:q> + <var:s> <nat:456> + <nat:285> + <nat:174> <var:d> + <nat:496> <var:x> + <nat:146> <var:Q> + <nat:412> <var:V> $ will be odd assuming all positive integers $ <var:x> $ , $ <var:d> $ , $ <var:V> $ , $ <var:q> $ , $ <var:s> $ , and $ <var:Q> $ . \end{theorem} \begin{proof} What's more , the leading terms $ <nat:156> $ , $ <nat:456> $ , $ <nat:174> $ , $ <nat:496> $ , $ <nat:146> $ , plus $ <nat:412> $ will be even natural numbers . Accordingly , the products $ <var:q> <nat:156> $ , $ <var:s> <nat:456> $ , $ <nat:174> <var:d> $ , $ <var:x> <nat:496> $ , $ <var:Q> <nat:146> $ , and $ <var:V> <nat:412> $ must be even in addition . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:x> <var:d> <var:V> <var:q> <var:s> <var:Q> : nat , Nat . odd ( <nat:156> * <var:q> + <nat:456> * <var:s> + <nat:174> * <var:d> + <nat:496> * <var:x> + <nat:146> * <var:Q> + <nat:412> * <var:V> + <nat:285> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:156> = true ) . { auto . } assert ( <genH> : Nat . even <nat:456> = true ) . { auto . } assert ( <genH> : Nat . even <nat:174> = true ) . { auto . } assert ( <genH> : Nat . even <nat:496> = true ) . { auto . } assert ( <genH> : Nat . even <nat:146> = true ) . { auto . } assert ( <genH> : Nat . even <nat:412> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:156> * <var:q> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:456> * <var:s> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:174> * <var:d> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:496> * <var:x> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:146> * <var:Q> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:412> * <var:V> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 