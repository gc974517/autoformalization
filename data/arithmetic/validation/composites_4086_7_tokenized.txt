\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Let $ <var:k> $ , $ <var:g> $ , $ <var:E> $ , $ <var:Q> $ , $ <var:F> $ , $ <var:c> $ and $ <var:K> $ be natural numbers such that $ <var:F> $ , $ <var:E> $ , $ <var:k> $ , $ <var:K> $ , $ <var:g> $ , $ <var:c> $ , $ <var:Q> $ greater than or equal to <nat:2> . $ <var:Q> \times <var:c> \times <var:F> \times <var:k> \times <var:g> \times <var:E> \times <var:K> $ is the same as $ <nat:207900> $ . \end{theorem} \begin{proof} Observe that $ <var:F> \times <var:c> \times <var:K> \times <var:g> \times <var:k> \times <var:Q> \times <var:E> = <nat:207900> $ produces $ <var:g> = <nat:9> $ , $ <var:Q> = <nat:7> $ , $ <var:E> = <nat:5> $ , $ <var:K> = <nat:3> $ , $ <var:c> = <nat:11> $ , $ <var:k> = <nat:2> $ , $ <var:F> = <nat:10> $ . Furthermore observe $ <nat:3> $ , $ <nat:5> $ , $ <nat:9> $ , $ <nat:11> $ , $ <nat:10> $ , $ <nat:7> $ and $ <nat:2> \geq <nat:2> $ . As a result , $ <nat:207900> = <var:E> * <var:c> * <var:K> * <var:F> * <var:g> * <var:Q> * <var:k> $ is true has been proven . \end{proof} \end{document} 
~
Require Import Lia . Theorem <genP:1> : exists <var:k> <var:g> <var:E> <var:Q> <var:F> <var:c> <var:K> : nat , ( <var:F> >= <nat:2> ) /\ ( <var:E> >= <nat:2> ) /\ ( <var:k> >= <nat:2> ) /\ ( <var:K> >= <nat:2> ) /\ ( <var:g> >= <nat:2> ) /\ ( <var:c> >= <nat:2> ) /\ ( <var:Q> >= <nat:2> ) /\ ( <var:Q> * <var:c> * <var:F> * <var:k> * <var:g> * <var:E> * <var:K> = <nat:207900> ) . Proof . exists <nat:2> . exists <nat:9> . exists <nat:5> . exists <nat:7> . exists <nat:10> . exists <nat:11> . exists <nat:3> . assert ( <genH> : <nat:3> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:5> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:9> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:11> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:10> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:7> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:2> >= <nat:2> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 