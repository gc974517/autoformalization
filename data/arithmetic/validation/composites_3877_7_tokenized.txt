\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \newtheorem{definition}{Definition} \begin{document} \begin{definition} Supposing that we have $ <var:U> $ , $ <var:w> $ , $ <var:X> $ , $ <var:G> $ , $ <var:O> $ , $ <var:J> $ , and $ <var:l> \geq <nat:2> $ so that assuming some positive integer $ <var:M> $ , $ <var:M> = <var:X> * <var:U> * <var:G> * <var:J> * <var:O> * <var:w> * <var:l> $ using some $ <var:l> $ , $ <var:J> $ , $ <var:U> $ , $ <var:O> $ , $ <var:G> $ , $ <var:X> $ , $ <var:w> \in \mathbb{N} $ , take that $ <var:M> $ is a <def:seven-composite> whole number . \end{definition} \begin{theorem} The natural number <nat:201600> is a <def:seven-composite> positive integer . \end{theorem} \begin{proof} Let $ <var:l> = <nat:3> $ , $ <var:G> = <nat:2> $ , $ <var:O> = <nat:10> $ , $ <var:w> = <nat:7> $ , $ <var:U> = <nat:8> $ , $ <var:X> = <nat:5> $ , and $ <var:J> = <nat:12> $ . We confirm $ <var:X> \cdot <var:l> \cdot <var:O> \cdot <var:J> \cdot <var:G> \cdot <var:U> \cdot <var:w> = <nat:201600> $ . Further note that $ <nat:3> $ , $ <nat:7> $ , $ <nat:5> $ , $ <nat:12> $ , $ <nat:8> $ , $ <nat:2> $ and $ <nat:10> $ are more than or equal to <nat:2> . This suggests our theorem is valid . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:seven-composite> ( <var:M> : nat ) := exists <var:l> <var:J> <var:U> <var:O> <var:G> <var:X> <var:w> : nat , ( <var:U> >= <nat:2> ) /\ ( <var:w> >= <nat:2> ) /\ ( <var:X> >= <nat:2> ) /\ ( <var:G> >= <nat:2> ) /\ ( <var:O> >= <nat:2> ) /\ ( <var:J> >= <nat:2> ) /\ ( <var:l> >= <nat:2> ) /\ ( <var:M> = <var:X> * <var:U> * <var:G> * <var:J> * <var:O> * <var:w> * <var:l> ) . Theorem <genP:1> : <def:seven-composite> <nat:201600> . Proof . unfold <def:seven-composite> . exists <nat:3> . exists <nat:12> . exists <nat:8> . exists <nat:10> . exists <nat:2> . exists <nat:5> . exists <nat:7> . assert ( <genH> : <nat:3> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:7> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:5> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:12> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:8> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:2> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:10> >= <nat:2> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 