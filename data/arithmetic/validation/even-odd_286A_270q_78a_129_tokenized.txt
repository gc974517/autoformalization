\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:286> \times <var:A> + <nat:270> \times <var:q> + <nat:78> \times <var:a> + <nat:129> $ will be odd . \end{theorem} \begin{proof} Take note the formula $ <var:a> <nat:78> + <nat:270> <var:q> + <nat:129> + <var:A> <nat:286> $ is guaranteed to be odd from the fact the formula $ <nat:270> \cdot <var:q> + <nat:78> \cdot <var:a> + <var:A> \cdot <nat:286> $ is clearly even , since the summing of even elements of $ \mathbb{N} $ collectively with an even number must be fundamentally an even number in $ \mathbb{N} $ . The pairs $ <nat:270> \times <var:q> $ and likewise $ <var:a> \times <nat:78> $ are known as even numbers in $ \mathbb{Z}^+ $ . This claim is true from the knowledge the multiplication between an even number and an arbitrary positive integer is an even natural number . This fact must be true because the numbers $ <nat:270> $ as well as $ <nat:78> $ are obviously . The product $ <nat:286> \times <var:A> $ is trivially an even number in $ \mathbb{Z}^+ $ . This fact holds by reason that multiplying of an even number in $ \mathbb{N} $ and an arbitrary natural number is even . This claim is true from the knowledge the whole number $ <nat:286> $ is known as even . plus because taking the product of even numbers in $ \mathbb{N} $ with an arbitrary element of $ \mathbb{N} $ is guaranteed to be even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:A> <var:q> <var:a> : nat , Nat . odd ( <nat:286> * <var:A> + <nat:270> * <var:q> + <nat:78> * <var:a> + <nat:129> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:270> = true ) . { auto . } assert ( <genH> : Nat . even <nat:78> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:270> * <var:q> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:78> * <var:a> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:286> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:286> * <var:A> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:286> * <var:A> + <nat:270> * <var:q> + <nat:78> * <var:a> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . auto . Qed . 