\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:255> + <nat:420> * <var:H> + <var:D> * <nat:40> + <var:c> * <nat:116> + <var:M> * <nat:400> + <nat:90> * <var:Z> + <var:Y> * <nat:286> $ is guaranteed to be odd . \end{theorem} \begin{proof} See that $ <nat:255> $ is guaranteed to be odd . The summation of even elements of $ \mathbb{Z}^+ $ with an odd natural number is guaranteed to be by definition an odd number in $ \mathbb{Z}^+ $ . Then , this proposition is true . We know that the sum $ <nat:286> <var:Y> + <nat:420> <var:H> + <nat:400> <var:M> + <nat:40> <var:D> + <var:c> <nat:116> + <var:Z> <nat:90> $ is guaranteed to be even . We know the adding between even whole numbers together with an even natural must be even . The terms $ <nat:40> * <var:D> $ , $ <nat:116> * <var:c> $ , $ <nat:286> * <var:Y> $ , in addition to $ <nat:420> * <var:H> $ are trivially even . Recall that the product $ <nat:400> * <var:M> $ is known as an even element of $ \mathbb{N} $ . Recall the product $ <var:Z> * <nat:90> $ is obviously an even element of $ \mathbb{Z}^+ $ because taking the product between an even positive integer with any natural number is guaranteed to be an even natural . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:H> <var:D> <var:c> <var:M> <var:Z> <var:Y> : nat , Nat . odd ( <nat:420> * <var:H> + <nat:40> * <var:D> + <nat:116> * <var:c> + <nat:400> * <var:M> + <nat:90> * <var:Z> + <nat:286> * <var:Y> + <nat:255> ) = true . Proof . intros . assert ( <genH> : Nat . odd <nat:255> = true ) . { auto . } rewrite Nat . odd_add . assert ( <genH> : Nat . even ( <nat:40> * <var:D> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:116> * <var:c> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:286> * <var:Y> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:420> * <var:H> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:400> * <var:M> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:90> * <var:Z> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:420> * <var:H> + <nat:40> * <var:D> + <nat:116> * <var:c> + <nat:400> * <var:M> + <nat:90> * <var:Z> + <nat:286> * <var:Y> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite <- Nat . negb_even . rewrite <genH> . rewrite <genH> . auto . Qed . 