\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:114> + <nat:444> \cdot <var:l> + <var:K> \cdot <nat:52> $ must be even for some unknowns $ <var:l> $ , and $ <var:K> $ . \end{theorem} \begin{proof} Observe $ <nat:114> + <nat:52> \cdot <var:K> + <nat:444> \cdot <var:l> $ is trivially even from the fact $ <var:l> \times <nat:444> + <nat:52> \times <var:K> $ is known to be even . The products $ <var:l> \times <nat:444> $ and likewise $ <nat:52> \times <var:K> $ are known to be even elements of $ \mathbb{Z}^+ $ from the fact taking the product of an even number in $ \mathbb{Z}^+ $ and a natural number will be by definition an even element of $ \mathbb{N} $ , which holds from the knowledge the positive integers $ <nat:444> $ in addition to $ <nat:52> $ are clearly even numbers in $ \mathbb{N} $ . $ <var:l> * <nat:444> + <var:K> * <nat:52> $ is guaranteed to be by its very nature even from the fact the adding of even natural numbers with even numbers is guaranteed to be an even element of $ \mathbb{N} $ additionally because taking the product between an even whole number and any positive integer will be instrinsically an even positive integer . It can be justified that our lemma must be true . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:l> <var:K> : nat , Nat . even ( <nat:444> * <var:l> + <nat:52> * <var:K> + <nat:114> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:444> = true ) . { auto . } assert ( <genH> : Nat . even <nat:52> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:444> * <var:l> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:52> * <var:K> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:444> * <var:l> + <nat:52> * <var:K> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . even_add . rewrite <genH> . auto . Qed . 