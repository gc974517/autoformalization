\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \newtheorem{definition}{Definition} \begin{document} \begin{definition} Allow $ <var:C> $ , $ <var:y> $ , $ <var:J> $ , $ <var:D> $ , $ <var:G> $ , $ <var:B> $ , $ <var:c> $ as integers . We claim that $ <var:q> \in \mathbb{N} $ is defined to be a <def:seven-composite> whole number when $ <var:D> * <var:J> * <var:B> * <var:G> * <var:C> * <var:c> * <var:y> = <var:q> $ and such that $ <var:B> $ , $ <var:G> $ , $ <var:c> $ , $ <var:y> $ , $ <var:J> $ , $ <var:D> $ , $ <var:C> \geq <nat:2> $ . \end{definition} \begin{theorem} $ <var:q> = <nat:831600> $ is a <def:seven-composite> positive integer . \end{theorem} \begin{proof} Note that $ <nat:3> \times <nat:7> \times <nat:11> \times <nat:9> \times <nat:5> \times <nat:8> \times <nat:10> = <var:C> \times <var:y> \times <var:B> \times <var:D> \times <var:c> \times <var:J> \times <var:G> = <nat:831600> $ . Moreover observe $ <nat:9> $ , $ <nat:10> $ , $ <nat:7> $ , $ <nat:5> $ , $ <nat:3> $ , $ <nat:11> $ and $ <nat:8> $ are more than or equal to <nat:2> . This suggests the result is true . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:seven-composite> ( <var:q> : nat ) := exists <var:C> <var:y> <var:J> <var:D> <var:G> <var:B> <var:c> : nat , ( <var:D> * <var:J> * <var:B> * <var:G> * <var:C> * <var:c> * <var:y> = <var:q> ) /\ ( <var:B> >= <nat:2> ) /\ ( <var:G> >= <nat:2> ) /\ ( <var:c> >= <nat:2> ) /\ ( <var:y> >= <nat:2> ) /\ ( <var:J> >= <nat:2> ) /\ ( <var:D> >= <nat:2> ) /\ ( <var:C> >= <nat:2> ) . Theorem <genP:1> : <def:seven-composite> <nat:831600> . Proof . unfold <def:seven-composite> . exists <nat:3> . exists <nat:7> . exists <nat:8> . exists <nat:9> . exists <nat:10> . exists <nat:11> . exists <nat:5> . assert ( <genH> : <nat:9> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:10> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:7> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:5> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:3> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:11> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:8> >= <nat:2> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 