\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \newtheorem{definition}{Definition} \begin{document} \begin{definition} If there are natural numbers $ <var:J> $ , $ <var:x> $ , $ <var:n> $ , $ <var:P> $ , $ <var:e> $ say that $ <var:p> \in \mathbb{Z}^+ $ will be considered a <def:five-composite> number if $ <var:p> = <var:P> \times <var:x> \times <var:J> \times <var:e> \times <var:n> $ and factors are larger than <nat:1> . \end{definition} \begin{theorem} $ <nat:6480> = <var:p> $ is a <def:five-composite> natural number . \end{theorem} \begin{proof} Recall that a <def:five-composite> natural number is the multiplication between integers $ <var:J> $ , $ <var:x> $ , $ <var:e> $ , $ <var:n> $ and $ <var:P> $ so that $ <var:P> $ , $ <var:e> $ , $ <var:n> $ , $ <var:J> $ , and $ <var:x> > <nat:1> $ . We present <nat:6480> is a <def:five-composite> natural number because $ <nat:6480> = <var:J> \times <var:e> \times <var:n> \times <var:P> \times <var:x> $ shows $ <var:x> = <nat:3> $ , $ <var:P> = <nat:2> $ , $ <var:J> = <nat:9> $ , $ <var:n> = <nat:10> $ , and $ <var:e> = <nat:12> $ and on account of $ <nat:10> $ , $ <nat:3> $ , $ <nat:9> $ , $ <nat:2> $ , and $ <nat:12> > <nat:1> $ . So , <nat:6480> is a <def:five-composite> natural number is validated . Hence , $ <var:J> \cdot <var:e> \cdot <var:x> \cdot <var:n> \cdot <var:P> = <nat:6480> $ is proven . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:five-composite> ( <var:p> : nat ) := exists <var:J> <var:x> <var:n> <var:P> <var:e> : nat , ( <var:p> = <var:P> * <var:x> * <var:J> * <var:e> * <var:n> ) /\ ( <var:J> > <nat:1> ) /\ ( <var:x> > <nat:1> ) /\ ( <var:n> > <nat:1> ) /\ ( <var:P> > <nat:1> ) /\ ( <var:e> > <nat:1> ) . Theorem <genP:1> : <def:five-composite> <nat:6480> . Proof . unfold <def:five-composite> . exists <nat:9> . exists <nat:3> . exists <nat:10> . exists <nat:2> . exists <nat:12> . assert ( <genH> : <nat:10> > <nat:1> ) . { lia . } assert ( <genH> : <nat:3> > <nat:1> ) . { lia . } assert ( <genH> : <nat:9> > <nat:1> ) . { lia . } assert ( <genH> : <nat:2> > <nat:1> ) . { lia . } assert ( <genH> : <nat:12> > <nat:1> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 