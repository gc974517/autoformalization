\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:f> \times <var:u> \times <var:z> \times <var:C> \times <var:t> \times <var:i> \times <var:P> \times <var:h> \times <var:F> $ is equivalent to $ <nat:19958400> $ assuming $ <var:h> $ , $ <var:i> $ , $ <var:t> $ , $ <var:f> $ , $ <var:C> $ , $ <var:P> $ , $ <var:z> $ , $ <var:u> $ , and $ <var:F> \in \mathbb{Z}^+ $ satisfying the condition that $ <var:u> $ , $ <var:h> $ , $ <var:F> $ , $ <var:C> $ , $ <var:z> $ , $ <var:P> $ , $ <var:i> $ , $ <var:t> $ , $ <var:f> > <nat:1> $ . \end{theorem} \begin{proof} Assume $ <var:f> = <nat:12> $ , $ <var:u> = <nat:6> $ , $ <var:C> = <nat:10> $ , $ <var:P> = <nat:7> $ , $ <var:h> = <nat:9> $ , $ <var:F> = <nat:11> $ , $ <var:z> = <nat:5> $ , $ <var:t> = <nat:2> $ , and $ <var:i> = <nat:4> $ . We prove the principle is true considering $ <var:f> \times <var:P> \times <var:h> \times <var:u> \times <var:C> \times <var:i> \times <var:F> \times <var:t> \times <var:z> = <nat:19958400> $ plus on account of $ <var:i> = <nat:4> $ , $ <var:t> = <nat:2> $ , $ <var:C> = <nat:10> $ , $ <var:z> = <nat:5> $ , $ <var:f> = <nat:12> $ , $ <var:h> = <nat:9> $ , $ <var:u> = <nat:6> $ , $ <var:F> = <nat:11> $ , and $ <var:P> = <nat:7> > <nat:1> $ . \end{proof} \end{document} 
~
Require Import Lia . Theorem <genP:1> : exists <var:h> <var:i> <var:t> <var:f> <var:C> <var:P> <var:z> <var:u> <var:F> : nat , ( <var:f> * <var:u> * <var:z> * <var:C> * <var:t> * <var:i> * <var:P> * <var:h> * <var:F> = <nat:19958400> ) /\ ( <var:u> > <nat:1> ) /\ ( <var:h> > <nat:1> ) /\ ( <var:F> > <nat:1> ) /\ ( <var:C> > <nat:1> ) /\ ( <var:z> > <nat:1> ) /\ ( <var:P> > <nat:1> ) /\ ( <var:i> > <nat:1> ) /\ ( <var:t> > <nat:1> ) /\ ( <var:f> > <nat:1> ) . Proof . exists <nat:9> . exists <nat:4> . exists <nat:2> . exists <nat:12> . exists <nat:10> . exists <nat:7> . exists <nat:5> . exists <nat:6> . exists <nat:11> . assert ( <genH> : <nat:4> > <nat:1> ) . { lia . } assert ( <genH> : <nat:2> > <nat:1> ) . { lia . } assert ( <genH> : <nat:10> > <nat:1> ) . { lia . } assert ( <genH> : <nat:5> > <nat:1> ) . { lia . } assert ( <genH> : <nat:12> > <nat:1> ) . { lia . } assert ( <genH> : <nat:9> > <nat:1> ) . { lia . } assert ( <genH> : <nat:6> > <nat:1> ) . { lia . } assert ( <genH> : <nat:11> > <nat:1> ) . { lia . } assert ( <genH> : <nat:7> > <nat:1> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 