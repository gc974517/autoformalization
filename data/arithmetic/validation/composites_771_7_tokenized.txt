\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Granted there are integers $ <var:d> $ , $ <var:N> $ , $ <var:l> $ , $ <var:I> $ , $ <var:V> $ , $ <var:a> $ , $ <var:E> $ we say that some integer $ <var:W> $ is defined as a <def:seven-composite> number assuming $ <var:W> = <var:I> * <var:E> * <var:d> * <var:l> * <var:N> * <var:V> * <var:a> $ and larger than or equivalent to <nat:2> . So $ <var:W> = <nat:302400> $ is a <def:seven-composite> whole number . \end{theorem} \begin{proof} Observe that $ <var:V> \times <var:N> \times <var:a> \times <var:l> \times <var:E> \times <var:I> \times <var:d> = <nat:302400> $ hints $ <var:l> = <nat:10> $ , $ <var:V> = <nat:5> $ , $ <var:E> = <nat:9> $ , $ <var:d> = <nat:12> $ , $ <var:a> = <nat:7> $ , $ <var:I> = <nat:4> $ , and $ <var:N> = <nat:2> $ . What's more observe that $ <nat:5> $ , $ <nat:7> $ , $ <nat:12> $ , $ <nat:10> $ , $ <nat:2> $ , $ <nat:4> $ , and $ <nat:9> $ are more than or equivalent to <nat:2> . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:seven-composite> ( <var:W> : nat ) := exists <var:d> <var:N> <var:l> <var:I> <var:V> <var:a> <var:E> : nat , ( <var:W> = <var:I> * <var:E> * <var:d> * <var:l> * <var:N> * <var:V> * <var:a> ) /\ ( <var:d> >= <nat:2> ) /\ ( <var:N> >= <nat:2> ) /\ ( <var:l> >= <nat:2> ) /\ ( <var:I> >= <nat:2> ) /\ ( <var:V> >= <nat:2> ) /\ ( <var:a> >= <nat:2> ) /\ ( <var:E> >= <nat:2> ) . Theorem <genP:1> : <def:seven-composite> <nat:302400> . Proof . unfold <def:seven-composite> . exists <nat:12> . exists <nat:2> . exists <nat:10> . exists <nat:4> . exists <nat:5> . exists <nat:7> . exists <nat:9> . assert ( <genH> : <nat:5> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:7> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:12> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:10> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:2> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:4> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:9> >= <nat:2> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 