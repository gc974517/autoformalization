\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:308> <var:X> + <nat:312> <var:c> + <var:K> <nat:10> + <var:u> <nat:366> + <var:h> <nat:488> + <var:W> <nat:182> + <nat:486> <var:L> + <nat:312> + <var:E> <nat:410> $ is guaranteed to be even given any natural numbers $ <var:X> $ , $ <var:h> $ , $ <var:L> $ , $ <var:u> $ , $ <var:c> $ , $ <var:K> $ , $ <var:W> $ , and $ <var:E> $ . \end{theorem} \begin{proof} The claim must be true from the knowledge $ <var:E> <nat:410> + <var:X> <nat:308> + <nat:312> <var:c> + <var:h> <nat:488> + <var:W> <nat:182> + <var:u> <nat:366> + <var:K> <nat:10> + <var:L> <nat:486> $ is clearly even . The pairs $ <var:K> * <nat:10> $ , $ <var:L> * <nat:486> $ , $ <var:u> * <nat:366> $ , $ <var:W> * <nat:182> $ , $ <nat:312> * <var:c> $ , and moreover $ <var:h> * <nat:488> $ are known to be even since multiplying between an even number in $ \mathbb{Z}^+ $ and a integer must be even . This must be true as a consequence that the whole numbers $ <nat:10> $ , $ <nat:486> $ , $ <nat:366> $ , $ <nat:182> $ , $ <nat:312> $ , and moreover $ <nat:488> $ will be . Remember that $ <var:E> * <nat:410> $ is known to be an even number . This fact is true from the fact the coefficient $ <nat:410> $ is known as an even natural . Furthermore , $ <var:X> * <nat:308> $ is known as an even natural number from the knowledge the coefficient $ <nat:308> $ is clearly an even number in $ \mathbb{Z}^+ $ . As a consequence that the adding between even numbers in $ \mathbb{N} $ with even numbers in $ \mathbb{N} $ is guaranteed to be even , and also since the multiplication between an even natural and a element of $ \mathbb{N} $ is an even number in $ \mathbb{N} $ . Notice that the adding between an even positive integer and an even number is guaranteed to be even . See $ <nat:312> $ is clearly even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:X> <var:h> <var:L> <var:u> <var:c> <var:K> <var:W> <var:E> : nat , Nat . even ( <nat:308> * <var:X> + <nat:312> * <var:c> + <nat:10> * <var:K> + <nat:366> * <var:u> + <nat:488> * <var:h> + <nat:182> * <var:W> + <nat:486> * <var:L> + <nat:410> * <var:E> + <nat:312> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:10> = true ) . { auto . } assert ( <genH> : Nat . even <nat:486> = true ) . { auto . } assert ( <genH> : Nat . even <nat:366> = true ) . { auto . } assert ( <genH> : Nat . even <nat:182> = true ) . { auto . } assert ( <genH> : Nat . even <nat:312> = true ) . { auto . } assert ( <genH> : Nat . even <nat:488> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:10> * <var:K> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:486> * <var:L> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:366> * <var:u> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:182> * <var:W> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:312> * <var:c> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:488> * <var:h> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:410> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:410> * <var:E> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:308> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:308> * <var:X> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:308> * <var:X> + <nat:312> * <var:c> + <nat:10> * <var:K> + <nat:366> * <var:u> + <nat:488> * <var:h> + <nat:182> * <var:W> + <nat:486> * <var:L> + <nat:410> * <var:E> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . even_add . assert ( <genH> : Nat . even <nat:312> = true ) . { auto . } rewrite <genH> . rewrite <genH> . auto . Qed . 