\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:384> \times <var:r> + <nat:434> \times <var:X> + <nat:203> + <nat:378> \times <var:m> + <var:z> \times <nat:6> + <nat:176> \times <var:G> + <var:e> \times <nat:108> + <var:g> \times <nat:174> + <nat:252> \times <var:v> $ must be odd . \end{theorem} \begin{proof} We know the pair $ <var:e> * <nat:108> $ is trivially even . This holds since the product between an even integer and an arbitrary number in $ \mathbb{N} $ is by itself an even number in $ \mathbb{N} $ . Additionally , the products $ <var:m> * <nat:378> $ additionally $ <nat:252> * <var:v> $ are known to be even integers . This is proven as a consequence that the product between an even number with an arbitrary element of $ \mathbb{N} $ is an even whole number . Furthermore , see that $ <nat:434> * <var:X> $ is known to be an even element of $ \mathbb{N} $ . Furthermore , the terms $ <var:r> * <nat:384> $ and likewise $ <var:z> * <nat:6> $ are clearly even . Additionally , the product $ <nat:174> * <var:g> $ is guaranteed to be an even element of $ \mathbb{Z}^+ $ from the fact the multiplication of an even natural number and some number in $ \mathbb{Z}^+ $ must be even . On top of this , the term $ <var:G> * <nat:176> $ is guaranteed to be an even positive integer . Notice $ <nat:203> $ is clearly an odd whole number . Notice the adding of even naturals successively with an odd number in $ \mathbb{N} $ must be instrinsically an odd natural . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:r> <var:X> <var:m> <var:z> <var:G> <var:e> <var:g> <var:v> : nat , Nat . odd ( <nat:384> * <var:r> + <nat:434> * <var:X> + <nat:378> * <var:m> + <nat:6> * <var:z> + <nat:176> * <var:G> + <nat:108> * <var:e> + <nat:174> * <var:g> + <nat:252> * <var:v> + <nat:203> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:108> * <var:e> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:378> * <var:m> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:252> * <var:v> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:434> * <var:X> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:384> * <var:r> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:6> * <var:z> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:174> * <var:g> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:176> * <var:G> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . odd <nat:203> = true ) . { auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 