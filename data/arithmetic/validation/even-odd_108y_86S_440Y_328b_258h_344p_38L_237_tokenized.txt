\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Using some $ <var:y> $ , $ <var:h> $ , $ <var:S> $ , $ <var:Y> $ , $ <var:b> $ , $ <var:L> $ , and $ <var:p> \in \mathbb{N} $ the sum $ <nat:237> + <nat:344> <var:p> + <nat:108> <var:y> + <nat:86> <var:S> + <nat:328> <var:b> + <var:Y> <nat:440> + <var:h> <nat:258> + <nat:38> <var:L> $ must be odd . \end{theorem} \begin{proof} The positive integers $ <nat:344> $ , $ <nat:108> $ , $ <nat:86> $ , $ <nat:328> $ , $ <nat:440> $ , $ <nat:258> $ , additionally $ <nat:38> $ are guaranteed to be even numbers in $ \mathbb{Z}^+ $ . Hence , the products $ <nat:344> <var:p> $ , $ <nat:108> <var:y> $ , $ <var:S> <nat:86> $ , $ <var:b> <nat:328> $ , $ <nat:440> <var:Y> $ , $ <nat:258> <var:h> $ , and moreover $ <nat:38> <var:L> $ will be even at the same time . It can be justified that the summation $ <var:y> <nat:108> + <var:S> <nat:86> + <var:Y> <nat:440> + <nat:328> <var:b> + <nat:258> <var:h> + <nat:237> + <var:p> <nat:344> + <nat:38> <var:L> $ must be odd . Take note $ <nat:237> $ is guaranteed to be odd . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:y> <var:h> <var:S> <var:Y> <var:b> <var:L> <var:p> : nat , Nat . odd ( <nat:344> * <var:p> + <nat:108> * <var:y> + <nat:86> * <var:S> + <nat:328> * <var:b> + <nat:440> * <var:Y> + <nat:258> * <var:h> + <nat:38> * <var:L> + <nat:237> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:344> = true ) . { auto . } assert ( <genH> : Nat . even <nat:108> = true ) . { auto . } assert ( <genH> : Nat . even <nat:86> = true ) . { auto . } assert ( <genH> : Nat . even <nat:328> = true ) . { auto . } assert ( <genH> : Nat . even <nat:440> = true ) . { auto . } assert ( <genH> : Nat . even <nat:258> = true ) . { auto . } assert ( <genH> : Nat . even <nat:38> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:344> * <var:p> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:108> * <var:y> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:86> * <var:S> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:328> * <var:b> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:440> * <var:Y> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:258> * <var:h> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:38> * <var:L> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . odd <nat:237> = true ) . { auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 