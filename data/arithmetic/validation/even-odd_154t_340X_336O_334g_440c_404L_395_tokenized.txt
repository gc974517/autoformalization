\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:334> * <var:g> + <nat:395> + <nat:336> * <var:O> + <nat:404> * <var:L> + <nat:340> * <var:X> + <nat:440> * <var:c> + <var:t> * <nat:154> $ is odd taking integers $ <var:L> $ , $ <var:t> $ , $ <var:X> $ , $ <var:c> $ , $ <var:g> $ , and $ <var:O> $ . \end{theorem} \begin{proof} The adding of an even element of $ \mathbb{Z}^+ $ with an odd number will be trivially an odd element of $ \mathbb{N} $ . Observe that the pairs $ <nat:334> <var:g> $ , $ <var:O> <nat:336> $ , $ <var:L> <nat:404> $ , $ <var:X> <nat:340> $ , $ <var:c> <nat:440> $ , and moreover $ <nat:154> <var:t> $ are known to be even integers . This fact must be true from the fact the product of an even positive integer and an arbitrary number will be by definition an even number , and must be true by reason that the coefficients $ <nat:334> $ , $ <nat:336> $ , $ <nat:404> $ , $ <nat:340> $ , $ <nat:440> $ , in addition to $ <nat:154> $ are clearly obviously even numbers in $ \mathbb{N} $ . It can be proven that $ <nat:395> + <nat:154> \cdot <var:t> + <var:X> \cdot <nat:340> + <nat:336> \cdot <var:O> + <nat:334> \cdot <var:g> + <nat:440> \cdot <var:c> + <nat:404> \cdot <var:L> $ must be odd . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:L> <var:t> <var:X> <var:c> <var:g> <var:O> : nat , Nat . odd ( <nat:334> * <var:g> + <nat:336> * <var:O> + <nat:404> * <var:L> + <nat:340> * <var:X> + <nat:440> * <var:c> + <nat:154> * <var:t> + <nat:395> ) = true . Proof . intros . rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . assert ( <genH> : Nat . even <nat:334> = true ) . { auto . } assert ( <genH> : Nat . even <nat:336> = true ) . { auto . } assert ( <genH> : Nat . even <nat:404> = true ) . { auto . } assert ( <genH> : Nat . even <nat:340> = true ) . { auto . } assert ( <genH> : Nat . even <nat:440> = true ) . { auto . } assert ( <genH> : Nat . even <nat:154> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:334> * <var:g> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:336> * <var:O> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:404> * <var:L> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:340> * <var:X> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:440> * <var:c> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:154> * <var:t> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 