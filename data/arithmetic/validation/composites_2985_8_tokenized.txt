\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Take $ <var:I> $ , $ <var:Z> $ , $ <var:X> $ , $ <var:S> $ , $ <var:U> $ , $ <var:m> $ , $ <var:E> $ , and $ <var:Q> $ are whole numbers where $ <var:Q> $ , $ <var:U> $ , $ <var:S> $ , $ <var:m> $ , $ <var:I> $ , $ <var:E> $ , $ <var:Z> $ , $ <var:X> $ more than or equivalent to <nat:2> . the integer <nat:1555200> is the multiplication between numbers $ <var:I> $ , $ <var:Z> $ , $ <var:X> $ , $ <var:S> $ , $ <var:U> $ , $ <var:m> $ , $ <var:E> $ , and $ <var:Q> $ . \end{theorem} \begin{proof} Note $ <nat:10> \cdot <nat:6> \cdot <nat:8> \cdot <nat:9> \cdot <nat:2> \cdot <nat:12> \cdot <nat:5> \cdot <nat:3> = <nat:1555200> = <var:Z> \cdot <var:E> \cdot <var:Q> \cdot <var:S> \cdot <var:m> \cdot <var:U> \cdot <var:X> \cdot <var:I> $ . Additionally notice that $ <nat:12> $ , $ <nat:3> $ , $ <nat:2> $ , $ <nat:8> $ , $ <nat:5> $ , $ <nat:10> $ , $ <nat:9> $ , $ <nat:6> \geq <nat:2> $ . \end{proof} \end{document} 
~
Require Import Lia . Theorem <genP:1> : exists <var:I> <var:Z> <var:X> <var:S> <var:U> <var:m> <var:E> <var:Q> : nat , ( <var:Q> >= <nat:2> ) /\ ( <var:U> >= <nat:2> ) /\ ( <var:S> >= <nat:2> ) /\ ( <var:m> >= <nat:2> ) /\ ( <var:I> >= <nat:2> ) /\ ( <var:E> >= <nat:2> ) /\ ( <var:Z> >= <nat:2> ) /\ ( <var:X> >= <nat:2> ) /\ ( <nat:1555200> = <var:I> * <var:Z> * <var:X> * <var:S> * <var:U> * <var:m> * <var:E> * <var:Q> ) . Proof . exists <nat:3> . exists <nat:10> . exists <nat:5> . exists <nat:9> . exists <nat:12> . exists <nat:2> . exists <nat:6> . exists <nat:8> . assert ( <genH> : <nat:12> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:3> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:2> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:8> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:5> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:10> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:9> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:6> >= <nat:2> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 