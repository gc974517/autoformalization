\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} With some $ <var:S> $ , $ <var:s> $ , $ <var:N> $ , $ <var:Y> $ , $ <var:t> $ , $ <var:H> $ , $ <var:d> $ , and $ <var:I> \in \mathbb{Z}^+ $ the summation $ <nat:472> \times <var:t> + <nat:380> \times <var:I> + <var:d> \times <nat:344> + <var:s> \times <nat:74> + <var:H> \times <nat:126> + <nat:245> + <nat:314> \times <var:S> + <nat:422> \times <var:N> + <nat:304> \times <var:Y> $ is odd . \end{theorem} \begin{proof} We demonstrate the expression $ <var:H> * <nat:126> + <var:d> * <nat:344> + <nat:380> * <var:I> + <nat:304> * <var:Y> + <var:s> * <nat:74> + <var:N> * <nat:422> + <nat:314> * <var:S> + <var:t> * <nat:472> + <nat:245> $ will be odd . Remember that $ <nat:245> $ is guaranteed to be odd . See the pairs $ <var:I> \cdot <nat:380> $ and $ <nat:304> \cdot <var:Y> $ are trivially even whole numbers . This claim holds because taking the product between an even number in $ \mathbb{Z}^+ $ with some number in $ \mathbb{Z}^+ $ is guaranteed to be even . This claim holds as a consequence that the whole numbers $ <nat:380> $ as well as $ <nat:304> $ are obviously fundamentally even elements of $ \mathbb{Z}^+ $ . We know the pairs $ <nat:472> \cdot <var:t> $ , $ <var:S> \cdot <nat:314> $ , and also $ <var:d> \cdot <nat:344> $ are clearly even elements of $ \mathbb{Z}^+ $ . This claim is proven since the positive integers $ <nat:472> $ , $ <nat:314> $ , additionally $ <nat:344> $ will be even whole numbers . We know that the products $ <nat:422> \cdot <var:N> $ plus $ <var:H> \cdot <nat:126> $ are known as even . This is proven since the product between an even number in $ \mathbb{Z}^+ $ with a element of $ \mathbb{N} $ will be even plus the coefficients $ <nat:422> $ and likewise $ <nat:126> $ must be trivially even numbers in $ \mathbb{N} $ . The whole number $ <nat:74> $ is clearly an even number in $ \mathbb{N} $ . Accordingly , the term $ <var:s> \cdot <nat:74> $ is even as well . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:S> <var:s> <var:N> <var:Y> <var:t> <var:H> <var:d> <var:I> : nat , Nat . odd ( <nat:472> * <var:t> + <nat:380> * <var:I> + <nat:344> * <var:d> + <nat:74> * <var:s> + <nat:126> * <var:H> + <nat:314> * <var:S> + <nat:422> * <var:N> + <nat:304> * <var:Y> + <nat:245> ) = true . Proof . intros . assert ( <genH> : Nat . odd <nat:245> = true ) . { auto . } assert ( <genH> : Nat . even <nat:380> = true ) . { auto . } assert ( <genH> : Nat . even <nat:304> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:380> * <var:I> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:304> * <var:Y> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:472> = true ) . { auto . } assert ( <genH> : Nat . even <nat:314> = true ) . { auto . } assert ( <genH> : Nat . even <nat:344> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:472> * <var:t> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:314> * <var:S> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:344> * <var:d> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:422> = true ) . { auto . } assert ( <genH> : Nat . even <nat:126> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:422> * <var:N> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:126> * <var:H> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:74> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:74> * <var:s> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 