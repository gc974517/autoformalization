\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:444> \times <var:K> + <var:s> \times <nat:282> + <nat:198> \times <var:k> + <nat:58> \times <var:l> + <nat:248> + <var:w> \times <nat:6> + <var:e> \times <nat:334> + <nat:384> \times <var:L> + <nat:190> \times <var:b> $ is guaranteed to be even . \end{theorem} \begin{proof} See the summation $ <var:l> * <nat:58> + <var:L> * <nat:384> + <nat:282> * <var:s> + <var:K> * <nat:444> + <var:w> * <nat:6> + <nat:190> * <var:b> + <var:e> * <nat:334> + <var:k> * <nat:198> $ is known to be even , as a consequence that the summation between even numbers in $ \mathbb{Z}^+ $ successively will be even . Recall that the pairs $ <nat:6> \times <var:w> $ , $ <nat:282> \times <var:s> $ , $ <var:b> \times <nat:190> $ , and likewise $ <var:K> \times <nat:444> $ will be even integers . This fact is proven from the fact the numbers $ <nat:6> $ , $ <nat:282> $ , $ <nat:190> $ , in addition to $ <nat:444> $ are known as even . The number $ <nat:198> $ is an even natural . Accordingly , the pair $ <var:k> \times <nat:198> $ is guaranteed to be even in addition . Recall that the terms $ <nat:384> \times <var:L> $ and also $ <nat:58> \times <var:l> $ are known as even . This fact is proven as a consequence that the multiplication between an even whole number with a natural number is an even element of $ \mathbb{Z}^+ $ , and holds by reason that the numbers $ <nat:384> $ in addition to $ <nat:58> $ are known to be even elements of $ \mathbb{Z}^+ $ . Observe the product $ <nat:334> \times <var:e> $ is guaranteed to be even . This fact is true from the fact the coefficient $ <nat:334> $ is an even positive integer . additionally by reason that taking the product of an even positive integer with a number is in itself an even element of $ \mathbb{Z}^+ $ . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:K> <var:s> <var:k> <var:l> <var:w> <var:e> <var:L> <var:b> : nat , Nat . even ( <nat:444> * <var:K> + <nat:282> * <var:s> + <nat:198> * <var:k> + <nat:58> * <var:l> + <nat:6> * <var:w> + <nat:334> * <var:e> + <nat:384> * <var:L> + <nat:190> * <var:b> + <nat:248> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:6> = true ) . { auto . } assert ( <genH> : Nat . even <nat:282> = true ) . { auto . } assert ( <genH> : Nat . even <nat:190> = true ) . { auto . } assert ( <genH> : Nat . even <nat:444> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:6> * <var:w> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:282> * <var:s> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:190> * <var:b> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:444> * <var:K> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:198> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:198> * <var:k> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:384> = true ) . { auto . } assert ( <genH> : Nat . even <nat:58> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:384> * <var:L> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:58> * <var:l> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:334> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:334> * <var:e> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:444> * <var:K> + <nat:282> * <var:s> + <nat:198> * <var:k> + <nat:58> * <var:l> + <nat:6> * <var:w> + <nat:334> * <var:e> + <nat:384> * <var:L> + <nat:190> * <var:b> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . even_add . rewrite <genH> . auto . Qed . 