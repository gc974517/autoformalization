\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:336> * <var:f> + <nat:292> + <var:i> * <nat:326> + <var:U> * <nat:284> + <var:b> * <nat:156> + <nat:330> * <var:S> + <var:j> * <nat:102> $ is guaranteed to be even with any natural numbers $ <var:U> $ , $ <var:f> $ , $ <var:i> $ , $ <var:S> $ , $ <var:j> $ , and $ <var:b> $ . \end{theorem} \begin{proof} $ <var:U> <nat:284> + <nat:336> <var:f> + <var:S> <nat:330> + <nat:292> + <var:i> <nat:326> + <nat:102> <var:j> + <nat:156> <var:b> $ is known to be even by reason that the sum $ <nat:326> * <var:i> + <var:U> * <nat:284> + <var:f> * <nat:336> + <var:S> * <nat:330> + <var:j> * <nat:102> + <nat:156> * <var:b> $ is obviously even , because the product between even whole numbers is even . The coefficients $ <nat:326> $ , $ <nat:102> $ , $ <nat:156> $ , plus $ <nat:336> $ are guaranteed to be even On top of this , the whole number $ <nat:330> $ is clearly even On top of this , the integer $ <nat:284> $ is clearly an even positive integer Remember $ <nat:292> $ is guaranteed to be even . The summing between an even number and an even number must be even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:U> <var:f> <var:i> <var:S> <var:j> <var:b> : nat , Nat . even ( <nat:336> * <var:f> + <nat:326> * <var:i> + <nat:284> * <var:U> + <nat:156> * <var:b> + <nat:330> * <var:S> + <nat:102> * <var:j> + <nat:292> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:326> = true ) . { auto . } assert ( <genH> : Nat . even <nat:102> = true ) . { auto . } assert ( <genH> : Nat . even <nat:156> = true ) . { auto . } assert ( <genH> : Nat . even <nat:336> = true ) . { auto . } assert ( <genH> : Nat . even <nat:330> = true ) . { auto . } assert ( <genH> : Nat . even <nat:284> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:336> * <var:f> + <nat:326> * <var:i> + <nat:284> * <var:U> + <nat:156> * <var:b> + <nat:330> * <var:S> + <nat:102> * <var:j> ) = true ) . { repeat rewrite Nat . even_add . repeat rewrite Nat . even_mul . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:292> = true ) . { auto . } rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . auto . Qed . 