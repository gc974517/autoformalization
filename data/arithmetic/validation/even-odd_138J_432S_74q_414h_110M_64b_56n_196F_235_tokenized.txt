\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:235> + <var:h> * <nat:414> + <nat:110> * <var:M> + <nat:74> * <var:q> + <var:F> * <nat:196> + <var:b> * <nat:64> + <var:S> * <nat:432> + <nat:138> * <var:J> + <nat:56> * <var:n> $ will be odd assuming some natural numbers $ <var:M> $ , $ <var:h> $ , $ <var:J> $ , $ <var:F> $ , $ <var:n> $ , $ <var:q> $ , $ <var:b> $ , and $ <var:S> $ . \end{theorem} \begin{proof} It can be demonstrated that our proposition is true . Notice that $ <nat:235> $ is known as an odd integer . It can be proven that $ <nat:138> <var:J> + <var:M> <nat:110> + <var:n> <nat:56> + <nat:235> + <nat:74> <var:q> + <nat:414> <var:h> + <nat:432> <var:S> + <nat:64> <var:b> + <var:F> <nat:196> $ is odd because the expression $ <var:S> \cdot <nat:432> + <var:F> \cdot <nat:196> + <var:n> \cdot <nat:56> + <nat:74> \cdot <var:q> + <var:J> \cdot <nat:138> + <var:b> \cdot <nat:64> + <nat:110> \cdot <var:M> + <var:h> \cdot <nat:414> $ is even . The formula $ <nat:138> * <var:J> + <var:S> * <nat:432> + <nat:74> * <var:q> + <var:h> * <nat:414> + <nat:110> * <var:M> + <var:b> * <nat:64> + <var:n> * <nat:56> + <nat:196> * <var:F> $ is by definition even as a consequence that the addition of even numbers in $ \mathbb{N} $ and an even number in $ \mathbb{Z}^+ $ must be an even element of $ \mathbb{Z}^+ $ . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:M> <var:h> <var:J> <var:F> <var:n> <var:q> <var:b> <var:S> : nat , Nat . odd ( <nat:414> * <var:h> + <nat:110> * <var:M> + <nat:74> * <var:q> + <nat:196> * <var:F> + <nat:64> * <var:b> + <nat:432> * <var:S> + <nat:138> * <var:J> + <nat:56> * <var:n> + <nat:235> ) = true . Proof . intros . assert ( <genH> : Nat . odd <nat:235> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:414> * <var:h> + <nat:110> * <var:M> + <nat:74> * <var:q> + <nat:196> * <var:F> + <nat:64> * <var:b> + <nat:432> * <var:S> + <nat:138> * <var:J> + <nat:56> * <var:n> ) = true ) . { repeat rewrite Nat . even_add . repeat rewrite Nat . even_mul . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . rewrite <genH> . auto . Qed . 