\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:304> <var:V> + <nat:260> <var:j> + <nat:344> <var:h> + <var:q> <nat:240> + <var:E> <nat:440> + <nat:270> <var:L> + <nat:26> + <nat:190> <var:G> $ must be even using $ <var:q> $ , $ <var:E> $ , $ <var:V> $ , $ <var:L> $ , $ <var:h> $ , $ <var:G> $ , and $ <var:j> \in \mathbb{N} $ . \end{theorem} \begin{proof} Notice that $ <nat:26> $ is clearly an even natural . We show the lemma must be true . See $ <nat:304> \times <var:V> + <nat:240> \times <var:q> + <nat:260> \times <var:j> + <nat:190> \times <var:G> + <nat:344> \times <var:h> + <nat:440> \times <var:E> + <nat:270> \times <var:L> $ is even . Take note that the summation of an even number with an even element of $ \mathbb{Z}^+ $ is guaranteed to be in itself an even positive integer . The pair $ <nat:440> <var:E> $ is clearly an even number in $ \mathbb{N} $ . This claim is true from the knowledge the multiplication between an even natural with some element of $ \mathbb{N} $ is fundamentally an even number in $ \mathbb{N} $ . The terms $ <nat:190> <var:G> $ , $ <var:j> <nat:260> $ , $ <var:h> <nat:344> $ , $ <nat:240> <var:q> $ , and $ <nat:304> <var:V> $ will be even . Adding on , take note that the pair $ <var:L> <nat:270> $ is even . This fact holds from the knowledge taking the product of an even number with any positive integer is itself an even number . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:q> <var:E> <var:V> <var:L> <var:h> <var:G> <var:j> : nat , Nat . even ( <nat:304> * <var:V> + <nat:260> * <var:j> + <nat:344> * <var:h> + <nat:240> * <var:q> + <nat:440> * <var:E> + <nat:270> * <var:L> + <nat:190> * <var:G> + <nat:26> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:26> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:440> * <var:E> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:190> * <var:G> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:260> * <var:j> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:344> * <var:h> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:240> * <var:q> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:304> * <var:V> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:270> * <var:L> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:304> * <var:V> + <nat:260> * <var:j> + <nat:344> * <var:h> + <nat:240> * <var:q> + <nat:440> * <var:E> + <nat:270> * <var:L> + <nat:190> * <var:G> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . auto . Qed . 