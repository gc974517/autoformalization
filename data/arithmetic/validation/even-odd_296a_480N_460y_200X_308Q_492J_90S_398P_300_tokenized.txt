\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Assuming $ <var:X> $ , $ <var:S> $ , $ <var:J> $ , $ <var:a> $ , $ <var:N> $ , $ <var:P> $ , $ <var:y> $ , and $ <var:Q> $ the summation $ <nat:480> \cdot <var:N> + <var:y> \cdot <nat:460> + <var:P> \cdot <nat:398> + <var:J> \cdot <nat:492> + <var:X> \cdot <nat:200> + <nat:300> + <var:Q> \cdot <nat:308> + <nat:296> \cdot <var:a> + <nat:90> \cdot <var:S> $ is even . \end{theorem} \begin{proof} See the products $ <var:X> <nat:200> $ and moreover $ <var:P> <nat:398> $ are clearly even numbers in $ \mathbb{Z}^+ $ because the coefficients $ <nat:200> $ and $ <nat:398> $ are clearly even . The terms $ <nat:90> <var:S> $ , $ <nat:492> <var:J> $ , $ <var:a> <nat:296> $ , $ <nat:480> <var:N> $ , and likewise $ <nat:460> <var:y> $ are known to be even elements of $ \mathbb{N} $ since the multiplication of an even integer with some natural number is even , which is true from the fact the leading terms $ <nat:90> $ , $ <nat:492> $ , $ <nat:296> $ , $ <nat:480> $ , and $ <nat:460> $ are known as even . What's more , remember that the leading term $ <nat:308> $ is trivially an even whole number . Hence , the term $ <var:Q> <nat:308> $ is guaranteed to be even also . We know $ <nat:300> $ is guaranteed to be even . We justify this claim holds . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:X> <var:S> <var:J> <var:a> <var:N> <var:P> <var:y> <var:Q> : nat , Nat . even ( <nat:480> * <var:N> + <nat:460> * <var:y> + <nat:398> * <var:P> + <nat:492> * <var:J> + <nat:200> * <var:X> + <nat:308> * <var:Q> + <nat:296> * <var:a> + <nat:90> * <var:S> + <nat:300> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:200> = true ) . { auto . } assert ( <genH> : Nat . even <nat:398> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:200> * <var:X> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:398> * <var:P> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:90> = true ) . { auto . } assert ( <genH> : Nat . even <nat:492> = true ) . { auto . } assert ( <genH> : Nat . even <nat:296> = true ) . { auto . } assert ( <genH> : Nat . even <nat:480> = true ) . { auto . } assert ( <genH> : Nat . even <nat:460> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:90> * <var:S> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:492> * <var:J> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:296> * <var:a> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:480> * <var:N> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:460> * <var:y> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:308> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:308> * <var:Q> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:300> = true ) . { auto . } repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 