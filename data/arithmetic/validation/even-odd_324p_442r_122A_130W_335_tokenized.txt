\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:335> + <nat:130> \cdot <var:W> + <var:p> \cdot <nat:324> + <var:r> \cdot <nat:442> + <nat:122> \cdot <var:A> $ will be odd for some $ <var:r> $ , $ <var:p> $ , $ <var:W> $ , and $ <var:A> \in \mathbb{N} $ . \end{theorem} \begin{proof} The pairs $ <var:W> <nat:130> $ plus $ <nat:442> <var:r> $ are known as even numbers in $ \mathbb{Z}^+ $ . This fact must be true by reason that taking the product between an even natural number with a element of $ \mathbb{N} $ must be even . This fact holds by reason that the positive integers $ <nat:130> $ additionally $ <nat:442> $ are guaranteed to be even . Observe the natural number $ <nat:122> $ is an even element of $ \mathbb{N} $ . Thus , the pair $ <var:A> <nat:122> $ will be even at the same time . Additionally , take note the term $ <nat:324> <var:p> $ is obviously even . This is true from the knowledge multiplying between an even whole number and an arbitrary number in $ \mathbb{N} $ is an even whole number plus the leading term $ <nat:324> $ is even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:r> <var:p> <var:W> <var:A> : nat , Nat . odd ( <nat:130> * <var:W> + <nat:324> * <var:p> + <nat:442> * <var:r> + <nat:122> * <var:A> + <nat:335> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:130> = true ) . { auto . } assert ( <genH> : Nat . even <nat:442> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:130> * <var:W> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:442> * <var:r> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:122> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:122> * <var:A> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:324> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:324> * <var:p> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 