\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:247> + <var:S> \times <nat:108> + <var:j> \times <nat:126> + <nat:222> \times <var:P> + <nat:452> \times <var:b> $ will be odd . \end{theorem} \begin{proof} $ <nat:247> + <var:b> \cdot <nat:452> + <var:S> \cdot <nat:108> + <nat:126> \cdot <var:j> + <nat:222> \cdot <var:P> $ is known to be odd from the knowledge $ <var:P> * <nat:222> + <var:j> * <nat:126> + <nat:108> * <var:S> + <var:b> * <nat:452> $ is even . See $ <nat:452> \times <var:b> $ is trivially even since multiplying of an even positive integer and some natural number must be an even positive integer . Furthermore , the terms $ <var:S> \times <nat:108> $ additionally $ <var:P> \times <nat:222> $ are even numbers from the knowledge the multiplication of an even element of $ \mathbb{N} $ with an arbitrary number in $ \mathbb{Z}^+ $ is an even natural . Remember that the product $ <var:j> \times <nat:126> $ is clearly even . This fact must be true from the fact multiplying of an even number in $ \mathbb{Z}^+ $ with some positive integer is guaranteed to be even . It can be justified that this main result holds . Recall $ <nat:247> $ is trivially an odd integer . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:S> <var:j> <var:P> <var:b> : nat , Nat . odd ( <nat:108> * <var:S> + <nat:126> * <var:j> + <nat:222> * <var:P> + <nat:452> * <var:b> + <nat:247> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:452> * <var:b> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:108> * <var:S> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:222> * <var:P> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:126> * <var:j> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:108> * <var:S> + <nat:126> * <var:j> + <nat:222> * <var:P> + <nat:452> * <var:b> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } assert ( <genH> : Nat . odd <nat:247> = true ) . { auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . rewrite <genH> . auto . Qed . 