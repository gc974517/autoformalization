\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:228> * <var:Q> + <nat:31> + <var:j> * <nat:206> + <var:m> * <nat:428> + <nat:112> * <var:f> $ must be odd taking every positive numbers $ <var:m> $ , $ <var:f> $ , $ <var:j> $ , and $ <var:Q> $ . \end{theorem} \begin{proof} See the summation $ <var:f> * <nat:112> + <var:Q> * <nat:228> + <var:m> * <nat:428> + <nat:31> + <nat:206> * <var:j> $ is known to be odd from the fact the expression $ <nat:428> <var:m> + <var:j> <nat:206> + <var:f> <nat:112> + <var:Q> <nat:228> $ is clearly even . See the summing of an even number in $ \mathbb{Z}^+ $ with an even natural is guaranteed to be even . The leading term $ <nat:112> $ is known as an even number . As a consequence , the pair $ <var:f> * <nat:112> $ is guaranteed to be even additionally . Take note that the numbers $ <nat:206> $ and $ <nat:228> $ will be even . Accordingly , the terms $ <nat:206> * <var:j> $ and likewise $ <var:Q> * <nat:228> $ must be even too . Remember the pair $ <var:m> * <nat:428> $ is guaranteed to be an even integer . This is true from the fact the whole number $ <nat:428> $ is guaranteed to be even . in addition to by reason that the product between an even number in $ \mathbb{N} $ with some positive integer will be fundamentally an even whole number . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:m> <var:f> <var:j> <var:Q> : nat , Nat . odd ( <nat:228> * <var:Q> + <nat:206> * <var:j> + <nat:428> * <var:m> + <nat:112> * <var:f> + <nat:31> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:112> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:112> * <var:f> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:206> = true ) . { auto . } assert ( <genH> : Nat . even <nat:228> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:206> * <var:j> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:228> * <var:Q> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:428> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:428> * <var:m> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:228> * <var:Q> + <nat:206> * <var:j> + <nat:428> * <var:m> + <nat:112> * <var:f> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . auto . Qed . 