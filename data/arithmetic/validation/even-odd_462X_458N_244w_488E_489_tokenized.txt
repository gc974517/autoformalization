\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:244> * <var:w> + <var:N> * <nat:458> + <var:E> * <nat:488> + <nat:462> * <var:X> + <nat:489> $ must be odd assuming every natural numbers $ <var:X> $ , $ <var:w> $ , $ <var:N> $ , and $ <var:E> $ . \end{theorem} \begin{proof} Remember $ <nat:462> \times <var:X> + <nat:458> \times <var:N> + <var:w> \times <nat:244> + <nat:488> \times <var:E> $ is trivially even . Notice that the adding between an even element of $ \mathbb{N} $ with an even positive integer is guaranteed to be even . Building on , observe that the pairs $ <var:X> \cdot <nat:462> $ , $ <var:N> \cdot <nat:458> $ , $ <nat:244> \cdot <var:w> $ , and likewise $ <var:E> \cdot <nat:488> $ are guaranteed to be even . This claim is proven from the knowledge the integers $ <nat:462> $ , $ <nat:458> $ , $ <nat:244> $ , plus $ <nat:488> $ are guaranteed to be even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:X> <var:w> <var:N> <var:E> : nat , Nat . odd ( <nat:244> * <var:w> + <nat:458> * <var:N> + <nat:488> * <var:E> + <nat:462> * <var:X> + <nat:489> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:462> = true ) . { auto . } assert ( <genH> : Nat . even <nat:458> = true ) . { auto . } assert ( <genH> : Nat . even <nat:244> = true ) . { auto . } assert ( <genH> : Nat . even <nat:488> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:462> * <var:X> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:458> * <var:N> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:244> * <var:w> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:488> * <var:E> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:244> * <var:w> + <nat:458> * <var:N> + <nat:488> * <var:E> + <nat:462> * <var:X> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . auto . Qed . 