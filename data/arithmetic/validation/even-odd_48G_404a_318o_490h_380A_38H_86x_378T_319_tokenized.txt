\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:38> \times <var:H> + <nat:404> \times <var:a> + <nat:319> + <nat:318> \times <var:o> + <nat:380> \times <var:A> + <nat:490> \times <var:h> + <nat:378> \times <var:T> + <nat:48> \times <var:G> + <var:x> \times <nat:86> $ is odd assuming every natural numbers $ <var:G> $ , $ <var:H> $ , $ <var:x> $ , $ <var:T> $ , $ <var:o> $ , $ <var:a> $ , $ <var:h> $ , and $ <var:A> $ . \end{theorem} \begin{proof} Recall the integers $ <nat:86> $ , $ <nat:48> $ , $ <nat:318> $ , $ <nat:490> $ , $ <nat:404> $ , and $ <nat:38> $ are guaranteed to be even natural numbers The whole number $ <nat:380> $ is guaranteed to be an even natural number In addition to this , see that the natural number $ <nat:378> $ is an even positive integer Notice $ <nat:319> $ is trivially an odd element of $ \mathbb{Z}^+ $ . Because taking the product of an even number in $ \mathbb{Z}^+ $ with some number in $ \mathbb{Z}^+ $ must be an even integer , then the summation $ <nat:48> * <var:G> + <var:a> * <nat:404> + <nat:319> + <var:o> * <nat:318> + <nat:490> * <var:h> + <nat:380> * <var:A> + <nat:38> * <var:H> + <var:x> * <nat:86> + <nat:378> * <var:T> $ will be odd . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:G> <var:H> <var:x> <var:T> <var:o> <var:a> <var:h> <var:A> : nat , Nat . odd ( <nat:38> * <var:H> + <nat:404> * <var:a> + <nat:318> * <var:o> + <nat:380> * <var:A> + <nat:490> * <var:h> + <nat:378> * <var:T> + <nat:48> * <var:G> + <nat:86> * <var:x> + <nat:319> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:86> = true ) . { auto . } assert ( <genH> : Nat . even <nat:48> = true ) . { auto . } assert ( <genH> : Nat . even <nat:318> = true ) . { auto . } assert ( <genH> : Nat . even <nat:490> = true ) . { auto . } assert ( <genH> : Nat . even <nat:404> = true ) . { auto . } assert ( <genH> : Nat . even <nat:38> = true ) . { auto . } assert ( <genH> : Nat . even <nat:380> = true ) . { auto . } assert ( <genH> : Nat . even <nat:378> = true ) . { auto . } assert ( <genH> : Nat . odd <nat:319> = true ) . { auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . repeat rewrite Nat . even_mul . rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 