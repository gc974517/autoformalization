\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Let $ <var:s> $ , $ <var:I> $ , $ <var:o> $ , $ <var:l> $ , $ <var:P> $ , $ <var:e> $ , $ <var:N> \in \mathbb{Z}^+ $ so that $ <var:I> $ , $ <var:o> $ , $ <var:s> $ , $ <var:e> $ , $ <var:P> $ , $ <var:l> $ , and $ <var:N> > <nat:1> $ . <nat:777600> is the multiplication between positive integers $ <var:s> $ , $ <var:I> $ , $ <var:o> $ , $ <var:l> $ , $ <var:P> $ , $ <var:e> $ and $ <var:N> \in \mathbb{Z}^+ $ . \end{theorem} \begin{proof} Allow $ <var:o> = <nat:5> $ , $ <var:I> = <nat:12> $ , $ <var:l> = <nat:9> $ , $ <var:P> = <nat:3> $ , $ <var:e> = <nat:10> $ , $ <var:N> = <nat:6> $ and $ <var:s> = <nat:8> $ . Observe that $ <nat:5> $ , $ <nat:12> $ , $ <nat:10> $ , $ <nat:6> $ , $ <nat:9> $ , $ <nat:8> $ and $ <nat:3> $ are larger than <nat:1> . Additionally note that also $ <nat:777600> = <var:o> \times <var:I> \times <var:e> \times <var:l> \times <var:P> \times <var:s> \times <var:N> $ . Consequently , $ <var:o> $ , $ <var:N> $ , $ <var:e> $ , $ <var:l> $ , $ <var:I> $ , $ <var:s> $ and $ <var:P> > <nat:1> $ plus $ <nat:777600> = <var:s> \times <var:I> \times <var:l> \times <var:N> \times <var:P> \times <var:e> \times <var:o> $ is verified . \end{proof} \end{document} 
~
Require Import Lia . Theorem <genP:1> : exists <var:s> <var:I> <var:o> <var:l> <var:P> <var:e> <var:N> : nat , ( <var:I> > <nat:1> ) /\ ( <var:o> > <nat:1> ) /\ ( <var:s> > <nat:1> ) /\ ( <var:e> > <nat:1> ) /\ ( <var:P> > <nat:1> ) /\ ( <var:l> > <nat:1> ) /\ ( <var:N> > <nat:1> ) /\ ( <nat:777600> = <var:s> * <var:I> * <var:o> * <var:l> * <var:P> * <var:e> * <var:N> ) . Proof . exists <nat:8> . exists <nat:12> . exists <nat:5> . exists <nat:9> . exists <nat:3> . exists <nat:10> . exists <nat:6> . assert ( <genH> : <nat:5> > <nat:1> ) . { lia . } assert ( <genH> : <nat:12> > <nat:1> ) . { lia . } assert ( <genH> : <nat:10> > <nat:1> ) . { lia . } assert ( <genH> : <nat:6> > <nat:1> ) . { lia . } assert ( <genH> : <nat:9> > <nat:1> ) . { lia . } assert ( <genH> : <nat:8> > <nat:1> ) . { lia . } assert ( <genH> : <nat:3> > <nat:1> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 