\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:E> \cdot <nat:150> + <var:V> \cdot <nat:414> + <var:B> \cdot <nat:94> + <var:W> \cdot <nat:392> + <var:t> \cdot <nat:456> + <nat:25> + <var:q> \cdot <nat:382> + <var:e> \cdot <nat:126> + <nat:360> \cdot <var:T> $ must be odd given any $ <var:E> $ , $ <var:T> $ , $ <var:t> $ , $ <var:W> $ , $ <var:B> $ , $ <var:q> $ , $ <var:V> $ , and $ <var:e> \in \mathbb{N} $ . \end{theorem} \begin{proof} We verify the claim is proven . We use the understanding the expression $ <var:V> <nat:414> + <nat:456> <var:t> + <var:B> <nat:94> + <nat:360> <var:T> + <var:e> <nat:126> + <nat:150> <var:E> + <nat:382> <var:q> + <nat:392> <var:W> $ is guaranteed to be even , from the knowledge multiplying of even natural numbers is even . The natural numbers $ <nat:126> $ , $ <nat:414> $ , $ <nat:360> $ , $ <nat:392> $ , $ <nat:382> $ , $ <nat:150> $ , and $ <nat:94> $ are known as even whole numbers Notice the natural number $ <nat:456> $ is obviously even Notice the adding of even elements of $ \mathbb{N} $ collectively and an odd natural number is guaranteed to be odd . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:E> <var:T> <var:t> <var:W> <var:B> <var:q> <var:V> <var:e> : nat , Nat . odd ( <nat:150> * <var:E> + <nat:414> * <var:V> + <nat:94> * <var:B> + <nat:392> * <var:W> + <nat:456> * <var:t> + <nat:382> * <var:q> + <nat:126> * <var:e> + <nat:360> * <var:T> + <nat:25> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:126> = true ) . { auto . } assert ( <genH> : Nat . even <nat:414> = true ) . { auto . } assert ( <genH> : Nat . even <nat:360> = true ) . { auto . } assert ( <genH> : Nat . even <nat:392> = true ) . { auto . } assert ( <genH> : Nat . even <nat:382> = true ) . { auto . } assert ( <genH> : Nat . even <nat:150> = true ) . { auto . } assert ( <genH> : Nat . even <nat:94> = true ) . { auto . } assert ( <genH> : Nat . even <nat:456> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:150> * <var:E> + <nat:414> * <var:V> + <nat:94> * <var:B> + <nat:392> * <var:W> + <nat:456> * <var:t> + <nat:382> * <var:q> + <nat:126> * <var:e> + <nat:360> * <var:T> ) = true ) . { repeat rewrite Nat . even_add . repeat rewrite Nat . even_mul . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . auto . Qed . 