\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} There are some whole numbers $ <var:F> $ , $ <var:T> $ , $ <var:y> $ , $ <var:c> $ , $ <var:w> $ , $ <var:a> $ , $ <var:O> $ , and $ <var:P> $ so that $ <var:P> $ , $ <var:T> $ , $ <var:F> $ , $ <var:c> $ , $ <var:O> $ , $ <var:a> $ , $ <var:w> $ , and $ <var:y> > <nat:1> $ plus where the number <nat:1064448> is the product of whole numbers $ <var:F> $ , $ <var:T> $ , $ <var:y> $ , $ <var:c> $ , $ <var:w> $ , $ <var:a> $ , $ <var:O> $ and $ <var:P> $ . \end{theorem} \begin{proof} Let $ <var:a> = <nat:2> $ , $ <var:F> = <nat:4> $ , $ <var:c> = <nat:8> $ , $ <var:T> = <nat:12> $ , $ <var:y> = <nat:6> $ , $ <var:O> = <nat:7> $ , $ <var:w> = <nat:11> $ , $ <var:P> = <nat:3> $ . Additionally observe that $ <var:T> = <nat:12> $ , $ <var:O> = <nat:7> $ , $ <var:F> = <nat:4> $ , $ <var:y> = <nat:6> $ , $ <var:w> = <nat:11> $ , $ <var:P> = <nat:3> $ , $ <var:a> = <nat:2> $ , and $ <var:c> = <nat:8> > <nat:1> $ . \end{proof} \end{document} 
~
Require Import Lia . Theorem <genP:1> : exists <var:F> <var:T> <var:y> <var:c> <var:w> <var:a> <var:O> <var:P> : nat , ( <var:P> > <nat:1> ) /\ ( <var:T> > <nat:1> ) /\ ( <var:F> > <nat:1> ) /\ ( <var:c> > <nat:1> ) /\ ( <var:O> > <nat:1> ) /\ ( <var:a> > <nat:1> ) /\ ( <var:w> > <nat:1> ) /\ ( <var:y> > <nat:1> ) /\ ( <nat:1064448> = <var:F> * <var:T> * <var:y> * <var:c> * <var:w> * <var:a> * <var:O> * <var:P> ) . Proof . exists <nat:4> . exists <nat:12> . exists <nat:6> . exists <nat:8> . exists <nat:11> . exists <nat:2> . exists <nat:7> . exists <nat:3> . assert ( <genH> : <nat:12> > <nat:1> ) . { lia . } assert ( <genH> : <nat:7> > <nat:1> ) . { lia . } assert ( <genH> : <nat:4> > <nat:1> ) . { lia . } assert ( <genH> : <nat:6> > <nat:1> ) . { lia . } assert ( <genH> : <nat:11> > <nat:1> ) . { lia . } assert ( <genH> : <nat:3> > <nat:1> ) . { lia . } assert ( <genH> : <nat:2> > <nat:1> ) . { lia . } assert ( <genH> : <nat:8> > <nat:1> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 