\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:470> \cdot <var:i> + <nat:184> \cdot <var:W> + <var:H> \cdot <nat:480> + <nat:304> + <var:P> \cdot <nat:374> + <nat:430> \cdot <var:I> + <var:S> \cdot <nat:214> $ is even . \end{theorem} \begin{proof} Additionally , the leading terms $ <nat:470> $ , $ <nat:184> $ , $ <nat:480> $ , $ <nat:374> $ , $ <nat:430> $ , in addition to $ <nat:214> $ are known as even . Consequently , the pairs $ <nat:470> \cdot <var:i> $ , $ <var:W> \cdot <nat:184> $ , $ <nat:480> \cdot <var:H> $ , $ <var:P> \cdot <nat:374> $ , $ <nat:430> \cdot <var:I> $ , and $ <var:S> \cdot <nat:214> $ must be even also . Notice the addition of an even whole number with an even number is guaranteed to be even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:i> <var:W> <var:H> <var:P> <var:I> <var:S> : nat , Nat . even ( <nat:470> * <var:i> + <nat:184> * <var:W> + <nat:480> * <var:H> + <nat:374> * <var:P> + <nat:430> * <var:I> + <nat:214> * <var:S> + <nat:304> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:470> = true ) . { auto . } assert ( <genH> : Nat . even <nat:184> = true ) . { auto . } assert ( <genH> : Nat . even <nat:480> = true ) . { auto . } assert ( <genH> : Nat . even <nat:374> = true ) . { auto . } assert ( <genH> : Nat . even <nat:430> = true ) . { auto . } assert ( <genH> : Nat . even <nat:214> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:470> * <var:i> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:184> * <var:W> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:480> * <var:H> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:374> * <var:P> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:430> * <var:I> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:214> * <var:S> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 