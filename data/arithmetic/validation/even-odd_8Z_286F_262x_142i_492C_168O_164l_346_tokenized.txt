\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:l> * <nat:164> + <nat:168> * <var:O> + <nat:346> + <var:i> * <nat:142> + <var:x> * <nat:262> + <nat:286> * <var:F> + <nat:492> * <var:C> + <nat:8> * <var:Z> $ will be even . \end{theorem} \begin{proof} Observe that $ <nat:346> $ is guaranteed to be even . We demonstrate this main result is true . The natural numbers $ <nat:142> $ in addition to $ <nat:164> $ must be even naturals . Thus , the pairs $ <nat:142> <var:i> $ and likewise $ <nat:164> <var:l> $ will be even at the same time . Furthermore , the product $ <var:x> <nat:262> $ is known as even as a consequence that the natural number $ <nat:262> $ is trivially an even element of $ \mathbb{Z}^+ $ . Building on , we know the product $ <nat:286> <var:F> $ is even . This is proven since multiplying of an even whole number and some number is fundamentally an even number , which must be true as a consequence that the number $ <nat:286> $ is clearly even . Adding on , we know the terms $ <nat:492> <var:C> $ in addition to $ <nat:8> <var:Z> $ are clearly even numbers in $ \mathbb{N} $ since the leading terms $ <nat:492> $ and also $ <nat:8> $ are known as by their very nature even natural numbers . We know that the term $ <nat:168> <var:O> $ is trivially an even natural number . This claim holds as a consequence that the leading term $ <nat:168> $ is guaranteed to be an even element of $ \mathbb{N} $ . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:l> <var:O> <var:i> <var:x> <var:F> <var:C> <var:Z> : nat , Nat . even ( <nat:164> * <var:l> + <nat:168> * <var:O> + <nat:142> * <var:i> + <nat:262> * <var:x> + <nat:286> * <var:F> + <nat:492> * <var:C> + <nat:8> * <var:Z> + <nat:346> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:346> = true ) . { auto . } assert ( <genH> : Nat . even <nat:142> = true ) . { auto . } assert ( <genH> : Nat . even <nat:164> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:142> * <var:i> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:164> * <var:l> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:262> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:262> * <var:x> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:286> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:286> * <var:F> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:492> = true ) . { auto . } assert ( <genH> : Nat . even <nat:8> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:492> * <var:C> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:8> * <var:Z> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:168> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:168> * <var:O> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 