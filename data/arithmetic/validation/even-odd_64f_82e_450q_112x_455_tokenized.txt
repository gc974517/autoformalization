\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Given every natural numbers $ <var:q> $ , $ <var:x> $ , $ <var:e> $ , and $ <var:f> $ $ <nat:455> + <nat:82> * <var:e> + <var:q> * <nat:450> + <nat:112> * <var:x> + <var:f> * <nat:64> $ will be odd . \end{theorem} \begin{proof} The product $ <nat:82> * <var:e> $ is clearly even from the knowledge the product of an even natural and some natural will be an even element of $ \mathbb{Z}^+ $ , which holds as a consequence that the coefficient $ <nat:82> $ is trivially even . On top of this , the product $ <var:f> * <nat:64> $ is trivially an even positive integer . This is proven since the multiplication between an even element of $ \mathbb{N} $ with a number is even . This fact is true since the integer $ <nat:64> $ is even . The leading term $ <nat:450> $ is guaranteed to be an even number in $ \mathbb{Z}^+ $ . In consequence , the product $ <nat:450> * <var:q> $ will be even as well . Building on , take note the integer $ <nat:112> $ is known to be an even whole number . Then , the product $ <var:x> * <nat:112> $ must be even in addition . The summation between even naturals with an odd integer is an odd natural number . In consequence , the formula $ <var:f> \cdot <nat:64> + <var:e> \cdot <nat:82> + <var:q> \cdot <nat:450> + <nat:455> + <var:x> \cdot <nat:112> $ by itself is guaranteed to be odd . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:q> <var:x> <var:e> <var:f> : nat , Nat . odd ( <nat:82> * <var:e> + <nat:450> * <var:q> + <nat:112> * <var:x> + <nat:64> * <var:f> + <nat:455> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:82> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:82> * <var:e> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:64> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:64> * <var:f> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:450> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:450> * <var:q> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:112> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:112> * <var:x> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 