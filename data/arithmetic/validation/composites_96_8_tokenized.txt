\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Take $ <var:I> $ , $ <var:f> $ , $ <var:V> $ , $ <var:n> $ , $ <var:O> $ , $ <var:a> $ , $ <var:D> $ , $ <var:k> \in \mathbb{Z}^+ $ such that $ <var:I> $ , $ <var:D> $ , $ <var:a> $ , $ <var:V> $ , $ <var:O> $ , $ <var:n> $ , $ <var:f> $ and $ <var:k> $ larger than or equal to <nat:2> plus satisfying the condition that the whole number <nat:1900800> is the multiplication of positive integers $ <var:I> $ , $ <var:f> $ , $ <var:V> $ , $ <var:n> $ , $ <var:O> $ , $ <var:a> $ , $ <var:D> $ and $ <var:k> \in \mathbb{N} $ . \end{theorem} \begin{proof} Allow $ <var:a> = <nat:2> $ , $ <var:f> = <nat:11> $ , $ <var:V> = <nat:6> $ , $ <var:D> = <nat:10> $ , $ <var:O> = <nat:5> $ , $ <var:I> = <nat:12> $ , $ <var:k> = <nat:8> $ , and $ <var:n> = <nat:3> $ . We confirm our claim is true considering $ <nat:3> $ , $ <nat:2> $ , $ <nat:5> $ , $ <nat:8> $ , $ <nat:10> $ , $ <nat:12> $ , $ <nat:11> $ , and $ <nat:6> \geq <nat:2> $ . Therefore , $ <var:n> * <var:O> * <var:k> * <var:D> * <var:V> * <var:a> * <var:I> * <var:f> = <nat:1900800> $ is verified . \end{proof} \end{document} 
~
Require Import Lia . Theorem <genP:1> : exists <var:I> <var:f> <var:V> <var:n> <var:O> <var:a> <var:D> <var:k> : nat , ( <var:I> >= <nat:2> ) /\ ( <var:D> >= <nat:2> ) /\ ( <var:a> >= <nat:2> ) /\ ( <var:V> >= <nat:2> ) /\ ( <var:O> >= <nat:2> ) /\ ( <var:n> >= <nat:2> ) /\ ( <var:f> >= <nat:2> ) /\ ( <var:k> >= <nat:2> ) /\ ( <nat:1900800> = <var:I> * <var:f> * <var:V> * <var:n> * <var:O> * <var:a> * <var:D> * <var:k> ) . Proof . exists <nat:12> . exists <nat:11> . exists <nat:6> . exists <nat:3> . exists <nat:5> . exists <nat:2> . exists <nat:10> . exists <nat:8> . assert ( <genH> : <nat:3> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:2> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:5> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:8> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:10> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:12> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:11> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:6> >= <nat:2> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 