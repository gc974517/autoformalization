\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:831600> $ is equal to $ <var:f> \times <var:Q> \times <var:M> \times <var:a> \times <var:p> \times <var:H> \times <var:x> \times <var:m> $ given $ <var:M> $ , $ <var:f> $ , $ <var:Q> $ , $ <var:a> $ , $ <var:m> $ , $ <var:x> $ , $ <var:p> $ , $ <var:H> \in \mathbb{Z}^+ $ where $ <var:M> $ , $ <var:f> $ , $ <var:a> $ , $ <var:p> $ , $ <var:x> $ , $ <var:Q> $ , $ <var:H> $ , $ <var:m> $ greater than or equal to <nat:2> . \end{theorem} \begin{proof} Allow $ <var:M> = <nat:2> $ , $ <var:p> = <nat:3> $ , $ <var:m> = <nat:7> $ , $ <var:a> = <nat:4> $ , $ <var:x> = <nat:10> $ , $ <var:f> = <nat:11> $ , $ <var:H> = <nat:9> $ , and $ <var:Q> = <nat:5> $ . Similarly notice that $ <nat:4> $ , $ <nat:2> $ , $ <nat:9> $ , $ <nat:10> $ , $ <nat:5> $ , $ <nat:11> $ , $ <nat:7> $ , and $ <nat:3> $ are larger than or equivalent to <nat:2> . This gives the proposition holds . \end{proof} \end{document} 
~
Require Import Lia . Theorem <genP:1> : exists <var:M> <var:f> <var:Q> <var:a> <var:m> <var:x> <var:p> <var:H> : nat , ( <nat:831600> = <var:f> * <var:Q> * <var:M> * <var:a> * <var:p> * <var:H> * <var:x> * <var:m> ) /\ ( <var:M> >= <nat:2> ) /\ ( <var:f> >= <nat:2> ) /\ ( <var:a> >= <nat:2> ) /\ ( <var:p> >= <nat:2> ) /\ ( <var:x> >= <nat:2> ) /\ ( <var:Q> >= <nat:2> ) /\ ( <var:H> >= <nat:2> ) /\ ( <var:m> >= <nat:2> ) . Proof . exists <nat:2> . exists <nat:11> . exists <nat:5> . exists <nat:4> . exists <nat:7> . exists <nat:10> . exists <nat:3> . exists <nat:9> . assert ( <genH> : <nat:4> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:2> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:9> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:10> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:5> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:11> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:7> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:3> >= <nat:2> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 