\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \newtheorem{definition}{Definition} \begin{document} \begin{definition} Say that $ <var:O> $ is a <def:nine-composite> positive integer supposing that given some $ <var:T> $ , $ <var:H> $ , $ <var:a> $ , $ <var:g> $ , $ <var:r> $ , $ <var:q> $ , $ <var:W> $ , $ <var:s> $ , $ <var:P> \in \mathbb{Z}^+ $ we get $ <var:W> \cdot <var:g> \cdot <var:a> \cdot <var:r> \cdot <var:s> \cdot <var:P> \cdot <var:T> \cdot <var:q> \cdot <var:H> = <var:O> $ with some natural number $ <var:O> $ . \end{definition} \begin{theorem} $ <var:O> = <nat:29937600> $ is a <def:nine-composite> number . \end{theorem} \begin{proof} Remember a <def:nine-composite> integer is the multiplication of whole numbers $ <var:s> $ , $ <var:g> $ , $ <var:W> $ , $ <var:P> $ , $ <var:T> $ , $ <var:H> $ , $ <var:r> $ , $ <var:a> $ , and $ <var:q> $ such that $ <var:q> $ , $ <var:H> $ , $ <var:W> $ , $ <var:g> $ , $ <var:s> $ , $ <var:P> $ , $ <var:T> $ , $ <var:a> $ , and $ <var:r> > <nat:1> $ . Take $ <var:q> = <nat:11> $ , $ <var:g> = <nat:7> $ , $ <var:W> = <nat:9> $ , $ <var:H> = <nat:6> $ , $ <var:P> = <nat:4> $ , $ <var:T> = <nat:3> $ , $ <var:a> = <nat:10> $ , $ <var:r> = <nat:5> $ and $ <var:s> = <nat:12> $ . We justify <nat:29937600> is a <def:nine-composite> positive integer considering $ <nat:3> * <nat:6> * <nat:7> * <nat:12> * <nat:4> * <nat:11> * <nat:10> * <nat:9> * <nat:5> = <nat:29937600> $ . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:nine-composite> ( <var:O> : nat ) := exists <var:T> <var:H> <var:a> <var:g> <var:r> <var:q> <var:W> <var:s> <var:P> : nat , ( <var:W> * <var:g> * <var:a> * <var:r> * <var:s> * <var:P> * <var:T> * <var:q> * <var:H> = <var:O> ) . Theorem <genP:1> : <def:nine-composite> <nat:29937600> . Proof . unfold <def:nine-composite> . exists <nat:3> . exists <nat:6> . exists <nat:10> . exists <nat:7> . exists <nat:5> . exists <nat:11> . exists <nat:9> . exists <nat:12> . exists <nat:4> . repeat split . all : lia . Qed . 