\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:E> <nat:86> + <nat:198> + <var:k> <nat:310> + <nat:2> <var:G> + <var:c> <nat:196> + <var:X> <nat:270> + <var:S> <nat:436> + <var:s> <nat:472> + <nat:416> <var:o> $ will be even with some terms $ <var:s> $ , $ <var:c> $ , $ <var:X> $ , $ <var:E> $ , $ <var:S> $ , $ <var:G> $ , $ <var:o> $ , and $ <var:k> $ . \end{theorem} \begin{proof} Our claim must be true from the knowledge $ <nat:196> \cdot <var:c> + <var:S> \cdot <nat:436> + <var:E> \cdot <nat:86> + <nat:472> \cdot <var:s> + <nat:270> \cdot <var:X> + <var:G> \cdot <nat:2> + <var:o> \cdot <nat:416> + <var:k> \cdot <nat:310> $ is even . Additionally , see that the integers $ <nat:196> $ , $ <nat:436> $ , $ <nat:86> $ , $ <nat:472> $ , $ <nat:270> $ , $ <nat:2> $ , $ <nat:416> $ , and likewise $ <nat:310> $ are guaranteed to be even . Therefore , the pairs $ <var:c> \times <nat:196> $ , $ <nat:436> \times <var:S> $ , $ <var:E> \times <nat:86> $ , $ <nat:472> \times <var:s> $ , $ <var:X> \times <nat:270> $ , $ <var:G> \times <nat:2> $ , $ <nat:416> \times <var:o> $ , plus $ <var:k> \times <nat:310> $ will be even additionally . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:s> <var:c> <var:X> <var:E> <var:S> <var:G> <var:o> <var:k> : nat , Nat . even ( <nat:86> * <var:E> + <nat:310> * <var:k> + <nat:2> * <var:G> + <nat:196> * <var:c> + <nat:270> * <var:X> + <nat:436> * <var:S> + <nat:472> * <var:s> + <nat:416> * <var:o> + <nat:198> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:196> = true ) . { auto . } assert ( <genH> : Nat . even <nat:436> = true ) . { auto . } assert ( <genH> : Nat . even <nat:86> = true ) . { auto . } assert ( <genH> : Nat . even <nat:472> = true ) . { auto . } assert ( <genH> : Nat . even <nat:270> = true ) . { auto . } assert ( <genH> : Nat . even <nat:2> = true ) . { auto . } assert ( <genH> : Nat . even <nat:416> = true ) . { auto . } assert ( <genH> : Nat . even <nat:310> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:196> * <var:c> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:436> * <var:S> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:86> * <var:E> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:472> * <var:s> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:270> * <var:X> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:2> * <var:G> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:416> * <var:o> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:310> * <var:k> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:86> * <var:E> + <nat:310> * <var:k> + <nat:2> * <var:G> + <nat:196> * <var:c> + <nat:270> * <var:X> + <nat:436> * <var:S> + <nat:472> * <var:s> + <nat:416> * <var:o> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . even_add . rewrite <genH> . auto . Qed . 