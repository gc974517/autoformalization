\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} The number <nat:3801600> is the product between positive integers $ <var:v> $ , $ <var:B> $ , $ <var:c> $ , $ <var:m> $ , $ <var:N> $ , $ <var:j> $ , $ <var:X> $ and $ <var:s> \in \mathbb{Z}^+ $ so that $ <var:c> $ , $ <var:B> $ , $ <var:s> $ , $ <var:X> $ , $ <var:N> $ , $ <var:j> $ , $ <var:m> $ , and $ <var:v> > <nat:1> $ . \end{theorem} \begin{proof} Take $ <var:v> = <nat:10> $ , $ <var:B> = <nat:6> $ , $ <var:m> = <nat:11> $ , $ <var:N> = <nat:8> $ , $ <var:j> = <nat:3> $ , $ <var:c> = <nat:12> $ , $ <var:X> = <nat:4> $ , and $ <var:s> = <nat:5> $ . Plus notice $ <nat:11> $ , $ <nat:8> $ , $ <nat:3> $ , $ <nat:6> $ , $ <nat:5> $ , $ <nat:4> $ , $ <nat:12> $ and $ <nat:10> $ are greater than <nat:1> . \end{proof} \end{document} 
~
Require Import Lia . Theorem <genP:1> : exists <var:v> <var:B> <var:c> <var:m> <var:N> <var:j> <var:X> <var:s> : nat , ( <nat:3801600> = <var:v> * <var:B> * <var:c> * <var:m> * <var:N> * <var:j> * <var:X> * <var:s> ) /\ ( <var:c> > <nat:1> ) /\ ( <var:B> > <nat:1> ) /\ ( <var:s> > <nat:1> ) /\ ( <var:X> > <nat:1> ) /\ ( <var:N> > <nat:1> ) /\ ( <var:j> > <nat:1> ) /\ ( <var:m> > <nat:1> ) /\ ( <var:v> > <nat:1> ) . Proof . exists <nat:10> . exists <nat:6> . exists <nat:12> . exists <nat:11> . exists <nat:8> . exists <nat:3> . exists <nat:4> . exists <nat:5> . assert ( <genH> : <nat:11> > <nat:1> ) . { lia . } assert ( <genH> : <nat:8> > <nat:1> ) . { lia . } assert ( <genH> : <nat:3> > <nat:1> ) . { lia . } assert ( <genH> : <nat:6> > <nat:1> ) . { lia . } assert ( <genH> : <nat:5> > <nat:1> ) . { lia . } assert ( <genH> : <nat:4> > <nat:1> ) . { lia . } assert ( <genH> : <nat:12> > <nat:1> ) . { lia . } assert ( <genH> : <nat:10> > <nat:1> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 