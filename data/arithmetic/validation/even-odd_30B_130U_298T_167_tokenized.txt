\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:U> * <nat:130> + <var:B> * <nat:30> + <nat:167> + <var:T> * <nat:298> $ will be odd using any positive terms $ <var:U> $ , $ <var:T> $ , and $ <var:B> $ . \end{theorem} \begin{proof} See that $ <var:B> \times <nat:30> $ is trivially even . This claim holds by reason that taking the product between an even natural with any natural is an even whole number . This is proven as a consequence that the integer $ <nat:30> $ is known to be an even natural number . Furthermore , notice that the integer $ <nat:130> $ is guaranteed to be an even positive integer . Consequently , the product $ <var:U> \times <nat:130> $ is even additionally . The term $ <var:T> \times <nat:298> $ is obviously an even element of $ \mathbb{N} $ . This claim must be true by reason that taking the product between an even positive integer and any integer must be even , which is proven as a consequence that the natural number $ <nat:298> $ is clearly even . It can be verified that our lemma must be true . We know $ <nat:167> $ is known to be an odd number . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:U> <var:T> <var:B> : nat , Nat . odd ( <nat:130> * <var:U> + <nat:30> * <var:B> + <nat:298> * <var:T> + <nat:167> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:30> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:30> * <var:B> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:130> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:130> * <var:U> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:298> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:298> * <var:T> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . odd <nat:167> = true ) . { auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 