\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:140> <var:s> + <nat:498> <var:H> + <nat:478> <var:l> + <var:r> <nat:338> + <nat:62> <var:n> + <nat:280> + <nat:166> <var:d> + <nat:374> <var:c> $ must be even taking all $ <var:s> $ , $ <var:l> $ , $ <var:c> $ , $ <var:d> $ , $ <var:H> $ , $ <var:r> $ , and $ <var:n> $ . \end{theorem} \begin{proof} The expression $ <nat:140> \cdot <var:s> + <nat:338> \cdot <var:r> + <nat:166> \cdot <var:d> + <nat:478> \cdot <var:l> + <nat:498> \cdot <var:H> + <nat:62> \cdot <var:n> + <var:c> \cdot <nat:374> $ is trivially even . The coefficient $ <nat:62> $ is known to be even . Consequently , the product $ <nat:62> <var:n> $ will be even too . The coefficient $ <nat:478> $ is known as an even positive integer . Hence , $ <nat:478> <var:l> $ must be even too . Building on , the number $ <nat:338> $ is guaranteed to be even . So , the product $ <var:r> <nat:338> $ will be even additionally . What's more , the integer $ <nat:498> $ is obviously even . Thus , $ <var:H> <nat:498> $ will be even also . Likewise , recall the pair $ <var:s> <nat:140> $ is an even natural . This must be true by reason that taking the product of an even number in $ \mathbb{N} $ and some number in $ \mathbb{N} $ will be even , which must be true because the coefficient $ <nat:140> $ is known as even . What's more , take note the term $ <nat:374> <var:c> $ is even from the knowledge the coefficient $ <nat:374> $ is known as even . Further , the term $ <nat:166> <var:d> $ is trivially even . This must be true from the fact the product between an even natural and a natural number will be by its very nature an even number and likewise the whole number $ <nat:166> $ is guaranteed to be trivially an even number in $ \mathbb{N} $ . As a consequence that multiplying of even elements of $ \mathbb{N} $ with a whole number will be by definition an even natural number this proposition must be true . See the adding between an even natural number with an even number in $ \mathbb{Z}^+ $ is guaranteed to be even . Remember that $ <nat:280> $ is trivially even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:s> <var:l> <var:c> <var:d> <var:H> <var:r> <var:n> : nat , Nat . even ( <nat:140> * <var:s> + <nat:498> * <var:H> + <nat:478> * <var:l> + <nat:338> * <var:r> + <nat:62> * <var:n> + <nat:166> * <var:d> + <nat:374> * <var:c> + <nat:280> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:62> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:62> * <var:n> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:478> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:478> * <var:l> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:338> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:338> * <var:r> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:498> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:498> * <var:H> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:140> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:140> * <var:s> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:374> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:374> * <var:c> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:166> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:166> * <var:d> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:140> * <var:s> + <nat:498> * <var:H> + <nat:478> * <var:l> + <nat:338> * <var:r> + <nat:62> * <var:n> + <nat:166> * <var:d> + <nat:374> * <var:c> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . even_add . assert ( <genH> : Nat . even <nat:280> = true ) . { auto . } rewrite <genH> . rewrite <genH> . auto . Qed . 