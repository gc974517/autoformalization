\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \newtheorem{definition}{Definition} \begin{document} \begin{definition} Whenever we get $ <var:o> \times <var:N> \times <var:Q> \times <var:M> \times <var:y> \times <var:I> \times <var:m> = <var:C> $ assuming $ <var:C> \in \mathbb{Z}^+ $ plus such that $ <var:M> $ , $ <var:Q> $ , $ <var:o> $ , $ <var:I> $ , $ <var:N> $ , $ <var:m> $ , and $ <var:y> \geq <nat:2> $ given some $ <var:Q> $ , $ <var:o> $ , $ <var:y> $ , $ <var:m> $ , $ <var:I> $ , $ <var:N> $ , $ <var:M> \in \mathbb{Z}^+ $ , then we denote that $ <var:C> $ is a <def:seven-composite> number . \end{definition} \begin{theorem} The number <nat:316800> is a <def:seven-composite> whole number . \end{theorem} \begin{proof} We present $ <var:o> \cdot <var:Q> \cdot <var:m> \cdot <var:N> \cdot <var:M> \cdot <var:y> \cdot <var:I> = <nat:316800> $ . Note that $ <nat:10> $ , $ <nat:5> $ , $ <nat:9> $ , $ <nat:2> $ , $ <nat:11> $ , $ <nat:4> $ , and $ <nat:8> $ are more than or equal to <nat:2> . Additionally note that still $ <nat:316800> = <nat:10> \times <nat:2> \times <nat:11> \times <nat:9> \times <nat:4> \times <nat:5> \times <nat:8> = <var:M> \times <var:Q> \times <var:I> \times <var:N> \times <var:y> \times <var:o> \times <var:m> $ . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:seven-composite> ( <var:C> : nat ) := exists <var:Q> <var:o> <var:y> <var:m> <var:I> <var:N> <var:M> : nat , ( <var:o> * <var:N> * <var:Q> * <var:M> * <var:y> * <var:I> * <var:m> = <var:C> ) /\ ( <var:M> >= <nat:2> ) /\ ( <var:Q> >= <nat:2> ) /\ ( <var:o> >= <nat:2> ) /\ ( <var:I> >= <nat:2> ) /\ ( <var:N> >= <nat:2> ) /\ ( <var:m> >= <nat:2> ) /\ ( <var:y> >= <nat:2> ) . Theorem <genP:1> : <def:seven-composite> <nat:316800> . Proof . unfold <def:seven-composite> . assert ( <genH> : <nat:10> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:5> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:9> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:2> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:11> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:4> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:8> >= <nat:2> ) . { lia . } exists <nat:2> . exists <nat:5> . exists <nat:4> . exists <nat:8> . exists <nat:11> . exists <nat:9> . exists <nat:10> . repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 