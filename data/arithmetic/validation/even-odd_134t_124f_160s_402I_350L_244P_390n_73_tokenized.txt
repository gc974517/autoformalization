\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:I> \times <nat:402> + <nat:134> \times <var:t> + <var:P> \times <nat:244> + <nat:390> \times <var:n> + <var:f> \times <nat:124> + <var:L> \times <nat:350> + <nat:73> + <nat:160> \times <var:s> $ will be odd with integers $ <var:P> $ , $ <var:t> $ , $ <var:I> $ , $ <var:n> $ , $ <var:s> $ , $ <var:f> $ , and $ <var:L> $ . \end{theorem} \begin{proof} We demonstrate $ <var:t> <nat:134> + <var:f> <nat:124> + <nat:160> <var:s> + <var:I> <nat:402> + <var:L> <nat:350> + <nat:244> <var:P> + <nat:73> + <var:n> <nat:390> $ is odd . Recall that the adding between even numbers in $ \mathbb{Z}^+ $ with an odd whole number is odd . The term $ <var:f> \cdot <nat:124> $ is even as a consequence that taking the product of an even number in $ \mathbb{Z}^+ $ and an arbitrary number in $ \mathbb{N} $ is guaranteed to be even . See the pairs $ <nat:160> \cdot <var:s> $ , $ <var:L> \cdot <nat:350> $ , $ <nat:402> \cdot <var:I> $ , and likewise $ <var:t> \cdot <nat:134> $ must be even . The term $ <nat:244> \cdot <var:P> $ is guaranteed to be even . Adding on , the term $ <nat:390> \cdot <var:n> $ is an even positive integer . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:P> <var:t> <var:I> <var:n> <var:s> <var:f> <var:L> : nat , Nat . odd ( <nat:402> * <var:I> + <nat:134> * <var:t> + <nat:244> * <var:P> + <nat:390> * <var:n> + <nat:124> * <var:f> + <nat:350> * <var:L> + <nat:160> * <var:s> + <nat:73> ) = true . Proof . intros . rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . assert ( <genH> : Nat . even ( <nat:124> * <var:f> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:160> * <var:s> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:350> * <var:L> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:402> * <var:I> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:134> * <var:t> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:244> * <var:P> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:390> * <var:n> ) = true ) . { rewrite Nat . even_mul . auto . } rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 