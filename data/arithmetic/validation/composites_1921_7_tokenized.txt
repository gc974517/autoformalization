\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} There are $ <var:C> $ , $ <var:F> $ , $ <var:A> $ , $ <var:m> $ , $ <var:d> $ , $ <var:k> $ , $ <var:p> \in \mathbb{N} $ satisfying the condition that $ <var:k> $ , $ <var:p> $ , $ <var:m> $ , $ <var:A> $ , $ <var:F> $ , $ <var:d> $ , and $ <var:C> $ greater than or equivalent to <nat:2> plus where the positive integer <nat:997920> is the product between numbers $ <var:C> $ , $ <var:F> $ , $ <var:A> $ , $ <var:m> $ , $ <var:d> $ , $ <var:k> $ , and $ <var:p> \in \mathbb{N} $ . \end{theorem} \begin{proof} Allow $ <var:k> = <nat:9> $ , $ <var:m> = <nat:3> $ , $ <var:A> = <nat:11> $ , $ <var:d> = <nat:7> $ , $ <var:p> = <nat:4> $ , $ <var:F> = <nat:10> $ and $ <var:C> = <nat:12> $ . Observe $ <nat:9> $ , $ <nat:4> $ , $ <nat:7> $ , $ <nat:11> $ , $ <nat:10> $ , $ <nat:3> $ , and $ <nat:12> $ are larger than or equivalent to <nat:2> . Moreover note that moreover $ <nat:997920> = <nat:9> \times <nat:4> \times <nat:10> \times <nat:12> \times <nat:3> \times <nat:11> \times <nat:7> = <var:k> \times <var:p> \times <var:F> \times <var:C> \times <var:m> \times <var:A> \times <var:d> $ . \end{proof} \end{document} 
~
Require Import Lia . Theorem <genP:1> : exists <var:C> <var:F> <var:A> <var:m> <var:d> <var:k> <var:p> : nat , ( <var:k> >= <nat:2> ) /\ ( <var:p> >= <nat:2> ) /\ ( <var:m> >= <nat:2> ) /\ ( <var:A> >= <nat:2> ) /\ ( <var:F> >= <nat:2> ) /\ ( <var:d> >= <nat:2> ) /\ ( <var:C> >= <nat:2> ) /\ ( <nat:997920> = <var:C> * <var:F> * <var:A> * <var:m> * <var:d> * <var:k> * <var:p> ) . Proof . exists <nat:12> . exists <nat:10> . exists <nat:11> . exists <nat:3> . exists <nat:7> . exists <nat:9> . exists <nat:4> . assert ( <genH> : <nat:9> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:4> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:7> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:11> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:10> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:3> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:12> >= <nat:2> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 