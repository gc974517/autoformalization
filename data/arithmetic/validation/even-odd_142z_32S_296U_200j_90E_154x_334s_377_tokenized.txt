\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Taking any natural numbers $ <var:S> $ , $ <var:E> $ , $ <var:U> $ , $ <var:z> $ , $ <var:s> $ , $ <var:x> $ , and $ <var:j> $ $ <nat:142> * <var:z> + <var:S> * <nat:32> + <nat:296> * <var:U> + <nat:200> * <var:j> + <var:E> * <nat:90> + <nat:377> + <var:x> * <nat:154> + <nat:334> * <var:s> $ is odd . \end{theorem} \begin{proof} The products $ <nat:296> \cdot <var:U> $ , $ <var:s> \cdot <nat:334> $ , $ <var:E> \cdot <nat:90> $ , plus $ <nat:154> \cdot <var:x> $ are obviously even numbers in $ \mathbb{Z}^+ $ . Remember that the term $ <nat:200> \cdot <var:j> $ is obviously even . In addition to this , notice that the product $ <nat:32> \cdot <var:S> $ is trivially an even number in $ \mathbb{Z}^+ $ . We know the pair $ <nat:142> \cdot <var:z> $ is known to be even from the fact taking the product between an even number and some natural number will be by itself an even element of $ \mathbb{N} $ . Because the totaling between an even integer with an odd whole number must be odd , as a consequence our claim is proven . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:S> <var:E> <var:U> <var:z> <var:s> <var:x> <var:j> : nat , Nat . odd ( <nat:142> * <var:z> + <nat:32> * <var:S> + <nat:296> * <var:U> + <nat:200> * <var:j> + <nat:90> * <var:E> + <nat:154> * <var:x> + <nat:334> * <var:s> + <nat:377> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:296> * <var:U> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:334> * <var:s> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:90> * <var:E> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:154> * <var:x> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:200> * <var:j> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:32> * <var:S> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:142> * <var:z> ) = true ) . { rewrite Nat . even_mul . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 