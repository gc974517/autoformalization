\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:126> \times <var:A> + <nat:244> \times <var:L> + <nat:175> + <nat:236> \times <var:R> + <nat:232> \times <var:m> + <var:d> \times <nat:496> + <nat:386> \times <var:f> $ must be odd given all integers $ <var:d> $ , $ <var:f> $ , $ <var:m> $ , $ <var:L> $ , $ <var:A> $ , and $ <var:R> $ . \end{theorem} \begin{proof} It can be verified that the summation $ <nat:175> + <var:A> * <nat:126> + <nat:244> * <var:L> + <nat:232> * <var:m> + <var:f> * <nat:386> + <var:R> * <nat:236> + <var:d> * <nat:496> $ must be odd . It can be checked that that $ <var:L> * <nat:244> + <var:m> * <nat:232> + <nat:496> * <var:d> + <var:R> * <nat:236> + <nat:386> * <var:f> + <var:A> * <nat:126> $ is even . The pairs $ <var:d> <nat:496> $ , $ <nat:232> <var:m> $ , $ <nat:126> <var:A> $ , in addition to $ <var:L> <nat:244> $ will be even from the knowledge multiplying of an even natural number with some number in $ \mathbb{N} $ is even . See the product $ <var:R> <nat:236> $ is an even number in $ \mathbb{Z}^+ $ . This must be true from the knowledge the product between an even natural and an arbitrary element of $ \mathbb{Z}^+ $ will be an even natural . What's more , the product $ <nat:386> <var:f> $ is known as even by reason that the product of an even element of $ \mathbb{N} $ and a natural is even . As a consequence that the product between an even number with a element of $ \mathbb{N} $ must be in itself an even positive integer the theorem is true . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:d> <var:f> <var:m> <var:L> <var:A> <var:R> : nat , Nat . odd ( <nat:126> * <var:A> + <nat:244> * <var:L> + <nat:236> * <var:R> + <nat:232> * <var:m> + <nat:496> * <var:d> + <nat:386> * <var:f> + <nat:175> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:496> * <var:d> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:232> * <var:m> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:126> * <var:A> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:244> * <var:L> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:236> * <var:R> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:386> * <var:f> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:126> * <var:A> + <nat:244> * <var:L> + <nat:236> * <var:R> + <nat:232> * <var:m> + <nat:496> * <var:d> + <nat:386> * <var:f> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . auto . Qed . 