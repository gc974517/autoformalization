\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:8> \times <var:t> + <nat:317> + <nat:88> \times <var:s> + <var:y> \times <nat:218> + <nat:426> \times <var:V> + <var:B> \times <nat:196> + <nat:10> \times <var:h> $ will be odd with any $ <var:B> $ , $ <var:h> $ , $ <var:V> $ , $ <var:s> $ , $ <var:y> $ , and $ <var:t> \in \mathbb{N} $ . \end{theorem} \begin{proof} The lemma must be true from the knowledge $ <var:V> \cdot <nat:426> + <var:y> \cdot <nat:218> + <var:s> \cdot <nat:88> + <var:B> \cdot <nat:196> + <var:h> \cdot <nat:10> + <nat:8> \cdot <var:t> $ is known as even . The pair $ <nat:8> \times <var:t> $ is clearly an even number . In addition , $ <var:B> \times <nat:196> $ is obviously even . This must be true since the product of an even number with any natural must be by itself an even natural . We know that the product $ <var:s> \times <nat:88> $ is clearly an even positive integer from the fact multiplying between an even whole number and some positive integer is even . Notice the products $ <var:y> \times <nat:218> $ and moreover $ <var:V> \times <nat:426> $ are clearly even numbers . This is true as a consequence that the multiplication of an even number in $ \mathbb{N} $ and any element of $ \mathbb{Z}^+ $ must be even . On top of this , $ <var:h> \times <nat:10> $ is trivially even . From the fact the addition of even numbers in $ \mathbb{N} $ and an even element of $ \mathbb{N} $ will be even , and also by reason that multiplying between even elements of $ \mathbb{Z}^+ $ and an arbitrary whole number is guaranteed to be even . We prove $ <nat:88> * <var:s> + <var:B> * <nat:196> + <nat:317> + <var:V> * <nat:426> + <var:h> * <nat:10> + <nat:8> * <var:t> + <nat:218> * <var:y> $ is guaranteed to be odd . Observe that $ <nat:317> $ is an odd natural number . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:B> <var:h> <var:V> <var:s> <var:y> <var:t> : nat , Nat . odd ( <nat:8> * <var:t> + <nat:88> * <var:s> + <nat:218> * <var:y> + <nat:426> * <var:V> + <nat:196> * <var:B> + <nat:10> * <var:h> + <nat:317> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:8> * <var:t> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:196> * <var:B> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:88> * <var:s> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:218> * <var:y> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:426> * <var:V> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:10> * <var:h> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:8> * <var:t> + <nat:88> * <var:s> + <nat:218> * <var:y> + <nat:426> * <var:V> + <nat:196> * <var:B> + <nat:10> * <var:h> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } assert ( <genH> : Nat . odd <nat:317> = true ) . { auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . rewrite <genH> . auto . Qed . 