\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Given any whole numbers $ <var:P> $ , $ <var:m> $ , $ <var:A> $ , $ <var:a> $ , $ <var:V> $ , and $ <var:I> $ $ <nat:358> \times <var:I> + <nat:450> \times <var:a> + <nat:2> \times <var:V> + <var:P> \times <nat:52> + <nat:425> + <nat:194> \times <var:A> + <var:m> \times <nat:458> $ must be odd . \end{theorem} \begin{proof} Remember that the summing of even elements of $ \mathbb{N} $ concurrently with an odd element of $ \mathbb{N} $ is trivially an odd integer . See the product $ <nat:358> <var:I> $ is an even integer from the fact the multiplication between an even positive integer with an arbitrary whole number is guaranteed to be trivially an even integer , which is true as a consequence that the natural number $ <nat:358> $ is guaranteed to be an even number . On top of this , $ <nat:194> <var:A> $ is known as an even number in $ \mathbb{Z}^+ $ . This is true since the number $ <nat:194> $ is known as fundamentally an even element of $ \mathbb{N} $ . We know that the coefficient $ <nat:2> $ is known as an even whole number . As a consequence , $ <nat:2> <var:V> $ is even in addition . Take note that the integer $ <nat:52> $ is obviously even . For this reason , the product $ <var:P> <nat:52> $ is guaranteed to be even at the same time . Recall the coefficient $ <nat:450> $ is obviously even . Hence , $ <var:a> <nat:450> $ is even in addition . In addition to this , the leading term $ <nat:458> $ is even . So , $ <nat:458> <var:m> $ is guaranteed to be even at the same time . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:P> <var:m> <var:A> <var:a> <var:V> <var:I> : nat , Nat . odd ( <nat:358> * <var:I> + <nat:450> * <var:a> + <nat:2> * <var:V> + <nat:52> * <var:P> + <nat:194> * <var:A> + <nat:458> * <var:m> + <nat:425> ) = true . Proof . intros . rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . assert ( <genH> : Nat . even <nat:358> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:358> * <var:I> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:194> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:194> * <var:A> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:2> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:2> * <var:V> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:52> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:52> * <var:P> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:450> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:450> * <var:a> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:458> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:458> * <var:m> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 