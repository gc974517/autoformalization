\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:238> \times <var:I> + <nat:388> \times <var:v> + <var:d> \times <nat:286> + <nat:301> + <var:A> \times <nat:60> + <nat:492> \times <var:B> + <nat:424> \times <var:W> + <var:a> \times <nat:338> $ will be odd . \end{theorem} \begin{proof} The result is true since $ <nat:338> \cdot <var:a> + <var:d> \cdot <nat:286> + <nat:424> \cdot <var:W> + <var:B> \cdot <nat:492> + <var:A> \cdot <nat:60> + <nat:238> \cdot <var:I> + <var:v> \cdot <nat:388> $ is trivially even . The positive integers $ <nat:238> $ , $ <nat:388> $ , plus $ <nat:492> $ are clearly even Notice that the whole numbers $ <nat:286> $ and moreover $ <nat:424> $ are even Furthermore , see that the number $ <nat:60> $ is clearly an even element of $ \mathbb{Z}^+ $ In addition to this , recall that the whole number $ <nat:338> $ is guaranteed to be even We verify $ <nat:301> + <var:W> <nat:424> + <var:d> <nat:286> + <nat:338> <var:a> + <var:I> <nat:238> + <nat:492> <var:B> + <var:A> <nat:60> + <var:v> <nat:388> $ is odd . Observe that $ <nat:301> $ is known to be odd . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:I> <var:v> <var:d> <var:A> <var:B> <var:W> <var:a> : nat , Nat . odd ( <nat:238> * <var:I> + <nat:388> * <var:v> + <nat:286> * <var:d> + <nat:60> * <var:A> + <nat:492> * <var:B> + <nat:424> * <var:W> + <nat:338> * <var:a> + <nat:301> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:238> = true ) . { auto . } assert ( <genH> : Nat . even <nat:388> = true ) . { auto . } assert ( <genH> : Nat . even <nat:492> = true ) . { auto . } assert ( <genH> : Nat . even <nat:286> = true ) . { auto . } assert ( <genH> : Nat . even <nat:424> = true ) . { auto . } assert ( <genH> : Nat . even <nat:60> = true ) . { auto . } assert ( <genH> : Nat . even <nat:338> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:238> * <var:I> + <nat:388> * <var:v> + <nat:286> * <var:d> + <nat:60> * <var:A> + <nat:492> * <var:B> + <nat:424> * <var:W> + <nat:338> * <var:a> ) = true ) . { repeat rewrite Nat . even_add . repeat rewrite Nat . even_mul . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } assert ( <genH> : Nat . odd <nat:301> = true ) . { auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . rewrite <genH> . auto . Qed . 