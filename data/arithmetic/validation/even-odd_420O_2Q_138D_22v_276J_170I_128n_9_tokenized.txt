\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:420> <var:O> + <nat:2> <var:Q> + <nat:138> <var:D> + <var:v> <nat:22> + <var:J> <nat:276> + <nat:170> <var:I> + <nat:128> <var:n> + <nat:9> $ must be odd given any unknowns $ <var:O> $ , $ <var:J> $ , $ <var:D> $ , $ <var:Q> $ , $ <var:n> $ , $ <var:I> $ , and $ <var:v> $ . \end{theorem} \begin{proof} Observe $ <nat:420> * <var:O> $ is known as even . This claim holds from the knowledge taking the product between an even positive integer with a element of $ \mathbb{N} $ is instrinsically an even number in $ \mathbb{N} $ . The products $ <var:Q> * <nat:2> $ , $ <var:J> * <nat:276> $ , $ <var:I> * <nat:170> $ , and also $ <nat:22> * <var:v> $ are guaranteed to be even integers . This claim is true from the fact the product of an even element of $ \mathbb{N} $ and any number in $ \mathbb{Z}^+ $ will be even . Likewise , we know the pair $ <nat:128> * <var:n> $ is even . Additionally , the pair $ <var:D> * <nat:138> $ is guaranteed to be an even element of $ \mathbb{Z}^+ $ . The adding between an even positive integer and an odd element of $ \mathbb{Z}^+ $ is guaranteed to be odd . In consequence , our theorem is proven . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:O> <var:J> <var:D> <var:Q> <var:n> <var:I> <var:v> : nat , Nat . odd ( <nat:420> * <var:O> + <nat:2> * <var:Q> + <nat:138> * <var:D> + <nat:22> * <var:v> + <nat:276> * <var:J> + <nat:170> * <var:I> + <nat:128> * <var:n> + <nat:9> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:420> * <var:O> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:2> * <var:Q> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:276> * <var:J> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:170> * <var:I> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:22> * <var:v> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:128> * <var:n> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:138> * <var:D> ) = true ) . { rewrite Nat . even_mul . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 