\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:F> <nat:392> + <var:v> <nat:174> + <var:C> <nat:498> + <nat:214> <var:p> + <var:X> <nat:24> + <nat:97> + <nat:422> <var:E> $ will be odd taking positive terms $ <var:X> $ , $ <var:v> $ , $ <var:C> $ , $ <var:F> $ , $ <var:p> $ , and $ <var:E> $ . \end{theorem} \begin{proof} The addition between an even integer and an odd number in $ \mathbb{Z}^+ $ must be an odd integer . Observe $ <nat:97> $ is known as odd . The product $ <var:E> \cdot <nat:422> $ is trivially even since the multiplication of an even element of $ \mathbb{N} $ with a natural number is guaranteed to be even . This claim is true by reason that the integer $ <nat:422> $ is by itself an even number . Additionally , the number $ <nat:214> $ is obviously an even number in $ \mathbb{Z}^+ $ . In consequence , $ <nat:214> \cdot <var:p> $ is even additionally . What's more , take note the coefficient $ <nat:174> $ is clearly even . Accordingly , the term $ <var:v> \cdot <nat:174> $ will be even additionally . Adding on , take note the pair $ <nat:392> \cdot <var:F> $ is even . This claim holds from the knowledge the product of an even integer with an arbitrary element of $ \mathbb{N} $ is even , and is proven since the coefficient $ <nat:392> $ is known to be even . Recall that the leading term $ <nat:24> $ is trivially even . For this reason , $ <var:X> \cdot <nat:24> $ will be even at the same time . On top of this , notice that the pair $ <var:C> \cdot <nat:498> $ is guaranteed to be an even element of $ \mathbb{Z}^+ $ since the whole number $ <nat:498> $ is trivially itself an even whole number . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:X> <var:v> <var:C> <var:F> <var:p> <var:E> : nat , Nat . odd ( <nat:392> * <var:F> + <nat:174> * <var:v> + <nat:498> * <var:C> + <nat:214> * <var:p> + <nat:24> * <var:X> + <nat:422> * <var:E> + <nat:97> ) = true . Proof . intros . rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . assert ( <genH> : Nat . odd <nat:97> = true ) . { auto . } assert ( <genH> : Nat . even <nat:422> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:422> * <var:E> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:214> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:214> * <var:p> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:174> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:174> * <var:v> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:392> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:392> * <var:F> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:24> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:24> * <var:X> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:498> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:498> * <var:C> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 