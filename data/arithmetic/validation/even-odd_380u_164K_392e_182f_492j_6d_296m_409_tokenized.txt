\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} For some variables $ <var:K> $ , $ <var:d> $ , $ <var:f> $ , $ <var:u> $ , $ <var:e> $ , $ <var:m> $ , and $ <var:j> $ $ <nat:296> <var:m> + <var:f> <nat:182> + <var:e> <nat:392> + <nat:380> <var:u> + <var:j> <nat:492> + <var:d> <nat:6> + <nat:164> <var:K> + <nat:409> $ is guaranteed to be odd . \end{theorem} \begin{proof} It can be shown that our result holds . Observe $ <nat:409> $ is known to be odd . The pairs $ <var:m> * <nat:296> $ , $ <var:f> * <nat:182> $ , $ <var:d> * <nat:6> $ , $ <nat:392> * <var:e> $ , $ <nat:492> * <var:j> $ , and $ <nat:380> * <var:u> $ will be even elements of $ \mathbb{N} $ . This fact is true since the multiplication between an even number with a number in $ \mathbb{N} $ will be even , and is true from the fact the positive integers $ <nat:296> $ , $ <nat:182> $ , $ <nat:6> $ , $ <nat:392> $ , $ <nat:492> $ , and also $ <nat:380> $ are clearly even . In addition to this , the positive integer $ <nat:164> $ is known to be an even number in $ \mathbb{Z}^+ $ . Therefore , $ <nat:164> * <var:K> $ is guaranteed to be even also . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:K> <var:d> <var:f> <var:u> <var:e> <var:m> <var:j> : nat , Nat . odd ( <nat:296> * <var:m> + <nat:182> * <var:f> + <nat:392> * <var:e> + <nat:380> * <var:u> + <nat:492> * <var:j> + <nat:6> * <var:d> + <nat:164> * <var:K> + <nat:409> ) = true . Proof . intros . assert ( <genH> : Nat . odd <nat:409> = true ) . { auto . } assert ( <genH> : Nat . even <nat:296> = true ) . { auto . } assert ( <genH> : Nat . even <nat:182> = true ) . { auto . } assert ( <genH> : Nat . even <nat:6> = true ) . { auto . } assert ( <genH> : Nat . even <nat:392> = true ) . { auto . } assert ( <genH> : Nat . even <nat:492> = true ) . { auto . } assert ( <genH> : Nat . even <nat:380> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:296> * <var:m> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:182> * <var:f> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:6> * <var:d> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:392> * <var:e> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:492> * <var:j> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:380> * <var:u> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:164> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:164> * <var:K> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 