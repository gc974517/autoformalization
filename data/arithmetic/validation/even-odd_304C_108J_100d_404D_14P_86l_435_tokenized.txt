\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Using positive terms $ <var:P> $ , $ <var:C> $ , $ <var:J> $ , $ <var:l> $ , $ <var:D> $ , and $ <var:d> $ $ <nat:100> <var:d> + <nat:108> <var:J> + <var:P> <nat:14> + <var:l> <nat:86> + <nat:304> <var:C> + <nat:435> + <nat:404> <var:D> $ is odd . \end{theorem} \begin{proof} We prove that $ <nat:304> \cdot <var:C> + <nat:108> \cdot <var:J> + <nat:100> \cdot <var:d> + <nat:404> \cdot <var:D> + <nat:14> \cdot <var:P> + <nat:86> \cdot <var:l> $ is trivially even . Recall the summation between an even number in $ \mathbb{Z}^+ $ with an even number in $ \mathbb{Z}^+ $ is an even element of $ \mathbb{N} $ . The pairs $ <nat:100> <var:d> $ and $ <nat:404> <var:D> $ are known to be even integers . Further , the products $ <var:C> <nat:304> $ , $ <var:l> <nat:86> $ , plus $ <var:J> <nat:108> $ are even from the knowledge taking the product between an even element of $ \mathbb{Z}^+ $ with a element of $ \mathbb{Z}^+ $ is an even positive integer . What's more , the product $ <var:P> <nat:14> $ is known as an even natural number . and moreover as a consequence that the product between even elements of $ \mathbb{Z}^+ $ with a number must be even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:P> <var:C> <var:J> <var:l> <var:D> <var:d> : nat , Nat . odd ( <nat:100> * <var:d> + <nat:108> * <var:J> + <nat:14> * <var:P> + <nat:86> * <var:l> + <nat:304> * <var:C> + <nat:404> * <var:D> + <nat:435> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:100> * <var:d> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:404> * <var:D> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:304> * <var:C> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:86> * <var:l> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:108> * <var:J> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:14> * <var:P> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:100> * <var:d> + <nat:108> * <var:J> + <nat:14> * <var:P> + <nat:86> * <var:l> + <nat:304> * <var:C> + <nat:404> * <var:D> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . auto . Qed . 