\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:400> \cdot <var:l> + <nat:198> \cdot <var:b> + <nat:42> \cdot <var:A> + <nat:314> \cdot <var:T> + <nat:338> + <var:t> \cdot <nat:192> + <var:v> \cdot <nat:348> $ must be even taking some whole numbers $ <var:T> $ , $ <var:t> $ , $ <var:v> $ , $ <var:A> $ , $ <var:b> $ , and $ <var:l> $ . \end{theorem} \begin{proof} The summing between even positive integers collectively will be even . The numbers $ <nat:400> $ , $ <nat:198> $ , $ <nat:42> $ , $ <nat:314> $ , $ <nat:192> $ , and moreover $ <nat:348> $ are trivially even . Then , the pairs $ <var:l> \cdot <nat:400> $ , $ <var:b> \cdot <nat:198> $ , $ <var:A> \cdot <nat:42> $ , $ <var:T> \cdot <nat:314> $ , $ <nat:192> \cdot <var:t> $ , and also $ <var:v> \cdot <nat:348> $ will be even as well . It can be justified that the lemma is proven . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:T> <var:t> <var:v> <var:A> <var:b> <var:l> : nat , Nat . even ( <nat:400> * <var:l> + <nat:198> * <var:b> + <nat:42> * <var:A> + <nat:314> * <var:T> + <nat:192> * <var:t> + <nat:348> * <var:v> + <nat:338> ) = true . Proof . intros . repeat rewrite Nat . even_add . assert ( <genH> : Nat . even <nat:400> = true ) . { auto . } assert ( <genH> : Nat . even <nat:198> = true ) . { auto . } assert ( <genH> : Nat . even <nat:42> = true ) . { auto . } assert ( <genH> : Nat . even <nat:314> = true ) . { auto . } assert ( <genH> : Nat . even <nat:192> = true ) . { auto . } assert ( <genH> : Nat . even <nat:348> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:400> * <var:l> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:198> * <var:b> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:42> * <var:A> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:314> * <var:T> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:192> * <var:t> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:348> * <var:v> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 