\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \newtheorem{definition}{Definition} \begin{document} \begin{definition} We denote that $ <var:c> $ is a <def:eight-composite> natural number granted that there are $ <var:q> $ , $ <var:R> $ , $ <var:X> $ , $ <var:Q> $ , $ <var:F> $ , $ <var:k> $ , $ <var:V> $ , $ <var:L> \in \mathbb{Z}^+ $ so that $ <var:c> = <var:F> * <var:V> * <var:q> * <var:Q> * <var:k> * <var:R> * <var:L> * <var:X> $ for some number $ <var:c> $ as well as satisfying the condition that $ <var:X> $ , $ <var:q> $ , $ <var:F> $ , $ <var:k> $ , $ <var:L> $ , $ <var:R> $ , $ <var:V> $ and $ <var:Q> \geq <nat:2> $ . \end{definition} \begin{theorem} $ <var:c> = <nat:1036800> $ is a <def:eight-composite> whole number . \end{theorem} \begin{proof} Recall <nat:1036800> is a <def:eight-composite> integer supposing it is the product between whole numbers $ <var:k> $ , $ <var:F> $ , $ <var:Q> $ , $ <var:q> $ , $ <var:V> $ , $ <var:R> $ , $ <var:L> $ , and $ <var:X> $ more than <nat:1> . Notice $ <nat:12> $ , $ <nat:10> $ , $ <nat:3> $ , $ <nat:2> $ , $ <nat:4> $ , $ <nat:5> $ , $ <nat:9> $ , and $ <nat:8> > <nat:1> $ . Similarly note additionally $ <nat:3> \times <nat:4> \times <nat:5> \times <nat:12> \times <nat:10> \times <nat:2> \times <nat:8> \times <nat:9> = <nat:1036800> $ . This suggests <nat:1036800> is a <def:eight-composite> integer . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:eight-composite> ( <var:c> : nat ) := exists <var:q> <var:R> <var:X> <var:Q> <var:F> <var:k> <var:V> <var:L> : nat , ( <var:c> = <var:F> * <var:V> * <var:q> * <var:Q> * <var:k> * <var:R> * <var:L> * <var:X> ) /\ ( <var:X> >= <nat:2> ) /\ ( <var:q> >= <nat:2> ) /\ ( <var:F> >= <nat:2> ) /\ ( <var:k> >= <nat:2> ) /\ ( <var:L> >= <nat:2> ) /\ ( <var:R> >= <nat:2> ) /\ ( <var:V> >= <nat:2> ) /\ ( <var:Q> >= <nat:2> ) . Theorem <genP:1> : <def:eight-composite> <nat:1036800> . Proof . unfold <def:eight-composite> . assert ( <genH> : <nat:12> > <nat:1> ) . { lia . } assert ( <genH> : <nat:10> > <nat:1> ) . { lia . } assert ( <genH> : <nat:3> > <nat:1> ) . { lia . } assert ( <genH> : <nat:2> > <nat:1> ) . { lia . } assert ( <genH> : <nat:4> > <nat:1> ) . { lia . } assert ( <genH> : <nat:5> > <nat:1> ) . { lia . } assert ( <genH> : <nat:9> > <nat:1> ) . { lia . } assert ( <genH> : <nat:8> > <nat:1> ) . { lia . } exists <nat:3> . exists <nat:5> . exists <nat:4> . exists <nat:9> . exists <nat:10> . exists <nat:8> . exists <nat:12> . exists <nat:2> . repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 