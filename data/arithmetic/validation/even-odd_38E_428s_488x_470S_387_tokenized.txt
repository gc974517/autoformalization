\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:s> \cdot <nat:428> + <var:S> \cdot <nat:470> + <nat:387> + <var:E> \cdot <nat:38> + <nat:488> \cdot <var:x> $ must be odd . \end{theorem} \begin{proof} Remember the summing of an even number in $ \mathbb{Z}^+ $ with an odd number must be odd . This proposition must be true from the knowledge $ <nat:428> \times <var:s> + <nat:38> \times <var:E> + <nat:488> \times <var:x> + <var:S> \times <nat:470> $ is clearly even . The whole number $ <nat:38> $ is an even element of $ \mathbb{Z}^+ $ . Therefore , the term $ <nat:38> * <var:E> $ must be even also . Take note that the natural number $ <nat:428> $ is known to be even . So , the pair $ <nat:428> * <var:s> $ is even at the same time . Likewise , recall that the number $ <nat:488> $ is clearly an even whole number . Thus , the pair $ <nat:488> * <var:x> $ is guaranteed to be even too . Further , the term $ <nat:470> * <var:S> $ is known to be an even element of $ \mathbb{Z}^+ $ . This fact is true as a consequence that the product between an even number in $ \mathbb{Z}^+ $ and an arbitrary element of $ \mathbb{Z}^+ $ must be itself an even number . This holds since the integer $ <nat:470> $ is guaranteed to be even . By reason that taking the product between even whole numbers with a positive integer will be an even element of $ \mathbb{Z}^+ $ the lemma must be true . It can be justified that our theorem is true . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:s> <var:S> <var:E> <var:x> : nat , Nat . odd ( <nat:428> * <var:s> + <nat:470> * <var:S> + <nat:38> * <var:E> + <nat:488> * <var:x> + <nat:387> ) = true . Proof . intros . rewrite Nat . odd_add . assert ( <genH> : Nat . even <nat:38> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:38> * <var:E> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:428> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:428> * <var:s> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:488> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:488> * <var:x> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:470> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:470> * <var:S> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:428> * <var:s> + <nat:470> * <var:S> + <nat:38> * <var:E> + <nat:488> * <var:x> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite <- Nat . negb_even . rewrite <genH> . auto . Qed . 