\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:56> \cdot <var:l> + <var:r> \cdot <nat:482> + <nat:333> + <var:u> \cdot <nat:204> + <var:U> \cdot <nat:498> + <var:S> \cdot <nat:438> + <var:x> \cdot <nat:242> + <var:J> \cdot <nat:324> $ will be odd using all terms $ <var:r> $ , $ <var:J> $ , $ <var:U> $ , $ <var:S> $ , $ <var:u> $ , $ <var:l> $ , and $ <var:x> $ . \end{theorem} \begin{proof} Observe that $ <nat:333> $ is obviously odd . The totaling between an even number in $ \mathbb{N} $ with an odd number in $ \mathbb{Z}^+ $ will be odd . The products $ <nat:56> \cdot <var:l> $ , $ <var:r> \cdot <nat:482> $ , $ <nat:204> \cdot <var:u> $ , $ <nat:498> \cdot <var:U> $ , $ <nat:438> \cdot <var:S> $ , $ <var:x> \cdot <nat:242> $ , additionally $ <var:J> \cdot <nat:324> $ are clearly even numbers in $ \mathbb{Z}^+ $ since the numbers $ <nat:56> $ , $ <nat:482> $ , $ <nat:204> $ , $ <nat:498> $ , $ <nat:438> $ , $ <nat:242> $ , additionally $ <nat:324> $ are guaranteed to be obviously even elements of $ \mathbb{N} $ . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:r> <var:J> <var:U> <var:S> <var:u> <var:l> <var:x> : nat , Nat . odd ( <nat:56> * <var:l> + <nat:482> * <var:r> + <nat:204> * <var:u> + <nat:498> * <var:U> + <nat:438> * <var:S> + <nat:242> * <var:x> + <nat:324> * <var:J> + <nat:333> ) = true . Proof . intros . assert ( <genH> : Nat . odd <nat:333> = true ) . { auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . assert ( <genH> : Nat . even <nat:56> = true ) . { auto . } assert ( <genH> : Nat . even <nat:482> = true ) . { auto . } assert ( <genH> : Nat . even <nat:204> = true ) . { auto . } assert ( <genH> : Nat . even <nat:498> = true ) . { auto . } assert ( <genH> : Nat . even <nat:438> = true ) . { auto . } assert ( <genH> : Nat . even <nat:242> = true ) . { auto . } assert ( <genH> : Nat . even <nat:324> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:56> * <var:l> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:482> * <var:r> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:204> * <var:u> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:498> * <var:U> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:438> * <var:S> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:242> * <var:x> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:324> * <var:J> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 