\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} For all terms $ <var:e> $ , $ <var:m> $ , and $ <var:Z> $ the summation $ <nat:243> + <nat:310> \times <var:Z> + <nat:108> \times <var:e> + <nat:122> \times <var:m> $ must be odd . \end{theorem} \begin{proof} The sum $ <var:e> <nat:108> + <var:Z> <nat:310> + <nat:122> <var:m> $ is obviously even . Building on , the product $ <var:e> \times <nat:108> $ is clearly even . This claim is true from the fact taking the product between an even number with a element of $ \mathbb{N} $ is even , which must be true as a consequence that the coefficient $ <nat:108> $ is guaranteed to be even . The pair $ <var:Z> \times <nat:310> $ is an even element of $ \mathbb{N} $ . This claim must be true from the fact the multiplication between an even number in $ \mathbb{Z}^+ $ and some number in $ \mathbb{Z}^+ $ is even in addition to the coefficient $ <nat:310> $ is known as even . Building on , see the product $ <var:m> \times <nat:122> $ is obviously even from the fact the coefficient $ <nat:122> $ is guaranteed to be even . The summation $ <nat:108> * <var:e> + <var:m> * <nat:122> + <nat:310> * <var:Z> $ will be obviously even since the summation between an even natural and even elements of $ \mathbb{Z}^+ $ is by its very nature an even number as well as as a consequence that the product of even whole numbers and some element of $ \mathbb{N} $ is even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:e> <var:m> <var:Z> : nat , Nat . odd ( <nat:310> * <var:Z> + <nat:108> * <var:e> + <nat:122> * <var:m> + <nat:243> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:108> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:108> * <var:e> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:310> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:310> * <var:Z> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:122> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:122> * <var:m> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:310> * <var:Z> + <nat:108> * <var:e> + <nat:122> * <var:m> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . auto . Qed . 