\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Assuming all natural numbers $ <var:I> $ , $ <var:O> $ , $ <var:w> $ , $ <var:x> $ , $ <var:g> $ , and $ <var:U> $ the sum $ <nat:224> * <var:w> + <nat:2> * <var:I> + <nat:385> + <nat:56> * <var:U> + <var:g> * <nat:76> + <var:x> * <nat:38> + <var:O> * <nat:418> $ is guaranteed to be odd . \end{theorem} \begin{proof} Take note $ <nat:385> $ is odd . The adding between even numbers collectively with an odd natural number is odd . The products $ <var:I> * <nat:2> $ as well as $ <nat:38> * <var:x> $ are known to be even . Notice the products $ <var:O> * <nat:418> $ , $ <var:U> * <nat:56> $ , and also $ <var:g> * <nat:76> $ are guaranteed to be even . This fact holds because the multiplication between an even number and any number in $ \mathbb{Z}^+ $ will be even . $ <nat:224> * <var:w> $ is an even whole number . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:I> <var:O> <var:w> <var:x> <var:g> <var:U> : nat , Nat . odd ( <nat:224> * <var:w> + <nat:2> * <var:I> + <nat:56> * <var:U> + <nat:76> * <var:g> + <nat:38> * <var:x> + <nat:418> * <var:O> + <nat:385> ) = true . Proof . intros . assert ( <genH> : Nat . odd <nat:385> = true ) . { auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . assert ( <genH> : Nat . even ( <nat:2> * <var:I> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:38> * <var:x> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:418> * <var:O> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:56> * <var:U> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:76> * <var:g> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:224> * <var:w> ) = true ) . { rewrite Nat . even_mul . auto . } rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 