\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Taking some unknowns $ <var:m> $ , $ <var:y> $ , $ <var:F> $ , $ <var:j> $ , $ <var:G> $ , $ <var:z> $ , $ <var:V> $ , and $ <var:B> $ the expression $ <var:y> \cdot <nat:354> + <nat:302> \cdot <var:G> + <var:m> \cdot <nat:82> + <var:j> \cdot <nat:16> + <nat:491> + <var:V> \cdot <nat:288> + <nat:400> \cdot <var:F> + <nat:200> \cdot <var:B> + <nat:198> \cdot <var:z> $ must be odd . \end{theorem} \begin{proof} We check the summation $ <nat:198> \times <var:z> + <nat:302> \times <var:G> + <nat:16> \times <var:j> + <nat:400> \times <var:F> + <nat:491> + <var:m> \times <nat:82> + <var:V> \times <nat:288> + <var:B> \times <nat:200> + <nat:354> \times <var:y> $ is odd . See the terms $ <var:z> <nat:198> $ , $ <nat:354> <var:y> $ , $ <var:G> <nat:302> $ , and likewise $ <nat:200> <var:B> $ are trivially even . Additionally , recall the terms $ <var:F> <nat:400> $ , $ <nat:16> <var:j> $ , additionally $ <var:m> <nat:82> $ are known to be even numbers in $ \mathbb{N} $ . Adding on , observe that $ <var:V> <nat:288> $ is trivially an even element of $ \mathbb{N} $ . Notice the totaling between even naturals and an odd integer must be an odd whole number . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:m> <var:y> <var:F> <var:j> <var:G> <var:z> <var:V> <var:B> : nat , Nat . odd ( <nat:354> * <var:y> + <nat:302> * <var:G> + <nat:82> * <var:m> + <nat:16> * <var:j> + <nat:288> * <var:V> + <nat:400> * <var:F> + <nat:200> * <var:B> + <nat:198> * <var:z> + <nat:491> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:198> * <var:z> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:354> * <var:y> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:302> * <var:G> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:200> * <var:B> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:400> * <var:F> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:16> * <var:j> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:82> * <var:m> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:288> * <var:V> ) = true ) . { rewrite Nat . even_mul . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 