\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Assume $ <var:t> $ , $ <var:X> $ , $ <var:j> $ , $ <var:r> $ , $ <var:d> $ , $ <var:I> $ , $ <var:A> $ , $ <var:c> $ are positive integers . Let that some positive integer $ <var:l> $ will be considered to be <def:eight-composite> if $ <var:c> \times <var:t> \times <var:d> \times <var:j> \times <var:I> \times <var:A> \times <var:r> \times <var:X> = <var:l> $ plus terms are larger than or equal to <nat:2> . Consequently <nat:483840> is a <def:eight-composite> number . \end{theorem} \begin{proof} Let $ <var:c> = <nat:6> $ , $ <var:d> = <nat:5> $ , $ <var:A> = <nat:12> $ , $ <var:t> = <nat:7> $ , $ <var:I> = <nat:2> $ , $ <var:X> = <nat:4> $ , $ <var:j> = <nat:8> $ , $ <var:r> = <nat:3> $ . Notice $ <var:X> = <nat:4> $ , $ <var:A> = <nat:12> $ , $ <var:d> = <nat:5> $ , $ <var:c> = <nat:6> $ , $ <var:j> = <nat:8> $ , $ <var:r> = <nat:3> $ , $ <var:t> = <nat:7> $ , and $ <var:I> = <nat:2> \geq <nat:2> $ . Thus , <nat:483840> is the product of some positive integers $ <var:X> $ , $ <var:d> $ , $ <var:I> $ , $ <var:A> $ , $ <var:j> $ , $ <var:c> $ , $ <var:r> $ and $ <var:t> $ as well as $ <var:t> $ , $ <var:A> $ , $ <var:d> $ , $ <var:I> $ , $ <var:c> $ , $ <var:X> $ , $ <var:j> $ , $ <var:r> \geq <nat:2> $ has been validated . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:eight-composite> ( <var:l> : nat ) := exists <var:t> <var:X> <var:j> <var:r> <var:d> <var:I> <var:A> <var:c> : nat , ( <var:c> * <var:t> * <var:d> * <var:j> * <var:I> * <var:A> * <var:r> * <var:X> = <var:l> ) /\ ( <var:t> >= <nat:2> ) /\ ( <var:X> >= <nat:2> ) /\ ( <var:j> >= <nat:2> ) /\ ( <var:r> >= <nat:2> ) /\ ( <var:d> >= <nat:2> ) /\ ( <var:I> >= <nat:2> ) /\ ( <var:A> >= <nat:2> ) /\ ( <var:c> >= <nat:2> ) . Theorem <genP:1> : <def:eight-composite> <nat:483840> . Proof . unfold <def:eight-composite> . exists <nat:7> . exists <nat:4> . exists <nat:8> . exists <nat:3> . exists <nat:5> . exists <nat:2> . exists <nat:12> . exists <nat:6> . assert ( <genH> : <nat:4> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:12> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:5> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:6> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:8> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:3> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:7> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:2> >= <nat:2> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 