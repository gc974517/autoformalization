\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:s> \cdot <nat:394> + <var:M> \cdot <nat:368> + <var:C> \cdot <nat:284> + <var:v> \cdot <nat:320> + <nat:84> \cdot <var:y> + <nat:423> + <var:l> \cdot <nat:78> + <nat:482> \cdot <var:H> + <var:p> \cdot <nat:220> $ is guaranteed to be odd . \end{theorem} \begin{proof} The addition between an even element of $ \mathbb{N} $ and an odd element of $ \mathbb{N} $ must be an odd element of $ \mathbb{Z}^+ $ . It can be proven that the sum $ <nat:368> \cdot <var:M> + <var:C> \cdot <nat:284> + <nat:84> \cdot <var:y> + <nat:78> \cdot <var:l> + <nat:482> \cdot <var:H> + <var:p> \cdot <nat:220> + <var:s> \cdot <nat:394> + <var:v> \cdot <nat:320> $ is guaranteed to be even . We know that the numbers $ <nat:320> $ , $ <nat:78> $ , $ <nat:84> $ , $ <nat:394> $ , $ <nat:220> $ , $ <nat:368> $ , as well as $ <nat:284> $ are guaranteed to be even Further , observe that the coefficient $ <nat:482> $ is known as an even natural The expression $ <var:H> <nat:482> + <var:y> <nat:84> + <var:C> <nat:284> + <nat:320> <var:v> + <nat:394> <var:s> + <nat:368> <var:M> + <var:l> <nat:78> + <var:p> <nat:220> $ will be even because the summation of even naturals with even natural numbers is guaranteed to be even . We check $ <var:p> <nat:220> + <var:M> <nat:368> + <nat:78> <var:l> + <var:C> <nat:284> + <nat:320> <var:v> + <var:H> <nat:482> + <nat:394> <var:s> + <var:y> <nat:84> + <nat:423> $ will be odd . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:s> <var:M> <var:C> <var:v> <var:y> <var:l> <var:H> <var:p> : nat , Nat . odd ( <nat:394> * <var:s> + <nat:368> * <var:M> + <nat:284> * <var:C> + <nat:320> * <var:v> + <nat:84> * <var:y> + <nat:78> * <var:l> + <nat:482> * <var:H> + <nat:220> * <var:p> + <nat:423> ) = true . Proof . intros . rewrite Nat . odd_add . assert ( <genH> : Nat . even <nat:320> = true ) . { auto . } assert ( <genH> : Nat . even <nat:78> = true ) . { auto . } assert ( <genH> : Nat . even <nat:84> = true ) . { auto . } assert ( <genH> : Nat . even <nat:394> = true ) . { auto . } assert ( <genH> : Nat . even <nat:220> = true ) . { auto . } assert ( <genH> : Nat . even <nat:368> = true ) . { auto . } assert ( <genH> : Nat . even <nat:284> = true ) . { auto . } assert ( <genH> : Nat . even <nat:482> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:394> * <var:s> + <nat:368> * <var:M> + <nat:284> * <var:C> + <nat:320> * <var:v> + <nat:84> * <var:y> + <nat:78> * <var:l> + <nat:482> * <var:H> + <nat:220> * <var:p> ) = true ) . { repeat rewrite Nat . even_add . repeat rewrite Nat . even_mul . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite <- Nat . negb_even . rewrite <genH> . auto . Qed . 