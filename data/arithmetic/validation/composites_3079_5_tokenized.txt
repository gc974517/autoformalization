\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Granted that we have $ <var:U> $ , $ <var:F> $ , $ <var:J> $ , $ <var:C> $ , $ <var:M> \geq <nat:2> $ satisfying the condition that given $ <var:f> \in \mathbb{N} $ , $ <var:M> \cdot <var:U> \cdot <var:C> \cdot <var:F> \cdot <var:J> = <var:f> $ with some $ <var:F> $ , $ <var:M> $ , $ <var:C> $ , $ <var:U> $ , $ <var:J> \in \mathbb{Z}^+ $ , say that $ <var:f> $ is <def:five-composite> . So $ <nat:25344> = <var:f> $ is a <def:five-composite> positive integer . \end{theorem} \begin{proof} Take $ <var:C> = <nat:11> $ , $ <var:J> = <nat:6> $ , $ <var:U> = <nat:4> $ , $ <var:F> = <nat:12> $ , and $ <var:M> = <nat:8> $ . Observe that $ <var:M> \cdot <var:F> \cdot <var:C> \cdot <var:U> \cdot <var:J> = <nat:25344> $ . Furthermore notice $ <nat:11> $ , $ <nat:4> $ , $ <nat:6> $ , $ <nat:12> $ , $ <nat:8> $ are larger than or equivalent to <nat:2> . This yields the result is valid . Because of this , $ <var:U> $ , $ <var:C> $ , $ <var:J> $ , $ <var:F> $ and $ <var:M> $ are greater than or equivalent to <nat:2> as well as $ <nat:25344> = <var:J> \times <var:C> \times <var:M> \times <var:F> \times <var:U> $ has been validated . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:five-composite> ( <var:f> : nat ) := exists <var:F> <var:M> <var:C> <var:U> <var:J> : nat , ( <var:U> >= <nat:2> ) /\ ( <var:F> >= <nat:2> ) /\ ( <var:J> >= <nat:2> ) /\ ( <var:C> >= <nat:2> ) /\ ( <var:M> >= <nat:2> ) /\ ( <var:M> * <var:U> * <var:C> * <var:F> * <var:J> = <var:f> ) . Theorem <genP:1> : <def:five-composite> <nat:25344> . Proof . unfold <def:five-composite> . exists <nat:12> . exists <nat:8> . exists <nat:11> . exists <nat:4> . exists <nat:6> . assert ( <genH> : <nat:11> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:4> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:6> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:12> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:8> >= <nat:2> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 