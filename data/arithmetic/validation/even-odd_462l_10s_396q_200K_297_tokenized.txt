\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} With all natural terms $ <var:q> $ , $ <var:K> $ , $ <var:s> $ , and $ <var:l> $ $ <nat:297> + <nat:10> \cdot <var:s> + <nat:462> \cdot <var:l> + <nat:200> \cdot <var:K> + <var:q> \cdot <nat:396> $ is odd . \end{theorem} \begin{proof} We prove the formula $ <nat:462> <var:l> + <var:s> <nat:10> + <nat:396> <var:q> + <nat:297> + <nat:200> <var:K> $ is guaranteed to be odd . Additionally , the pairs $ <var:l> <nat:462> $ , $ <nat:10> <var:s> $ , $ <var:q> <nat:396> $ , and moreover $ <nat:200> <var:K> $ must be even naturals from the fact the integers $ <nat:462> $ , $ <nat:10> $ , $ <nat:396> $ , and also $ <nat:200> $ are known to be in themselves even numbers in $ \mathbb{N} $ . Notice that the adding of an even whole number and an odd number in $ \mathbb{N} $ must be an odd number . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:q> <var:K> <var:s> <var:l> : nat , Nat . odd ( <nat:10> * <var:s> + <nat:462> * <var:l> + <nat:200> * <var:K> + <nat:396> * <var:q> + <nat:297> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:462> = true ) . { auto . } assert ( <genH> : Nat . even <nat:10> = true ) . { auto . } assert ( <genH> : Nat . even <nat:396> = true ) . { auto . } assert ( <genH> : Nat . even <nat:200> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:462> * <var:l> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:10> * <var:s> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:396> * <var:q> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:200> * <var:K> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 