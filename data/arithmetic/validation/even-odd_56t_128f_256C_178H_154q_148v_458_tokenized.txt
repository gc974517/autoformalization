\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:f> \cdot <nat:128> + <nat:458> + <nat:148> \cdot <var:v> + <nat:178> \cdot <var:H> + <var:C> \cdot <nat:256> + <var:t> \cdot <nat:56> + <var:q> \cdot <nat:154> $ is guaranteed to be even with unknowns $ <var:q> $ , $ <var:f> $ , $ <var:H> $ , $ <var:C> $ , $ <var:t> $ , and $ <var:v> $ . \end{theorem} \begin{proof} It can be demonstrated that this main result is proven . The formula $ <var:t> <nat:56> + <nat:128> <var:f> + <nat:256> <var:C> + <nat:178> <var:H> + <nat:154> <var:q> + <nat:148> <var:v> $ is even . See the products $ <var:t> \times <nat:56> $ , $ <nat:256> \times <var:C> $ , $ <nat:148> \times <var:v> $ , plus $ <var:H> \times <nat:178> $ are known to be even naturals . The pair $ <nat:128> \times <var:f> $ is clearly even . This claim holds as a consequence that multiplying between an even natural with some positive integer must be even . The product $ <var:q> \times <nat:154> $ is even . Take note the summation between even elements of $ \mathbb{Z}^+ $ successively and an even number in $ \mathbb{N} $ is by its very nature an even element of $ \mathbb{Z}^+ $ . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:q> <var:f> <var:H> <var:C> <var:t> <var:v> : nat , Nat . even ( <nat:128> * <var:f> + <nat:148> * <var:v> + <nat:178> * <var:H> + <nat:256> * <var:C> + <nat:56> * <var:t> + <nat:154> * <var:q> + <nat:458> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:56> * <var:t> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:256> * <var:C> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:148> * <var:v> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:178> * <var:H> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:128> * <var:f> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:154> * <var:q> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:128> * <var:f> + <nat:148> * <var:v> + <nat:178> * <var:H> + <nat:256> * <var:C> + <nat:56> * <var:t> + <nat:154> * <var:q> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . even_add . rewrite <genH> . auto . Qed . 