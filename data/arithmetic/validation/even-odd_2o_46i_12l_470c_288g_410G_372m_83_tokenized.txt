\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Given every $ <var:i> $ , $ <var:c> $ , $ <var:l> $ , $ <var:m> $ , $ <var:g> $ , $ <var:G> $ , and $ <var:o> \in \mathbb{N} $ the sum $ <var:i> * <nat:46> + <var:o> * <nat:2> + <nat:12> * <var:l> + <nat:83> + <nat:372> * <var:m> + <nat:288> * <var:g> + <nat:410> * <var:G> + <nat:470> * <var:c> $ must be odd . \end{theorem} \begin{proof} Remember $ <nat:83> $ is clearly an odd number . The addition between an even integer and an odd element of $ \mathbb{Z}^+ $ is guaranteed to be odd . We apply the assumption $ <var:o> \times <nat:2> + <nat:46> \times <var:i> + <var:l> \times <nat:12> + <var:c> \times <nat:470> + <nat:288> \times <var:g> + <nat:410> \times <var:G> + <var:m> \times <nat:372> $ is guaranteed to be even . Recall that the leading terms $ <nat:2> $ , $ <nat:46> $ , $ <nat:12> $ , $ <nat:470> $ , $ <nat:288> $ , $ <nat:410> $ , and $ <nat:372> $ are known as even whole numbers . Then , the products $ <var:o> * <nat:2> $ , $ <nat:46> * <var:i> $ , $ <nat:12> * <var:l> $ , $ <var:c> * <nat:470> $ , $ <var:g> * <nat:288> $ , $ <var:G> * <nat:410> $ , and also $ <var:m> * <nat:372> $ must be even at the same time . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:i> <var:c> <var:l> <var:m> <var:g> <var:G> <var:o> : nat , Nat . odd ( <nat:46> * <var:i> + <nat:2> * <var:o> + <nat:12> * <var:l> + <nat:372> * <var:m> + <nat:288> * <var:g> + <nat:410> * <var:G> + <nat:470> * <var:c> + <nat:83> ) = true . Proof . intros . assert ( <genH> : Nat . odd <nat:83> = true ) . { auto . } rewrite Nat . odd_add . assert ( <genH> : Nat . even <nat:2> = true ) . { auto . } assert ( <genH> : Nat . even <nat:46> = true ) . { auto . } assert ( <genH> : Nat . even <nat:12> = true ) . { auto . } assert ( <genH> : Nat . even <nat:470> = true ) . { auto . } assert ( <genH> : Nat . even <nat:288> = true ) . { auto . } assert ( <genH> : Nat . even <nat:410> = true ) . { auto . } assert ( <genH> : Nat . even <nat:372> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:2> * <var:o> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:46> * <var:i> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:12> * <var:l> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:470> * <var:c> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:288> * <var:g> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:410> * <var:G> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:372> * <var:m> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:46> * <var:i> + <nat:2> * <var:o> + <nat:12> * <var:l> + <nat:372> * <var:m> + <nat:288> * <var:g> + <nat:410> * <var:G> + <nat:470> * <var:c> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite <- Nat . negb_even . rewrite <genH> . rewrite <genH> . auto . Qed . 