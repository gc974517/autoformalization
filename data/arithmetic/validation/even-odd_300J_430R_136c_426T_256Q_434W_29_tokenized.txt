\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} With some positive terms $ <var:T> $ , $ <var:W> $ , $ <var:Q> $ , $ <var:c> $ , $ <var:J> $ , and $ <var:R> $ $ <var:R> * <nat:430> + <nat:300> * <var:J> + <nat:256> * <var:Q> + <nat:29> + <var:T> * <nat:426> + <var:c> * <nat:136> + <var:W> * <nat:434> $ is guaranteed to be odd . \end{theorem} \begin{proof} We use the assumption the fact that the sum $ <var:J> * <nat:300> + <var:R> * <nat:430> + <nat:136> * <var:c> + <var:T> * <nat:426> + <nat:256> * <var:Q> + <nat:434> * <var:W> $ is known as even . The terms $ <var:W> * <nat:434> $ , $ <var:J> * <nat:300> $ , $ <nat:430> * <var:R> $ , $ <var:T> * <nat:426> $ , additionally $ <var:c> * <nat:136> $ are guaranteed to be even . Notice that the term $ <nat:256> * <var:Q> $ is clearly even . Observe that $ <nat:29> $ is known to be odd . Recall that the totaling between an even integer and an odd positive integer is an odd positive integer . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:T> <var:W> <var:Q> <var:c> <var:J> <var:R> : nat , Nat . odd ( <nat:430> * <var:R> + <nat:300> * <var:J> + <nat:256> * <var:Q> + <nat:426> * <var:T> + <nat:136> * <var:c> + <nat:434> * <var:W> + <nat:29> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:434> * <var:W> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:300> * <var:J> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:430> * <var:R> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:426> * <var:T> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:136> * <var:c> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:256> * <var:Q> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:430> * <var:R> + <nat:300> * <var:J> + <nat:256> * <var:Q> + <nat:426> * <var:T> + <nat:136> * <var:c> + <nat:434> * <var:W> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } assert ( <genH> : Nat . odd <nat:29> = true ) . { auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . rewrite <genH> . auto . Qed . 