\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:164> \cdot <var:W> + <var:N> \cdot <nat:450> + <nat:205> + <nat:314> \cdot <var:k> + <var:s> \cdot <nat:10> + <nat:232> \cdot <var:p> + <nat:250> \cdot <var:j> + <var:O> \cdot <nat:86> $ is odd assuming every integers $ <var:p> $ , $ <var:j> $ , $ <var:W> $ , $ <var:k> $ , $ <var:O> $ , $ <var:s> $ , and $ <var:N> $ . \end{theorem} \begin{proof} It can be demonstrated that $ <nat:314> \times <var:k> + <nat:232> \times <var:p> + <var:j> \times <nat:250> + <nat:164> \times <var:W> + <nat:10> \times <var:s> + <nat:205> + <nat:450> \times <var:N> + <var:O> \times <nat:86> $ is guaranteed to be odd by applying the fact the adding between an even integer and an odd element of $ \mathbb{N} $ must be odd . Recall $ <nat:205> $ is trivially an odd integer . We know the products $ <nat:314> * <var:k> $ , $ <nat:232> * <var:p> $ , $ <nat:250> * <var:j> $ , $ <var:W> * <nat:164> $ , $ <nat:10> * <var:s> $ , $ <nat:450> * <var:N> $ , and likewise $ <var:O> * <nat:86> $ are clearly even whole numbers from the knowledge the numbers $ <nat:314> $ , $ <nat:232> $ , $ <nat:250> $ , $ <nat:164> $ , $ <nat:10> $ , $ <nat:450> $ , and $ <nat:86> $ must be even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:p> <var:j> <var:W> <var:k> <var:O> <var:s> <var:N> : nat , Nat . odd ( <nat:164> * <var:W> + <nat:450> * <var:N> + <nat:314> * <var:k> + <nat:10> * <var:s> + <nat:232> * <var:p> + <nat:250> * <var:j> + <nat:86> * <var:O> + <nat:205> ) = true . Proof . intros . rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . assert ( <genH> : Nat . odd <nat:205> = true ) . { auto . } assert ( <genH> : Nat . even <nat:314> = true ) . { auto . } assert ( <genH> : Nat . even <nat:232> = true ) . { auto . } assert ( <genH> : Nat . even <nat:250> = true ) . { auto . } assert ( <genH> : Nat . even <nat:164> = true ) . { auto . } assert ( <genH> : Nat . even <nat:10> = true ) . { auto . } assert ( <genH> : Nat . even <nat:450> = true ) . { auto . } assert ( <genH> : Nat . even <nat:86> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:314> * <var:k> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:232> * <var:p> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:250> * <var:j> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:164> * <var:W> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:10> * <var:s> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:450> * <var:N> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:86> * <var:O> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 