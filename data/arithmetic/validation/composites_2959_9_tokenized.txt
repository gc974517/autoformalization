\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Supposing that we have $ <var:i> * <var:N> * <var:H> * <var:J> * <var:W> * <var:e> * <var:u> * <var:o> * <var:E> = <var:Q> $ with $ <var:Q> \in \mathbb{N} $ and satisfying the condition that $ <var:H> $ , $ <var:N> $ , $ <var:E> $ , $ <var:o> $ , $ <var:W> $ , $ <var:J> $ , $ <var:u> $ , $ <var:e> $ , and $ <var:i> \geq <nat:2> $ , claim that $ <var:Q> $ is a <def:nine-composite> number given some $ <var:N> $ , $ <var:W> $ , $ <var:i> $ , $ <var:J> $ , $ <var:o> $ , $ <var:e> $ , $ <var:E> $ , $ <var:u> $ , $ <var:H> $ . Accordingly the whole number <nat:21772800> is a <def:nine-composite> natural number . \end{theorem} \begin{proof} Take $ <var:E> = <nat:6> $ , $ <var:e> = <nat:3> $ , $ <var:i> = <nat:7> $ , $ <var:u> = <nat:8> $ , $ <var:o> = <nat:10> $ , $ <var:N> = <nat:12> $ , $ <var:J> = <nat:9> $ , $ <var:W> = <nat:5> $ , $ <var:H> = <nat:4> $ . We justify $ <nat:21772800> = <var:o> \times <var:J> \times <var:N> \times <var:E> \times <var:W> \times <var:H> \times <var:u> \times <var:i> \times <var:e> $ . Observe that $ <nat:12> $ , $ <nat:3> $ , $ <nat:10> $ , $ <nat:7> $ , $ <nat:5> $ , $ <nat:8> $ , $ <nat:6> $ , $ <nat:4> $ and $ <nat:9> > <nat:1> $ . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:nine-composite> ( <var:Q> : nat ) := exists <var:N> <var:W> <var:i> <var:J> <var:o> <var:e> <var:E> <var:u> <var:H> : nat , ( <var:i> * <var:N> * <var:H> * <var:J> * <var:W> * <var:e> * <var:u> * <var:o> * <var:E> = <var:Q> ) /\ ( <var:H> >= <nat:2> ) /\ ( <var:N> >= <nat:2> ) /\ ( <var:E> >= <nat:2> ) /\ ( <var:o> >= <nat:2> ) /\ ( <var:W> >= <nat:2> ) /\ ( <var:J> >= <nat:2> ) /\ ( <var:u> >= <nat:2> ) /\ ( <var:e> >= <nat:2> ) /\ ( <var:i> >= <nat:2> ) . Theorem <genP:1> : <def:nine-composite> <nat:21772800> . Proof . unfold <def:nine-composite> . exists <nat:12> . exists <nat:5> . exists <nat:7> . exists <nat:9> . exists <nat:10> . exists <nat:3> . exists <nat:6> . exists <nat:8> . exists <nat:4> . assert ( <genH> : <nat:12> > <nat:1> ) . { lia . } assert ( <genH> : <nat:3> > <nat:1> ) . { lia . } assert ( <genH> : <nat:10> > <nat:1> ) . { lia . } assert ( <genH> : <nat:7> > <nat:1> ) . { lia . } assert ( <genH> : <nat:5> > <nat:1> ) . { lia . } assert ( <genH> : <nat:8> > <nat:1> ) . { lia . } assert ( <genH> : <nat:6> > <nat:1> ) . { lia . } assert ( <genH> : <nat:4> > <nat:1> ) . { lia . } assert ( <genH> : <nat:9> > <nat:1> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 