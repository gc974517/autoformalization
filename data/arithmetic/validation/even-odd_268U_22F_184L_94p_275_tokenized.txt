\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:p> <nat:94> + <nat:184> <var:L> + <nat:275> + <var:U> <nat:268> + <nat:22> <var:F> $ must be odd . \end{theorem} \begin{proof} $ <var:F> * <nat:22> + <nat:184> * <var:L> + <nat:94> * <var:p> + <nat:268> * <var:U> $ is even . The numbers $ <nat:22> $ , $ <nat:184> $ , $ <nat:94> $ , $ <nat:268> $ , will be even . For this reason , the terms $ <nat:22> <var:F> $ , $ <nat:184> <var:L> $ , $ <var:p> <nat:94> $ , $ <nat:268> <var:U> $ , must be even as well . From the knowledge multiplying of even numbers in $ \mathbb{Z}^+ $ and any number in $ \mathbb{Z}^+ $ is even the formula $ <nat:22> \times <var:F> + <nat:184> \times <var:L> + <var:p> \times <nat:94> + <nat:268> \times <var:U> $ will be clearly even . Recall that $ <nat:275> $ is clearly odd . We prove $ <var:U> \cdot <nat:268> + <nat:275> + <nat:22> \cdot <var:F> + <var:L> \cdot <nat:184> + <var:p> \cdot <nat:94> $ will be odd . Recall the summation of an even positive integer with an odd element of $ \mathbb{N} $ is guaranteed to be odd . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:p> <var:L> <var:U> <var:F> : nat , Nat . odd ( <nat:94> * <var:p> + <nat:184> * <var:L> + <nat:268> * <var:U> + <nat:22> * <var:F> + <nat:275> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:22> = true ) . { auto . } assert ( <genH> : Nat . even <nat:184> = true ) . { auto . } assert ( <genH> : Nat . even <nat:94> = true ) . { auto . } assert ( <genH> : Nat . even <nat:268> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:22> * <var:F> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:184> * <var:L> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:94> * <var:p> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:268> * <var:U> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:94> * <var:p> + <nat:184> * <var:L> + <nat:268> * <var:U> + <nat:22> * <var:F> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } assert ( <genH> : Nat . odd <nat:275> = true ) . { auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . rewrite <genH> . auto . Qed . 