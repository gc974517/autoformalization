\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:o> \cdot <nat:292> + <nat:174> \cdot <var:I> + <nat:120> \cdot <var:J> + <var:b> \cdot <nat:254> + <nat:219> $ is odd assuming any positive integers $ <var:J> $ , $ <var:b> $ , $ <var:I> $ , and $ <var:o> $ . \end{theorem} \begin{proof} Our proposition must be true since $ <nat:292> \times <var:o> + <nat:174> \times <var:I> + <var:b> \times <nat:254> + <nat:120> \times <var:J> $ is obviously even . Remember that the coefficient $ <nat:292> $ is known as even . Therefore , $ <var:o> \cdot <nat:292> $ is guaranteed to be even as well . See the products $ <var:I> \cdot <nat:174> $ and likewise $ <var:J> \cdot <nat:120> $ are even since multiplying of an even element of $ \mathbb{N} $ and a number in $ \mathbb{N} $ will be fundamentally an even whole number and the whole numbers $ <nat:174> $ plus $ <nat:120> $ are trivially instrinsically even numbers in $ \mathbb{N} $ . What's more , the integer $ <nat:254> $ is obviously an even integer . Consequently , $ <nat:254> \cdot <var:b> $ is guaranteed to be even at the same time . It can be justified that our main result is proven . Observe that $ <nat:219> $ is trivially an odd positive integer . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:J> <var:b> <var:I> <var:o> : nat , Nat . odd ( <nat:292> * <var:o> + <nat:174> * <var:I> + <nat:120> * <var:J> + <nat:254> * <var:b> + <nat:219> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:292> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:292> * <var:o> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:174> = true ) . { auto . } assert ( <genH> : Nat . even <nat:120> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:174> * <var:I> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:120> * <var:J> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:254> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:254> * <var:b> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:292> * <var:o> + <nat:174> * <var:I> + <nat:120> * <var:J> + <nat:254> * <var:b> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } assert ( <genH> : Nat . odd <nat:219> = true ) . { auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . rewrite <genH> . auto . Qed . 