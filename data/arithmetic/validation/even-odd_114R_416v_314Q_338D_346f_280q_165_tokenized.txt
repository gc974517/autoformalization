\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} With all positive integers $ <var:R> $ , $ <var:f> $ , $ <var:q> $ , $ <var:Q> $ , $ <var:D> $ , and $ <var:v> $ the sum $ <nat:314> \cdot <var:Q> + <nat:416> \cdot <var:v> + <var:f> \cdot <nat:346> + <nat:338> \cdot <var:D> + <nat:165> + <nat:114> \cdot <var:R> + <var:q> \cdot <nat:280> $ is guaranteed to be odd . \end{theorem} \begin{proof} The summation $ <var:R> \times <nat:114> + <var:v> \times <nat:416> + <nat:314> \times <var:Q> + <nat:338> \times <var:D> + <nat:346> \times <var:f> + <nat:280> \times <var:q> $ is known as even , by reason that the summation of even elements of $ \mathbb{N} $ successively and an even natural must be an even natural number . We know the pairs $ <var:f> \times <nat:346> $ , $ <nat:314> \times <var:Q> $ , $ <var:R> \times <nat:114> $ , and moreover $ <nat:280> \times <var:q> $ are known to be even elements of $ \mathbb{Z}^+ $ . See the term $ <nat:338> \times <var:D> $ is clearly an even natural . This is true by reason that the multiplication between an even whole number with any element of $ \mathbb{N} $ is guaranteed to be even . The term $ <nat:416> \times <var:v> $ is guaranteed to be even . This is proven since the multiplication between an even number with an arbitrary element of $ \mathbb{Z}^+ $ must be an even number in $ \mathbb{N} $ . and moreover by reason that the product of even elements of $ \mathbb{N} $ and an arbitrary positive integer is guaranteed to be even this result must be true . The addition of even natural numbers and an odd natural must be fundamentally an odd number in $ \mathbb{Z}^+ $ . Notice that $ <nat:165> $ is an odd number in $ \mathbb{Z}^+ $ . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:R> <var:f> <var:q> <var:Q> <var:D> <var:v> : nat , Nat . odd ( <nat:314> * <var:Q> + <nat:416> * <var:v> + <nat:346> * <var:f> + <nat:338> * <var:D> + <nat:114> * <var:R> + <nat:280> * <var:q> + <nat:165> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:346> * <var:f> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:314> * <var:Q> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:114> * <var:R> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:280> * <var:q> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:338> * <var:D> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:416> * <var:v> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:314> * <var:Q> + <nat:416> * <var:v> + <nat:346> * <var:f> + <nat:338> * <var:D> + <nat:114> * <var:R> + <nat:280> * <var:q> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . assert ( <genH> : Nat . odd <nat:165> = true ) . { auto . } rewrite <- Nat . negb_even . rewrite <genH> . rewrite <genH> . auto . Qed . 