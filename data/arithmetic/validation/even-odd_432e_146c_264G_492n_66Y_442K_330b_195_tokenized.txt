\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:n> <nat:492> + <nat:330> <var:b> + <var:G> <nat:264> + <nat:432> <var:e> + <var:c> <nat:146> + <var:K> <nat:442> + <nat:195> + <nat:66> <var:Y> $ is guaranteed to be odd given unknowns $ <var:Y> $ , $ <var:e> $ , $ <var:K> $ , $ <var:n> $ , $ <var:b> $ , $ <var:G> $ , and $ <var:c> $ . \end{theorem} \begin{proof} It can be checked that $ <nat:330> <var:b> + <nat:432> <var:e> + <nat:442> <var:K> + <nat:146> <var:c> + <var:Y> <nat:66> + <var:n> <nat:492> + <nat:195> + <nat:264> <var:G> $ is known to be odd since the summation $ <var:K> \cdot <nat:442> + <nat:330> \cdot <var:b> + <nat:432> \cdot <var:e> + <var:G> \cdot <nat:264> + <nat:66> \cdot <var:Y> + <var:c> \cdot <nat:146> + <nat:492> \cdot <var:n> $ is obviously even . The integer $ <nat:432> $ is trivially an even element of $ \mathbb{N} $ . In consequence , the term $ <nat:432> <var:e> $ is even as well . See the pair $ <var:c> <nat:146> $ is obviously an even element of $ \mathbb{N} $ from the fact the positive integer $ <nat:146> $ is trivially by definition an even number in $ \mathbb{Z}^+ $ . On top of this , $ <nat:264> <var:G> $ is clearly an even natural because the natural number $ <nat:264> $ is obviously even . Further , remember the product $ <var:n> <nat:492> $ is known as an even whole number by reason that the multiplication between an even natural number with a natural must be an even element of $ \mathbb{N} $ . This claim is proven from the knowledge the coefficient $ <nat:492> $ is known as obviously an even number in $ \mathbb{N} $ . The product $ <var:Y> <nat:66> $ is trivially an even number from the fact the whole number $ <nat:66> $ is guaranteed to be even . Furthermore , recall that the term $ <var:K> <nat:442> $ is obviously even . This claim is proven from the fact the integer $ <nat:442> $ is trivially by definition an even number in $ \mathbb{N} $ . The number $ <nat:330> $ is obviously even . For this reason , the pair $ <nat:330> <var:b> $ will be even in addition . Observe that the adding between an even whole number and an odd element of $ \mathbb{N} $ must be odd . Recall that $ <nat:195> $ is known as an odd positive integer . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:Y> <var:e> <var:K> <var:n> <var:b> <var:G> <var:c> : nat , Nat . odd ( <nat:492> * <var:n> + <nat:330> * <var:b> + <nat:264> * <var:G> + <nat:432> * <var:e> + <nat:146> * <var:c> + <nat:442> * <var:K> + <nat:66> * <var:Y> + <nat:195> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:432> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:432> * <var:e> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:146> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:146> * <var:c> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:264> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:264> * <var:G> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:492> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:492> * <var:n> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:66> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:66> * <var:Y> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:442> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:442> * <var:K> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:330> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:330> * <var:b> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:492> * <var:n> + <nat:330> * <var:b> + <nat:264> * <var:G> + <nat:432> * <var:e> + <nat:146> * <var:c> + <nat:442> * <var:K> + <nat:66> * <var:Y> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . assert ( <genH> : Nat . odd <nat:195> = true ) . { auto . } rewrite <- Nat . negb_even . rewrite <genH> . rewrite <genH> . auto . Qed . 