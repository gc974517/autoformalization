\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:496> * <var:k> + <var:Z> * <nat:140> + <nat:158> * <var:r> + <var:N> * <nat:128> + <nat:104> + <var:h> * <nat:476> + <var:C> * <nat:296> $ must be even . \end{theorem} \begin{proof} We know that $ <nat:104> $ is trivially an even integer . We justify the claim is proven . We show that $ <nat:296> * <var:C> + <nat:496> * <var:k> + <nat:140> * <var:Z> + <var:h> * <nat:476> + <nat:158> * <var:r> + <nat:128> * <var:N> $ is guaranteed to be even . The products $ <var:N> \times <nat:128> $ , $ <var:r> \times <nat:158> $ , $ <nat:140> \times <var:Z> $ , $ <var:h> \times <nat:476> $ , and also $ <nat:296> \times <var:C> $ are known to be even . Recall that the pair $ <var:k> \times <nat:496> $ is known to be an even number in $ \mathbb{N} $ . $ <var:Z> * <nat:140> + <var:N> * <nat:128> + <var:k> * <nat:496> + <var:h> * <nat:476> + <var:C> * <nat:296> + <var:r> * <nat:158> $ will be fundamentally even as a consequence that the multiplication between an even positive integer with some natural is guaranteed to be even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:k> <var:Z> <var:r> <var:N> <var:h> <var:C> : nat , Nat . even ( <nat:496> * <var:k> + <nat:140> * <var:Z> + <nat:158> * <var:r> + <nat:128> * <var:N> + <nat:476> * <var:h> + <nat:296> * <var:C> + <nat:104> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:104> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:128> * <var:N> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:158> * <var:r> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:140> * <var:Z> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:476> * <var:h> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:296> * <var:C> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:496> * <var:k> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:496> * <var:k> + <nat:140> * <var:Z> + <nat:158> * <var:r> + <nat:128> * <var:N> + <nat:476> * <var:h> + <nat:296> * <var:C> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . auto . Qed . 