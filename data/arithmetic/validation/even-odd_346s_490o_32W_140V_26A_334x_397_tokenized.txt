\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Given all integers $ <var:x> $ , $ <var:W> $ , $ <var:o> $ , $ <var:A> $ , $ <var:V> $ , and $ <var:s> $ $ <nat:334> \cdot <var:x> + <nat:32> \cdot <var:W> + <var:V> \cdot <nat:140> + <nat:397> + <var:s> \cdot <nat:346> + <nat:490> \cdot <var:o> + <var:A> \cdot <nat:26> $ must be odd . \end{theorem} \begin{proof} We prove this proposition must be true . Notice $ <nat:397> $ is an odd element of $ \mathbb{N} $ . Our lemma is proven from the fact $ <nat:346> * <var:s> + <nat:490> * <var:o> + <var:W> * <nat:32> + <nat:140> * <var:V> + <var:A> * <nat:26> + <var:x> * <nat:334> $ is known to be even , as a consequence that the adding between even numbers collectively with an even whole number will be trivially an even element of $ \mathbb{Z}^+ $ . Remember that the leading term $ <nat:334> $ is even Observe that the whole numbers $ <nat:140> $ , $ <nat:32> $ , and $ <nat:490> $ are trivially even In addition , the positive integer $ <nat:26> $ is known as an even integer The leading term $ <nat:346> $ is known as even \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:x> <var:W> <var:o> <var:A> <var:V> <var:s> : nat , Nat . odd ( <nat:334> * <var:x> + <nat:32> * <var:W> + <nat:140> * <var:V> + <nat:346> * <var:s> + <nat:490> * <var:o> + <nat:26> * <var:A> + <nat:397> ) = true . Proof . intros . assert ( <genH> : Nat . odd <nat:397> = true ) . { auto . } assert ( <genH> : Nat . even <nat:334> = true ) . { auto . } assert ( <genH> : Nat . even <nat:140> = true ) . { auto . } assert ( <genH> : Nat . even <nat:32> = true ) . { auto . } assert ( <genH> : Nat . even <nat:490> = true ) . { auto . } assert ( <genH> : Nat . even <nat:26> = true ) . { auto . } assert ( <genH> : Nat . even <nat:346> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:334> * <var:x> + <nat:32> * <var:W> + <nat:140> * <var:V> + <nat:346> * <var:s> + <nat:490> * <var:o> + <nat:26> * <var:A> ) = true ) . { repeat rewrite Nat . even_add . repeat rewrite Nat . even_mul . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . rewrite <genH> . auto . Qed . 