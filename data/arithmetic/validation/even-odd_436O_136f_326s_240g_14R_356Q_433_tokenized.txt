\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:g> <nat:240> + <var:f> <nat:136> + <nat:433> + <nat:326> <var:s> + <nat:356> <var:Q> + <nat:14> <var:R> + <nat:436> <var:O> $ is guaranteed to be odd using every $ <var:s> $ , $ <var:f> $ , $ <var:O> $ , $ <var:g> $ , $ <var:Q> $ , and $ <var:R> \in \mathbb{Z}^+ $ . \end{theorem} \begin{proof} See $ <nat:433> $ is guaranteed to be odd . The summing between even elements of $ \mathbb{N} $ collectively and an odd integer will be odd . Hence , our result must be true . This main result holds by reason that $ <nat:436> \times <var:O> + <var:f> \times <nat:136> + <nat:326> \times <var:s> + <nat:240> \times <var:g> + <nat:14> \times <var:R> + <nat:356> \times <var:Q> $ is even . The coefficients $ <nat:326> $ , $ <nat:240> $ , $ <nat:136> $ , and also $ <nat:356> $ are known as even numbers in $ \mathbb{N} $ On top of this , the whole number $ <nat:14> $ is trivially an even element of $ \mathbb{Z}^+ $ Recall that the coefficient $ <nat:436> $ is even \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:s> <var:f> <var:O> <var:g> <var:Q> <var:R> : nat , Nat . odd ( <nat:240> * <var:g> + <nat:136> * <var:f> + <nat:326> * <var:s> + <nat:356> * <var:Q> + <nat:14> * <var:R> + <nat:436> * <var:O> + <nat:433> ) = true . Proof . intros . assert ( <genH> : Nat . odd <nat:433> = true ) . { auto . } rewrite Nat . odd_add . assert ( <genH> : Nat . even <nat:326> = true ) . { auto . } assert ( <genH> : Nat . even <nat:240> = true ) . { auto . } assert ( <genH> : Nat . even <nat:136> = true ) . { auto . } assert ( <genH> : Nat . even <nat:356> = true ) . { auto . } assert ( <genH> : Nat . even <nat:14> = true ) . { auto . } assert ( <genH> : Nat . even <nat:436> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:240> * <var:g> + <nat:136> * <var:f> + <nat:326> * <var:s> + <nat:356> * <var:Q> + <nat:14> * <var:R> + <nat:436> * <var:O> ) = true ) . { repeat rewrite Nat . even_add . repeat rewrite Nat . even_mul . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite <- Nat . negb_even . rewrite <genH> . rewrite <genH> . auto . Qed . 