\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:135> + <nat:170> <var:b> + <var:V> <nat:110> + <nat:430> <var:f> $ will be odd . \end{theorem} \begin{proof} Notice the summation $ <nat:110> * <var:V> + <nat:430> * <var:f> + <var:b> * <nat:170> $ is known to be even . On top of this , the positive integer $ <nat:170> $ is guaranteed to be even . Consequently , $ <var:b> \times <nat:170> $ is guaranteed to be even as well . The leading term $ <nat:430> $ is trivially even . So , $ <nat:430> \times <var:f> $ is even in addition . The pair $ <nat:110> \times <var:V> $ is an even integer as a consequence that the multiplication between an even natural number with some positive integer is even plus the integer $ <nat:110> $ is known to be itself an even natural number . It can be justified that the sum $ <nat:135> + <nat:170> \times <var:b> + <var:V> \times <nat:110> + <var:f> \times <nat:430> $ must be odd employing the fact that the summing between an even natural and an odd element of $ \mathbb{N} $ is guaranteed to be odd . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:b> <var:V> <var:f> : nat , Nat . odd ( <nat:170> * <var:b> + <nat:110> * <var:V> + <nat:430> * <var:f> + <nat:135> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:170> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:170> * <var:b> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:430> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:430> * <var:f> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:110> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:110> * <var:V> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:170> * <var:b> + <nat:110> * <var:V> + <nat:430> * <var:f> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . auto . Qed . 