\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:356> <var:K> + <nat:410> <var:v> + <nat:136> <var:a> + <var:x> <nat:50> + <nat:51> + <var:i> <nat:38> + <nat:204> <var:j> + <var:n> <nat:244> $ is guaranteed to be odd using any $ <var:K> $ , $ <var:j> $ , $ <var:n> $ , $ <var:i> $ , $ <var:x> $ , $ <var:a> $ , and $ <var:v> \in \mathbb{N} $ . \end{theorem} \begin{proof} It can be demonstrated that our claim is true . We work with the assumption the knowledge $ <nat:38> * <var:i> + <var:x> * <nat:50> + <nat:51> + <var:a> * <nat:136> + <var:K> * <nat:356> + <var:n> * <nat:244> + <nat:410> * <var:v> + <var:j> * <nat:204> $ is guaranteed to be odd as a consequence that the summation $ <nat:244> * <var:n> + <nat:356> * <var:K> + <nat:136> * <var:a> + <nat:50> * <var:x> + <nat:204> * <var:j> + <var:i> * <nat:38> + <var:v> * <nat:410> $ is trivially even . Recall that the adding between an even number in $ \mathbb{N} $ and an even whole number is guaranteed to be an even number . The terms $ <nat:136> * <var:a> $ , $ <var:j> * <nat:204> $ , $ <nat:38> * <var:i> $ , and also $ <var:x> * <nat:50> $ are trivially even since the product between an even whole number and some natural is guaranteed to be instrinsically an even number . Additionally , the pairs $ <nat:410> * <var:v> $ plus $ <var:K> * <nat:356> $ are known to be even positive integers . Further , observe the product $ <nat:244> * <var:n> $ is clearly even because multiplying between an even number in $ \mathbb{Z}^+ $ and any whole number will be even . and by reason that taking the product between an even natural number and an arbitrary element of $ \mathbb{N} $ must be even our theorem must be true . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:K> <var:j> <var:n> <var:i> <var:x> <var:a> <var:v> : nat , Nat . odd ( <nat:356> * <var:K> + <nat:410> * <var:v> + <nat:136> * <var:a> + <nat:50> * <var:x> + <nat:38> * <var:i> + <nat:204> * <var:j> + <nat:244> * <var:n> + <nat:51> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:136> * <var:a> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:204> * <var:j> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:38> * <var:i> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:50> * <var:x> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:410> * <var:v> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:356> * <var:K> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:244> * <var:n> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:356> * <var:K> + <nat:410> * <var:v> + <nat:136> * <var:a> + <nat:50> * <var:x> + <nat:38> * <var:i> + <nat:204> * <var:j> + <nat:244> * <var:n> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . auto . Qed . 