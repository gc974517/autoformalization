\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:d> * <nat:282> + <nat:156> * <var:D> + <nat:161> + <var:w> * <nat:490> + <var:O> * <nat:68> + <nat:214> * <var:Q> + <var:u> * <nat:406> + <var:c> * <nat:112> + <nat:250> * <var:m> $ is guaranteed to be odd taking all integers $ <var:w> $ , $ <var:O> $ , $ <var:D> $ , $ <var:u> $ , $ <var:c> $ , $ <var:Q> $ , $ <var:m> $ , and $ <var:d> $ . \end{theorem} \begin{proof} It can be proven that the main result is proven . What's more , the products $ <var:d> \times <nat:282> $ , $ <var:D> \times <nat:156> $ , $ <var:w> \times <nat:490> $ , $ <var:O> \times <nat:68> $ , $ <var:Q> \times <nat:214> $ , $ <var:u> \times <nat:406> $ , $ <nat:112> \times <var:c> $ , plus $ <var:m> \times <nat:250> $ are known to be even naturals because the numbers $ <nat:282> $ , $ <nat:156> $ , $ <nat:490> $ , $ <nat:68> $ , $ <nat:214> $ , $ <nat:406> $ , $ <nat:112> $ , additionally $ <nat:250> $ are themselves even elements of $ \mathbb{N} $ . The summation of an even natural number and an odd element of $ \mathbb{N} $ is odd . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:w> <var:O> <var:D> <var:u> <var:c> <var:Q> <var:m> <var:d> : nat , Nat . odd ( <nat:282> * <var:d> + <nat:156> * <var:D> + <nat:490> * <var:w> + <nat:68> * <var:O> + <nat:214> * <var:Q> + <nat:406> * <var:u> + <nat:112> * <var:c> + <nat:250> * <var:m> + <nat:161> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:282> = true ) . { auto . } assert ( <genH> : Nat . even <nat:156> = true ) . { auto . } assert ( <genH> : Nat . even <nat:490> = true ) . { auto . } assert ( <genH> : Nat . even <nat:68> = true ) . { auto . } assert ( <genH> : Nat . even <nat:214> = true ) . { auto . } assert ( <genH> : Nat . even <nat:406> = true ) . { auto . } assert ( <genH> : Nat . even <nat:112> = true ) . { auto . } assert ( <genH> : Nat . even <nat:250> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:282> * <var:d> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:156> * <var:D> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:490> * <var:w> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:68> * <var:O> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:214> * <var:Q> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:406> * <var:u> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:112> * <var:c> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:250> * <var:m> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 