\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Taking every $ <var:Y> $ , $ <var:T> $ , $ <var:C> $ , $ <var:P> $ , $ <var:p> $ , and $ <var:N> \in \mathbb{N} $ the formula $ <nat:394> * <var:Y> + <nat:105> + <nat:136> * <var:p> + <nat:86> * <var:T> + <nat:188> * <var:N> + <nat:54> * <var:C> + <nat:58> * <var:P> $ is guaranteed to be odd . \end{theorem} \begin{proof} It can be proven that the formula $ <var:T> \times <nat:86> + <var:N> \times <nat:188> + <var:C> \times <nat:54> + <nat:58> \times <var:P> + <var:Y> \times <nat:394> + <nat:105> + <nat:136> \times <var:p> $ is guaranteed to be odd . Observe $ <nat:105> $ is clearly odd . It can be shown that that the formula $ <nat:188> \times <var:N> + <var:P> \times <nat:58> + <nat:394> \times <var:Y> + <nat:136> \times <var:p> + <nat:86> \times <var:T> + <nat:105> + <nat:54> \times <var:C> $ is odd from the fact $ <nat:58> \times <var:P> + <nat:86> \times <var:T> + <var:p> \times <nat:136> + <nat:54> \times <var:C> + <nat:394> \times <var:Y> + <nat:188> \times <var:N> $ is guaranteed to be even . The numbers $ <nat:394> $ , $ <nat:188> $ , as well as $ <nat:58> $ are clearly even Building on , we know that the whole number $ <nat:136> $ is trivially even In addition to this , observe that the whole number $ <nat:54> $ is known as even The natural number $ <nat:86> $ is trivially even \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:Y> <var:T> <var:C> <var:P> <var:p> <var:N> : nat , Nat . odd ( <nat:394> * <var:Y> + <nat:136> * <var:p> + <nat:86> * <var:T> + <nat:188> * <var:N> + <nat:54> * <var:C> + <nat:58> * <var:P> + <nat:105> ) = true . Proof . intros . assert ( <genH> : Nat . odd <nat:105> = true ) . { auto . } assert ( <genH> : Nat . even <nat:394> = true ) . { auto . } assert ( <genH> : Nat . even <nat:188> = true ) . { auto . } assert ( <genH> : Nat . even <nat:58> = true ) . { auto . } assert ( <genH> : Nat . even <nat:136> = true ) . { auto . } assert ( <genH> : Nat . even <nat:54> = true ) . { auto . } assert ( <genH> : Nat . even <nat:86> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:394> * <var:Y> + <nat:136> * <var:p> + <nat:86> * <var:T> + <nat:188> * <var:N> + <nat:54> * <var:C> + <nat:58> * <var:P> ) = true ) . { repeat rewrite Nat . even_add . repeat rewrite Nat . even_mul . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . rewrite <genH> . auto . Qed . 