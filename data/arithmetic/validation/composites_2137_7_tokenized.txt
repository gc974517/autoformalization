\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \newtheorem{definition}{Definition} \begin{document} \begin{definition} With the condition that there are $ <var:F> $ , $ <var:Z> $ , $ <var:r> $ , $ <var:O> $ , $ <var:v> $ , $ <var:a> $ , $ <var:C> \in \mathbb{N} $ take that some positive integer $ <var:k> $ is said to be <def:seven-composite> when $ <var:k> = <var:F> * <var:a> * <var:Z> * <var:C> * <var:O> * <var:v> * <var:r> $ and factors are larger than or equivalent to <nat:2> . \end{definition} \begin{theorem} The number <nat:134400> is a <def:seven-composite> positive integer . \end{theorem} \begin{proof} Notice that $ <var:r> \cdot <var:v> \cdot <var:a> \cdot <var:Z> \cdot <var:O> \cdot <var:F> \cdot <var:C> = <nat:134400> $ indicates $ <var:v> = <nat:6> $ , $ <var:Z> = <nat:8> $ , $ <var:F> = <nat:10> $ , $ <var:O> = <nat:2> $ , $ <var:C> = <nat:7> $ , $ <var:r> = <nat:4> $ and $ <var:a> = <nat:5> $ . Additionally note $ <nat:5> $ , $ <nat:6> $ , $ <nat:4> $ , $ <nat:10> $ , $ <nat:7> $ , $ <nat:2> $ , and $ <nat:8> \geq <nat:2> $ . This hints the principle is valid . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:seven-composite> ( <var:k> : nat ) := exists <var:F> <var:Z> <var:r> <var:O> <var:v> <var:a> <var:C> : nat , ( <var:k> = <var:F> * <var:a> * <var:Z> * <var:C> * <var:O> * <var:v> * <var:r> ) /\ ( <var:F> >= <nat:2> ) /\ ( <var:Z> >= <nat:2> ) /\ ( <var:r> >= <nat:2> ) /\ ( <var:O> >= <nat:2> ) /\ ( <var:v> >= <nat:2> ) /\ ( <var:a> >= <nat:2> ) /\ ( <var:C> >= <nat:2> ) . Theorem <genP:1> : <def:seven-composite> <nat:134400> . Proof . unfold <def:seven-composite> . exists <nat:10> . exists <nat:8> . exists <nat:4> . exists <nat:2> . exists <nat:6> . exists <nat:5> . exists <nat:7> . assert ( <genH> : <nat:5> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:6> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:4> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:10> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:7> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:2> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:8> >= <nat:2> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 