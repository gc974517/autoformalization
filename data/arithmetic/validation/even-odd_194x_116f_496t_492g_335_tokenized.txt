\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Given any integers $ <var:f> $ , $ <var:g> $ , $ <var:x> $ , and $ <var:t> $ the formula $ <var:g> \cdot <nat:492> + <var:x> \cdot <nat:194> + <nat:335> + <nat:116> \cdot <var:f> + <var:t> \cdot <nat:496> $ must be odd . \end{theorem} \begin{proof} It can be checked that our result holds . Our main result must be true since $ <nat:194> * <var:x> + <nat:116> * <var:f> + <var:t> * <nat:496> + <nat:492> * <var:g> $ is clearly even . Observe the summation of an even positive integer with an even number will be even . Further , the numbers $ <nat:194> $ , $ <nat:116> $ , $ <nat:496> $ , and $ <nat:492> $ are known as even whole numbers . Hence , the products $ <var:x> \cdot <nat:194> $ , $ <nat:116> \cdot <var:f> $ , $ <nat:496> \cdot <var:t> $ , and likewise $ <nat:492> \cdot <var:g> $ will be even also . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:f> <var:g> <var:x> <var:t> : nat , Nat . odd ( <nat:492> * <var:g> + <nat:194> * <var:x> + <nat:116> * <var:f> + <nat:496> * <var:t> + <nat:335> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:194> = true ) . { auto . } assert ( <genH> : Nat . even <nat:116> = true ) . { auto . } assert ( <genH> : Nat . even <nat:496> = true ) . { auto . } assert ( <genH> : Nat . even <nat:492> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:194> * <var:x> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:116> * <var:f> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:496> * <var:t> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:492> * <var:g> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:492> * <var:g> + <nat:194> * <var:x> + <nat:116> * <var:f> + <nat:496> * <var:t> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . auto . Qed . 