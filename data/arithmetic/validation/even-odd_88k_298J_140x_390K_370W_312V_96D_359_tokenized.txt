\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Given all $ <var:x> $ , $ <var:J> $ , $ <var:D> $ , $ <var:V> $ , $ <var:W> $ , $ <var:k> $ , and $ <var:K> $ the formula $ <var:x> \times <nat:140> + <nat:359> + <var:V> \times <nat:312> + <var:W> \times <nat:370> + <var:k> \times <nat:88> + <nat:298> \times <var:J> + <var:D> \times <nat:96> + <var:K> \times <nat:390> $ will be odd . \end{theorem} \begin{proof} It can be proven that this theorem holds . This proposition must be true as a consequence that $ <var:k> \times <nat:88> + <nat:298> \times <var:J> + <nat:140> \times <var:x> + <var:K> \times <nat:390> + <var:W> \times <nat:370> + <var:V> \times <nat:312> + <var:D> \times <nat:96> $ is guaranteed to be even . The terms $ <var:x> <nat:140> $ , $ <nat:96> <var:D> $ , and also $ <nat:390> <var:K> $ are even . Remember that the pairs $ <nat:298> <var:J> $ , $ <var:W> <nat:370> $ , in addition to $ <var:k> <nat:88> $ are known to be even elements of $ \mathbb{N} $ . See that the term $ <nat:312> <var:V> $ is guaranteed to be an even natural number . This claim is proven as a consequence that the multiplication of an even integer and a whole number is guaranteed to be an even positive integer . From the knowledge the multiplication between an even natural with an arbitrary integer is even the claim must be true . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:x> <var:J> <var:D> <var:V> <var:W> <var:k> <var:K> : nat , Nat . odd ( <nat:140> * <var:x> + <nat:312> * <var:V> + <nat:370> * <var:W> + <nat:88> * <var:k> + <nat:298> * <var:J> + <nat:96> * <var:D> + <nat:390> * <var:K> + <nat:359> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:140> * <var:x> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:96> * <var:D> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:390> * <var:K> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:298> * <var:J> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:370> * <var:W> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:88> * <var:k> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:312> * <var:V> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:140> * <var:x> + <nat:312> * <var:V> + <nat:370> * <var:W> + <nat:88> * <var:k> + <nat:298> * <var:J> + <nat:96> * <var:D> + <nat:390> * <var:K> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . auto . Qed . 