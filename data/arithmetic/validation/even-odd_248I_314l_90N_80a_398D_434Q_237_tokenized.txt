\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:90> <var:N> + <nat:80> <var:a> + <var:D> <nat:398> + <nat:434> <var:Q> + <nat:314> <var:l> + <nat:248> <var:I> + <nat:237> $ must be odd . \end{theorem} \begin{proof} Observe the expression $ <var:D> <nat:398> + <nat:248> <var:I> + <nat:237> + <nat:314> <var:l> + <var:Q> <nat:434> + <nat:80> <var:a> + <nat:90> <var:N> $ is clearly odd since the sum $ <nat:90> \cdot <var:N> + <var:Q> \cdot <nat:434> + <var:I> \cdot <nat:248> + <nat:398> \cdot <var:D> + <nat:314> \cdot <var:l> + <nat:80> \cdot <var:a> $ is clearly even . Notice that the products $ <nat:398> * <var:D> $ , $ <var:N> * <nat:90> $ , $ <var:l> * <nat:314> $ , and moreover $ <var:I> * <nat:248> $ are even . What's more , the product $ <nat:80> * <var:a> $ is guaranteed to be even . This claim is proven by reason that taking the product of an even positive integer with any natural number is guaranteed to be an even number in $ \mathbb{N} $ . Remember the product $ <nat:434> * <var:Q> $ is trivially an even whole number . As a consequence that taking the product between an even element of $ \mathbb{Z}^+ $ with any natural number is guaranteed to be an even element of $ \mathbb{Z}^+ $ $ <var:I> * <nat:248> + <nat:314> * <var:l> + <nat:90> * <var:N> + <var:a> * <nat:80> + <var:D> * <nat:398> + <nat:434> * <var:Q> $ will be even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:N> <var:a> <var:D> <var:Q> <var:l> <var:I> : nat , Nat . odd ( <nat:90> * <var:N> + <nat:80> * <var:a> + <nat:398> * <var:D> + <nat:434> * <var:Q> + <nat:314> * <var:l> + <nat:248> * <var:I> + <nat:237> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:398> * <var:D> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:90> * <var:N> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:314> * <var:l> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:248> * <var:I> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:80> * <var:a> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:434> * <var:Q> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:90> * <var:N> + <nat:80> * <var:a> + <nat:398> * <var:D> + <nat:434> * <var:Q> + <nat:314> * <var:l> + <nat:248> * <var:I> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . auto . Qed . 