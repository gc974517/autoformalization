\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \newtheorem{definition}{Definition} \begin{document} \begin{definition} Let $ <var:N> $ , $ <var:R> $ , $ <var:Z> $ , $ <var:p> $ , $ <var:L> \in \mathbb{N} $ . Assume that some whole number $ <var:v> $ will be called a <def:five-composite> integer assuming $ <var:N> \cdot <var:p> \cdot <var:Z> \cdot <var:R> \cdot <var:L> = <var:v> $ plus such that $ <var:N> $ , $ <var:L> $ , $ <var:p> $ , $ <var:R> $ , and $ <var:Z> \geq <nat:2> $ . \end{definition} \begin{theorem} $ <nat:10080> = <var:v> $ is a <def:five-composite> positive integer . \end{theorem} \begin{proof} Recollect that <nat:10080> is a <def:five-composite> number supposing that it is the multiplication of integers $ <var:L> $ , $ <var:Z> $ , $ <var:R> $ , $ <var:p> $ , and $ <var:N> $ so that $ <var:p> $ , $ <var:N> $ , $ <var:Z> $ , $ <var:R> $ , and $ <var:L> \geq <nat:2> $ . Assume $ <var:L> = <nat:8> $ , $ <var:p> = <nat:9> $ , $ <var:R> = <nat:5> $ , $ <var:N> = <nat:7> $ , and $ <var:Z> = <nat:4> $ . We present <nat:10080> is a <def:five-composite> whole number . What's more note that $ <nat:4> $ , $ <nat:7> $ , $ <nat:9> $ , $ <nat:5> $ , and $ <nat:8> $ are greater than or equal to <nat:2> . This suggests <nat:10080> is <def:five-composite> . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:five-composite> ( <var:v> : nat ) := exists <var:N> <var:R> <var:Z> <var:p> <var:L> : nat , ( <var:N> * <var:p> * <var:Z> * <var:R> * <var:L> = <var:v> ) /\ ( <var:N> >= <nat:2> ) /\ ( <var:L> >= <nat:2> ) /\ ( <var:p> >= <nat:2> ) /\ ( <var:R> >= <nat:2> ) /\ ( <var:Z> >= <nat:2> ) . Theorem <genP:1> : <def:five-composite> <nat:10080> . Proof . unfold <def:five-composite> . exists <nat:7> . exists <nat:5> . exists <nat:4> . exists <nat:9> . exists <nat:8> . assert ( <genH> : <nat:4> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:7> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:9> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:5> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:8> >= <nat:2> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 