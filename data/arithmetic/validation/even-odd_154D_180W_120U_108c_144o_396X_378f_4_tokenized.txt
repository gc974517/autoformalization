\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:D> \cdot <nat:154> + <nat:180> \cdot <var:W> + <nat:120> \cdot <var:U> + <var:c> \cdot <nat:108> + <nat:4> + <var:o> \cdot <nat:144> + <var:X> \cdot <nat:396> + <nat:378> \cdot <var:f> $ is guaranteed to be even . \end{theorem} \begin{proof} Adding on , the products $ <var:D> \cdot <nat:154> $ , $ <nat:180> \cdot <var:W> $ , $ <nat:120> \cdot <var:U> $ , $ <nat:108> \cdot <var:c> $ , $ <nat:144> \cdot <var:o> $ , $ <nat:396> \cdot <var:X> $ , in addition to $ <nat:378> \cdot <var:f> $ are clearly even . This fact is proven from the knowledge the numbers $ <nat:154> $ , $ <nat:180> $ , $ <nat:120> $ , $ <nat:108> $ , $ <nat:144> $ , $ <nat:396> $ , and likewise $ <nat:378> $ must be clearly even integers . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:D> <var:W> <var:U> <var:c> <var:o> <var:X> <var:f> : nat , Nat . even ( <nat:154> * <var:D> + <nat:180> * <var:W> + <nat:120> * <var:U> + <nat:108> * <var:c> + <nat:144> * <var:o> + <nat:396> * <var:X> + <nat:378> * <var:f> + <nat:4> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:154> = true ) . { auto . } assert ( <genH> : Nat . even <nat:180> = true ) . { auto . } assert ( <genH> : Nat . even <nat:120> = true ) . { auto . } assert ( <genH> : Nat . even <nat:108> = true ) . { auto . } assert ( <genH> : Nat . even <nat:144> = true ) . { auto . } assert ( <genH> : Nat . even <nat:396> = true ) . { auto . } assert ( <genH> : Nat . even <nat:378> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:154> * <var:D> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:180> * <var:W> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:120> * <var:U> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:108> * <var:c> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:144> * <var:o> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:396> * <var:X> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:378> * <var:f> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 