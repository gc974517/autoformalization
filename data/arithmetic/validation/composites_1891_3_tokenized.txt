\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \newtheorem{definition}{Definition} \begin{document} \begin{definition} Let $ <var:F> $ , $ <var:C> $ , $ <var:L> $ be positive integers larger than or equal to <nat:2> . Take that $ <var:I> \in \mathbb{N} $ will be a <def:three-composite> integer assuming $ <var:I> = <var:C> \times <var:L> \times <var:F> $ . \end{definition} \begin{theorem} $ <nat:84> = <var:I> $ is <def:three-composite> . \end{theorem} \begin{proof} Recall that <nat:84> is <def:three-composite> granted that <nat:84> is the multiplication between integers $ <var:L> $ , $ <var:F> $ and $ <var:C> $ greater than or equal to <nat:2> . Allow $ <var:C> = <nat:4> $ , $ <var:L> = <nat:7> $ , $ <var:F> = <nat:3> $ . In addition note $ <var:C> = <nat:4> $ , $ <var:F> = <nat:3> $ , and $ <var:L> = <nat:7> $ are greater than or equivalent to <nat:2> . Consequently , <nat:84> is a <def:three-composite> positive integer is proven . So , $ <nat:84> = <var:L> \cdot <var:F> \cdot <var:C> $ is true has been proven . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:three-composite> ( <var:I> : nat ) := exists <var:F> <var:C> <var:L> : nat , ( <var:F> >= <nat:2> ) /\ ( <var:C> >= <nat:2> ) /\ ( <var:L> >= <nat:2> ) /\ ( <var:I> = <var:C> * <var:L> * <var:F> ) . Theorem <genP:1> : <def:three-composite> <nat:84> . Proof . unfold <def:three-composite> . exists <nat:3> . exists <nat:4> . exists <nat:7> . assert ( <genH> : <nat:4> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:3> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:7> >= <nat:2> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 