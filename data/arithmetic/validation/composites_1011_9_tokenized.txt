\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} <nat:17107200> is the multiplication between whole numbers $ <var:W> $ , $ <var:u> $ , $ <var:M> $ , $ <var:K> $ , $ <var:G> $ , $ <var:q> $ , $ <var:F> $ , $ <var:j> $ and $ <var:E> \in \mathbb{Z}^+ $ so that $ <var:W> $ , $ <var:q> $ , $ <var:G> $ , $ <var:K> $ , $ <var:F> $ , $ <var:u> $ , $ <var:M> $ , $ <var:j> $ and $ <var:E> $ larger than or equivalent to <nat:2> . \end{theorem} \begin{proof} Let $ <var:G> = <nat:11> $ , $ <var:K> = <nat:10> $ , $ <var:W> = <nat:9> $ , $ <var:q> = <nat:6> $ , $ <var:F> = <nat:3> $ , $ <var:j> = <nat:2> $ , $ <var:u> = <nat:5> $ , $ <var:E> = <nat:12> $ and $ <var:M> = <nat:8> $ . Furthermore observe that $ <nat:5> $ , $ <nat:10> $ , $ <nat:6> $ , $ <nat:11> $ , $ <nat:12> $ , $ <nat:3> $ , $ <nat:2> $ , $ <nat:9> $ and $ <nat:8> \geq <nat:2> $ . \end{proof} \end{document} 
~
Require Import Lia . Theorem <genP:1> : exists <var:W> <var:u> <var:M> <var:K> <var:G> <var:q> <var:F> <var:j> <var:E> : nat , ( <nat:17107200> = <var:W> * <var:u> * <var:M> * <var:K> * <var:G> * <var:q> * <var:F> * <var:j> * <var:E> ) /\ ( <var:W> >= <nat:2> ) /\ ( <var:q> >= <nat:2> ) /\ ( <var:G> >= <nat:2> ) /\ ( <var:K> >= <nat:2> ) /\ ( <var:F> >= <nat:2> ) /\ ( <var:u> >= <nat:2> ) /\ ( <var:M> >= <nat:2> ) /\ ( <var:j> >= <nat:2> ) /\ ( <var:E> >= <nat:2> ) . Proof . exists <nat:9> . exists <nat:5> . exists <nat:8> . exists <nat:10> . exists <nat:11> . exists <nat:6> . exists <nat:3> . exists <nat:2> . exists <nat:12> . assert ( <genH> : <nat:5> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:10> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:6> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:11> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:12> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:3> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:2> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:9> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:8> >= <nat:2> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 