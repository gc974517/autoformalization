\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \newtheorem{definition}{Definition} \begin{document} \begin{definition} Granted that we have $ <var:r> = <var:H> \times <var:e> \times <var:O> \times <var:D> \times <var:V> \times <var:L> \times <var:n> $ with $ <var:r> \in \mathbb{Z}^+ $ plus satisfying the condition that $ <var:D> $ , $ <var:V> $ , $ <var:e> $ , $ <var:n> $ , $ <var:L> $ , $ <var:H> $ , and $ <var:O> \geq <nat:2> $ assuming some $ <var:n> $ , $ <var:V> $ , $ <var:H> $ , $ <var:e> $ , $ <var:L> $ , $ <var:O> $ , $ <var:D> $ , then take that $ <var:r> $ is <def:seven-composite> . \end{definition} \begin{theorem} $ <var:r> = <nat:129600> $ is a <def:seven-composite> whole number . \end{theorem} \begin{proof} Notice that $ <nat:12> * <nat:2> * <nat:3> * <nat:10> * <nat:4> * <nat:9> * <nat:5> = <nat:129600> $ . Moreover observe that $ <nat:3> $ , $ <nat:10> $ , $ <nat:4> $ , $ <nat:12> $ , $ <nat:9> $ , $ <nat:5> $ , $ <nat:2> $ are greater than <nat:1> . This hints the statement is true . Consequently , <nat:129600> is the product between $ <var:V> $ , $ <var:H> $ , $ <var:n> $ , $ <var:L> $ , $ <var:D> $ , $ <var:e> $ , and $ <var:O> \in \mathbb{Z}^+ $ as well as $ <var:L> $ , $ <var:D> $ , $ <var:n> $ , $ <var:V> $ , $ <var:e> $ , $ <var:O> $ , $ <var:H> > <nat:1> $ is verified . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:seven-composite> ( <var:r> : nat ) := exists <var:n> <var:V> <var:H> <var:e> <var:L> <var:O> <var:D> : nat , ( <var:r> = <var:H> * <var:e> * <var:O> * <var:D> * <var:V> * <var:L> * <var:n> ) /\ ( <var:D> >= <nat:2> ) /\ ( <var:V> >= <nat:2> ) /\ ( <var:e> >= <nat:2> ) /\ ( <var:n> >= <nat:2> ) /\ ( <var:L> >= <nat:2> ) /\ ( <var:H> >= <nat:2> ) /\ ( <var:O> >= <nat:2> ) . Theorem <genP:1> : <def:seven-composite> <nat:129600> . Proof . unfold <def:seven-composite> . exists <nat:5> . exists <nat:4> . exists <nat:3> . exists <nat:12> . exists <nat:10> . exists <nat:9> . exists <nat:2> . assert ( <genH> : <nat:3> > <nat:1> ) . { lia . } assert ( <genH> : <nat:10> > <nat:1> ) . { lia . } assert ( <genH> : <nat:4> > <nat:1> ) . { lia . } assert ( <genH> : <nat:12> > <nat:1> ) . { lia . } assert ( <genH> : <nat:9> > <nat:1> ) . { lia . } assert ( <genH> : <nat:5> > <nat:1> ) . { lia . } assert ( <genH> : <nat:2> > <nat:1> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 