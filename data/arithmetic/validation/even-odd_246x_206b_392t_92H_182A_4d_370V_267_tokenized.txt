\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:92> \cdot <var:H> + <nat:246> \cdot <var:x> + <var:d> \cdot <nat:4> + <var:V> \cdot <nat:370> + <var:t> \cdot <nat:392> + <var:b> \cdot <nat:206> + <nat:267> + <var:A> \cdot <nat:182> $ is odd . \end{theorem} \begin{proof} We justify the sum $ <nat:267> + <nat:246> \times <var:x> + <nat:206> \times <var:b> + <nat:392> \times <var:t> + <var:H> \times <nat:92> + <nat:182> \times <var:A> + <nat:4> \times <var:d> + <nat:370> \times <var:V> $ will be odd . We know that the products $ <var:b> <nat:206> $ , $ <var:A> <nat:182> $ , in addition to $ <nat:92> <var:H> $ are known to be even elements of $ \mathbb{Z}^+ $ . Furthermore , the pairs $ <var:x> <nat:246> $ , $ <var:V> <nat:370> $ , additionally $ <nat:392> <var:t> $ are obviously even . Remember the product $ <nat:4> <var:d> $ is even . This must be true from the knowledge taking the product of an even element of $ \mathbb{N} $ and an arbitrary number in $ \mathbb{N} $ is guaranteed to be even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:H> <var:x> <var:d> <var:V> <var:t> <var:b> <var:A> : nat , Nat . odd ( <nat:92> * <var:H> + <nat:246> * <var:x> + <nat:4> * <var:d> + <nat:370> * <var:V> + <nat:392> * <var:t> + <nat:206> * <var:b> + <nat:182> * <var:A> + <nat:267> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:206> * <var:b> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:182> * <var:A> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:92> * <var:H> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:246> * <var:x> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:370> * <var:V> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:392> * <var:t> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:4> * <var:d> ) = true ) . { rewrite Nat . even_mul . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 