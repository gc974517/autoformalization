\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:d> \cdot <nat:268> + <var:V> \cdot <nat:290> + <var:b> \cdot <nat:42> + <nat:425> + <var:g> \cdot <nat:392> + <var:L> \cdot <nat:138> + <var:J> \cdot <nat:346> + <var:w> \cdot <nat:108> $ must be odd . \end{theorem} \begin{proof} The pairs $ <nat:108> \times <var:w> $ , $ <nat:290> \times <var:V> $ , $ <var:d> \times <nat:268> $ , $ <var:g> \times <nat:392> $ , $ <var:L> \times <nat:138> $ , as well as $ <nat:42> \times <var:b> $ are even numbers . This claim is proven by reason that the numbers $ <nat:108> $ , $ <nat:290> $ , $ <nat:268> $ , $ <nat:392> $ , $ <nat:138> $ , and moreover $ <nat:42> $ are clearly even . Take note that the leading term $ <nat:346> $ is known as even . So , $ <nat:346> \times <var:J> $ is guaranteed to be even additionally . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:d> <var:V> <var:b> <var:g> <var:L> <var:J> <var:w> : nat , Nat . odd ( <nat:268> * <var:d> + <nat:290> * <var:V> + <nat:42> * <var:b> + <nat:392> * <var:g> + <nat:138> * <var:L> + <nat:346> * <var:J> + <nat:108> * <var:w> + <nat:425> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:108> = true ) . { auto . } assert ( <genH> : Nat . even <nat:290> = true ) . { auto . } assert ( <genH> : Nat . even <nat:268> = true ) . { auto . } assert ( <genH> : Nat . even <nat:392> = true ) . { auto . } assert ( <genH> : Nat . even <nat:138> = true ) . { auto . } assert ( <genH> : Nat . even <nat:42> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:108> * <var:w> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:290> * <var:V> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:268> * <var:d> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:392> * <var:g> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:138> * <var:L> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:42> * <var:b> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:346> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:346> * <var:J> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 