\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Assuming any positive terms $ <var:z> $ , $ <var:M> $ , $ <var:g> $ , and $ <var:O> $ the expression $ <var:O> \cdot <nat:468> + <var:M> \cdot <nat:408> + <nat:240> \cdot <var:g> + <nat:149> + <var:z> \cdot <nat:358> $ is guaranteed to be odd . \end{theorem} \begin{proof} The expression $ <nat:240> <var:g> + <var:M> <nat:408> + <nat:358> <var:z> + <var:O> <nat:468> $ is even . We know the summation of even numbers in $ \mathbb{N} $ concurrently and an even element of $ \mathbb{Z}^+ $ must be an even number . The pair $ <var:z> \cdot <nat:358> $ is even because taking the product between an even whole number and any integer is guaranteed to be an even natural . On top of this , take note the pairs $ <var:g> \cdot <nat:240> $ and $ <nat:408> \cdot <var:M> $ are obviously even . Remember that the term $ <var:O> \cdot <nat:468> $ is trivially even . and from the knowledge the multiplication of even elements of $ \mathbb{N} $ and a number is by itself an even number in $ \mathbb{Z}^+ $ . By reason that the addition of even natural numbers successively with an odd number in $ \mathbb{Z}^+ $ will be odd , then the claim is proven . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:z> <var:M> <var:g> <var:O> : nat , Nat . odd ( <nat:468> * <var:O> + <nat:408> * <var:M> + <nat:240> * <var:g> + <nat:358> * <var:z> + <nat:149> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:358> * <var:z> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:240> * <var:g> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:408> * <var:M> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:468> * <var:O> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:468> * <var:O> + <nat:408> * <var:M> + <nat:240> * <var:g> + <nat:358> * <var:z> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . auto . Qed . 