\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} For some variables $ <var:t> $ , $ <var:q> $ , $ <var:r> $ , $ <var:Z> $ , $ <var:p> $ , $ <var:T> $ , and $ <var:u> $ the expression $ <nat:38> * <var:q> + <var:T> * <nat:106> + <nat:468> * <var:t> + <var:r> * <nat:158> + <nat:59> + <var:Z> * <nat:226> + <var:p> * <nat:342> + <var:u> * <nat:150> $ is odd . \end{theorem} \begin{proof} Take note that $ <nat:59> $ is clearly odd . It can be justified that that $ <nat:226> \times <var:Z> + <var:T> \times <nat:106> + <nat:59> + <nat:468> \times <var:t> + <nat:342> \times <var:p> + <var:u> \times <nat:150> + <nat:158> \times <var:r> + <var:q> \times <nat:38> $ must be odd . Remember that the summation of an even positive integer with an odd element of $ \mathbb{Z}^+ $ is odd . The positive integers $ <nat:226> $ , $ <nat:38> $ , $ <nat:468> $ , $ <nat:106> $ , and likewise $ <nat:150> $ are guaranteed to be even elements of $ \mathbb{Z}^+ $ Likewise , remember that the leading term $ <nat:342> $ is trivially an even number in $ \mathbb{Z}^+ $ Remember the leading term $ <nat:158> $ is guaranteed to be an even element of $ \mathbb{Z}^+ $ \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:t> <var:q> <var:r> <var:Z> <var:p> <var:T> <var:u> : nat , Nat . odd ( <nat:38> * <var:q> + <nat:106> * <var:T> + <nat:468> * <var:t> + <nat:158> * <var:r> + <nat:226> * <var:Z> + <nat:342> * <var:p> + <nat:150> * <var:u> + <nat:59> ) = true . Proof . intros . assert ( <genH> : Nat . odd <nat:59> = true ) . { auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . assert ( <genH> : Nat . even <nat:226> = true ) . { auto . } assert ( <genH> : Nat . even <nat:38> = true ) . { auto . } assert ( <genH> : Nat . even <nat:468> = true ) . { auto . } assert ( <genH> : Nat . even <nat:106> = true ) . { auto . } assert ( <genH> : Nat . even <nat:150> = true ) . { auto . } assert ( <genH> : Nat . even <nat:342> = true ) . { auto . } assert ( <genH> : Nat . even <nat:158> = true ) . { auto . } repeat rewrite Nat . even_mul . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 