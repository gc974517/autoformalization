\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Given positive numbers $ <var:p> $ , $ <var:T> $ , $ <var:S> $ , and $ <var:W> $ $ <var:T> \cdot <nat:450> + <nat:7> + <var:S> \cdot <nat:474> + <var:W> \cdot <nat:10> + <var:p> \cdot <nat:274> $ will be odd . \end{theorem} \begin{proof} Take note that the formula $ <nat:274> <var:p> + <nat:450> <var:T> + <var:S> <nat:474> + <nat:7> + <var:W> <nat:10> $ is known as odd since $ <var:T> * <nat:450> + <nat:474> * <var:S> + <var:W> * <nat:10> + <var:p> * <nat:274> $ is clearly even . The products $ <var:S> * <nat:474> $ , $ <nat:274> * <var:p> $ , in addition to $ <var:W> * <nat:10> $ are known to be even from the knowledge the numbers $ <nat:474> $ , $ <nat:274> $ , as well as $ <nat:10> $ are guaranteed to be even integers . The whole number $ <nat:450> $ is guaranteed to be even . As a consequence , the pair $ <nat:450> * <var:T> $ will be even too . By reason that the totaling of an even element of $ \mathbb{Z}^+ $ and an even whole number will be even , our theorem is true . Observe that the summation of even positive integers successively and an odd number in $ \mathbb{N} $ is guaranteed to be odd . Take note that $ <nat:7> $ is an odd number in $ \mathbb{Z}^+ $ . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:p> <var:T> <var:S> <var:W> : nat , Nat . odd ( <nat:450> * <var:T> + <nat:474> * <var:S> + <nat:10> * <var:W> + <nat:274> * <var:p> + <nat:7> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:474> = true ) . { auto . } assert ( <genH> : Nat . even <nat:274> = true ) . { auto . } assert ( <genH> : Nat . even <nat:10> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:474> * <var:S> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:274> * <var:p> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:10> * <var:W> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:450> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:450> * <var:T> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:450> * <var:T> + <nat:474> * <var:S> + <nat:10> * <var:W> + <nat:274> * <var:p> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . assert ( <genH> : Nat . odd <nat:7> = true ) . { auto . } rewrite <- Nat . negb_even . rewrite <genH> . rewrite <genH> . auto . Qed . 