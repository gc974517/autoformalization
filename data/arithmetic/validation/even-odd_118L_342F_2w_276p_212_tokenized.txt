\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:w> * <nat:2> + <var:p> * <nat:276> + <nat:342> * <var:F> + <var:L> * <nat:118> + <nat:212> $ will be even given every positive numbers $ <var:F> $ , $ <var:w> $ , $ <var:L> $ , and $ <var:p> $ . \end{theorem} \begin{proof} The totaling between even integers together with an even natural will be by definition an even positive integer . Recall $ <nat:212> $ is trivially an even number . We utilize the knowledge the sum $ <var:L> * <nat:118> + <var:w> * <nat:2> + <nat:276> * <var:p> + <var:F> * <nat:342> $ is clearly even . Remember that the products $ <nat:118> \times <var:L> $ , $ <var:w> \times <nat:2> $ , $ <var:p> \times <nat:276> $ , in addition to $ <nat:342> \times <var:F> $ are clearly even from the fact taking the product between an even positive integer and any natural is even as well as the coefficients $ <nat:118> $ , $ <nat:2> $ , $ <nat:276> $ , and $ <nat:342> $ must be even . $ <var:L> \cdot <nat:118> + <nat:342> \cdot <var:F> + <var:w> \cdot <nat:2> + <nat:276> \cdot <var:p> $ must be trivially even since the summation between an even positive integer and an even number in $ \mathbb{Z}^+ $ is even additionally from the knowledge taking the product of an even element of $ \mathbb{Z}^+ $ with any element of $ \mathbb{N} $ is guaranteed to be even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:F> <var:w> <var:L> <var:p> : nat , Nat . even ( <nat:2> * <var:w> + <nat:276> * <var:p> + <nat:342> * <var:F> + <nat:118> * <var:L> + <nat:212> ) = true . Proof . intros . rewrite Nat . even_add . assert ( <genH> : Nat . even <nat:212> = true ) . { auto . } assert ( <genH> : Nat . even <nat:118> = true ) . { auto . } assert ( <genH> : Nat . even <nat:2> = true ) . { auto . } assert ( <genH> : Nat . even <nat:276> = true ) . { auto . } assert ( <genH> : Nat . even <nat:342> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:118> * <var:L> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:2> * <var:w> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:276> * <var:p> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:342> * <var:F> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:2> * <var:w> + <nat:276> * <var:p> + <nat:342> * <var:F> + <nat:118> * <var:L> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite <genH> . rewrite <genH> . auto . Qed . 