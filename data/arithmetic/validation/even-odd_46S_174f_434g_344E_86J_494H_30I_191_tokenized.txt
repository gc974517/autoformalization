\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Using $ <var:J> $ , $ <var:f> $ , $ <var:S> $ , $ <var:H> $ , $ <var:I> $ , $ <var:g> $ , and $ <var:E> \in \mathbb{Z}^+ $ the expression $ <var:S> * <nat:46> + <nat:174> * <var:f> + <var:g> * <nat:434> + <var:E> * <nat:344> + <nat:191> + <var:J> * <nat:86> + <nat:494> * <var:H> + <var:I> * <nat:30> $ will be odd . \end{theorem} \begin{proof} Notice the terms $ <var:I> \cdot <nat:30> $ , $ <nat:86> \cdot <var:J> $ , $ <nat:494> \cdot <var:H> $ , $ <var:E> \cdot <nat:344> $ , and also $ <var:f> \cdot <nat:174> $ are trivially even from the knowledge multiplying between an even element of $ \mathbb{N} $ and an arbitrary element of $ \mathbb{Z}^+ $ is fundamentally an even element of $ \mathbb{Z}^+ $ . We know that $ <var:S> \cdot <nat:46> $ is known as an even element of $ \mathbb{Z}^+ $ since multiplying between an even element of $ \mathbb{N} $ with a element of $ \mathbb{N} $ is guaranteed to be itself an even element of $ \mathbb{N} $ . The term $ <var:g> \cdot <nat:434> $ is trivially an even natural . This fact is true as a consequence that taking the product of an even integer and any whole number must be even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:J> <var:f> <var:S> <var:H> <var:I> <var:g> <var:E> : nat , Nat . odd ( <nat:46> * <var:S> + <nat:174> * <var:f> + <nat:434> * <var:g> + <nat:344> * <var:E> + <nat:86> * <var:J> + <nat:494> * <var:H> + <nat:30> * <var:I> + <nat:191> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:30> * <var:I> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:86> * <var:J> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:494> * <var:H> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:344> * <var:E> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:174> * <var:f> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:46> * <var:S> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:434> * <var:g> ) = true ) . { rewrite Nat . even_mul . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 