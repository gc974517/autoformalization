\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} The number <nat:518400> is the product between integers $ <var:q> $ , $ <var:V> $ , $ <var:F> $ , $ <var:K> $ , $ <var:n> $ , $ <var:P> $ , $ <var:A> $ and $ <var:G> $ where $ <var:n> $ , $ <var:F> $ , $ <var:P> $ , $ <var:q> $ , $ <var:V> $ , $ <var:G> $ , $ <var:K> $ , and $ <var:A> > <nat:1> $ . \end{theorem} \begin{proof} Take $ <var:q> = <nat:8> $ , $ <var:G> = <nat:6> $ , $ <var:A> = <nat:9> $ , $ <var:V> = <nat:4> $ , $ <var:P> = <nat:2> $ , $ <var:F> = <nat:10> $ , $ <var:n> = <nat:3> $ and $ <var:K> = <nat:5> $ . Observe $ <var:A> * <var:K> * <var:G> * <var:q> * <var:n> * <var:F> * <var:P> * <var:V> = <nat:518400> $ . Further observe that $ <var:n> = <nat:3> $ , $ <var:V> = <nat:4> $ , $ <var:K> = <nat:5> $ , $ <var:q> = <nat:8> $ , $ <var:A> = <nat:9> $ , $ <var:F> = <nat:10> $ , $ <var:G> = <nat:6> $ , $ <var:P> = <nat:2> $ are greater than <nat:1> . This hints our formula is valid . Consequently , $ <var:G> \cdot <var:n> \cdot <var:F> \cdot <var:P> \cdot <var:A> \cdot <var:V> \cdot <var:q> \cdot <var:K> = <nat:518400> $ has been verified . \end{proof} \end{document} 
~
Require Import Lia . Theorem <genP:1> : exists <var:q> <var:V> <var:F> <var:K> <var:n> <var:P> <var:A> <var:G> : nat , ( <nat:518400> = <var:q> * <var:V> * <var:F> * <var:K> * <var:n> * <var:P> * <var:A> * <var:G> ) /\ ( <var:n> > <nat:1> ) /\ ( <var:F> > <nat:1> ) /\ ( <var:P> > <nat:1> ) /\ ( <var:q> > <nat:1> ) /\ ( <var:V> > <nat:1> ) /\ ( <var:G> > <nat:1> ) /\ ( <var:K> > <nat:1> ) /\ ( <var:A> > <nat:1> ) . Proof . exists <nat:8> . exists <nat:4> . exists <nat:10> . exists <nat:5> . exists <nat:3> . exists <nat:2> . exists <nat:9> . exists <nat:6> . assert ( <genH> : <nat:3> > <nat:1> ) . { lia . } assert ( <genH> : <nat:4> > <nat:1> ) . { lia . } assert ( <genH> : <nat:5> > <nat:1> ) . { lia . } assert ( <genH> : <nat:8> > <nat:1> ) . { lia . } assert ( <genH> : <nat:9> > <nat:1> ) . { lia . } assert ( <genH> : <nat:10> > <nat:1> ) . { lia . } assert ( <genH> : <nat:6> > <nat:1> ) . { lia . } assert ( <genH> : <nat:2> > <nat:1> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 