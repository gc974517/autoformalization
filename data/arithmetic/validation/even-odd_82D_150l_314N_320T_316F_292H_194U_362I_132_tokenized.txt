\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:82> * <var:D> + <var:l> * <nat:150> + <var:N> * <nat:314> + <nat:132> + <nat:320> * <var:T> + <nat:316> * <var:F> + <var:H> * <nat:292> + <var:U> * <nat:194> + <nat:362> * <var:I> $ is guaranteed to be even . \end{theorem} \begin{proof} We know the products $ <var:U> * <nat:194> $ , $ <nat:150> * <var:l> $ , and $ <var:F> * <nat:316> $ must be even . On top of this , see the pair $ <var:N> * <nat:314> $ is even . This claim must be true by reason that the multiplication of an even integer and an arbitrary element of $ \mathbb{Z}^+ $ must be even . The pairs $ <var:D> * <nat:82> $ and likewise $ <nat:320> * <var:T> $ are known as even . What's more , observe that the product $ <nat:292> * <var:H> $ is guaranteed to be even . Adding on , observe that the product $ <nat:362> * <var:I> $ is guaranteed to be an even positive integer . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:D> <var:l> <var:N> <var:T> <var:F> <var:H> <var:U> <var:I> : nat , Nat . even ( <nat:82> * <var:D> + <nat:150> * <var:l> + <nat:314> * <var:N> + <nat:320> * <var:T> + <nat:316> * <var:F> + <nat:292> * <var:H> + <nat:194> * <var:U> + <nat:362> * <var:I> + <nat:132> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:194> * <var:U> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:150> * <var:l> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:316> * <var:F> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:314> * <var:N> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:82> * <var:D> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:320> * <var:T> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:292> * <var:H> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:362> * <var:I> ) = true ) . { rewrite Nat . even_mul . auto . } repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 