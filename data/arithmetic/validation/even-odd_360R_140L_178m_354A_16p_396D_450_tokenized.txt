\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:450> + <nat:16> \cdot <var:p> + <var:A> \cdot <nat:354> + <var:R> \cdot <nat:360> + <var:D> \cdot <nat:396> + <nat:140> \cdot <var:L> + <nat:178> \cdot <var:m> $ is even with all variables $ <var:A> $ , $ <var:R> $ , $ <var:D> $ , $ <var:m> $ , $ <var:p> $ , and $ <var:L> $ . \end{theorem} \begin{proof} The adding between an even positive integer and an even integer must be even . We check $ <var:A> <nat:354> + <nat:360> <var:R> + <var:L> <nat:140> + <nat:396> <var:D> + <var:m> <nat:178> + <nat:450> + <var:p> <nat:16> $ is known as even since $ <var:R> <nat:360> + <var:L> <nat:140> + <var:m> <nat:178> + <var:A> <nat:354> + <nat:16> <var:p> + <nat:396> <var:D> $ is guaranteed to be even . The pairs $ <nat:360> \cdot <var:R> $ , $ <var:A> \cdot <nat:354> $ , $ <var:D> \cdot <nat:396> $ , $ <nat:178> \cdot <var:m> $ , in addition to $ <var:L> \cdot <nat:140> $ must be even natural numbers by reason that the multiplication between an even element of $ \mathbb{Z}^+ $ and any integer must be even . What's more , the pair $ <var:p> \cdot <nat:16> $ is guaranteed to be even from the fact the product between an even element of $ \mathbb{Z}^+ $ with any positive integer must be even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:A> <var:R> <var:D> <var:m> <var:p> <var:L> : nat , Nat . even ( <nat:16> * <var:p> + <nat:354> * <var:A> + <nat:360> * <var:R> + <nat:396> * <var:D> + <nat:140> * <var:L> + <nat:178> * <var:m> + <nat:450> ) = true . Proof . intros . rewrite Nat . even_add . assert ( <genH> : Nat . even ( <nat:360> * <var:R> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:354> * <var:A> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:396> * <var:D> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:178> * <var:m> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:140> * <var:L> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:16> * <var:p> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:16> * <var:p> + <nat:354> * <var:A> + <nat:360> * <var:R> + <nat:396> * <var:D> + <nat:140> * <var:L> + <nat:178> * <var:m> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite <genH> . auto . Qed . 