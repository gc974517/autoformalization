\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Given every $ <var:e> $ , $ <var:z> $ , $ <var:L> $ , $ <var:D> $ , $ <var:E> $ , and $ <var:Y> $ the summation $ <nat:312> <var:e> + <var:Y> <nat:332> + <var:D> <nat:244> + <nat:306> <var:E> + <nat:152> + <nat:182> <var:z> + <nat:474> <var:L> $ must be even . \end{theorem} \begin{proof} The totaling of an even positive integer and an even whole number is trivially an even natural number . See $ <nat:152> $ is an even natural number . It can be checked that that the formula $ <nat:312> * <var:e> + <nat:474> * <var:L> + <var:z> * <nat:182> + <nat:306> * <var:E> + <nat:332> * <var:Y> + <var:D> * <nat:244> $ is known as even . The positive integer $ <nat:332> $ is known as an even integer . Then , the product $ <nat:332> <var:Y> $ is guaranteed to be even also . Additionally , the integer $ <nat:182> $ is even . As a consequence , the term $ <var:z> <nat:182> $ must be even additionally . The coefficients $ <nat:244> $ plus $ <nat:312> $ are known as even whole numbers . Consequently , the pairs $ <nat:244> <var:D> $ and also $ <var:e> <nat:312> $ is guaranteed to be even also . On top of this , we know the natural number $ <nat:474> $ is trivially even . So , $ <var:L> <nat:474> $ is guaranteed to be even at the same time . The leading term $ <nat:306> $ is obviously an even whole number . Consequently , the pair $ <nat:306> <var:E> $ is even too . As a consequence that multiplying of even naturals and some integer is guaranteed to be even the summation $ <var:Y> \cdot <nat:332> + <var:E> \cdot <nat:306> + <var:L> \cdot <nat:474> + <nat:312> \cdot <var:e> + <var:D> \cdot <nat:244> + <nat:182> \cdot <var:z> $ will be even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:e> <var:z> <var:L> <var:D> <var:E> <var:Y> : nat , Nat . even ( <nat:312> * <var:e> + <nat:332> * <var:Y> + <nat:244> * <var:D> + <nat:306> * <var:E> + <nat:182> * <var:z> + <nat:474> * <var:L> + <nat:152> ) = true . Proof . intros . rewrite Nat . even_add . assert ( <genH> : Nat . even <nat:152> = true ) . { auto . } assert ( <genH> : Nat . even <nat:332> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:332> * <var:Y> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:182> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:182> * <var:z> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:244> = true ) . { auto . } assert ( <genH> : Nat . even <nat:312> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:244> * <var:D> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:312> * <var:e> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:474> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:474> * <var:L> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:306> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:306> * <var:E> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:312> * <var:e> + <nat:332> * <var:Y> + <nat:244> * <var:D> + <nat:306> * <var:E> + <nat:182> * <var:z> + <nat:474> * <var:L> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite <genH> . rewrite <genH> . auto . Qed . 