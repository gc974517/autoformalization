\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:R> * <nat:232> + <nat:402> * <var:C> + <nat:146> * <var:O> + <nat:99> + <var:D> * <nat:494> + <nat:262> * <var:w> + <nat:280> * <var:B> $ is odd taking all $ <var:C> $ , $ <var:w> $ , $ <var:D> $ , $ <var:R> $ , $ <var:O> $ , and $ <var:B> \in \mathbb{Z}^+ $ . \end{theorem} \begin{proof} It can be verified that this proposition must be true making use of the summing of an even element of $ \mathbb{Z}^+ $ and an odd whole number is guaranteed to be an odd natural number . The terms $ <var:w> \times <nat:262> $ , $ <nat:280> \times <var:B> $ , additionally $ <nat:232> \times <var:R> $ are clearly even natural numbers . This is proven from the fact the product of an even natural with some number in $ \mathbb{Z}^+ $ is even . On top of this , we know the products $ <nat:494> \times <var:D> $ in addition to $ <var:C> \times <nat:402> $ are even elements of $ \mathbb{N} $ . $ <nat:146> \times <var:O> $ is guaranteed to be an even natural number because the multiplication between an even natural with some integer is even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:C> <var:w> <var:D> <var:R> <var:O> <var:B> : nat , Nat . odd ( <nat:232> * <var:R> + <nat:402> * <var:C> + <nat:146> * <var:O> + <nat:494> * <var:D> + <nat:262> * <var:w> + <nat:280> * <var:B> + <nat:99> ) = true . Proof . intros . rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . assert ( <genH> : Nat . even ( <nat:262> * <var:w> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:280> * <var:B> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:232> * <var:R> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:494> * <var:D> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:402> * <var:C> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:146> * <var:O> ) = true ) . { rewrite Nat . even_mul . auto . } rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 