\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \newtheorem{definition}{Definition} \begin{document} \begin{definition} Wherever we get $ <var:H> \times <var:D> \times <var:e> \times <var:Q> \times <var:T> \times <var:w> \times <var:W> \times <var:n> = <var:R> $ for $ <var:R> \in \mathbb{Z}^+ $ plus where $ <var:e> $ , $ <var:H> $ , $ <var:W> $ , $ <var:D> $ , $ <var:T> $ , $ <var:n> $ , $ <var:w> $ , $ <var:Q> \geq <nat:2> $ , say that $ <var:R> $ is a <def:eight-composite> number taking some $ <var:e> $ , $ <var:n> $ , $ <var:w> $ , $ <var:T> $ , $ <var:W> $ , $ <var:Q> $ , $ <var:H> $ , $ <var:D> \in \mathbb{N} $ . \end{definition} \begin{theorem} <nat:967680> is a <def:eight-composite> whole number . \end{theorem} \begin{proof} Notice $ <nat:8> $ , $ <nat:6> $ , $ <nat:4> $ , $ <nat:10> $ , $ <nat:12> $ , $ <nat:3> $ , $ <nat:2> $ and $ <nat:7> $ are larger than or equal to <nat:2> . Additionally notice as well $ <var:D> \times <var:W> \times <var:e> \times <var:n> \times <var:T> \times <var:H> \times <var:w> \times <var:Q> = <nat:967680> $ shows $ <var:n> = <nat:12> $ , $ <var:Q> = <nat:8> $ , $ <var:e> = <nat:6> $ , $ <var:w> = <nat:3> $ , $ <var:D> = <nat:7> $ , $ <var:T> = <nat:10> $ , $ <var:H> = <nat:4> $ , $ <var:W> = <nat:2> $ . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:eight-composite> ( <var:R> : nat ) := exists <var:e> <var:n> <var:w> <var:T> <var:W> <var:Q> <var:H> <var:D> : nat , ( <var:H> * <var:D> * <var:e> * <var:Q> * <var:T> * <var:w> * <var:W> * <var:n> = <var:R> ) /\ ( <var:e> >= <nat:2> ) /\ ( <var:H> >= <nat:2> ) /\ ( <var:W> >= <nat:2> ) /\ ( <var:D> >= <nat:2> ) /\ ( <var:T> >= <nat:2> ) /\ ( <var:n> >= <nat:2> ) /\ ( <var:w> >= <nat:2> ) /\ ( <var:Q> >= <nat:2> ) . Theorem <genP:1> : <def:eight-composite> <nat:967680> . Proof . unfold <def:eight-composite> . assert ( <genH> : <nat:8> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:6> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:4> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:10> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:12> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:3> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:2> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:7> >= <nat:2> ) . { lia . } exists <nat:6> . exists <nat:12> . exists <nat:3> . exists <nat:10> . exists <nat:2> . exists <nat:8> . exists <nat:4> . exists <nat:7> . repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 