\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:171> + <nat:374> \cdot <var:W> + <var:u> \cdot <nat:472> + <var:k> \cdot <nat:68> + <nat:222> \cdot <var:M> + <var:w> \cdot <nat:442> + <var:C> \cdot <nat:102> + <var:X> \cdot <nat:76> + <nat:340> \cdot <var:J> $ is guaranteed to be odd with all unknowns $ <var:W> $ , $ <var:w> $ , $ <var:k> $ , $ <var:u> $ , $ <var:M> $ , $ <var:X> $ , $ <var:J> $ , and $ <var:C> $ . \end{theorem} \begin{proof} The products $ <nat:68> * <var:k> $ , $ <var:C> * <nat:102> $ , $ <var:X> * <nat:76> $ , $ <nat:340> * <var:J> $ , $ <var:W> * <nat:374> $ , $ <var:u> * <nat:472> $ , and likewise $ <nat:442> * <var:w> $ are obviously even naturals by reason that the multiplication of an even number with a element of $ \mathbb{Z}^+ $ is by its very nature an even number in $ \mathbb{Z}^+ $ . What's more , $ <nat:222> * <var:M> $ is known to be even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:W> <var:w> <var:k> <var:u> <var:M> <var:X> <var:J> <var:C> : nat , Nat . odd ( <nat:374> * <var:W> + <nat:472> * <var:u> + <nat:68> * <var:k> + <nat:222> * <var:M> + <nat:442> * <var:w> + <nat:102> * <var:C> + <nat:76> * <var:X> + <nat:340> * <var:J> + <nat:171> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:68> * <var:k> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:102> * <var:C> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:76> * <var:X> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:340> * <var:J> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:374> * <var:W> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:472> * <var:u> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:442> * <var:w> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:222> * <var:M> ) = true ) . { rewrite Nat . even_mul . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 