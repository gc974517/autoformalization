\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:I> \times <nat:22> + <var:p> \times <nat:138> + <var:i> \times <nat:198> + <nat:299> + <var:q> \times <nat:56> + <nat:364> \times <var:z> + <nat:4> \times <var:L> $ is odd using some $ <var:i> $ , $ <var:p> $ , $ <var:q> $ , $ <var:z> $ , $ <var:L> $ , and $ <var:I> \in \mathbb{Z}^+ $ . \end{theorem} \begin{proof} The terms $ <nat:138> \times <var:p> $ , $ <nat:364> \times <var:z> $ , $ <nat:198> \times <var:i> $ , $ <nat:4> \times <var:L> $ , plus $ <var:I> \times <nat:22> $ will be even naturals . This fact must be true by reason that multiplying between an even number in $ \mathbb{Z}^+ $ and some element of $ \mathbb{Z}^+ $ will be even . Additionally , the pair $ <nat:56> \times <var:q> $ is clearly even . Observe that $ <nat:299> $ is obviously odd . We prove $ <var:q> <nat:56> + <nat:22> <var:I> + <nat:364> <var:z> + <nat:299> + <var:L> <nat:4> + <nat:138> <var:p> + <nat:198> <var:i> $ is odd . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:i> <var:p> <var:q> <var:z> <var:L> <var:I> : nat , Nat . odd ( <nat:22> * <var:I> + <nat:138> * <var:p> + <nat:198> * <var:i> + <nat:56> * <var:q> + <nat:364> * <var:z> + <nat:4> * <var:L> + <nat:299> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:138> * <var:p> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:364> * <var:z> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:198> * <var:i> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:4> * <var:L> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:22> * <var:I> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:56> * <var:q> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . odd <nat:299> = true ) . { auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 