\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \newtheorem{definition}{Definition} \begin{document} \begin{definition} Granted that we get so that $ <var:x> $ , $ <var:G> $ , $ <var:V> $ , $ <var:o> $ , and $ <var:M> > <nat:1> $ such that for $ <var:z> \in \mathbb{Z}^+ $ , $ <var:z> = <var:o> \times <var:V> \times <var:M> \times <var:G> \times <var:x> $ taking some $ <var:G> $ , $ <var:V> $ , $ <var:x> $ , $ <var:o> $ , $ <var:M> $ , then we denote that $ <var:z> $ is a <def:five-composite> positive integer . \end{definition} \begin{theorem} $ <nat:6336> = <var:z> $ is <def:five-composite> . \end{theorem} \begin{proof} Recall that <nat:6336> is a <def:five-composite> number supposing that <nat:6336> is the multiplication between numbers $ <var:V> $ , $ <var:M> $ , $ <var:G> $ , $ <var:o> $ and $ <var:x> $ greater than <nat:1> . Note that $ <nat:4> $ , $ <nat:11> $ , $ <nat:2> $ , $ <nat:8> $ and $ <nat:9> > <nat:1> $ . Plus observe that also $ <nat:6336> = <var:x> * <var:V> * <var:G> * <var:o> * <var:M> $ gives $ <var:V> = <nat:11> $ , $ <var:G> = <nat:8> $ , $ <var:o> = <nat:2> $ , $ <var:M> = <nat:9> $ and $ <var:x> = <nat:4> $ . This implies the result is true . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:five-composite> ( <var:z> : nat ) := exists <var:G> <var:V> <var:x> <var:o> <var:M> : nat , ( <var:x> > <nat:1> ) /\ ( <var:G> > <nat:1> ) /\ ( <var:V> > <nat:1> ) /\ ( <var:o> > <nat:1> ) /\ ( <var:M> > <nat:1> ) /\ ( <var:z> = <var:o> * <var:V> * <var:M> * <var:G> * <var:x> ) . Theorem <genP:1> : <def:five-composite> <nat:6336> . Proof . unfold <def:five-composite> . assert ( <genH> : <nat:4> > <nat:1> ) . { lia . } assert ( <genH> : <nat:11> > <nat:1> ) . { lia . } assert ( <genH> : <nat:2> > <nat:1> ) . { lia . } assert ( <genH> : <nat:8> > <nat:1> ) . { lia . } assert ( <genH> : <nat:9> > <nat:1> ) . { lia . } exists <nat:8> . exists <nat:11> . exists <nat:4> . exists <nat:2> . exists <nat:9> . repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 