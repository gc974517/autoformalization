\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:320> \times <var:d> + <nat:451> + <nat:180> \times <var:n> + <var:t> \times <nat:482> + <nat:94> \times <var:G> + <nat:140> \times <var:I> + <var:S> \times <nat:202> + <nat:254> \times <var:o> $ will be odd . \end{theorem} \begin{proof} We work with the assumption that the expression $ <var:G> \times <nat:94> + <nat:320> \times <var:d> + <var:t> \times <nat:482> + <nat:254> \times <var:o> + <nat:180> \times <var:n> + <var:S> \times <nat:202> + <var:I> \times <nat:140> $ is obviously even . Recall the pair $ <var:G> * <nat:94> $ is known as an even element of $ \mathbb{N} $ . Furthermore , observe that the terms $ <nat:254> * <var:o> $ , $ <var:S> * <nat:202> $ , in addition to $ <nat:140> * <var:I> $ will be even numbers in $ \mathbb{Z}^+ $ from the fact the product of an even whole number with some number will be even . In addition to this , observe $ <nat:320> * <var:d> $ is obviously even . This claim is proven because taking the product of an even element of $ \mathbb{Z}^+ $ and an arbitrary positive integer will be even . Recall $ <nat:180> * <var:n> $ is trivially an even integer . The pair $ <nat:482> * <var:t> $ is even . The summation $ <var:n> * <nat:180> + <var:I> * <nat:140> + <var:t> * <nat:482> + <nat:254> * <var:o> + <var:d> * <nat:320> + <var:S> * <nat:202> + <nat:94> * <var:G> $ is obviously even as a consequence that multiplying between even elements of $ \mathbb{N} $ with any positive integer is an even number . The summation of even naturals concurrently and an odd natural must be odd . We know that $ <nat:451> $ is known as an odd number in $ \mathbb{Z}^+ $ . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:d> <var:n> <var:t> <var:G> <var:I> <var:S> <var:o> : nat , Nat . odd ( <nat:320> * <var:d> + <nat:180> * <var:n> + <nat:482> * <var:t> + <nat:94> * <var:G> + <nat:140> * <var:I> + <nat:202> * <var:S> + <nat:254> * <var:o> + <nat:451> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:94> * <var:G> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:254> * <var:o> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:202> * <var:S> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:140> * <var:I> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:320> * <var:d> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:180> * <var:n> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:482> * <var:t> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:320> * <var:d> + <nat:180> * <var:n> + <nat:482> * <var:t> + <nat:94> * <var:G> + <nat:140> * <var:I> + <nat:202> * <var:S> + <nat:254> * <var:o> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . assert ( <genH> : Nat . odd <nat:451> = true ) . { auto . } rewrite <- Nat . negb_even . rewrite <genH> . rewrite <genH> . auto . Qed . 