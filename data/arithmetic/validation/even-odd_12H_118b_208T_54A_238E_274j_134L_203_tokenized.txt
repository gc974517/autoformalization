\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:208> \times <var:T> + <var:j> \times <nat:274> + <var:H> \times <nat:12> + <nat:203> + <nat:134> \times <var:L> + <var:A> \times <nat:54> + <nat:118> \times <var:b> + <nat:238> \times <var:E> $ is odd . \end{theorem} \begin{proof} We use the assumption the understanding that the sum $ <nat:12> <var:H> + <nat:118> <var:b> + <nat:208> <var:T> + <var:A> <nat:54> + <nat:238> <var:E> + <nat:274> <var:j> + <nat:134> <var:L> $ is guaranteed to be even . See that the positive integer $ <nat:134> $ is known to be an even number in $ \mathbb{Z}^+ $ What's more , we know the coefficients $ <nat:274> $ and also $ <nat:118> $ are obviously even The number $ <nat:238> $ is even Take note that the numbers $ <nat:208> $ in addition to $ <nat:54> $ are known as even The positive integer $ <nat:12> $ is known to be even \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:T> <var:j> <var:H> <var:L> <var:A> <var:b> <var:E> : nat , Nat . odd ( <nat:208> * <var:T> + <nat:274> * <var:j> + <nat:12> * <var:H> + <nat:134> * <var:L> + <nat:54> * <var:A> + <nat:118> * <var:b> + <nat:238> * <var:E> + <nat:203> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:134> = true ) . { auto . } assert ( <genH> : Nat . even <nat:274> = true ) . { auto . } assert ( <genH> : Nat . even <nat:118> = true ) . { auto . } assert ( <genH> : Nat . even <nat:238> = true ) . { auto . } assert ( <genH> : Nat . even <nat:208> = true ) . { auto . } assert ( <genH> : Nat . even <nat:54> = true ) . { auto . } assert ( <genH> : Nat . even <nat:12> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:208> * <var:T> + <nat:274> * <var:j> + <nat:12> * <var:H> + <nat:134> * <var:L> + <nat:54> * <var:A> + <nat:118> * <var:b> + <nat:238> * <var:E> ) = true ) . { repeat rewrite Nat . even_add . repeat rewrite Nat . even_mul . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . auto . Qed . 