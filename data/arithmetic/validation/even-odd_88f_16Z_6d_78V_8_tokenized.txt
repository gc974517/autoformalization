\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:78> * <var:V> + <nat:88> * <var:f> + <nat:8> + <var:Z> * <nat:16> + <var:d> * <nat:6> $ must be even . \end{theorem} \begin{proof} Notice the expression $ <nat:88> <var:f> + <nat:16> <var:Z> + <nat:6> <var:d> + <var:V> <nat:78> $ is known as even . Likewise , notice the pairs $ <var:f> \cdot <nat:88> $ , $ <nat:16> \cdot <var:Z> $ , $ <var:d> \cdot <nat:6> $ , and also $ <var:V> \cdot <nat:78> $ must be even . This claim holds from the knowledge the positive integers $ <nat:88> $ , $ <nat:16> $ , $ <nat:6> $ , and likewise $ <nat:78> $ are trivially even . This proposition holds since taking the product of even whole numbers and any integer is even . It can be verified that this result holds . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:V> <var:f> <var:Z> <var:d> : nat , Nat . even ( <nat:78> * <var:V> + <nat:88> * <var:f> + <nat:16> * <var:Z> + <nat:6> * <var:d> + <nat:8> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:88> = true ) . { auto . } assert ( <genH> : Nat . even <nat:16> = true ) . { auto . } assert ( <genH> : Nat . even <nat:6> = true ) . { auto . } assert ( <genH> : Nat . even <nat:78> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:88> * <var:f> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:16> * <var:Z> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:6> * <var:d> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:78> * <var:V> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:78> * <var:V> + <nat:88> * <var:f> + <nat:16> * <var:Z> + <nat:6> * <var:d> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . even_add . rewrite <genH> . auto . Qed . 