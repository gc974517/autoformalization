\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:194> \times <var:R> + <var:s> \times <nat:432> + <var:t> \times <nat:296> + <var:H> \times <nat:324> + <nat:130> $ is guaranteed to be even given every unknowns $ <var:H> $ , $ <var:t> $ , $ <var:s> $ , and $ <var:R> $ . \end{theorem} \begin{proof} Take note that $ <nat:130> $ is known as even . Take note the summation of an even natural and an even element of $ \mathbb{N} $ will be an even number in $ \mathbb{N} $ . We justify that $ <nat:432> * <var:s> + <nat:324> * <var:H> + <var:t> * <nat:296> + <nat:194> * <var:R> $ is obviously even . Further , the integers $ <nat:432> $ , $ <nat:324> $ , $ <nat:296> $ , additionally $ <nat:194> $ are obviously even elements of $ \mathbb{Z}^+ $ . So , the products $ <nat:432> <var:s> $ , $ <var:H> <nat:324> $ , $ <nat:296> <var:t> $ , and also $ <nat:194> <var:R> $ is even as well . From the knowledge multiplying of an even positive integer with any whole number is even the summation $ <nat:194> * <var:R> + <var:H> * <nat:324> + <var:s> * <nat:432> + <nat:296> * <var:t> $ must be instrinsically even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:H> <var:t> <var:s> <var:R> : nat , Nat . even ( <nat:194> * <var:R> + <nat:432> * <var:s> + <nat:296> * <var:t> + <nat:324> * <var:H> + <nat:130> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:130> = true ) . { auto . } rewrite Nat . even_add . assert ( <genH> : Nat . even <nat:432> = true ) . { auto . } assert ( <genH> : Nat . even <nat:324> = true ) . { auto . } assert ( <genH> : Nat . even <nat:296> = true ) . { auto . } assert ( <genH> : Nat . even <nat:194> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:432> * <var:s> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:324> * <var:H> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:296> * <var:t> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:194> * <var:R> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:194> * <var:R> + <nat:432> * <var:s> + <nat:296> * <var:t> + <nat:324> * <var:H> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite <genH> . rewrite <genH> . auto . Qed . 