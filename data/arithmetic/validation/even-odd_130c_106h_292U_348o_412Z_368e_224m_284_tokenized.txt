\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:284> + <nat:130> * <var:c> + <nat:106> * <var:h> + <nat:292> * <var:U> + <nat:348> * <var:o> + <nat:412> * <var:Z> + <var:e> * <nat:368> + <nat:224> * <var:m> $ is even . \end{theorem} \begin{proof} We prove the main result is proven . Adding on , recall the natural numbers $ <nat:130> $ , $ <nat:106> $ , $ <nat:292> $ , $ <nat:348> $ , $ <nat:412> $ , $ <nat:368> $ , and also $ <nat:224> $ will be even whole numbers . So , the products $ <nat:130> \cdot <var:c> $ , $ <nat:106> \cdot <var:h> $ , $ <var:U> \cdot <nat:292> $ , $ <nat:348> \cdot <var:o> $ , $ <nat:412> \cdot <var:Z> $ , $ <nat:368> \cdot <var:e> $ , and likewise $ <nat:224> \cdot <var:m> $ will be even in addition . The totaling between an even number and an even positive integer is an even positive integer . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:c> <var:h> <var:U> <var:o> <var:Z> <var:e> <var:m> : nat , Nat . even ( <nat:130> * <var:c> + <nat:106> * <var:h> + <nat:292> * <var:U> + <nat:348> * <var:o> + <nat:412> * <var:Z> + <nat:368> * <var:e> + <nat:224> * <var:m> + <nat:284> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:130> = true ) . { auto . } assert ( <genH> : Nat . even <nat:106> = true ) . { auto . } assert ( <genH> : Nat . even <nat:292> = true ) . { auto . } assert ( <genH> : Nat . even <nat:348> = true ) . { auto . } assert ( <genH> : Nat . even <nat:412> = true ) . { auto . } assert ( <genH> : Nat . even <nat:368> = true ) . { auto . } assert ( <genH> : Nat . even <nat:224> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:130> * <var:c> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:106> * <var:h> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:292> * <var:U> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:348> * <var:o> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:412> * <var:Z> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:368> * <var:e> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:224> * <var:m> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 