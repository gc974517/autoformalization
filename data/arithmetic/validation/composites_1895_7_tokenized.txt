\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} The positive integer <nat:249480> is the multiplication between $ <var:x> $ , $ <var:u> $ , $ <var:S> $ , $ <var:v> $ , $ <var:r> $ , $ <var:K> $ , and $ <var:s> $ satisfying the condition that $ <var:v> $ , $ <var:u> $ , $ <var:K> $ , $ <var:s> $ , $ <var:S> $ , $ <var:x> $ , and $ <var:r> $ greater than or equal to <nat:2> . \end{theorem} \begin{proof} Allow $ <var:x> = <nat:7> $ , $ <var:u> = <nat:11> $ , $ <var:s> = <nat:5> $ , $ <var:r> = <nat:9> $ , $ <var:K> = <nat:12> $ , $ <var:S> = <nat:3> $ , and $ <var:v> = <nat:2> $ . Note $ <var:v> = <nat:2> $ , $ <var:x> = <nat:7> $ , $ <var:r> = <nat:9> $ , $ <var:S> = <nat:3> $ , $ <var:K> = <nat:12> $ , $ <var:s> = <nat:5> $ , and $ <var:u> = <nat:11> $ are larger than or equal to <nat:2> . Additionally notice that further $ <nat:249480> = <var:u> \cdot <var:v> \cdot <var:S> \cdot <var:r> \cdot <var:x> \cdot <var:K> \cdot <var:s> = <nat:11> \cdot <nat:2> \cdot <nat:3> \cdot <nat:9> \cdot <nat:7> \cdot <nat:12> \cdot <nat:5> $ . \end{proof} \end{document} 
~
Require Import Lia . Theorem <genP:1> : exists <var:x> <var:u> <var:S> <var:v> <var:r> <var:K> <var:s> : nat , ( <nat:249480> = <var:x> * <var:u> * <var:S> * <var:v> * <var:r> * <var:K> * <var:s> ) /\ ( <var:v> >= <nat:2> ) /\ ( <var:u> >= <nat:2> ) /\ ( <var:K> >= <nat:2> ) /\ ( <var:s> >= <nat:2> ) /\ ( <var:S> >= <nat:2> ) /\ ( <var:x> >= <nat:2> ) /\ ( <var:r> >= <nat:2> ) . Proof . exists <nat:7> . exists <nat:11> . exists <nat:3> . exists <nat:2> . exists <nat:9> . exists <nat:12> . exists <nat:5> . assert ( <genH> : <nat:2> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:7> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:9> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:3> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:12> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:5> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:11> >= <nat:2> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 