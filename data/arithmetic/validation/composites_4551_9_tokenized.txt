\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \newtheorem{definition}{Definition} \begin{document} \begin{definition} Assume $ <var:X> $ , $ <var:q> $ , $ <var:P> $ , $ <var:g> $ , $ <var:Y> $ , $ <var:l> $ , $ <var:x> $ , $ <var:r> $ , $ <var:B> $ are natural numbers . Take that $ <var:e> \in \mathbb{Z}^+ $ is called a <def:nine-composite> number when $ <var:P> \times <var:x> \times <var:X> \times <var:g> \times <var:r> \times <var:l> \times <var:B> \times <var:Y> \times <var:q> = <var:e> $ plus factors are more than <nat:1> . \end{definition} \begin{theorem} <nat:19958400> is a <def:nine-composite> positive integer . \end{theorem} \begin{proof} Remember a <def:nine-composite> integer is the product between $ <var:l> $ , $ <var:g> $ , $ <var:Y> $ , $ <var:B> $ , $ <var:x> $ , $ <var:X> $ , $ <var:P> $ , $ <var:q> $ , $ <var:r> $ more than <nat:1> . Observe $ <nat:12> * <nat:7> * <nat:8> * <nat:9> * <nat:11> * <nat:3> * <nat:10> * <nat:5> * <nat:2> = <nat:19958400> $ . Additionally notice $ <nat:2> $ , $ <nat:9> $ , $ <nat:12> $ , $ <nat:11> $ , $ <nat:7> $ , $ <nat:5> $ , $ <nat:8> $ , $ <nat:10> $ , $ <nat:3> $ are larger than <nat:1> . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:nine-composite> ( <var:e> : nat ) := exists <var:X> <var:q> <var:P> <var:g> <var:Y> <var:l> <var:x> <var:r> <var:B> : nat , ( <var:P> * <var:x> * <var:X> * <var:g> * <var:r> * <var:l> * <var:B> * <var:Y> * <var:q> = <var:e> ) /\ ( <var:X> > <nat:1> ) /\ ( <var:q> > <nat:1> ) /\ ( <var:P> > <nat:1> ) /\ ( <var:g> > <nat:1> ) /\ ( <var:Y> > <nat:1> ) /\ ( <var:l> > <nat:1> ) /\ ( <var:x> > <nat:1> ) /\ ( <var:r> > <nat:1> ) /\ ( <var:B> > <nat:1> ) . Theorem <genP:1> : <def:nine-composite> <nat:19958400> . Proof . unfold <def:nine-composite> . exists <nat:11> . exists <nat:8> . exists <nat:3> . exists <nat:9> . exists <nat:12> . exists <nat:2> . exists <nat:5> . exists <nat:10> . exists <nat:7> . assert ( <genH> : <nat:2> > <nat:1> ) . { lia . } assert ( <genH> : <nat:9> > <nat:1> ) . { lia . } assert ( <genH> : <nat:12> > <nat:1> ) . { lia . } assert ( <genH> : <nat:11> > <nat:1> ) . { lia . } assert ( <genH> : <nat:7> > <nat:1> ) . { lia . } assert ( <genH> : <nat:5> > <nat:1> ) . { lia . } assert ( <genH> : <nat:8> > <nat:1> ) . { lia . } assert ( <genH> : <nat:10> > <nat:1> ) . { lia . } assert ( <genH> : <nat:3> > <nat:1> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 