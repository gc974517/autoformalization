\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:12> \times <var:A> + <var:k> \times <nat:254> + <var:W> \times <nat:436> + <nat:60> \times <var:r> + <nat:297> $ is guaranteed to be odd taking integers $ <var:k> $ , $ <var:W> $ , $ <var:A> $ , and $ <var:r> $ . \end{theorem} \begin{proof} The summation $ <var:A> \cdot <nat:12> + <nat:60> \cdot <var:r> + <nat:254> \cdot <var:k> + <nat:436> \cdot <var:W> + <nat:297> $ is known to be odd as a consequence that $ <nat:12> \cdot <var:A> + <nat:60> \cdot <var:r> + <var:k> \cdot <nat:254> + <nat:436> \cdot <var:W> $ is clearly even . The natural number $ <nat:60> $ is known to be an even natural . So , the product $ <var:r> <nat:60> $ is even too . Likewise , notice the term $ <nat:254> <var:k> $ is an even number by reason that the multiplication between an even positive integer with any positive integer must be an even element of $ \mathbb{N} $ . This claim is true because the natural number $ <nat:254> $ is known to be even . The coefficient $ <nat:12> $ is guaranteed to be even . In consequence , the product $ <nat:12> <var:A> $ is even also . Take note that the term $ <nat:436> <var:W> $ is even . This fact must be true by reason that taking the product between an even number in $ \mathbb{Z}^+ $ with an arbitrary number in $ \mathbb{Z}^+ $ will be even and the natural number $ <nat:436> $ is trivially even . This theorem is proven because taking the product of an even number in $ \mathbb{Z}^+ $ and any integer will be even . It can be verified that the claim holds . Remember that $ <nat:297> $ is known as odd . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:k> <var:W> <var:A> <var:r> : nat , Nat . odd ( <nat:12> * <var:A> + <nat:254> * <var:k> + <nat:436> * <var:W> + <nat:60> * <var:r> + <nat:297> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:60> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:60> * <var:r> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:254> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:254> * <var:k> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:12> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:12> * <var:A> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:436> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:436> * <var:W> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:12> * <var:A> + <nat:254> * <var:k> + <nat:436> * <var:W> + <nat:60> * <var:r> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } assert ( <genH> : Nat . odd <nat:297> = true ) . { auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . rewrite <genH> . auto . Qed . 