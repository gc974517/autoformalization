\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:P> * <nat:408> + <nat:267> + <nat:124> * <var:k> + <var:c> * <nat:446> + <nat:218> * <var:j> $ must be odd . \end{theorem} \begin{proof} We utilize the understanding the summation $ <var:P> * <nat:408> + <nat:446> * <var:c> + <var:k> * <nat:124> + <nat:267> + <var:j> * <nat:218> $ is known to be odd because the formula $ <nat:446> * <var:c> + <nat:408> * <var:P> + <nat:218> * <var:j> + <var:k> * <nat:124> $ is known as even . The whole numbers $ <nat:124> $ and $ <nat:218> $ are known as even Furthermore , notice that the positive integer $ <nat:446> $ is trivially even We know the whole number $ <nat:408> $ is an even number in $ \mathbb{N} $ The proposition must be true as a consequence that taking the product of even positive integers and a whole number will be even . Notice $ <nat:267> $ is clearly odd . As a consequence that the summing between even numbers in $ \mathbb{N} $ successively with an odd integer must be by its very nature an odd positive integer , then the summation $ <var:k> <nat:124> + <var:j> <nat:218> + <nat:267> + <nat:446> <var:c> + <var:P> <nat:408> $ itself will be odd . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:P> <var:k> <var:c> <var:j> : nat , Nat . odd ( <nat:408> * <var:P> + <nat:124> * <var:k> + <nat:446> * <var:c> + <nat:218> * <var:j> + <nat:267> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:124> = true ) . { auto . } assert ( <genH> : Nat . even <nat:218> = true ) . { auto . } assert ( <genH> : Nat . even <nat:446> = true ) . { auto . } assert ( <genH> : Nat . even <nat:408> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:408> * <var:P> + <nat:124> * <var:k> + <nat:446> * <var:c> + <nat:218> * <var:j> ) = true ) . { repeat rewrite Nat . even_add . repeat rewrite Nat . even_mul . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } assert ( <genH> : Nat . odd <nat:267> = true ) . { auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . rewrite <genH> . auto . Qed . 