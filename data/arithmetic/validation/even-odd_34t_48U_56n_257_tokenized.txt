\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} For $ <var:t> $ , $ <var:n> $ , and $ <var:U> $ the summation $ <var:t> \cdot <nat:34> + <nat:56> \cdot <var:n> + <nat:257> + <var:U> \cdot <nat:48> $ must be odd . \end{theorem} \begin{proof} The expression $ <var:n> \times <nat:56> + <nat:48> \times <var:U> + <nat:34> \times <var:t> $ is known to be even . See $ <nat:48> \times <var:U> $ is even . This claim holds because the coefficient $ <nat:48> $ is trivially even . Recall the leading term $ <nat:34> $ is guaranteed to be even . As a consequence , the term $ <var:t> \times <nat:34> $ is even also . The pair $ <var:n> \times <nat:56> $ is trivially an even natural . This is proven from the knowledge the number $ <nat:56> $ is clearly an even integer . Since the multiplication between an even number in $ \mathbb{N} $ and some whole number will be by itself an even natural the summation $ <nat:34> * <var:t> + <nat:48> * <var:U> + <nat:56> * <var:n> $ will be even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:t> <var:n> <var:U> : nat , Nat . odd ( <nat:34> * <var:t> + <nat:56> * <var:n> + <nat:48> * <var:U> + <nat:257> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:48> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:48> * <var:U> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:34> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:34> * <var:t> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:56> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:56> * <var:n> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:34> * <var:t> + <nat:56> * <var:n> + <nat:48> * <var:U> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . auto . Qed . 