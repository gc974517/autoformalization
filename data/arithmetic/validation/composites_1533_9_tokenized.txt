\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Allow $ <var:o> $ , $ <var:j> $ , $ <var:P> $ , $ <var:l> $ , $ <var:Q> $ , $ <var:O> $ , $ <var:n> $ , $ <var:u> $ , $ <var:K> $ are positive integers so that $ <var:l> $ , $ <var:K> $ , $ <var:O> $ , $ <var:Q> $ , $ <var:u> $ , $ <var:o> $ , $ <var:j> $ , $ <var:P> $ , and $ <var:n> $ larger than or equal to <nat:2> plus such that the positive integer <nat:5702400> is the multiplication of whole numbers $ <var:o> $ , $ <var:j> $ , $ <var:P> $ , $ <var:l> $ , $ <var:Q> $ , $ <var:O> $ , $ <var:n> $ , $ <var:u> $ , $ <var:K> $ . \end{theorem} \begin{proof} Assume $ <var:P> = <nat:2> $ , $ <var:n> = <nat:9> $ , $ <var:K> = <nat:5> $ , $ <var:Q> = <nat:3> $ , $ <var:l> = <nat:10> $ , $ <var:o> = <nat:8> $ , $ <var:j> = <nat:6> $ , $ <var:O> = <nat:4> $ and $ <var:u> = <nat:11> $ . We justify the formula is valid by reason of In view of $ <var:P> = <nat:2> $ , $ <var:o> = <nat:8> $ , $ <var:K> = <nat:5> $ , $ <var:l> = <nat:10> $ , $ <var:Q> = <nat:3> $ , $ <var:u> = <nat:11> $ , $ <var:O> = <nat:4> $ , $ <var:j> = <nat:6> $ , and $ <var:n> = <nat:9> \geq <nat:2> $ . \end{proof} \end{document} 
~
Require Import Lia . Theorem <genP:1> : exists <var:o> <var:j> <var:P> <var:l> <var:Q> <var:O> <var:n> <var:u> <var:K> : nat , ( <var:l> >= <nat:2> ) /\ ( <var:K> >= <nat:2> ) /\ ( <var:O> >= <nat:2> ) /\ ( <var:Q> >= <nat:2> ) /\ ( <var:u> >= <nat:2> ) /\ ( <var:o> >= <nat:2> ) /\ ( <var:j> >= <nat:2> ) /\ ( <var:P> >= <nat:2> ) /\ ( <var:n> >= <nat:2> ) /\ ( <nat:5702400> = <var:o> * <var:j> * <var:P> * <var:l> * <var:Q> * <var:O> * <var:n> * <var:u> * <var:K> ) . Proof . exists <nat:8> . exists <nat:6> . exists <nat:2> . exists <nat:10> . exists <nat:3> . exists <nat:4> . exists <nat:9> . exists <nat:11> . exists <nat:5> . assert ( <genH> : <nat:2> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:8> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:5> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:10> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:3> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:11> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:4> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:6> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:9> >= <nat:2> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 