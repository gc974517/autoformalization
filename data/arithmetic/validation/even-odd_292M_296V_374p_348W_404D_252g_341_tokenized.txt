\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:D> \cdot <nat:404> + <nat:341> + <var:W> \cdot <nat:348> + <var:p> \cdot <nat:374> + <var:V> \cdot <nat:296> + <var:g> \cdot <nat:252> + <nat:292> \cdot <var:M> $ must be odd . \end{theorem} \begin{proof} It can be checked that the claim is true . We verify the summation $ <nat:348> <var:W> + <nat:296> <var:V> + <var:M> <nat:292> + <var:D> <nat:404> + <nat:341> + <nat:374> <var:p> + <nat:252> <var:g> $ is odd from the fact $ <var:M> <nat:292> + <nat:296> <var:V> + <nat:374> <var:p> + <nat:348> <var:W> + <nat:404> <var:D> + <var:g> <nat:252> $ is clearly even , because the multiplication between even natural numbers must be an even element of $ \mathbb{N} $ . The integers $ <nat:348> $ , $ <nat:404> $ , $ <nat:296> $ , and likewise $ <nat:252> $ are known as even Building on , notice the integer $ <nat:374> $ is known as an even integer The coefficient $ <nat:292> $ is obviously an even number in $ \mathbb{Z}^+ $ \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:D> <var:W> <var:p> <var:V> <var:g> <var:M> : nat , Nat . odd ( <nat:404> * <var:D> + <nat:348> * <var:W> + <nat:374> * <var:p> + <nat:296> * <var:V> + <nat:252> * <var:g> + <nat:292> * <var:M> + <nat:341> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:348> = true ) . { auto . } assert ( <genH> : Nat . even <nat:404> = true ) . { auto . } assert ( <genH> : Nat . even <nat:296> = true ) . { auto . } assert ( <genH> : Nat . even <nat:252> = true ) . { auto . } assert ( <genH> : Nat . even <nat:374> = true ) . { auto . } assert ( <genH> : Nat . even <nat:292> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:404> * <var:D> + <nat:348> * <var:W> + <nat:374> * <var:p> + <nat:296> * <var:V> + <nat:252> * <var:g> + <nat:292> * <var:M> ) = true ) . { repeat rewrite Nat . even_add . repeat rewrite Nat . even_mul . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . auto . Qed . 