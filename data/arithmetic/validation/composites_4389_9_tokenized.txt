\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} There are some natural numbers $ <var:n> $ , $ <var:s> $ , $ <var:P> $ , $ <var:d> $ , $ <var:v> $ , $ <var:j> $ , $ <var:h> $ , $ <var:W> $ and $ <var:D> $ where $ <var:v> $ , $ <var:W> $ , $ <var:n> $ , $ <var:P> $ , $ <var:s> $ , $ <var:d> $ , $ <var:j> $ , $ <var:D> $ , and $ <var:h> \geq <nat:2> $ and so that $ <var:n> \times <var:s> \times <var:d> \times <var:P> \times <var:v> \times <var:W> \times <var:j> \times <var:h> \times <var:D> $ equals $ <nat:7257600> $ . \end{theorem} \begin{proof} We confirm $ <nat:7257600> = <var:n> \times <var:W> \times <var:P> \times <var:d> \times <var:h> \times <var:s> \times <var:j> \times <var:D> \times <var:v> $ . Observe $ <var:j> \cdot <var:D> \cdot <var:d> \cdot <var:n> \cdot <var:v> \cdot <var:s> \cdot <var:h> \cdot <var:P> \cdot <var:W> = <nat:7257600> $ yields $ <var:P> = <nat:4> $ , $ <var:j> = <nat:2> $ , $ <var:D> = <nat:9> $ , $ <var:v> = <nat:12> $ , $ <var:d> = <nat:5> $ , $ <var:s> = <nat:10> $ , $ <var:h> = <nat:3> $ , $ <var:n> = <nat:8> $ and $ <var:W> = <nat:7> $ . Additionally note $ <nat:9> $ , $ <nat:4> $ , $ <nat:10> $ , $ <nat:3> $ , $ <nat:2> $ , $ <nat:12> $ , $ <nat:7> $ , $ <nat:5> $ , $ <nat:8> \geq <nat:2> $ . \end{proof} \end{document} 
~
Require Import Lia . Theorem <genP:1> : exists <var:n> <var:s> <var:P> <var:d> <var:v> <var:j> <var:h> <var:W> <var:D> : nat , ( <var:v> >= <nat:2> ) /\ ( <var:W> >= <nat:2> ) /\ ( <var:n> >= <nat:2> ) /\ ( <var:P> >= <nat:2> ) /\ ( <var:s> >= <nat:2> ) /\ ( <var:d> >= <nat:2> ) /\ ( <var:j> >= <nat:2> ) /\ ( <var:D> >= <nat:2> ) /\ ( <var:h> >= <nat:2> ) /\ ( <var:n> * <var:s> * <var:d> * <var:P> * <var:v> * <var:W> * <var:j> * <var:h> * <var:D> = <nat:7257600> ) . Proof . exists <nat:8> . exists <nat:10> . exists <nat:4> . exists <nat:5> . exists <nat:12> . exists <nat:2> . exists <nat:3> . exists <nat:7> . exists <nat:9> . assert ( <genH> : <nat:9> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:4> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:10> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:3> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:2> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:12> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:7> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:5> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:8> >= <nat:2> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 