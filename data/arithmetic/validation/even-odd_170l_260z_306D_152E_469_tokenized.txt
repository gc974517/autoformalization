\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Assuming all natural terms $ <var:z> $ , $ <var:l> $ , $ <var:D> $ , and $ <var:E> $ the expression $ <var:D> \times <nat:306> + <nat:469> + <nat:152> \times <var:E> + <nat:260> \times <var:z> + <var:l> \times <nat:170> $ must be odd . \end{theorem} \begin{proof} We know the addition of even numbers concurrently with an odd whole number is guaranteed to be odd . $ <var:l> * <nat:170> + <var:z> * <nat:260> + <nat:306> * <var:D> + <nat:152> * <var:E> $ is even . Observe that the terms $ <nat:170> \cdot <var:l> $ , $ <var:z> \cdot <nat:260> $ , $ <var:D> \cdot <nat:306> $ , and $ <var:E> \cdot <nat:152> $ are even elements of $ \mathbb{N} $ as a consequence that the leading terms $ <nat:170> $ , $ <nat:260> $ , $ <nat:306> $ , in addition to $ <nat:152> $ are clearly by their very nature even positive integers . Since the product between even numbers in $ \mathbb{N} $ with a number will be an even whole number our claim holds . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:z> <var:l> <var:D> <var:E> : nat , Nat . odd ( <nat:306> * <var:D> + <nat:152> * <var:E> + <nat:260> * <var:z> + <nat:170> * <var:l> + <nat:469> ) = true . Proof . intros . rewrite Nat . odd_add . assert ( <genH> : Nat . even <nat:170> = true ) . { auto . } assert ( <genH> : Nat . even <nat:260> = true ) . { auto . } assert ( <genH> : Nat . even <nat:306> = true ) . { auto . } assert ( <genH> : Nat . even <nat:152> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:170> * <var:l> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:260> * <var:z> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:306> * <var:D> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:152> * <var:E> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:306> * <var:D> + <nat:152> * <var:E> + <nat:260> * <var:z> + <nat:170> * <var:l> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite <- Nat . negb_even . rewrite <genH> . auto . Qed . 