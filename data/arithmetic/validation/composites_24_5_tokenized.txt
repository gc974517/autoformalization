\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \newtheorem{definition}{Definition} \begin{document} \begin{definition} When we get where $ <var:D> $ , $ <var:G> $ , $ <var:Q> $ , $ <var:J> $ and $ <var:j> > <nat:1> $ such that assuming $ <var:b> \in \mathbb{Z}^+ $ , $ <var:G> * <var:j> * <var:J> * <var:D> * <var:Q> = <var:b> $ , let that $ <var:b> $ is a <def:five-composite> positive integer for some $ <var:G> $ , $ <var:D> $ , $ <var:Q> $ , $ <var:j> $ , $ <var:J> \in \mathbb{Z}^+ $ . \end{definition} \begin{theorem} <nat:9072> is a <def:five-composite> integer . \end{theorem} \begin{proof} Remember <nat:9072> is <def:five-composite> supposing <nat:9072> is the multiplication between natural numbers $ <var:D> $ , $ <var:J> $ , $ <var:Q> $ , $ <var:G> $ , $ <var:j> $ larger than <nat:1> . Notice that $ <nat:7> \times <nat:3> \times <nat:9> \times <nat:8> \times <nat:6> = <nat:9072> $ . Similarly observe that $ <nat:9> $ , $ <nat:6> $ , $ <nat:8> $ , $ <nat:3> $ , $ <nat:7> $ are more than <nat:1> . This suggests <nat:9072> is a <def:five-composite> natural number . Therefore , <nat:9072> is <def:five-composite> is verified . Hence , <nat:9072> is the product of $ <var:Q> $ , $ <var:G> $ , $ <var:j> $ , $ <var:J> $ , and $ <var:D> \in \mathbb{Z}^+ $ is true has been proven . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:five-composite> ( <var:b> : nat ) := exists <var:G> <var:D> <var:Q> <var:j> <var:J> : nat , ( <var:D> > <nat:1> ) /\ ( <var:G> > <nat:1> ) /\ ( <var:Q> > <nat:1> ) /\ ( <var:J> > <nat:1> ) /\ ( <var:j> > <nat:1> ) /\ ( <var:G> * <var:j> * <var:J> * <var:D> * <var:Q> = <var:b> ) . Theorem <genP:1> : <def:five-composite> <nat:9072> . Proof . unfold <def:five-composite> . exists <nat:8> . exists <nat:6> . exists <nat:3> . exists <nat:7> . exists <nat:9> . assert ( <genH> : <nat:9> > <nat:1> ) . { lia . } assert ( <genH> : <nat:6> > <nat:1> ) . { lia . } assert ( <genH> : <nat:8> > <nat:1> ) . { lia . } assert ( <genH> : <nat:3> > <nat:1> ) . { lia . } assert ( <genH> : <nat:7> > <nat:1> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 