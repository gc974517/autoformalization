\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:244> * <var:N> + <var:L> * <nat:254> + <nat:362> * <var:g> + <var:C> * <nat:136> + <nat:20> + <nat:248> * <var:Z> + <nat:328> * <var:Q> + <nat:140> * <var:w> + <var:K> * <nat:474> $ is even assuming positive terms $ <var:K> $ , $ <var:w> $ , $ <var:C> $ , $ <var:Z> $ , $ <var:Q> $ , $ <var:L> $ , $ <var:g> $ , and $ <var:N> $ . \end{theorem} \begin{proof} The numbers $ <nat:474> $ , $ <nat:244> $ , $ <nat:328> $ , and also $ <nat:362> $ are known to be even integers Likewise , the whole numbers $ <nat:140> $ plus $ <nat:254> $ are trivially even integers Additionally , the natural number $ <nat:136> $ is an even natural On top of this , the natural number $ <nat:248> $ is guaranteed to be an even positive integer Recall the product between an even number with an arbitrary natural number is even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:K> <var:w> <var:C> <var:Z> <var:Q> <var:L> <var:g> <var:N> : nat , Nat . even ( <nat:244> * <var:N> + <nat:254> * <var:L> + <nat:362> * <var:g> + <nat:136> * <var:C> + <nat:248> * <var:Z> + <nat:328> * <var:Q> + <nat:140> * <var:w> + <nat:474> * <var:K> + <nat:20> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:474> = true ) . { auto . } assert ( <genH> : Nat . even <nat:244> = true ) . { auto . } assert ( <genH> : Nat . even <nat:328> = true ) . { auto . } assert ( <genH> : Nat . even <nat:362> = true ) . { auto . } assert ( <genH> : Nat . even <nat:140> = true ) . { auto . } assert ( <genH> : Nat . even <nat:254> = true ) . { auto . } assert ( <genH> : Nat . even <nat:136> = true ) . { auto . } assert ( <genH> : Nat . even <nat:248> = true ) . { auto . } repeat rewrite Nat . even_add . repeat rewrite Nat . even_mul . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 