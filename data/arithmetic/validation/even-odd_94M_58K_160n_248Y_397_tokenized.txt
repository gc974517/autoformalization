\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Assuming whole numbers $ <var:n> $ , $ <var:K> $ , $ <var:M> $ , and $ <var:Y> $ the summation $ <nat:397> + <var:M> <nat:94> + <nat:58> <var:K> + <nat:160> <var:n> + <var:Y> <nat:248> $ is guaranteed to be odd . \end{theorem} \begin{proof} We know $ <nat:397> $ is known to be an odd positive integer . The summation between even numbers in $ \mathbb{N} $ together with an odd number in $ \mathbb{Z}^+ $ is guaranteed to be odd . The main result holds because $ <var:n> \cdot <nat:160> + <nat:58> \cdot <var:K> + <var:Y> \cdot <nat:248> + <var:M> \cdot <nat:94> $ is known to be even . Remember the coefficient $ <nat:58> $ is clearly an even number . As a consequence , $ <var:K> \cdot <nat:58> $ is guaranteed to be even at the same time . Remember that the number $ <nat:248> $ is an even element of $ \mathbb{Z}^+ $ . Accordingly , the pair $ <nat:248> \cdot <var:Y> $ will be even too . Notice that the positive integer $ <nat:160> $ is known as even . Hence , $ <var:n> \cdot <nat:160> $ is even too . Take note that the pair $ <nat:94> \cdot <var:M> $ is an even positive integer . This is true by reason that the product of an even whole number and any element of $ \mathbb{Z}^+ $ must be even , which holds by reason that the integer $ <nat:94> $ is even . Our lemma holds because the addition of an even element of $ \mathbb{Z}^+ $ with even natural numbers will be fundamentally an even number in $ \mathbb{N} $ plus from the fact the product between an even integer with some whole number is guaranteed to be an even number in $ \mathbb{Z}^+ $ . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:n> <var:K> <var:M> <var:Y> : nat , Nat . odd ( <nat:94> * <var:M> + <nat:58> * <var:K> + <nat:160> * <var:n> + <nat:248> * <var:Y> + <nat:397> ) = true . Proof . intros . assert ( <genH> : Nat . odd <nat:397> = true ) . { auto . } rewrite Nat . odd_add . assert ( <genH> : Nat . even <nat:58> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:58> * <var:K> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:248> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:248> * <var:Y> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:160> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:160> * <var:n> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:94> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:94> * <var:M> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:94> * <var:M> + <nat:58> * <var:K> + <nat:160> * <var:n> + <nat:248> * <var:Y> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite <- Nat . negb_even . rewrite <genH> . rewrite <genH> . auto . Qed . 