\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:10> \cdot <var:Z> + <nat:198> \cdot <var:A> + <var:s> \cdot <nat:142> + <nat:431> + <nat:284> \cdot <var:d> + <var:j> \cdot <nat:92> + <var:P> \cdot <nat:370> + <nat:438> \cdot <var:E> + <var:L> \cdot <nat:328> $ must be odd . \end{theorem} \begin{proof} Observe the adding of an even number in $ \mathbb{Z}^+ $ and an odd natural is guaranteed to be odd . We use the assumption the understanding that $ <nat:92> * <var:j> + <nat:284> * <var:d> + <nat:370> * <var:P> + <var:E> * <nat:438> + <var:s> * <nat:142> + <nat:198> * <var:A> + <nat:10> * <var:Z> + <nat:328> * <var:L> $ is trivially even . Take note that the pairs $ <var:E> \cdot <nat:438> $ , $ <var:A> \cdot <nat:198> $ , $ <nat:92> \cdot <var:j> $ , $ <nat:142> \cdot <var:s> $ , plus $ <var:L> \cdot <nat:328> $ are trivially even positive integers by reason that the product of an even number in $ \mathbb{Z}^+ $ and any natural number must be even . The product $ <nat:10> \cdot <var:Z> $ is known as even . Observe the pair $ <var:P> \cdot <nat:370> $ is known to be even . Building on , we know that the term $ <nat:284> \cdot <var:d> $ is even . The sum $ <var:Z> <nat:10> + <var:P> <nat:370> + <nat:328> <var:L> + <nat:284> <var:d> + <nat:438> <var:E> + <nat:142> <var:s> + <nat:92> <var:j> + <var:A> <nat:198> $ will be even since the summing between even integers with even integers must be an even integer . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:Z> <var:A> <var:s> <var:d> <var:j> <var:P> <var:E> <var:L> : nat , Nat . odd ( <nat:10> * <var:Z> + <nat:198> * <var:A> + <nat:142> * <var:s> + <nat:284> * <var:d> + <nat:92> * <var:j> + <nat:370> * <var:P> + <nat:438> * <var:E> + <nat:328> * <var:L> + <nat:431> ) = true . Proof . intros . rewrite Nat . odd_add . assert ( <genH> : Nat . even ( <nat:438> * <var:E> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:198> * <var:A> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:92> * <var:j> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:142> * <var:s> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:328> * <var:L> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:10> * <var:Z> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:370> * <var:P> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:284> * <var:d> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:10> * <var:Z> + <nat:198> * <var:A> + <nat:142> * <var:s> + <nat:284> * <var:d> + <nat:92> * <var:j> + <nat:370> * <var:P> + <nat:438> * <var:E> + <nat:328> * <var:L> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite <- Nat . negb_even . rewrite <genH> . auto . Qed . 