\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Assume $ <var:c> $ , $ <var:F> $ , $ <var:o> $ , $ <var:s> $ , $ <var:j> $ as positive integers larger than or equal to <nat:2> . We assume that $ <var:d> \in \mathbb{Z}^+ $ is considered a <def:five-composite> whole number assuming $ <var:c> \times <var:s> \times <var:F> \times <var:j> \times <var:o> = <var:d> $ . Accordingly the number <nat:7392> is a <def:five-composite> positive integer . \end{theorem} \begin{proof} Recall that a <def:five-composite> positive integer is the multiplication of numbers $ <var:o> $ , $ <var:F> $ , $ <var:j> $ , $ <var:s> $ , $ <var:c> $ greater than or equivalent to <nat:2> . Assume $ <var:c> = <nat:8> $ , $ <var:s> = <nat:11> $ , $ <var:o> = <nat:7> $ , $ <var:j> = <nat:4> $ and $ <var:F> = <nat:3> $ . We confirm <nat:7392> is a <def:five-composite> natural number considering $ <nat:7> $ , $ <nat:4> $ , $ <nat:11> $ , $ <nat:3> $ , $ <nat:8> \geq <nat:2> $ and as $ <nat:7392> = <var:s> \times <var:F> \times <var:c> \times <var:j> \times <var:o> $ . Hence , <nat:7392> is <def:five-composite> is true has been proven . Therefore , $ <var:j> $ , $ <var:F> $ , $ <var:o> $ , $ <var:c> $ , and $ <var:s> \geq <nat:2> $ plus $ <nat:7392> = <var:o> \cdot <var:F> \cdot <var:c> \cdot <var:j> \cdot <var:s> $ is verified . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:five-composite> ( <var:d> : nat ) := exists <var:c> <var:F> <var:o> <var:s> <var:j> : nat , ( <var:c> >= <nat:2> ) /\ ( <var:F> >= <nat:2> ) /\ ( <var:o> >= <nat:2> ) /\ ( <var:s> >= <nat:2> ) /\ ( <var:j> >= <nat:2> ) /\ ( <var:c> * <var:s> * <var:F> * <var:j> * <var:o> = <var:d> ) . Theorem <genP:1> : <def:five-composite> <nat:7392> . Proof . unfold <def:five-composite> . exists <nat:8> . exists <nat:3> . exists <nat:7> . exists <nat:11> . exists <nat:4> . assert ( <genH> : <nat:7> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:4> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:11> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:3> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:8> >= <nat:2> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 