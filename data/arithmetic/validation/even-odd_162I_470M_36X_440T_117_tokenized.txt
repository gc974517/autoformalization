\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:117> + <var:M> \cdot <nat:470> + <nat:440> \cdot <var:T> + <var:I> \cdot <nat:162> + <nat:36> \cdot <var:X> $ is odd taking natural numbers $ <var:T> $ , $ <var:X> $ , $ <var:I> $ , and $ <var:M> $ . \end{theorem} \begin{proof} Notice that $ <nat:117> $ is an odd element of $ \mathbb{N} $ . We know the addition between an even number with an odd element of $ \mathbb{Z}^+ $ is odd . We make use the knowledge that the formula $ <var:T> \times <nat:440> + <var:M> \times <nat:470> + <nat:36> \times <var:X> + <var:I> \times <nat:162> + <nat:117> $ is guaranteed to be odd as a consequence that $ <nat:162> \cdot <var:I> + <var:M> \cdot <nat:470> + <var:X> \cdot <nat:36> + <var:T> \cdot <nat:440> $ is even , from the fact the multiplication of even numbers is guaranteed to be even . The positive integer $ <nat:440> $ is even The positive integer $ <nat:470> $ is known as an even positive integer Likewise , notice that the leading term $ <nat:36> $ is clearly an even natural What's more , the leading term $ <nat:162> $ is known as even \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:T> <var:X> <var:I> <var:M> : nat , Nat . odd ( <nat:470> * <var:M> + <nat:440> * <var:T> + <nat:162> * <var:I> + <nat:36> * <var:X> + <nat:117> ) = true . Proof . intros . assert ( <genH> : Nat . odd <nat:117> = true ) . { auto . } rewrite Nat . odd_add . assert ( <genH> : Nat . even <nat:440> = true ) . { auto . } assert ( <genH> : Nat . even <nat:470> = true ) . { auto . } assert ( <genH> : Nat . even <nat:36> = true ) . { auto . } assert ( <genH> : Nat . even <nat:162> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:470> * <var:M> + <nat:440> * <var:T> + <nat:162> * <var:I> + <nat:36> * <var:X> ) = true ) . { repeat rewrite Nat . even_add . repeat rewrite Nat . even_mul . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite <- Nat . negb_even . rewrite <genH> . rewrite <genH> . auto . Qed . 