\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \newtheorem{definition}{Definition} \begin{document} \begin{definition} There are integers $ <var:f> $ , $ <var:x> $ , $ <var:a> $ , $ <var:p> $ , $ <var:v> $ , $ <var:S> $ , $ <var:b> $ more than <nat:1> . We claim that some number $ <var:I> $ will be called a <def:seven-composite> integer assuming $ <var:I> = <var:v> * <var:S> * <var:b> * <var:f> * <var:a> * <var:p> * <var:x> $ . \end{definition} \begin{theorem} The whole number <nat:272160> is a <def:seven-composite> positive integer . \end{theorem} \begin{proof} Observe $ <nat:7> $ , $ <nat:9> $ , $ <nat:6> $ , $ <nat:10> $ , $ <nat:3> $ , $ <nat:2> $ , $ <nat:12> > <nat:1> $ . Furthermore note further $ <nat:272160> = <nat:7> \cdot <nat:10> \cdot <nat:6> \cdot <nat:9> \cdot <nat:12> \cdot <nat:2> \cdot <nat:3> $ . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:seven-composite> ( <var:I> : nat ) := exists <var:f> <var:x> <var:a> <var:p> <var:v> <var:S> <var:b> : nat , ( <var:f> > <nat:1> ) /\ ( <var:x> > <nat:1> ) /\ ( <var:a> > <nat:1> ) /\ ( <var:p> > <nat:1> ) /\ ( <var:v> > <nat:1> ) /\ ( <var:S> > <nat:1> ) /\ ( <var:b> > <nat:1> ) /\ ( <var:I> = <var:v> * <var:S> * <var:b> * <var:f> * <var:a> * <var:p> * <var:x> ) . Theorem <genP:1> : <def:seven-composite> <nat:272160> . Proof . unfold <def:seven-composite> . assert ( <genH> : <nat:7> > <nat:1> ) . { lia . } assert ( <genH> : <nat:9> > <nat:1> ) . { lia . } assert ( <genH> : <nat:6> > <nat:1> ) . { lia . } assert ( <genH> : <nat:10> > <nat:1> ) . { lia . } assert ( <genH> : <nat:3> > <nat:1> ) . { lia . } assert ( <genH> : <nat:2> > <nat:1> ) . { lia . } assert ( <genH> : <nat:12> > <nat:1> ) . { lia . } exists <nat:6> . exists <nat:7> . exists <nat:9> . exists <nat:10> . exists <nat:2> . exists <nat:12> . exists <nat:3> . repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 