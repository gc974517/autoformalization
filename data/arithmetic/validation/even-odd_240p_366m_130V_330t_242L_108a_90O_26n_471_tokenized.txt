\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Given some positive integers $ <var:m> $ , $ <var:V> $ , $ <var:a> $ , $ <var:t> $ , $ <var:n> $ , $ <var:p> $ , $ <var:O> $ , and $ <var:L> $ the expression $ <var:p> \times <nat:240> + <nat:366> \times <var:m> + <var:V> \times <nat:130> + <nat:330> \times <var:t> + <nat:242> \times <var:L> + <var:a> \times <nat:108> + <nat:90> \times <var:O> + <nat:26> \times <var:n> + <nat:471> $ is guaranteed to be odd . \end{theorem} \begin{proof} The products $ <nat:130> <var:V> $ and $ <nat:242> <var:L> $ are obviously even . This claim holds since multiplying of an even natural number and some number in $ \mathbb{Z}^+ $ is guaranteed to be even . Additionally , the term $ <nat:26> <var:n> $ is clearly an even natural . This claim is true by reason that taking the product between an even integer and some natural number is guaranteed to be an even number in $ \mathbb{N} $ . On top of this , remember that the product $ <nat:90> <var:O> $ is clearly an even integer . Take note the products $ <var:a> <nat:108> $ , $ <nat:366> <var:m> $ , in addition to $ <nat:330> <var:t> $ are clearly even integers . This must be true from the fact taking the product between an even element of $ \mathbb{N} $ and some integer will be an even whole number . Observe that $ <var:p> <nat:240> $ is trivially an even natural number . Take note that the adding of even natural numbers collectively and an odd integer must be odd . Observe $ <nat:471> $ is clearly an odd element of $ \mathbb{N} $ . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:m> <var:V> <var:a> <var:t> <var:n> <var:p> <var:O> <var:L> : nat , Nat . odd ( <nat:240> * <var:p> + <nat:366> * <var:m> + <nat:130> * <var:V> + <nat:330> * <var:t> + <nat:242> * <var:L> + <nat:108> * <var:a> + <nat:90> * <var:O> + <nat:26> * <var:n> + <nat:471> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:130> * <var:V> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:242> * <var:L> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:26> * <var:n> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:90> * <var:O> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:108> * <var:a> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:366> * <var:m> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:330> * <var:t> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:240> * <var:p> ) = true ) . { rewrite Nat . even_mul . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . assert ( <genH> : Nat . odd <nat:471> = true ) . { auto . } rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 