\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:6> * <var:Q> + <nat:438> * <var:p> + <nat:160> * <var:y> + <nat:230> + <var:C> * <nat:128> + <nat:498> * <var:N> + <nat:142> * <var:L> + <var:c> * <nat:312> $ is guaranteed to be even with unknowns $ <var:p> $ , $ <var:y> $ , $ <var:c> $ , $ <var:Q> $ , $ <var:L> $ , $ <var:C> $ , and $ <var:N> $ . \end{theorem} \begin{proof} See the whole numbers $ <nat:142> $ , $ <nat:312> $ , $ <nat:438> $ , in addition to $ <nat:160> $ are trivially even . So , the pairs $ <var:L> <nat:142> $ , $ <var:c> <nat:312> $ , $ <var:p> <nat:438> $ , additionally $ <var:y> <nat:160> $ is guaranteed to be even as well . See the positive integer $ <nat:128> $ is obviously an even element of $ \mathbb{Z}^+ $ . Thus , $ <var:C> <nat:128> $ is guaranteed to be even in addition . In addition to this , see the positive integer $ <nat:6> $ is trivially even . In consequence , the product $ <nat:6> <var:Q> $ must be even also . Additionally , recall that the natural number $ <nat:498> $ is known to be even . Consequently , the product $ <nat:498> <var:N> $ is even at the same time . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:p> <var:y> <var:c> <var:Q> <var:L> <var:C> <var:N> : nat , Nat . even ( <nat:6> * <var:Q> + <nat:438> * <var:p> + <nat:160> * <var:y> + <nat:128> * <var:C> + <nat:498> * <var:N> + <nat:142> * <var:L> + <nat:312> * <var:c> + <nat:230> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:142> = true ) . { auto . } assert ( <genH> : Nat . even <nat:312> = true ) . { auto . } assert ( <genH> : Nat . even <nat:438> = true ) . { auto . } assert ( <genH> : Nat . even <nat:160> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:142> * <var:L> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:312> * <var:c> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:438> * <var:p> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:160> * <var:y> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:128> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:128> * <var:C> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:6> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:6> * <var:Q> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:498> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:498> * <var:N> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 