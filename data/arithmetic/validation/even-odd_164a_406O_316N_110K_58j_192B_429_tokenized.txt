\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:N> \cdot <nat:316> + <var:a> \cdot <nat:164> + <nat:192> \cdot <var:B> + <nat:406> \cdot <var:O> + <nat:58> \cdot <var:j> + <nat:429> + <nat:110> \cdot <var:K> $ is guaranteed to be odd for all positive integers $ <var:K> $ , $ <var:a> $ , $ <var:N> $ , $ <var:O> $ , $ <var:j> $ , and $ <var:B> $ . \end{theorem} \begin{proof} Our result must be true since $ <var:K> * <nat:110> + <var:O> * <nat:406> + <var:B> * <nat:192> + <var:N> * <nat:316> + <nat:58> * <var:j> + <nat:164> * <var:a> $ is known as even , because the totaling of even integers collectively and an even positive integer is guaranteed to be trivially an even number in $ \mathbb{Z}^+ $ . We know that the pairs $ <var:B> * <nat:192> $ , $ <nat:58> * <var:j> $ , $ <nat:316> * <var:N> $ , $ <nat:406> * <var:O> $ , plus $ <nat:110> * <var:K> $ are guaranteed to be even elements of $ \mathbb{N} $ . This claim holds from the knowledge the whole numbers $ <nat:192> $ , $ <nat:58> $ , $ <nat:316> $ , $ <nat:406> $ , as well as $ <nat:110> $ must be even numbers . The pair $ <var:a> * <nat:164> $ is trivially an even element of $ \mathbb{Z}^+ $ . This fact must be true from the fact the number $ <nat:164> $ is known as instrinsically an even element of $ \mathbb{N} $ . Recall that the adding of an even element of $ \mathbb{Z}^+ $ and an odd number in $ \mathbb{Z}^+ $ is guaranteed to be an odd natural number . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:K> <var:a> <var:N> <var:O> <var:j> <var:B> : nat , Nat . odd ( <nat:316> * <var:N> + <nat:164> * <var:a> + <nat:192> * <var:B> + <nat:406> * <var:O> + <nat:58> * <var:j> + <nat:110> * <var:K> + <nat:429> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:192> = true ) . { auto . } assert ( <genH> : Nat . even <nat:58> = true ) . { auto . } assert ( <genH> : Nat . even <nat:316> = true ) . { auto . } assert ( <genH> : Nat . even <nat:406> = true ) . { auto . } assert ( <genH> : Nat . even <nat:110> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:192> * <var:B> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:58> * <var:j> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:316> * <var:N> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:406> * <var:O> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:110> * <var:K> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:164> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:164> * <var:a> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:316> * <var:N> + <nat:164> * <var:a> + <nat:192> * <var:B> + <nat:406> * <var:O> + <nat:58> * <var:j> + <nat:110> * <var:K> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . auto . Qed . 