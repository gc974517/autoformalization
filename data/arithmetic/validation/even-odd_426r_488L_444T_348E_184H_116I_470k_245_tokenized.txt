\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:I> \cdot <nat:116> + <var:H> \cdot <nat:184> + <nat:488> \cdot <var:L> + <var:r> \cdot <nat:426> + <var:k> \cdot <nat:470> + <nat:348> \cdot <var:E> + <nat:245> + <nat:444> \cdot <var:T> $ will be odd . \end{theorem} \begin{proof} From the knowledge the summing of an even natural number with an odd integer is guaranteed to be odd , hence this lemma is true . Take note that $ <nat:245> $ is clearly odd . Notice that the expression $ <var:I> \times <nat:116> + <nat:444> \times <var:T> + <var:L> \times <nat:488> + <var:H> \times <nat:184> + <nat:470> \times <var:k> + <nat:426> \times <var:r> + <nat:348> \times <var:E> + <nat:245> $ is known as odd by reason that the formula $ <var:T> \times <nat:444> + <var:E> \times <nat:348> + <nat:184> \times <var:H> + <nat:488> \times <var:L> + <nat:116> \times <var:I> + <nat:470> \times <var:k> + <var:r> \times <nat:426> $ is guaranteed to be even . In addition to this , the leading terms $ <nat:444> $ , $ <nat:348> $ , $ <nat:184> $ , $ <nat:488> $ , $ <nat:116> $ , $ <nat:470> $ , and likewise $ <nat:426> $ are clearly even . Therefore , the products $ <var:T> <nat:444> $ , $ <var:E> <nat:348> $ , $ <var:H> <nat:184> $ , $ <nat:488> <var:L> $ , $ <nat:116> <var:I> $ , $ <var:k> <nat:470> $ , and likewise $ <var:r> <nat:426> $ is even additionally . By reason that the totaling between even positive integers with even elements of $ \mathbb{Z}^+ $ will be even , the expression $ <nat:426> \times <var:r> + <nat:488> \times <var:L> + <var:T> \times <nat:444> + <nat:348> \times <var:E> + <var:H> \times <nat:184> + <var:I> \times <nat:116> + <nat:470> \times <var:k> $ is guaranteed to be instrinsically even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:I> <var:H> <var:L> <var:r> <var:k> <var:E> <var:T> : nat , Nat . odd ( <nat:116> * <var:I> + <nat:184> * <var:H> + <nat:488> * <var:L> + <nat:426> * <var:r> + <nat:470> * <var:k> + <nat:348> * <var:E> + <nat:444> * <var:T> + <nat:245> ) = true . Proof . intros . rewrite Nat . odd_add . assert ( <genH> : Nat . odd <nat:245> = true ) . { auto . } assert ( <genH> : Nat . even <nat:444> = true ) . { auto . } assert ( <genH> : Nat . even <nat:348> = true ) . { auto . } assert ( <genH> : Nat . even <nat:184> = true ) . { auto . } assert ( <genH> : Nat . even <nat:488> = true ) . { auto . } assert ( <genH> : Nat . even <nat:116> = true ) . { auto . } assert ( <genH> : Nat . even <nat:470> = true ) . { auto . } assert ( <genH> : Nat . even <nat:426> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:444> * <var:T> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:348> * <var:E> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:184> * <var:H> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:488> * <var:L> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:116> * <var:I> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:470> * <var:k> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:426> * <var:r> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:116> * <var:I> + <nat:184> * <var:H> + <nat:488> * <var:L> + <nat:426> * <var:r> + <nat:470> * <var:k> + <nat:348> * <var:E> + <nat:444> * <var:T> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite <- Nat . negb_even . rewrite <genH> . rewrite <genH> . auto . Qed . 