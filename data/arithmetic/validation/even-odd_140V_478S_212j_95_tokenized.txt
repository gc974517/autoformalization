\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:95> + <nat:212> * <var:j> + <var:V> * <nat:140> + <var:S> * <nat:478> $ must be odd assuming any variables $ <var:j> $ , $ <var:S> $ , and $ <var:V> $ . \end{theorem} \begin{proof} It can be justified that our main result holds . This claim holds by reason that $ <var:V> \times <nat:140> + <var:S> \times <nat:478> + <nat:212> \times <var:j> $ is known as even . Take note the totaling between an even positive integer and an even whole number will be an even integer . Additionally , recall that the pairs $ <nat:140> <var:V> $ , $ <nat:478> <var:S> $ , in addition to $ <var:j> <nat:212> $ are known as even natural numbers from the knowledge the whole numbers $ <nat:140> $ , $ <nat:478> $ , and $ <nat:212> $ are known as even . and moreover since multiplying of even integers with some number must be by itself an even natural number . Take note that the adding of even elements of $ \mathbb{N} $ with an odd natural is guaranteed to be odd . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:j> <var:S> <var:V> : nat , Nat . odd ( <nat:212> * <var:j> + <nat:140> * <var:V> + <nat:478> * <var:S> + <nat:95> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:140> = true ) . { auto . } assert ( <genH> : Nat . even <nat:478> = true ) . { auto . } assert ( <genH> : Nat . even <nat:212> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:140> * <var:V> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:478> * <var:S> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:212> * <var:j> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:212> * <var:j> + <nat:140> * <var:V> + <nat:478> * <var:S> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . auto . Qed . 