\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \newtheorem{definition}{Definition} \begin{document} \begin{definition} If we have $ <var:j> $ , $ <var:X> $ , $ <var:e> $ , $ <var:v> $ , $ <var:l> \geq <nat:2> $ satisfying the condition that assuming some whole number $ <var:F> $ , $ <var:l> \times <var:X> \times <var:e> \times <var:j> \times <var:v> = <var:F> $ , then assume that $ <var:F> $ is a <def:five-composite> whole number assuming some integers $ <var:v> $ , $ <var:j> $ , $ <var:X> $ , $ <var:e> $ , $ <var:l> $ . \end{definition} \begin{theorem} The integer <nat:20160> is a <def:five-composite> number . \end{theorem} \begin{proof} Remember that <nat:20160> is <def:five-composite> iff <nat:20160> is the product between $ <var:e> $ , $ <var:v> $ , $ <var:l> $ , $ <var:X> $ , and $ <var:j> $ greater than or equivalent to <nat:2> . Note that $ <var:j> \times <var:l> \times <var:e> \times <var:v> \times <var:X> = <nat:10> \times <nat:7> \times <nat:8> \times <nat:4> \times <nat:9> = <nat:20160> $ . Also note that $ <nat:8> $ , $ <nat:7> $ , $ <nat:4> $ , $ <nat:9> $ , and $ <nat:10> $ are more than or equal to <nat:2> . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:five-composite> ( <var:F> : nat ) := exists <var:v> <var:j> <var:X> <var:e> <var:l> : nat , ( <var:j> >= <nat:2> ) /\ ( <var:X> >= <nat:2> ) /\ ( <var:e> >= <nat:2> ) /\ ( <var:v> >= <nat:2> ) /\ ( <var:l> >= <nat:2> ) /\ ( <var:l> * <var:X> * <var:e> * <var:j> * <var:v> = <var:F> ) . Theorem <genP:1> : <def:five-composite> <nat:20160> . Proof . unfold <def:five-composite> . exists <nat:4> . exists <nat:10> . exists <nat:9> . exists <nat:8> . exists <nat:7> . assert ( <genH> : <nat:8> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:7> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:4> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:9> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:10> >= <nat:2> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 