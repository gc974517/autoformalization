\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:70> * <var:E> + <nat:436> * <var:M> + <nat:8> * <var:p> + <nat:376> * <var:k> + <var:l> * <nat:60> + <nat:351> + <var:n> * <nat:150> + <var:Q> * <nat:144> + <var:w> * <nat:368> $ must be odd given some $ <var:M> $ , $ <var:l> $ , $ <var:p> $ , $ <var:n> $ , $ <var:Q> $ , $ <var:w> $ , $ <var:E> $ , and $ <var:k> \in \mathbb{N} $ . \end{theorem} \begin{proof} We verify the formula $ <var:p> \cdot <nat:8> + <nat:60> \cdot <var:l> + <var:n> \cdot <nat:150> + <nat:351> + <nat:368> \cdot <var:w> + <var:M> \cdot <nat:436> + <var:E> \cdot <nat:70> + <var:Q> \cdot <nat:144> + <nat:376> \cdot <var:k> $ will be odd . The numbers $ <nat:60> $ , $ <nat:376> $ , $ <nat:70> $ , $ <nat:368> $ , $ <nat:8> $ , plus $ <nat:436> $ are trivially even We know that the natural number $ <nat:144> $ is clearly an even element of $ \mathbb{Z}^+ $ On top of this , remember that the natural number $ <nat:150> $ is known to be an even element of $ \mathbb{N} $ We know the multiplication of an even natural and some number in $ \mathbb{N} $ is guaranteed to be even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:M> <var:l> <var:p> <var:n> <var:Q> <var:w> <var:E> <var:k> : nat , Nat . odd ( <nat:70> * <var:E> + <nat:436> * <var:M> + <nat:8> * <var:p> + <nat:376> * <var:k> + <nat:60> * <var:l> + <nat:150> * <var:n> + <nat:144> * <var:Q> + <nat:368> * <var:w> + <nat:351> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:60> = true ) . { auto . } assert ( <genH> : Nat . even <nat:376> = true ) . { auto . } assert ( <genH> : Nat . even <nat:70> = true ) . { auto . } assert ( <genH> : Nat . even <nat:368> = true ) . { auto . } assert ( <genH> : Nat . even <nat:8> = true ) . { auto . } assert ( <genH> : Nat . even <nat:436> = true ) . { auto . } assert ( <genH> : Nat . even <nat:144> = true ) . { auto . } assert ( <genH> : Nat . even <nat:150> = true ) . { auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . repeat rewrite Nat . even_mul . rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 