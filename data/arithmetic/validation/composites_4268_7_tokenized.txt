\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} We assume that $ <var:a> $ is a <def:seven-composite> number when with some $ <var:O> $ , $ <var:k> $ , $ <var:W> $ , $ <var:b> $ , $ <var:i> $ , $ <var:e> $ , $ <var:M> \in \mathbb{Z}^+ $ we have so that $ <var:e> $ , $ <var:i> $ , $ <var:O> $ , $ <var:W> $ , $ <var:b> $ , $ <var:k> $ , and $ <var:M> > <nat:1> $ and given $ <var:a> \in \mathbb{N} $ , $ <var:a> = <var:O> * <var:W> * <var:b> * <var:M> * <var:e> * <var:k> * <var:i> $ . Then the natural number <nat:100800> is a <def:seven-composite> positive integer . \end{theorem} \begin{proof} Recall that <nat:100800> is <def:seven-composite> with the condition that it is the multiplication of natural numbers $ <var:k> $ , $ <var:b> $ , $ <var:i> $ , $ <var:O> $ , $ <var:W> $ , $ <var:e> $ and $ <var:M> $ where $ <var:O> $ , $ <var:M> $ , $ <var:b> $ , $ <var:i> $ , $ <var:k> $ , $ <var:W> $ , and $ <var:e> > <nat:1> $ . Take $ <var:k> = <nat:7> $ , $ <var:i> = <nat:4> $ , $ <var:W> = <nat:2> $ , $ <var:b> = <nat:10> $ , $ <var:M> = <nat:12> $ , $ <var:e> = <nat:5> $ , and $ <var:O> = <nat:3> $ . We verify <nat:100800> is <def:seven-composite> . We justify <nat:100800> is a <def:seven-composite> integer because $ <var:M> = <nat:12> $ , $ <var:i> = <nat:4> $ , $ <var:W> = <nat:2> $ , $ <var:k> = <nat:7> $ , $ <var:b> = <nat:10> $ , $ <var:e> = <nat:5> $ and $ <var:O> = <nat:3> $ are greater than <nat:1> . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:seven-composite> ( <var:a> : nat ) := exists <var:O> <var:k> <var:W> <var:b> <var:i> <var:e> <var:M> : nat , ( <var:e> > <nat:1> ) /\ ( <var:i> > <nat:1> ) /\ ( <var:O> > <nat:1> ) /\ ( <var:W> > <nat:1> ) /\ ( <var:b> > <nat:1> ) /\ ( <var:k> > <nat:1> ) /\ ( <var:M> > <nat:1> ) /\ ( <var:a> = <var:O> * <var:W> * <var:b> * <var:M> * <var:e> * <var:k> * <var:i> ) . Theorem <genP:1> : <def:seven-composite> <nat:100800> . Proof . unfold <def:seven-composite> . exists <nat:3> . exists <nat:7> . exists <nat:2> . exists <nat:10> . exists <nat:4> . exists <nat:5> . exists <nat:12> . assert ( <genH> : <nat:12> > <nat:1> ) . { lia . } assert ( <genH> : <nat:4> > <nat:1> ) . { lia . } assert ( <genH> : <nat:2> > <nat:1> ) . { lia . } assert ( <genH> : <nat:7> > <nat:1> ) . { lia . } assert ( <genH> : <nat:10> > <nat:1> ) . { lia . } assert ( <genH> : <nat:5> > <nat:1> ) . { lia . } assert ( <genH> : <nat:3> > <nat:1> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 