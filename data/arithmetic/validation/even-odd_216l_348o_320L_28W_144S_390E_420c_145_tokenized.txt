\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Using any unknowns $ <var:L> $ , $ <var:c> $ , $ <var:S> $ , $ <var:W> $ , $ <var:o> $ , $ <var:E> $ , and $ <var:l> $ the sum $ <var:o> * <nat:348> + <var:l> * <nat:216> + <nat:420> * <var:c> + <nat:28> * <var:W> + <nat:144> * <var:S> + <var:L> * <nat:320> + <nat:145> + <nat:390> * <var:E> $ must be odd . \end{theorem} \begin{proof} We show the sum $ <nat:390> \cdot <var:E> + <nat:320> \cdot <var:L> + <var:S> \cdot <nat:144> + <var:W> \cdot <nat:28> + <var:c> \cdot <nat:420> + <var:l> \cdot <nat:216> + <nat:145> + <nat:348> \cdot <var:o> $ is guaranteed to be odd . The expression $ <nat:144> \times <var:S> + <nat:390> \times <var:E> + <nat:216> \times <var:l> + <var:c> \times <nat:420> + <var:o> \times <nat:348> + <var:L> \times <nat:320> + <nat:28> \times <var:W> $ is even , because the adding of even elements of $ \mathbb{Z}^+ $ collectively and an even positive integer is guaranteed to be in itself an even number in $ \mathbb{Z}^+ $ . The positive integers $ <nat:144> $ , $ <nat:390> $ , $ <nat:216> $ , $ <nat:420> $ , $ <nat:348> $ , $ <nat:320> $ , as well as $ <nat:28> $ must be even numbers in $ \mathbb{N} $ . So , the products $ <nat:144> * <var:S> $ , $ <nat:390> * <var:E> $ , $ <var:l> * <nat:216> $ , $ <var:c> * <nat:420> $ , $ <var:o> * <nat:348> $ , $ <nat:320> * <var:L> $ , and moreover $ <var:W> * <nat:28> $ must be even additionally . as well as as a consequence that the multiplication between even positive integers and an arbitrary natural must be even the expression $ <nat:216> * <var:l> + <nat:348> * <var:o> + <var:L> * <nat:320> + <var:W> * <nat:28> + <var:S> * <nat:144> + <nat:390> * <var:E> + <var:c> * <nat:420> $ is even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:L> <var:c> <var:S> <var:W> <var:o> <var:E> <var:l> : nat , Nat . odd ( <nat:348> * <var:o> + <nat:216> * <var:l> + <nat:420> * <var:c> + <nat:28> * <var:W> + <nat:144> * <var:S> + <nat:320> * <var:L> + <nat:390> * <var:E> + <nat:145> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:144> = true ) . { auto . } assert ( <genH> : Nat . even <nat:390> = true ) . { auto . } assert ( <genH> : Nat . even <nat:216> = true ) . { auto . } assert ( <genH> : Nat . even <nat:420> = true ) . { auto . } assert ( <genH> : Nat . even <nat:348> = true ) . { auto . } assert ( <genH> : Nat . even <nat:320> = true ) . { auto . } assert ( <genH> : Nat . even <nat:28> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:144> * <var:S> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:390> * <var:E> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:216> * <var:l> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:420> * <var:c> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:348> * <var:o> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:320> * <var:L> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:28> * <var:W> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:348> * <var:o> + <nat:216> * <var:l> + <nat:420> * <var:c> + <nat:28> * <var:W> + <nat:144> * <var:S> + <nat:320> * <var:L> + <nat:390> * <var:E> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . auto . Qed . 