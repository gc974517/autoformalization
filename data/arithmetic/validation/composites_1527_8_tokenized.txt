\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Take $ <var:U> $ , $ <var:w> $ , $ <var:v> $ , $ <var:u> $ , $ <var:k> $ , $ <var:A> $ , $ <var:e> $ , $ <var:Z> $ as natural numbers . Assume that some $ <var:N> $ is said to be <def:eight-composite> if $ <var:N> = <var:A> * <var:w> * <var:Z> * <var:u> * <var:U> * <var:e> * <var:v> * <var:k> $ as well as unique factors are larger than <nat:1> . For this reason the whole number <nat:2721600> is a <def:eight-composite> integer . \end{theorem} \begin{proof} Note that $ <nat:3> \cdot <nat:7> \cdot <nat:4> \cdot <nat:12> \cdot <nat:10> \cdot <nat:6> \cdot <nat:9> \cdot <nat:5> = <nat:2721600> $ . Furthermore note that $ <nat:4> $ , $ <nat:6> $ , $ <nat:5> $ , $ <nat:7> $ , $ <nat:9> $ , $ <nat:10> $ , $ <nat:12> $ , $ <nat:3> > <nat:1> $ . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:eight-composite> ( <var:N> : nat ) := exists <var:U> <var:w> <var:v> <var:u> <var:k> <var:A> <var:e> <var:Z> : nat , ( <var:N> = <var:A> * <var:w> * <var:Z> * <var:u> * <var:U> * <var:e> * <var:v> * <var:k> ) /\ ( <var:U> > <nat:1> ) /\ ( <var:w> > <nat:1> ) /\ ( <var:v> > <nat:1> ) /\ ( <var:u> > <nat:1> ) /\ ( <var:k> > <nat:1> ) /\ ( <var:A> > <nat:1> ) /\ ( <var:e> > <nat:1> ) /\ ( <var:Z> > <nat:1> ) . Theorem <genP:1> : <def:eight-composite> <nat:2721600> . Proof . unfold <def:eight-composite> . exists <nat:10> . exists <nat:4> . exists <nat:6> . exists <nat:9> . exists <nat:3> . exists <nat:5> . exists <nat:7> . exists <nat:12> . assert ( <genH> : <nat:4> > <nat:1> ) . { lia . } assert ( <genH> : <nat:6> > <nat:1> ) . { lia . } assert ( <genH> : <nat:5> > <nat:1> ) . { lia . } assert ( <genH> : <nat:7> > <nat:1> ) . { lia . } assert ( <genH> : <nat:9> > <nat:1> ) . { lia . } assert ( <genH> : <nat:10> > <nat:1> ) . { lia . } assert ( <genH> : <nat:12> > <nat:1> ) . { lia . } assert ( <genH> : <nat:3> > <nat:1> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 