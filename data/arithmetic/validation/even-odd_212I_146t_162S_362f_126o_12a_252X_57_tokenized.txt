\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:252> \cdot <var:X> + <var:o> \cdot <nat:126> + <nat:12> \cdot <var:a> + <nat:362> \cdot <var:f> + <nat:212> \cdot <var:I> + <nat:57> + <var:t> \cdot <nat:146> + <nat:162> \cdot <var:S> $ is odd . \end{theorem} \begin{proof} It can be demonstrated that the sum $ <nat:212> \cdot <var:I> + <var:t> \cdot <nat:146> + <var:S> \cdot <nat:162> + <nat:362> \cdot <var:f> + <var:o> \cdot <nat:126> + <nat:12> \cdot <var:a> + <var:X> \cdot <nat:252> + <nat:57> $ must be odd . Remember that the positive integers $ <nat:362> $ as well as $ <nat:212> $ are trivially even natural numbers Furthermore , notice that the positive integers $ <nat:162> $ , $ <nat:146> $ , and likewise $ <nat:252> $ are even positive integers Likewise , notice that the number $ <nat:126> $ is clearly even The whole number $ <nat:12> $ is guaranteed to be even We know the summing of an even natural with an odd whole number will be trivially an odd integer . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:X> <var:o> <var:a> <var:f> <var:I> <var:t> <var:S> : nat , Nat . odd ( <nat:252> * <var:X> + <nat:126> * <var:o> + <nat:12> * <var:a> + <nat:362> * <var:f> + <nat:212> * <var:I> + <nat:146> * <var:t> + <nat:162> * <var:S> + <nat:57> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:362> = true ) . { auto . } assert ( <genH> : Nat . even <nat:212> = true ) . { auto . } assert ( <genH> : Nat . even <nat:162> = true ) . { auto . } assert ( <genH> : Nat . even <nat:146> = true ) . { auto . } assert ( <genH> : Nat . even <nat:252> = true ) . { auto . } assert ( <genH> : Nat . even <nat:126> = true ) . { auto . } assert ( <genH> : Nat . even <nat:12> = true ) . { auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . repeat rewrite Nat . even_mul . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 