\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:q> * <var:W> * <var:u> * <var:n> * <var:h> * <var:y> * <var:s> * <var:T> * <var:J> $ is equivalent to $ <nat:7603200> $ with $ <var:W> $ , $ <var:h> $ , $ <var:u> $ , $ <var:y> $ , $ <var:s> $ , $ <var:n> $ , $ <var:T> $ , $ <var:q> $ , and $ <var:J> $ satisfying the condition that $ <var:n> $ , $ <var:q> $ , $ <var:s> $ , $ <var:W> $ , $ <var:y> $ , $ <var:h> $ , $ <var:J> $ , $ <var:T> $ , $ <var:u> $ larger than or equivalent to <nat:2> . \end{theorem} \begin{proof} Let $ <var:q> = <nat:12> $ , $ <var:J> = <nat:2> $ , $ <var:n> = <nat:11> $ , $ <var:T> = <nat:4> $ , $ <var:W> = <nat:5> $ , $ <var:u> = <nat:8> $ , $ <var:y> = <nat:6> $ , $ <var:s> = <nat:3> $ , and $ <var:h> = <nat:10> $ . We verify <nat:7603200> is the product between $ <var:T> $ , $ <var:n> $ , $ <var:W> $ , $ <var:u> $ , $ <var:J> $ , $ <var:q> $ , $ <var:s> $ , $ <var:h> $ , $ <var:y> \in \mathbb{N} $ . Note that $ <var:J> \times <var:n> \times <var:q> \times <var:y> \times <var:W> \times <var:s> \times <var:u> \times <var:h> \times <var:T> = <nat:7603200> $ . Additionally observe that $ <nat:3> $ , $ <nat:8> $ , $ <nat:11> $ , $ <nat:6> $ , $ <nat:4> $ , $ <nat:5> $ , $ <nat:2> $ , $ <nat:10> $ and $ <nat:12> \geq <nat:2> $ . \end{proof} \end{document} 
~
Require Import Lia . Theorem <genP:1> : exists <var:W> <var:h> <var:u> <var:y> <var:s> <var:n> <var:T> <var:q> <var:J> : nat , ( <var:q> * <var:W> * <var:u> * <var:n> * <var:h> * <var:y> * <var:s> * <var:T> * <var:J> = <nat:7603200> ) /\ ( <var:n> >= <nat:2> ) /\ ( <var:q> >= <nat:2> ) /\ ( <var:s> >= <nat:2> ) /\ ( <var:W> >= <nat:2> ) /\ ( <var:y> >= <nat:2> ) /\ ( <var:h> >= <nat:2> ) /\ ( <var:J> >= <nat:2> ) /\ ( <var:T> >= <nat:2> ) /\ ( <var:u> >= <nat:2> ) . Proof . exists <nat:5> . exists <nat:10> . exists <nat:8> . exists <nat:6> . exists <nat:3> . exists <nat:11> . exists <nat:4> . exists <nat:12> . exists <nat:2> . assert ( <genH> : <nat:3> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:8> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:11> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:6> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:4> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:5> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:2> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:10> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:12> >= <nat:2> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 