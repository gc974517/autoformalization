\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:208> * <var:J> + <var:g> * <nat:330> + <var:m> * <nat:482> + <nat:35> + <var:u> * <nat:404> + <var:D> * <nat:2> + <nat:156> * <var:Y> + <nat:348> * <var:y> $ is guaranteed to be odd . \end{theorem} \begin{proof} It can be verified that our claim is true by applying the understanding the addition between even naturals and an odd element of $ \mathbb{Z}^+ $ is guaranteed to be odd . On top of this , the numbers $ <nat:208> $ , $ <nat:330> $ , $ <nat:482> $ , $ <nat:404> $ , $ <nat:2> $ , $ <nat:156> $ , and likewise $ <nat:348> $ must be even elements of $ \mathbb{Z}^+ $ . Therefore , the pairs $ <nat:208> \times <var:J> $ , $ <var:g> \times <nat:330> $ , $ <var:m> \times <nat:482> $ , $ <nat:404> \times <var:u> $ , $ <var:D> \times <nat:2> $ , $ <var:Y> \times <nat:156> $ , and also $ <nat:348> \times <var:y> $ is guaranteed to be even in addition . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:J> <var:g> <var:m> <var:u> <var:D> <var:Y> <var:y> : nat , Nat . odd ( <nat:208> * <var:J> + <nat:330> * <var:g> + <nat:482> * <var:m> + <nat:404> * <var:u> + <nat:2> * <var:D> + <nat:156> * <var:Y> + <nat:348> * <var:y> + <nat:35> ) = true . Proof . intros . rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . assert ( <genH> : Nat . even <nat:208> = true ) . { auto . } assert ( <genH> : Nat . even <nat:330> = true ) . { auto . } assert ( <genH> : Nat . even <nat:482> = true ) . { auto . } assert ( <genH> : Nat . even <nat:404> = true ) . { auto . } assert ( <genH> : Nat . even <nat:2> = true ) . { auto . } assert ( <genH> : Nat . even <nat:156> = true ) . { auto . } assert ( <genH> : Nat . even <nat:348> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:208> * <var:J> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:330> * <var:g> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:482> * <var:m> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:404> * <var:u> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:2> * <var:D> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:156> * <var:Y> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:348> * <var:y> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 