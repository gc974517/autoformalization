\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \newtheorem{definition}{Definition} \begin{document} \begin{definition} Take $ <var:f> $ , $ <var:l> $ , $ <var:m> $ , $ <var:F> $ , $ <var:t> $ , $ <var:B> $ , $ <var:d> \in \mathbb{Z}^+ $ . We say that some natural number $ <var:q> $ is defined as a <def:seven-composite> integer given $ <var:q> = <var:F> \cdot <var:B> \cdot <var:t> \cdot <var:d> \cdot <var:f> \cdot <var:l> \cdot <var:m> $ as well as such that $ <var:B> $ , $ <var:t> $ , $ <var:m> $ , $ <var:F> $ , $ <var:l> $ , $ <var:f> $ , and $ <var:d> > <nat:1> $ . \end{definition} \begin{theorem} $ <var:q> = <nat:90720> $ is a <def:seven-composite> natural number . \end{theorem} \begin{proof} Note that $ <nat:90720> = <var:B> \cdot <var:F> \cdot <var:l> \cdot <var:m> \cdot <var:t> \cdot <var:d> \cdot <var:f> $ implies $ <var:m> = <nat:7> $ , $ <var:f> = <nat:5> $ , $ <var:F> = <nat:4> $ , $ <var:d> = <nat:3> $ , $ <var:B> = <nat:12> $ , $ <var:t> = <nat:2> $ and $ <var:l> = <nat:9> $ . Moreover note $ <nat:4> $ , $ <nat:7> $ , $ <nat:3> $ , $ <nat:12> $ , $ <nat:5> $ , $ <nat:2> $ and $ <nat:9> > <nat:1> $ . This shows <nat:90720> is <def:seven-composite> . Therefore , $ <var:F> \cdot <var:m> \cdot <var:l> \cdot <var:d> \cdot <var:B> \cdot <var:f> \cdot <var:t> = <nat:90720> $ is validated . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:seven-composite> ( <var:q> : nat ) := exists <var:f> <var:l> <var:m> <var:F> <var:t> <var:B> <var:d> : nat , ( <var:q> = <var:F> * <var:B> * <var:t> * <var:d> * <var:f> * <var:l> * <var:m> ) /\ ( <var:B> > <nat:1> ) /\ ( <var:t> > <nat:1> ) /\ ( <var:m> > <nat:1> ) /\ ( <var:F> > <nat:1> ) /\ ( <var:l> > <nat:1> ) /\ ( <var:f> > <nat:1> ) /\ ( <var:d> > <nat:1> ) . Theorem <genP:1> : <def:seven-composite> <nat:90720> . Proof . unfold <def:seven-composite> . exists <nat:5> . exists <nat:9> . exists <nat:7> . exists <nat:4> . exists <nat:2> . exists <nat:12> . exists <nat:3> . assert ( <genH> : <nat:4> > <nat:1> ) . { lia . } assert ( <genH> : <nat:7> > <nat:1> ) . { lia . } assert ( <genH> : <nat:3> > <nat:1> ) . { lia . } assert ( <genH> : <nat:12> > <nat:1> ) . { lia . } assert ( <genH> : <nat:5> > <nat:1> ) . { lia . } assert ( <genH> : <nat:2> > <nat:1> ) . { lia . } assert ( <genH> : <nat:9> > <nat:1> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 