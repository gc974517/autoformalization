\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Using unknowns $ <var:d> $ , $ <var:O> $ , $ <var:R> $ , $ <var:t> $ , $ <var:Q> $ , $ <var:V> $ , and $ <var:S> $ the summation $ <nat:4> * <var:O> + <var:Q> * <nat:232> + <nat:11> + <var:R> * <nat:64> + <var:S> * <nat:490> + <var:V> * <nat:204> + <var:t> * <nat:142> + <nat:498> * <var:d> $ is odd . \end{theorem} \begin{proof} The natural numbers $ <nat:4> $ , $ <nat:232> $ , $ <nat:64> $ , $ <nat:490> $ , $ <nat:204> $ , $ <nat:142> $ , additionally $ <nat:498> $ are even . In consequence , the pairs $ <nat:4> * <var:O> $ , $ <var:Q> * <nat:232> $ , $ <var:R> * <nat:64> $ , $ <nat:490> * <var:S> $ , $ <nat:204> * <var:V> $ , $ <nat:142> * <var:t> $ , plus $ <nat:498> * <var:d> $ will be even in addition . The addition of even integers collectively and an odd natural number must be an odd number in $ \mathbb{N} $ . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:d> <var:O> <var:R> <var:t> <var:Q> <var:V> <var:S> : nat , Nat . odd ( <nat:4> * <var:O> + <nat:232> * <var:Q> + <nat:64> * <var:R> + <nat:490> * <var:S> + <nat:204> * <var:V> + <nat:142> * <var:t> + <nat:498> * <var:d> + <nat:11> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:4> = true ) . { auto . } assert ( <genH> : Nat . even <nat:232> = true ) . { auto . } assert ( <genH> : Nat . even <nat:64> = true ) . { auto . } assert ( <genH> : Nat . even <nat:490> = true ) . { auto . } assert ( <genH> : Nat . even <nat:204> = true ) . { auto . } assert ( <genH> : Nat . even <nat:142> = true ) . { auto . } assert ( <genH> : Nat . even <nat:498> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:4> * <var:O> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:232> * <var:Q> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:64> * <var:R> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:490> * <var:S> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:204> * <var:V> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:142> * <var:t> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:498> * <var:d> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 