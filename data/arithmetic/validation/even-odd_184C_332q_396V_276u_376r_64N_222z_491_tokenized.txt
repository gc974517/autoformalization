\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:184> <var:C> + <nat:396> <var:V> + <nat:491> + <var:u> <nat:276> + <nat:332> <var:q> + <nat:64> <var:N> + <var:r> <nat:376> + <nat:222> <var:z> $ is guaranteed to be odd using some natural numbers $ <var:q> $ , $ <var:V> $ , $ <var:r> $ , $ <var:C> $ , $ <var:z> $ , $ <var:u> $ , and $ <var:N> $ . \end{theorem} \begin{proof} The positive integers $ <nat:396> $ , $ <nat:184> $ , $ <nat:376> $ , $ <nat:332> $ , $ <nat:222> $ , in addition to $ <nat:276> $ will be even naturals Additionally , the whole number $ <nat:64> $ is trivially even We know $ <nat:491> $ is obviously an odd number . It can be verified that the formula $ <nat:184> \cdot <var:C> + <nat:332> \cdot <var:q> + <var:V> \cdot <nat:396> + <nat:491> + <var:u> \cdot <nat:276> + <nat:376> \cdot <var:r> + <nat:64> \cdot <var:N> + <nat:222> \cdot <var:z> $ is guaranteed to be odd . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:q> <var:V> <var:r> <var:C> <var:z> <var:u> <var:N> : nat , Nat . odd ( <nat:184> * <var:C> + <nat:396> * <var:V> + <nat:276> * <var:u> + <nat:332> * <var:q> + <nat:64> * <var:N> + <nat:376> * <var:r> + <nat:222> * <var:z> + <nat:491> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:396> = true ) . { auto . } assert ( <genH> : Nat . even <nat:184> = true ) . { auto . } assert ( <genH> : Nat . even <nat:376> = true ) . { auto . } assert ( <genH> : Nat . even <nat:332> = true ) . { auto . } assert ( <genH> : Nat . even <nat:222> = true ) . { auto . } assert ( <genH> : Nat . even <nat:276> = true ) . { auto . } assert ( <genH> : Nat . even <nat:64> = true ) . { auto . } assert ( <genH> : Nat . odd <nat:491> = true ) . { auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . repeat rewrite Nat . even_mul . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 