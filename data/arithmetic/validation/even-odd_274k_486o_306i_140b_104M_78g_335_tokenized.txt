\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Assuming all terms $ <var:b> $ , $ <var:M> $ , $ <var:i> $ , $ <var:g> $ , $ <var:o> $ , and $ <var:k> $ the expression $ <nat:335> + <var:o> * <nat:486> + <nat:140> * <var:b> + <var:i> * <nat:306> + <var:k> * <nat:274> + <nat:104> * <var:M> + <var:g> * <nat:78> $ is guaranteed to be odd . \end{theorem} \begin{proof} It can be checked that that the summation $ <var:M> \cdot <nat:104> + <var:o> \cdot <nat:486> + <var:i> \cdot <nat:306> + <nat:78> \cdot <var:g> + <nat:140> \cdot <var:b> + <var:k> \cdot <nat:274> $ is known to be even , by reason that the summing between even positive integers with an even element of $ \mathbb{N} $ will be even . Furthermore , the terms $ <nat:104> \cdot <var:M> $ , $ <var:o> \cdot <nat:486> $ , $ <var:i> \cdot <nat:306> $ , $ <var:g> \cdot <nat:78> $ , $ <nat:140> \cdot <var:b> $ , and also $ <var:k> \cdot <nat:274> $ are even . This fact holds from the knowledge the natural numbers $ <nat:104> $ , $ <nat:486> $ , $ <nat:306> $ , $ <nat:78> $ , $ <nat:140> $ , and likewise $ <nat:274> $ are guaranteed to be by definition even positive integers . as well as from the knowledge multiplying of even whole numbers and any element of $ \mathbb{Z}^+ $ is clearly an even integer the formula $ <var:k> <nat:274> + <var:o> <nat:486> + <nat:306> <var:i> + <nat:140> <var:b> + <var:M> <nat:104> + <nat:78> <var:g> $ is even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:b> <var:M> <var:i> <var:g> <var:o> <var:k> : nat , Nat . odd ( <nat:486> * <var:o> + <nat:140> * <var:b> + <nat:306> * <var:i> + <nat:274> * <var:k> + <nat:104> * <var:M> + <nat:78> * <var:g> + <nat:335> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:104> = true ) . { auto . } assert ( <genH> : Nat . even <nat:486> = true ) . { auto . } assert ( <genH> : Nat . even <nat:306> = true ) . { auto . } assert ( <genH> : Nat . even <nat:78> = true ) . { auto . } assert ( <genH> : Nat . even <nat:140> = true ) . { auto . } assert ( <genH> : Nat . even <nat:274> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:104> * <var:M> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:486> * <var:o> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:306> * <var:i> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:78> * <var:g> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:140> * <var:b> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:274> * <var:k> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:486> * <var:o> + <nat:140> * <var:b> + <nat:306> * <var:i> + <nat:274> * <var:k> + <nat:104> * <var:M> + <nat:78> * <var:g> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . auto . Qed . 