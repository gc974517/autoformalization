\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:n> \times <nat:26> + <nat:150> \times <var:A> + <nat:10> \times <var:y> + <nat:119> + <var:b> \times <nat:322> $ is guaranteed to be odd taking every variables $ <var:n> $ , $ <var:y> $ , $ <var:b> $ , and $ <var:A> $ . \end{theorem} \begin{proof} The totaling of even naturals together with an odd number in $ \mathbb{Z}^+ $ must be odd . The whole number $ <nat:26> $ is trivially even . Thus , the term $ <var:n> <nat:26> $ is guaranteed to be even at the same time . Observe that the positive integer $ <nat:322> $ is clearly an even element of $ \mathbb{N} $ . Therefore , the pair $ <nat:322> <var:b> $ must be even as well . Observe the coefficient $ <nat:10> $ is an even positive integer . Then , $ <nat:10> <var:y> $ is even additionally . The coefficient $ <nat:150> $ is even . For this reason , the pair $ <var:A> <nat:150> $ is even additionally . It can be proven that this result is proven . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:n> <var:y> <var:b> <var:A> : nat , Nat . odd ( <nat:26> * <var:n> + <nat:150> * <var:A> + <nat:10> * <var:y> + <nat:322> * <var:b> + <nat:119> ) = true . Proof . intros . rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . assert ( <genH> : Nat . even <nat:26> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:26> * <var:n> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:322> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:322> * <var:b> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:10> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:10> * <var:y> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:150> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:150> * <var:A> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 