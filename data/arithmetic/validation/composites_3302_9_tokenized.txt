\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Define that $ <var:x> $ is a <def:nine-composite> whole number iff there are $ <var:R> $ , $ <var:y> $ , $ <var:H> $ , $ <var:v> $ , $ <var:N> $ , $ <var:Q> $ , $ <var:Z> $ , $ <var:B> $ , $ <var:c> \in \mathbb{Z}^+ $ so that such that $ <var:Q> $ , $ <var:y> $ , $ <var:B> $ , $ <var:H> $ , $ <var:c> $ , $ <var:v> $ , $ <var:N> $ , $ <var:Z> $ , and $ <var:R> > <nat:1> $ plus using some integer $ <var:x> $ , $ <var:y> \cdot <var:R> \cdot <var:c> \cdot <var:Z> \cdot <var:H> \cdot <var:Q> \cdot <var:B> \cdot <var:N> \cdot <var:v> = <var:x> $ . For this reason the whole number <nat:26611200> is a <def:nine-composite> positive integer . \end{theorem} \begin{proof} Recall that <nat:26611200> is a <def:nine-composite> natural number when <nat:26611200> is the multiplication between positive integers $ <var:c> $ , $ <var:Q> $ , $ <var:H> $ , $ <var:B> $ , $ <var:Z> $ , $ <var:y> $ , $ <var:N> $ , $ <var:v> $ , and $ <var:R> $ so that $ <var:v> $ , $ <var:N> $ , $ <var:H> $ , $ <var:R> $ , $ <var:y> $ , $ <var:Z> $ , $ <var:Q> $ , $ <var:c> $ and $ <var:B> > <nat:1> $ . We confirm <nat:26611200> is a <def:nine-composite> positive integer . Notice $ <nat:26611200> = <nat:12> \cdot <nat:4> \cdot <nat:5> \cdot <nat:11> \cdot <nat:2> \cdot <nat:7> \cdot <nat:10> \cdot <nat:8> \cdot <nat:9> = <var:Q> \cdot <var:R> \cdot <var:H> \cdot <var:v> \cdot <var:y> \cdot <var:c> \cdot <var:B> \cdot <var:N> \cdot <var:Z> $ . Also note $ <nat:9> $ , $ <nat:8> $ , $ <nat:12> $ , $ <nat:11> $ , $ <nat:2> $ , $ <nat:7> $ , $ <nat:10> $ , $ <nat:5> $ and $ <nat:4> $ are more than <nat:1> . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:nine-composite> ( <var:x> : nat ) := exists <var:R> <var:y> <var:H> <var:v> <var:N> <var:Q> <var:Z> <var:B> <var:c> : nat , ( <var:Q> > <nat:1> ) /\ ( <var:y> > <nat:1> ) /\ ( <var:B> > <nat:1> ) /\ ( <var:H> > <nat:1> ) /\ ( <var:c> > <nat:1> ) /\ ( <var:v> > <nat:1> ) /\ ( <var:N> > <nat:1> ) /\ ( <var:Z> > <nat:1> ) /\ ( <var:R> > <nat:1> ) /\ ( <var:y> * <var:R> * <var:c> * <var:Z> * <var:H> * <var:Q> * <var:B> * <var:N> * <var:v> = <var:x> ) . Theorem <genP:1> : <def:nine-composite> <nat:26611200> . Proof . unfold <def:nine-composite> . exists <nat:4> . exists <nat:2> . exists <nat:5> . exists <nat:11> . exists <nat:8> . exists <nat:12> . exists <nat:9> . exists <nat:10> . exists <nat:7> . assert ( <genH> : <nat:9> > <nat:1> ) . { lia . } assert ( <genH> : <nat:8> > <nat:1> ) . { lia . } assert ( <genH> : <nat:12> > <nat:1> ) . { lia . } assert ( <genH> : <nat:11> > <nat:1> ) . { lia . } assert ( <genH> : <nat:2> > <nat:1> ) . { lia . } assert ( <genH> : <nat:7> > <nat:1> ) . { lia . } assert ( <genH> : <nat:10> > <nat:1> ) . { lia . } assert ( <genH> : <nat:5> > <nat:1> ) . { lia . } assert ( <genH> : <nat:4> > <nat:1> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 