\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:50> \cdot <var:h> + <nat:243> + <nat:2> \cdot <var:q> + <var:p> \cdot <nat:458> + <var:N> \cdot <nat:42> + <nat:196> \cdot <var:Q> + <nat:460> \cdot <var:W> + <var:V> \cdot <nat:296> $ must be odd . \end{theorem} \begin{proof} The numbers $ <nat:50> $ , $ <nat:2> $ , $ <nat:458> $ , $ <nat:42> $ , $ <nat:196> $ , $ <nat:460> $ , and moreover $ <nat:296> $ are even integers . In consequence , the products $ <nat:50> <var:h> $ , $ <var:q> <nat:2> $ , $ <var:p> <nat:458> $ , $ <var:N> <nat:42> $ , $ <nat:196> <var:Q> $ , $ <var:W> <nat:460> $ , as well as $ <nat:296> <var:V> $ is even additionally . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:h> <var:q> <var:p> <var:N> <var:Q> <var:W> <var:V> : nat , Nat . odd ( <nat:50> * <var:h> + <nat:2> * <var:q> + <nat:458> * <var:p> + <nat:42> * <var:N> + <nat:196> * <var:Q> + <nat:460> * <var:W> + <nat:296> * <var:V> + <nat:243> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:50> = true ) . { auto . } assert ( <genH> : Nat . even <nat:2> = true ) . { auto . } assert ( <genH> : Nat . even <nat:458> = true ) . { auto . } assert ( <genH> : Nat . even <nat:42> = true ) . { auto . } assert ( <genH> : Nat . even <nat:196> = true ) . { auto . } assert ( <genH> : Nat . even <nat:460> = true ) . { auto . } assert ( <genH> : Nat . even <nat:296> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:50> * <var:h> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:2> * <var:q> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:458> * <var:p> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:42> * <var:N> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:196> * <var:Q> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:460> * <var:W> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:296> * <var:V> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 