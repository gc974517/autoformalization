\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:g> \times <nat:188> + <nat:416> + <var:G> \times <nat:182> + <nat:78> \times <var:p> $ is even taking unknowns $ <var:G> $ , $ <var:p> $ , and $ <var:g> $ . \end{theorem} \begin{proof} Notice that $ <nat:416> $ is obviously even . The summation of even naturals together and an even integer is an even natural . It can be demonstrated that $ <var:g> <nat:188> + <nat:182> <var:G> + <nat:78> <var:p> $ is guaranteed to be even . The coefficient $ <nat:78> $ is trivially an even integer . Consequently , the pair $ <var:p> <nat:78> $ is guaranteed to be even in addition . Furthermore , the coefficient $ <nat:188> $ is guaranteed to be even . For this reason , the pair $ <nat:188> <var:g> $ will be even additionally . Take note that the pair $ <var:G> <nat:182> $ is known to be even . This fact must be true as a consequence that the product between an even whole number and some number will be an even element of $ \mathbb{Z}^+ $ . This claim is proven since the natural number $ <nat:182> $ is known as even . This lemma is proven from the fact the product between even numbers in $ \mathbb{N} $ and an arbitrary number in $ \mathbb{Z}^+ $ is even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:G> <var:p> <var:g> : nat , Nat . even ( <nat:188> * <var:g> + <nat:182> * <var:G> + <nat:78> * <var:p> + <nat:416> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:416> = true ) . { auto . } rewrite Nat . even_add . assert ( <genH> : Nat . even <nat:78> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:78> * <var:p> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:188> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:188> * <var:g> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:182> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:182> * <var:G> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:188> * <var:g> + <nat:182> * <var:G> + <nat:78> * <var:p> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite <genH> . rewrite <genH> . auto . Qed . 