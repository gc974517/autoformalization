\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Assuming terms $ <var:e> $ , $ <var:H> $ , $ <var:b> $ , $ <var:d> $ , $ <var:X> $ , $ <var:B> $ , $ <var:s> $ , and $ <var:A> $ the formula $ <var:e> * <nat:382> + <nat:194> + <var:d> * <nat:18> + <var:A> * <nat:262> + <var:H> * <nat:108> + <var:X> * <nat:34> + <nat:336> * <var:B> + <nat:294> * <var:b> + <var:s> * <nat:30> $ must be even . \end{theorem} \begin{proof} This lemma holds by reason that $ <nat:18> <var:d> + <nat:262> <var:A> + <nat:336> <var:B> + <nat:30> <var:s> + <nat:294> <var:b> + <var:e> <nat:382> + <nat:34> <var:X> + <var:H> <nat:108> $ is trivially even . Take note the leading terms $ <nat:18> $ , $ <nat:262> $ , $ <nat:336> $ , $ <nat:30> $ , $ <nat:294> $ , $ <nat:382> $ , $ <nat:34> $ , and also $ <nat:108> $ must be even . Hence , the pairs $ <nat:18> \cdot <var:d> $ , $ <nat:262> \cdot <var:A> $ , $ <var:B> \cdot <nat:336> $ , $ <nat:30> \cdot <var:s> $ , $ <nat:294> \cdot <var:b> $ , $ <var:e> \cdot <nat:382> $ , $ <var:X> \cdot <nat:34> $ , plus $ <var:H> \cdot <nat:108> $ must be even too . The theorem holds because the adding of even numbers with even elements of $ \mathbb{N} $ is guaranteed to be obviously an even whole number . Take note $ <nat:194> $ is obviously an even whole number . The addition between even whole numbers with an even number must be even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:e> <var:H> <var:b> <var:d> <var:X> <var:B> <var:s> <var:A> : nat , Nat . even ( <nat:382> * <var:e> + <nat:18> * <var:d> + <nat:262> * <var:A> + <nat:108> * <var:H> + <nat:34> * <var:X> + <nat:336> * <var:B> + <nat:294> * <var:b> + <nat:30> * <var:s> + <nat:194> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:18> = true ) . { auto . } assert ( <genH> : Nat . even <nat:262> = true ) . { auto . } assert ( <genH> : Nat . even <nat:336> = true ) . { auto . } assert ( <genH> : Nat . even <nat:30> = true ) . { auto . } assert ( <genH> : Nat . even <nat:294> = true ) . { auto . } assert ( <genH> : Nat . even <nat:382> = true ) . { auto . } assert ( <genH> : Nat . even <nat:34> = true ) . { auto . } assert ( <genH> : Nat . even <nat:108> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:18> * <var:d> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:262> * <var:A> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:336> * <var:B> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:30> * <var:s> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:294> * <var:b> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:382> * <var:e> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:34> * <var:X> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:108> * <var:H> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:382> * <var:e> + <nat:18> * <var:d> + <nat:262> * <var:A> + <nat:108> * <var:H> + <nat:34> * <var:X> + <nat:336> * <var:B> + <nat:294> * <var:b> + <nat:30> * <var:s> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:194> = true ) . { auto . } rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . auto . Qed . 