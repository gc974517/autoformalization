\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:218> <var:C> + <var:l> <nat:98> + <var:k> <nat:50> + <nat:398> <var:I> + <nat:310> + <var:L> <nat:276> + <nat:392> <var:p> + <nat:166> <var:x> $ will be even . \end{theorem} \begin{proof} Observe the adding of an even integer with an even whole number is even . Remember $ <nat:310> $ is guaranteed to be an even natural number . The pairs $ <var:C> * <nat:218> $ , $ <var:l> * <nat:98> $ , $ <var:k> * <nat:50> $ , $ <nat:398> * <var:I> $ , $ <var:L> * <nat:276> $ , $ <var:p> * <nat:392> $ , as well as $ <nat:166> * <var:x> $ are known as even numbers in $ \mathbb{N} $ by reason that the product of an even whole number and an arbitrary integer is an even whole number , which is proven from the fact the coefficients $ <nat:218> $ , $ <nat:98> $ , $ <nat:50> $ , $ <nat:398> $ , $ <nat:276> $ , $ <nat:392> $ , as well as $ <nat:166> $ are known as even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:C> <var:l> <var:k> <var:I> <var:L> <var:p> <var:x> : nat , Nat . even ( <nat:218> * <var:C> + <nat:98> * <var:l> + <nat:50> * <var:k> + <nat:398> * <var:I> + <nat:276> * <var:L> + <nat:392> * <var:p> + <nat:166> * <var:x> + <nat:310> ) = true . Proof . intros . repeat rewrite Nat . even_add . assert ( <genH> : Nat . even <nat:310> = true ) . { auto . } assert ( <genH> : Nat . even <nat:218> = true ) . { auto . } assert ( <genH> : Nat . even <nat:98> = true ) . { auto . } assert ( <genH> : Nat . even <nat:50> = true ) . { auto . } assert ( <genH> : Nat . even <nat:398> = true ) . { auto . } assert ( <genH> : Nat . even <nat:276> = true ) . { auto . } assert ( <genH> : Nat . even <nat:392> = true ) . { auto . } assert ( <genH> : Nat . even <nat:166> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:218> * <var:C> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:98> * <var:l> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:50> * <var:k> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:398> * <var:I> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:276> * <var:L> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:392> * <var:p> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:166> * <var:x> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 