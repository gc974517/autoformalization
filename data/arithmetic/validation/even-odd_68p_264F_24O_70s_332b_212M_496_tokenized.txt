\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:264> * <var:F> + <var:O> * <nat:24> + <var:M> * <nat:212> + <var:s> * <nat:70> + <var:b> * <nat:332> + <nat:496> + <nat:68> * <var:p> $ must be even given some natural terms $ <var:F> $ , $ <var:b> $ , $ <var:s> $ , $ <var:p> $ , $ <var:O> $ , and $ <var:M> $ . \end{theorem} \begin{proof} See that the adding of an even integer and an even whole number is even . Remember $ <nat:496> $ is obviously an even whole number . We use the assumption the fact that the sum $ <nat:264> <var:F> + <var:p> <nat:68> + <var:s> <nat:70> + <var:M> <nat:212> + <var:O> <nat:24> + <nat:496> + <var:b> <nat:332> $ is obviously even because the expression $ <var:M> * <nat:212> + <nat:24> * <var:O> + <var:F> * <nat:264> + <var:s> * <nat:70> + <nat:68> * <var:p> + <var:b> * <nat:332> $ is trivially even . The leading terms $ <nat:212> $ , $ <nat:24> $ , $ <nat:264> $ , $ <nat:70> $ , $ <nat:68> $ , additionally $ <nat:332> $ are trivially even positive integers . As a consequence , the pairs $ <var:M> * <nat:212> $ , $ <nat:24> * <var:O> $ , $ <var:F> * <nat:264> $ , $ <nat:70> * <var:s> $ , $ <var:p> * <nat:68> $ , and $ <var:b> * <nat:332> $ must be even too . The summation $ <nat:68> \cdot <var:p> + <var:F> \cdot <nat:264> + <nat:24> \cdot <var:O> + <nat:70> \cdot <var:s> + <var:b> \cdot <nat:332> + <nat:212> \cdot <var:M> $ is guaranteed to be even because the product between even numbers in $ \mathbb{N} $ and a natural number must be an even element of $ \mathbb{Z}^+ $ . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:F> <var:b> <var:s> <var:p> <var:O> <var:M> : nat , Nat . even ( <nat:264> * <var:F> + <nat:24> * <var:O> + <nat:212> * <var:M> + <nat:70> * <var:s> + <nat:332> * <var:b> + <nat:68> * <var:p> + <nat:496> ) = true . Proof . intros . rewrite Nat . even_add . assert ( <genH> : Nat . even <nat:496> = true ) . { auto . } assert ( <genH> : Nat . even <nat:212> = true ) . { auto . } assert ( <genH> : Nat . even <nat:24> = true ) . { auto . } assert ( <genH> : Nat . even <nat:264> = true ) . { auto . } assert ( <genH> : Nat . even <nat:70> = true ) . { auto . } assert ( <genH> : Nat . even <nat:68> = true ) . { auto . } assert ( <genH> : Nat . even <nat:332> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:212> * <var:M> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:24> * <var:O> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:264> * <var:F> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:70> * <var:s> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:68> * <var:p> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:332> * <var:b> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:264> * <var:F> + <nat:24> * <var:O> + <nat:212> * <var:M> + <nat:70> * <var:s> + <nat:332> * <var:b> + <nat:68> * <var:p> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite <genH> . rewrite <genH> . auto . Qed . 