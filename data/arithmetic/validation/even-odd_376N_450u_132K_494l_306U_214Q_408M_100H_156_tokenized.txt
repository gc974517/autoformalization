\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Taking all variables $ <var:K> $ , $ <var:Q> $ , $ <var:U> $ , $ <var:M> $ , $ <var:H> $ , $ <var:l> $ , $ <var:u> $ , and $ <var:N> $ $ <var:N> \times <nat:376> + <nat:450> \times <var:u> + <nat:156> + <nat:132> \times <var:K> + <var:l> \times <nat:494> + <nat:306> \times <var:U> + <nat:214> \times <var:Q> + <nat:408> \times <var:M> + <var:H> \times <nat:100> $ is guaranteed to be even . \end{theorem} \begin{proof} Observe the pairs $ <nat:376> * <var:N> $ , $ <var:u> * <nat:450> $ , $ <nat:132> * <var:K> $ , $ <nat:494> * <var:l> $ , $ <nat:306> * <var:U> $ , $ <nat:214> * <var:Q> $ , $ <var:M> * <nat:408> $ , and moreover $ <var:H> * <nat:100> $ must be even . This is proven since the product between an even number and a whole number is guaranteed to be an even number in $ \mathbb{Z}^+ $ and also the leading terms $ <nat:376> $ , $ <nat:450> $ , $ <nat:132> $ , $ <nat:494> $ , $ <nat:306> $ , $ <nat:214> $ , $ <nat:408> $ , and also $ <nat:100> $ are guaranteed to be even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:K> <var:Q> <var:U> <var:M> <var:H> <var:l> <var:u> <var:N> : nat , Nat . even ( <nat:376> * <var:N> + <nat:450> * <var:u> + <nat:132> * <var:K> + <nat:494> * <var:l> + <nat:306> * <var:U> + <nat:214> * <var:Q> + <nat:408> * <var:M> + <nat:100> * <var:H> + <nat:156> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:376> = true ) . { auto . } assert ( <genH> : Nat . even <nat:450> = true ) . { auto . } assert ( <genH> : Nat . even <nat:132> = true ) . { auto . } assert ( <genH> : Nat . even <nat:494> = true ) . { auto . } assert ( <genH> : Nat . even <nat:306> = true ) . { auto . } assert ( <genH> : Nat . even <nat:214> = true ) . { auto . } assert ( <genH> : Nat . even <nat:408> = true ) . { auto . } assert ( <genH> : Nat . even <nat:100> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:376> * <var:N> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:450> * <var:u> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:132> * <var:K> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:494> * <var:l> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:306> * <var:U> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:214> * <var:Q> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:408> * <var:M> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:100> * <var:H> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 