\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:398> <var:Y> + <nat:213> + <var:R> <nat:230> + <nat:280> <var:c> + <nat:304> <var:X> + <nat:112> <var:s> + <nat:220> <var:l> $ will be odd . \end{theorem} \begin{proof} Adding on , recall the pairs $ <nat:398> <var:Y> $ , $ <var:R> <nat:230> $ , $ <var:c> <nat:280> $ , $ <var:X> <nat:304> $ , $ <nat:112> <var:s> $ , and also $ <nat:220> <var:l> $ are known to be even numbers in $ \mathbb{N} $ . This is proven from the fact the product between an even element of $ \mathbb{N} $ and an arbitrary number in $ \mathbb{N} $ will be instrinsically an even number in $ \mathbb{Z}^+ $ , and holds because the coefficients $ <nat:398> $ , $ <nat:230> $ , $ <nat:280> $ , $ <nat:304> $ , $ <nat:112> $ , plus $ <nat:220> $ will be even numbers in $ \mathbb{N} $ . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:Y> <var:R> <var:c> <var:X> <var:s> <var:l> : nat , Nat . odd ( <nat:398> * <var:Y> + <nat:230> * <var:R> + <nat:280> * <var:c> + <nat:304> * <var:X> + <nat:112> * <var:s> + <nat:220> * <var:l> + <nat:213> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:398> = true ) . { auto . } assert ( <genH> : Nat . even <nat:230> = true ) . { auto . } assert ( <genH> : Nat . even <nat:280> = true ) . { auto . } assert ( <genH> : Nat . even <nat:304> = true ) . { auto . } assert ( <genH> : Nat . even <nat:112> = true ) . { auto . } assert ( <genH> : Nat . even <nat:220> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:398> * <var:Y> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:230> * <var:R> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:280> * <var:c> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:304> * <var:X> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:112> * <var:s> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:220> * <var:l> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 