\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:408> + <var:v> <nat:98> + <nat:394> <var:o> + <var:n> <nat:120> + <var:D> <nat:448> + <nat:26> <var:u> + <nat:228> <var:m> + <nat:254> <var:i> $ must be even for positive integers $ <var:o> $ , $ <var:i> $ , $ <var:D> $ , $ <var:n> $ , $ <var:m> $ , $ <var:v> $ , and $ <var:u> $ . \end{theorem} \begin{proof} Observe the products $ <nat:98> * <var:v> $ , $ <nat:254> * <var:i> $ , $ <var:u> * <nat:26> $ , $ <nat:120> * <var:n> $ , as well as $ <var:o> * <nat:394> $ are trivially even . Additionally , notice that the product $ <var:D> * <nat:448> $ is even . This must be true as a consequence that multiplying of an even whole number with a natural number must be by definition an even positive integer . The pair $ <nat:228> * <var:m> $ is even . The summation of an even element of $ \mathbb{N} $ and an even integer must be even . Take note that $ <nat:408> $ is known to be an even number . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:o> <var:i> <var:D> <var:n> <var:m> <var:v> <var:u> : nat , Nat . even ( <nat:98> * <var:v> + <nat:394> * <var:o> + <nat:120> * <var:n> + <nat:448> * <var:D> + <nat:26> * <var:u> + <nat:228> * <var:m> + <nat:254> * <var:i> + <nat:408> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:98> * <var:v> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:254> * <var:i> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:26> * <var:u> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:120> * <var:n> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:394> * <var:o> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:448> * <var:D> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:228> * <var:m> ) = true ) . { rewrite Nat . even_mul . auto . } repeat rewrite Nat . even_add . assert ( <genH> : Nat . even <nat:408> = true ) . { auto . } rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 