\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:142> * <var:R> + <var:E> * <nat:40> + <var:W> * <nat:356> + <var:K> * <nat:50> + <var:s> * <nat:368> + <nat:42> * <var:o> + <nat:413> + <nat:374> * <var:H> $ is odd . \end{theorem} \begin{proof} Observe that the expression $ <var:H> \cdot <nat:374> + <nat:356> \cdot <var:W> + <var:s> \cdot <nat:368> + <var:E> \cdot <nat:40> + <var:o> \cdot <nat:42> + <var:K> \cdot <nat:50> + <var:R> \cdot <nat:142> $ is clearly even . Recall the products $ <nat:368> \cdot <var:s> $ , $ <nat:374> \cdot <var:H> $ , $ <nat:42> \cdot <var:o> $ , in addition to $ <nat:50> \cdot <var:K> $ are known as even . This claim holds from the fact the multiplication between an even integer with any number must be an even integer . What's more , see that the pairs $ <nat:40> \cdot <var:E> $ and $ <var:R> \cdot <nat:142> $ are guaranteed to be even . We know that the product $ <var:W> \cdot <nat:356> $ is clearly an even natural . By reason that taking the product of an even element of $ \mathbb{N} $ with a natural number is even $ <var:R> <nat:142> + <nat:374> <var:H> + <nat:40> <var:E> + <var:W> <nat:356> + <var:o> <nat:42> + <nat:50> <var:K> + <nat:368> <var:s> $ will be in itself even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:R> <var:E> <var:W> <var:K> <var:s> <var:o> <var:H> : nat , Nat . odd ( <nat:142> * <var:R> + <nat:40> * <var:E> + <nat:356> * <var:W> + <nat:50> * <var:K> + <nat:368> * <var:s> + <nat:42> * <var:o> + <nat:374> * <var:H> + <nat:413> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:368> * <var:s> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:374> * <var:H> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:42> * <var:o> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:50> * <var:K> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:40> * <var:E> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:142> * <var:R> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:356> * <var:W> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:142> * <var:R> + <nat:40> * <var:E> + <nat:356> * <var:W> + <nat:50> * <var:K> + <nat:368> * <var:s> + <nat:42> * <var:o> + <nat:374> * <var:H> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . auto . Qed . 