\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:B> <nat:304> + <var:A> <nat:268> + <nat:157> + <var:Q> <nat:340> + <var:S> <nat:478> + <nat:138> <var:F> + <var:R> <nat:278> + <var:G> <nat:46> + <var:k> <nat:10> $ must be odd using terms $ <var:F> $ , $ <var:B> $ , $ <var:S> $ , $ <var:Q> $ , $ <var:A> $ , $ <var:R> $ , $ <var:k> $ , and $ <var:G> $ . \end{theorem} \begin{proof} Observe that the product $ <nat:278> <var:R> $ is known as even by reason that the product of an even element of $ \mathbb{N} $ with a element of $ \mathbb{N} $ is an even whole number . Remember the pairs $ <var:F> <nat:138> $ , $ <nat:340> <var:Q> $ , $ <var:k> <nat:10> $ , additionally $ <nat:46> <var:G> $ are clearly even naturals . In addition , the products $ <nat:304> <var:B> $ and also $ <nat:478> <var:S> $ are trivially even positive integers from the knowledge the product between an even number and an arbitrary number will be even . Take note the pair $ <nat:268> <var:A> $ is clearly even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:F> <var:B> <var:S> <var:Q> <var:A> <var:R> <var:k> <var:G> : nat , Nat . odd ( <nat:304> * <var:B> + <nat:268> * <var:A> + <nat:340> * <var:Q> + <nat:478> * <var:S> + <nat:138> * <var:F> + <nat:278> * <var:R> + <nat:46> * <var:G> + <nat:10> * <var:k> + <nat:157> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:278> * <var:R> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:138> * <var:F> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:340> * <var:Q> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:10> * <var:k> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:46> * <var:G> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:304> * <var:B> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:478> * <var:S> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:268> * <var:A> ) = true ) . { rewrite Nat . even_mul . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 