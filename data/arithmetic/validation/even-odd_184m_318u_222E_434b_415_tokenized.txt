\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Assuming variables $ <var:E> $ , $ <var:m> $ , $ <var:b> $ , and $ <var:u> $ the summation $ <var:E> <nat:222> + <nat:415> + <var:u> <nat:318> + <var:m> <nat:184> + <var:b> <nat:434> $ is odd . \end{theorem} \begin{proof} It can be shown that our lemma is true . See $ <nat:415> $ is clearly odd . We utilize the understanding that the summation $ <var:m> \times <nat:184> + <nat:318> \times <var:u> + <nat:222> \times <var:E> + <nat:434> \times <var:b> $ is trivially even . Notice that $ <nat:434> \times <var:b> $ is known as even . Additionally , notice the pairs $ <var:m> \times <nat:184> $ as well as $ <var:u> \times <nat:318> $ will be even . Building on , take note the product $ <nat:222> \times <var:E> $ is obviously an even number in $ \mathbb{Z}^+ $ . Because the product between even numbers in $ \mathbb{N} $ and an arbitrary element of $ \mathbb{Z}^+ $ will be an even natural number this main result must be true . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:E> <var:m> <var:b> <var:u> : nat , Nat . odd ( <nat:222> * <var:E> + <nat:318> * <var:u> + <nat:184> * <var:m> + <nat:434> * <var:b> + <nat:415> ) = true . Proof . intros . assert ( <genH> : Nat . odd <nat:415> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:434> * <var:b> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:184> * <var:m> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:318> * <var:u> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:222> * <var:E> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:222> * <var:E> + <nat:318> * <var:u> + <nat:184> * <var:m> + <nat:434> * <var:b> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . rewrite <genH> . auto . Qed . 