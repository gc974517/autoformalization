\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Take $ <var:C> $ , $ <var:G> $ , $ <var:y> $ , $ <var:p> $ , $ <var:U> $ , $ <var:S> $ , $ <var:B> $ are integers . We claim that some $ <var:A> $ will be named <def:seven-composite> assuming $ <var:S> \times <var:C> \times <var:y> \times <var:B> \times <var:p> \times <var:G> \times <var:U> = <var:A> $ as well as unique factors are larger than <nat:1> . Hence the whole number <nat:311040> is a <def:seven-composite> whole number . \end{theorem} \begin{proof} Recollect that a <def:seven-composite> number is the multiplication of positive integers $ <var:B> $ , $ <var:S> $ , $ <var:y> $ , $ <var:G> $ , $ <var:U> $ , $ <var:C> $ and $ <var:p> $ larger than <nat:1> . Take $ <var:y> = <nat:6> $ , $ <var:B> = <nat:3> $ , $ <var:S> = <nat:4> $ , $ <var:p> = <nat:12> $ , $ <var:G> = <nat:9> $ , $ <var:C> = <nat:8> $ and $ <var:U> = <nat:5> $ . We present <nat:311040> is a <def:seven-composite> integer . Note $ <var:S> = <nat:4> $ , $ <var:y> = <nat:6> $ , $ <var:U> = <nat:5> $ , $ <var:p> = <nat:12> $ , $ <var:C> = <nat:8> $ , $ <var:G> = <nat:9> $ , $ <var:B> = <nat:3> > <nat:1> $ . Plus observe that additionally $ <nat:311040> = <var:y> \times <var:U> \times <var:S> \times <var:p> \times <var:G> \times <var:C> \times <var:B> = <nat:6> \times <nat:5> \times <nat:4> \times <nat:12> \times <nat:9> \times <nat:8> \times <nat:3> $ . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:seven-composite> ( <var:A> : nat ) := exists <var:C> <var:G> <var:y> <var:p> <var:U> <var:S> <var:B> : nat , ( <var:S> * <var:C> * <var:y> * <var:B> * <var:p> * <var:G> * <var:U> = <var:A> ) /\ ( <var:C> > <nat:1> ) /\ ( <var:G> > <nat:1> ) /\ ( <var:y> > <nat:1> ) /\ ( <var:p> > <nat:1> ) /\ ( <var:U> > <nat:1> ) /\ ( <var:S> > <nat:1> ) /\ ( <var:B> > <nat:1> ) . Theorem <genP:1> : <def:seven-composite> <nat:311040> . Proof . unfold <def:seven-composite> . exists <nat:8> . exists <nat:9> . exists <nat:6> . exists <nat:12> . exists <nat:5> . exists <nat:4> . exists <nat:3> . assert ( <genH> : <nat:4> > <nat:1> ) . { lia . } assert ( <genH> : <nat:6> > <nat:1> ) . { lia . } assert ( <genH> : <nat:5> > <nat:1> ) . { lia . } assert ( <genH> : <nat:12> > <nat:1> ) . { lia . } assert ( <genH> : <nat:8> > <nat:1> ) . { lia . } assert ( <genH> : <nat:9> > <nat:1> ) . { lia . } assert ( <genH> : <nat:3> > <nat:1> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 