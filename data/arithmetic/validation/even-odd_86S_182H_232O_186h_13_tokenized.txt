\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Given all positive terms $ <var:H> $ , $ <var:h> $ , $ <var:O> $ , and $ <var:S> $ the expression $ <nat:182> \cdot <var:H> + <nat:186> \cdot <var:h> + <var:O> \cdot <nat:232> + <nat:86> \cdot <var:S> + <nat:13> $ will be odd . \end{theorem} \begin{proof} We demonstrate this theorem holds . We utilize the fact that $ <var:H> \cdot <nat:182> + <nat:13> + <var:h> \cdot <nat:186> + <nat:86> \cdot <var:S> + <nat:232> \cdot <var:O> $ is known to be odd because the expression $ <var:S> \cdot <nat:86> + <nat:182> \cdot <var:H> + <nat:232> \cdot <var:O> + <nat:186> \cdot <var:h> $ is guaranteed to be even . In addition , the pairs $ <var:S> \times <nat:86> $ , $ <nat:182> \times <var:H> $ , $ <nat:232> \times <var:O> $ , and also $ <var:h> \times <nat:186> $ must be even because multiplying of an even number and a number is guaranteed to be in itself an even natural . This claim holds as a consequence that the leading terms $ <nat:86> $ , $ <nat:182> $ , $ <nat:232> $ , and $ <nat:186> $ will be even elements of $ \mathbb{Z}^+ $ . Since the totaling of even numbers and an even number will be in itself an even element of $ \mathbb{N} $ , and likewise from the fact the product between an even number in $ \mathbb{Z}^+ $ with an arbitrary number will be by its very nature an even integer . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:H> <var:h> <var:O> <var:S> : nat , Nat . odd ( <nat:182> * <var:H> + <nat:186> * <var:h> + <nat:232> * <var:O> + <nat:86> * <var:S> + <nat:13> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:86> = true ) . { auto . } assert ( <genH> : Nat . even <nat:182> = true ) . { auto . } assert ( <genH> : Nat . even <nat:232> = true ) . { auto . } assert ( <genH> : Nat . even <nat:186> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:86> * <var:S> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:182> * <var:H> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:232> * <var:O> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:186> * <var:h> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:182> * <var:H> + <nat:186> * <var:h> + <nat:232> * <var:O> + <nat:86> * <var:S> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . auto . Qed . 