\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Taking every $ <var:b> $ , $ <var:I> $ , $ <var:Y> $ , $ <var:D> $ , $ <var:g> $ , $ <var:s> $ , and $ <var:X> \in \mathbb{N} $ the formula $ <var:D> * <nat:58> + <nat:290> * <var:X> + <var:s> * <nat:450> + <nat:140> * <var:g> + <var:Y> * <nat:28> + <nat:110> * <var:b> + <nat:425> + <nat:172> * <var:I> $ is guaranteed to be odd . \end{theorem} \begin{proof} The totaling of even numbers and an odd positive integer is odd . The terms $ <nat:450> \times <var:s> $ , $ <nat:172> \times <var:I> $ , $ <nat:140> \times <var:g> $ , and likewise $ <var:D> \times <nat:58> $ are clearly even from the fact the product between an even natural and an arbitrary element of $ \mathbb{N} $ must be an even integer . Additionally , the term $ <nat:290> \times <var:X> $ is trivially an even integer . Likewise , remember the product $ <var:b> \times <nat:110> $ is obviously even by reason that taking the product between an even number in $ \mathbb{Z}^+ $ with some number in $ \mathbb{Z}^+ $ will be even . The pair $ <var:Y> \times <nat:28> $ is guaranteed to be an even positive integer from the knowledge the multiplication between an even natural number and any element of $ \mathbb{N} $ is even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:b> <var:I> <var:Y> <var:D> <var:g> <var:s> <var:X> : nat , Nat . odd ( <nat:58> * <var:D> + <nat:290> * <var:X> + <nat:450> * <var:s> + <nat:140> * <var:g> + <nat:28> * <var:Y> + <nat:110> * <var:b> + <nat:172> * <var:I> + <nat:425> ) = true . Proof . intros . rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . assert ( <genH> : Nat . even ( <nat:450> * <var:s> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:172> * <var:I> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:140> * <var:g> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:58> * <var:D> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:290> * <var:X> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:110> * <var:b> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:28> * <var:Y> ) = true ) . { rewrite Nat . even_mul . auto . } rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 