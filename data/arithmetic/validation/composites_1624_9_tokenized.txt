\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} There exist $ <var:h> $ , $ <var:d> $ , $ <var:j> $ , $ <var:Y> $ , $ <var:B> $ , $ <var:P> $ , $ <var:q> $ , $ <var:N> $ , $ <var:H> \in \mathbb{Z}^+ $ such that $ <var:h> $ , $ <var:B> $ , $ <var:d> $ , $ <var:j> $ , $ <var:N> $ , $ <var:H> $ , $ <var:P> $ , $ <var:Y> $ , $ <var:q> \geq <nat:2> $ and such that $ <var:H> * <var:d> * <var:B> * <var:h> * <var:q> * <var:Y> * <var:N> * <var:j> * <var:P> $ is equal to $ <nat:10886400> $ . \end{theorem} \begin{proof} Take $ <var:j> = <nat:8> $ , $ <var:N> = <nat:3> $ , $ <var:B> = <nat:7> $ , $ <var:h> = <nat:2> $ , $ <var:Y> = <nat:12> $ , $ <var:H> = <nat:10> $ , $ <var:P> = <nat:5> $ , $ <var:d> = <nat:9> $ , $ <var:q> = <nat:6> $ . We prove the thesis is valid as $ <nat:9> $ , $ <nat:8> $ , $ <nat:7> $ , $ <nat:12> $ , $ <nat:2> $ , $ <nat:6> $ , $ <nat:5> $ , $ <nat:3> $ and $ <nat:10> \geq <nat:2> $ . \end{proof} \end{document} 
~
Require Import Lia . Theorem <genP:1> : exists <var:h> <var:d> <var:j> <var:Y> <var:B> <var:P> <var:q> <var:N> <var:H> : nat , ( <var:h> >= <nat:2> ) /\ ( <var:B> >= <nat:2> ) /\ ( <var:d> >= <nat:2> ) /\ ( <var:j> >= <nat:2> ) /\ ( <var:N> >= <nat:2> ) /\ ( <var:H> >= <nat:2> ) /\ ( <var:P> >= <nat:2> ) /\ ( <var:Y> >= <nat:2> ) /\ ( <var:q> >= <nat:2> ) /\ ( <var:H> * <var:d> * <var:B> * <var:h> * <var:q> * <var:Y> * <var:N> * <var:j> * <var:P> = <nat:10886400> ) . Proof . exists <nat:2> . exists <nat:9> . exists <nat:8> . exists <nat:12> . exists <nat:7> . exists <nat:5> . exists <nat:6> . exists <nat:3> . exists <nat:10> . assert ( <genH> : <nat:9> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:8> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:7> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:12> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:2> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:6> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:5> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:3> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:10> >= <nat:2> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 