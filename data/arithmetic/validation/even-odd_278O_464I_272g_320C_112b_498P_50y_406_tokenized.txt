\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:P> \cdot <nat:498> + <nat:112> \cdot <var:b> + <nat:406> + <var:I> \cdot <nat:464> + <var:g> \cdot <nat:272> + <var:O> \cdot <nat:278> + <var:C> \cdot <nat:320> + <nat:50> \cdot <var:y> $ must be even . \end{theorem} \begin{proof} Notice that $ <nat:406> $ is clearly an even natural number . It can be proven that this lemma is true . $ <nat:50> <var:y> + <var:P> <nat:498> + <var:O> <nat:278> + <nat:406> + <nat:112> <var:b> + <nat:272> <var:g> + <var:I> <nat:464> + <nat:320> <var:C> $ is known to be even as a consequence that the formula $ <nat:278> * <var:O> + <nat:464> * <var:I> + <var:g> * <nat:272> + <nat:320> * <var:C> + <nat:112> * <var:b> + <nat:498> * <var:P> + <nat:50> * <var:y> $ is guaranteed to be even . The terms $ <var:O> <nat:278> $ , $ <nat:464> <var:I> $ , $ <nat:272> <var:g> $ , $ <nat:320> <var:C> $ , $ <var:b> <nat:112> $ , $ <var:P> <nat:498> $ , in addition to $ <var:y> <nat:50> $ are known to be even naturals . This claim is proven since the product between an even whole number and an arbitrary element of $ \mathbb{Z}^+ $ is guaranteed to be even . This is proven since the positive integers $ <nat:278> $ , $ <nat:464> $ , $ <nat:272> $ , $ <nat:320> $ , $ <nat:112> $ , $ <nat:498> $ , and also $ <nat:50> $ are known as even . Our claim is proven because the summing of even numbers in $ \mathbb{N} $ with even elements of $ \mathbb{N} $ is even plus since multiplying of an even positive integer with some number is guaranteed to be an even integer . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:P> <var:b> <var:I> <var:g> <var:O> <var:C> <var:y> : nat , Nat . even ( <nat:498> * <var:P> + <nat:112> * <var:b> + <nat:464> * <var:I> + <nat:272> * <var:g> + <nat:278> * <var:O> + <nat:320> * <var:C> + <nat:50> * <var:y> + <nat:406> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:406> = true ) . { auto . } assert ( <genH> : Nat . even <nat:278> = true ) . { auto . } assert ( <genH> : Nat . even <nat:464> = true ) . { auto . } assert ( <genH> : Nat . even <nat:272> = true ) . { auto . } assert ( <genH> : Nat . even <nat:320> = true ) . { auto . } assert ( <genH> : Nat . even <nat:112> = true ) . { auto . } assert ( <genH> : Nat . even <nat:498> = true ) . { auto . } assert ( <genH> : Nat . even <nat:50> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:278> * <var:O> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:464> * <var:I> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:272> * <var:g> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:320> * <var:C> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:112> * <var:b> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:498> * <var:P> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:50> * <var:y> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:498> * <var:P> + <nat:112> * <var:b> + <nat:464> * <var:I> + <nat:272> * <var:g> + <nat:278> * <var:O> + <nat:320> * <var:C> + <nat:50> * <var:y> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . auto . Qed . 