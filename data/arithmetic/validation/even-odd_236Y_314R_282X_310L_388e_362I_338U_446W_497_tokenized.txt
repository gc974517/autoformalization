\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:236> \cdot <var:Y> + <nat:314> \cdot <var:R> + <var:X> \cdot <nat:282> + <nat:497> + <var:L> \cdot <nat:310> + <nat:388> \cdot <var:e> + <nat:362> \cdot <var:I> + <var:U> \cdot <nat:338> + <var:W> \cdot <nat:446> $ must be odd . \end{theorem} \begin{proof} The pairs $ <var:R> * <nat:314> $ , $ <nat:362> * <var:I> $ , $ <var:e> * <nat:388> $ , in addition to $ <var:Y> * <nat:236> $ are trivially even whole numbers . The terms $ <nat:282> * <var:X> $ and likewise $ <nat:338> * <var:U> $ are guaranteed to be even . This holds because taking the product between an even positive integer with any natural number is even . Remember the term $ <nat:310> * <var:L> $ is even . In addition , observe that the product $ <var:W> * <nat:446> $ is known to be an even integer . This fact is proven by reason that multiplying between an even natural number and a natural will be even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:Y> <var:R> <var:X> <var:L> <var:e> <var:I> <var:U> <var:W> : nat , Nat . odd ( <nat:236> * <var:Y> + <nat:314> * <var:R> + <nat:282> * <var:X> + <nat:310> * <var:L> + <nat:388> * <var:e> + <nat:362> * <var:I> + <nat:338> * <var:U> + <nat:446> * <var:W> + <nat:497> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:314> * <var:R> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:362> * <var:I> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:388> * <var:e> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:236> * <var:Y> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:282> * <var:X> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:338> * <var:U> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:310> * <var:L> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:446> * <var:W> ) = true ) . { rewrite Nat . even_mul . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 