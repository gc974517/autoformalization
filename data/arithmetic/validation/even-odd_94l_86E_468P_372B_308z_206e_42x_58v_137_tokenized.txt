\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Given any natural numbers $ <var:z> $ , $ <var:B> $ , $ <var:P> $ , $ <var:l> $ , $ <var:x> $ , $ <var:E> $ , $ <var:v> $ , and $ <var:e> $ $ <nat:137> + <var:x> * <nat:42> + <nat:94> * <var:l> + <nat:308> * <var:z> + <nat:58> * <var:v> + <var:e> * <nat:206> + <nat:86> * <var:E> + <nat:468> * <var:P> + <nat:372> * <var:B> $ is guaranteed to be odd . \end{theorem} \begin{proof} See the terms $ <var:z> <nat:308> $ , $ <var:x> <nat:42> $ , and also $ <var:v> <nat:58> $ are guaranteed to be even . The terms $ <var:B> <nat:372> $ , $ <var:l> <nat:94> $ , $ <nat:206> <var:e> $ , as well as $ <nat:468> <var:P> $ are trivially even naturals . Building on , take note the product $ <nat:86> <var:E> $ is an even element of $ \mathbb{N} $ from the knowledge multiplying of an even element of $ \mathbb{N} $ with a whole number is even . The addition of an even number with an odd number in $ \mathbb{N} $ must be itself an odd element of $ \mathbb{N} $ . Therefore , the expression $ <nat:94> \times <var:l> + <var:E> \times <nat:86> + <var:P> \times <nat:468> + <nat:372> \times <var:B> + <nat:308> \times <var:z> + <nat:137> + <var:e> \times <nat:206> + <nat:42> \times <var:x> + <nat:58> \times <var:v> $ by its very nature will be odd . We know that $ <nat:137> $ is clearly odd . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:z> <var:B> <var:P> <var:l> <var:x> <var:E> <var:v> <var:e> : nat , Nat . odd ( <nat:42> * <var:x> + <nat:94> * <var:l> + <nat:308> * <var:z> + <nat:58> * <var:v> + <nat:206> * <var:e> + <nat:86> * <var:E> + <nat:468> * <var:P> + <nat:372> * <var:B> + <nat:137> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:308> * <var:z> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:42> * <var:x> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:58> * <var:v> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:372> * <var:B> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:94> * <var:l> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:206> * <var:e> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:468> * <var:P> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:86> * <var:E> ) = true ) . { rewrite Nat . even_mul . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . assert ( <genH> : Nat . odd <nat:137> = true ) . { auto . } rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 