\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Let $ <var:C> $ , $ <var:r> $ , $ <var:T> $ , $ <var:p> $ , $ <var:G> $ , $ <var:d> $ , $ <var:i> $ , $ <var:t> $ and $ <var:Y> $ be positive integers so that $ <var:p> $ , $ <var:d> $ , $ <var:T> $ , $ <var:i> $ , $ <var:t> $ , $ <var:Y> $ , $ <var:r> $ , $ <var:C> $ , $ <var:G> > <nat:1> $ and so that $ <var:t> * <var:p> * <var:r> * <var:i> * <var:C> * <var:T> * <var:d> * <var:Y> * <var:G> $ is equal to $ <nat:39916800> $ . \end{theorem} \begin{proof} Observe that $ <nat:5> $ , $ <nat:9> $ , $ <nat:10> $ , $ <nat:7> $ , $ <nat:12> $ , $ <nat:6> $ , $ <nat:11> $ , $ <nat:2> $ , $ <nat:8> > <nat:1> $ . Similarly notice further $ <var:Y> \times <var:r> \times <var:T> \times <var:G> \times <var:t> \times <var:p> \times <var:d> \times <var:i> \times <var:C> = <nat:39916800> $ gives $ <var:G> = <nat:10> $ , $ <var:T> = <nat:8> $ , $ <var:i> = <nat:12> $ , $ <var:r> = <nat:7> $ , $ <var:t> = <nat:2> $ , $ <var:C> = <nat:5> $ , $ <var:p> = <nat:6> $ , $ <var:Y> = <nat:11> $ , and $ <var:d> = <nat:9> $ . Thus , $ <var:G> \cdot <var:d> \cdot <var:i> \cdot <var:T> \cdot <var:p> \cdot <var:Y> \cdot <var:r> \cdot <var:C> \cdot <var:t> = <nat:39916800> $ is validated . \end{proof} \end{document} 
~
Require Import Lia . Theorem <genP:1> : exists <var:C> <var:r> <var:T> <var:p> <var:G> <var:d> <var:i> <var:t> <var:Y> : nat , ( <var:p> > <nat:1> ) /\ ( <var:d> > <nat:1> ) /\ ( <var:T> > <nat:1> ) /\ ( <var:i> > <nat:1> ) /\ ( <var:t> > <nat:1> ) /\ ( <var:Y> > <nat:1> ) /\ ( <var:r> > <nat:1> ) /\ ( <var:C> > <nat:1> ) /\ ( <var:G> > <nat:1> ) /\ ( <var:t> * <var:p> * <var:r> * <var:i> * <var:C> * <var:T> * <var:d> * <var:Y> * <var:G> = <nat:39916800> ) . Proof . assert ( <genH> : <nat:5> > <nat:1> ) . { lia . } assert ( <genH> : <nat:9> > <nat:1> ) . { lia . } assert ( <genH> : <nat:10> > <nat:1> ) . { lia . } assert ( <genH> : <nat:7> > <nat:1> ) . { lia . } assert ( <genH> : <nat:12> > <nat:1> ) . { lia . } assert ( <genH> : <nat:6> > <nat:1> ) . { lia . } assert ( <genH> : <nat:11> > <nat:1> ) . { lia . } assert ( <genH> : <nat:2> > <nat:1> ) . { lia . } assert ( <genH> : <nat:8> > <nat:1> ) . { lia . } exists <nat:5> . exists <nat:7> . exists <nat:8> . exists <nat:6> . exists <nat:10> . exists <nat:9> . exists <nat:12> . exists <nat:2> . exists <nat:11> . repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 