\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Denote that under the condition there exist $ <var:q> $ , $ <var:V> $ , $ <var:Y> $ , $ <var:F> $ , $ <var:e> $ , $ <var:M> $ , $ <var:T> \in \mathbb{Z}^+ $ we define that some whole number $ <var:y> $ will be considered as a <def:seven-composite> integer assuming $ <var:q> \times <var:V> \times <var:e> \times <var:Y> \times <var:T> \times <var:M> \times <var:F> = <var:y> $ and so that $ <var:q> $ , $ <var:T> $ , $ <var:e> $ , $ <var:V> $ , $ <var:M> $ , $ <var:Y> $ , $ <var:F> \geq <nat:2> $ . So $ <nat:211200> = <var:y> $ is a <def:seven-composite> number . \end{theorem} \begin{proof} Assume $ <var:F> = <nat:11> $ , $ <var:M> = <nat:5> $ , $ <var:V> = <nat:6> $ , $ <var:e> = <nat:2> $ , $ <var:Y> = <nat:10> $ , $ <var:q> = <nat:4> $ , $ <var:T> = <nat:8> $ . We justify $ <nat:211200> = <var:Y> \times <var:M> \times <var:e> \times <var:T> \times <var:q> \times <var:V> \times <var:F> $ . Note that $ <nat:5> $ , $ <nat:11> $ , $ <nat:8> $ , $ <nat:2> $ , $ <nat:6> $ , $ <nat:4> $ , $ <nat:10> \geq <nat:2> $ . What's more note that also $ <nat:11> * <nat:4> * <nat:2> * <nat:8> * <nat:6> * <nat:10> * <nat:5> = <nat:211200> $ . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:seven-composite> ( <var:y> : nat ) := exists <var:q> <var:V> <var:Y> <var:F> <var:e> <var:M> <var:T> : nat , ( <var:q> * <var:V> * <var:e> * <var:Y> * <var:T> * <var:M> * <var:F> = <var:y> ) /\ ( <var:q> >= <nat:2> ) /\ ( <var:T> >= <nat:2> ) /\ ( <var:e> >= <nat:2> ) /\ ( <var:V> >= <nat:2> ) /\ ( <var:M> >= <nat:2> ) /\ ( <var:Y> >= <nat:2> ) /\ ( <var:F> >= <nat:2> ) . Theorem <genP:1> : <def:seven-composite> <nat:211200> . Proof . unfold <def:seven-composite> . exists <nat:4> . exists <nat:6> . exists <nat:10> . exists <nat:11> . exists <nat:2> . exists <nat:5> . exists <nat:8> . assert ( <genH> : <nat:5> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:11> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:8> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:2> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:6> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:4> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:10> >= <nat:2> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 