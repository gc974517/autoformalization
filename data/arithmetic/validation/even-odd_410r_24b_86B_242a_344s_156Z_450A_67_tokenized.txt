\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:156> \cdot <var:Z> + <var:a> \cdot <nat:242> + <var:r> \cdot <nat:410> + <nat:86> \cdot <var:B> + <nat:67> + <nat:344> \cdot <var:s> + <var:b> \cdot <nat:24> + <var:A> \cdot <nat:450> $ is guaranteed to be odd . \end{theorem} \begin{proof} It can be verified that the formula $ <nat:67> + <nat:410> * <var:r> + <var:Z> * <nat:156> + <var:A> * <nat:450> + <var:b> * <nat:24> + <var:s> * <nat:344> + <nat:86> * <var:B> + <nat:242> * <var:a> $ is odd . $ <var:r> \times <nat:410> $ is known to be even from the knowledge the positive integer $ <nat:410> $ is even . On top of this , $ <var:b> \times <nat:24> $ is obviously even from the knowledge the natural number $ <nat:24> $ is known as even . Furthermore , the coefficient $ <nat:86> $ is clearly even . In consequence , the pair $ <var:B> \times <nat:86> $ will be even additionally . Furthermore , see that the term $ <var:a> \times <nat:242> $ is obviously an even number from the knowledge the integer $ <nat:242> $ is clearly an even natural . On top of this , $ <var:s> \times <nat:344> $ is trivially an even element of $ \mathbb{Z}^+ $ as a consequence that taking the product of an even whole number and an arbitrary number will be even . This fact holds because the integer $ <nat:344> $ is guaranteed to be even . We know the term $ <nat:156> \times <var:Z> $ is trivially even from the knowledge taking the product between an even number with any natural is an even integer , and is proven from the knowledge the whole number $ <nat:156> $ is trivially in itself an even natural number . Building on , the natural number $ <nat:450> $ is guaranteed to be an even element of $ \mathbb{N} $ . For this reason , $ <nat:450> \times <var:A> $ is even in addition . The addition of an even number in $ \mathbb{Z}^+ $ with an odd integer is guaranteed to be odd . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:Z> <var:a> <var:r> <var:B> <var:s> <var:b> <var:A> : nat , Nat . odd ( <nat:156> * <var:Z> + <nat:242> * <var:a> + <nat:410> * <var:r> + <nat:86> * <var:B> + <nat:344> * <var:s> + <nat:24> * <var:b> + <nat:450> * <var:A> + <nat:67> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:410> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:410> * <var:r> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:24> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:24> * <var:b> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:86> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:86> * <var:B> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:242> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:242> * <var:a> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:344> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:344> * <var:s> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:156> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:156> * <var:Z> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:450> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:450> * <var:A> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 