\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:77> + <var:d> <nat:264> + <var:U> <nat:26> + <var:i> <nat:50> + <nat:336> <var:e> + <var:H> <nat:474> + <nat:310> <var:V> $ will be odd . \end{theorem} \begin{proof} We verify this theorem is true . Recall $ <nat:77> $ is trivially odd . We use the fact $ <nat:26> * <var:U> + <nat:310> * <var:V> + <nat:336> * <var:e> + <nat:474> * <var:H> + <var:d> * <nat:264> + <nat:50> * <var:i> $ is guaranteed to be even . We know that the addition of an even integer with an even element of $ \mathbb{N} $ is guaranteed to be clearly an even integer . Take note the positive integer $ <nat:310> $ is even . In consequence , the product $ <var:V> <nat:310> $ is even too . The pair $ <var:H> <nat:474> $ is known as even from the knowledge the coefficient $ <nat:474> $ is known to be trivially an even number . Building on , observe the leading term $ <nat:336> $ is guaranteed to be even . For this reason , the pair $ <nat:336> <var:e> $ is guaranteed to be even additionally . The term $ <var:i> <nat:50> $ is known as even . This is proven because multiplying between an even natural number and any number is even , and must be true as a consequence that the leading term $ <nat:50> $ is obviously even . The coefficient $ <nat:264> $ is trivially an even positive integer . Thus , the product $ <var:d> <nat:264> $ is guaranteed to be even in addition . See the pair $ <var:U> <nat:26> $ is clearly even . This fact is true since the product between an even whole number and any element of $ \mathbb{Z}^+ $ must be even . This fact must be true by reason that the natural number $ <nat:26> $ is known to be by definition an even number in $ \mathbb{N} $ . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:d> <var:U> <var:i> <var:e> <var:H> <var:V> : nat , Nat . odd ( <nat:264> * <var:d> + <nat:26> * <var:U> + <nat:50> * <var:i> + <nat:336> * <var:e> + <nat:474> * <var:H> + <nat:310> * <var:V> + <nat:77> ) = true . Proof . intros . assert ( <genH> : Nat . odd <nat:77> = true ) . { auto . } assert ( <genH> : Nat . even <nat:310> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:310> * <var:V> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:474> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:474> * <var:H> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:336> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:336> * <var:e> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:50> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:50> * <var:i> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:264> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:264> * <var:d> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:26> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:26> * <var:U> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:264> * <var:d> + <nat:26> * <var:U> + <nat:50> * <var:i> + <nat:336> * <var:e> + <nat:474> * <var:H> + <nat:310> * <var:V> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . rewrite <genH> . auto . Qed . 