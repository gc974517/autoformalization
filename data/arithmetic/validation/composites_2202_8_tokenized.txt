\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Supposing we get satisfying the condition that $ <var:x> $ , $ <var:J> $ , $ <var:m> $ , $ <var:U> $ , $ <var:z> $ , $ <var:t> $ , $ <var:C> $ , $ <var:i> > <nat:1> $ where using some $ <var:u> $ , $ <var:u> = <var:i> \cdot <var:U> \cdot <var:J> \cdot <var:z> \cdot <var:x> \cdot <var:C> \cdot <var:t> \cdot <var:m> $ , denote that $ <var:u> $ is a <def:eight-composite> integer taking some $ <var:m> $ , $ <var:z> $ , $ <var:J> $ , $ <var:i> $ , $ <var:x> $ , $ <var:t> $ , $ <var:U> $ , $ <var:C> \in \mathbb{Z}^+ $ . For this reason the number <nat:1330560> is a <def:eight-composite> positive integer . \end{theorem} \begin{proof} Recollect that a <def:eight-composite> integer is the product between positive integers $ <var:J> $ , $ <var:z> $ , $ <var:t> $ , $ <var:U> $ , $ <var:i> $ , $ <var:x> $ , $ <var:m> $ , $ <var:C> $ greater than <nat:1> . We verify <nat:1330560> is a <def:eight-composite> whole number . Note $ <nat:6> $ , $ <nat:7> $ , $ <nat:9> $ , $ <nat:5> $ , $ <nat:11> $ , $ <nat:8> $ , $ <nat:2> $ , and $ <nat:4> > <nat:1> $ . Further observe that further $ <nat:1330560> = <nat:4> \times <nat:8> \times <nat:9> \times <nat:11> \times <nat:2> \times <nat:7> \times <nat:6> \times <nat:5> $ . This suggests the statement is valid . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:eight-composite> ( <var:u> : nat ) := exists <var:m> <var:z> <var:J> <var:i> <var:x> <var:t> <var:U> <var:C> : nat , ( <var:x> > <nat:1> ) /\ ( <var:J> > <nat:1> ) /\ ( <var:m> > <nat:1> ) /\ ( <var:U> > <nat:1> ) /\ ( <var:z> > <nat:1> ) /\ ( <var:t> > <nat:1> ) /\ ( <var:C> > <nat:1> ) /\ ( <var:i> > <nat:1> ) /\ ( <var:u> = <var:i> * <var:U> * <var:J> * <var:z> * <var:x> * <var:C> * <var:t> * <var:m> ) . Theorem <genP:1> : <def:eight-composite> <nat:1330560> . Proof . unfold <def:eight-composite> . assert ( <genH> : <nat:6> > <nat:1> ) . { lia . } assert ( <genH> : <nat:7> > <nat:1> ) . { lia . } assert ( <genH> : <nat:9> > <nat:1> ) . { lia . } assert ( <genH> : <nat:5> > <nat:1> ) . { lia . } assert ( <genH> : <nat:11> > <nat:1> ) . { lia . } assert ( <genH> : <nat:8> > <nat:1> ) . { lia . } assert ( <genH> : <nat:2> > <nat:1> ) . { lia . } assert ( <genH> : <nat:4> > <nat:1> ) . { lia . } exists <nat:4> . exists <nat:6> . exists <nat:5> . exists <nat:2> . exists <nat:9> . exists <nat:11> . exists <nat:7> . exists <nat:8> . repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 