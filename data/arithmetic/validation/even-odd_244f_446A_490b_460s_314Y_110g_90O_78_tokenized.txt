\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:490> \times <var:b> + <var:s> \times <nat:460> + <var:f> \times <nat:244> + <nat:446> \times <var:A> + <nat:78> + <nat:314> \times <var:Y> + <var:O> \times <nat:90> + <var:g> \times <nat:110> $ will be even using some $ <var:Y> $ , $ <var:f> $ , $ <var:A> $ , $ <var:O> $ , $ <var:g> $ , $ <var:s> $ , and $ <var:b> $ . \end{theorem} \begin{proof} Take note that $ <nat:78> $ is an even element of $ \mathbb{N} $ . It can be demonstrated that the claim is proven . It can be checked that that the expression $ <var:s> * <nat:460> + <nat:110> * <var:g> + <var:A> * <nat:446> + <nat:90> * <var:O> + <nat:490> * <var:b> + <nat:314> * <var:Y> + <nat:78> + <var:f> * <nat:244> $ is obviously even because the sum $ <var:A> \times <nat:446> + <var:b> \times <nat:490> + <var:Y> \times <nat:314> + <nat:110> \times <var:g> + <var:O> \times <nat:90> + <nat:244> \times <var:f> + <var:s> \times <nat:460> $ is obviously even . Take note the integer $ <nat:110> $ is trivially even . Consequently , the term $ <var:g> \times <nat:110> $ must be even at the same time . Recall the coefficients $ <nat:244> $ , $ <nat:90> $ , $ <nat:460> $ , $ <nat:490> $ , in addition to $ <nat:446> $ are guaranteed to be even . So , the terms $ <nat:244> \times <var:f> $ , $ <nat:90> \times <var:O> $ , $ <var:s> \times <nat:460> $ , $ <nat:490> \times <var:b> $ , and likewise $ <nat:446> \times <var:A> $ must be even additionally . What's more , take note the pair $ <var:Y> \times <nat:314> $ is even because taking the product of an even integer and an arbitrary element of $ \mathbb{N} $ is itself an even number in $ \mathbb{N} $ . This is true because the integer $ <nat:314> $ is obviously even . The claim must be true because the summation of even numbers in $ \mathbb{Z}^+ $ and an even positive integer is an even whole number additionally since taking the product between an even integer with a number is guaranteed to be even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:Y> <var:f> <var:A> <var:O> <var:g> <var:s> <var:b> : nat , Nat . even ( <nat:490> * <var:b> + <nat:460> * <var:s> + <nat:244> * <var:f> + <nat:446> * <var:A> + <nat:314> * <var:Y> + <nat:90> * <var:O> + <nat:110> * <var:g> + <nat:78> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:78> = true ) . { auto . } assert ( <genH> : Nat . even <nat:110> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:110> * <var:g> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:244> = true ) . { auto . } assert ( <genH> : Nat . even <nat:90> = true ) . { auto . } assert ( <genH> : Nat . even <nat:460> = true ) . { auto . } assert ( <genH> : Nat . even <nat:490> = true ) . { auto . } assert ( <genH> : Nat . even <nat:446> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:244> * <var:f> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:90> * <var:O> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:460> * <var:s> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:490> * <var:b> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:446> * <var:A> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:314> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:314> * <var:Y> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:490> * <var:b> + <nat:460> * <var:s> + <nat:244> * <var:f> + <nat:446> * <var:A> + <nat:314> * <var:Y> + <nat:90> * <var:O> + <nat:110> * <var:g> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . auto . Qed . 