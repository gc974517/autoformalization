\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Allow $ <var:s> $ , $ <var:k> $ , $ <var:V> $ , $ <var:p> $ , $ <var:i> $ , $ <var:r> $ , $ <var:l> $ , $ <var:M> $ , $ <var:Q> $ as numbers such that $ <var:M> $ , $ <var:i> $ , $ <var:p> $ , $ <var:k> $ , $ <var:s> $ , $ <var:l> $ , $ <var:r> $ , $ <var:V> $ , and $ <var:Q> > <nat:1> $ . Let that some whole number $ <var:w> $ will be a <def:nine-composite> whole number when $ <var:r> \times <var:s> \times <var:p> \times <var:V> \times <var:k> \times <var:Q> \times <var:i> \times <var:l> \times <var:M> = <var:w> $ . Hence the natural number <nat:7603200> is a <def:nine-composite> number . \end{theorem} \begin{proof} We present <nat:7603200> is a <def:nine-composite> number in view of $ <nat:11> $ , $ <nat:12> $ , $ <nat:2> $ , $ <nat:8> $ , $ <nat:3> $ , $ <nat:5> $ , $ <nat:4> $ , $ <nat:6> $ and $ <nat:10> $ are more than <nat:1> as well as seeing that $ <nat:3> * <nat:12> * <nat:2> * <nat:5> * <nat:10> * <nat:11> * <nat:6> * <nat:8> * <nat:4> = <nat:7603200> $ . As a consequence , $ <var:r> $ , $ <var:M> $ , $ <var:V> $ , $ <var:p> $ , $ <var:Q> $ , $ <var:l> $ , $ <var:s> $ , $ <var:k> $ , $ <var:i> $ are greater than <nat:1> and $ <var:i> * <var:p> * <var:V> * <var:s> * <var:M> * <var:k> * <var:Q> * <var:l> * <var:r> = <nat:7603200> $ is validated . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:nine-composite> ( <var:w> : nat ) := exists <var:s> <var:k> <var:V> <var:p> <var:i> <var:r> <var:l> <var:M> <var:Q> : nat , ( <var:M> > <nat:1> ) /\ ( <var:i> > <nat:1> ) /\ ( <var:p> > <nat:1> ) /\ ( <var:k> > <nat:1> ) /\ ( <var:s> > <nat:1> ) /\ ( <var:l> > <nat:1> ) /\ ( <var:r> > <nat:1> ) /\ ( <var:V> > <nat:1> ) /\ ( <var:Q> > <nat:1> ) /\ ( <var:r> * <var:s> * <var:p> * <var:V> * <var:k> * <var:Q> * <var:i> * <var:l> * <var:M> = <var:w> ) . Theorem <genP:1> : <def:nine-composite> <nat:7603200> . Proof . unfold <def:nine-composite> . assert ( <genH> : <nat:11> > <nat:1> ) . { lia . } assert ( <genH> : <nat:12> > <nat:1> ) . { lia . } assert ( <genH> : <nat:2> > <nat:1> ) . { lia . } assert ( <genH> : <nat:8> > <nat:1> ) . { lia . } assert ( <genH> : <nat:3> > <nat:1> ) . { lia . } assert ( <genH> : <nat:5> > <nat:1> ) . { lia . } assert ( <genH> : <nat:4> > <nat:1> ) . { lia . } assert ( <genH> : <nat:6> > <nat:1> ) . { lia . } assert ( <genH> : <nat:10> > <nat:1> ) . { lia . } exists <nat:6> . exists <nat:12> . exists <nat:10> . exists <nat:4> . exists <nat:8> . exists <nat:11> . exists <nat:3> . exists <nat:2> . exists <nat:5> . repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 