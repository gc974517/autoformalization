\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:481> + <nat:488> <var:A> + <nat:106> <var:C> + <var:t> <nat:342> + <nat:162> <var:h> + <nat:230> <var:H> + <nat:292> <var:i> + <nat:146> <var:M> $ must be odd with any natural terms $ <var:M> $ , $ <var:C> $ , $ <var:h> $ , $ <var:t> $ , $ <var:H> $ , $ <var:A> $ , and $ <var:i> $ . \end{theorem} \begin{proof} Our claim is proven since $ <nat:162> * <var:h> + <var:M> * <nat:146> + <var:i> * <nat:292> + <var:C> * <nat:106> + <var:H> * <nat:230> + <nat:342> * <var:t> + <var:A> * <nat:488> $ is trivially even . The leading terms $ <nat:146> $ and moreover $ <nat:488> $ are even The positive integer $ <nat:162> $ is known as an even natural The numbers $ <nat:292> $ and moreover $ <nat:342> $ are clearly even The leading term $ <nat:106> $ is guaranteed to be even The leading term $ <nat:230> $ is obviously an even element of $ \mathbb{Z}^+ $ The summation $ <var:A> \cdot <nat:488> + <nat:106> \cdot <var:C> + <nat:292> \cdot <var:i> + <var:H> \cdot <nat:230> + <var:M> \cdot <nat:146> + <nat:342> \cdot <var:t> + <nat:162> \cdot <var:h> $ must be itself even from the knowledge the product of an even natural number with an arbitrary number in $ \mathbb{Z}^+ $ must be even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:M> <var:C> <var:h> <var:t> <var:H> <var:A> <var:i> : nat , Nat . odd ( <nat:488> * <var:A> + <nat:106> * <var:C> + <nat:342> * <var:t> + <nat:162> * <var:h> + <nat:230> * <var:H> + <nat:292> * <var:i> + <nat:146> * <var:M> + <nat:481> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:146> = true ) . { auto . } assert ( <genH> : Nat . even <nat:488> = true ) . { auto . } assert ( <genH> : Nat . even <nat:162> = true ) . { auto . } assert ( <genH> : Nat . even <nat:292> = true ) . { auto . } assert ( <genH> : Nat . even <nat:342> = true ) . { auto . } assert ( <genH> : Nat . even <nat:106> = true ) . { auto . } assert ( <genH> : Nat . even <nat:230> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:488> * <var:A> + <nat:106> * <var:C> + <nat:342> * <var:t> + <nat:162> * <var:h> + <nat:230> * <var:H> + <nat:292> * <var:i> + <nat:146> * <var:M> ) = true ) . { repeat rewrite Nat . even_add . repeat rewrite Nat . even_mul . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . auto . Qed . 