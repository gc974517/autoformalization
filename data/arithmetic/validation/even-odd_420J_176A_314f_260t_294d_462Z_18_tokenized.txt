\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:260> \cdot <var:t> + <var:A> \cdot <nat:176> + <var:d> \cdot <nat:294> + <nat:314> \cdot <var:f> + <nat:420> \cdot <var:J> + <nat:18> + <nat:462> \cdot <var:Z> $ is guaranteed to be even . \end{theorem} \begin{proof} The number $ <nat:420> $ is known as an even element of $ \mathbb{Z}^+ $ . So , the term $ <var:J> \cdot <nat:420> $ is even too . Building on , the product $ <nat:314> \cdot <var:f> $ is trivially an even number in $ \mathbb{Z}^+ $ from the knowledge the number $ <nat:314> $ is known as even . What's more , the integers $ <nat:260> $ , $ <nat:176> $ , plus $ <nat:294> $ are trivially even . Therefore , the pairs $ <nat:260> \cdot <var:t> $ , $ <nat:176> \cdot <var:A> $ , in addition to $ <nat:294> \cdot <var:d> $ will be even as well . Notice the pair $ <var:Z> \cdot <nat:462> $ is known to be even because the product between an even number with any element of $ \mathbb{Z}^+ $ will be even , which must be true since the integer $ <nat:462> $ is guaranteed to be even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:t> <var:A> <var:d> <var:f> <var:J> <var:Z> : nat , Nat . even ( <nat:260> * <var:t> + <nat:176> * <var:A> + <nat:294> * <var:d> + <nat:314> * <var:f> + <nat:420> * <var:J> + <nat:462> * <var:Z> + <nat:18> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:420> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:420> * <var:J> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:314> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:314> * <var:f> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:260> = true ) . { auto . } assert ( <genH> : Nat . even <nat:176> = true ) . { auto . } assert ( <genH> : Nat . even <nat:294> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:260> * <var:t> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:176> * <var:A> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:294> * <var:d> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:462> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:462> * <var:Z> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 