\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:q> \times <nat:310> + <nat:439> + <nat:320> \times <var:l> + <nat:252> \times <var:E> + <nat:112> \times <var:S> + <nat:2> \times <var:G> + <nat:242> \times <var:N> $ will be odd . \end{theorem} \begin{proof} We show $ <var:E> <nat:252> + <nat:439> + <nat:320> <var:l> + <nat:2> <var:G> + <nat:310> <var:q> + <var:S> <nat:112> + <nat:242> <var:N> $ will be odd employing the knowledge the summing of an even element of $ \mathbb{N} $ and an odd whole number must be odd . The term $ <nat:310> * <var:q> $ is known to be an even number in $ \mathbb{N} $ since the product of an even natural number and a number in $ \mathbb{N} $ is an even element of $ \mathbb{Z}^+ $ . On top of this , the terms $ <nat:320> * <var:l> $ , $ <nat:112> * <var:S> $ , in addition to $ <nat:252> * <var:E> $ are obviously even . On top of this , recall $ <nat:2> * <var:G> $ is obviously an even whole number because taking the product between an even positive integer with an arbitrary number is clearly an even integer . $ <nat:242> * <var:N> $ is known to be even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:q> <var:l> <var:E> <var:S> <var:G> <var:N> : nat , Nat . odd ( <nat:310> * <var:q> + <nat:320> * <var:l> + <nat:252> * <var:E> + <nat:112> * <var:S> + <nat:2> * <var:G> + <nat:242> * <var:N> + <nat:439> ) = true . Proof . intros . rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . assert ( <genH> : Nat . even ( <nat:310> * <var:q> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:320> * <var:l> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:112> * <var:S> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:252> * <var:E> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:2> * <var:G> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:242> * <var:N> ) = true ) . { rewrite Nat . even_mul . auto . } rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 