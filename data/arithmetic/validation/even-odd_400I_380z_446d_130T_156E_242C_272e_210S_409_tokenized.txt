\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:446> <var:d> + <nat:409> + <var:S> <nat:210> + <nat:130> <var:T> + <var:z> <nat:380> + <var:I> <nat:400> + <nat:242> <var:C> + <var:E> <nat:156> + <nat:272> <var:e> $ must be odd using some natural numbers $ <var:e> $ , $ <var:T> $ , $ <var:S> $ , $ <var:E> $ , $ <var:z> $ , $ <var:I> $ , $ <var:d> $ , and $ <var:C> $ . \end{theorem} \begin{proof} We prove $ <nat:409> + <var:E> * <nat:156> + <var:z> * <nat:380> + <nat:130> * <var:T> + <nat:272> * <var:e> + <var:C> * <nat:242> + <nat:210> * <var:S> + <nat:446> * <var:d> + <var:I> * <nat:400> $ is clearly odd because the formula $ <nat:400> \cdot <var:I> + <nat:380> \cdot <var:z> + <nat:446> \cdot <var:d> + <var:T> \cdot <nat:130> + <nat:156> \cdot <var:E> + <nat:242> \cdot <var:C> + <nat:272> \cdot <var:e> + <nat:210> \cdot <var:S> $ is trivially even . Take note that the products $ <nat:156> <var:E> $ , $ <var:I> <nat:400> $ , $ <nat:210> <var:S> $ , additionally $ <var:C> <nat:242> $ will be even . This claim holds because taking the product of an even natural with some element of $ \mathbb{Z}^+ $ must be even . On top of this , we know the products $ <var:d> <nat:446> $ , $ <nat:380> <var:z> $ , and also $ <var:e> <nat:272> $ are clearly even positive integers . The product $ <var:T> <nat:130> $ is obviously an even number from the fact taking the product between an even element of $ \mathbb{N} $ and any element of $ \mathbb{Z}^+ $ will be even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:e> <var:T> <var:S> <var:E> <var:z> <var:I> <var:d> <var:C> : nat , Nat . odd ( <nat:446> * <var:d> + <nat:210> * <var:S> + <nat:130> * <var:T> + <nat:380> * <var:z> + <nat:400> * <var:I> + <nat:242> * <var:C> + <nat:156> * <var:E> + <nat:272> * <var:e> + <nat:409> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:156> * <var:E> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:400> * <var:I> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:210> * <var:S> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:242> * <var:C> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:446> * <var:d> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:380> * <var:z> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:272> * <var:e> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:130> * <var:T> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:446> * <var:d> + <nat:210> * <var:S> + <nat:130> * <var:T> + <nat:380> * <var:z> + <nat:400> * <var:I> + <nat:242> * <var:C> + <nat:156> * <var:E> + <nat:272> * <var:e> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . auto . Qed . 