\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:U> \times <var:P> \times <var:R> \times <var:o> \times <var:r> \times <var:v> \times <var:h> \times <var:A> \times <var:b> $ is equal to $ <nat:13305600> $ where $ <var:R> $ , $ <var:o> $ , $ <var:h> $ , $ <var:b> $ , $ <var:v> $ , $ <var:P> $ , $ <var:A> $ , $ <var:U> $ and $ <var:r> \geq <nat:2> $ . \end{theorem} \begin{proof} Assume $ <var:v> = <nat:8> $ , $ <var:R> = <nat:7> $ , $ <var:P> = <nat:4> $ , $ <var:U> = <nat:6> $ , $ <var:o> = <nat:11> $ , $ <var:A> = <nat:9> $ , $ <var:h> = <nat:10> $ , $ <var:r> = <nat:5> $ , and $ <var:b> = <nat:2> $ . Similarly note $ <var:b> = <nat:2> $ , $ <var:R> = <nat:7> $ , $ <var:U> = <nat:6> $ , $ <var:A> = <nat:9> $ , $ <var:o> = <nat:11> $ , $ <var:v> = <nat:8> $ , $ <var:h> = <nat:10> $ , $ <var:r> = <nat:5> $ , $ <var:P> = <nat:4> \geq <nat:2> $ . \end{proof} \end{document} 
~
Require Import Lia . Theorem <genP:1> : exists <var:R> <var:v> <var:h> <var:U> <var:o> <var:A> <var:b> <var:P> <var:r> : nat , ( <var:U> * <var:P> * <var:R> * <var:o> * <var:r> * <var:v> * <var:h> * <var:A> * <var:b> = <nat:13305600> ) /\ ( <var:R> >= <nat:2> ) /\ ( <var:o> >= <nat:2> ) /\ ( <var:h> >= <nat:2> ) /\ ( <var:b> >= <nat:2> ) /\ ( <var:v> >= <nat:2> ) /\ ( <var:P> >= <nat:2> ) /\ ( <var:A> >= <nat:2> ) /\ ( <var:U> >= <nat:2> ) /\ ( <var:r> >= <nat:2> ) . Proof . exists <nat:7> . exists <nat:8> . exists <nat:10> . exists <nat:6> . exists <nat:11> . exists <nat:9> . exists <nat:2> . exists <nat:4> . exists <nat:5> . assert ( <genH> : <nat:2> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:7> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:6> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:9> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:11> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:8> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:10> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:5> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:4> >= <nat:2> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 