\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \newtheorem{definition}{Definition} \begin{document} \begin{definition} Only if we get such that $ <var:v> $ , $ <var:i> $ , $ <var:J> $ , $ <var:e> $ and $ <var:C> > <nat:1> $ so that for some natural number $ <var:y> $ , $ <var:y> = <var:e> \cdot <var:C> \cdot <var:i> \cdot <var:v> \cdot <var:J> $ using some positive integers $ <var:e> $ , $ <var:i> $ , $ <var:C> $ , $ <var:J> $ , $ <var:v> $ , then we assume that $ <var:y> $ is a <def:five-composite> positive integer . \end{definition} \begin{theorem} $ <var:y> = <nat:5544> $ is a <def:five-composite> number . \end{theorem} \begin{proof} Recollect that a <def:five-composite> integer is the multiplication between integers $ <var:i> $ , $ <var:e> $ , $ <var:v> $ , $ <var:C> $ and $ <var:J> $ such that $ <var:i> $ , $ <var:J> $ , $ <var:v> $ , $ <var:C> $ , and $ <var:e> > <nat:1> $ . Let $ <var:J> = <nat:3> $ , $ <var:v> = <nat:6> $ , $ <var:i> = <nat:7> $ , $ <var:C> = <nat:11> $ and $ <var:e> = <nat:4> $ . Note $ <nat:11> $ , $ <nat:4> $ , $ <nat:7> $ , $ <nat:3> $ and $ <nat:6> > <nat:1> $ . This produces our thesis is valid . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:five-composite> ( <var:y> : nat ) := exists <var:e> <var:i> <var:C> <var:J> <var:v> : nat , ( <var:v> > <nat:1> ) /\ ( <var:i> > <nat:1> ) /\ ( <var:J> > <nat:1> ) /\ ( <var:e> > <nat:1> ) /\ ( <var:C> > <nat:1> ) /\ ( <var:y> = <var:e> * <var:C> * <var:i> * <var:v> * <var:J> ) . Theorem <genP:1> : <def:five-composite> <nat:5544> . Proof . unfold <def:five-composite> . exists <nat:4> . exists <nat:7> . exists <nat:11> . exists <nat:3> . exists <nat:6> . assert ( <genH> : <nat:11> > <nat:1> ) . { lia . } assert ( <genH> : <nat:4> > <nat:1> ) . { lia . } assert ( <genH> : <nat:7> > <nat:1> ) . { lia . } assert ( <genH> : <nat:3> > <nat:1> ) . { lia . } assert ( <genH> : <nat:6> > <nat:1> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 