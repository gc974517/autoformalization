\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:u> \cdot <nat:150> + <var:C> \cdot <nat:58> + <var:c> \cdot <nat:186> + <nat:264> \cdot <var:e> + <nat:189> + <var:U> \cdot <nat:298> + <nat:306> \cdot <var:X> + <nat:2> \cdot <var:V> $ is odd . \end{theorem} \begin{proof} The summation of an even integer and an odd element of $ \mathbb{Z}^+ $ is clearly an odd element of $ \mathbb{N} $ . The pairs $ <nat:58> <var:C> $ , $ <var:e> <nat:264> $ , $ <var:U> <nat:298> $ , $ <nat:306> <var:X> $ , $ <var:u> <nat:150> $ , and likewise $ <nat:186> <var:c> $ are obviously even . This fact must be true from the knowledge the multiplication between an even element of $ \mathbb{N} $ and some number in $ \mathbb{N} $ will be in itself an even positive integer . Take note $ <nat:2> <var:V> $ is known to be an even element of $ \mathbb{Z}^+ $ . This fact holds by reason that the product of an even natural number and a element of $ \mathbb{N} $ will be by itself an even element of $ \mathbb{Z}^+ $ . It can be justified that the summation $ <var:U> * <nat:298> + <var:V> * <nat:2> + <var:e> * <nat:264> + <var:X> * <nat:306> + <nat:189> + <nat:186> * <var:c> + <nat:58> * <var:C> + <var:u> * <nat:150> $ must be odd . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:u> <var:C> <var:c> <var:e> <var:U> <var:X> <var:V> : nat , Nat . odd ( <nat:150> * <var:u> + <nat:58> * <var:C> + <nat:186> * <var:c> + <nat:264> * <var:e> + <nat:298> * <var:U> + <nat:306> * <var:X> + <nat:2> * <var:V> + <nat:189> ) = true . Proof . intros . rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . assert ( <genH> : Nat . even ( <nat:58> * <var:C> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:264> * <var:e> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:298> * <var:U> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:306> * <var:X> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:150> * <var:u> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:186> * <var:c> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:2> * <var:V> ) = true ) . { rewrite Nat . even_mul . auto . } rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 