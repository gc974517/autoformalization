\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:480> \times <var:b> + <nat:79> + <var:q> \times <nat:454> + <nat:178> \times <var:y> + <var:f> \times <nat:352> + <var:A> \times <nat:496> + <var:p> \times <nat:430> + <nat:278> \times <var:Y> $ is guaranteed to be odd . \end{theorem} \begin{proof} It can be verified that that the formula $ <var:A> \times <nat:496> + <nat:480> \times <var:b> + <var:f> \times <nat:352> + <nat:454> \times <var:q> + <var:p> \times <nat:430> + <nat:178> \times <var:y> + <var:Y> \times <nat:278> + <nat:79> $ will be odd . Take note that the adding between an even element of $ \mathbb{Z}^+ $ with an odd element of $ \mathbb{N} $ will be odd . The formula $ <nat:278> <var:Y> + <var:q> <nat:454> + <nat:496> <var:A> + <var:y> <nat:178> + <nat:352> <var:f> + <var:b> <nat:480> + <var:p> <nat:430> $ is obviously even . Remember that the natural numbers $ <nat:278> $ , $ <nat:454> $ , $ <nat:496> $ , $ <nat:178> $ , $ <nat:352> $ , $ <nat:480> $ , and $ <nat:430> $ will be even . In consequence , the terms $ <nat:278> <var:Y> $ , $ <nat:454> <var:q> $ , $ <var:A> <nat:496> $ , $ <nat:178> <var:y> $ , $ <var:f> <nat:352> $ , $ <nat:480> <var:b> $ , and likewise $ <var:p> <nat:430> $ will be even in addition . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:b> <var:q> <var:y> <var:f> <var:A> <var:p> <var:Y> : nat , Nat . odd ( <nat:480> * <var:b> + <nat:454> * <var:q> + <nat:178> * <var:y> + <nat:352> * <var:f> + <nat:496> * <var:A> + <nat:430> * <var:p> + <nat:278> * <var:Y> + <nat:79> ) = true . Proof . intros . rewrite Nat . odd_add . assert ( <genH> : Nat . even <nat:278> = true ) . { auto . } assert ( <genH> : Nat . even <nat:454> = true ) . { auto . } assert ( <genH> : Nat . even <nat:496> = true ) . { auto . } assert ( <genH> : Nat . even <nat:178> = true ) . { auto . } assert ( <genH> : Nat . even <nat:352> = true ) . { auto . } assert ( <genH> : Nat . even <nat:480> = true ) . { auto . } assert ( <genH> : Nat . even <nat:430> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:278> * <var:Y> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:454> * <var:q> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:496> * <var:A> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:178> * <var:y> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:352> * <var:f> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:480> * <var:b> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:430> * <var:p> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:480> * <var:b> + <nat:454> * <var:q> + <nat:178> * <var:y> + <nat:352> * <var:f> + <nat:496> * <var:A> + <nat:430> * <var:p> + <nat:278> * <var:Y> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite <- Nat . negb_even . rewrite <genH> . auto . Qed . 