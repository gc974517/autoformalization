\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:C> \times <nat:440> + <var:b> \times <nat:148> + <var:U> \times <nat:164> + <var:p> \times <nat:110> + <nat:126> \times <var:a> + <nat:409> + <var:x> \times <nat:48> $ will be odd . \end{theorem} \begin{proof} We demonstrate this theorem is true . Notice that the pairs $ <var:x> \cdot <nat:48> $ , $ <nat:440> \cdot <var:C> $ , plus $ <var:a> \cdot <nat:126> $ are guaranteed to be even . This fact holds because taking the product between an even element of $ \mathbb{N} $ and some number in $ \mathbb{Z}^+ $ must be instrinsically an even positive integer . Additionally , notice the term $ <var:U> \cdot <nat:164> $ is obviously an even integer from the fact the multiplication of an even natural number with an arbitrary element of $ \mathbb{Z}^+ $ will be even . What's more , remember the pair $ <var:p> \cdot <nat:110> $ is known as even from the fact taking the product of an even number with an arbitrary element of $ \mathbb{Z}^+ $ is guaranteed to be an even number . Likewise , recall $ <var:b> \cdot <nat:148> $ is obviously even . See the summing of an even natural number with an odd number in $ \mathbb{Z}^+ $ is guaranteed to be by definition an odd integer . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:C> <var:b> <var:U> <var:p> <var:a> <var:x> : nat , Nat . odd ( <nat:440> * <var:C> + <nat:148> * <var:b> + <nat:164> * <var:U> + <nat:110> * <var:p> + <nat:126> * <var:a> + <nat:48> * <var:x> + <nat:409> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:48> * <var:x> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:440> * <var:C> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:126> * <var:a> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:164> * <var:U> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:110> * <var:p> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:148> * <var:b> ) = true ) . { rewrite Nat . even_mul . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 