\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \newtheorem{definition}{Definition} \begin{document} \begin{definition} Assume $ <var:d> $ , $ <var:T> $ , $ <var:A> $ , $ <var:w> $ , $ <var:n> $ , $ <var:p> $ , $ <var:z> $ , $ <var:t> \in \mathbb{N} $ greater than or equal to <nat:2> . We assume that some number $ <var:D> $ is considered a <def:eight-composite> whole number given $ <var:D> = <var:T> \times <var:t> \times <var:p> \times <var:n> \times <var:z> \times <var:w> \times <var:d> \times <var:A> $ . \end{definition} \begin{theorem} $ <nat:622080> = <var:D> $ is a <def:eight-composite> positive integer . \end{theorem} \begin{proof} Assume $ <var:p> = <nat:5> $ , $ <var:n> = <nat:8> $ , $ <var:t> = <nat:12> $ , $ <var:w> = <nat:2> $ , $ <var:z> = <nat:3> $ , $ <var:T> = <nat:6> $ , $ <var:d> = <nat:4> $ , and $ <var:A> = <nat:9> $ . We show the formula is true considering On account of $ <var:T> = <nat:6> $ , $ <var:d> = <nat:4> $ , $ <var:w> = <nat:2> $ , $ <var:t> = <nat:12> $ , $ <var:z> = <nat:3> $ , $ <var:n> = <nat:8> $ , $ <var:A> = <nat:9> $ and $ <var:p> = <nat:5> \geq <nat:2> $ . Consequently , <nat:622080> is the product between $ <var:T> $ , $ <var:p> $ , $ <var:d> $ , $ <var:A> $ , $ <var:t> $ , $ <var:n> $ , $ <var:w> $ and $ <var:z> \in \mathbb{N} $ has been verified . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:eight-composite> ( <var:D> : nat ) := exists <var:d> <var:T> <var:A> <var:w> <var:n> <var:p> <var:z> <var:t> : nat , ( <var:d> >= <nat:2> ) /\ ( <var:T> >= <nat:2> ) /\ ( <var:A> >= <nat:2> ) /\ ( <var:w> >= <nat:2> ) /\ ( <var:n> >= <nat:2> ) /\ ( <var:p> >= <nat:2> ) /\ ( <var:z> >= <nat:2> ) /\ ( <var:t> >= <nat:2> ) /\ ( <var:D> = <var:T> * <var:t> * <var:p> * <var:n> * <var:z> * <var:w> * <var:d> * <var:A> ) . Theorem <genP:1> : <def:eight-composite> <nat:622080> . Proof . unfold <def:eight-composite> . exists <nat:4> . exists <nat:6> . exists <nat:9> . exists <nat:2> . exists <nat:8> . exists <nat:5> . exists <nat:3> . exists <nat:12> . assert ( <genH> : <nat:6> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:4> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:2> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:12> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:3> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:8> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:9> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:5> >= <nat:2> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 