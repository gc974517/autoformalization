\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Using $ <var:w> $ , $ <var:E> $ , $ <var:o> $ , $ <var:S> $ , $ <var:n> $ , and $ <var:Z> \in \mathbb{N} $ the sum $ <nat:224> \times <var:n> + <var:S> \times <nat:426> + <nat:28> \times <var:Z> + <nat:42> \times <var:E> + <nat:407> + <var:w> \times <nat:336> + <var:o> \times <nat:184> $ must be odd . \end{theorem} \begin{proof} The integers $ <nat:224> $ , $ <nat:426> $ , $ <nat:28> $ , $ <nat:42> $ , $ <nat:336> $ , and likewise $ <nat:184> $ are known as even . As a consequence , the products $ <var:n> \times <nat:224> $ , $ <nat:426> \times <var:S> $ , $ <nat:28> \times <var:Z> $ , $ <var:E> \times <nat:42> $ , $ <nat:336> \times <var:w> $ , in addition to $ <nat:184> \times <var:o> $ must be even in addition . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:w> <var:E> <var:o> <var:S> <var:n> <var:Z> : nat , Nat . odd ( <nat:224> * <var:n> + <nat:426> * <var:S> + <nat:28> * <var:Z> + <nat:42> * <var:E> + <nat:336> * <var:w> + <nat:184> * <var:o> + <nat:407> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:224> = true ) . { auto . } assert ( <genH> : Nat . even <nat:426> = true ) . { auto . } assert ( <genH> : Nat . even <nat:28> = true ) . { auto . } assert ( <genH> : Nat . even <nat:42> = true ) . { auto . } assert ( <genH> : Nat . even <nat:336> = true ) . { auto . } assert ( <genH> : Nat . even <nat:184> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:224> * <var:n> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:426> * <var:S> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:28> * <var:Z> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:42> * <var:E> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:336> * <var:w> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:184> * <var:o> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 