\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Taking any unknowns $ <var:z> $ , $ <var:A> $ , $ <var:N> $ , $ <var:F> $ , $ <var:s> $ , $ <var:j> $ , $ <var:O> $ , and $ <var:k> $ the expression $ <nat:354> \times <var:N> + <var:O> \times <nat:348> + <nat:130> \times <var:s> + <nat:311> + <var:j> \times <nat:442> + <var:F> \times <nat:90> + <nat:232> \times <var:k> + <nat:474> \times <var:z> + <nat:280> \times <var:A> $ will be odd . \end{theorem} \begin{proof} In addition to this , we know that the coefficient $ <nat:232> $ is clearly an even number in $ \mathbb{N} $ . Consequently , $ <var:k> \times <nat:232> $ is guaranteed to be even at the same time . Further , $ <var:A> \times <nat:280> $ is even as a consequence that the leading term $ <nat:280> $ is known as even . The product $ <nat:130> \times <var:s> $ is known to be even from the knowledge the multiplication between an even integer with a positive integer must be an even element of $ \mathbb{N} $ as well as the natural number $ <nat:130> $ is trivially instrinsically an even number in $ \mathbb{N} $ . What's more , observe $ <nat:90> \times <var:F> $ is known to be even . This fact must be true from the fact the natural number $ <nat:90> $ is known as instrinsically an even number in $ \mathbb{N} $ . The number $ <nat:474> $ is trivially an even natural number . So , the product $ <nat:474> \times <var:z> $ must be even as well . Further , remember the pair $ <nat:442> \times <var:j> $ is trivially an even integer . This fact holds from the knowledge taking the product of an even element of $ \mathbb{Z}^+ $ with an arbitrary number in $ \mathbb{N} $ is even and moreover the leading term $ <nat:442> $ is known as even . The positive integer $ <nat:354> $ is known to be even . Accordingly , the product $ <var:N> \times <nat:354> $ is even also . Building on , observe that the whole number $ <nat:348> $ is even . Then , $ <var:O> \times <nat:348> $ is guaranteed to be even at the same time . It can be proven that our theorem must be true . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:z> <var:A> <var:N> <var:F> <var:s> <var:j> <var:O> <var:k> : nat , Nat . odd ( <nat:354> * <var:N> + <nat:348> * <var:O> + <nat:130> * <var:s> + <nat:442> * <var:j> + <nat:90> * <var:F> + <nat:232> * <var:k> + <nat:474> * <var:z> + <nat:280> * <var:A> + <nat:311> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:232> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:232> * <var:k> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:280> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:280> * <var:A> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:130> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:130> * <var:s> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:90> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:90> * <var:F> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:474> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:474> * <var:z> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:442> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:442> * <var:j> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:354> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:354> * <var:N> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:348> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:348> * <var:O> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 