\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:40> <var:o> + <nat:393> + <nat:184> <var:J> + <nat:342> <var:w> + <nat:100> <var:Q> + <nat:120> <var:Z> + <var:d> <nat:330> + <var:s> <nat:420> + <var:N> <nat:430> $ must be odd assuming any positive numbers $ <var:w> $ , $ <var:J> $ , $ <var:s> $ , $ <var:d> $ , $ <var:Z> $ , $ <var:N> $ , $ <var:o> $ , and $ <var:Q> $ . \end{theorem} \begin{proof} It can be proven that that $ <var:N> <nat:430> + <var:s> <nat:420> + <var:J> <nat:184> + <nat:40> <var:o> + <nat:100> <var:Q> + <var:w> <nat:342> + <var:d> <nat:330> + <var:Z> <nat:120> $ is even , since the totaling of even positive integers successively with an even positive integer is by definition an even number . The products $ <var:w> \cdot <nat:342> $ , $ <nat:184> \cdot <var:J> $ , $ <var:d> \cdot <nat:330> $ , $ <var:s> \cdot <nat:420> $ , and also $ <var:o> \cdot <nat:40> $ are clearly even . Remember that the pair $ <var:Q> \cdot <nat:100> $ is known to be even . Additionally , the pair $ <var:N> \cdot <nat:430> $ is obviously an even number from the knowledge multiplying of an even element of $ \mathbb{N} $ with any number is in itself an even natural number . The product $ <var:Z> \cdot <nat:120> $ is obviously even . This fact holds as a consequence that the product of an even element of $ \mathbb{N} $ with any natural number is guaranteed to be even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:w> <var:J> <var:s> <var:d> <var:Z> <var:N> <var:o> <var:Q> : nat , Nat . odd ( <nat:40> * <var:o> + <nat:184> * <var:J> + <nat:342> * <var:w> + <nat:100> * <var:Q> + <nat:120> * <var:Z> + <nat:330> * <var:d> + <nat:420> * <var:s> + <nat:430> * <var:N> + <nat:393> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:342> * <var:w> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:184> * <var:J> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:330> * <var:d> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:420> * <var:s> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:40> * <var:o> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:100> * <var:Q> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:430> * <var:N> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:120> * <var:Z> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:40> * <var:o> + <nat:184> * <var:J> + <nat:342> * <var:w> + <nat:100> * <var:Q> + <nat:120> * <var:Z> + <nat:330> * <var:d> + <nat:420> * <var:s> + <nat:430> * <var:N> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . auto . Qed . 