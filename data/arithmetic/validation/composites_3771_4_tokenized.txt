\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} With the condition that we get $ <var:P> * <var:O> * <var:N> * <var:H> = <var:B> $ assuming some number $ <var:B> $ plus satisfying the condition that $ <var:N> $ , $ <var:O> $ , $ <var:P> $ , and $ <var:H> \geq <nat:2> $ assuming some integers $ <var:N> $ , $ <var:O> $ , $ <var:H> $ , $ <var:P> $ , then we define that $ <var:B> $ is a <def:four-composite> positive integer . Hence $ <var:B> = <nat:1890> $ is a <def:four-composite> number . \end{theorem} \begin{proof} Recall that <nat:1890> is <def:four-composite> under the condition <nat:1890> is the multiplication of positive integers $ <var:H> $ , $ <var:P> $ , $ <var:O> $ , $ <var:N> $ so that $ <var:P> $ , $ <var:O> $ , $ <var:H> $ , and $ <var:N> > <nat:1> $ . We confirm <nat:1890> is a <def:four-composite> integer in consideration of $ <nat:1890> = <var:N> \times <var:H> \times <var:O> \times <var:P> $ hints $ <var:P> = <nat:7> $ , $ <var:N> = <nat:9> $ , $ <var:O> = <nat:5> $ , $ <var:H> = <nat:6> $ plus for $ <nat:7> $ , $ <nat:9> $ , $ <nat:6> $ , and $ <nat:5> > <nat:1> $ . Because of this , <nat:1890> is a <def:four-composite> integer has been validated . As a result , $ <var:N> \times <var:P> \times <var:O> \times <var:H> = <nat:1890> $ as well as $ <var:H> $ , $ <var:O> $ , $ <var:P> $ , $ <var:N> $ are more than <nat:1> has been validated . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:four-composite> ( <var:B> : nat ) := exists <var:N> <var:O> <var:H> <var:P> : nat , ( <var:P> * <var:O> * <var:N> * <var:H> = <var:B> ) /\ ( <var:N> >= <nat:2> ) /\ ( <var:O> >= <nat:2> ) /\ ( <var:P> >= <nat:2> ) /\ ( <var:H> >= <nat:2> ) . Theorem <genP:1> : <def:four-composite> <nat:1890> . Proof . unfold <def:four-composite> . exists <nat:9> . exists <nat:5> . exists <nat:6> . exists <nat:7> . assert ( <genH> : <nat:7> > <nat:1> ) . { lia . } assert ( <genH> : <nat:9> > <nat:1> ) . { lia . } assert ( <genH> : <nat:6> > <nat:1> ) . { lia . } assert ( <genH> : <nat:5> > <nat:1> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 