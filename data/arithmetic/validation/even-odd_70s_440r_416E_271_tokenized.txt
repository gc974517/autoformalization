\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} With any $ <var:s> $ , $ <var:r> $ , and $ <var:E> $ the summation $ <nat:416> \times <var:E> + <nat:271> + <nat:440> \times <var:r> + <var:s> \times <nat:70> $ is odd . \end{theorem} \begin{proof} Remember that $ <nat:271> $ is known as odd . Remember that the summation of an even integer and an odd number in $ \mathbb{N} $ must be odd . It can be demonstrated that that $ <nat:416> <var:E> + <var:s> <nat:70> + <var:r> <nat:440> + <nat:271> $ is known to be odd by reason that the sum $ <var:r> \times <nat:440> + <nat:70> \times <var:s> + <nat:416> \times <var:E> $ is clearly even . On top of this , remember the products $ <var:r> * <nat:440> $ , $ <var:s> * <nat:70> $ , additionally $ <var:E> * <nat:416> $ are known as even as a consequence that the positive integers $ <nat:440> $ , $ <nat:70> $ , and moreover $ <nat:416> $ are clearly even numbers in $ \mathbb{Z}^+ $ . By reason that the addition of even numbers in $ \mathbb{N} $ with even numbers in $ \mathbb{N} $ is guaranteed to be an even whole number , the expression $ <var:s> * <nat:70> + <nat:440> * <var:r> + <nat:416> * <var:E> $ will be even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:s> <var:r> <var:E> : nat , Nat . odd ( <nat:416> * <var:E> + <nat:440> * <var:r> + <nat:70> * <var:s> + <nat:271> ) = true . Proof . intros . assert ( <genH> : Nat . odd <nat:271> = true ) . { auto . } rewrite Nat . odd_add . assert ( <genH> : Nat . even <nat:440> = true ) . { auto . } assert ( <genH> : Nat . even <nat:70> = true ) . { auto . } assert ( <genH> : Nat . even <nat:416> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:440> * <var:r> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:70> * <var:s> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:416> * <var:E> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:416> * <var:E> + <nat:440> * <var:r> + <nat:70> * <var:s> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite <- Nat . negb_even . rewrite <genH> . rewrite <genH> . auto . Qed . 