\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Using every positive numbers $ <var:S> $ , $ <var:L> $ , $ <var:g> $ , $ <var:Q> $ , $ <var:n> $ , and $ <var:c> $ the expression $ <var:L> <nat:350> + <var:c> <nat:224> + <var:S> <nat:482> + <nat:397> + <var:Q> <nat:378> + <var:n> <nat:46> + <nat:446> <var:g> $ will be odd . \end{theorem} \begin{proof} It can be justified that our result must be true . The proposition holds since $ <var:n> * <nat:46> + <var:S> * <nat:482> + <var:Q> * <nat:378> + <nat:224> * <var:c> + <var:g> * <nat:446> + <nat:350> * <var:L> $ is known to be even , from the fact the summing of even elements of $ \mathbb{Z}^+ $ with an even natural number will be even . Recall that the terms $ <nat:350> \times <var:L> $ , $ <nat:446> \times <var:g> $ , and likewise $ <var:n> \times <nat:46> $ will be even natural numbers from the fact the numbers $ <nat:350> $ , $ <nat:446> $ , as well as $ <nat:46> $ must be even . Furthermore , the positive integer $ <nat:378> $ is guaranteed to be even . In consequence , the product $ <nat:378> \times <var:Q> $ is even also . Recall that the leading term $ <nat:224> $ is known to be an even element of $ \mathbb{N} $ . Hence , the pair $ <nat:224> \times <var:c> $ must be even additionally . We know that the coefficient $ <nat:482> $ is guaranteed to be an even element of $ \mathbb{Z}^+ $ . Accordingly , the term $ <var:S> \times <nat:482> $ must be even also . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:S> <var:L> <var:g> <var:Q> <var:n> <var:c> : nat , Nat . odd ( <nat:350> * <var:L> + <nat:224> * <var:c> + <nat:482> * <var:S> + <nat:378> * <var:Q> + <nat:46> * <var:n> + <nat:446> * <var:g> + <nat:397> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:350> = true ) . { auto . } assert ( <genH> : Nat . even <nat:446> = true ) . { auto . } assert ( <genH> : Nat . even <nat:46> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:350> * <var:L> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:446> * <var:g> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:46> * <var:n> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:378> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:378> * <var:Q> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:224> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:224> * <var:c> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:482> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:482> * <var:S> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:350> * <var:L> + <nat:224> * <var:c> + <nat:482> * <var:S> + <nat:378> * <var:Q> + <nat:46> * <var:n> + <nat:446> * <var:g> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . auto . Qed . 