\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \newtheorem{definition}{Definition} \begin{document} \begin{definition} Allow $ <var:z> $ , $ <var:F> $ , $ <var:y> $ , $ <var:s> $ , $ <var:K> $ , $ <var:O> $ , $ <var:l> $ , $ <var:c> $ , $ <var:w> $ as positive integers . Say that $ <var:t> \in \mathbb{Z}^+ $ is called a <def:nine-composite> whole number if $ <var:t> = <var:y> \cdot <var:F> \cdot <var:c> \cdot <var:l> \cdot <var:w> \cdot <var:K> \cdot <var:s> \cdot <var:z> \cdot <var:O> $ plus satisfying the condition that $ <var:s> $ , $ <var:K> $ , $ <var:F> $ , $ <var:c> $ , $ <var:l> $ , $ <var:z> $ , $ <var:y> $ , $ <var:O> $ and $ <var:w> > <nat:1> $ . \end{definition} \begin{theorem} $ <var:t> = <nat:13305600> $ is a <def:nine-composite> positive integer . \end{theorem} \begin{proof} Let $ <var:K> = <nat:11> $ , $ <var:y> = <nat:8> $ , $ <var:w> = <nat:4> $ , $ <var:c> = <nat:10> $ , $ <var:z> = <nat:7> $ , $ <var:l> = <nat:9> $ , $ <var:O> = <nat:5> $ , $ <var:F> = <nat:6> $ , $ <var:s> = <nat:2> $ . We demonstrate <nat:13305600> is a <def:nine-composite> natural number as $ <var:O> = <nat:5> $ , $ <var:l> = <nat:9> $ , $ <var:w> = <nat:4> $ , $ <var:K> = <nat:11> $ , $ <var:s> = <nat:2> $ , $ <var:F> = <nat:6> $ , $ <var:c> = <nat:10> $ , $ <var:z> = <nat:7> $ , and $ <var:y> = <nat:8> $ are larger than <nat:1> . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:nine-composite> ( <var:t> : nat ) := exists <var:z> <var:F> <var:y> <var:s> <var:K> <var:O> <var:l> <var:c> <var:w> : nat , ( <var:t> = <var:y> * <var:F> * <var:c> * <var:l> * <var:w> * <var:K> * <var:s> * <var:z> * <var:O> ) /\ ( <var:s> > <nat:1> ) /\ ( <var:K> > <nat:1> ) /\ ( <var:F> > <nat:1> ) /\ ( <var:c> > <nat:1> ) /\ ( <var:l> > <nat:1> ) /\ ( <var:z> > <nat:1> ) /\ ( <var:y> > <nat:1> ) /\ ( <var:O> > <nat:1> ) /\ ( <var:w> > <nat:1> ) . Theorem <genP:1> : <def:nine-composite> <nat:13305600> . Proof . unfold <def:nine-composite> . exists <nat:7> . exists <nat:6> . exists <nat:8> . exists <nat:2> . exists <nat:11> . exists <nat:5> . exists <nat:9> . exists <nat:10> . exists <nat:4> . assert ( <genH> : <nat:5> > <nat:1> ) . { lia . } assert ( <genH> : <nat:9> > <nat:1> ) . { lia . } assert ( <genH> : <nat:4> > <nat:1> ) . { lia . } assert ( <genH> : <nat:11> > <nat:1> ) . { lia . } assert ( <genH> : <nat:2> > <nat:1> ) . { lia . } assert ( <genH> : <nat:6> > <nat:1> ) . { lia . } assert ( <genH> : <nat:10> > <nat:1> ) . { lia . } assert ( <genH> : <nat:7> > <nat:1> ) . { lia . } assert ( <genH> : <nat:8> > <nat:1> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 