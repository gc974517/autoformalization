\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:o> \cdot <nat:478> + <var:I> \cdot <nat:86> + <var:c> \cdot <nat:262> + <nat:80> \cdot <var:H> + <nat:152> \cdot <var:x> + <nat:211> + <nat:464> \cdot <var:h> + <nat:38> \cdot <var:f> $ is odd . \end{theorem} \begin{proof} The expression $ <nat:38> * <var:f> + <var:H> * <nat:80> + <nat:211> + <var:h> * <nat:464> + <nat:86> * <var:I> + <nat:478> * <var:o> + <var:x> * <nat:152> + <nat:262> * <var:c> $ is obviously odd by reason that the formula $ <nat:38> \times <var:f> + <var:I> \times <nat:86> + <nat:464> \times <var:h> + <var:x> \times <nat:152> + <var:H> \times <nat:80> + <nat:262> \times <var:c> + <var:o> \times <nat:478> $ is even . Notice the pairs $ <var:H> \times <nat:80> $ , $ <var:o> \times <nat:478> $ , $ <nat:86> \times <var:I> $ , plus $ <var:c> \times <nat:262> $ must be even . This claim holds because the product of an even number and any element of $ \mathbb{Z}^+ $ must be clearly an even number in $ \mathbb{N} $ . The terms $ <nat:38> \times <var:f> $ and also $ <var:x> \times <nat:152> $ are even . $ <nat:464> \times <var:h> $ is known to be an even element of $ \mathbb{Z}^+ $ . The theorem is proven as a consequence that multiplying between an even positive integer and some integer will be even . Notice $ <nat:211> $ is guaranteed to be an odd whole number . It can be justified that our main result must be true . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:o> <var:I> <var:c> <var:H> <var:x> <var:h> <var:f> : nat , Nat . odd ( <nat:478> * <var:o> + <nat:86> * <var:I> + <nat:262> * <var:c> + <nat:80> * <var:H> + <nat:152> * <var:x> + <nat:464> * <var:h> + <nat:38> * <var:f> + <nat:211> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:80> * <var:H> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:478> * <var:o> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:86> * <var:I> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:262> * <var:c> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:38> * <var:f> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:152> * <var:x> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:464> * <var:h> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:478> * <var:o> + <nat:86> * <var:I> + <nat:262> * <var:c> + <nat:80> * <var:H> + <nat:152> * <var:x> + <nat:464> * <var:h> + <nat:38> * <var:f> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } assert ( <genH> : Nat . odd <nat:211> = true ) . { auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . rewrite <genH> . auto . Qed . 