\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Using any positive integers $ <var:N> $ , $ <var:i> $ , $ <var:Y> $ , $ <var:h> $ , $ <var:J> $ , $ <var:x> $ , $ <var:b> $ , and $ <var:o> $ the summation $ <var:J> \cdot <nat:210> + <var:o> \cdot <nat:54> + <var:Y> \cdot <nat:360> + <var:h> \cdot <nat:124> + <var:b> \cdot <nat:194> + <nat:20> \cdot <var:N> + <nat:70> \cdot <var:x> + <nat:368> \cdot <var:i> + <nat:481> $ will be odd . \end{theorem} \begin{proof} We prove the formula $ <nat:124> * <var:h> + <nat:20> * <var:N> + <nat:70> * <var:x> + <nat:481> + <nat:368> * <var:i> + <nat:360> * <var:Y> + <var:J> * <nat:210> + <var:b> * <nat:194> + <var:o> * <nat:54> $ is guaranteed to be odd . The coefficients $ <nat:124> $ , $ <nat:20> $ , $ <nat:70> $ , $ <nat:368> $ , $ <nat:360> $ , $ <nat:210> $ , $ <nat:194> $ , and likewise $ <nat:54> $ are trivially even naturals . Then , the terms $ <var:h> \times <nat:124> $ , $ <nat:20> \times <var:N> $ , $ <nat:70> \times <var:x> $ , $ <var:i> \times <nat:368> $ , $ <nat:360> \times <var:Y> $ , $ <nat:210> \times <var:J> $ , $ <nat:194> \times <var:b> $ , and moreover $ <var:o> \times <nat:54> $ must be even in addition . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:N> <var:i> <var:Y> <var:h> <var:J> <var:x> <var:b> <var:o> : nat , Nat . odd ( <nat:210> * <var:J> + <nat:54> * <var:o> + <nat:360> * <var:Y> + <nat:124> * <var:h> + <nat:194> * <var:b> + <nat:20> * <var:N> + <nat:70> * <var:x> + <nat:368> * <var:i> + <nat:481> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:124> = true ) . { auto . } assert ( <genH> : Nat . even <nat:20> = true ) . { auto . } assert ( <genH> : Nat . even <nat:70> = true ) . { auto . } assert ( <genH> : Nat . even <nat:368> = true ) . { auto . } assert ( <genH> : Nat . even <nat:360> = true ) . { auto . } assert ( <genH> : Nat . even <nat:210> = true ) . { auto . } assert ( <genH> : Nat . even <nat:194> = true ) . { auto . } assert ( <genH> : Nat . even <nat:54> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:124> * <var:h> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:20> * <var:N> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:70> * <var:x> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:368> * <var:i> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:360> * <var:Y> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:210> * <var:J> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:194> * <var:b> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:54> * <var:o> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 