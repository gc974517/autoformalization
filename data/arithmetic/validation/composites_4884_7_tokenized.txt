\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \newtheorem{definition}{Definition} \begin{document} \begin{definition} If and only if we get such that $ <var:c> $ , $ <var:E> $ , $ <var:B> $ , $ <var:y> $ , $ <var:J> $ , $ <var:U> $ , $ <var:o> > <nat:1> $ satisfying the condition that given some number $ <var:x> $ , $ <var:U> * <var:J> * <var:c> * <var:y> * <var:B> * <var:o> * <var:E> = <var:x> $ using some $ <var:U> $ , $ <var:y> $ , $ <var:o> $ , $ <var:E> $ , $ <var:c> $ , $ <var:B> $ , $ <var:J> \in \mathbb{Z}^+ $ , take that $ <var:x> $ is <def:seven-composite> . \end{definition} \begin{theorem} $ <nat:475200> = <var:x> $ is a <def:seven-composite> natural number . \end{theorem} \begin{proof} Take $ <var:B> = <nat:12> $ , $ <var:E> = <nat:11> $ , $ <var:U> = <nat:10> $ , $ <var:o> = <nat:2> $ , $ <var:J> = <nat:5> $ , $ <var:c> = <nat:9> $ and $ <var:y> = <nat:4> $ . We present the result holds as $ <nat:2> * <nat:10> * <nat:12> * <nat:11> * <nat:5> * <nat:4> * <nat:9> = <nat:475200> $ as well as on account of $ <nat:9> $ , $ <nat:11> $ , $ <nat:12> $ , $ <nat:10> $ , $ <nat:5> $ , $ <nat:4> $ and $ <nat:2> > <nat:1> $ . Consequently , $ <var:E> \cdot <var:c> \cdot <var:B> \cdot <var:J> \cdot <var:y> \cdot <var:U> \cdot <var:o> = <nat:475200> $ has been validated . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:seven-composite> ( <var:x> : nat ) := exists <var:U> <var:y> <var:o> <var:E> <var:c> <var:B> <var:J> : nat , ( <var:c> > <nat:1> ) /\ ( <var:E> > <nat:1> ) /\ ( <var:B> > <nat:1> ) /\ ( <var:y> > <nat:1> ) /\ ( <var:J> > <nat:1> ) /\ ( <var:U> > <nat:1> ) /\ ( <var:o> > <nat:1> ) /\ ( <var:U> * <var:J> * <var:c> * <var:y> * <var:B> * <var:o> * <var:E> = <var:x> ) . Theorem <genP:1> : <def:seven-composite> <nat:475200> . Proof . unfold <def:seven-composite> . exists <nat:10> . exists <nat:4> . exists <nat:2> . exists <nat:11> . exists <nat:9> . exists <nat:12> . exists <nat:5> . assert ( <genH> : <nat:9> > <nat:1> ) . { lia . } assert ( <genH> : <nat:11> > <nat:1> ) . { lia . } assert ( <genH> : <nat:12> > <nat:1> ) . { lia . } assert ( <genH> : <nat:10> > <nat:1> ) . { lia . } assert ( <genH> : <nat:5> > <nat:1> ) . { lia . } assert ( <genH> : <nat:4> > <nat:1> ) . { lia . } assert ( <genH> : <nat:2> > <nat:1> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 