\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} The positive integer <nat:1247400> is the product between numbers $ <var:L> $ , $ <var:l> $ , $ <var:R> $ , $ <var:w> $ , $ <var:h> $ , $ <var:Y> $ , $ <var:u> $ , and $ <var:G> $ where $ <var:l> $ , $ <var:h> $ , $ <var:L> $ , $ <var:w> $ , $ <var:Y> $ , $ <var:G> $ , $ <var:R> $ and $ <var:u> $ larger than <nat:1> . \end{theorem} \begin{proof} Notice $ <var:u> * <var:w> * <var:G> * <var:Y> * <var:R> * <var:h> * <var:L> * <var:l> = <nat:1247400> = <nat:2> * <nat:11> * <nat:3> * <nat:6> * <nat:10> * <nat:9> * <nat:5> * <nat:7> $ . Further note that $ <nat:3> $ , $ <nat:2> $ , $ <nat:10> $ , $ <nat:9> $ , $ <nat:7> $ , $ <nat:6> $ , $ <nat:11> $ , $ <nat:5> $ are greater than <nat:1> . Thus , $ <var:l> $ , $ <var:w> $ , $ <var:G> $ , $ <var:R> $ , $ <var:L> $ , $ <var:h> $ , $ <var:u> $ , $ <var:Y> $ are greater than <nat:1> plus $ <nat:1247400> = <var:G> \times <var:h> \times <var:R> \times <var:w> \times <var:l> \times <var:u> \times <var:L> \times <var:Y> $ is verified . \end{proof} \end{document} 
~
Require Import Lia . Theorem <genP:1> : exists <var:L> <var:l> <var:R> <var:w> <var:h> <var:Y> <var:u> <var:G> : nat , ( <nat:1247400> = <var:L> * <var:l> * <var:R> * <var:w> * <var:h> * <var:Y> * <var:u> * <var:G> ) /\ ( <var:l> > <nat:1> ) /\ ( <var:h> > <nat:1> ) /\ ( <var:L> > <nat:1> ) /\ ( <var:w> > <nat:1> ) /\ ( <var:Y> > <nat:1> ) /\ ( <var:G> > <nat:1> ) /\ ( <var:R> > <nat:1> ) /\ ( <var:u> > <nat:1> ) . Proof . exists <nat:5> . exists <nat:7> . exists <nat:10> . exists <nat:11> . exists <nat:9> . exists <nat:6> . exists <nat:2> . exists <nat:3> . assert ( <genH> : <nat:3> > <nat:1> ) . { lia . } assert ( <genH> : <nat:2> > <nat:1> ) . { lia . } assert ( <genH> : <nat:10> > <nat:1> ) . { lia . } assert ( <genH> : <nat:9> > <nat:1> ) . { lia . } assert ( <genH> : <nat:7> > <nat:1> ) . { lia . } assert ( <genH> : <nat:6> > <nat:1> ) . { lia . } assert ( <genH> : <nat:11> > <nat:1> ) . { lia . } assert ( <genH> : <nat:5> > <nat:1> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 