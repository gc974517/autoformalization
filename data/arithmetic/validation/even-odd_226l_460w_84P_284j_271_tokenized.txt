\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:226> * <var:l> + <var:w> * <nat:460> + <nat:271> + <var:P> * <nat:84> + <nat:284> * <var:j> $ will be odd for some $ <var:P> $ , $ <var:j> $ , $ <var:l> $ , and $ <var:w> \in \mathbb{N} $ . \end{theorem} \begin{proof} We justify the lemma is true . Recall $ <var:j> <nat:284> + <nat:226> <var:l> + <nat:84> <var:P> + <nat:460> <var:w> $ is known as even , because the adding of an even natural number and an even element of $ \mathbb{N} $ is guaranteed to be an even natural number . Remember the coefficient $ <nat:226> $ is known to be even . Hence , the term $ <var:l> <nat:226> $ will be even as well . $ <var:w> <nat:460> $ is guaranteed to be even from the fact multiplying between an even natural number and a natural number is even . This claim must be true since the positive integer $ <nat:460> $ is clearly trivially an even positive integer . Take note the integer $ <nat:84> $ is trivially an even element of $ \mathbb{Z}^+ $ . Accordingly , the term $ <var:P> <nat:84> $ will be even too . Adding on , observe that the product $ <var:j> <nat:284> $ is trivially an even integer . This claim must be true since multiplying of an even number in $ \mathbb{Z}^+ $ with some whole number will be obviously an even positive integer , and must be true by reason that the whole number $ <nat:284> $ is known to be even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:P> <var:j> <var:l> <var:w> : nat , Nat . odd ( <nat:226> * <var:l> + <nat:460> * <var:w> + <nat:84> * <var:P> + <nat:284> * <var:j> + <nat:271> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:226> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:226> * <var:l> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:460> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:460> * <var:w> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:84> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:84> * <var:P> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:284> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:284> * <var:j> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:226> * <var:l> + <nat:460> * <var:w> + <nat:84> * <var:P> + <nat:284> * <var:j> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . auto . Qed . 