\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} For any natural terms $ <var:X> $ , $ <var:t> $ , $ <var:H> $ , $ <var:R> $ , $ <var:w> $ , $ <var:v> $ , and $ <var:M> $ the sum $ <nat:82> <var:R> + <nat:74> <var:H> + <var:X> <nat:332> + <nat:94> <var:M> + <nat:81> + <nat:488> <var:w> + <var:v> <nat:128> + <nat:150> <var:t> $ will be odd . \end{theorem} \begin{proof} We utilize the knowledge the summation $ <nat:128> * <var:v> + <nat:488> * <var:w> + <nat:74> * <var:H> + <var:t> * <nat:150> + <var:M> * <nat:94> + <nat:81> + <var:R> * <nat:82> + <nat:332> * <var:X> $ is obviously odd from the fact $ <nat:128> \times <var:v> + <var:w> \times <nat:488> + <var:t> \times <nat:150> + <var:M> \times <nat:94> + <nat:82> \times <var:R> + <nat:74> \times <var:H> + <var:X> \times <nat:332> $ is trivially even . The pairs $ <nat:488> * <var:w> $ , $ <nat:128> * <var:v> $ , $ <nat:94> * <var:M> $ , $ <nat:82> * <var:R> $ , additionally $ <nat:150> * <var:t> $ are trivially even . This claim is proven by reason that the product between an even integer with some number is even . We know that the term $ <var:H> * <nat:74> $ is known as an even positive integer from the fact taking the product between an even number in $ \mathbb{Z}^+ $ and any number is an even element of $ \mathbb{N} $ . $ <var:X> * <nat:332> $ is guaranteed to be an even natural number from the knowledge the multiplication of an even natural number with an arbitrary integer must be an even natural . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:X> <var:t> <var:H> <var:R> <var:w> <var:v> <var:M> : nat , Nat . odd ( <nat:82> * <var:R> + <nat:74> * <var:H> + <nat:332> * <var:X> + <nat:94> * <var:M> + <nat:488> * <var:w> + <nat:128> * <var:v> + <nat:150> * <var:t> + <nat:81> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:488> * <var:w> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:128> * <var:v> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:94> * <var:M> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:82> * <var:R> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:150> * <var:t> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:74> * <var:H> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:332> * <var:X> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:82> * <var:R> + <nat:74> * <var:H> + <nat:332> * <var:X> + <nat:94> * <var:M> + <nat:488> * <var:w> + <nat:128> * <var:v> + <nat:150> * <var:t> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . auto . Qed . 