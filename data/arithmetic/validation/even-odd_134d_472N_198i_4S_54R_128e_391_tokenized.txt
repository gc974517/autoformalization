\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} With some $ <var:N> $ , $ <var:d> $ , $ <var:S> $ , $ <var:e> $ , $ <var:R> $ , and $ <var:i> \in \mathbb{N} $ $ <nat:391> + <nat:472> \cdot <var:N> + <var:S> \cdot <nat:4> + <nat:198> \cdot <var:i> + <nat:134> \cdot <var:d> + <var:R> \cdot <nat:54> + <var:e> \cdot <nat:128> $ is guaranteed to be odd . \end{theorem} \begin{proof} We apply the assumption the fact $ <var:d> <nat:134> + <var:N> <nat:472> + <var:i> <nat:198> + <var:S> <nat:4> + <var:R> <nat:54> + <var:e> <nat:128> $ is guaranteed to be even . The whole numbers $ <nat:134> $ as well as $ <nat:4> $ are trivially even elements of $ \mathbb{Z}^+ $ The integer $ <nat:128> $ is guaranteed to be an even whole number In addition to this , the positive integer $ <nat:198> $ is known as even Likewise , recall that the whole number $ <nat:472> $ is an even positive integer The whole number $ <nat:54> $ is clearly even Take note $ <nat:391> $ is clearly an odd element of $ \mathbb{Z}^+ $ . Remember the addition between an even natural and an odd element of $ \mathbb{Z}^+ $ is odd . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:N> <var:d> <var:S> <var:e> <var:R> <var:i> : nat , Nat . odd ( <nat:472> * <var:N> + <nat:4> * <var:S> + <nat:198> * <var:i> + <nat:134> * <var:d> + <nat:54> * <var:R> + <nat:128> * <var:e> + <nat:391> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:134> = true ) . { auto . } assert ( <genH> : Nat . even <nat:4> = true ) . { auto . } assert ( <genH> : Nat . even <nat:128> = true ) . { auto . } assert ( <genH> : Nat . even <nat:198> = true ) . { auto . } assert ( <genH> : Nat . even <nat:472> = true ) . { auto . } assert ( <genH> : Nat . even <nat:54> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:472> * <var:N> + <nat:4> * <var:S> + <nat:198> * <var:i> + <nat:134> * <var:d> + <nat:54> * <var:R> + <nat:128> * <var:e> ) = true ) . { repeat rewrite Nat . even_add . repeat rewrite Nat . even_mul . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } assert ( <genH> : Nat . odd <nat:391> = true ) . { auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . rewrite <genH> . auto . Qed . 