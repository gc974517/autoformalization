\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:H> <nat:340> + <nat:400> <var:U> + <nat:336> <var:T> + <nat:252> + <var:W> <nat:378> + <nat:246> <var:X> + <var:a> <nat:168> + <nat:178> <var:N> $ must be even . \end{theorem} \begin{proof} The adding of even integers successively will be even . Observe $ <nat:252> $ is guaranteed to be an even element of $ \mathbb{N} $ . We make use that the summation $ <nat:168> * <var:a> + <var:T> * <nat:336> + <var:H> * <nat:340> + <var:W> * <nat:378> + <var:U> * <nat:400> + <nat:178> * <var:N> + <var:X> * <nat:246> $ is guaranteed to be even . The pairs $ <var:a> <nat:168> $ , $ <var:T> <nat:336> $ , $ <var:H> <nat:340> $ , $ <nat:378> <var:W> $ , $ <nat:400> <var:U> $ , $ <var:N> <nat:178> $ , and likewise $ <var:X> <nat:246> $ are known to be even natural numbers as a consequence that multiplying between an even integer and some whole number is guaranteed to be even . This is true as a consequence that the integers $ <nat:168> $ , $ <nat:336> $ , $ <nat:340> $ , $ <nat:378> $ , $ <nat:400> $ , $ <nat:178> $ , and moreover $ <nat:246> $ are obviously obviously even numbers in $ \mathbb{Z}^+ $ . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:H> <var:U> <var:T> <var:W> <var:X> <var:a> <var:N> : nat , Nat . even ( <nat:340> * <var:H> + <nat:400> * <var:U> + <nat:336> * <var:T> + <nat:378> * <var:W> + <nat:246> * <var:X> + <nat:168> * <var:a> + <nat:178> * <var:N> + <nat:252> ) = true . Proof . intros . rewrite Nat . even_add . assert ( <genH> : Nat . even <nat:252> = true ) . { auto . } assert ( <genH> : Nat . even <nat:168> = true ) . { auto . } assert ( <genH> : Nat . even <nat:336> = true ) . { auto . } assert ( <genH> : Nat . even <nat:340> = true ) . { auto . } assert ( <genH> : Nat . even <nat:378> = true ) . { auto . } assert ( <genH> : Nat . even <nat:400> = true ) . { auto . } assert ( <genH> : Nat . even <nat:178> = true ) . { auto . } assert ( <genH> : Nat . even <nat:246> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:168> * <var:a> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:336> * <var:T> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:340> * <var:H> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:378> * <var:W> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:400> * <var:U> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:178> * <var:N> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:246> * <var:X> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:340> * <var:H> + <nat:400> * <var:U> + <nat:336> * <var:T> + <nat:378> * <var:W> + <nat:246> * <var:X> + <nat:168> * <var:a> + <nat:178> * <var:N> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite <genH> . rewrite <genH> . auto . Qed . 