\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:6> \times <var:F> + <var:s> \times <nat:94> + <nat:228> \times <var:x> + <nat:440> \times <var:e> + <nat:141> $ is odd given any natural terms $ <var:x> $ , $ <var:e> $ , $ <var:s> $ , and $ <var:F> $ . \end{theorem} \begin{proof} Because the summing of even positive integers together with an odd number is odd , then the main result is proven . Our lemma holds as a consequence that $ <var:F> <nat:6> + <nat:228> <var:x> + <var:s> <nat:94> + <var:e> <nat:440> $ is clearly even . Recall the product $ <var:F> \cdot <nat:6> $ is guaranteed to be an even number in $ \mathbb{Z}^+ $ . This fact holds since the multiplication of an even whole number with a element of $ \mathbb{Z}^+ $ will be even . $ <var:x> \cdot <nat:228> $ is obviously even from the fact multiplying between an even whole number and some positive integer must be even . Recall $ <var:s> \cdot <nat:94> $ is clearly an even element of $ \mathbb{Z}^+ $ . Adding on , we know that the term $ <nat:440> \cdot <var:e> $ is even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:x> <var:e> <var:s> <var:F> : nat , Nat . odd ( <nat:6> * <var:F> + <nat:94> * <var:s> + <nat:228> * <var:x> + <nat:440> * <var:e> + <nat:141> ) = true . Proof . intros . rewrite Nat . odd_add . assert ( <genH> : Nat . even ( <nat:6> * <var:F> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:228> * <var:x> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:94> * <var:s> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:440> * <var:e> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:6> * <var:F> + <nat:94> * <var:s> + <nat:228> * <var:x> + <nat:440> * <var:e> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite <- Nat . negb_even . rewrite <genH> . auto . Qed . 