\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Taking any terms $ <var:M> $ , $ <var:K> $ , $ <var:C> $ , $ <var:c> $ , $ <var:A> $ , $ <var:q> $ , $ <var:L> $ , and $ <var:U> $ the formula $ <nat:442> * <var:K> + <var:U> * <nat:102> + <nat:70> * <var:A> + <var:C> * <nat:444> + <var:L> * <nat:270> + <nat:312> * <var:q> + <nat:18> * <var:c> + <nat:331> + <var:M> * <nat:182> $ will be odd . \end{theorem} \begin{proof} We know that $ <nat:331> $ is trivially odd . It can be shown that $ <nat:444> <var:C> + <var:L> <nat:270> + <var:U> <nat:102> + <nat:182> <var:M> + <nat:312> <var:q> + <var:K> <nat:442> + <nat:331> + <nat:70> <var:A> + <var:c> <nat:18> $ must be odd . The integers $ <nat:444> $ , $ <nat:270> $ , $ <nat:102> $ , $ <nat:182> $ , $ <nat:312> $ , $ <nat:442> $ , $ <nat:70> $ , in addition to $ <nat:18> $ are known to be even . For this reason , the pairs $ <var:C> * <nat:444> $ , $ <nat:270> * <var:L> $ , $ <nat:102> * <var:U> $ , $ <var:M> * <nat:182> $ , $ <var:q> * <nat:312> $ , $ <var:K> * <nat:442> $ , $ <nat:70> * <var:A> $ , and moreover $ <var:c> * <nat:18> $ will be even additionally . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:M> <var:K> <var:C> <var:c> <var:A> <var:q> <var:L> <var:U> : nat , Nat . odd ( <nat:442> * <var:K> + <nat:102> * <var:U> + <nat:70> * <var:A> + <nat:444> * <var:C> + <nat:270> * <var:L> + <nat:312> * <var:q> + <nat:18> * <var:c> + <nat:182> * <var:M> + <nat:331> ) = true . Proof . intros . assert ( <genH> : Nat . odd <nat:331> = true ) . { auto . } assert ( <genH> : Nat . even <nat:444> = true ) . { auto . } assert ( <genH> : Nat . even <nat:270> = true ) . { auto . } assert ( <genH> : Nat . even <nat:102> = true ) . { auto . } assert ( <genH> : Nat . even <nat:182> = true ) . { auto . } assert ( <genH> : Nat . even <nat:312> = true ) . { auto . } assert ( <genH> : Nat . even <nat:442> = true ) . { auto . } assert ( <genH> : Nat . even <nat:70> = true ) . { auto . } assert ( <genH> : Nat . even <nat:18> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:444> * <var:C> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:270> * <var:L> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:102> * <var:U> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:182> * <var:M> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:312> * <var:q> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:442> * <var:K> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:70> * <var:A> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:18> * <var:c> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 