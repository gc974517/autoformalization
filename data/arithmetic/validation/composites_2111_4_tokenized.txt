\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \newtheorem{definition}{Definition} \begin{document} \begin{definition} Assume $ <var:d> $ , $ <var:g> $ , $ <var:c> $ , $ <var:D> \in \mathbb{N} $ . We claim that $ <var:K> \in \mathbb{Z}^+ $ will be <def:four-composite> given $ <var:g> \cdot <var:D> \cdot <var:d> \cdot <var:c> = <var:K> $ and terms are larger than or equal to <nat:2> . \end{definition} \begin{theorem} $ <var:K> = <nat:1080> $ is a <def:four-composite> natural number . \end{theorem} \begin{proof} Recall a <def:four-composite> whole number is the multiplication between natural numbers $ <var:c> $ , $ <var:D> $ , $ <var:d> $ and $ <var:g> $ larger than or equivalent to <nat:2> . We prove the theory is valid as $ <var:d> \times <var:c> \times <var:g> \times <var:D> = <nat:1080> $ yields $ <var:d> = <nat:8> $ , $ <var:D> = <nat:5> $ , $ <var:c> = <nat:3> $ and $ <var:g> = <nat:9> $ as well as by reason of $ <nat:3> $ , $ <nat:5> $ , $ <nat:9> $ and $ <nat:8> \geq <nat:2> $ . Thus , <nat:1080> is a <def:four-composite> number has been validated . So , $ <var:d> \times <var:D> \times <var:c> \times <var:g> = <nat:1080> $ plus $ <var:g> $ , $ <var:c> $ , $ <var:d> $ and $ <var:D> \geq <nat:2> $ is proven . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:four-composite> ( <var:K> : nat ) := exists <var:d> <var:g> <var:c> <var:D> : nat , ( <var:g> * <var:D> * <var:d> * <var:c> = <var:K> ) /\ ( <var:d> >= <nat:2> ) /\ ( <var:g> >= <nat:2> ) /\ ( <var:c> >= <nat:2> ) /\ ( <var:D> >= <nat:2> ) . Theorem <genP:1> : <def:four-composite> <nat:1080> . Proof . unfold <def:four-composite> . exists <nat:8> . exists <nat:9> . exists <nat:3> . exists <nat:5> . assert ( <genH> : <nat:3> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:5> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:9> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:8> >= <nat:2> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 