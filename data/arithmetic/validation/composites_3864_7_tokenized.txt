\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \newtheorem{definition}{Definition} \begin{document} \begin{definition} We denote that $ <var:g> $ is a <def:seven-composite> whole number with the condition that taking some $ <var:a> $ , $ <var:Z> $ , $ <var:S> $ , $ <var:z> $ , $ <var:s> $ , $ <var:p> $ , $ <var:f> $ we have $ <var:S> $ , $ <var:z> $ , $ <var:s> $ , $ <var:p> $ , $ <var:Z> $ , $ <var:a> $ and $ <var:f> \geq <nat:2> $ plus taking some whole number $ <var:g> $ , $ <var:f> * <var:p> * <var:z> * <var:S> * <var:Z> * <var:s> * <var:a> = <var:g> $ . \end{definition} \begin{theorem} $ <nat:142560> = <var:g> $ is a <def:seven-composite> positive integer . \end{theorem} \begin{proof} Note that $ <nat:5> $ , $ <nat:2> $ , $ <nat:11> $ , $ <nat:3> $ , $ <nat:4> $ , $ <nat:9> $ , and $ <nat:12> $ are greater than or equal to <nat:2> . Furthermore notice additionally $ <nat:12> * <nat:4> * <nat:5> * <nat:3> * <nat:2> * <nat:9> * <nat:11> = <nat:142560> $ . This indicates <nat:142560> is a <def:seven-composite> whole number . As a consequence , $ <nat:142560> = <var:S> * <var:s> * <var:a> * <var:z> * <var:f> * <var:Z> * <var:p> $ is validated . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:seven-composite> ( <var:g> : nat ) := exists <var:a> <var:Z> <var:S> <var:z> <var:s> <var:p> <var:f> : nat , ( <var:S> >= <nat:2> ) /\ ( <var:z> >= <nat:2> ) /\ ( <var:s> >= <nat:2> ) /\ ( <var:p> >= <nat:2> ) /\ ( <var:Z> >= <nat:2> ) /\ ( <var:a> >= <nat:2> ) /\ ( <var:f> >= <nat:2> ) /\ ( <var:f> * <var:p> * <var:z> * <var:S> * <var:Z> * <var:s> * <var:a> = <var:g> ) . Theorem <genP:1> : <def:seven-composite> <nat:142560> . Proof . unfold <def:seven-composite> . assert ( <genH> : <nat:5> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:2> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:11> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:3> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:4> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:9> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:12> >= <nat:2> ) . { lia . } exists <nat:11> . exists <nat:5> . exists <nat:3> . exists <nat:2> . exists <nat:9> . exists <nat:12> . exists <nat:4> . repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 