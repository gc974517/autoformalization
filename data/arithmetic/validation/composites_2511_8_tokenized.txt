\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Allow $ <var:a> $ , $ <var:h> $ , $ <var:f> $ , $ <var:L> $ , $ <var:S> $ , $ <var:D> $ , $ <var:T> $ , $ <var:X> \in \mathbb{Z}^+ $ satisfying the condition that $ <var:D> $ , $ <var:L> $ , $ <var:X> $ , $ <var:S> $ , $ <var:h> $ , $ <var:a> $ , $ <var:f> $ and $ <var:T> > <nat:1> $ . Claim that some integer $ <var:c> $ is named a <def:eight-composite> number if $ <var:c> = <var:S> * <var:T> * <var:X> * <var:h> * <var:a> * <var:D> * <var:f> * <var:L> $ . Thus $ <var:c> = <nat:887040> $ is <def:eight-composite> . \end{theorem} \begin{proof} Allow $ <var:S> = <nat:3> $ , $ <var:D> = <nat:2> $ , $ <var:T> = <nat:8> $ , $ <var:X> = <nat:4> $ , $ <var:a> = <nat:11> $ , $ <var:h> = <nat:10> $ , $ <var:f> = <nat:7> $ and $ <var:L> = <nat:6> $ . In addition observe $ <var:a> = <nat:11> $ , $ <var:D> = <nat:2> $ , $ <var:h> = <nat:10> $ , $ <var:f> = <nat:7> $ , $ <var:S> = <nat:3> $ , $ <var:T> = <nat:8> $ , $ <var:X> = <nat:4> $ , and $ <var:L> = <nat:6> $ are larger than <nat:1> . Because of this , $ <var:D> * <var:L> * <var:S> * <var:h> * <var:f> * <var:T> * <var:a> * <var:X> = <nat:887040> $ is validated . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:eight-composite> ( <var:c> : nat ) := exists <var:a> <var:h> <var:f> <var:L> <var:S> <var:D> <var:T> <var:X> : nat , ( <var:D> > <nat:1> ) /\ ( <var:L> > <nat:1> ) /\ ( <var:X> > <nat:1> ) /\ ( <var:S> > <nat:1> ) /\ ( <var:h> > <nat:1> ) /\ ( <var:a> > <nat:1> ) /\ ( <var:f> > <nat:1> ) /\ ( <var:T> > <nat:1> ) /\ ( <var:c> = <var:S> * <var:T> * <var:X> * <var:h> * <var:a> * <var:D> * <var:f> * <var:L> ) . Theorem <genP:1> : <def:eight-composite> <nat:887040> . Proof . unfold <def:eight-composite> . exists <nat:11> . exists <nat:10> . exists <nat:7> . exists <nat:6> . exists <nat:3> . exists <nat:2> . exists <nat:8> . exists <nat:4> . assert ( <genH> : <nat:11> > <nat:1> ) . { lia . } assert ( <genH> : <nat:2> > <nat:1> ) . { lia . } assert ( <genH> : <nat:10> > <nat:1> ) . { lia . } assert ( <genH> : <nat:7> > <nat:1> ) . { lia . } assert ( <genH> : <nat:3> > <nat:1> ) . { lia . } assert ( <genH> : <nat:8> > <nat:1> ) . { lia . } assert ( <genH> : <nat:4> > <nat:1> ) . { lia . } assert ( <genH> : <nat:6> > <nat:1> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 