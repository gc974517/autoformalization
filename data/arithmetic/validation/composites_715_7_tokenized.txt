\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \newtheorem{definition}{Definition} \begin{document} \begin{definition} Under the condition that there exist integers $ <var:Q> $ , $ <var:X> $ , $ <var:f> $ , $ <var:c> $ , $ <var:M> $ , $ <var:t> $ , $ <var:A> $ then define that $ <var:J> \in \mathbb{Z}^+ $ will be a <def:seven-composite> natural number if $ <var:f> \times <var:Q> \times <var:t> \times <var:c> \times <var:A> \times <var:X> \times <var:M> = <var:J> $ and factors are more than or equivalent to <nat:2> . \end{definition} \begin{theorem} $ <nat:570240> = <var:J> $ is a <def:seven-composite> number . \end{theorem} \begin{proof} We confirm <nat:570240> is the product of $ <var:X> $ , $ <var:M> $ , $ <var:t> $ , $ <var:Q> $ , $ <var:f> $ , $ <var:A> $ , and $ <var:c> \in \mathbb{N} $ as well as $ <var:t> $ , $ <var:A> $ , $ <var:M> $ , $ <var:Q> $ , $ <var:f> $ , $ <var:X> $ and $ <var:c> \geq <nat:2> $ . Note $ <var:Q> \times <var:A> \times <var:f> \times <var:c> \times <var:t> \times <var:M> \times <var:X> = <nat:570240> $ gives $ <var:M> = <nat:2> $ , $ <var:X> = <nat:6> $ , $ <var:Q> = <nat:12> $ , $ <var:c> = <nat:5> $ , $ <var:f> = <nat:9> $ , $ <var:A> = <nat:8> $ , $ <var:t> = <nat:11> $ . Also notice that $ <nat:6> $ , $ <nat:8> $ , $ <nat:9> $ , $ <nat:5> $ , $ <nat:11> $ , $ <nat:12> $ , and $ <nat:2> $ are larger than or equivalent to <nat:2> . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:seven-composite> ( <var:J> : nat ) := exists <var:Q> <var:X> <var:f> <var:c> <var:M> <var:t> <var:A> : nat , ( <var:f> * <var:Q> * <var:t> * <var:c> * <var:A> * <var:X> * <var:M> = <var:J> ) /\ ( <var:Q> >= <nat:2> ) /\ ( <var:X> >= <nat:2> ) /\ ( <var:f> >= <nat:2> ) /\ ( <var:c> >= <nat:2> ) /\ ( <var:M> >= <nat:2> ) /\ ( <var:t> >= <nat:2> ) /\ ( <var:A> >= <nat:2> ) . Theorem <genP:1> : <def:seven-composite> <nat:570240> . Proof . unfold <def:seven-composite> . exists <nat:12> . exists <nat:6> . exists <nat:9> . exists <nat:5> . exists <nat:2> . exists <nat:11> . exists <nat:8> . assert ( <genH> : <nat:6> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:8> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:9> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:5> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:11> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:12> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:2> >= <nat:2> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 