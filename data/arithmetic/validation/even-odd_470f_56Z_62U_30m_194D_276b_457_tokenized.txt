\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:62> * <var:U> + <var:b> * <nat:276> + <var:m> * <nat:30> + <var:f> * <nat:470> + <nat:457> + <nat:194> * <var:D> + <nat:56> * <var:Z> $ is guaranteed to be odd given $ <var:f> $ , $ <var:Z> $ , $ <var:U> $ , $ <var:b> $ , $ <var:m> $ , and $ <var:D> $ . \end{theorem} \begin{proof} We work with the assumption the understanding that $ <nat:457> + <nat:194> * <var:D> + <nat:62> * <var:U> + <var:b> * <nat:276> + <var:m> * <nat:30> + <var:Z> * <nat:56> + <var:f> * <nat:470> $ is odd since $ <nat:470> \cdot <var:f> + <var:Z> \cdot <nat:56> + <nat:62> \cdot <var:U> + <nat:30> \cdot <var:m> + <var:D> \cdot <nat:194> + <nat:276> \cdot <var:b> $ is guaranteed to be even . The pair $ <var:b> <nat:276> $ is obviously even . This claim is proven from the fact taking the product of an even number with some element of $ \mathbb{N} $ is an even element of $ \mathbb{N} $ . Adding on , notice that the pairs $ <nat:62> <var:U> $ and $ <var:f> <nat:470> $ are obviously even . We know that the products $ <var:m> <nat:30> $ in addition to $ <nat:194> <var:D> $ are known as even by reason that multiplying between an even integer and an arbitrary number in $ \mathbb{N} $ is even . The product $ <var:Z> <nat:56> $ is known to be an even natural number . From the knowledge the totaling of even naturals and an even positive integer will be an even whole number , as well as by reason that multiplying of even naturals and a positive integer is even . We justify our main result is proven . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:f> <var:Z> <var:U> <var:b> <var:m> <var:D> : nat , Nat . odd ( <nat:62> * <var:U> + <nat:276> * <var:b> + <nat:30> * <var:m> + <nat:470> * <var:f> + <nat:194> * <var:D> + <nat:56> * <var:Z> + <nat:457> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:276> * <var:b> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:62> * <var:U> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:470> * <var:f> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:30> * <var:m> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:194> * <var:D> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:56> * <var:Z> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:62> * <var:U> + <nat:276> * <var:b> + <nat:30> * <var:m> + <nat:470> * <var:f> + <nat:194> * <var:D> + <nat:56> * <var:Z> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . auto . Qed . 