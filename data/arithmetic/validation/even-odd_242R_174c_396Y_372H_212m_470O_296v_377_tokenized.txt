\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:470> \cdot <var:O> + <var:Y> \cdot <nat:396> + <var:v> \cdot <nat:296> + <var:m> \cdot <nat:212> + <var:H> \cdot <nat:372> + <var:c> \cdot <nat:174> + <nat:377> + <var:R> \cdot <nat:242> $ will be odd assuming unknowns $ <var:m> $ , $ <var:Y> $ , $ <var:c> $ , $ <var:v> $ , $ <var:H> $ , $ <var:O> $ , and $ <var:R> $ . \end{theorem} \begin{proof} The numbers $ <nat:470> $ , $ <nat:396> $ , $ <nat:296> $ , $ <nat:212> $ , $ <nat:372> $ , $ <nat:174> $ , additionally $ <nat:242> $ are even . Hence , the pairs $ <var:O> \cdot <nat:470> $ , $ <nat:396> \cdot <var:Y> $ , $ <nat:296> \cdot <var:v> $ , $ <var:m> \cdot <nat:212> $ , $ <nat:372> \cdot <var:H> $ , $ <nat:174> \cdot <var:c> $ , in addition to $ <var:R> \cdot <nat:242> $ will be even in addition . Observe $ <nat:377> $ is clearly an odd number . It can be checked that the formula $ <var:R> \cdot <nat:242> + <var:c> \cdot <nat:174> + <nat:396> \cdot <var:Y> + <nat:372> \cdot <var:H> + <nat:377> + <nat:212> \cdot <var:m> + <var:O> \cdot <nat:470> + <nat:296> \cdot <var:v> $ will be odd . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:m> <var:Y> <var:c> <var:v> <var:H> <var:O> <var:R> : nat , Nat . odd ( <nat:470> * <var:O> + <nat:396> * <var:Y> + <nat:296> * <var:v> + <nat:212> * <var:m> + <nat:372> * <var:H> + <nat:174> * <var:c> + <nat:242> * <var:R> + <nat:377> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:470> = true ) . { auto . } assert ( <genH> : Nat . even <nat:396> = true ) . { auto . } assert ( <genH> : Nat . even <nat:296> = true ) . { auto . } assert ( <genH> : Nat . even <nat:212> = true ) . { auto . } assert ( <genH> : Nat . even <nat:372> = true ) . { auto . } assert ( <genH> : Nat . even <nat:174> = true ) . { auto . } assert ( <genH> : Nat . even <nat:242> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:470> * <var:O> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:396> * <var:Y> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:296> * <var:v> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:212> * <var:m> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:372> * <var:H> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:174> * <var:c> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:242> * <var:R> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . odd <nat:377> = true ) . { auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 