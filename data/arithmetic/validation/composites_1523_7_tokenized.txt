\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Assume $ <var:n> $ , $ <var:x> $ , $ <var:r> $ , $ <var:R> $ , $ <var:w> $ , $ <var:q> $ , $ <var:s> \in \mathbb{Z}^+ $ where $ <var:w> $ , $ <var:R> $ , $ <var:s> $ , $ <var:n> $ , $ <var:x> $ , $ <var:r> $ , and $ <var:q> \geq <nat:2> $ plus such that $ <nat:725760> $ is $ <var:q> * <var:x> * <var:r> * <var:R> * <var:w> * <var:s> * <var:n> $ . \end{theorem} \begin{proof} We prove $ <var:r> \times <var:w> \times <var:R> \times <var:s> \times <var:x> \times <var:n> \times <var:q> = <nat:725760> $ and $ <var:x> $ , $ <var:n> $ , $ <var:s> $ , $ <var:R> $ , $ <var:q> $ , $ <var:r> $ , $ <var:w> \geq <nat:2> $ . We present the formula is true by reason of $ <nat:6> $ , $ <nat:8> $ , $ <nat:5> $ , $ <nat:12> $ , $ <nat:9> $ , $ <nat:4> $ , and $ <nat:7> \geq <nat:2> $ plus $ <nat:725760> = <var:n> \times <var:R> \times <var:s> \times <var:w> \times <var:q> \times <var:r> \times <var:x> = <nat:8> \times <nat:6> \times <nat:12> \times <nat:9> \times <nat:5> \times <nat:7> \times <nat:4> $ . \end{proof} \end{document} 
~
Require Import Lia . Theorem <genP:1> : exists <var:n> <var:x> <var:r> <var:R> <var:w> <var:q> <var:s> : nat , ( <var:w> >= <nat:2> ) /\ ( <var:R> >= <nat:2> ) /\ ( <var:s> >= <nat:2> ) /\ ( <var:n> >= <nat:2> ) /\ ( <var:x> >= <nat:2> ) /\ ( <var:r> >= <nat:2> ) /\ ( <var:q> >= <nat:2> ) /\ ( <nat:725760> = <var:q> * <var:x> * <var:r> * <var:R> * <var:w> * <var:s> * <var:n> ) . Proof . assert ( <genH> : <nat:6> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:8> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:5> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:12> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:9> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:4> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:7> >= <nat:2> ) . { lia . } exists <nat:8> . exists <nat:4> . exists <nat:7> . exists <nat:6> . exists <nat:9> . exists <nat:5> . exists <nat:12> . repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 