\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Using some positive terms $ <var:I> $ , $ <var:N> $ , $ <var:r> $ , $ <var:t> $ , $ <var:H> $ , and $ <var:S> $ the expression $ <nat:56> <var:S> + <var:r> <nat:260> + <nat:214> <var:t> + <nat:278> <var:N> + <nat:372> <var:H> + <nat:258> + <nat:330> <var:I> $ is guaranteed to be even . \end{theorem} \begin{proof} The expression $ <nat:56> <var:S> + <var:t> <nat:214> + <var:H> <nat:372> + <nat:330> <var:I> + <var:r> <nat:260> + <var:N> <nat:278> $ is even . Building on , the leading terms $ <nat:56> $ , $ <nat:214> $ , $ <nat:372> $ , $ <nat:330> $ , $ <nat:260> $ , and moreover $ <nat:278> $ will be even positive integers . For this reason , the pairs $ <var:S> * <nat:56> $ , $ <nat:214> * <var:t> $ , $ <var:H> * <nat:372> $ , $ <nat:330> * <var:I> $ , $ <var:r> * <nat:260> $ , plus $ <var:N> * <nat:278> $ is guaranteed to be even additionally . From the fact the summation between an even number in $ \mathbb{Z}^+ $ and an even whole number is guaranteed to be even , and moreover from the knowledge the multiplication of an even integer with some element of $ \mathbb{Z}^+ $ is even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:I> <var:N> <var:r> <var:t> <var:H> <var:S> : nat , Nat . even ( <nat:56> * <var:S> + <nat:260> * <var:r> + <nat:214> * <var:t> + <nat:278> * <var:N> + <nat:372> * <var:H> + <nat:330> * <var:I> + <nat:258> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:56> = true ) . { auto . } assert ( <genH> : Nat . even <nat:214> = true ) . { auto . } assert ( <genH> : Nat . even <nat:372> = true ) . { auto . } assert ( <genH> : Nat . even <nat:330> = true ) . { auto . } assert ( <genH> : Nat . even <nat:260> = true ) . { auto . } assert ( <genH> : Nat . even <nat:278> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:56> * <var:S> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:214> * <var:t> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:372> * <var:H> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:330> * <var:I> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:260> * <var:r> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:278> * <var:N> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:56> * <var:S> + <nat:260> * <var:r> + <nat:214> * <var:t> + <nat:278> * <var:N> + <nat:372> * <var:H> + <nat:330> * <var:I> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . even_add . rewrite <genH> . auto . Qed . 