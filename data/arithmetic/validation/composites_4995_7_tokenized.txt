\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Assume $ <var:R> $ , $ <var:o> $ , $ <var:n> $ , $ <var:k> $ , $ <var:I> $ , $ <var:j> $ , $ <var:y> \in \mathbb{Z}^+ $ . Let that $ <var:e> \in \mathbb{N} $ will be considered as a <def:seven-composite> positive integer assuming $ <var:e> = <var:I> \times <var:R> \times <var:k> \times <var:y> \times <var:o> \times <var:n> \times <var:j> $ plus larger than or equivalent to <nat:2> . So $ <var:e> = <nat:114048> $ is a <def:seven-composite> integer . \end{theorem} \begin{proof} Let $ <var:R> = <nat:11> $ , $ <var:I> = <nat:8> $ , $ <var:n> = <nat:6> $ , $ <var:o> = <nat:3> $ , $ <var:j> = <nat:9> $ , $ <var:y> = <nat:4> $ , $ <var:k> = <nat:2> $ . We confirm $ <nat:114048> = <var:I> \cdot <var:y> \cdot <var:k> \cdot <var:o> \cdot <var:j> \cdot <var:R> \cdot <var:n> $ . We present <nat:114048> is <def:seven-composite> considering $ <nat:9> $ , $ <nat:6> $ , $ <nat:11> $ , $ <nat:2> $ , $ <nat:4> $ , $ <nat:3> $ , and $ <nat:8> $ are greater than or equivalent to <nat:2> plus by reason of $ <nat:114048> = <var:y> \times <var:o> \times <var:k> \times <var:I> \times <var:j> \times <var:R> \times <var:n> $ . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:seven-composite> ( <var:e> : nat ) := exists <var:R> <var:o> <var:n> <var:k> <var:I> <var:j> <var:y> : nat , ( <var:e> = <var:I> * <var:R> * <var:k> * <var:y> * <var:o> * <var:n> * <var:j> ) /\ ( <var:R> >= <nat:2> ) /\ ( <var:o> >= <nat:2> ) /\ ( <var:n> >= <nat:2> ) /\ ( <var:k> >= <nat:2> ) /\ ( <var:I> >= <nat:2> ) /\ ( <var:j> >= <nat:2> ) /\ ( <var:y> >= <nat:2> ) . Theorem <genP:1> : <def:seven-composite> <nat:114048> . Proof . unfold <def:seven-composite> . exists <nat:11> . exists <nat:3> . exists <nat:6> . exists <nat:2> . exists <nat:8> . exists <nat:9> . exists <nat:4> . assert ( <genH> : <nat:9> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:6> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:11> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:2> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:4> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:3> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:8> >= <nat:2> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 