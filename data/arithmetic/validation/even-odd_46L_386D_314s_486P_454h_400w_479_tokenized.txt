\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:D> <nat:386> + <var:L> <nat:46> + <nat:400> <var:w> + <nat:479> + <var:s> <nat:314> + <var:P> <nat:486> + <var:h> <nat:454> $ is odd given all whole numbers $ <var:D> $ , $ <var:s> $ , $ <var:L> $ , $ <var:w> $ , $ <var:h> $ , and $ <var:P> $ . \end{theorem} \begin{proof} The totaling of even elements of $ \mathbb{Z}^+ $ successively and an odd number in $ \mathbb{Z}^+ $ will be an odd whole number . Take note $ <nat:479> $ is clearly odd . This claim is true since $ <nat:46> <var:L> + <nat:386> <var:D> + <nat:314> <var:s> + <var:P> <nat:486> + <var:h> <nat:454> + <nat:400> <var:w> $ is even . The pairs $ <nat:400> \cdot <var:w> $ and also $ <nat:454> \cdot <var:h> $ are even natural numbers from the fact taking the product between an even number in $ \mathbb{Z}^+ $ with any natural must be obviously an even integer . The pairs $ <nat:314> \cdot <var:s> $ , $ <nat:46> \cdot <var:L> $ , as well as $ <var:D> \cdot <nat:386> $ are obviously even . $ <var:P> \cdot <nat:486> $ is obviously even from the fact multiplying of an even natural and some natural will be an even natural . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:D> <var:s> <var:L> <var:w> <var:h> <var:P> : nat , Nat . odd ( <nat:386> * <var:D> + <nat:46> * <var:L> + <nat:400> * <var:w> + <nat:314> * <var:s> + <nat:486> * <var:P> + <nat:454> * <var:h> + <nat:479> ) = true . Proof . intros . rewrite Nat . odd_add . assert ( <genH> : Nat . odd <nat:479> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:400> * <var:w> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:454> * <var:h> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:314> * <var:s> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:46> * <var:L> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:386> * <var:D> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:486> * <var:P> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:386> * <var:D> + <nat:46> * <var:L> + <nat:400> * <var:w> + <nat:314> * <var:s> + <nat:486> * <var:P> + <nat:454> * <var:h> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite <- Nat . negb_even . rewrite <genH> . rewrite <genH> . auto . Qed . 