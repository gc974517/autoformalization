\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} With some natural terms $ <var:Z> $ , $ <var:O> $ , $ <var:t> $ , $ <var:d> $ , $ <var:H> $ , and $ <var:o> $ the summation $ <nat:492> \times <var:H> + <nat:438> \times <var:d> + <nat:378> \times <var:O> + <nat:183> + <var:o> \times <nat:350> + <nat:60> \times <var:t> + <nat:424> \times <var:Z> $ will be odd . \end{theorem} \begin{proof} In addition to this , the pairs $ <var:H> <nat:492> $ , $ <var:d> <nat:438> $ , $ <nat:378> <var:O> $ , $ <var:o> <nat:350> $ , $ <var:t> <nat:60> $ , as well as $ <var:Z> <nat:424> $ are obviously even whole numbers since the leading terms $ <nat:492> $ , $ <nat:438> $ , $ <nat:378> $ , $ <nat:350> $ , $ <nat:60> $ , plus $ <nat:424> $ will be even numbers in $ \mathbb{N} $ . We know that $ <nat:183> $ is odd . The totaling between even numbers in $ \mathbb{Z}^+ $ and an odd number in $ \mathbb{Z}^+ $ is guaranteed to be an odd positive integer . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:Z> <var:O> <var:t> <var:d> <var:H> <var:o> : nat , Nat . odd ( <nat:492> * <var:H> + <nat:438> * <var:d> + <nat:378> * <var:O> + <nat:350> * <var:o> + <nat:60> * <var:t> + <nat:424> * <var:Z> + <nat:183> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:492> = true ) . { auto . } assert ( <genH> : Nat . even <nat:438> = true ) . { auto . } assert ( <genH> : Nat . even <nat:378> = true ) . { auto . } assert ( <genH> : Nat . even <nat:350> = true ) . { auto . } assert ( <genH> : Nat . even <nat:60> = true ) . { auto . } assert ( <genH> : Nat . even <nat:424> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:492> * <var:H> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:438> * <var:d> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:378> * <var:O> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:350> * <var:o> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:60> * <var:t> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:424> * <var:Z> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . odd <nat:183> = true ) . { auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 