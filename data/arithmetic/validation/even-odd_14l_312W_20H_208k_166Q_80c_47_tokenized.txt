\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:14> \cdot <var:l> + <nat:312> \cdot <var:W> + <nat:20> \cdot <var:H> + <nat:208> \cdot <var:k> + <var:Q> \cdot <nat:166> + <nat:47> + <var:c> \cdot <nat:80> $ must be odd using every natural terms $ <var:Q> $ , $ <var:H> $ , $ <var:W> $ , $ <var:c> $ , $ <var:l> $ , and $ <var:k> $ . \end{theorem} \begin{proof} The terms $ <var:Q> <nat:166> $ and also $ <nat:208> <var:k> $ are even because the product between an even natural and a whole number is itself an even number . The products $ <var:W> <nat:312> $ and $ <nat:20> <var:H> $ are trivially even natural numbers . This claim holds from the fact taking the product between an even natural and any integer is obviously an even number . In addition , the pair $ <var:l> <nat:14> $ is known to be even . This fact holds from the fact the multiplication of an even positive integer with any number in $ \mathbb{N} $ must be even . The pair $ <nat:80> <var:c> $ is known as an even natural number . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:Q> <var:H> <var:W> <var:c> <var:l> <var:k> : nat , Nat . odd ( <nat:14> * <var:l> + <nat:312> * <var:W> + <nat:20> * <var:H> + <nat:208> * <var:k> + <nat:166> * <var:Q> + <nat:80> * <var:c> + <nat:47> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:166> * <var:Q> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:208> * <var:k> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:312> * <var:W> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:20> * <var:H> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:14> * <var:l> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:80> * <var:c> ) = true ) . { rewrite Nat . even_mul . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 