\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \newtheorem{definition}{Definition} \begin{document} \begin{definition} Supposing there exist $ <var:Q> $ , $ <var:x> $ , $ <var:M> $ , $ <var:W> $ , $ <var:m> \in \mathbb{Z}^+ $ we assume that some number $ <var:h> $ is considered to be a <def:five-composite> integer if $ <var:M> \times <var:W> \times <var:m> \times <var:x> \times <var:Q> = <var:h> $ and satisfying the condition that $ <var:Q> $ , $ <var:x> $ , $ <var:W> $ , $ <var:m> $ , and $ <var:M> > <nat:1> $ . \end{definition} \begin{theorem} $ <nat:25920> = <var:h> $ is a <def:five-composite> positive integer . \end{theorem} \begin{proof} We show $ <nat:25920> = <var:m> \times <var:W> \times <var:x> \times <var:M> \times <var:Q> $ as well as $ <var:Q> $ , $ <var:m> $ , $ <var:x> $ , $ <var:W> $ , and $ <var:M> > <nat:1> $ . Note that $ <var:m> \cdot <var:x> \cdot <var:Q> \cdot <var:M> \cdot <var:W> = <nat:25920> $ shows $ <var:M> = <nat:10> $ , $ <var:W> = <nat:12> $ , $ <var:Q> = <nat:9> $ , $ <var:x> = <nat:6> $ , and $ <var:m> = <nat:4> $ . Moreover notice $ <nat:6> $ , $ <nat:4> $ , $ <nat:12> $ , $ <nat:10> $ , $ <nat:9> $ are more than <nat:1> . This shows <nat:25920> is a <def:five-composite> natural number . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:five-composite> ( <var:h> : nat ) := exists <var:Q> <var:x> <var:M> <var:W> <var:m> : nat , ( <var:M> * <var:W> * <var:m> * <var:x> * <var:Q> = <var:h> ) /\ ( <var:Q> > <nat:1> ) /\ ( <var:x> > <nat:1> ) /\ ( <var:W> > <nat:1> ) /\ ( <var:m> > <nat:1> ) /\ ( <var:M> > <nat:1> ) . Theorem <genP:1> : <def:five-composite> <nat:25920> . Proof . unfold <def:five-composite> . exists <nat:9> . exists <nat:6> . exists <nat:10> . exists <nat:12> . exists <nat:4> . assert ( <genH> : <nat:6> > <nat:1> ) . { lia . } assert ( <genH> : <nat:4> > <nat:1> ) . { lia . } assert ( <genH> : <nat:12> > <nat:1> ) . { lia . } assert ( <genH> : <nat:10> > <nat:1> ) . { lia . } assert ( <genH> : <nat:9> > <nat:1> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 