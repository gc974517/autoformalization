\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \newtheorem{definition}{Definition} \begin{document} \begin{definition} Say that $ <var:m> $ is a <def:nine-composite> positive integer whenever there are some integers $ <var:n> $ , $ <var:D> $ , $ <var:A> $ , $ <var:M> $ , $ <var:d> $ , $ <var:h> $ , $ <var:C> $ , $ <var:J> $ , $ <var:L> $ where such that $ <var:D> $ , $ <var:d> $ , $ <var:n> $ , $ <var:h> $ , $ <var:C> $ , $ <var:L> $ , $ <var:J> $ , $ <var:A> $ and $ <var:M> > <nat:1> $ plus with $ <var:m> \in \mathbb{N} $ , $ <var:n> \cdot <var:A> \cdot <var:J> \cdot <var:d> \cdot <var:h> \cdot <var:L> \cdot <var:C> \cdot <var:M> \cdot <var:D> = <var:m> $ . \end{definition} \begin{theorem} $ <nat:10886400> = <var:m> $ is a <def:nine-composite> number . \end{theorem} \begin{proof} Observe $ <var:n> \times <var:A> \times <var:M> \times <var:C> \times <var:d> \times <var:J> \times <var:L> \times <var:D> \times <var:h> = <nat:10886400> $ yields $ <var:L> = <nat:12> $ , $ <var:d> = <nat:2> $ , $ <var:J> = <nat:7> $ , $ <var:A> = <nat:5> $ , $ <var:C> = <nat:6> $ , $ <var:D> = <nat:8> $ , $ <var:M> = <nat:3> $ , $ <var:h> = <nat:10> $ , and $ <var:n> = <nat:9> $ . This hints the theorem is true . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:nine-composite> ( <var:m> : nat ) := exists <var:n> <var:D> <var:A> <var:M> <var:d> <var:h> <var:C> <var:J> <var:L> : nat , ( <var:D> > <nat:1> ) /\ ( <var:d> > <nat:1> ) /\ ( <var:n> > <nat:1> ) /\ ( <var:h> > <nat:1> ) /\ ( <var:C> > <nat:1> ) /\ ( <var:L> > <nat:1> ) /\ ( <var:J> > <nat:1> ) /\ ( <var:A> > <nat:1> ) /\ ( <var:M> > <nat:1> ) /\ ( <var:n> * <var:A> * <var:J> * <var:d> * <var:h> * <var:L> * <var:C> * <var:M> * <var:D> = <var:m> ) . Theorem <genP:1> : <def:nine-composite> <nat:10886400> . Proof . unfold <def:nine-composite> . exists <nat:9> . exists <nat:8> . exists <nat:5> . exists <nat:3> . exists <nat:2> . exists <nat:10> . exists <nat:6> . exists <nat:7> . exists <nat:12> . repeat split . all : lia . Qed . 