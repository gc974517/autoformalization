\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:402> <var:i> + <nat:318> <var:m> + <nat:39> + <var:T> <nat:362> + <var:x> <nat:482> + <var:L> <nat:26> + <var:Z> <nat:28> + <nat:270> <var:y> $ is odd . \end{theorem} \begin{proof} Recall that $ <nat:482> \cdot <var:x> + <nat:39> + <nat:26> \cdot <var:L> + <var:Z> \cdot <nat:28> + <var:T> \cdot <nat:362> + <var:y> \cdot <nat:270> + <nat:318> \cdot <var:m> + <nat:402> \cdot <var:i> $ is known as odd since the formula $ <nat:26> <var:L> + <var:m> <nat:318> + <nat:482> <var:x> + <var:i> <nat:402> + <nat:270> <var:y> + <var:Z> <nat:28> + <var:T> <nat:362> $ is even . The terms $ <nat:318> \times <var:m> $ , $ <nat:28> \times <var:Z> $ , $ <nat:402> \times <var:i> $ , and also $ <var:x> \times <nat:482> $ are known to be even . Likewise , see that the term $ <nat:26> \times <var:L> $ is known as even . This must be true from the knowledge taking the product of an even element of $ \mathbb{N} $ and an arbitrary whole number will be even . $ <var:y> \times <nat:270> $ is even . $ <nat:362> \times <var:T> $ is trivially even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:i> <var:m> <var:T> <var:x> <var:L> <var:Z> <var:y> : nat , Nat . odd ( <nat:402> * <var:i> + <nat:318> * <var:m> + <nat:362> * <var:T> + <nat:482> * <var:x> + <nat:26> * <var:L> + <nat:28> * <var:Z> + <nat:270> * <var:y> + <nat:39> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:318> * <var:m> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:28> * <var:Z> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:402> * <var:i> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:482> * <var:x> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:26> * <var:L> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:270> * <var:y> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:362> * <var:T> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:402> * <var:i> + <nat:318> * <var:m> + <nat:362> * <var:T> + <nat:482> * <var:x> + <nat:26> * <var:L> + <nat:28> * <var:Z> + <nat:270> * <var:y> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . auto . Qed . 