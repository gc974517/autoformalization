\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} For any $ <var:q> $ , $ <var:w> $ , $ <var:E> $ , $ <var:n> $ , $ <var:r> $ , $ <var:H> $ , $ <var:b> $ , and $ <var:L> $ the summation $ <var:L> \cdot <nat:288> + <nat:38> \cdot <var:H> + <var:n> \cdot <nat:12> + <nat:102> \cdot <var:E> + <nat:445> + <nat:278> \cdot <var:w> + <nat:60> \cdot <var:b> + <var:r> \cdot <nat:66> + <var:q> \cdot <nat:336> $ must be odd . \end{theorem} \begin{proof} We know the positive integer $ <nat:102> $ is even The numbers $ <nat:288> $ , $ <nat:66> $ , $ <nat:60> $ , and also $ <nat:336> $ will be even numbers Observe that the number $ <nat:278> $ is an even whole number The coefficient $ <nat:12> $ is obviously an even number The coefficient $ <nat:38> $ is known as even Recall $ <nat:445> $ is known as odd . By reason that the addition of even numbers in $ \mathbb{Z}^+ $ and an odd element of $ \mathbb{Z}^+ $ will be fundamentally an odd element of $ \mathbb{N} $ , as a consequence $ <var:L> <nat:288> + <var:q> <nat:336> + <var:b> <nat:60> + <var:n> <nat:12> + <nat:445> + <nat:102> <var:E> + <nat:278> <var:w> + <nat:38> <var:H> + <var:r> <nat:66> $ is odd . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:q> <var:w> <var:E> <var:n> <var:r> <var:H> <var:b> <var:L> : nat , Nat . odd ( <nat:288> * <var:L> + <nat:38> * <var:H> + <nat:12> * <var:n> + <nat:102> * <var:E> + <nat:278> * <var:w> + <nat:60> * <var:b> + <nat:66> * <var:r> + <nat:336> * <var:q> + <nat:445> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:102> = true ) . { auto . } assert ( <genH> : Nat . even <nat:288> = true ) . { auto . } assert ( <genH> : Nat . even <nat:66> = true ) . { auto . } assert ( <genH> : Nat . even <nat:60> = true ) . { auto . } assert ( <genH> : Nat . even <nat:336> = true ) . { auto . } assert ( <genH> : Nat . even <nat:278> = true ) . { auto . } assert ( <genH> : Nat . even <nat:12> = true ) . { auto . } assert ( <genH> : Nat . even <nat:38> = true ) . { auto . } assert ( <genH> : Nat . odd <nat:445> = true ) . { auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . repeat rewrite Nat . even_mul . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 