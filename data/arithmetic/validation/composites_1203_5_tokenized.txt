\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Denote that $ <var:a> $ is a <def:five-composite> natural number assuming using some $ <var:N> $ , $ <var:J> $ , $ <var:Y> $ , $ <var:L> $ , $ <var:l> \in \mathbb{Z}^+ $ we have satisfying the condition that $ <var:l> $ , $ <var:Y> $ , $ <var:L> $ , $ <var:N> $ , and $ <var:J> > <nat:1> $ plus assuming $ <var:a> \in \mathbb{N} $ , $ <var:a> = <var:N> \cdot <var:L> \cdot <var:l> \cdot <var:J> \cdot <var:Y> $ . For this reason $ <var:a> = <nat:19200> $ is a <def:five-composite> positive integer . \end{theorem} \begin{proof} Allow $ <var:L> = <nat:4> $ , $ <var:N> = <nat:10> $ , $ <var:J> = <nat:12> $ , $ <var:l> = <nat:5> $ and $ <var:Y> = <nat:8> $ . We confirm $ <nat:19200> = <var:L> * <var:J> * <var:Y> * <var:N> * <var:l> $ . We verify our belief is true considering $ <nat:19200> = <nat:5> \times <nat:12> \times <nat:10> \times <nat:4> \times <nat:8> $ plus seeing that $ <var:l> = <nat:5> $ , $ <var:J> = <nat:12> $ , $ <var:L> = <nat:4> $ , $ <var:N> = <nat:10> $ and $ <var:Y> = <nat:8> $ are greater than <nat:1> . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:five-composite> ( <var:a> : nat ) := exists <var:N> <var:J> <var:Y> <var:L> <var:l> : nat , ( <var:l> > <nat:1> ) /\ ( <var:Y> > <nat:1> ) /\ ( <var:L> > <nat:1> ) /\ ( <var:N> > <nat:1> ) /\ ( <var:J> > <nat:1> ) /\ ( <var:a> = <var:N> * <var:L> * <var:l> * <var:J> * <var:Y> ) . Theorem <genP:1> : <def:five-composite> <nat:19200> . Proof . unfold <def:five-composite> . exists <nat:10> . exists <nat:12> . exists <nat:8> . exists <nat:4> . exists <nat:5> . assert ( <genH> : <nat:5> > <nat:1> ) . { lia . } assert ( <genH> : <nat:12> > <nat:1> ) . { lia . } assert ( <genH> : <nat:4> > <nat:1> ) . { lia . } assert ( <genH> : <nat:10> > <nat:1> ) . { lia . } assert ( <genH> : <nat:8> > <nat:1> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 