\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \newtheorem{definition}{Definition} \begin{document} \begin{definition} Let that $ <var:I> $ is <def:eight-composite> assuming assuming some natural numbers $ <var:D> $ , $ <var:W> $ , $ <var:i> $ , $ <var:E> $ , $ <var:J> $ , $ <var:y> $ , $ <var:q> $ , $ <var:Z> $ we get $ <var:Z> $ , $ <var:D> $ , $ <var:E> $ , $ <var:q> $ , $ <var:W> $ , $ <var:y> $ , $ <var:i> $ , and $ <var:J> \geq <nat:2> $ as well as with $ <var:I> \in \mathbb{N} $ , $ <var:I> = <var:q> * <var:y> * <var:E> * <var:D> * <var:W> * <var:Z> * <var:J> * <var:i> $ . \end{definition} \begin{theorem} The number <nat:4790016> is <def:eight-composite> . \end{theorem} \begin{proof} Recall that a <def:eight-composite> integer is the product of natural numbers $ <var:Z> $ , $ <var:D> $ , $ <var:W> $ , $ <var:J> $ , $ <var:E> $ , $ <var:i> $ , $ <var:y> $ and $ <var:q> $ satisfying the condition that $ <var:W> $ , $ <var:J> $ , $ <var:Z> $ , $ <var:q> $ , $ <var:y> $ , $ <var:E> $ , $ <var:D> $ and $ <var:i> \geq <nat:2> $ . Take $ <var:q> = <nat:12> $ , $ <var:Z> = <nat:11> $ , $ <var:E> = <nat:9> $ , $ <var:i> = <nat:8> $ , $ <var:W> = <nat:3> $ , $ <var:y> = <nat:7> $ , $ <var:D> = <nat:4> $ , $ <var:J> = <nat:6> $ . This implies the theorem holds . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:eight-composite> ( <var:I> : nat ) := exists <var:D> <var:W> <var:i> <var:E> <var:J> <var:y> <var:q> <var:Z> : nat , ( <var:Z> >= <nat:2> ) /\ ( <var:D> >= <nat:2> ) /\ ( <var:E> >= <nat:2> ) /\ ( <var:q> >= <nat:2> ) /\ ( <var:W> >= <nat:2> ) /\ ( <var:y> >= <nat:2> ) /\ ( <var:i> >= <nat:2> ) /\ ( <var:J> >= <nat:2> ) /\ ( <var:I> = <var:q> * <var:y> * <var:E> * <var:D> * <var:W> * <var:Z> * <var:J> * <var:i> ) . Theorem <genP:1> : <def:eight-composite> <nat:4790016> . Proof . unfold <def:eight-composite> . exists <nat:4> . exists <nat:3> . exists <nat:8> . exists <nat:9> . exists <nat:6> . exists <nat:7> . exists <nat:12> . exists <nat:11> . repeat split . all : lia . Qed . 