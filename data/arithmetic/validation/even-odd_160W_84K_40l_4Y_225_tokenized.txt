\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Given all $ <var:Y> $ , $ <var:l> $ , $ <var:W> $ , and $ <var:K> \in \mathbb{N} $ the summation $ <nat:4> <var:Y> + <nat:40> <var:l> + <nat:84> <var:K> + <nat:225> + <nat:160> <var:W> $ will be odd . \end{theorem} \begin{proof} We employ the fact the sum $ <nat:160> \cdot <var:W> + <var:Y> \cdot <nat:4> + <nat:40> \cdot <var:l> + <var:K> \cdot <nat:84> $ is obviously even . The terms $ <var:Y> \times <nat:4> $ as well as $ <var:l> \times <nat:40> $ are trivially even elements of $ \mathbb{N} $ from the knowledge the numbers $ <nat:4> $ plus $ <nat:40> $ are clearly even . Notice that $ <nat:160> \times <var:W> $ is guaranteed to be even since the natural number $ <nat:160> $ is obviously even . See $ <nat:84> \times <var:K> $ is even . This must be true since the leading term $ <nat:84> $ is clearly by its very nature an even natural number . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:Y> <var:l> <var:W> <var:K> : nat , Nat . odd ( <nat:4> * <var:Y> + <nat:40> * <var:l> + <nat:84> * <var:K> + <nat:160> * <var:W> + <nat:225> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:4> = true ) . { auto . } assert ( <genH> : Nat . even <nat:40> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:4> * <var:Y> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:40> * <var:l> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:160> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:160> * <var:W> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:84> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:84> * <var:K> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:4> * <var:Y> + <nat:40> * <var:l> + <nat:84> * <var:K> + <nat:160> * <var:W> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . auto . Qed . 