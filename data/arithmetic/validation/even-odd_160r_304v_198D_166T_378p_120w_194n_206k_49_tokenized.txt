\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Given any positive integers $ <var:k> $ , $ <var:D> $ , $ <var:r> $ , $ <var:w> $ , $ <var:p> $ , $ <var:n> $ , $ <var:v> $ , and $ <var:T> $ the formula $ <nat:49> + <nat:160> \cdot <var:r> + <var:v> \cdot <nat:304> + <nat:198> \cdot <var:D> + <var:T> \cdot <nat:166> + <nat:378> \cdot <var:p> + <nat:120> \cdot <var:w> + <var:n> \cdot <nat:194> + <nat:206> \cdot <var:k> $ is odd . \end{theorem} \begin{proof} Recall that the positive integer $ <nat:378> $ is obviously even Further , the coefficients $ <nat:198> $ , $ <nat:166> $ , $ <nat:304> $ , and also $ <nat:206> $ are even positive integers We know the natural number $ <nat:120> $ is trivially even The leading term $ <nat:194> $ is known as even Additionally , the integer $ <nat:160> $ is clearly even Take note that $ <nat:49> $ is known to be odd . See that the summing of even integers concurrently with an odd integer will be clearly an odd whole number . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:k> <var:D> <var:r> <var:w> <var:p> <var:n> <var:v> <var:T> : nat , Nat . odd ( <nat:160> * <var:r> + <nat:304> * <var:v> + <nat:198> * <var:D> + <nat:166> * <var:T> + <nat:378> * <var:p> + <nat:120> * <var:w> + <nat:194> * <var:n> + <nat:206> * <var:k> + <nat:49> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:378> = true ) . { auto . } assert ( <genH> : Nat . even <nat:198> = true ) . { auto . } assert ( <genH> : Nat . even <nat:166> = true ) . { auto . } assert ( <genH> : Nat . even <nat:304> = true ) . { auto . } assert ( <genH> : Nat . even <nat:206> = true ) . { auto . } assert ( <genH> : Nat . even <nat:120> = true ) . { auto . } assert ( <genH> : Nat . even <nat:194> = true ) . { auto . } assert ( <genH> : Nat . even <nat:160> = true ) . { auto . } assert ( <genH> : Nat . odd <nat:49> = true ) . { auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . repeat rewrite Nat . even_mul . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 