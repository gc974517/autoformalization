\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:V> \times <nat:370> + <nat:168> + <var:A> \times <nat:428> + <nat:194> \times <var:Z> + <var:v> \times <nat:2> + <var:y> \times <nat:176> + <var:R> \times <nat:186> + <var:O> \times <nat:482> + <var:x> \times <nat:100> $ is even . \end{theorem} \begin{proof} The leading terms $ <nat:370> $ , $ <nat:428> $ , $ <nat:194> $ , $ <nat:2> $ , $ <nat:176> $ , $ <nat:186> $ , $ <nat:482> $ , plus $ <nat:100> $ are known as even numbers in $ \mathbb{Z}^+ $ . Thus , the pairs $ <var:V> \cdot <nat:370> $ , $ <var:A> \cdot <nat:428> $ , $ <nat:194> \cdot <var:Z> $ , $ <var:v> \cdot <nat:2> $ , $ <nat:176> \cdot <var:y> $ , $ <var:R> \cdot <nat:186> $ , $ <nat:482> \cdot <var:O> $ , and likewise $ <nat:100> \cdot <var:x> $ is even too . Notice that $ <nat:168> $ is known as an even element of $ \mathbb{N} $ . As a consequence that the totaling between an even whole number and an even number is guaranteed to be an even natural number , thus our result holds . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:V> <var:A> <var:Z> <var:v> <var:y> <var:R> <var:O> <var:x> : nat , Nat . even ( <nat:370> * <var:V> + <nat:428> * <var:A> + <nat:194> * <var:Z> + <nat:2> * <var:v> + <nat:176> * <var:y> + <nat:186> * <var:R> + <nat:482> * <var:O> + <nat:100> * <var:x> + <nat:168> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:370> = true ) . { auto . } assert ( <genH> : Nat . even <nat:428> = true ) . { auto . } assert ( <genH> : Nat . even <nat:194> = true ) . { auto . } assert ( <genH> : Nat . even <nat:2> = true ) . { auto . } assert ( <genH> : Nat . even <nat:176> = true ) . { auto . } assert ( <genH> : Nat . even <nat:186> = true ) . { auto . } assert ( <genH> : Nat . even <nat:482> = true ) . { auto . } assert ( <genH> : Nat . even <nat:100> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:370> * <var:V> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:428> * <var:A> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:194> * <var:Z> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:2> * <var:v> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:176> * <var:y> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:186> * <var:R> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:482> * <var:O> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:100> * <var:x> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:168> = true ) . { auto . } repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 