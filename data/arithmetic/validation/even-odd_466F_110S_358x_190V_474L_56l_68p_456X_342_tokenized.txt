\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:466> \cdot <var:F> + <nat:342> + <var:S> \cdot <nat:110> + <nat:358> \cdot <var:x> + <nat:190> \cdot <var:V> + <nat:474> \cdot <var:L> + <var:l> \cdot <nat:56> + <nat:68> \cdot <var:p> + <nat:456> \cdot <var:X> $ must be even assuming all positive numbers $ <var:S> $ , $ <var:x> $ , $ <var:p> $ , $ <var:F> $ , $ <var:L> $ , $ <var:X> $ , $ <var:V> $ , and $ <var:l> $ . \end{theorem} \begin{proof} Remember the terms $ <nat:466> \cdot <var:F> $ , $ <var:S> \cdot <nat:110> $ , $ <nat:358> \cdot <var:x> $ , $ <nat:190> \cdot <var:V> $ , $ <var:L> \cdot <nat:474> $ , $ <var:l> \cdot <nat:56> $ , $ <nat:68> \cdot <var:p> $ , plus $ <nat:456> \cdot <var:X> $ are known as even elements of $ \mathbb{Z}^+ $ by reason that the numbers $ <nat:466> $ , $ <nat:110> $ , $ <nat:358> $ , $ <nat:190> $ , $ <nat:474> $ , $ <nat:56> $ , $ <nat:68> $ , and also $ <nat:456> $ are known as even integers . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:S> <var:x> <var:p> <var:F> <var:L> <var:X> <var:V> <var:l> : nat , Nat . even ( <nat:466> * <var:F> + <nat:110> * <var:S> + <nat:358> * <var:x> + <nat:190> * <var:V> + <nat:474> * <var:L> + <nat:56> * <var:l> + <nat:68> * <var:p> + <nat:456> * <var:X> + <nat:342> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:466> = true ) . { auto . } assert ( <genH> : Nat . even <nat:110> = true ) . { auto . } assert ( <genH> : Nat . even <nat:358> = true ) . { auto . } assert ( <genH> : Nat . even <nat:190> = true ) . { auto . } assert ( <genH> : Nat . even <nat:474> = true ) . { auto . } assert ( <genH> : Nat . even <nat:56> = true ) . { auto . } assert ( <genH> : Nat . even <nat:68> = true ) . { auto . } assert ( <genH> : Nat . even <nat:456> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:466> * <var:F> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:110> * <var:S> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:358> * <var:x> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:190> * <var:V> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:474> * <var:L> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:56> * <var:l> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:68> * <var:p> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:456> * <var:X> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 