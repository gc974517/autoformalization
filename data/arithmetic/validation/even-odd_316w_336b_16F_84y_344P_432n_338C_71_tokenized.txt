\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:336> * <var:b> + <var:y> * <nat:84> + <var:C> * <nat:338> + <nat:16> * <var:F> + <nat:316> * <var:w> + <var:n> * <nat:432> + <var:P> * <nat:344> + <nat:71> $ is odd with every integers $ <var:F> $ , $ <var:b> $ , $ <var:w> $ , $ <var:y> $ , $ <var:P> $ , $ <var:n> $ , and $ <var:C> $ . \end{theorem} \begin{proof} We apply the assumption the understanding that the expression $ <var:F> <nat:16> + <var:w> <nat:316> + <nat:71> + <nat:336> <var:b> + <nat:344> <var:P> + <var:C> <nat:338> + <var:y> <nat:84> + <var:n> <nat:432> $ is odd by reason that the sum $ <nat:316> <var:w> + <var:b> <nat:336> + <var:F> <nat:16> + <nat:84> <var:y> + <nat:344> <var:P> + <var:n> <nat:432> + <var:C> <nat:338> $ is guaranteed to be even . The products $ <nat:316> <var:w> $ , $ <nat:336> <var:b> $ , $ <nat:16> <var:F> $ , $ <var:y> <nat:84> $ , $ <nat:344> <var:P> $ , $ <nat:432> <var:n> $ , and likewise $ <var:C> <nat:338> $ are obviously even . This holds as a consequence that the product of an even whole number with a integer is even . This fact must be true since the natural numbers $ <nat:316> $ , $ <nat:336> $ , $ <nat:16> $ , $ <nat:84> $ , $ <nat:344> $ , $ <nat:432> $ , additionally $ <nat:338> $ are clearly even naturals . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:F> <var:b> <var:w> <var:y> <var:P> <var:n> <var:C> : nat , Nat . odd ( <nat:336> * <var:b> + <nat:84> * <var:y> + <nat:338> * <var:C> + <nat:16> * <var:F> + <nat:316> * <var:w> + <nat:432> * <var:n> + <nat:344> * <var:P> + <nat:71> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:316> = true ) . { auto . } assert ( <genH> : Nat . even <nat:336> = true ) . { auto . } assert ( <genH> : Nat . even <nat:16> = true ) . { auto . } assert ( <genH> : Nat . even <nat:84> = true ) . { auto . } assert ( <genH> : Nat . even <nat:344> = true ) . { auto . } assert ( <genH> : Nat . even <nat:432> = true ) . { auto . } assert ( <genH> : Nat . even <nat:338> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:316> * <var:w> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:336> * <var:b> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:16> * <var:F> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:84> * <var:y> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:344> * <var:P> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:432> * <var:n> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:338> * <var:C> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:336> * <var:b> + <nat:84> * <var:y> + <nat:338> * <var:C> + <nat:16> * <var:F> + <nat:316> * <var:w> + <nat:432> * <var:n> + <nat:344> * <var:P> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . auto . Qed . 