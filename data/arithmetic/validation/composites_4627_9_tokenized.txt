\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Take $ <var:Y> $ , $ <var:R> $ , $ <var:b> $ , $ <var:S> $ , $ <var:M> $ , $ <var:r> $ , $ <var:B> $ , $ <var:T> $ , $ <var:C> \in \mathbb{N} $ so that $ <var:b> $ , $ <var:M> $ , $ <var:C> $ , $ <var:r> $ , $ <var:R> $ , $ <var:B> $ , $ <var:S> $ , $ <var:T> $ and $ <var:Y> \geq <nat:2> $ . We say that some positive integer $ <var:Q> $ is defined as a <def:nine-composite> whole number given $ <var:S> \times <var:b> \times <var:C> \times <var:B> \times <var:Y> \times <var:T> \times <var:r> \times <var:R> \times <var:M> = <var:Q> $ . Consequently $ <var:Q> = <nat:5987520> $ is a <def:nine-composite> positive integer . \end{theorem} \begin{proof} We confirm <nat:5987520> is a <def:nine-composite> number in view of $ <nat:11> $ , $ <nat:5> $ , $ <nat:12> $ , $ <nat:4> $ , $ <nat:3> $ , $ <nat:6> $ , $ <nat:7> $ , $ <nat:2> $ and $ <nat:9> \geq <nat:2> $ plus seeing that $ <nat:12> * <nat:2> * <nat:5> * <nat:7> * <nat:11> * <nat:6> * <nat:9> * <nat:3> * <nat:4> = <nat:5987520> = <var:b> * <var:T> * <var:R> * <var:M> * <var:S> * <var:C> * <var:r> * <var:Y> * <var:B> $ . As a consequence , $ <var:T> $ , $ <var:Y> $ , $ <var:b> $ , $ <var:R> $ , $ <var:r> $ , $ <var:B> $ , $ <var:S> $ , $ <var:C> $ , $ <var:M> $ are larger than or equivalent to <nat:2> and $ <nat:5987520> = <var:T> * <var:r> * <var:M> * <var:C> * <var:Y> * <var:R> * <var:S> * <var:B> * <var:b> $ has been verified . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:nine-composite> ( <var:Q> : nat ) := exists <var:Y> <var:R> <var:b> <var:S> <var:M> <var:r> <var:B> <var:T> <var:C> : nat , ( <var:b> >= <nat:2> ) /\ ( <var:M> >= <nat:2> ) /\ ( <var:C> >= <nat:2> ) /\ ( <var:r> >= <nat:2> ) /\ ( <var:R> >= <nat:2> ) /\ ( <var:B> >= <nat:2> ) /\ ( <var:S> >= <nat:2> ) /\ ( <var:T> >= <nat:2> ) /\ ( <var:Y> >= <nat:2> ) /\ ( <var:S> * <var:b> * <var:C> * <var:B> * <var:Y> * <var:T> * <var:r> * <var:R> * <var:M> = <var:Q> ) . Theorem <genP:1> : <def:nine-composite> <nat:5987520> . Proof . unfold <def:nine-composite> . assert ( <genH> : <nat:11> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:5> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:12> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:4> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:3> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:6> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:7> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:2> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:9> >= <nat:2> ) . { lia . } exists <nat:3> . exists <nat:5> . exists <nat:12> . exists <nat:11> . exists <nat:7> . exists <nat:9> . exists <nat:4> . exists <nat:2> . exists <nat:6> . repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 