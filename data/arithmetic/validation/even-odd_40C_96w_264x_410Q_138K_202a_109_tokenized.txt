\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Using every positive integers $ <var:a> $ , $ <var:K> $ , $ <var:w> $ , $ <var:C> $ , $ <var:x> $ , and $ <var:Q> $ the expression $ <var:x> * <nat:264> + <var:K> * <nat:138> + <var:w> * <nat:96> + <var:a> * <nat:202> + <nat:109> + <var:Q> * <nat:410> + <var:C> * <nat:40> $ is odd . \end{theorem} \begin{proof} $ <nat:40> \cdot <var:C> + <nat:202> \cdot <var:a> + <var:x> \cdot <nat:264> + <nat:410> \cdot <var:Q> + <nat:109> + <var:K> \cdot <nat:138> + <nat:96> \cdot <var:w> $ is guaranteed to be odd from the fact the expression $ <var:C> \times <nat:40> + <nat:96> \times <var:w> + <nat:264> \times <var:x> + <var:Q> \times <nat:410> + <var:K> \times <nat:138> + <nat:202> \times <var:a> $ is obviously even . Recall that the pairs $ <nat:202> * <var:a> $ and also $ <var:w> * <nat:96> $ are known to be even natural numbers from the fact taking the product between an even number with any number is guaranteed to be instrinsically an even number . $ <var:Q> * <nat:410> $ is known to be an even whole number . Additionally , the products $ <var:x> * <nat:264> $ plus $ <var:C> * <nat:40> $ are clearly even elements of $ \mathbb{Z}^+ $ . The term $ <var:K> * <nat:138> $ is guaranteed to be an even natural number . Our lemma must be true since taking the product between even integers with an arbitrary integer is even . It can be verified that our lemma is true . Recall that $ <nat:109> $ is clearly odd . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:a> <var:K> <var:w> <var:C> <var:x> <var:Q> : nat , Nat . odd ( <nat:264> * <var:x> + <nat:138> * <var:K> + <nat:96> * <var:w> + <nat:202> * <var:a> + <nat:410> * <var:Q> + <nat:40> * <var:C> + <nat:109> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:202> * <var:a> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:96> * <var:w> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:410> * <var:Q> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:264> * <var:x> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:40> * <var:C> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:138> * <var:K> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:264> * <var:x> + <nat:138> * <var:K> + <nat:96> * <var:w> + <nat:202> * <var:a> + <nat:410> * <var:Q> + <nat:40> * <var:C> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } assert ( <genH> : Nat . odd <nat:109> = true ) . { auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . rewrite <genH> . auto . Qed . 