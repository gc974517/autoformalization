\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:364> \cdot <var:D> + <nat:120> \cdot <var:y> + <var:G> \cdot <nat:304> + <nat:378> \cdot <var:b> + <var:F> \cdot <nat:104> + <nat:320> \cdot <var:t> + <nat:256> + <nat:334> \cdot <var:u> + <var:P> \cdot <nat:228> $ must be even . \end{theorem} \begin{proof} The integers $ <nat:364> $ , $ <nat:120> $ , $ <nat:304> $ , $ <nat:378> $ , $ <nat:104> $ , $ <nat:320> $ , $ <nat:334> $ , as well as $ <nat:228> $ are even . Hence , the terms $ <nat:364> \cdot <var:D> $ , $ <var:y> \cdot <nat:120> $ , $ <nat:304> \cdot <var:G> $ , $ <var:b> \cdot <nat:378> $ , $ <var:F> \cdot <nat:104> $ , $ <nat:320> \cdot <var:t> $ , $ <nat:334> \cdot <var:u> $ , and also $ <nat:228> \cdot <var:P> $ must be even in addition . Take note $ <nat:256> $ is even . The adding of an even element of $ \mathbb{Z}^+ $ with an even number in $ \mathbb{Z}^+ $ is even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:D> <var:y> <var:G> <var:b> <var:F> <var:t> <var:u> <var:P> : nat , Nat . even ( <nat:364> * <var:D> + <nat:120> * <var:y> + <nat:304> * <var:G> + <nat:378> * <var:b> + <nat:104> * <var:F> + <nat:320> * <var:t> + <nat:334> * <var:u> + <nat:228> * <var:P> + <nat:256> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:364> = true ) . { auto . } assert ( <genH> : Nat . even <nat:120> = true ) . { auto . } assert ( <genH> : Nat . even <nat:304> = true ) . { auto . } assert ( <genH> : Nat . even <nat:378> = true ) . { auto . } assert ( <genH> : Nat . even <nat:104> = true ) . { auto . } assert ( <genH> : Nat . even <nat:320> = true ) . { auto . } assert ( <genH> : Nat . even <nat:334> = true ) . { auto . } assert ( <genH> : Nat . even <nat:228> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:364> * <var:D> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:120> * <var:y> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:304> * <var:G> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:378> * <var:b> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:104> * <var:F> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:320> * <var:t> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:334> * <var:u> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:228> * <var:P> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:256> = true ) . { auto . } repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 