\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Assuming all $ <var:m> $ , $ <var:n> $ , $ <var:f> $ , $ <var:e> $ , $ <var:y> $ , and $ <var:k> $ the formula $ <var:e> \times <nat:260> + <nat:232> \times <var:m> + <nat:276> \times <var:f> + <var:y> \times <nat:116> + <var:k> \times <nat:486> + <nat:48> \times <var:n> + <nat:117> $ will be odd . \end{theorem} \begin{proof} It can be justified that that $ <var:m> <nat:232> + <nat:116> <var:y> + <nat:260> <var:e> + <nat:48> <var:n> + <var:f> <nat:276> + <var:k> <nat:486> + <nat:117> $ is clearly odd because the summation $ <var:k> \times <nat:486> + <nat:116> \times <var:y> + <var:n> \times <nat:48> + <nat:276> \times <var:f> + <nat:232> \times <var:m> + <nat:260> \times <var:e> $ is clearly even . The natural number $ <nat:260> $ is clearly an even positive integer . As a consequence , the pair $ <nat:260> \times <var:e> $ will be even also . In addition to this , the product $ <nat:232> \times <var:m> $ is obviously even from the fact the integer $ <nat:232> $ is known to be even . Further , observe the product $ <var:n> \times <nat:48> $ is an even natural number . This claim must be true from the fact the multiplication of an even number in $ \mathbb{N} $ with some integer will be even . This fact must be true because the positive integer $ <nat:48> $ is known as an even positive integer . In addition to this , the integer $ <nat:276> $ is guaranteed to be even . In consequence , the product $ <nat:276> \times <var:f> $ is guaranteed to be even in addition . Remember that the whole number $ <nat:486> $ is known to be even . As a consequence , the pair $ <var:k> \times <nat:486> $ must be even also . In addition to this , see that the whole number $ <nat:116> $ is trivially even . As a consequence , the product $ <var:y> \times <nat:116> $ must be even at the same time . The summation $ <nat:486> <var:k> + <nat:276> <var:f> + <var:y> <nat:116> + <var:n> <nat:48> + <var:e> <nat:260> + <nat:232> <var:m> $ must be even because multiplying between even natural numbers and any natural number must be even . Take note that $ <nat:117> $ is known to be odd . We show this result holds . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:m> <var:n> <var:f> <var:e> <var:y> <var:k> : nat , Nat . odd ( <nat:260> * <var:e> + <nat:232> * <var:m> + <nat:276> * <var:f> + <nat:116> * <var:y> + <nat:486> * <var:k> + <nat:48> * <var:n> + <nat:117> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:260> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:260> * <var:e> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:232> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:232> * <var:m> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:48> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:48> * <var:n> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:276> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:276> * <var:f> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:486> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:486> * <var:k> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:116> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:116> * <var:y> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:260> * <var:e> + <nat:232> * <var:m> + <nat:276> * <var:f> + <nat:116> * <var:y> + <nat:486> * <var:k> + <nat:48> * <var:n> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } assert ( <genH> : Nat . odd <nat:117> = true ) . { auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . rewrite <genH> . auto . Qed . 