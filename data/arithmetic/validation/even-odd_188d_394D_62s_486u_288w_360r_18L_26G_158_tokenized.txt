\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:G> \cdot <nat:26> + <nat:158> + <var:L> \cdot <nat:18> + <var:w> \cdot <nat:288> + <var:s> \cdot <nat:62> + <var:D> \cdot <nat:394> + <nat:360> \cdot <var:r> + <nat:486> \cdot <var:u> + <nat:188> \cdot <var:d> $ must be even for positive integers $ <var:L> $ , $ <var:s> $ , $ <var:G> $ , $ <var:r> $ , $ <var:u> $ , $ <var:d> $ , $ <var:w> $ , and $ <var:D> $ . \end{theorem} \begin{proof} The formula $ <var:L> \cdot <nat:18> + <nat:288> \cdot <var:w> + <nat:486> \cdot <var:u> + <nat:188> \cdot <var:d> + <var:s> \cdot <nat:62> + <nat:158> + <var:r> \cdot <nat:360> + <var:D> \cdot <nat:394> + <var:G> \cdot <nat:26> $ is known to be even as a consequence that the expression $ <nat:188> \cdot <var:d> + <var:D> \cdot <nat:394> + <nat:62> \cdot <var:s> + <var:u> \cdot <nat:486> + <var:w> \cdot <nat:288> + <var:r> \cdot <nat:360> + <nat:18> \cdot <var:L> + <nat:26> \cdot <var:G> $ is guaranteed to be even . Notice that the terms $ <var:L> \cdot <nat:18> $ , $ <nat:486> \cdot <var:u> $ , $ <nat:360> \cdot <var:r> $ , $ <nat:188> \cdot <var:d> $ , $ <nat:288> \cdot <var:w> $ , and $ <var:D> \cdot <nat:394> $ are known to be even elements of $ \mathbb{Z}^+ $ . Notice the term $ <nat:62> \cdot <var:s> $ is clearly an even natural as a consequence that multiplying of an even whole number and some number in $ \mathbb{N} $ must be an even natural number . Furthermore , remember that the term $ <var:G> \cdot <nat:26> $ is known to be an even natural number . The claim must be true from the fact the summing between an even integer and an even whole number must be even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:L> <var:s> <var:G> <var:r> <var:u> <var:d> <var:w> <var:D> : nat , Nat . even ( <nat:26> * <var:G> + <nat:18> * <var:L> + <nat:288> * <var:w> + <nat:62> * <var:s> + <nat:394> * <var:D> + <nat:360> * <var:r> + <nat:486> * <var:u> + <nat:188> * <var:d> + <nat:158> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:18> * <var:L> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:486> * <var:u> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:360> * <var:r> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:188> * <var:d> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:288> * <var:w> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:394> * <var:D> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:62> * <var:s> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:26> * <var:G> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:26> * <var:G> + <nat:18> * <var:L> + <nat:288> * <var:w> + <nat:62> * <var:s> + <nat:394> * <var:D> + <nat:360> * <var:r> + <nat:486> * <var:u> + <nat:188> * <var:d> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . even_add . rewrite <genH> . auto . Qed . 