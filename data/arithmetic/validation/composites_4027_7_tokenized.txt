\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \newtheorem{definition}{Definition} \begin{document} \begin{definition} Assuming that we have $ <var:q> $ , $ <var:w> $ , $ <var:g> $ , $ <var:G> $ , $ <var:Y> $ , $ <var:F> $ , $ <var:p> \geq <nat:2> $ where using $ <var:u> \in \mathbb{N} $ , $ <var:q> \cdot <var:Y> \cdot <var:G> \cdot <var:g> \cdot <var:F> \cdot <var:p> \cdot <var:w> = <var:u> $ , then we define that $ <var:u> $ is a <def:seven-composite> number given some integers $ <var:F> $ , $ <var:q> $ , $ <var:w> $ , $ <var:G> $ , $ <var:g> $ , $ <var:Y> $ , $ <var:p> $ . \end{definition} \begin{theorem} The whole number <nat:422400> is a <def:seven-composite> integer . \end{theorem} \begin{proof} Recall a <def:seven-composite> is the product between natural numbers $ <var:w> $ , $ <var:p> $ , $ <var:Y> $ , $ <var:G> $ , $ <var:F> $ , $ <var:g> $ , and $ <var:q> $ where $ <var:G> $ , $ <var:q> $ , $ <var:p> $ , $ <var:w> $ , $ <var:Y> $ , $ <var:F> $ and $ <var:g> \geq <nat:2> $ . Observe $ <nat:2> * <nat:10> * <nat:4> * <nat:5> * <nat:8> * <nat:11> * <nat:12> = <nat:422400> $ . Also notice that $ <nat:10> $ , $ <nat:12> $ , $ <nat:2> $ , $ <nat:5> $ , $ <nat:4> $ , $ <nat:8> $ , $ <nat:11> \geq <nat:2> $ . This shows our statement is valid . Therefore , <nat:422400> is a <def:seven-composite> integer is verified . So , $ <nat:422400> = <var:Y> * <var:F> * <var:g> * <var:w> * <var:p> * <var:q> * <var:G> $ is validated . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:seven-composite> ( <var:u> : nat ) := exists <var:F> <var:q> <var:w> <var:G> <var:g> <var:Y> <var:p> : nat , ( <var:q> >= <nat:2> ) /\ ( <var:w> >= <nat:2> ) /\ ( <var:g> >= <nat:2> ) /\ ( <var:G> >= <nat:2> ) /\ ( <var:Y> >= <nat:2> ) /\ ( <var:F> >= <nat:2> ) /\ ( <var:p> >= <nat:2> ) /\ ( <var:q> * <var:Y> * <var:G> * <var:g> * <var:F> * <var:p> * <var:w> = <var:u> ) . Theorem <genP:1> : <def:seven-composite> <nat:422400> . Proof . unfold <def:seven-composite> . exists <nat:12> . exists <nat:10> . exists <nat:5> . exists <nat:4> . exists <nat:8> . exists <nat:2> . exists <nat:11> . assert ( <genH> : <nat:10> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:12> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:2> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:5> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:4> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:8> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:11> >= <nat:2> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 