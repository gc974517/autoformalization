\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Let $ <var:W> $ , $ <var:X> $ , $ <var:w> $ , $ <var:d> $ , $ <var:n> $ , $ <var:L> $ , $ <var:J> $ be numbers . We denote that some natural number $ <var:O> $ is called a <def:seven-composite> natural number assuming $ <var:O> = <var:J> \cdot <var:W> \cdot <var:w> \cdot <var:L> \cdot <var:X> \cdot <var:n> \cdot <var:d> $ plus factors are greater than <nat:1> . Consequently the integer <nat:554400> is a <def:seven-composite> integer . \end{theorem} \begin{proof} Recall that a <def:seven-composite> is the product of positive integers $ <var:d> $ , $ <var:n> $ , $ <var:W> $ , $ <var:L> $ , $ <var:J> $ , $ <var:w> $ , $ <var:X> $ satisfying the condition that $ <var:X> $ , $ <var:W> $ , $ <var:J> $ , $ <var:n> $ , $ <var:w> $ , $ <var:d> $ and $ <var:L> > <nat:1> $ . We demonstrate <nat:554400> is a <def:seven-composite> number . Note $ <nat:3> \cdot <nat:7> \cdot <nat:12> \cdot <nat:10> \cdot <nat:11> \cdot <nat:4> \cdot <nat:5> = <var:n> \cdot <var:W> \cdot <var:X> \cdot <var:L> \cdot <var:w> \cdot <var:J> \cdot <var:d> = <nat:554400> $ . In addition notice $ <nat:5> $ , $ <nat:11> $ , $ <nat:12> $ , $ <nat:7> $ , $ <nat:3> $ , $ <nat:10> $ , $ <nat:4> > <nat:1> $ . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:seven-composite> ( <var:O> : nat ) := exists <var:W> <var:X> <var:w> <var:d> <var:n> <var:L> <var:J> : nat , ( <var:O> = <var:J> * <var:W> * <var:w> * <var:L> * <var:X> * <var:n> * <var:d> ) /\ ( <var:W> > <nat:1> ) /\ ( <var:X> > <nat:1> ) /\ ( <var:w> > <nat:1> ) /\ ( <var:d> > <nat:1> ) /\ ( <var:n> > <nat:1> ) /\ ( <var:L> > <nat:1> ) /\ ( <var:J> > <nat:1> ) . Theorem <genP:1> : <def:seven-composite> <nat:554400> . Proof . unfold <def:seven-composite> . exists <nat:7> . exists <nat:12> . exists <nat:11> . exists <nat:5> . exists <nat:3> . exists <nat:10> . exists <nat:4> . assert ( <genH> : <nat:5> > <nat:1> ) . { lia . } assert ( <genH> : <nat:11> > <nat:1> ) . { lia . } assert ( <genH> : <nat:12> > <nat:1> ) . { lia . } assert ( <genH> : <nat:7> > <nat:1> ) . { lia . } assert ( <genH> : <nat:3> > <nat:1> ) . { lia . } assert ( <genH> : <nat:10> > <nat:1> ) . { lia . } assert ( <genH> : <nat:4> > <nat:1> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 