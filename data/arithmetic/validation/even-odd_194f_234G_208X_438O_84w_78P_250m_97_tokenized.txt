\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:m> \cdot <nat:250> + <var:O> \cdot <nat:438> + <nat:97> + <var:P> \cdot <nat:78> + <nat:194> \cdot <var:f> + <var:G> \cdot <nat:234> + <var:X> \cdot <nat:208> + <nat:84> \cdot <var:w> $ must be odd . \end{theorem} \begin{proof} We prove our proposition must be true . Take note that $ <nat:97> $ is guaranteed to be odd . Observe that the expression $ <var:G> \times <nat:234> + <var:P> \times <nat:78> + <nat:97> + <var:O> \times <nat:438> + <nat:194> \times <var:f> + <var:m> \times <nat:250> + <nat:84> \times <var:w> + <var:X> \times <nat:208> $ is known as odd by reason that the expression $ <var:w> <nat:84> + <nat:194> <var:f> + <nat:250> <var:m> + <var:G> <nat:234> + <var:P> <nat:78> + <var:X> <nat:208> + <var:O> <nat:438> $ is even . The pairs $ <nat:250> \times <var:m> $ , $ <var:G> \times <nat:234> $ , $ <var:f> \times <nat:194> $ , $ <var:w> \times <nat:84> $ , $ <var:O> \times <nat:438> $ , plus $ <nat:78> \times <var:P> $ are trivially even . This fact is true because the coefficients $ <nat:250> $ , $ <nat:234> $ , $ <nat:194> $ , $ <nat:84> $ , $ <nat:438> $ , additionally $ <nat:78> $ are trivially fundamentally even numbers . Further , the integer $ <nat:208> $ is even . Then , the pair $ <var:X> \times <nat:208> $ must be even as well . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:m> <var:O> <var:P> <var:f> <var:G> <var:X> <var:w> : nat , Nat . odd ( <nat:250> * <var:m> + <nat:438> * <var:O> + <nat:78> * <var:P> + <nat:194> * <var:f> + <nat:234> * <var:G> + <nat:208> * <var:X> + <nat:84> * <var:w> + <nat:97> ) = true . Proof . intros . assert ( <genH> : Nat . odd <nat:97> = true ) . { auto . } assert ( <genH> : Nat . even <nat:250> = true ) . { auto . } assert ( <genH> : Nat . even <nat:234> = true ) . { auto . } assert ( <genH> : Nat . even <nat:194> = true ) . { auto . } assert ( <genH> : Nat . even <nat:84> = true ) . { auto . } assert ( <genH> : Nat . even <nat:438> = true ) . { auto . } assert ( <genH> : Nat . even <nat:78> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:250> * <var:m> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:234> * <var:G> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:194> * <var:f> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:84> * <var:w> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:438> * <var:O> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:78> * <var:P> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:208> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:208> * <var:X> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:250> * <var:m> + <nat:438> * <var:O> + <nat:78> * <var:P> + <nat:194> * <var:f> + <nat:234> * <var:G> + <nat:208> * <var:X> + <nat:84> * <var:w> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . rewrite <genH> . auto . Qed . 