\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:98> \times <var:r> + <var:U> \times <nat:288> + <var:G> \times <nat:254> + <var:z> \times <nat:368> + <var:H> \times <nat:296> + <var:g> \times <nat:230> + <nat:99> + <var:m> \times <nat:160> + <var:Y> \times <nat:140> $ will be odd . \end{theorem} \begin{proof} We check $ <var:r> \cdot <nat:98> + <nat:140> \cdot <var:Y> + <nat:230> \cdot <var:g> + <var:m> \cdot <nat:160> + <var:G> \cdot <nat:254> + <var:U> \cdot <nat:288> + <nat:296> \cdot <var:H> + <nat:99> + <nat:368> \cdot <var:z> $ is guaranteed to be odd . Remember the integers $ <nat:368> $ , $ <nat:230> $ , $ <nat:98> $ , $ <nat:288> $ , $ <nat:140> $ , and likewise $ <nat:160> $ are obviously even numbers in $ \mathbb{Z}^+ $ Notice the coefficient $ <nat:296> $ is known as even On top of this , see that the coefficient $ <nat:254> $ is clearly even \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:r> <var:U> <var:G> <var:z> <var:H> <var:g> <var:m> <var:Y> : nat , Nat . odd ( <nat:98> * <var:r> + <nat:288> * <var:U> + <nat:254> * <var:G> + <nat:368> * <var:z> + <nat:296> * <var:H> + <nat:230> * <var:g> + <nat:160> * <var:m> + <nat:140> * <var:Y> + <nat:99> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:368> = true ) . { auto . } assert ( <genH> : Nat . even <nat:230> = true ) . { auto . } assert ( <genH> : Nat . even <nat:98> = true ) . { auto . } assert ( <genH> : Nat . even <nat:288> = true ) . { auto . } assert ( <genH> : Nat . even <nat:140> = true ) . { auto . } assert ( <genH> : Nat . even <nat:160> = true ) . { auto . } assert ( <genH> : Nat . even <nat:296> = true ) . { auto . } assert ( <genH> : Nat . even <nat:254> = true ) . { auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . repeat rewrite Nat . even_mul . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 