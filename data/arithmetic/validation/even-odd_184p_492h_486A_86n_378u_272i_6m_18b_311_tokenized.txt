\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Assuming any variables $ <var:p> $ , $ <var:n> $ , $ <var:i> $ , $ <var:b> $ , $ <var:h> $ , $ <var:u> $ , $ <var:A> $ , and $ <var:m> $ the sum $ <nat:184> \times <var:p> + <var:h> \times <nat:492> + <nat:486> \times <var:A> + <nat:86> \times <var:n> + <nat:378> \times <var:u> + <nat:311> + <nat:272> \times <var:i> + <var:m> \times <nat:6> + <var:b> \times <nat:18> $ is odd . \end{theorem} \begin{proof} See the terms $ <nat:492> \cdot <var:h> $ , $ <nat:86> \cdot <var:n> $ , $ <nat:184> \cdot <var:p> $ , $ <nat:6> \cdot <var:m> $ , $ <var:u> \cdot <nat:378> $ , $ <nat:272> \cdot <var:i> $ , as well as $ <nat:18> \cdot <var:b> $ are guaranteed to be even integers as a consequence that the product between an even number and an arbitrary integer is guaranteed to be an even number in $ \mathbb{N} $ . What's more , we know the term $ <nat:486> \cdot <var:A> $ is known to be even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:p> <var:n> <var:i> <var:b> <var:h> <var:u> <var:A> <var:m> : nat , Nat . odd ( <nat:184> * <var:p> + <nat:492> * <var:h> + <nat:486> * <var:A> + <nat:86> * <var:n> + <nat:378> * <var:u> + <nat:272> * <var:i> + <nat:6> * <var:m> + <nat:18> * <var:b> + <nat:311> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:492> * <var:h> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:86> * <var:n> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:184> * <var:p> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:6> * <var:m> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:378> * <var:u> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:272> * <var:i> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:18> * <var:b> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:486> * <var:A> ) = true ) . { rewrite Nat . even_mul . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 