\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:u> \cdot <nat:288> + <nat:302> \cdot <var:q> + <var:y> \cdot <nat:148> + <nat:182> \cdot <var:R> + <var:f> \cdot <nat:408> + <nat:353> + <nat:214> \cdot <var:c> + <nat:424> \cdot <var:h> $ is guaranteed to be odd for some positive numbers $ <var:h> $ , $ <var:u> $ , $ <var:R> $ , $ <var:f> $ , $ <var:c> $ , $ <var:q> $ , and $ <var:y> $ . \end{theorem} \begin{proof} Recall taking the product of an even integer with any positive integer will be clearly an even positive integer . The positive integer $ <nat:408> $ is clearly an even number in $ \mathbb{N} $ The positive integers $ <nat:302> $ additionally $ <nat:288> $ are even integers Take note that the integers $ <nat:148> $ in addition to $ <nat:182> $ will be even Additionally , the number $ <nat:424> $ is guaranteed to be even On top of this , the whole number $ <nat:214> $ is trivially an even number The summing between even elements of $ \mathbb{N} $ together with an odd number in $ \mathbb{N} $ is an odd whole number . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:h> <var:u> <var:R> <var:f> <var:c> <var:q> <var:y> : nat , Nat . odd ( <nat:288> * <var:u> + <nat:302> * <var:q> + <nat:148> * <var:y> + <nat:182> * <var:R> + <nat:408> * <var:f> + <nat:214> * <var:c> + <nat:424> * <var:h> + <nat:353> ) = true . Proof . intros . rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . repeat rewrite Nat . even_mul . assert ( <genH> : Nat . even <nat:408> = true ) . { auto . } assert ( <genH> : Nat . even <nat:302> = true ) . { auto . } assert ( <genH> : Nat . even <nat:288> = true ) . { auto . } assert ( <genH> : Nat . even <nat:148> = true ) . { auto . } assert ( <genH> : Nat . even <nat:182> = true ) . { auto . } assert ( <genH> : Nat . even <nat:424> = true ) . { auto . } assert ( <genH> : Nat . even <nat:214> = true ) . { auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 