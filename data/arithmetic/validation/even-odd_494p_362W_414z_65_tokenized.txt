\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} For any integers $ <var:W> $ , $ <var:p> $ , and $ <var:z> $ $ <var:W> \cdot <nat:362> + <nat:65> + <nat:494> \cdot <var:p> + <var:z> \cdot <nat:414> $ will be odd . \end{theorem} \begin{proof} It can be shown that $ <nat:65> + <nat:414> \cdot <var:z> + <var:W> \cdot <nat:362> + <var:p> \cdot <nat:494> $ is guaranteed to be odd . It can be checked that the expression $ <nat:414> \cdot <var:z> + <nat:494> \cdot <var:p> + <nat:362> \cdot <var:W> + <nat:65> $ is clearly odd as a consequence that the expression $ <var:p> \times <nat:494> + <nat:362> \times <var:W> + <var:z> \times <nat:414> $ is clearly even . The term $ <nat:362> \times <var:W> $ is known as an even positive integer . Recall that $ <nat:414> \times <var:z> $ is guaranteed to be even . Additionally , we know the product $ <nat:494> \times <var:p> $ is known as an even number in $ \mathbb{Z}^+ $ by reason that the product between an even number in $ \mathbb{N} $ and a element of $ \mathbb{Z}^+ $ is guaranteed to be even . This main result is true from the knowledge the multiplication of an even integer with any number in $ \mathbb{N} $ must be trivially an even number in $ \mathbb{Z}^+ $ . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:W> <var:p> <var:z> : nat , Nat . odd ( <nat:362> * <var:W> + <nat:494> * <var:p> + <nat:414> * <var:z> + <nat:65> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:362> * <var:W> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:414> * <var:z> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:494> * <var:p> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:362> * <var:W> + <nat:494> * <var:p> + <nat:414> * <var:z> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . auto . Qed . 