\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Define that $ <var:W> $ is <def:eight-composite> under the condition that there exist some natural numbers $ <var:a> $ , $ <var:v> $ , $ <var:A> $ , $ <var:w> $ , $ <var:k> $ , $ <var:K> $ , $ <var:Q> $ , $ <var:S> $ such that satisfying the condition that $ <var:v> $ , $ <var:w> $ , $ <var:Q> $ , $ <var:A> $ , $ <var:S> $ , $ <var:K> $ , $ <var:k> $ , and $ <var:a> > <nat:1> $ as well as given some natural number $ <var:W> $ , $ <var:Q> \cdot <var:A> \cdot <var:v> \cdot <var:k> \cdot <var:w> \cdot <var:S> \cdot <var:a> \cdot <var:K> = <var:W> $ . Consequently the whole number <nat:7257600> is a <def:eight-composite> integer . \end{theorem} \begin{proof} Notice that $ <nat:7257600> = <var:w> * <var:A> * <var:k> * <var:v> * <var:S> * <var:a> * <var:K> * <var:Q> $ produces $ <var:v> = <nat:6> $ , $ <var:k> = <nat:12> $ , $ <var:a> = <nat:5> $ , $ <var:A> = <nat:9> $ , $ <var:Q> = <nat:8> $ , $ <var:w> = <nat:4> $ , $ <var:S> = <nat:7> $ , and $ <var:K> = <nat:10> $ . In addition notice $ <nat:6> $ , $ <nat:8> $ , $ <nat:12> $ , $ <nat:9> $ , $ <nat:5> $ , $ <nat:10> $ , $ <nat:4> $ , $ <nat:7> $ are greater than <nat:1> . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:eight-composite> ( <var:W> : nat ) := exists <var:a> <var:v> <var:A> <var:w> <var:k> <var:K> <var:Q> <var:S> : nat , ( <var:v> > <nat:1> ) /\ ( <var:w> > <nat:1> ) /\ ( <var:Q> > <nat:1> ) /\ ( <var:A> > <nat:1> ) /\ ( <var:S> > <nat:1> ) /\ ( <var:K> > <nat:1> ) /\ ( <var:k> > <nat:1> ) /\ ( <var:a> > <nat:1> ) /\ ( <var:Q> * <var:A> * <var:v> * <var:k> * <var:w> * <var:S> * <var:a> * <var:K> = <var:W> ) . Theorem <genP:1> : <def:eight-composite> <nat:7257600> . Proof . unfold <def:eight-composite> . exists <nat:5> . exists <nat:6> . exists <nat:9> . exists <nat:4> . exists <nat:12> . exists <nat:10> . exists <nat:8> . exists <nat:7> . assert ( <genH> : <nat:6> > <nat:1> ) . { lia . } assert ( <genH> : <nat:8> > <nat:1> ) . { lia . } assert ( <genH> : <nat:12> > <nat:1> ) . { lia . } assert ( <genH> : <nat:9> > <nat:1> ) . { lia . } assert ( <genH> : <nat:5> > <nat:1> ) . { lia . } assert ( <genH> : <nat:10> > <nat:1> ) . { lia . } assert ( <genH> : <nat:4> > <nat:1> ) . { lia . } assert ( <genH> : <nat:7> > <nat:1> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 