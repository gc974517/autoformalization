\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} We assume that $ <var:y> $ is <def:nine-composite> iff with some numbers $ <var:r> $ , $ <var:K> $ , $ <var:n> $ , $ <var:A> $ , $ <var:b> $ , $ <var:N> $ , $ <var:B> $ , $ <var:a> $ , $ <var:E> $ we get so that $ <var:b> $ , $ <var:n> $ , $ <var:r> $ , $ <var:A> $ , $ <var:K> $ , $ <var:B> $ , $ <var:E> $ , $ <var:N> $ , $ <var:a> > <nat:1> $ plus with some $ <var:y> $ , $ <var:r> * <var:A> * <var:B> * <var:a> * <var:K> * <var:b> * <var:E> * <var:n> * <var:N> = <var:y> $ . Therefore $ <var:y> = <nat:10644480> $ is a <def:nine-composite> integer . \end{theorem} \begin{proof} Recall a <def:nine-composite> natural number is the product between $ <var:K> $ , $ <var:E> $ , $ <var:r> $ , $ <var:N> $ , $ <var:b> $ , $ <var:n> $ , $ <var:B> $ , $ <var:a> $ , $ <var:A> $ satisfying the condition that $ <var:A> $ , $ <var:r> $ , $ <var:a> $ , $ <var:B> $ , $ <var:E> $ , $ <var:K> $ , $ <var:n> $ , $ <var:N> $ , and $ <var:b> > <nat:1> $ . Let $ <var:K> = <nat:7> $ , $ <var:r> = <nat:3> $ , $ <var:n> = <nat:6> $ , $ <var:B> = <nat:12> $ , $ <var:N> = <nat:11> $ , $ <var:A> = <nat:2> $ , $ <var:b> = <nat:10> $ , $ <var:a> = <nat:4> $ , and $ <var:E> = <nat:8> $ . Notice $ <nat:3> $ , $ <nat:8> $ , $ <nat:6> $ , $ <nat:7> $ , $ <nat:2> $ , $ <nat:11> $ , $ <nat:12> $ , $ <nat:10> $ and $ <nat:4> > <nat:1> $ . Thus , <nat:10644480> is a <def:nine-composite> positive integer has been verified . Hence , $ <var:B> $ , $ <var:N> $ , $ <var:E> $ , $ <var:a> $ , $ <var:K> $ , $ <var:r> $ , $ <var:n> $ , $ <var:A> $ , $ <var:b> $ are more than <nat:1> plus <nat:10644480> is the product of some positive integers $ <var:E> $ , $ <var:a> $ , $ <var:K> $ , $ <var:B> $ , $ <var:N> $ , $ <var:n> $ , $ <var:A> $ , $ <var:r> $ and $ <var:b> $ has been verified . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:nine-composite> ( <var:y> : nat ) := exists <var:r> <var:K> <var:n> <var:A> <var:b> <var:N> <var:B> <var:a> <var:E> : nat , ( <var:b> > <nat:1> ) /\ ( <var:n> > <nat:1> ) /\ ( <var:r> > <nat:1> ) /\ ( <var:A> > <nat:1> ) /\ ( <var:K> > <nat:1> ) /\ ( <var:B> > <nat:1> ) /\ ( <var:E> > <nat:1> ) /\ ( <var:N> > <nat:1> ) /\ ( <var:a> > <nat:1> ) /\ ( <var:r> * <var:A> * <var:B> * <var:a> * <var:K> * <var:b> * <var:E> * <var:n> * <var:N> = <var:y> ) . Theorem <genP:1> : <def:nine-composite> <nat:10644480> . Proof . unfold <def:nine-composite> . exists <nat:3> . exists <nat:7> . exists <nat:6> . exists <nat:2> . exists <nat:10> . exists <nat:11> . exists <nat:12> . exists <nat:4> . exists <nat:8> . assert ( <genH> : <nat:3> > <nat:1> ) . { lia . } assert ( <genH> : <nat:8> > <nat:1> ) . { lia . } assert ( <genH> : <nat:6> > <nat:1> ) . { lia . } assert ( <genH> : <nat:7> > <nat:1> ) . { lia . } assert ( <genH> : <nat:2> > <nat:1> ) . { lia . } assert ( <genH> : <nat:11> > <nat:1> ) . { lia . } assert ( <genH> : <nat:12> > <nat:1> ) . { lia . } assert ( <genH> : <nat:10> > <nat:1> ) . { lia . } assert ( <genH> : <nat:4> > <nat:1> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 