\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Assuming every positive integers $ <var:H> $ , $ <var:F> $ , $ <var:r> $ , $ <var:l> $ , $ <var:s> $ , and $ <var:V> $ the summation $ <nat:8> \cdot <var:l> + <nat:283> + <nat:104> \cdot <var:r> + <var:H> \cdot <nat:134> + <var:s> \cdot <nat:120> + <var:F> \cdot <nat:492> + <nat:96> \cdot <var:V> $ will be odd . \end{theorem} \begin{proof} The claim must be true as a consequence that $ <var:r> * <nat:104> + <var:s> * <nat:120> + <nat:134> * <var:H> + <var:V> * <nat:96> + <nat:492> * <var:F> + <var:l> * <nat:8> $ is clearly even , from the knowledge the addition between even numbers in $ \mathbb{N} $ collectively with an even element of $ \mathbb{N} $ will be clearly an even integer . Take note that the pairs $ <var:F> * <nat:492> $ , $ <nat:8> * <var:l> $ , $ <var:s> * <nat:120> $ , and likewise $ <var:V> * <nat:96> $ are known to be even . In addition , observe that the term $ <var:H> * <nat:134> $ is trivially an even number in $ \mathbb{Z}^+ $ . We know $ <var:r> * <nat:104> $ is clearly even . in addition to by reason that the product between even elements of $ \mathbb{N} $ and a number in $ \mathbb{N} $ must be even the formula $ <var:H> <nat:134> + <var:V> <nat:96> + <var:s> <nat:120> + <nat:492> <var:F> + <var:r> <nat:104> + <var:l> <nat:8> $ must be by itself even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:H> <var:F> <var:r> <var:l> <var:s> <var:V> : nat , Nat . odd ( <nat:8> * <var:l> + <nat:104> * <var:r> + <nat:134> * <var:H> + <nat:120> * <var:s> + <nat:492> * <var:F> + <nat:96> * <var:V> + <nat:283> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:492> * <var:F> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:8> * <var:l> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:120> * <var:s> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:96> * <var:V> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:134> * <var:H> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:104> * <var:r> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:8> * <var:l> + <nat:104> * <var:r> + <nat:134> * <var:H> + <nat:120> * <var:s> + <nat:492> * <var:F> + <nat:96> * <var:V> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . auto . Qed . 