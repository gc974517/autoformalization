\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Taking any positive integers $ <var:G> $ , $ <var:o> $ , $ <var:W> $ , $ <var:q> $ , $ <var:t> $ , $ <var:Y> $ , $ <var:r> $ , and $ <var:e> $ $ <nat:52> * <var:W> + <nat:394> * <var:t> + <var:r> * <nat:492> + <var:q> * <nat:30> + <var:G> * <nat:20> + <var:o> * <nat:206> + <nat:158> * <var:Y> + <nat:442> + <nat:472> * <var:e> $ is guaranteed to be even . \end{theorem} \begin{proof} We apply the knowledge $ <var:t> * <nat:394> + <var:W> * <nat:52> + <var:r> * <nat:492> + <nat:20> * <var:G> + <nat:206> * <var:o> + <var:Y> * <nat:158> + <nat:30> * <var:q> + <nat:472> * <var:e> $ is known to be even . $ <nat:206> \times <var:o> $ is guaranteed to be an even whole number . This must be true from the knowledge multiplying between an even number in $ \mathbb{N} $ with any number in $ \mathbb{N} $ will be even . This claim is true since the number $ <nat:206> $ is trivially fundamentally an even positive integer . In addition , the pair $ <nat:394> \times <var:t> $ is trivially even . This claim must be true as a consequence that the integer $ <nat:394> $ is guaranteed to be an even element of $ \mathbb{Z}^+ $ . The leading term $ <nat:30> $ is trivially an even whole number . Consequently , the product $ <nat:30> \times <var:q> $ is even too . In addition , the pair $ <var:r> \times <nat:492> $ is trivially an even integer by reason that the integer $ <nat:492> $ is obviously an even element of $ \mathbb{Z}^+ $ . On top of this , the integer $ <nat:20> $ is trivially an even number in $ \mathbb{Z}^+ $ . As a consequence , $ <nat:20> \times <var:G> $ is even in addition . Likewise , take note that the term $ <nat:158> \times <var:Y> $ is known as even . This holds by reason that taking the product of an even element of $ \mathbb{Z}^+ $ with some positive integer must be even , and is true from the fact the integer $ <nat:158> $ is guaranteed to be even . Recall that the product $ <nat:472> \times <var:e> $ is even . This fact holds because the whole number $ <nat:472> $ is an even natural . Recall the positive integer $ <nat:52> $ is trivially an even number in $ \mathbb{N} $ . Thus , the pair $ <nat:52> \times <var:W> $ must be even also . By reason that the totaling between an even number and an even natural number must be even , the proposition is proven . It can be checked that the expression $ <nat:158> * <var:Y> + <var:q> * <nat:30> + <var:t> * <nat:394> + <nat:492> * <var:r> + <var:o> * <nat:206> + <var:W> * <nat:52> + <nat:472> * <var:e> + <nat:20> * <var:G> + <nat:442> $ will be even . See the summation between even numbers concurrently is guaranteed to be even . Notice $ <nat:442> $ is clearly an even natural . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:G> <var:o> <var:W> <var:q> <var:t> <var:Y> <var:r> <var:e> : nat , Nat . even ( <nat:52> * <var:W> + <nat:394> * <var:t> + <nat:492> * <var:r> + <nat:30> * <var:q> + <nat:20> * <var:G> + <nat:206> * <var:o> + <nat:158> * <var:Y> + <nat:472> * <var:e> + <nat:442> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:206> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:206> * <var:o> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:394> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:394> * <var:t> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:30> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:30> * <var:q> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:492> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:492> * <var:r> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:20> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:20> * <var:G> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:158> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:158> * <var:Y> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:472> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:472> * <var:e> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:52> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:52> * <var:W> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:52> * <var:W> + <nat:394> * <var:t> + <nat:492> * <var:r> + <nat:30> * <var:q> + <nat:20> * <var:G> + <nat:206> * <var:o> + <nat:158> * <var:Y> + <nat:472> * <var:e> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . even_add . assert ( <genH> : Nat . even <nat:442> = true ) . { auto . } rewrite <genH> . rewrite <genH> . auto . Qed . 