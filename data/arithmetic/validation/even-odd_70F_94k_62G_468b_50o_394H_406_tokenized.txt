\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Using all positive numbers $ <var:b> $ , $ <var:F> $ , $ <var:G> $ , $ <var:H> $ , $ <var:o> $ , and $ <var:k> $ the formula $ <var:b> * <nat:468> + <var:H> * <nat:394> + <nat:70> * <var:F> + <nat:50> * <var:o> + <nat:406> + <nat:94> * <var:k> + <var:G> * <nat:62> $ will be even . \end{theorem} \begin{proof} This claim is true from the knowledge $ <var:H> \cdot <nat:394> + <nat:62> \cdot <var:G> + <nat:50> \cdot <var:o> + <nat:70> \cdot <var:F> + <var:k> \cdot <nat:94> + <nat:468> \cdot <var:b> $ is obviously even . The products $ <nat:468> \cdot <var:b> $ , $ <var:o> \cdot <nat:50> $ , $ <var:H> \cdot <nat:394> $ , in addition to $ <var:F> \cdot <nat:70> $ are guaranteed to be even positive integers because the coefficients $ <nat:468> $ , $ <nat:50> $ , $ <nat:394> $ , and moreover $ <nat:70> $ are even elements of $ \mathbb{N} $ . Recall the positive integer $ <nat:62> $ is obviously an even whole number . For this reason , the product $ <var:G> \cdot <nat:62> $ is even at the same time . The coefficient $ <nat:94> $ is clearly even . As a consequence , the pair $ <var:k> \cdot <nat:94> $ is even at the same time . Notice the summation of an even number and an even number in $ \mathbb{N} $ will be itself an even whole number . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:b> <var:F> <var:G> <var:H> <var:o> <var:k> : nat , Nat . even ( <nat:468> * <var:b> + <nat:394> * <var:H> + <nat:70> * <var:F> + <nat:50> * <var:o> + <nat:94> * <var:k> + <nat:62> * <var:G> + <nat:406> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:468> = true ) . { auto . } assert ( <genH> : Nat . even <nat:50> = true ) . { auto . } assert ( <genH> : Nat . even <nat:394> = true ) . { auto . } assert ( <genH> : Nat . even <nat:70> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:468> * <var:b> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:50> * <var:o> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:394> * <var:H> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:70> * <var:F> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:62> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:62> * <var:G> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:94> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:94> * <var:k> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:468> * <var:b> + <nat:394> * <var:H> + <nat:70> * <var:F> + <nat:50> * <var:o> + <nat:94> * <var:k> + <nat:62> * <var:G> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . even_add . rewrite <genH> . auto . Qed . 