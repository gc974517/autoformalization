\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:494> \cdot <var:D> + <var:x> \cdot <nat:14> + <nat:416> \cdot <var:q> + <var:X> \cdot <nat:440> + <nat:78> \cdot <var:J> + <nat:136> \cdot <var:H> + <nat:382> + <nat:334> \cdot <var:O> + <nat:232> \cdot <var:C> $ is even given some variables $ <var:D> $ , $ <var:O> $ , $ <var:C> $ , $ <var:H> $ , $ <var:X> $ , $ <var:q> $ , $ <var:x> $ , and $ <var:J> $ . \end{theorem} \begin{proof} $ <nat:334> \times <var:O> + <nat:382> + <nat:78> \times <var:J> + <var:C> \times <nat:232> + <var:x> \times <nat:14> + <var:q> \times <nat:416> + <var:H> \times <nat:136> + <var:D> \times <nat:494> + <var:X> \times <nat:440> $ is guaranteed to be even since the sum $ <var:D> \cdot <nat:494> + <var:q> \cdot <nat:416> + <nat:334> \cdot <var:O> + <var:H> \cdot <nat:136> + <nat:14> \cdot <var:x> + <nat:78> \cdot <var:J> + <nat:232> \cdot <var:C> + <var:X> \cdot <nat:440> $ is clearly even . The coefficients $ <nat:136> $ , $ <nat:78> $ , $ <nat:416> $ , and also $ <nat:232> $ are known to be even . Thus , the pairs $ <nat:136> \times <var:H> $ , $ <nat:78> \times <var:J> $ , $ <var:q> \times <nat:416> $ , additionally $ <var:C> \times <nat:232> $ is even too . The integers $ <nat:14> $ and moreover $ <nat:494> $ are guaranteed to be even . Then , the terms $ <nat:14> \times <var:x> $ additionally $ <nat:494> \times <var:D> $ is even as well . Recall that the number $ <nat:440> $ is an even element of $ \mathbb{Z}^+ $ . Therefore , $ <var:X> \times <nat:440> $ is guaranteed to be even at the same time . Further , the pair $ <nat:334> \times <var:O> $ is known as even since multiplying of an even natural number and an arbitrary positive integer must be even and likewise the positive integer $ <nat:334> $ is trivially even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:D> <var:O> <var:C> <var:H> <var:X> <var:q> <var:x> <var:J> : nat , Nat . even ( <nat:494> * <var:D> + <nat:14> * <var:x> + <nat:416> * <var:q> + <nat:440> * <var:X> + <nat:78> * <var:J> + <nat:136> * <var:H> + <nat:334> * <var:O> + <nat:232> * <var:C> + <nat:382> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:136> = true ) . { auto . } assert ( <genH> : Nat . even <nat:78> = true ) . { auto . } assert ( <genH> : Nat . even <nat:416> = true ) . { auto . } assert ( <genH> : Nat . even <nat:232> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:136> * <var:H> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:78> * <var:J> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:416> * <var:q> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:232> * <var:C> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:14> = true ) . { auto . } assert ( <genH> : Nat . even <nat:494> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:14> * <var:x> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:494> * <var:D> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:440> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:440> * <var:X> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:334> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:334> * <var:O> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:494> * <var:D> + <nat:14> * <var:x> + <nat:416> * <var:q> + <nat:440> * <var:X> + <nat:78> * <var:J> + <nat:136> * <var:H> + <nat:334> * <var:O> + <nat:232> * <var:C> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . even_add . rewrite <genH> . auto . Qed . 