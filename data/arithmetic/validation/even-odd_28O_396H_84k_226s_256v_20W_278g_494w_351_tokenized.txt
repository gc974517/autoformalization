\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} With $ <var:v> $ , $ <var:g> $ , $ <var:W> $ , $ <var:s> $ , $ <var:k> $ , $ <var:H> $ , $ <var:w> $ , and $ <var:O> $ $ <var:v> \times <nat:256> + <var:g> \times <nat:278> + <var:s> \times <nat:226> + <var:O> \times <nat:28> + <nat:494> \times <var:w> + <nat:396> \times <var:H> + <nat:84> \times <var:k> + <nat:351> + <nat:20> \times <var:W> $ is odd . \end{theorem} \begin{proof} Recall $ <nat:494> \cdot <var:w> + <var:O> \cdot <nat:28> + <var:s> \cdot <nat:226> + <nat:256> \cdot <var:v> + <nat:351> + <var:k> \cdot <nat:84> + <nat:278> \cdot <var:g> + <var:W> \cdot <nat:20> + <var:H> \cdot <nat:396> $ is obviously odd because the expression $ <nat:494> * <var:w> + <nat:278> * <var:g> + <nat:84> * <var:k> + <var:H> * <nat:396> + <nat:20> * <var:W> + <var:O> * <nat:28> + <nat:226> * <var:s> + <var:v> * <nat:256> $ is known as even . The products $ <var:g> * <nat:278> $ , $ <nat:396> * <var:H> $ , $ <nat:226> * <var:s> $ , $ <nat:256> * <var:v> $ , $ <var:W> * <nat:20> $ , $ <nat:84> * <var:k> $ , additionally $ <var:w> * <nat:494> $ are known to be even numbers as a consequence that multiplying between an even element of $ \mathbb{Z}^+ $ and any number is guaranteed to be an even number . In addition , the term $ <nat:28> * <var:O> $ is trivially an even integer . $ <nat:28> <var:O> + <var:H> <nat:396> + <var:k> <nat:84> + <var:s> <nat:226> + <nat:256> <var:v> + <var:W> <nat:20> + <var:g> <nat:278> + <var:w> <nat:494> $ is guaranteed to be even as a consequence that multiplying of even numbers in $ \mathbb{Z}^+ $ with any number in $ \mathbb{N} $ must be even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:v> <var:g> <var:W> <var:s> <var:k> <var:H> <var:w> <var:O> : nat , Nat . odd ( <nat:256> * <var:v> + <nat:278> * <var:g> + <nat:226> * <var:s> + <nat:28> * <var:O> + <nat:494> * <var:w> + <nat:396> * <var:H> + <nat:84> * <var:k> + <nat:20> * <var:W> + <nat:351> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:278> * <var:g> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:396> * <var:H> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:226> * <var:s> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:256> * <var:v> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:20> * <var:W> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:84> * <var:k> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:494> * <var:w> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:28> * <var:O> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:256> * <var:v> + <nat:278> * <var:g> + <nat:226> * <var:s> + <nat:28> * <var:O> + <nat:494> * <var:w> + <nat:396> * <var:H> + <nat:84> * <var:k> + <nat:20> * <var:W> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . auto . Qed . 