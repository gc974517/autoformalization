\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Assume $ <var:l> $ , $ <var:b> $ , $ <var:I> $ , $ <var:e> $ , $ <var:C> $ , $ <var:v> $ , $ <var:n> $ and $ <var:O> \in \mathbb{N} $ such that $ <var:l> $ , $ <var:v> $ , $ <var:n> $ , $ <var:O> $ , $ <var:I> $ , $ <var:e> $ , $ <var:b> $ , and $ <var:C> $ more than or equivalent to <nat:2> as well as so that $ <nat:1900800> $ is the same as $ <var:e> \cdot <var:C> \cdot <var:I> \cdot <var:O> \cdot <var:l> \cdot <var:v> \cdot <var:n> \cdot <var:b> $ . \end{theorem} \begin{proof} Take $ <var:b> = <nat:11> $ , $ <var:l> = <nat:3> $ , $ <var:O> = <nat:10> $ , $ <var:C> = <nat:8> $ , $ <var:n> = <nat:12> $ , $ <var:e> = <nat:5> $ , $ <var:I> = <nat:6> $ , and $ <var:v> = <nat:2> $ . Observe $ <nat:1900800> = <var:l> * <var:n> * <var:C> * <var:I> * <var:b> * <var:O> * <var:e> * <var:v> $ . Additionally observe $ <nat:12> $ , $ <nat:2> $ , $ <nat:11> $ , $ <nat:6> $ , $ <nat:3> $ , $ <nat:10> $ , $ <nat:5> $ , $ <nat:8> $ are greater than or equivalent to <nat:2> . \end{proof} \end{document} 
~
Require Import Lia . Theorem <genP:1> : exists <var:l> <var:b> <var:I> <var:e> <var:C> <var:v> <var:n> <var:O> : nat , ( <var:l> >= <nat:2> ) /\ ( <var:v> >= <nat:2> ) /\ ( <var:n> >= <nat:2> ) /\ ( <var:O> >= <nat:2> ) /\ ( <var:I> >= <nat:2> ) /\ ( <var:e> >= <nat:2> ) /\ ( <var:b> >= <nat:2> ) /\ ( <var:C> >= <nat:2> ) /\ ( <nat:1900800> = <var:e> * <var:C> * <var:I> * <var:O> * <var:l> * <var:v> * <var:n> * <var:b> ) . Proof . exists <nat:3> . exists <nat:11> . exists <nat:6> . exists <nat:5> . exists <nat:8> . exists <nat:2> . exists <nat:12> . exists <nat:10> . assert ( <genH> : <nat:12> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:2> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:11> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:6> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:3> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:10> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:5> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:8> >= <nat:2> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 