\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Assume $ <var:L> $ , $ <var:Y> $ , $ <var:A> $ , $ <var:v> $ , $ <var:V> $ , $ <var:K> $ , and $ <var:g> $ are numbers so that $ <var:K> $ , $ <var:A> $ , $ <var:g> $ , $ <var:L> $ , $ <var:v> $ , $ <var:V> $ , $ <var:Y> > <nat:1> $ and where $ <var:V> \times <var:v> \times <var:g> \times <var:K> \times <var:Y> \times <var:L> \times <var:A> $ equals $ <nat:798336> $ . \end{theorem} \begin{proof} Note that $ <nat:798336> = <var:g> \cdot <var:Y> \cdot <var:A> \cdot <var:K> \cdot <var:V> \cdot <var:v> \cdot <var:L> $ implies $ <var:A> = <nat:9> $ , $ <var:v> = <nat:6> $ , $ <var:Y> = <nat:11> $ , $ <var:V> = <nat:7> $ , $ <var:g> = <nat:2> $ , $ <var:L> = <nat:8> $ , $ <var:K> = <nat:12> $ . Additionally note $ <nat:8> $ , $ <nat:6> $ , $ <nat:7> $ , $ <nat:2> $ , $ <nat:11> $ , $ <nat:9> $ , $ <nat:12> > <nat:1> $ . Because of this , <nat:798336> is the product of $ <var:g> $ , $ <var:V> $ , $ <var:A> $ , $ <var:K> $ , $ <var:L> $ , $ <var:v> $ , and $ <var:Y> \in \mathbb{Z}^+ $ as well as $ <var:Y> $ , $ <var:v> $ , $ <var:g> $ , $ <var:V> $ , $ <var:L> $ , $ <var:K> $ , and $ <var:A> > <nat:1> $ is validated . \end{proof} \end{document} 
~
Require Import Lia . Theorem <genP:1> : exists <var:L> <var:Y> <var:A> <var:v> <var:V> <var:K> <var:g> : nat , ( <var:K> > <nat:1> ) /\ ( <var:A> > <nat:1> ) /\ ( <var:g> > <nat:1> ) /\ ( <var:L> > <nat:1> ) /\ ( <var:v> > <nat:1> ) /\ ( <var:V> > <nat:1> ) /\ ( <var:Y> > <nat:1> ) /\ ( <var:V> * <var:v> * <var:g> * <var:K> * <var:Y> * <var:L> * <var:A> = <nat:798336> ) . Proof . exists <nat:8> . exists <nat:11> . exists <nat:9> . exists <nat:6> . exists <nat:7> . exists <nat:12> . exists <nat:2> . assert ( <genH> : <nat:8> > <nat:1> ) . { lia . } assert ( <genH> : <nat:6> > <nat:1> ) . { lia . } assert ( <genH> : <nat:7> > <nat:1> ) . { lia . } assert ( <genH> : <nat:2> > <nat:1> ) . { lia . } assert ( <genH> : <nat:11> > <nat:1> ) . { lia . } assert ( <genH> : <nat:9> > <nat:1> ) . { lia . } assert ( <genH> : <nat:12> > <nat:1> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 