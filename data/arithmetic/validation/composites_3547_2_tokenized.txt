\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \newtheorem{definition}{Definition} \begin{document} \begin{definition} Allow $ <var:Y> $ , $ <var:B> \in \mathbb{N} $ satisfying the condition that $ <var:Y> $ , $ <var:B> > <nat:1> $ . Take that some positive integer $ <var:k> $ will be named a <def:two-composite> number when $ <var:B> * <var:Y> = <var:k> $ . \end{definition} \begin{theorem} The whole number <nat:44> is a <def:two-composite> integer . \end{theorem} \begin{proof} Let $ <var:B> = <nat:4> $ and $ <var:Y> = <nat:11> $ . Note that $ <var:B> = <nat:4> $ , $ <var:Y> = <nat:11> > <nat:1> $ . Further note too $ <nat:44> = <var:Y> \times <var:B> = <nat:11> \times <nat:4> $ . As a result , $ <var:B> $ , $ <var:Y> > <nat:1> $ plus $ <nat:44> = <var:Y> \times <var:B> $ is validated . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:two-composite> ( <var:k> : nat ) := exists <var:Y> <var:B> : nat , ( <var:Y> > <nat:1> ) /\ ( <var:B> > <nat:1> ) /\ ( <var:B> * <var:Y> = <var:k> ) . Theorem <genP:1> : <def:two-composite> <nat:44> . Proof . unfold <def:two-composite> . exists <nat:11> . exists <nat:4> . assert ( <genH> : <nat:4> > <nat:1> ) . { lia . } assert ( <genH> : <nat:11> > <nat:1> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . Qed . 