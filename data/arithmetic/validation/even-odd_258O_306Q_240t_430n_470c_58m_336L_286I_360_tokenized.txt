\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:258> <var:O> + <nat:306> <var:Q> + <nat:240> <var:t> + <nat:360> + <var:n> <nat:430> + <var:c> <nat:470> + <var:m> <nat:58> + <var:L> <nat:336> + <var:I> <nat:286> $ will be even for all $ <var:m> $ , $ <var:c> $ , $ <var:Q> $ , $ <var:t> $ , $ <var:I> $ , $ <var:n> $ , $ <var:L> $ , and $ <var:O> $ . \end{theorem} \begin{proof} Adding on , the pairs $ <var:O> * <nat:258> $ , $ <nat:306> * <var:Q> $ , $ <var:t> * <nat:240> $ , $ <var:n> * <nat:430> $ , $ <nat:470> * <var:c> $ , $ <nat:58> * <var:m> $ , $ <nat:336> * <var:L> $ , additionally $ <var:I> * <nat:286> $ are trivially even because multiplying of an even number with any number in $ \mathbb{N} $ will be itself an even integer , and must be true because the whole numbers $ <nat:258> $ , $ <nat:306> $ , $ <nat:240> $ , $ <nat:430> $ , $ <nat:470> $ , $ <nat:58> $ , $ <nat:336> $ , and also $ <nat:286> $ will be even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:m> <var:c> <var:Q> <var:t> <var:I> <var:n> <var:L> <var:O> : nat , Nat . even ( <nat:258> * <var:O> + <nat:306> * <var:Q> + <nat:240> * <var:t> + <nat:430> * <var:n> + <nat:470> * <var:c> + <nat:58> * <var:m> + <nat:336> * <var:L> + <nat:286> * <var:I> + <nat:360> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:258> = true ) . { auto . } assert ( <genH> : Nat . even <nat:306> = true ) . { auto . } assert ( <genH> : Nat . even <nat:240> = true ) . { auto . } assert ( <genH> : Nat . even <nat:430> = true ) . { auto . } assert ( <genH> : Nat . even <nat:470> = true ) . { auto . } assert ( <genH> : Nat . even <nat:58> = true ) . { auto . } assert ( <genH> : Nat . even <nat:336> = true ) . { auto . } assert ( <genH> : Nat . even <nat:286> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:258> * <var:O> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:306> * <var:Q> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:240> * <var:t> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:430> * <var:n> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:470> * <var:c> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:58> * <var:m> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:336> * <var:L> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:286> * <var:I> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 