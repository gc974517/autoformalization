\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:400> + <nat:208> * <var:E> + <nat:100> * <var:r> + <var:q> * <nat:482> + <var:M> * <nat:50> + <var:j> * <nat:380> + <nat:162> * <var:J> + <nat:10> * <var:n> + <nat:114> * <var:U> $ is even . \end{theorem} \begin{proof} The products $ <var:r> <nat:100> $ , $ <nat:380> <var:j> $ , $ <var:q> <nat:482> $ , $ <var:M> <nat:50> $ , and moreover $ <var:J> <nat:162> $ must be even . Recall the term $ <nat:114> <var:U> $ is obviously an even whole number . This claim is true because taking the product between an even whole number and some natural number must be even . The term $ <nat:208> <var:E> $ is trivially an even positive integer . The pair $ <nat:10> <var:n> $ is an even whole number . Recall that $ <nat:400> $ is guaranteed to be an even integer . We justify $ <nat:400> + <nat:162> <var:J> + <var:U> <nat:114> + <nat:380> <var:j> + <var:M> <nat:50> + <var:E> <nat:208> + <nat:482> <var:q> + <nat:100> <var:r> + <nat:10> <var:n> $ will be even . See that the totaling between an even element of $ \mathbb{N} $ with an even number must be even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:E> <var:r> <var:q> <var:M> <var:j> <var:J> <var:n> <var:U> : nat , Nat . even ( <nat:208> * <var:E> + <nat:100> * <var:r> + <nat:482> * <var:q> + <nat:50> * <var:M> + <nat:380> * <var:j> + <nat:162> * <var:J> + <nat:10> * <var:n> + <nat:114> * <var:U> + <nat:400> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:100> * <var:r> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:380> * <var:j> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:482> * <var:q> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:50> * <var:M> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:162> * <var:J> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:114> * <var:U> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:208> * <var:E> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:10> * <var:n> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even <nat:400> = true ) . { auto . } repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 