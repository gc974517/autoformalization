\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Allow $ <var:x> $ , $ <var:X> $ , $ <var:P> $ , $ <var:w> $ , $ <var:z> $ , $ <var:K> $ , $ <var:G> $ , $ <var:E> \in \mathbb{N} $ greater than or equal to <nat:2> . Denote that $ <var:N> \in \mathbb{N} $ will be considered to be a <def:eight-composite> number when $ <var:G> \times <var:x> \times <var:w> \times <var:z> \times <var:K> \times <var:P> \times <var:E> \times <var:X> = <var:N> $ . Thus $ <var:N> = <nat:760320> $ is a <def:eight-composite> natural number . \end{theorem} \begin{proof} Take $ <var:x> = <nat:4> $ , $ <var:w> = <nat:5> $ , $ <var:G> = <nat:3> $ , $ <var:E> = <nat:11> $ , $ <var:X> = <nat:8> $ , $ <var:z> = <nat:12> $ , $ <var:P> = <nat:2> $ , $ <var:K> = <nat:6> $ . Observe that $ <nat:8> $ , $ <nat:2> $ , $ <nat:5> $ , $ <nat:6> $ , $ <nat:4> $ , $ <nat:12> $ , $ <nat:3> $ and $ <nat:11> \geq <nat:2> $ . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:eight-composite> ( <var:N> : nat ) := exists <var:x> <var:X> <var:P> <var:w> <var:z> <var:K> <var:G> <var:E> : nat , ( <var:x> >= <nat:2> ) /\ ( <var:X> >= <nat:2> ) /\ ( <var:P> >= <nat:2> ) /\ ( <var:w> >= <nat:2> ) /\ ( <var:z> >= <nat:2> ) /\ ( <var:K> >= <nat:2> ) /\ ( <var:G> >= <nat:2> ) /\ ( <var:E> >= <nat:2> ) /\ ( <var:G> * <var:x> * <var:w> * <var:z> * <var:K> * <var:P> * <var:E> * <var:X> = <var:N> ) . Theorem <genP:1> : <def:eight-composite> <nat:760320> . Proof . unfold <def:eight-composite> . exists <nat:4> . exists <nat:8> . exists <nat:2> . exists <nat:5> . exists <nat:12> . exists <nat:6> . exists <nat:3> . exists <nat:11> . assert ( <genH> : <nat:8> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:2> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:5> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:6> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:4> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:12> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:3> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:11> >= <nat:2> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 