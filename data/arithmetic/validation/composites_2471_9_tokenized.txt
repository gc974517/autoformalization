\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \newtheorem{definition}{Definition} \begin{document} \begin{definition} Let that $ <var:r> $ is a <def:nine-composite> whole number assuming there exist some $ <var:g> $ , $ <var:f> $ , $ <var:h> $ , $ <var:l> $ , $ <var:p> $ , $ <var:K> $ , $ <var:U> $ , $ <var:u> $ , $ <var:s> $ where such that $ <var:l> $ , $ <var:u> $ , $ <var:g> $ , $ <var:U> $ , $ <var:p> $ , $ <var:s> $ , $ <var:K> $ , $ <var:f> $ , $ <var:h> > <nat:1> $ plus using $ <var:r> \in \mathbb{N} $ , $ <var:r> = <var:p> * <var:g> * <var:s> * <var:K> * <var:l> * <var:h> * <var:f> * <var:U> * <var:u> $ . \end{definition} \begin{theorem} $ <nat:11975040> = <var:r> $ is a <def:nine-composite> positive integer . \end{theorem} \begin{proof} Recall a <def:nine-composite> is the product between natural numbers $ <var:p> $ , $ <var:h> $ , $ <var:u> $ , $ <var:U> $ , $ <var:f> $ , $ <var:s> $ , $ <var:g> $ , $ <var:K> $ , and $ <var:l> $ greater than <nat:1> . We verify <nat:11975040> is a <def:nine-composite> positive integer considering $ <nat:5> \times <nat:9> \times <nat:3> \times <nat:12> \times <nat:8> \times <nat:11> \times <nat:7> \times <nat:2> \times <nat:6> = <nat:11975040> $ and for $ <nat:12> $ , $ <nat:2> $ , $ <nat:7> $ , $ <nat:6> $ , $ <nat:3> $ , $ <nat:9> $ , $ <nat:5> $ , $ <nat:8> $ , $ <nat:11> > <nat:1> $ . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:nine-composite> ( <var:r> : nat ) := exists <var:g> <var:f> <var:h> <var:l> <var:p> <var:K> <var:U> <var:u> <var:s> : nat , ( <var:l> > <nat:1> ) /\ ( <var:u> > <nat:1> ) /\ ( <var:g> > <nat:1> ) /\ ( <var:U> > <nat:1> ) /\ ( <var:p> > <nat:1> ) /\ ( <var:s> > <nat:1> ) /\ ( <var:K> > <nat:1> ) /\ ( <var:f> > <nat:1> ) /\ ( <var:h> > <nat:1> ) /\ ( <var:r> = <var:p> * <var:g> * <var:s> * <var:K> * <var:l> * <var:h> * <var:f> * <var:U> * <var:u> ) . Theorem <genP:1> : <def:nine-composite> <nat:11975040> . Proof . unfold <def:nine-composite> . exists <nat:12> . exists <nat:3> . exists <nat:5> . exists <nat:8> . exists <nat:2> . exists <nat:6> . exists <nat:11> . exists <nat:9> . exists <nat:7> . assert ( <genH> : <nat:12> > <nat:1> ) . { lia . } assert ( <genH> : <nat:2> > <nat:1> ) . { lia . } assert ( <genH> : <nat:7> > <nat:1> ) . { lia . } assert ( <genH> : <nat:6> > <nat:1> ) . { lia . } assert ( <genH> : <nat:3> > <nat:1> ) . { lia . } assert ( <genH> : <nat:9> > <nat:1> ) . { lia . } assert ( <genH> : <nat:5> > <nat:1> ) . { lia . } assert ( <genH> : <nat:8> > <nat:1> ) . { lia . } assert ( <genH> : <nat:11> > <nat:1> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 