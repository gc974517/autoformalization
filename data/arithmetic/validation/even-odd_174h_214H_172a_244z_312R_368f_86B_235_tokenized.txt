\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} For all variables $ <var:H> $ , $ <var:a> $ , $ <var:R> $ , $ <var:h> $ , $ <var:B> $ , $ <var:f> $ , and $ <var:z> $ the formula $ <nat:312> * <var:R> + <nat:368> * <var:f> + <nat:174> * <var:h> + <var:a> * <nat:172> + <var:B> * <nat:86> + <nat:235> + <nat:214> * <var:H> + <var:z> * <nat:244> $ must be odd . \end{theorem} \begin{proof} Take note that the sum $ <nat:174> \times <var:h> + <nat:214> \times <var:H> + <nat:172> \times <var:a> + <nat:244> \times <var:z> + <var:R> \times <nat:312> + <var:f> \times <nat:368> + <var:B> \times <nat:86> $ is guaranteed to be even . See that the terms $ <nat:86> <var:B> $ plus $ <nat:368> <var:f> $ are clearly even . Building on , notice the terms $ <var:h> <nat:174> $ , $ <nat:244> <var:z> $ , $ <var:H> <nat:214> $ , plus $ <var:a> <nat:172> $ are obviously even naturals . This fact is proven by reason that multiplying between an even element of $ \mathbb{Z}^+ $ with an arbitrary element of $ \mathbb{N} $ must be an even number . Further , the product $ <nat:312> <var:R> $ is even because the multiplication between an even element of $ \mathbb{Z}^+ $ and any natural is guaranteed to be an even number in $ \mathbb{Z}^+ $ . The summation between even numbers in $ \mathbb{N} $ successively with an odd number in $ \mathbb{Z}^+ $ is an odd element of $ \mathbb{N} $ . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:H> <var:a> <var:R> <var:h> <var:B> <var:f> <var:z> : nat , Nat . odd ( <nat:312> * <var:R> + <nat:368> * <var:f> + <nat:174> * <var:h> + <nat:172> * <var:a> + <nat:86> * <var:B> + <nat:214> * <var:H> + <nat:244> * <var:z> + <nat:235> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:86> * <var:B> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:368> * <var:f> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:174> * <var:h> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:244> * <var:z> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:214> * <var:H> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:172> * <var:a> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:312> * <var:R> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:312> * <var:R> + <nat:368> * <var:f> + <nat:174> * <var:h> + <nat:172> * <var:a> + <nat:86> * <var:B> + <nat:214> * <var:H> + <nat:244> * <var:z> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . auto . Qed . 