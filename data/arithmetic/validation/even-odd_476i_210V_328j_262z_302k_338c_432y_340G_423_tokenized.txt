\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Taking some whole numbers $ <var:k> $ , $ <var:G> $ , $ <var:V> $ , $ <var:y> $ , $ <var:i> $ , $ <var:j> $ , $ <var:z> $ , and $ <var:c> $ the formula $ <var:i> <nat:476> + <nat:210> <var:V> + <var:j> <nat:328> + <var:z> <nat:262> + <nat:423> + <var:k> <nat:302> + <var:c> <nat:338> + <nat:432> <var:y> + <nat:340> <var:G> $ must be odd . \end{theorem} \begin{proof} See that $ <nat:423> $ is obviously odd . The totaling between an even natural number and an odd integer will be an odd number in $ \mathbb{Z}^+ $ . On top of this , remember that the whole numbers $ <nat:476> $ , $ <nat:210> $ , $ <nat:328> $ , $ <nat:262> $ , $ <nat:302> $ , $ <nat:338> $ , $ <nat:432> $ , as well as $ <nat:340> $ are obviously even . So , the products $ <var:i> \times <nat:476> $ , $ <var:V> \times <nat:210> $ , $ <var:j> \times <nat:328> $ , $ <var:z> \times <nat:262> $ , $ <nat:302> \times <var:k> $ , $ <var:c> \times <nat:338> $ , $ <var:y> \times <nat:432> $ , and $ <nat:340> \times <var:G> $ will be even additionally . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:k> <var:G> <var:V> <var:y> <var:i> <var:j> <var:z> <var:c> : nat , Nat . odd ( <nat:476> * <var:i> + <nat:210> * <var:V> + <nat:328> * <var:j> + <nat:262> * <var:z> + <nat:302> * <var:k> + <nat:338> * <var:c> + <nat:432> * <var:y> + <nat:340> * <var:G> + <nat:423> ) = true . Proof . intros . assert ( <genH> : Nat . odd <nat:423> = true ) . { auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . assert ( <genH> : Nat . even <nat:476> = true ) . { auto . } assert ( <genH> : Nat . even <nat:210> = true ) . { auto . } assert ( <genH> : Nat . even <nat:328> = true ) . { auto . } assert ( <genH> : Nat . even <nat:262> = true ) . { auto . } assert ( <genH> : Nat . even <nat:302> = true ) . { auto . } assert ( <genH> : Nat . even <nat:338> = true ) . { auto . } assert ( <genH> : Nat . even <nat:432> = true ) . { auto . } assert ( <genH> : Nat . even <nat:340> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:476> * <var:i> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:210> * <var:V> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:328> * <var:j> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:262> * <var:z> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:302> * <var:k> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:338> * <var:c> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:432> * <var:y> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:340> * <var:G> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 