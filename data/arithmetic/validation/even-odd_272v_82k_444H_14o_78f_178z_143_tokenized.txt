\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:v> <nat:272> + <var:k> <nat:82> + <nat:444> <var:H> + <nat:143> + <var:o> <nat:14> + <var:f> <nat:78> + <var:z> <nat:178> $ will be odd . \end{theorem} \begin{proof} Remember that the numbers $ <nat:272> $ , $ <nat:82> $ , $ <nat:444> $ , $ <nat:14> $ , $ <nat:78> $ , in addition to $ <nat:178> $ will be even . For this reason , the terms $ <nat:272> \times <var:v> $ , $ <var:k> \times <nat:82> $ , $ <var:H> \times <nat:444> $ , $ <var:o> \times <nat:14> $ , $ <var:f> \times <nat:78> $ , and moreover $ <nat:178> \times <var:z> $ must be even as well . We show this lemma is proven . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:v> <var:k> <var:H> <var:o> <var:f> <var:z> : nat , Nat . odd ( <nat:272> * <var:v> + <nat:82> * <var:k> + <nat:444> * <var:H> + <nat:14> * <var:o> + <nat:78> * <var:f> + <nat:178> * <var:z> + <nat:143> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:272> = true ) . { auto . } assert ( <genH> : Nat . even <nat:82> = true ) . { auto . } assert ( <genH> : Nat . even <nat:444> = true ) . { auto . } assert ( <genH> : Nat . even <nat:14> = true ) . { auto . } assert ( <genH> : Nat . even <nat:78> = true ) . { auto . } assert ( <genH> : Nat . even <nat:178> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:272> * <var:v> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:82> * <var:k> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:444> * <var:H> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:14> * <var:o> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:78> * <var:f> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:178> * <var:z> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 