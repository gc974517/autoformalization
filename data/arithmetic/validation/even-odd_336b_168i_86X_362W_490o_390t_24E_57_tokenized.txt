\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} With all positive integers $ <var:X> $ , $ <var:t> $ , $ <var:W> $ , $ <var:b> $ , $ <var:i> $ , $ <var:E> $ , and $ <var:o> $ the formula $ <nat:336> \times <var:b> + <nat:168> \times <var:i> + <var:X> \times <nat:86> + <nat:57> + <nat:362> \times <var:W> + <var:o> \times <nat:490> + <var:t> \times <nat:390> + <nat:24> \times <var:E> $ will be odd . \end{theorem} \begin{proof} The numbers $ <nat:336> $ , $ <nat:168> $ , $ <nat:86> $ , $ <nat:362> $ , $ <nat:490> $ , $ <nat:390> $ , and likewise $ <nat:24> $ are obviously even . Accordingly , the pairs $ <nat:336> * <var:b> $ , $ <var:i> * <nat:168> $ , $ <nat:86> * <var:X> $ , $ <var:W> * <nat:362> $ , $ <nat:490> * <var:o> $ , $ <var:t> * <nat:390> $ , and moreover $ <nat:24> * <var:E> $ is guaranteed to be even as well . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:X> <var:t> <var:W> <var:b> <var:i> <var:E> <var:o> : nat , Nat . odd ( <nat:336> * <var:b> + <nat:168> * <var:i> + <nat:86> * <var:X> + <nat:362> * <var:W> + <nat:490> * <var:o> + <nat:390> * <var:t> + <nat:24> * <var:E> + <nat:57> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:336> = true ) . { auto . } assert ( <genH> : Nat . even <nat:168> = true ) . { auto . } assert ( <genH> : Nat . even <nat:86> = true ) . { auto . } assert ( <genH> : Nat . even <nat:362> = true ) . { auto . } assert ( <genH> : Nat . even <nat:490> = true ) . { auto . } assert ( <genH> : Nat . even <nat:390> = true ) . { auto . } assert ( <genH> : Nat . even <nat:24> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:336> * <var:b> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:168> * <var:i> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:86> * <var:X> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:362> * <var:W> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:490> * <var:o> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:390> * <var:t> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:24> * <var:E> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 