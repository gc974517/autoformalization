\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:362> \times <var:C> + <nat:102> \times <var:z> + <var:a> \times <nat:472> + <var:i> \times <nat:116> + <nat:237> $ must be odd assuming some $ <var:a> $ , $ <var:i> $ , $ <var:z> $ , and $ <var:C> \in \mathbb{N} $ . \end{theorem} \begin{proof} We verify $ <nat:116> \cdot <var:i> + <nat:237> + <nat:472> \cdot <var:a> + <nat:102> \cdot <var:z> + <nat:362> \cdot <var:C> $ is odd because $ <nat:362> * <var:C> + <var:i> * <nat:116> + <var:z> * <nat:102> + <var:a> * <nat:472> $ is guaranteed to be even . See that the summing between an even number in $ \mathbb{Z}^+ $ with an even whole number must be clearly an even integer . The pairs $ <nat:116> \cdot <var:i> $ , $ <var:z> \cdot <nat:102> $ , plus $ <var:a> \cdot <nat:472> $ are obviously even . This claim must be true as a consequence that the product between an even whole number and a element of $ \mathbb{N} $ will be even plus the natural numbers $ <nat:116> $ , $ <nat:102> $ , additionally $ <nat:472> $ are clearly even . We know the leading term $ <nat:362> $ is trivially even . Consequently , the term $ <nat:362> \cdot <var:C> $ must be even also . additionally since taking the product of even numbers in $ \mathbb{Z}^+ $ and a number in $ \mathbb{N} $ will be by itself an even natural this theorem holds . It can be verified that $ <var:z> * <nat:102> + <nat:472> * <var:a> + <nat:362> * <var:C> + <var:i> * <nat:116> + <nat:237> $ will be odd . Take note $ <nat:237> $ is known as an odd natural . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:a> <var:i> <var:z> <var:C> : nat , Nat . odd ( <nat:362> * <var:C> + <nat:102> * <var:z> + <nat:472> * <var:a> + <nat:116> * <var:i> + <nat:237> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:116> = true ) . { auto . } assert ( <genH> : Nat . even <nat:102> = true ) . { auto . } assert ( <genH> : Nat . even <nat:472> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:116> * <var:i> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:102> * <var:z> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:472> * <var:a> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:362> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:362> * <var:C> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:362> * <var:C> + <nat:102> * <var:z> + <nat:472> * <var:a> + <nat:116> * <var:i> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } assert ( <genH> : Nat . odd <nat:237> = true ) . { auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . rewrite <genH> . auto . Qed . 