\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Given terms $ <var:F> $ , $ <var:Q> $ , $ <var:s> $ , $ <var:I> $ , $ <var:Z> $ , $ <var:j> $ , and $ <var:w> $ the sum $ <nat:332> \times <var:s> + <nat:288> + <nat:468> \times <var:Q> + <nat:24> \times <var:j> + <nat:438> \times <var:Z> + <nat:358> \times <var:w> + <nat:200> \times <var:I> + <nat:160> \times <var:F> $ is even . \end{theorem} \begin{proof} The terms $ <var:s> \cdot <nat:332> $ , $ <var:j> \cdot <nat:24> $ , and also $ <var:w> \cdot <nat:358> $ are clearly even . Furthermore , the terms $ <var:I> \cdot <nat:200> $ , $ <var:F> \cdot <nat:160> $ , and $ <var:Q> \cdot <nat:468> $ are known to be even . The product $ <nat:438> \cdot <var:Z> $ is obviously an even natural number . This claim is true by reason that the product of an even number and some natural number must be even . Remember $ <nat:288> $ is clearly an even number in $ \mathbb{N} $ . It can be justified that the result must be true . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:F> <var:Q> <var:s> <var:I> <var:Z> <var:j> <var:w> : nat , Nat . even ( <nat:332> * <var:s> + <nat:468> * <var:Q> + <nat:24> * <var:j> + <nat:438> * <var:Z> + <nat:358> * <var:w> + <nat:200> * <var:I> + <nat:160> * <var:F> + <nat:288> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:332> * <var:s> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:24> * <var:j> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:358> * <var:w> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:200> * <var:I> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:160> * <var:F> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:468> * <var:Q> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:438> * <var:Z> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even <nat:288> = true ) . { auto . } repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 