\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} The positive integer <nat:2217600> is the product of $ <var:m> $ , $ <var:V> $ , $ <var:J> $ , $ <var:H> $ , $ <var:f> $ , $ <var:q> $ , $ <var:o> $ , $ <var:F> $ so that $ <var:F> $ , $ <var:o> $ , $ <var:H> $ , $ <var:q> $ , $ <var:m> $ , $ <var:V> $ , $ <var:J> $ and $ <var:f> $ larger than or equal to <nat:2> . \end{theorem} \begin{proof} Notice that $ <nat:8> $ , $ <nat:10> $ , $ <nat:7> $ , $ <nat:5> $ , $ <nat:6> $ , $ <nat:11> $ , $ <nat:3> $ and $ <nat:4> $ are larger than or equivalent to <nat:2> . Similarly note that further $ <nat:2217600> = <var:o> * <var:J> * <var:H> * <var:m> * <var:V> * <var:F> * <var:f> * <var:q> $ implies $ <var:f> = <nat:11> $ , $ <var:o> = <nat:5> $ , $ <var:J> = <nat:7> $ , $ <var:m> = <nat:10> $ , $ <var:V> = <nat:8> $ , $ <var:H> = <nat:6> $ , $ <var:F> = <nat:3> $ and $ <var:q> = <nat:4> $ . This produces our proposition is true . \end{proof} \end{document} 
~
Require Import Lia . Theorem <genP:1> : exists <var:m> <var:V> <var:J> <var:H> <var:f> <var:q> <var:o> <var:F> : nat , ( <nat:2217600> = <var:m> * <var:V> * <var:J> * <var:H> * <var:f> * <var:q> * <var:o> * <var:F> ) /\ ( <var:F> >= <nat:2> ) /\ ( <var:o> >= <nat:2> ) /\ ( <var:H> >= <nat:2> ) /\ ( <var:q> >= <nat:2> ) /\ ( <var:m> >= <nat:2> ) /\ ( <var:V> >= <nat:2> ) /\ ( <var:J> >= <nat:2> ) /\ ( <var:f> >= <nat:2> ) . Proof . assert ( <genH> : <nat:8> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:10> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:7> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:5> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:6> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:11> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:3> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:4> >= <nat:2> ) . { lia . } exists <nat:10> . exists <nat:8> . exists <nat:7> . exists <nat:6> . exists <nat:11> . exists <nat:4> . exists <nat:5> . exists <nat:3> . repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 