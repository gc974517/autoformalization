\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \newtheorem{definition}{Definition} \begin{document} \begin{definition} Whenever we get where $ <var:M> $ , $ <var:h> $ , $ <var:T> $ , $ <var:J> $ , $ <var:l> $ , $ <var:t> $ , $ <var:z> $ , and $ <var:N> > <nat:1> $ where for $ <var:o> \in \mathbb{N} $ , $ <var:z> \cdot <var:h> \cdot <var:l> \cdot <var:N> \cdot <var:t> \cdot <var:M> \cdot <var:T> \cdot <var:J> = <var:o> $ given some positive integers $ <var:z> $ , $ <var:T> $ , $ <var:h> $ , $ <var:t> $ , $ <var:J> $ , $ <var:N> $ , $ <var:M> $ , $ <var:l> $ , define that $ <var:o> $ is a <def:eight-composite> natural number . \end{definition} \begin{theorem} $ <var:o> = <nat:1088640> $ is a <def:eight-composite> positive integer . \end{theorem} \begin{proof} Take $ <var:M> = <nat:9> $ , $ <var:z> = <nat:6> $ , $ <var:l> = <nat:3> $ , $ <var:J> = <nat:7> $ , $ <var:T> = <nat:10> $ , $ <var:t> = <nat:2> $ , $ <var:h> = <nat:12> $ , and $ <var:N> = <nat:4> $ . Observe that $ <nat:6> * <nat:12> * <nat:7> * <nat:2> * <nat:4> * <nat:3> * <nat:9> * <nat:10> = <nat:1088640> = <var:z> * <var:h> * <var:J> * <var:t> * <var:N> * <var:l> * <var:M> * <var:T> $ . Moreover notice $ <nat:10> $ , $ <nat:12> $ , $ <nat:3> $ , $ <nat:4> $ , $ <nat:7> $ , $ <nat:2> $ , $ <nat:6> $ , and $ <nat:9> > <nat:1> $ . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:eight-composite> ( <var:o> : nat ) := exists <var:z> <var:T> <var:h> <var:t> <var:J> <var:N> <var:M> <var:l> : nat , ( <var:M> > <nat:1> ) /\ ( <var:h> > <nat:1> ) /\ ( <var:T> > <nat:1> ) /\ ( <var:J> > <nat:1> ) /\ ( <var:l> > <nat:1> ) /\ ( <var:t> > <nat:1> ) /\ ( <var:z> > <nat:1> ) /\ ( <var:N> > <nat:1> ) /\ ( <var:z> * <var:h> * <var:l> * <var:N> * <var:t> * <var:M> * <var:T> * <var:J> = <var:o> ) . Theorem <genP:1> : <def:eight-composite> <nat:1088640> . Proof . unfold <def:eight-composite> . exists <nat:6> . exists <nat:10> . exists <nat:12> . exists <nat:2> . exists <nat:7> . exists <nat:4> . exists <nat:9> . exists <nat:3> . assert ( <genH> : <nat:10> > <nat:1> ) . { lia . } assert ( <genH> : <nat:12> > <nat:1> ) . { lia . } assert ( <genH> : <nat:3> > <nat:1> ) . { lia . } assert ( <genH> : <nat:4> > <nat:1> ) . { lia . } assert ( <genH> : <nat:7> > <nat:1> ) . { lia . } assert ( <genH> : <nat:2> > <nat:1> ) . { lia . } assert ( <genH> : <nat:6> > <nat:1> ) . { lia . } assert ( <genH> : <nat:9> > <nat:1> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 