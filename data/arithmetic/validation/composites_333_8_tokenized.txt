\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} With the condition there are positive integers $ <var:P> $ , $ <var:d> $ , $ <var:O> $ , $ <var:S> $ , $ <var:v> $ , $ <var:h> $ , $ <var:G> $ , $ <var:C> $ say that some $ <var:F> $ is considered to be a <def:eight-composite> integer assuming $ <var:S> * <var:O> * <var:G> * <var:v> * <var:h> * <var:C> * <var:P> * <var:d> = <var:F> $ and larger than <nat:1> . Then the whole number <nat:3991680> is a <def:eight-composite> number . \end{theorem} \begin{proof} Recall that a <def:eight-composite> natural number is the product of integers $ <var:P> $ , $ <var:h> $ , $ <var:S> $ , $ <var:O> $ , $ <var:G> $ , $ <var:d> $ , $ <var:C> $ , $ <var:v> $ so that $ <var:v> $ , $ <var:O> $ , $ <var:C> $ , $ <var:S> $ , $ <var:G> $ , $ <var:d> $ , $ <var:h> $ and $ <var:P> > <nat:1> $ . Note that $ <nat:10> $ , $ <nat:7> $ , $ <nat:4> $ , $ <nat:6> $ , $ <nat:11> $ , $ <nat:12> $ , $ <nat:9> $ , $ <nat:2> > <nat:1> $ . Further notice that still $ <nat:3991680> = <var:S> \cdot <var:v> \cdot <var:P> \cdot <var:C> \cdot <var:G> \cdot <var:O> \cdot <var:h> \cdot <var:d> $ gives $ <var:S> = <nat:9> $ , $ <var:C> = <nat:10> $ , $ <var:h> = <nat:2> $ , $ <var:G> = <nat:6> $ , $ <var:v> = <nat:11> $ , $ <var:O> = <nat:4> $ , $ <var:d> = <nat:7> $ , $ <var:P> = <nat:12> $ . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:eight-composite> ( <var:F> : nat ) := exists <var:P> <var:d> <var:O> <var:S> <var:v> <var:h> <var:G> <var:C> : nat , ( <var:S> * <var:O> * <var:G> * <var:v> * <var:h> * <var:C> * <var:P> * <var:d> = <var:F> ) /\ ( <var:P> > <nat:1> ) /\ ( <var:d> > <nat:1> ) /\ ( <var:O> > <nat:1> ) /\ ( <var:S> > <nat:1> ) /\ ( <var:v> > <nat:1> ) /\ ( <var:h> > <nat:1> ) /\ ( <var:G> > <nat:1> ) /\ ( <var:C> > <nat:1> ) . Theorem <genP:1> : <def:eight-composite> <nat:3991680> . Proof . unfold <def:eight-composite> . assert ( <genH> : <nat:10> > <nat:1> ) . { lia . } assert ( <genH> : <nat:7> > <nat:1> ) . { lia . } assert ( <genH> : <nat:4> > <nat:1> ) . { lia . } assert ( <genH> : <nat:6> > <nat:1> ) . { lia . } assert ( <genH> : <nat:11> > <nat:1> ) . { lia . } assert ( <genH> : <nat:12> > <nat:1> ) . { lia . } assert ( <genH> : <nat:9> > <nat:1> ) . { lia . } assert ( <genH> : <nat:2> > <nat:1> ) . { lia . } exists <nat:12> . exists <nat:7> . exists <nat:4> . exists <nat:9> . exists <nat:11> . exists <nat:2> . exists <nat:6> . exists <nat:10> . repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 