\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Taking all positive terms $ <var:X> $ , $ <var:f> $ , $ <var:G> $ , $ <var:Z> $ , $ <var:h> $ , $ <var:l> $ , and $ <var:w> $ $ <nat:296> <var:h> + <var:X> <nat:128> + <var:Z> <nat:48> + <nat:72> <var:w> + <nat:376> + <var:f> <nat:428> + <var:l> <nat:214> + <var:G> <nat:208> $ is even . \end{theorem} \begin{proof} In addition to this , see that the terms $ <nat:296> \times <var:h> $ , $ <var:X> \times <nat:128> $ , $ <nat:48> \times <var:Z> $ , $ <var:w> \times <nat:72> $ , $ <nat:428> \times <var:f> $ , $ <nat:214> \times <var:l> $ , and likewise $ <var:G> \times <nat:208> $ are known as even naturals . This fact is proven from the knowledge multiplying between an even number with a natural will be by itself an even integer and likewise the coefficients $ <nat:296> $ , $ <nat:128> $ , $ <nat:48> $ , $ <nat:72> $ , $ <nat:428> $ , $ <nat:214> $ , in addition to $ <nat:208> $ are known as instrinsically even numbers in $ \mathbb{Z}^+ $ . We justify the theorem is true with the fact that the summing of even integers together is guaranteed to be even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:X> <var:f> <var:G> <var:Z> <var:h> <var:l> <var:w> : nat , Nat . even ( <nat:296> * <var:h> + <nat:128> * <var:X> + <nat:48> * <var:Z> + <nat:72> * <var:w> + <nat:428> * <var:f> + <nat:214> * <var:l> + <nat:208> * <var:G> + <nat:376> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:296> = true ) . { auto . } assert ( <genH> : Nat . even <nat:128> = true ) . { auto . } assert ( <genH> : Nat . even <nat:48> = true ) . { auto . } assert ( <genH> : Nat . even <nat:72> = true ) . { auto . } assert ( <genH> : Nat . even <nat:428> = true ) . { auto . } assert ( <genH> : Nat . even <nat:214> = true ) . { auto . } assert ( <genH> : Nat . even <nat:208> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:296> * <var:h> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:128> * <var:X> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:48> * <var:Z> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:72> * <var:w> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:428> * <var:f> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:214> * <var:l> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:208> * <var:G> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 