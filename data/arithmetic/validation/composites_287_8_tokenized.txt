\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Let $ <var:y> $ , $ <var:X> $ , $ <var:I> $ , $ <var:l> $ , $ <var:z> $ , $ <var:S> $ , $ <var:i> $ , $ <var:N> $ be whole numbers satisfying the condition that $ <var:I> $ , $ <var:y> $ , $ <var:z> $ , $ <var:N> $ , $ <var:X> $ , $ <var:i> $ , $ <var:l> $ and $ <var:S> > <nat:1> $ . Assume that some number $ <var:u> $ is said to be a <def:eight-composite> integer if $ <var:X> * <var:l> * <var:i> * <var:I> * <var:z> * <var:y> * <var:S> * <var:N> = <var:u> $ . Thus the integer <nat:2534400> is a <def:eight-composite> natural number . \end{theorem} \begin{proof} Notice $ <var:S> \times <var:y> \times <var:N> \times <var:z> \times <var:I> \times <var:X> \times <var:i> \times <var:l> = <nat:2534400> $ suggests $ <var:X> = <nat:12> $ , $ <var:I> = <nat:4> $ , $ <var:l> = <nat:5> $ , $ <var:i> = <nat:6> $ , $ <var:y> = <nat:2> $ , $ <var:S> = <nat:8> $ , $ <var:z> = <nat:11> $ , $ <var:N> = <nat:10> $ . Similarly notice that $ <nat:10> $ , $ <nat:2> $ , $ <nat:8> $ , $ <nat:4> $ , $ <nat:12> $ , $ <nat:6> $ , $ <nat:5> $ and $ <nat:11> > <nat:1> $ . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:eight-composite> ( <var:u> : nat ) := exists <var:y> <var:X> <var:I> <var:l> <var:z> <var:S> <var:i> <var:N> : nat , ( <var:I> > <nat:1> ) /\ ( <var:y> > <nat:1> ) /\ ( <var:z> > <nat:1> ) /\ ( <var:N> > <nat:1> ) /\ ( <var:X> > <nat:1> ) /\ ( <var:i> > <nat:1> ) /\ ( <var:l> > <nat:1> ) /\ ( <var:S> > <nat:1> ) /\ ( <var:X> * <var:l> * <var:i> * <var:I> * <var:z> * <var:y> * <var:S> * <var:N> = <var:u> ) . Theorem <genP:1> : <def:eight-composite> <nat:2534400> . Proof . unfold <def:eight-composite> . exists <nat:2> . exists <nat:12> . exists <nat:4> . exists <nat:5> . exists <nat:11> . exists <nat:8> . exists <nat:6> . exists <nat:10> . assert ( <genH> : <nat:10> > <nat:1> ) . { lia . } assert ( <genH> : <nat:2> > <nat:1> ) . { lia . } assert ( <genH> : <nat:8> > <nat:1> ) . { lia . } assert ( <genH> : <nat:4> > <nat:1> ) . { lia . } assert ( <genH> : <nat:12> > <nat:1> ) . { lia . } assert ( <genH> : <nat:6> > <nat:1> ) . { lia . } assert ( <genH> : <nat:5> > <nat:1> ) . { lia . } assert ( <genH> : <nat:11> > <nat:1> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 