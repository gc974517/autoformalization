\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:U> \cdot <var:w> \cdot <var:v> \cdot <var:H> \cdot <var:W> \cdot <var:T> \cdot <var:d> \cdot <var:e> \cdot <var:n> $ is equivalent to $ <nat:4838400> $ so that $ <var:n> $ , $ <var:W> $ , $ <var:H> $ , $ <var:v> $ , $ <var:d> $ , $ <var:U> $ , $ <var:T> $ , $ <var:e> $ , $ <var:w> > <nat:1> $ . \end{theorem} \begin{proof} Allow $ <var:W> = <nat:12> $ , $ <var:T> = <nat:4> $ , $ <var:n> = <nat:5> $ , $ <var:e> = <nat:3> $ , $ <var:w> = <nat:10> $ , $ <var:d> = <nat:6> $ , $ <var:v> = <nat:2> $ , $ <var:U> = <nat:8> $ and $ <var:H> = <nat:7> $ . Observe $ <nat:6> $ , $ <nat:7> $ , $ <nat:2> $ , $ <nat:12> $ , $ <nat:10> $ , $ <nat:5> $ , $ <nat:8> $ , $ <nat:4> $ and $ <nat:3> > <nat:1> $ . This yields our proposition is valid . Thus , $ <nat:4838400> = <var:H> \times <var:U> \times <var:v> \times <var:d> \times <var:n> \times <var:T> \times <var:w> \times <var:W> \times <var:e> $ has been verified . \end{proof} \end{document} 
~
Require Import Lia . Theorem <genP:1> : exists <var:W> <var:n> <var:d> <var:U> <var:v> <var:e> <var:H> <var:T> <var:w> : nat , ( <var:U> * <var:w> * <var:v> * <var:H> * <var:W> * <var:T> * <var:d> * <var:e> * <var:n> = <nat:4838400> ) /\ ( <var:n> > <nat:1> ) /\ ( <var:W> > <nat:1> ) /\ ( <var:H> > <nat:1> ) /\ ( <var:v> > <nat:1> ) /\ ( <var:d> > <nat:1> ) /\ ( <var:U> > <nat:1> ) /\ ( <var:T> > <nat:1> ) /\ ( <var:e> > <nat:1> ) /\ ( <var:w> > <nat:1> ) . Proof . exists <nat:12> . exists <nat:5> . exists <nat:6> . exists <nat:8> . exists <nat:2> . exists <nat:3> . exists <nat:7> . exists <nat:4> . exists <nat:10> . assert ( <genH> : <nat:6> > <nat:1> ) . { lia . } assert ( <genH> : <nat:7> > <nat:1> ) . { lia . } assert ( <genH> : <nat:2> > <nat:1> ) . { lia . } assert ( <genH> : <nat:12> > <nat:1> ) . { lia . } assert ( <genH> : <nat:10> > <nat:1> ) . { lia . } assert ( <genH> : <nat:5> > <nat:1> ) . { lia . } assert ( <genH> : <nat:8> > <nat:1> ) . { lia . } assert ( <genH> : <nat:4> > <nat:1> ) . { lia . } assert ( <genH> : <nat:3> > <nat:1> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 