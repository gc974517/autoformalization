\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Wherever we get such that $ <var:C> $ , $ <var:D> $ , $ <var:q> $ , $ <var:W> $ , $ <var:p> $ , $ <var:n> $ , and $ <var:I> > <nat:1> $ satisfying the condition that taking $ <var:N> \in \mathbb{Z}^+ $ , $ <var:N> = <var:p> \cdot <var:I> \cdot <var:C> \cdot <var:W> \cdot <var:D> \cdot <var:n> \cdot <var:q> $ with some natural numbers $ <var:C> $ , $ <var:q> $ , $ <var:p> $ , $ <var:D> $ , $ <var:n> $ , $ <var:I> $ , $ <var:W> $ , then take that $ <var:N> $ is a <def:seven-composite> integer . For this reason <nat:207900> is a <def:seven-composite> number . \end{theorem} \begin{proof} Let $ <var:W> = <nat:9> $ , $ <var:D> = <nat:11> $ , $ <var:n> = <nat:10> $ , $ <var:q> = <nat:2> $ , $ <var:p> = <nat:5> $ , $ <var:C> = <nat:7> $ , $ <var:I> = <nat:3> $ . We verify <nat:207900> is the product of $ <var:q> $ , $ <var:W> $ , $ <var:I> $ , $ <var:C> $ , $ <var:p> $ , $ <var:n> $ , $ <var:D> \in \mathbb{N} $ . Notice $ <nat:2> \cdot <nat:5> \cdot <nat:11> \cdot <nat:7> \cdot <nat:10> \cdot <nat:3> \cdot <nat:9> = <var:q> \cdot <var:p> \cdot <var:D> \cdot <var:C> \cdot <var:n> \cdot <var:I> \cdot <var:W> = <nat:207900> $ . Furthermore observe $ <var:n> = <nat:10> $ , $ <var:D> = <nat:11> $ , $ <var:p> = <nat:5> $ , $ <var:C> = <nat:7> $ , $ <var:I> = <nat:3> $ , $ <var:W> = <nat:9> $ , and $ <var:q> = <nat:2> > <nat:1> $ . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:seven-composite> ( <var:N> : nat ) := exists <var:C> <var:q> <var:p> <var:D> <var:n> <var:I> <var:W> : nat , ( <var:C> > <nat:1> ) /\ ( <var:D> > <nat:1> ) /\ ( <var:q> > <nat:1> ) /\ ( <var:W> > <nat:1> ) /\ ( <var:p> > <nat:1> ) /\ ( <var:n> > <nat:1> ) /\ ( <var:I> > <nat:1> ) /\ ( <var:N> = <var:p> * <var:I> * <var:C> * <var:W> * <var:D> * <var:n> * <var:q> ) . Theorem <genP:1> : <def:seven-composite> <nat:207900> . Proof . unfold <def:seven-composite> . exists <nat:7> . exists <nat:2> . exists <nat:5> . exists <nat:11> . exists <nat:10> . exists <nat:3> . exists <nat:9> . assert ( <genH> : <nat:10> > <nat:1> ) . { lia . } assert ( <genH> : <nat:11> > <nat:1> ) . { lia . } assert ( <genH> : <nat:5> > <nat:1> ) . { lia . } assert ( <genH> : <nat:7> > <nat:1> ) . { lia . } assert ( <genH> : <nat:3> > <nat:1> ) . { lia . } assert ( <genH> : <nat:9> > <nat:1> ) . { lia . } assert ( <genH> : <nat:2> > <nat:1> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 