\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ \exists <var:Z> $ , $ <var:A> $ , $ <var:n> $ , $ <var:R> $ , $ <var:V> $ , $ <var:B> $ , $ <var:q> $ , $ <var:K> $ , $ <var:b> \in \mathbb{N} $ where $ <var:A> $ , $ <var:q> $ , $ <var:B> $ , $ <var:R> $ , $ <var:n> $ , $ <var:Z> $ , $ <var:K> $ , $ <var:b> $ , and $ <var:V> \geq <nat:2> $ plus satisfying the condition that $ <var:q> \times <var:n> \times <var:B> \times <var:Z> \times <var:V> \times <var:A> \times <var:b> \times <var:R> \times <var:K> $ is equal to $ <nat:3628800> $ . \end{theorem} \begin{proof} Let $ <var:K> = <nat:4> $ , $ <var:V> = <nat:8> $ , $ <var:b> = <nat:3> $ , $ <var:R> = <nat:7> $ , $ <var:Z> = <nat:6> $ , $ <var:A> = <nat:5> $ , $ <var:n> = <nat:9> $ , $ <var:q> = <nat:2> $ , $ <var:B> = <nat:10> $ . We verify $ <var:A> * <var:R> * <var:q> * <var:V> * <var:n> * <var:b> * <var:B> * <var:Z> * <var:K> = <nat:3628800> $ . Observe $ <var:Z> = <nat:6> $ , $ <var:A> = <nat:5> $ , $ <var:K> = <nat:4> $ , $ <var:n> = <nat:9> $ , $ <var:V> = <nat:8> $ , $ <var:q> = <nat:2> $ , $ <var:R> = <nat:7> $ , $ <var:b> = <nat:3> $ , $ <var:B> = <nat:10> \geq <nat:2> $ . \end{proof} \end{document} 
~
Require Import Lia . Theorem <genP:1> : exists <var:Z> <var:A> <var:n> <var:R> <var:V> <var:B> <var:q> <var:K> <var:b> : nat , ( <var:A> >= <nat:2> ) /\ ( <var:q> >= <nat:2> ) /\ ( <var:B> >= <nat:2> ) /\ ( <var:R> >= <nat:2> ) /\ ( <var:n> >= <nat:2> ) /\ ( <var:Z> >= <nat:2> ) /\ ( <var:K> >= <nat:2> ) /\ ( <var:b> >= <nat:2> ) /\ ( <var:V> >= <nat:2> ) /\ ( <var:q> * <var:n> * <var:B> * <var:Z> * <var:V> * <var:A> * <var:b> * <var:R> * <var:K> = <nat:3628800> ) . Proof . exists <nat:6> . exists <nat:5> . exists <nat:9> . exists <nat:7> . exists <nat:8> . exists <nat:10> . exists <nat:2> . exists <nat:4> . exists <nat:3> . assert ( <genH> : <nat:6> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:5> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:4> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:9> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:8> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:2> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:7> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:3> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:10> >= <nat:2> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 