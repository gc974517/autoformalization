\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Define that $ <var:S> $ is a <def:nine-composite> number granted with some positive integers $ <var:Z> $ , $ <var:U> $ , $ <var:X> $ , $ <var:u> $ , $ <var:s> $ , $ <var:z> $ , $ <var:p> $ , $ <var:R> $ , $ <var:t> $ we get $ <var:X> * <var:t> * <var:R> * <var:u> * <var:U> * <var:Z> * <var:p> * <var:z> * <var:s> = <var:S> $ given some whole number $ <var:S> $ and so that $ <var:Z> $ , $ <var:X> $ , $ <var:t> $ , $ <var:p> $ , $ <var:z> $ , $ <var:R> $ , $ <var:s> $ , $ <var:U> $ , and $ <var:u> \geq <nat:2> $ . Consequently $ <nat:4989600> = <var:S> $ is a <def:nine-composite> positive integer . \end{theorem} \begin{proof} Recall <nat:4989600> is a <def:nine-composite> natural number assuming it is the product of numbers $ <var:U> $ , $ <var:s> $ , $ <var:z> $ , $ <var:u> $ , $ <var:t> $ , $ <var:Z> $ , $ <var:X> $ , $ <var:p> $ , $ <var:R> $ satisfying the condition that $ <var:u> $ , $ <var:U> $ , $ <var:s> $ , $ <var:Z> $ , $ <var:X> $ , $ <var:t> $ , $ <var:R> $ , $ <var:p> $ , $ <var:z> > <nat:1> $ . We show the theorem is valid seeing that $ <nat:4989600> = <nat:10> \times <nat:9> \times <nat:2> \times <nat:6> \times <nat:5> \times <nat:4> \times <nat:11> \times <nat:7> \times <nat:3> $ as well as seeing that $ <nat:9> $ , $ <nat:10> $ , $ <nat:7> $ , $ <nat:5> $ , $ <nat:2> $ , $ <nat:3> $ , $ <nat:4> $ , $ <nat:11> $ , and $ <nat:6> $ are greater than <nat:1> . As a result , <nat:4989600> is <def:nine-composite> is validated . Hence , <nat:4989600> is the multiplication of some positive integers $ <var:X> $ , $ <var:u> $ , $ <var:Z> $ , $ <var:s> $ , $ <var:p> $ , $ <var:U> $ , $ <var:z> $ , $ <var:R> $ , $ <var:t> $ has been validated . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:nine-composite> ( <var:S> : nat ) := exists <var:Z> <var:U> <var:X> <var:u> <var:s> <var:z> <var:p> <var:R> <var:t> : nat , ( <var:X> * <var:t> * <var:R> * <var:u> * <var:U> * <var:Z> * <var:p> * <var:z> * <var:s> = <var:S> ) /\ ( <var:Z> >= <nat:2> ) /\ ( <var:X> >= <nat:2> ) /\ ( <var:t> >= <nat:2> ) /\ ( <var:p> >= <nat:2> ) /\ ( <var:z> >= <nat:2> ) /\ ( <var:R> >= <nat:2> ) /\ ( <var:s> >= <nat:2> ) /\ ( <var:U> >= <nat:2> ) /\ ( <var:u> >= <nat:2> ) . Theorem <genP:1> : <def:nine-composite> <nat:4989600> . Proof . unfold <def:nine-composite> . exists <nat:9> . exists <nat:3> . exists <nat:10> . exists <nat:7> . exists <nat:6> . exists <nat:5> . exists <nat:2> . exists <nat:4> . exists <nat:11> . assert ( <genH> : <nat:9> > <nat:1> ) . { lia . } assert ( <genH> : <nat:10> > <nat:1> ) . { lia . } assert ( <genH> : <nat:7> > <nat:1> ) . { lia . } assert ( <genH> : <nat:5> > <nat:1> ) . { lia . } assert ( <genH> : <nat:2> > <nat:1> ) . { lia . } assert ( <genH> : <nat:3> > <nat:1> ) . { lia . } assert ( <genH> : <nat:4> > <nat:1> ) . { lia . } assert ( <genH> : <nat:11> > <nat:1> ) . { lia . } assert ( <genH> : <nat:6> > <nat:1> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 