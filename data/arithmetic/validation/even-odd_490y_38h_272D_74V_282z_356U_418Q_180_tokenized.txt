\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:y> * <nat:490> + <nat:38> * <var:h> + <var:D> * <nat:272> + <var:Q> * <nat:418> + <var:V> * <nat:74> + <nat:180> + <nat:282> * <var:z> + <var:U> * <nat:356> $ must be even . \end{theorem} \begin{proof} We apply the assumption the fact the sum $ <var:y> \cdot <nat:490> + <nat:38> \cdot <var:h> + <nat:272> \cdot <var:D> + <nat:74> \cdot <var:V> + <nat:282> \cdot <var:z> + <nat:356> \cdot <var:U> + <nat:418> \cdot <var:Q> $ is guaranteed to be even . Likewise , the leading terms $ <nat:490> $ , $ <nat:38> $ , $ <nat:272> $ , $ <nat:74> $ , $ <nat:282> $ , $ <nat:356> $ , plus $ <nat:418> $ are known to be even elements of $ \mathbb{Z}^+ $ . Accordingly , the products $ <var:y> \cdot <nat:490> $ , $ <nat:38> \cdot <var:h> $ , $ <var:D> \cdot <nat:272> $ , $ <nat:74> \cdot <var:V> $ , $ <nat:282> \cdot <var:z> $ , $ <var:U> \cdot <nat:356> $ , in addition to $ <var:Q> \cdot <nat:418> $ is even as well . By reason that the product of an even number in $ \mathbb{N} $ and any integer must be trivially an even number in $ \mathbb{N} $ our theorem must be true . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:y> <var:h> <var:D> <var:Q> <var:V> <var:z> <var:U> : nat , Nat . even ( <nat:490> * <var:y> + <nat:38> * <var:h> + <nat:272> * <var:D> + <nat:418> * <var:Q> + <nat:74> * <var:V> + <nat:282> * <var:z> + <nat:356> * <var:U> + <nat:180> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:490> = true ) . { auto . } assert ( <genH> : Nat . even <nat:38> = true ) . { auto . } assert ( <genH> : Nat . even <nat:272> = true ) . { auto . } assert ( <genH> : Nat . even <nat:74> = true ) . { auto . } assert ( <genH> : Nat . even <nat:282> = true ) . { auto . } assert ( <genH> : Nat . even <nat:356> = true ) . { auto . } assert ( <genH> : Nat . even <nat:418> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:490> * <var:y> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:38> * <var:h> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:272> * <var:D> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:74> * <var:V> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:282> * <var:z> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:356> * <var:U> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:418> * <var:Q> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:490> * <var:y> + <nat:38> * <var:h> + <nat:272> * <var:D> + <nat:418> * <var:Q> + <nat:74> * <var:V> + <nat:282> * <var:z> + <nat:356> * <var:U> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . even_add . rewrite <genH> . auto . Qed . 