\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} With the condition that there are natural numbers $ <var:y> $ , $ <var:K> $ , $ <var:B> $ , $ <var:V> $ , $ <var:j> $ , $ <var:N> $ , $ <var:Z> $ , $ <var:J> $ , $ <var:g> $ where $ <var:J> $ , $ <var:j> $ , $ <var:B> $ , $ <var:N> $ , $ <var:y> $ , $ <var:K> $ , $ <var:g> $ , $ <var:V> $ , and $ <var:Z> \geq <nat:2> $ . We claim that some $ <var:a> $ will be considered a <def:nine-composite> number if $ <var:J> \cdot <var:N> \cdot <var:Z> \cdot <var:B> \cdot <var:g> \cdot <var:K> \cdot <var:j> \cdot <var:V> \cdot <var:y> = <var:a> $ . Then $ <nat:9979200> = <var:a> $ is a <def:nine-composite> natural number . \end{theorem} \begin{proof} Remember that <nat:9979200> is a <def:nine-composite> integer if and only if <nat:9979200> is the multiplication of numbers $ <var:j> $ , $ <var:J> $ , $ <var:K> $ , $ <var:V> $ , $ <var:B> $ , $ <var:g> $ , $ <var:Z> $ , $ <var:N> $ , and $ <var:y> $ so that $ <var:N> $ , $ <var:V> $ , $ <var:B> $ , $ <var:g> $ , $ <var:y> $ , $ <var:Z> $ , $ <var:j> $ , $ <var:K> $ and $ <var:J> \geq <nat:2> $ . Notice $ <nat:7> $ , $ <nat:3> $ , $ <nat:8> $ , $ <nat:2> $ , $ <nat:5> $ , $ <nat:6> $ , $ <nat:10> $ , $ <nat:9> $ , and $ <nat:11> \geq <nat:2> $ . Plus notice also $ <nat:10> * <nat:6> * <nat:5> * <nat:2> * <nat:7> * <nat:9> * <nat:11> * <nat:8> * <nat:3> = <nat:9979200> $ . This yields our principle is true . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:nine-composite> ( <var:a> : nat ) := exists <var:y> <var:K> <var:B> <var:V> <var:j> <var:N> <var:Z> <var:J> <var:g> : nat , ( <var:J> >= <nat:2> ) /\ ( <var:j> >= <nat:2> ) /\ ( <var:B> >= <nat:2> ) /\ ( <var:N> >= <nat:2> ) /\ ( <var:y> >= <nat:2> ) /\ ( <var:K> >= <nat:2> ) /\ ( <var:g> >= <nat:2> ) /\ ( <var:V> >= <nat:2> ) /\ ( <var:Z> >= <nat:2> ) /\ ( <var:J> * <var:N> * <var:Z> * <var:B> * <var:g> * <var:K> * <var:j> * <var:V> * <var:y> = <var:a> ) . Theorem <genP:1> : <def:nine-composite> <nat:9979200> . Proof . unfold <def:nine-composite> . assert ( <genH> : <nat:7> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:3> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:8> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:2> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:5> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:6> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:10> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:9> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:11> >= <nat:2> ) . { lia . } exists <nat:7> . exists <nat:3> . exists <nat:10> . exists <nat:9> . exists <nat:6> . exists <nat:8> . exists <nat:11> . exists <nat:2> . exists <nat:5> . repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 