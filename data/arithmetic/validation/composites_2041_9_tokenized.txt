\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Define that $ <var:u> $ is a <def:nine-composite> whole number given there exist some natural numbers $ <var:b> $ , $ <var:e> $ , $ <var:X> $ , $ <var:P> $ , $ <var:q> $ , $ <var:Z> $ , $ <var:L> $ , $ <var:n> $ , $ <var:i> $ where $ <var:u> = <var:q> \times <var:Z> \times <var:L> \times <var:X> \times <var:b> \times <var:n> \times <var:P> \times <var:e> \times <var:i> $ with some whole number $ <var:u> $ as well as such that $ <var:X> $ , $ <var:q> $ , $ <var:Z> $ , $ <var:e> $ , $ <var:b> $ , $ <var:i> $ , $ <var:n> $ , $ <var:P> $ , $ <var:L> \geq <nat:2> $ . For this reason $ <nat:23950080> = <var:u> $ is a <def:nine-composite> number . \end{theorem} \begin{proof} Let $ <var:P> = <nat:12> $ , $ <var:q> = <nat:7> $ , $ <var:L> = <nat:3> $ , $ <var:n> = <nat:8> $ , $ <var:i> = <nat:6> $ , $ <var:X> = <nat:9> $ , $ <var:b> = <nat:11> $ , $ <var:e> = <nat:10> $ , and $ <var:Z> = <nat:2> $ . Observe that $ <nat:7> $ , $ <nat:9> $ , $ <nat:6> $ , $ <nat:2> $ , $ <nat:3> $ , $ <nat:10> $ , $ <nat:8> $ , $ <nat:11> $ and $ <nat:12> $ are greater than or equal to <nat:2> . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:nine-composite> ( <var:u> : nat ) := exists <var:b> <var:e> <var:X> <var:P> <var:q> <var:Z> <var:L> <var:n> <var:i> : nat , ( <var:u> = <var:q> * <var:Z> * <var:L> * <var:X> * <var:b> * <var:n> * <var:P> * <var:e> * <var:i> ) /\ ( <var:X> >= <nat:2> ) /\ ( <var:q> >= <nat:2> ) /\ ( <var:Z> >= <nat:2> ) /\ ( <var:e> >= <nat:2> ) /\ ( <var:b> >= <nat:2> ) /\ ( <var:i> >= <nat:2> ) /\ ( <var:n> >= <nat:2> ) /\ ( <var:P> >= <nat:2> ) /\ ( <var:L> >= <nat:2> ) . Theorem <genP:1> : <def:nine-composite> <nat:23950080> . Proof . unfold <def:nine-composite> . exists <nat:11> . exists <nat:10> . exists <nat:9> . exists <nat:12> . exists <nat:7> . exists <nat:2> . exists <nat:3> . exists <nat:8> . exists <nat:6> . assert ( <genH> : <nat:7> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:9> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:6> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:2> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:3> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:10> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:8> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:11> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:12> >= <nat:2> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 