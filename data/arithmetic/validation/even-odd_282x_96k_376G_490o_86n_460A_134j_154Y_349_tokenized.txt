\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:G> * <nat:376> + <var:Y> * <nat:154> + <nat:96> * <var:k> + <nat:349> + <nat:282> * <var:x> + <nat:460> * <var:A> + <var:j> * <nat:134> + <nat:86> * <var:n> + <var:o> * <nat:490> $ is odd . \end{theorem} \begin{proof} Take note that the totaling of even natural numbers concurrently with an odd natural is guaranteed to be obviously an odd element of $ \mathbb{Z}^+ $ . The products $ <nat:376> <var:G> $ , $ <var:k> <nat:96> $ , $ <nat:282> <var:x> $ , $ <nat:490> <var:o> $ , $ <var:j> <nat:134> $ , and likewise $ <var:n> <nat:86> $ are even from the knowledge multiplying between an even number in $ \mathbb{Z}^+ $ and a natural must be even . $ <var:A> <nat:460> $ is known as even . This fact is true from the knowledge multiplying between an even number and a natural number must be even . We know the pair $ <nat:154> <var:Y> $ is clearly even as a consequence that the multiplication of an even natural number and a whole number will be an even positive integer . It can be justified that the expression $ <nat:282> <var:x> + <nat:349> + <var:k> <nat:96> + <nat:376> <var:G> + <var:o> <nat:490> + <nat:86> <var:n> + <var:A> <nat:460> + <var:j> <nat:134> + <nat:154> <var:Y> $ is odd . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:G> <var:Y> <var:k> <var:x> <var:A> <var:j> <var:n> <var:o> : nat , Nat . odd ( <nat:376> * <var:G> + <nat:154> * <var:Y> + <nat:96> * <var:k> + <nat:282> * <var:x> + <nat:460> * <var:A> + <nat:134> * <var:j> + <nat:86> * <var:n> + <nat:490> * <var:o> + <nat:349> ) = true . Proof . intros . rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . assert ( <genH> : Nat . even ( <nat:376> * <var:G> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:96> * <var:k> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:282> * <var:x> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:490> * <var:o> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:134> * <var:j> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:86> * <var:n> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:460> * <var:A> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:154> * <var:Y> ) = true ) . { rewrite Nat . even_mul . auto . } rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 