\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:l> <nat:306> + <var:G> <nat:480> + <nat:226> <var:a> + <var:M> <nat:76> + <nat:80> <var:T> + <nat:192> <var:c> + <nat:111> $ is guaranteed to be odd given every unknowns $ <var:T> $ , $ <var:M> $ , $ <var:G> $ , $ <var:c> $ , $ <var:l> $ , and $ <var:a> $ . \end{theorem} \begin{proof} We justify this result is true using the fact that the summing between even numbers in $ \mathbb{Z}^+ $ collectively and an odd number in $ \mathbb{N} $ will be odd . The claim must be true by reason that $ <var:T> \times <nat:80> + <var:a> \times <nat:226> + <var:M> \times <nat:76> + <nat:306> \times <var:l> + <var:G> \times <nat:480> + <var:c> \times <nat:192> $ is clearly even . Notice that the pair $ <nat:480> <var:G> $ is known to be even . This fact is proven from the fact taking the product of an even natural number with any element of $ \mathbb{N} $ is even . The pairs $ <var:a> <nat:226> $ , $ <var:l> <nat:306> $ , $ <var:c> <nat:192> $ , in addition to $ <nat:80> <var:T> $ are guaranteed to be even from the fact the multiplication of an even number and a natural number will be an even whole number . Furthermore , remember the pair $ <var:M> <nat:76> $ is guaranteed to be an even integer . From the knowledge multiplying between even whole numbers with any element of $ \mathbb{Z}^+ $ is guaranteed to be in itself an even whole number this main result holds . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:T> <var:M> <var:G> <var:c> <var:l> <var:a> : nat , Nat . odd ( <nat:306> * <var:l> + <nat:480> * <var:G> + <nat:226> * <var:a> + <nat:76> * <var:M> + <nat:80> * <var:T> + <nat:192> * <var:c> + <nat:111> ) = true . Proof . intros . rewrite Nat . odd_add . assert ( <genH> : Nat . even ( <nat:480> * <var:G> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:226> * <var:a> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:306> * <var:l> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:192> * <var:c> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:80> * <var:T> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:76> * <var:M> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:306> * <var:l> + <nat:480> * <var:G> + <nat:226> * <var:a> + <nat:76> * <var:M> + <nat:80> * <var:T> + <nat:192> * <var:c> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite <- Nat . negb_even . rewrite <genH> . auto . Qed . 