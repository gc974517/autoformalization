\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:10> <var:v> + <var:y> <nat:84> + <nat:64> + <var:o> <nat:372> + <nat:496> <var:C> + <var:S> <nat:402> + <var:A> <nat:166> + <nat:348> <var:z> $ is guaranteed to be even . \end{theorem} \begin{proof} The formula $ <nat:496> \times <var:C> + <nat:372> \times <var:o> + <nat:348> \times <var:z> + <var:A> \times <nat:166> + <nat:402> \times <var:S> + <nat:84> \times <var:y> + <var:v> \times <nat:10> $ is guaranteed to be even . The products $ <var:S> \cdot <nat:402> $ , $ <var:y> \cdot <nat:84> $ , $ <var:o> \cdot <nat:372> $ , in addition to $ <nat:166> \cdot <var:A> $ are known as even numbers in $ \mathbb{Z}^+ $ . This claim is true from the knowledge multiplying between an even integer with an arbitrary integer is guaranteed to be even . The term $ <var:v> \cdot <nat:10> $ is guaranteed to be even . This claim must be true as a consequence that the product between an even whole number with a element of $ \mathbb{N} $ is guaranteed to be even . The term $ <var:C> \cdot <nat:496> $ is guaranteed to be an even number in $ \mathbb{Z}^+ $ . Building on , remember that $ <var:z> \cdot <nat:348> $ is even as a consequence that the product between an even number in $ \mathbb{N} $ with an arbitrary natural is even . We justify the lemma is true . Notice that $ <nat:64> $ is guaranteed to be an even whole number . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:v> <var:y> <var:o> <var:C> <var:S> <var:A> <var:z> : nat , Nat . even ( <nat:10> * <var:v> + <nat:84> * <var:y> + <nat:372> * <var:o> + <nat:496> * <var:C> + <nat:402> * <var:S> + <nat:166> * <var:A> + <nat:348> * <var:z> + <nat:64> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:402> * <var:S> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:84> * <var:y> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:372> * <var:o> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:166> * <var:A> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:10> * <var:v> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:496> * <var:C> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:348> * <var:z> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:10> * <var:v> + <nat:84> * <var:y> + <nat:372> * <var:o> + <nat:496> * <var:C> + <nat:402> * <var:S> + <nat:166> * <var:A> + <nat:348> * <var:z> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:64> = true ) . { auto . } rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . auto . Qed . 