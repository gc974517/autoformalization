\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \newtheorem{definition}{Definition} \begin{document} \begin{definition} Under the condition we get $ <var:Z> = <var:N> * <var:d> * <var:q> * <var:X> * <var:h> * <var:E> * <var:H> * <var:P> * <var:m> $ for $ <var:Z> \in \mathbb{N} $ and so that $ <var:d> $ , $ <var:q> $ , $ <var:X> $ , $ <var:E> $ , $ <var:m> $ , $ <var:H> $ , $ <var:N> $ , $ <var:P> $ and $ <var:h> \geq <nat:2> $ assuming some $ <var:h> $ , $ <var:E> $ , $ <var:q> $ , $ <var:m> $ , $ <var:H> $ , $ <var:N> $ , $ <var:d> $ , $ <var:X> $ , $ <var:P> \in \mathbb{N} $ , then claim that $ <var:Z> $ is a <def:nine-composite> number . \end{definition} \begin{theorem} The integer <nat:19958400> is a <def:nine-composite> number . \end{theorem} \begin{proof} Recall that <nat:19958400> is a <def:nine-composite> number granted <nat:19958400> is the product between integers $ <var:q> $ , $ <var:P> $ , $ <var:d> $ , $ <var:m> $ , $ <var:X> $ , $ <var:H> $ , $ <var:N> $ , $ <var:E> $ and $ <var:h> $ larger than or equivalent to <nat:2> . Notice $ <nat:12> $ , $ <nat:10> $ , $ <nat:9> $ , $ <nat:11> $ , $ <nat:5> $ , $ <nat:4> $ , $ <nat:7> $ , $ <nat:6> $ , and $ <nat:2> $ are more than or equal to <nat:2> . Further note that moreover $ <var:N> \cdot <var:P> \cdot <var:d> \cdot <var:E> \cdot <var:m> \cdot <var:q> \cdot <var:H> \cdot <var:h> \cdot <var:X> = <nat:19958400> $ hints $ <var:h> = <nat:4> $ , $ <var:H> = <nat:7> $ , $ <var:E> = <nat:6> $ , $ <var:d> = <nat:9> $ , $ <var:q> = <nat:11> $ , $ <var:P> = <nat:10> $ , $ <var:m> = <nat:5> $ , $ <var:X> = <nat:2> $ and $ <var:N> = <nat:12> $ . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:nine-composite> ( <var:Z> : nat ) := exists <var:h> <var:E> <var:q> <var:m> <var:H> <var:N> <var:d> <var:X> <var:P> : nat , ( <var:Z> = <var:N> * <var:d> * <var:q> * <var:X> * <var:h> * <var:E> * <var:H> * <var:P> * <var:m> ) /\ ( <var:d> >= <nat:2> ) /\ ( <var:q> >= <nat:2> ) /\ ( <var:X> >= <nat:2> ) /\ ( <var:E> >= <nat:2> ) /\ ( <var:m> >= <nat:2> ) /\ ( <var:H> >= <nat:2> ) /\ ( <var:N> >= <nat:2> ) /\ ( <var:P> >= <nat:2> ) /\ ( <var:h> >= <nat:2> ) . Theorem <genP:1> : <def:nine-composite> <nat:19958400> . Proof . unfold <def:nine-composite> . assert ( <genH> : <nat:12> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:10> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:9> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:11> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:5> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:4> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:7> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:6> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:2> >= <nat:2> ) . { lia . } exists <nat:4> . exists <nat:6> . exists <nat:11> . exists <nat:5> . exists <nat:7> . exists <nat:12> . exists <nat:9> . exists <nat:2> . exists <nat:10> . repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 