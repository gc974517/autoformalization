\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Taking every natural terms $ <var:U> $ , $ <var:R> $ , $ <var:S> $ , $ <var:h> $ , $ <var:M> $ , $ <var:O> $ , $ <var:T> $ , and $ <var:d> $ the formula $ <nat:102> \times <var:d> + <nat:214> \times <var:O> + <var:R> \times <nat:40> + <var:U> \times <nat:186> + <nat:113> + <var:h> \times <nat:64> + <nat:198> \times <var:T> + <nat:424> \times <var:S> + <var:M> \times <nat:150> $ must be odd . \end{theorem} \begin{proof} We work with the assumption the fact $ <nat:198> * <var:T> + <var:S> * <nat:424> + <var:O> * <nat:214> + <nat:186> * <var:U> + <nat:40> * <var:R> + <var:h> * <nat:64> + <var:d> * <nat:102> + <var:M> * <nat:150> $ is known as even , from the knowledge the summation of even integers successively and an even element of $ \mathbb{N} $ is even . Recall the product $ <var:O> \cdot <nat:214> $ is known as even from the knowledge the product of an even positive integer and any number in $ \mathbb{Z}^+ $ will be even . This claim is true by reason that the natural number $ <nat:214> $ is trivially even . On top of this , the term $ <var:R> \cdot <nat:40> $ is clearly an even element of $ \mathbb{N} $ because the product between an even element of $ \mathbb{Z}^+ $ and an arbitrary number in $ \mathbb{Z}^+ $ is guaranteed to be even . This claim holds because the integer $ <nat:40> $ is obviously by its very nature an even element of $ \mathbb{Z}^+ $ . Additionally , the pair $ <nat:198> \cdot <var:T> $ is clearly even . This is true as a consequence that the multiplication of an even element of $ \mathbb{Z}^+ $ with any natural is guaranteed to be even . This fact holds from the knowledge the positive integer $ <nat:198> $ is an even natural number . The integer $ <nat:102> $ is trivially even . Therefore , the product $ <var:d> \cdot <nat:102> $ must be even too . We know that $ <var:M> \cdot <nat:150> $ is guaranteed to be even . This claim is proven as a consequence that the integer $ <nat:150> $ is an even number . We know the pair $ <nat:424> \cdot <var:S> $ is clearly even . This claim is true from the knowledge the positive integer $ <nat:424> $ is trivially even . In addition to this , $ <var:U> \cdot <nat:186> $ is trivially an even integer by reason that the coefficient $ <nat:186> $ is guaranteed to be an even number . Additionally , we know the pair $ <nat:64> \cdot <var:h> $ is guaranteed to be even because the product between an even whole number with any integer will be trivially an even element of $ \mathbb{N} $ . This must be true from the fact the coefficient $ <nat:64> $ is an even number in $ \mathbb{Z}^+ $ . We know the summing of an even integer and an odd positive integer is guaranteed to be odd . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:U> <var:R> <var:S> <var:h> <var:M> <var:O> <var:T> <var:d> : nat , Nat . odd ( <nat:102> * <var:d> + <nat:214> * <var:O> + <nat:40> * <var:R> + <nat:186> * <var:U> + <nat:64> * <var:h> + <nat:198> * <var:T> + <nat:424> * <var:S> + <nat:150> * <var:M> + <nat:113> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:214> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:214> * <var:O> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:40> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:40> * <var:R> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:198> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:198> * <var:T> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:102> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:102> * <var:d> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:150> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:150> * <var:M> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:424> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:424> * <var:S> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:186> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:186> * <var:U> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:64> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:64> * <var:h> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:102> * <var:d> + <nat:214> * <var:O> + <nat:40> * <var:R> + <nat:186> * <var:U> + <nat:64> * <var:h> + <nat:198> * <var:T> + <nat:424> * <var:S> + <nat:150> * <var:M> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . auto . Qed . 