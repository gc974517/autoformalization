\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:P> * <nat:114> + <var:N> * <nat:180> + <var:t> * <nat:430> + <var:A> * <nat:492> + <var:e> * <nat:186> + <var:s> * <nat:274> + <nat:487> + <var:J> * <nat:48> + <nat:306> * <var:B> $ must be odd for every natural numbers $ <var:B> $ , $ <var:t> $ , $ <var:s> $ , $ <var:e> $ , $ <var:N> $ , $ <var:A> $ , $ <var:J> $ , and $ <var:P> $ . \end{theorem} \begin{proof} Take note $ <nat:487> $ is known as an odd number . We know that the summation of an even whole number with an odd number will be odd . We justify the formula $ <nat:186> \cdot <var:e> + <var:N> \cdot <nat:180> + <var:s> \cdot <nat:274> + <nat:306> \cdot <var:B> + <nat:114> \cdot <var:P> + <nat:487> + <nat:430> \cdot <var:t> + <nat:48> \cdot <var:J> + <var:A> \cdot <nat:492> $ is obviously odd from the fact the expression $ <nat:430> \times <var:t> + <var:s> \times <nat:274> + <nat:492> \times <var:A> + <nat:48> \times <var:J> + <var:e> \times <nat:186> + <nat:114> \times <var:P> + <var:N> \times <nat:180> + <var:B> \times <nat:306> $ is known to be even . The pairs $ <nat:180> <var:N> $ , $ <var:t> <nat:430> $ , $ <var:B> <nat:306> $ , $ <nat:48> <var:J> $ , $ <var:e> <nat:186> $ , $ <var:s> <nat:274> $ , as well as $ <var:P> <nat:114> $ are guaranteed to be even as a consequence that multiplying between an even integer and some element of $ \mathbb{N} $ is guaranteed to be even . The pair $ <var:A> <nat:492> $ is guaranteed to be an even natural number . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:B> <var:t> <var:s> <var:e> <var:N> <var:A> <var:J> <var:P> : nat , Nat . odd ( <nat:114> * <var:P> + <nat:180> * <var:N> + <nat:430> * <var:t> + <nat:492> * <var:A> + <nat:186> * <var:e> + <nat:274> * <var:s> + <nat:48> * <var:J> + <nat:306> * <var:B> + <nat:487> ) = true . Proof . intros . assert ( <genH> : Nat . odd <nat:487> = true ) . { auto . } rewrite Nat . odd_add . assert ( <genH> : Nat . even ( <nat:180> * <var:N> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:430> * <var:t> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:306> * <var:B> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:48> * <var:J> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:186> * <var:e> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:274> * <var:s> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:114> * <var:P> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:492> * <var:A> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:114> * <var:P> + <nat:180> * <var:N> + <nat:430> * <var:t> + <nat:492> * <var:A> + <nat:186> * <var:e> + <nat:274> * <var:s> + <nat:48> * <var:J> + <nat:306> * <var:B> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite <- Nat . negb_even . rewrite <genH> . rewrite <genH> . auto . Qed . 