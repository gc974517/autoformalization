\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:m> * <nat:392> + <nat:363> + <var:E> * <nat:114> + <nat:484> * <var:Y> + <var:W> * <nat:84> + <nat:206> * <var:O> + <var:i> * <nat:370> $ must be odd taking all $ <var:W> $ , $ <var:i> $ , $ <var:Y> $ , $ <var:O> $ , $ <var:E> $ , and $ <var:m> \in \mathbb{Z}^+ $ . \end{theorem} \begin{proof} The term $ <nat:84> \times <var:W> $ is known as even from the knowledge taking the product of an even positive integer and an arbitrary number is even . On top of this , $ <nat:370> \times <var:i> $ is known as an even element of $ \mathbb{N} $ . We know that the pairs $ <var:m> \times <nat:392> $ additionally $ <var:O> \times <nat:206> $ are clearly even elements of $ \mathbb{N} $ since the multiplication between an even natural number with a natural number will be even . The product $ <var:E> \times <nat:114> $ is obviously an even positive integer since the multiplication between an even element of $ \mathbb{Z}^+ $ and some natural is guaranteed to be even . $ <nat:484> \times <var:Y> $ is known to be even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:W> <var:i> <var:Y> <var:O> <var:E> <var:m> : nat , Nat . odd ( <nat:392> * <var:m> + <nat:114> * <var:E> + <nat:484> * <var:Y> + <nat:84> * <var:W> + <nat:206> * <var:O> + <nat:370> * <var:i> + <nat:363> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:84> * <var:W> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:370> * <var:i> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:392> * <var:m> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:206> * <var:O> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:114> * <var:E> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:484> * <var:Y> ) = true ) . { rewrite Nat . even_mul . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 