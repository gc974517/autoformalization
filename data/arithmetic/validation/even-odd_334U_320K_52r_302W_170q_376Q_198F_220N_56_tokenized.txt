\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:334> \cdot <var:U> + <nat:56> + <nat:320> \cdot <var:K> + <var:r> \cdot <nat:52> + <nat:302> \cdot <var:W> + <var:q> \cdot <nat:170> + <nat:376> \cdot <var:Q> + <var:F> \cdot <nat:198> + <var:N> \cdot <nat:220> $ must be even assuming all positive integers $ <var:U> $ , $ <var:r> $ , $ <var:q> $ , $ <var:F> $ , $ <var:K> $ , $ <var:W> $ , $ <var:N> $ , and $ <var:Q> $ . \end{theorem} \begin{proof} The products $ <nat:334> * <var:U> $ , $ <var:K> * <nat:320> $ , $ <nat:52> * <var:r> $ , $ <nat:302> * <var:W> $ , $ <nat:170> * <var:q> $ , $ <nat:376> * <var:Q> $ , $ <var:F> * <nat:198> $ , and moreover $ <var:N> * <nat:220> $ must be even from the knowledge the product of an even element of $ \mathbb{N} $ with any element of $ \mathbb{N} $ must be even , which holds by reason that the coefficients $ <nat:334> $ , $ <nat:320> $ , $ <nat:52> $ , $ <nat:302> $ , $ <nat:170> $ , $ <nat:376> $ , $ <nat:198> $ , additionally $ <nat:220> $ are known as even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:U> <var:r> <var:q> <var:F> <var:K> <var:W> <var:N> <var:Q> : nat , Nat . even ( <nat:334> * <var:U> + <nat:320> * <var:K> + <nat:52> * <var:r> + <nat:302> * <var:W> + <nat:170> * <var:q> + <nat:376> * <var:Q> + <nat:198> * <var:F> + <nat:220> * <var:N> + <nat:56> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:334> = true ) . { auto . } assert ( <genH> : Nat . even <nat:320> = true ) . { auto . } assert ( <genH> : Nat . even <nat:52> = true ) . { auto . } assert ( <genH> : Nat . even <nat:302> = true ) . { auto . } assert ( <genH> : Nat . even <nat:170> = true ) . { auto . } assert ( <genH> : Nat . even <nat:376> = true ) . { auto . } assert ( <genH> : Nat . even <nat:198> = true ) . { auto . } assert ( <genH> : Nat . even <nat:220> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:334> * <var:U> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:320> * <var:K> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:52> * <var:r> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:302> * <var:W> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:170> * <var:q> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:376> * <var:Q> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:198> * <var:F> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:220> * <var:N> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 