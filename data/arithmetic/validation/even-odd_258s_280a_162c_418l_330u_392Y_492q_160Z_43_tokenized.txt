\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Assuming some terms $ <var:s> $ , $ <var:l> $ , $ <var:a> $ , $ <var:Y> $ , $ <var:q> $ , $ <var:c> $ , $ <var:Z> $ , and $ <var:u> $ $ <nat:258> <var:s> + <var:q> <nat:492> + <var:a> <nat:280> + <var:Z> <nat:160> + <nat:43> + <var:u> <nat:330> + <nat:162> <var:c> + <var:l> <nat:418> + <var:Y> <nat:392> $ will be odd . \end{theorem} \begin{proof} The totaling between even natural numbers collectively and an odd number in $ \mathbb{N} $ will be itself an odd number in $ \mathbb{N} $ . $ <var:s> \times <nat:258> + <var:a> \times <nat:280> + <var:c> \times <nat:162> + <var:l> \times <nat:418> + <var:u> \times <nat:330> + <nat:392> \times <var:Y> + <nat:492> \times <var:q> + <var:Z> \times <nat:160> $ is even . We know that the whole numbers $ <nat:258> $ , $ <nat:280> $ , $ <nat:162> $ , $ <nat:418> $ , $ <nat:330> $ , $ <nat:392> $ , $ <nat:492> $ , and likewise $ <nat:160> $ are even . Hence , the pairs $ <var:s> * <nat:258> $ , $ <nat:280> * <var:a> $ , $ <nat:162> * <var:c> $ , $ <nat:418> * <var:l> $ , $ <var:u> * <nat:330> $ , $ <nat:392> * <var:Y> $ , $ <nat:492> * <var:q> $ , and moreover $ <nat:160> * <var:Z> $ is even also . Since taking the product between even integers with an arbitrary integer is guaranteed to be clearly an even positive integer our lemma is proven . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:s> <var:l> <var:a> <var:Y> <var:q> <var:c> <var:Z> <var:u> : nat , Nat . odd ( <nat:258> * <var:s> + <nat:492> * <var:q> + <nat:280> * <var:a> + <nat:160> * <var:Z> + <nat:330> * <var:u> + <nat:162> * <var:c> + <nat:418> * <var:l> + <nat:392> * <var:Y> + <nat:43> ) = true . Proof . intros . rewrite Nat . odd_add . assert ( <genH> : Nat . even <nat:258> = true ) . { auto . } assert ( <genH> : Nat . even <nat:280> = true ) . { auto . } assert ( <genH> : Nat . even <nat:162> = true ) . { auto . } assert ( <genH> : Nat . even <nat:418> = true ) . { auto . } assert ( <genH> : Nat . even <nat:330> = true ) . { auto . } assert ( <genH> : Nat . even <nat:392> = true ) . { auto . } assert ( <genH> : Nat . even <nat:492> = true ) . { auto . } assert ( <genH> : Nat . even <nat:160> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:258> * <var:s> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:280> * <var:a> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:162> * <var:c> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:418> * <var:l> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:330> * <var:u> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:392> * <var:Y> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:492> * <var:q> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:160> * <var:Z> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:258> * <var:s> + <nat:492> * <var:q> + <nat:280> * <var:a> + <nat:160> * <var:Z> + <nat:330> * <var:u> + <nat:162> * <var:c> + <nat:418> * <var:l> + <nat:392> * <var:Y> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite <- Nat . negb_even . rewrite <genH> . auto . Qed . 