\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} If and only if we get $ <var:u> $ , $ <var:G> $ , $ <var:v> $ , $ <var:y> $ , $ <var:d> $ , $ <var:l> $ , $ <var:L> $ , $ <var:Q> $ and $ <var:U> \geq <nat:2> $ so that using some positive integer $ <var:Z> $ , $ <var:Z> = <var:Q> \times <var:u> \times <var:L> \times <var:l> \times <var:U> \times <var:y> \times <var:d> \times <var:G> \times <var:v> $ with some $ <var:l> $ , $ <var:G> $ , $ <var:L> $ , $ <var:U> $ , $ <var:Q> $ , $ <var:y> $ , $ <var:u> $ , $ <var:d> $ , $ <var:v> \in \mathbb{N} $ , then we assume that $ <var:Z> $ is a <def:nine-composite> number . Therefore the whole number <nat:9979200> is <def:nine-composite> . \end{theorem} \begin{proof} Recollect that <nat:9979200> is <def:nine-composite> when <nat:9979200> is the multiplication of numbers $ <var:Q> $ , $ <var:y> $ , $ <var:u> $ , $ <var:L> $ , $ <var:G> $ , $ <var:l> $ , $ <var:U> $ , $ <var:d> $ , $ <var:v> $ greater than or equivalent to <nat:2> . Assume $ <var:d> = <nat:3> $ , $ <var:l> = <nat:11> $ , $ <var:y> = <nat:4> $ , $ <var:Q> = <nat:9> $ , $ <var:L> = <nat:10> $ , $ <var:G> = <nat:5> $ , $ <var:v> = <nat:7> $ , $ <var:U> = <nat:2> $ , and $ <var:u> = <nat:12> $ . We confirm <nat:9979200> is a <def:nine-composite> positive integer because Considering $ <var:L> = <nat:10> $ , $ <var:Q> = <nat:9> $ , $ <var:U> = <nat:2> $ , $ <var:d> = <nat:3> $ , $ <var:u> = <nat:12> $ , $ <var:l> = <nat:11> $ , $ <var:G> = <nat:5> $ , $ <var:y> = <nat:4> $ and $ <var:v> = <nat:7> \geq <nat:2> $ . As a result , <nat:9979200> is a <def:nine-composite> integer is proven . As a consequence , $ <var:U> $ , $ <var:G> $ , $ <var:u> $ , $ <var:l> $ , $ <var:v> $ , $ <var:Q> $ , $ <var:L> $ , $ <var:d> $ and $ <var:y> $ are larger than or equivalent to <nat:2> plus $ <nat:9979200> = <var:d> \cdot <var:u> \cdot <var:U> \cdot <var:L> \cdot <var:Q> \cdot <var:G> \cdot <var:y> \cdot <var:v> \cdot <var:l> $ is proven . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:nine-composite> ( <var:Z> : nat ) := exists <var:l> <var:G> <var:L> <var:U> <var:Q> <var:y> <var:u> <var:d> <var:v> : nat , ( <var:u> >= <nat:2> ) /\ ( <var:G> >= <nat:2> ) /\ ( <var:v> >= <nat:2> ) /\ ( <var:y> >= <nat:2> ) /\ ( <var:d> >= <nat:2> ) /\ ( <var:l> >= <nat:2> ) /\ ( <var:L> >= <nat:2> ) /\ ( <var:Q> >= <nat:2> ) /\ ( <var:U> >= <nat:2> ) /\ ( <var:Z> = <var:Q> * <var:u> * <var:L> * <var:l> * <var:U> * <var:y> * <var:d> * <var:G> * <var:v> ) . Theorem <genP:1> : <def:nine-composite> <nat:9979200> . Proof . unfold <def:nine-composite> . exists <nat:11> . exists <nat:5> . exists <nat:10> . exists <nat:2> . exists <nat:9> . exists <nat:4> . exists <nat:12> . exists <nat:3> . exists <nat:7> . assert ( <genH> : <nat:10> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:9> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:2> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:3> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:12> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:11> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:5> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:4> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:7> >= <nat:2> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 