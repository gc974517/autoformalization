\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:414> * <var:l> + <nat:204> * <var:c> + <var:z> * <nat:410> + <var:g> * <nat:44> + <var:m> * <nat:436> + <var:k> * <nat:474> + <nat:376> + <var:R> * <nat:316> + <var:s> * <nat:454> $ must be even for all natural numbers $ <var:m> $ , $ <var:z> $ , $ <var:s> $ , $ <var:c> $ , $ <var:k> $ , $ <var:l> $ , $ <var:R> $ , and $ <var:g> $ . \end{theorem} \begin{proof} Building on , the coefficients $ <nat:414> $ , $ <nat:204> $ , $ <nat:410> $ , $ <nat:44> $ , $ <nat:436> $ , $ <nat:474> $ , $ <nat:316> $ , and moreover $ <nat:454> $ are known as even numbers in $ \mathbb{Z}^+ $ . Accordingly , the terms $ <var:l> \times <nat:414> $ , $ <var:c> \times <nat:204> $ , $ <nat:410> \times <var:z> $ , $ <nat:44> \times <var:g> $ , $ <var:m> \times <nat:436> $ , $ <nat:474> \times <var:k> $ , $ <nat:316> \times <var:R> $ , and also $ <nat:454> \times <var:s> $ must be even also . Remember that $ <nat:376> $ is clearly even . The addition of even integers concurrently will be even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:m> <var:z> <var:s> <var:c> <var:k> <var:l> <var:R> <var:g> : nat , Nat . even ( <nat:414> * <var:l> + <nat:204> * <var:c> + <nat:410> * <var:z> + <nat:44> * <var:g> + <nat:436> * <var:m> + <nat:474> * <var:k> + <nat:316> * <var:R> + <nat:454> * <var:s> + <nat:376> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:414> = true ) . { auto . } assert ( <genH> : Nat . even <nat:204> = true ) . { auto . } assert ( <genH> : Nat . even <nat:410> = true ) . { auto . } assert ( <genH> : Nat . even <nat:44> = true ) . { auto . } assert ( <genH> : Nat . even <nat:436> = true ) . { auto . } assert ( <genH> : Nat . even <nat:474> = true ) . { auto . } assert ( <genH> : Nat . even <nat:316> = true ) . { auto . } assert ( <genH> : Nat . even <nat:454> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:414> * <var:l> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:204> * <var:c> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:410> * <var:z> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:44> * <var:g> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:436> * <var:m> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:474> * <var:k> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:316> * <var:R> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:454> * <var:s> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:376> = true ) . { auto . } repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 