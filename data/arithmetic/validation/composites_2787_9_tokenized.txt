\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Take $ <var:o> $ , $ <var:R> $ , $ <var:D> $ , $ <var:b> $ , $ <var:f> $ , $ <var:w> $ , $ <var:X> $ , $ <var:v> $ , $ <var:K> \in \mathbb{N} $ greater than or equivalent to <nat:2> . Assume that $ <var:e> \in \mathbb{Z}^+ $ will be called <def:nine-composite> given $ <var:e> = <var:K> \cdot <var:w> \cdot <var:b> \cdot <var:R> \cdot <var:v> \cdot <var:f> \cdot <var:D> \cdot <var:o> \cdot <var:X> $ . For this reason the positive integer <nat:19958400> is a <def:nine-composite> number . \end{theorem} \begin{proof} Let $ <var:K> = <nat:3> $ , $ <var:b> = <nat:12> $ , $ <var:f> = <nat:10> $ , $ <var:X> = <nat:2> $ , $ <var:o> = <nat:7> $ , $ <var:R> = <nat:5> $ , $ <var:w> = <nat:11> $ , $ <var:v> = <nat:8> $ , $ <var:D> = <nat:9> $ . We prove $ <nat:19958400> = <var:R> \times <var:b> \times <var:X> \times <var:w> \times <var:K> \times <var:o> \times <var:D> \times <var:v> \times <var:f> $ . We present our proposition is true in view of $ <nat:12> $ , $ <nat:11> $ , $ <nat:7> $ , $ <nat:8> $ , $ <nat:3> $ , $ <nat:5> $ , $ <nat:10> $ , $ <nat:9> $ , $ <nat:2> \geq <nat:2> $ as well as as $ <nat:7> * <nat:9> * <nat:10> * <nat:5> * <nat:2> * <nat:8> * <nat:11> * <nat:3> * <nat:12> = <nat:19958400> $ . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:nine-composite> ( <var:e> : nat ) := exists <var:o> <var:R> <var:D> <var:b> <var:f> <var:w> <var:X> <var:v> <var:K> : nat , ( <var:o> >= <nat:2> ) /\ ( <var:R> >= <nat:2> ) /\ ( <var:D> >= <nat:2> ) /\ ( <var:b> >= <nat:2> ) /\ ( <var:f> >= <nat:2> ) /\ ( <var:w> >= <nat:2> ) /\ ( <var:X> >= <nat:2> ) /\ ( <var:v> >= <nat:2> ) /\ ( <var:K> >= <nat:2> ) /\ ( <var:e> = <var:K> * <var:w> * <var:b> * <var:R> * <var:v> * <var:f> * <var:D> * <var:o> * <var:X> ) . Theorem <genP:1> : <def:nine-composite> <nat:19958400> . Proof . unfold <def:nine-composite> . exists <nat:7> . exists <nat:5> . exists <nat:9> . exists <nat:12> . exists <nat:10> . exists <nat:11> . exists <nat:2> . exists <nat:8> . exists <nat:3> . assert ( <genH> : <nat:12> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:11> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:7> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:8> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:3> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:5> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:10> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:9> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:2> >= <nat:2> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 