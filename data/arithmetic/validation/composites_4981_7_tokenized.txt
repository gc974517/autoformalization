\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \newtheorem{definition}{Definition} \begin{document} \begin{definition} Denote that $ <var:L> $ is a <def:seven-composite> natural number granted that there are $ <var:A> $ , $ <var:G> $ , $ <var:C> $ , $ <var:s> $ , $ <var:W> $ , $ <var:i> $ , $ <var:v> \in \mathbb{N} $ such that $ <var:L> = <var:C> \cdot <var:A> \cdot <var:s> \cdot <var:G> \cdot <var:i> \cdot <var:W> \cdot <var:v> $ for $ <var:L> \in \mathbb{Z}^+ $ and so that $ <var:G> $ , $ <var:i> $ , $ <var:W> $ , $ <var:C> $ , $ <var:v> $ , $ <var:A> $ and $ <var:s> \geq <nat:2> $ . \end{definition} \begin{theorem} The integer <nat:72576> is a <def:seven-composite> whole number . \end{theorem} \begin{proof} Let $ <var:v> = <nat:3> $ , $ <var:W> = <nat:9> $ , $ <var:A> = <nat:8> $ , $ <var:C> = <nat:7> $ , $ <var:s> = <nat:2> $ , $ <var:G> = <nat:4> $ and $ <var:i> = <nat:6> $ . We confirm $ <var:W> \cdot <var:v> \cdot <var:s> \cdot <var:i> \cdot <var:C> \cdot <var:G> \cdot <var:A> = <nat:72576> $ . Note that $ <nat:8> $ , $ <nat:7> $ , $ <nat:3> $ , $ <nat:6> $ , $ <nat:4> $ , $ <nat:9> $ , and $ <nat:2> $ are more than <nat:1> . This yields <nat:72576> is a <def:seven-composite> integer . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:seven-composite> ( <var:L> : nat ) := exists <var:A> <var:G> <var:C> <var:s> <var:W> <var:i> <var:v> : nat , ( <var:L> = <var:C> * <var:A> * <var:s> * <var:G> * <var:i> * <var:W> * <var:v> ) /\ ( <var:G> >= <nat:2> ) /\ ( <var:i> >= <nat:2> ) /\ ( <var:W> >= <nat:2> ) /\ ( <var:C> >= <nat:2> ) /\ ( <var:v> >= <nat:2> ) /\ ( <var:A> >= <nat:2> ) /\ ( <var:s> >= <nat:2> ) . Theorem <genP:1> : <def:seven-composite> <nat:72576> . Proof . unfold <def:seven-composite> . exists <nat:8> . exists <nat:4> . exists <nat:7> . exists <nat:2> . exists <nat:9> . exists <nat:6> . exists <nat:3> . assert ( <genH> : <nat:8> > <nat:1> ) . { lia . } assert ( <genH> : <nat:7> > <nat:1> ) . { lia . } assert ( <genH> : <nat:3> > <nat:1> ) . { lia . } assert ( <genH> : <nat:6> > <nat:1> ) . { lia . } assert ( <genH> : <nat:4> > <nat:1> ) . { lia . } assert ( <genH> : <nat:9> > <nat:1> ) . { lia . } assert ( <genH> : <nat:2> > <nat:1> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 