\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:Z> \cdot <nat:42> + <nat:31> + <nat:392> \cdot <var:n> + <nat:228> \cdot <var:h> + <nat:472> \cdot <var:T> $ must be odd with every natural numbers $ <var:T> $ , $ <var:n> $ , $ <var:h> $ , and $ <var:Z> $ . \end{theorem} \begin{proof} Notice that the terms $ <nat:42> \cdot <var:Z> $ additionally $ <nat:392> \cdot <var:n> $ are known as even . This fact holds as a consequence that the multiplication of an even number in $ \mathbb{N} $ with a element of $ \mathbb{N} $ is even , which is proven since the coefficients $ <nat:42> $ plus $ <nat:392> $ are obviously even . Likewise , notice the leading term $ <nat:472> $ is guaranteed to be an even element of $ \mathbb{Z}^+ $ . Thus , the pair $ <nat:472> \cdot <var:T> $ is even too . What's more , the natural number $ <nat:228> $ is guaranteed to be even . Therefore , the term $ <nat:228> \cdot <var:h> $ will be even at the same time . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:T> <var:n> <var:h> <var:Z> : nat , Nat . odd ( <nat:42> * <var:Z> + <nat:392> * <var:n> + <nat:228> * <var:h> + <nat:472> * <var:T> + <nat:31> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:42> = true ) . { auto . } assert ( <genH> : Nat . even <nat:392> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:42> * <var:Z> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:392> * <var:n> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:472> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:472> * <var:T> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:228> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:228> * <var:h> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 