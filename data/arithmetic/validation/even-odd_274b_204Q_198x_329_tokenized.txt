\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Assuming all positive numbers $ <var:Q> $ , $ <var:x> $ , and $ <var:b> $ the summation $ <nat:329> + <var:x> \times <nat:198> + <nat:274> \times <var:b> + <var:Q> \times <nat:204> $ will be odd . \end{theorem} \begin{proof} See that the summation of even naturals successively with an odd number must be odd . We work with the assumption the knowledge that the formula $ <nat:274> \times <var:b> + <var:Q> \times <nat:204> + <nat:198> \times <var:x> $ is clearly even , since the summing between an even positive integer with an even number in $ \mathbb{Z}^+ $ is guaranteed to be by its very nature an even natural number . We know the number $ <nat:198> $ is trivially even . Therefore , the pair $ <nat:198> \cdot <var:x> $ is guaranteed to be even in addition . On top of this , the positive integer $ <nat:274> $ is known to be even . Accordingly , the term $ <nat:274> \cdot <var:b> $ must be even at the same time . Building on , notice the integer $ <nat:204> $ is guaranteed to be an even natural number . Accordingly , the pair $ <var:Q> \cdot <nat:204> $ will be even at the same time . It can be proven that our lemma is proven . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:Q> <var:x> <var:b> : nat , Nat . odd ( <nat:198> * <var:x> + <nat:274> * <var:b> + <nat:204> * <var:Q> + <nat:329> ) = true . Proof . intros . rewrite Nat . odd_add . assert ( <genH> : Nat . even <nat:198> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:198> * <var:x> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:274> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:274> * <var:b> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:204> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:204> * <var:Q> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:198> * <var:x> + <nat:274> * <var:b> + <nat:204> * <var:Q> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite <- Nat . negb_even . rewrite <genH> . auto . Qed . 