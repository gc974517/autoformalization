\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \newtheorem{definition}{Definition} \begin{document} \begin{definition} $ \exists <var:x> $ , $ <var:g> $ , $ <var:Z> $ , $ <var:A> \in \mathbb{Z}^+ $ where $ <var:x> $ , $ <var:g> $ , $ <var:Z> $ and $ <var:A> > <nat:1> $ . We claim that $ <var:F> \in \mathbb{N} $ will be considered a <def:four-composite> number given $ <var:F> = <var:g> \times <var:Z> \times <var:A> \times <var:x> $ . \end{definition} \begin{theorem} $ <nat:2112> = <var:F> $ is a <def:four-composite> positive integer . \end{theorem} \begin{proof} Remember a <def:four-composite> integer is the multiplication between natural numbers $ <var:x> $ , $ <var:A> $ , $ <var:Z> $ , $ <var:g> $ larger than <nat:1> . Assume $ <var:A> = <nat:4> $ , $ <var:x> = <nat:8> $ , $ <var:g> = <nat:6> $ , $ <var:Z> = <nat:11> $ . We prove the formula is true because $ <nat:4> $ , $ <nat:11> $ , $ <nat:6> $ , $ <nat:8> > <nat:1> $ as well as seeing that $ <nat:6> \cdot <nat:11> \cdot <nat:8> \cdot <nat:4> = <nat:2112> $ . Hence , <nat:2112> is a <def:four-composite> positive integer is proven . Consequently , $ <var:x> $ , $ <var:Z> $ , $ <var:A> $ and $ <var:g> > <nat:1> $ as well as <nat:2112> is the product between $ <var:Z> $ , $ <var:g> $ , $ <var:A> $ , $ <var:x> \in \mathbb{Z}^+ $ is validated . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:four-composite> ( <var:F> : nat ) := exists <var:x> <var:g> <var:Z> <var:A> : nat , ( <var:x> > <nat:1> ) /\ ( <var:g> > <nat:1> ) /\ ( <var:Z> > <nat:1> ) /\ ( <var:A> > <nat:1> ) /\ ( <var:F> = <var:g> * <var:Z> * <var:A> * <var:x> ) . Theorem <genP:1> : <def:four-composite> <nat:2112> . Proof . unfold <def:four-composite> . exists <nat:8> . exists <nat:6> . exists <nat:11> . exists <nat:4> . assert ( <genH> : <nat:4> > <nat:1> ) . { lia . } assert ( <genH> : <nat:11> > <nat:1> ) . { lia . } assert ( <genH> : <nat:6> > <nat:1> ) . { lia . } assert ( <genH> : <nat:8> > <nat:1> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 