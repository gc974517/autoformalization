\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:e> * <nat:268> + <var:J> * <nat:368> + <var:a> * <nat:374> + <nat:15> + <var:O> * <nat:28> + <var:P> * <nat:128> + <var:r> * <nat:470> + <var:I> * <nat:44> $ must be odd for any unknowns $ <var:P> $ , $ <var:O> $ , $ <var:I> $ , $ <var:a> $ , $ <var:r> $ , $ <var:e> $ , and $ <var:J> $ . \end{theorem} \begin{proof} We know $ <nat:15> $ is clearly an odd number in $ \mathbb{Z}^+ $ . We check $ <var:J> \times <nat:368> + <nat:470> \times <var:r> + <var:a> \times <nat:374> + <nat:268> \times <var:e> + <nat:15> + <nat:128> \times <var:P> + <var:O> \times <nat:28> + <var:I> \times <nat:44> $ is guaranteed to be odd . The products $ <var:J> <nat:368> $ and likewise $ <nat:268> <var:e> $ must be even naturals by reason that the multiplication of an even integer and any natural must be even . Building on , notice that $ <var:r> <nat:470> $ is clearly an even natural . This claim is true from the knowledge the multiplication of an even positive integer and some element of $ \mathbb{Z}^+ $ will be even . Take note the terms $ <nat:28> <var:O> $ , $ <var:P> <nat:128> $ , and $ <var:I> <nat:44> $ must be even numbers in $ \mathbb{N} $ . On top of this , the term $ <var:a> <nat:374> $ is known as an even number because the product of an even natural number with any number in $ \mathbb{N} $ must be an even element of $ \mathbb{Z}^+ $ . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:P> <var:O> <var:I> <var:a> <var:r> <var:e> <var:J> : nat , Nat . odd ( <nat:268> * <var:e> + <nat:368> * <var:J> + <nat:374> * <var:a> + <nat:28> * <var:O> + <nat:128> * <var:P> + <nat:470> * <var:r> + <nat:44> * <var:I> + <nat:15> ) = true . Proof . intros . assert ( <genH> : Nat . odd <nat:15> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:368> * <var:J> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:268> * <var:e> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:470> * <var:r> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:28> * <var:O> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:128> * <var:P> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:44> * <var:I> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:374> * <var:a> ) = true ) . { rewrite Nat . even_mul . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 