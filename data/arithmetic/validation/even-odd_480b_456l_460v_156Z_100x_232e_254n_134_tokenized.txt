\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:b> <nat:480> + <nat:456> <var:l> + <nat:232> <var:e> + <nat:134> + <nat:460> <var:v> + <nat:156> <var:Z> + <nat:254> <var:n> + <var:x> <nat:100> $ must be even given any whole numbers $ <var:e> $ , $ <var:x> $ , $ <var:Z> $ , $ <var:n> $ , $ <var:l> $ , $ <var:v> $ , and $ <var:b> $ . \end{theorem} \begin{proof} We demonstrate $ <var:b> <nat:480> + <var:l> <nat:456> + <var:v> <nat:460> + <nat:156> <var:Z> + <var:x> <nat:100> + <nat:232> <var:e> + <var:n> <nat:254> $ is obviously even . Observe that the products $ <nat:254> \times <var:n> $ , $ <var:Z> \times <nat:156> $ , $ <nat:480> \times <var:b> $ , $ <nat:100> \times <var:x> $ , $ <var:l> \times <nat:456> $ , plus $ <var:v> \times <nat:460> $ will be even . On top of this , notice $ <var:e> \times <nat:232> $ is trivially even . This fact is proven because the multiplication of an even element of $ \mathbb{N} $ and some number in $ \mathbb{N} $ will be even . Our result is proven by reason that the summation of an even natural and even whole numbers is guaranteed to be even additionally since taking the product between an even number and any integer is guaranteed to be even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:e> <var:x> <var:Z> <var:n> <var:l> <var:v> <var:b> : nat , Nat . even ( <nat:480> * <var:b> + <nat:456> * <var:l> + <nat:232> * <var:e> + <nat:460> * <var:v> + <nat:156> * <var:Z> + <nat:254> * <var:n> + <nat:100> * <var:x> + <nat:134> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:254> * <var:n> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:156> * <var:Z> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:480> * <var:b> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:100> * <var:x> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:456> * <var:l> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:460> * <var:v> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:232> * <var:e> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:480> * <var:b> + <nat:456> * <var:l> + <nat:232> * <var:e> + <nat:460> * <var:v> + <nat:156> * <var:Z> + <nat:254> * <var:n> + <nat:100> * <var:x> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . even_add . rewrite <genH> . auto . Qed . 