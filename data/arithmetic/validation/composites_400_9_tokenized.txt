\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Say that $ <var:t> $ is a <def:nine-composite> positive integer whenever $ \exists <var:b> $ , $ <var:u> $ , $ <var:O> $ , $ <var:v> $ , $ <var:S> $ , $ <var:D> $ , $ <var:Z> $ , $ <var:e> $ , $ <var:A> \in \mathbb{Z}^+ $ satisfying the condition that $ <var:b> $ , $ <var:D> $ , $ <var:O> $ , $ <var:u> $ , $ <var:e> $ , $ <var:v> $ , $ <var:A> $ , $ <var:S> $ and $ <var:Z> \geq <nat:2> $ as well as with $ <var:t> \in \mathbb{Z}^+ $ , $ <var:b> \times <var:v> \times <var:e> \times <var:D> \times <var:S> \times <var:u> \times <var:A> \times <var:O> \times <var:Z> = <var:t> $ . Hence $ <nat:31933440> = <var:t> $ is a <def:nine-composite> positive integer . \end{theorem} \begin{proof} Let $ <var:b> = <nat:12> $ , $ <var:u> = <nat:7> $ , $ <var:v> = <nat:4> $ , $ <var:Z> = <nat:8> $ , $ <var:O> = <nat:6> $ , $ <var:D> = <nat:11> $ , $ <var:e> = <nat:2> $ , $ <var:A> = <nat:10> $ , $ <var:S> = <nat:9> $ . Observe $ <var:A> = <nat:10> $ , $ <var:D> = <nat:11> $ , $ <var:v> = <nat:4> $ , $ <var:Z> = <nat:8> $ , $ <var:b> = <nat:12> $ , $ <var:S> = <nat:9> $ , $ <var:O> = <nat:6> $ , $ <var:e> = <nat:2> $ and $ <var:u> = <nat:7> $ are more than or equivalent to <nat:2> . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:nine-composite> ( <var:t> : nat ) := exists <var:b> <var:u> <var:O> <var:v> <var:S> <var:D> <var:Z> <var:e> <var:A> : nat , ( <var:b> >= <nat:2> ) /\ ( <var:D> >= <nat:2> ) /\ ( <var:O> >= <nat:2> ) /\ ( <var:u> >= <nat:2> ) /\ ( <var:e> >= <nat:2> ) /\ ( <var:v> >= <nat:2> ) /\ ( <var:A> >= <nat:2> ) /\ ( <var:S> >= <nat:2> ) /\ ( <var:Z> >= <nat:2> ) /\ ( <var:b> * <var:v> * <var:e> * <var:D> * <var:S> * <var:u> * <var:A> * <var:O> * <var:Z> = <var:t> ) . Theorem <genP:1> : <def:nine-composite> <nat:31933440> . Proof . unfold <def:nine-composite> . exists <nat:12> . exists <nat:7> . exists <nat:6> . exists <nat:4> . exists <nat:9> . exists <nat:11> . exists <nat:8> . exists <nat:2> . exists <nat:10> . assert ( <genH> : <nat:10> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:11> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:4> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:8> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:12> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:9> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:6> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:2> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:7> >= <nat:2> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 