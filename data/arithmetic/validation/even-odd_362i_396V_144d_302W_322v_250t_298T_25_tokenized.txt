\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:v> \times <nat:322> + <nat:250> \times <var:t> + <nat:144> \times <var:d> + <nat:302> \times <var:W> + <nat:25> + <nat:362> \times <var:i> + <var:T> \times <nat:298> + <var:V> \times <nat:396> $ must be odd . \end{theorem} \begin{proof} We justify $ <nat:322> * <var:v> + <var:d> * <nat:144> + <nat:250> * <var:t> + <nat:298> * <var:T> + <var:i> * <nat:362> + <nat:302> * <var:W> + <nat:396> * <var:V> $ is clearly even . We know the leading terms $ <nat:302> $ , $ <nat:144> $ , $ <nat:298> $ , $ <nat:362> $ , $ <nat:396> $ , in addition to $ <nat:322> $ are trivially even In addition , the positive integer $ <nat:250> $ is clearly an even element of $ \mathbb{Z}^+ $ $ <nat:362> <var:i> + <var:V> <nat:396> + <var:d> <nat:144> + <nat:302> <var:W> + <var:v> <nat:322> + <var:t> <nat:250> + <var:T> <nat:298> $ is guaranteed to be even by reason that the summation between an even natural with an even whole number will be even . We show this result is proven . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:v> <var:t> <var:d> <var:W> <var:i> <var:T> <var:V> : nat , Nat . odd ( <nat:322> * <var:v> + <nat:250> * <var:t> + <nat:144> * <var:d> + <nat:302> * <var:W> + <nat:362> * <var:i> + <nat:298> * <var:T> + <nat:396> * <var:V> + <nat:25> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:302> = true ) . { auto . } assert ( <genH> : Nat . even <nat:144> = true ) . { auto . } assert ( <genH> : Nat . even <nat:298> = true ) . { auto . } assert ( <genH> : Nat . even <nat:362> = true ) . { auto . } assert ( <genH> : Nat . even <nat:396> = true ) . { auto . } assert ( <genH> : Nat . even <nat:322> = true ) . { auto . } assert ( <genH> : Nat . even <nat:250> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:322> * <var:v> + <nat:250> * <var:t> + <nat:144> * <var:d> + <nat:302> * <var:W> + <nat:362> * <var:i> + <nat:298> * <var:T> + <nat:396> * <var:V> ) = true ) . { repeat rewrite Nat . even_add . repeat rewrite Nat . even_mul . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . auto . Qed . 