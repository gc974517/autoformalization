\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:n> \times <nat:198> + <nat:296> \times <var:L> + <nat:496> \times <var:W> + <var:X> \times <nat:144> + <nat:370> \times <var:C> + <nat:50> \times <var:D> + <nat:202> \times <var:r> + <nat:129> + <var:l> \times <nat:378> $ is odd given every whole numbers $ <var:C> $ , $ <var:l> $ , $ <var:n> $ , $ <var:L> $ , $ <var:X> $ , $ <var:D> $ , $ <var:r> $ , and $ <var:W> $ . \end{theorem} \begin{proof} See the term $ <nat:296> \times <var:L> $ is known as an even element of $ \mathbb{Z}^+ $ from the knowledge the positive integer $ <nat:296> $ is an even positive integer . On top of this , the positive integer $ <nat:370> $ is known as an even number . Hence , the product $ <var:C> \times <nat:370> $ must be even too . In addition to this , the term $ <nat:496> \times <var:W> $ is obviously an even positive integer . This claim holds as a consequence that taking the product between an even number with any whole number is an even number additionally the leading term $ <nat:496> $ is clearly even . $ <nat:378> \times <var:l> $ is obviously an even number in $ \mathbb{N} $ . This fact is true from the fact the leading term $ <nat:378> $ is trivially clearly an even whole number . On top of this , the product $ <nat:50> \times <var:D> $ is trivially an even number . This fact holds as a consequence that multiplying of an even positive integer with an arbitrary natural number must be instrinsically an even element of $ \mathbb{N} $ . This is true as a consequence that the integer $ <nat:50> $ is clearly by itself an even element of $ \mathbb{Z}^+ $ . Likewise , $ <nat:198> \times <var:n> $ is even since the coefficient $ <nat:198> $ is known as even . Additionally , the number $ <nat:144> $ is guaranteed to be an even whole number . As a consequence , the term $ <nat:144> \times <var:X> $ will be even in addition . Remember that the positive integer $ <nat:202> $ is known to be even . As a consequence , the term $ <var:r> \times <nat:202> $ is guaranteed to be even also . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:C> <var:l> <var:n> <var:L> <var:X> <var:D> <var:r> <var:W> : nat , Nat . odd ( <nat:198> * <var:n> + <nat:296> * <var:L> + <nat:496> * <var:W> + <nat:144> * <var:X> + <nat:370> * <var:C> + <nat:50> * <var:D> + <nat:202> * <var:r> + <nat:378> * <var:l> + <nat:129> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:296> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:296> * <var:L> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:370> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:370> * <var:C> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:496> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:496> * <var:W> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:378> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:378> * <var:l> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:50> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:50> * <var:D> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:198> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:198> * <var:n> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:144> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:144> * <var:X> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:202> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:202> * <var:r> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 