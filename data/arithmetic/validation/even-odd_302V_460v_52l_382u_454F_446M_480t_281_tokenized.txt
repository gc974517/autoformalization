\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:u> \times <nat:382> + <var:v> \times <nat:460> + <var:V> \times <nat:302> + <nat:281> + <nat:480> \times <var:t> + <nat:454> \times <var:F> + <var:M> \times <nat:446> + <var:l> \times <nat:52> $ is odd given any whole numbers $ <var:M> $ , $ <var:l> $ , $ <var:V> $ , $ <var:u> $ , $ <var:v> $ , $ <var:t> $ , and $ <var:F> $ . \end{theorem} \begin{proof} The summation $ <var:t> * <nat:480> + <nat:281> + <nat:382> * <var:u> + <nat:446> * <var:M> + <nat:52> * <var:l> + <nat:460> * <var:v> + <nat:454> * <var:F> + <var:V> * <nat:302> $ is odd from the knowledge the expression $ <nat:454> * <var:F> + <var:u> * <nat:382> + <nat:52> * <var:l> + <var:t> * <nat:480> + <var:V> * <nat:302> + <var:v> * <nat:460> + <var:M> * <nat:446> $ is known as even . Notice the adding between an even whole number and an even natural is guaranteed to be even . See the pair $ <nat:302> <var:V> $ is trivially an even natural number since the positive integer $ <nat:302> $ is clearly an even integer . The positive integer $ <nat:460> $ is obviously an even positive integer . Therefore , the product $ <nat:460> <var:v> $ must be even in addition . Further , the term $ <var:l> <nat:52> $ is clearly even from the knowledge taking the product between an even natural number with any natural is guaranteed to be even as well as the whole number $ <nat:52> $ is obviously an even number in $ \mathbb{Z}^+ $ . Notice that the number $ <nat:382> $ is known as even . Thus , the term $ <var:u> <nat:382> $ will be even as well . The natural number $ <nat:454> $ is known to be an even number in $ \mathbb{Z}^+ $ . For this reason , the product $ <var:F> <nat:454> $ is even also . $ <nat:446> <var:M> $ is obviously an even number since the leading term $ <nat:446> $ is known to be an even positive integer . $ <var:t> <nat:480> $ is clearly even . This fact is true by reason that the natural number $ <nat:480> $ is guaranteed to be an even whole number . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:M> <var:l> <var:V> <var:u> <var:v> <var:t> <var:F> : nat , Nat . odd ( <nat:382> * <var:u> + <nat:460> * <var:v> + <nat:302> * <var:V> + <nat:480> * <var:t> + <nat:454> * <var:F> + <nat:446> * <var:M> + <nat:52> * <var:l> + <nat:281> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:302> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:302> * <var:V> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:460> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:460> * <var:v> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:52> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:52> * <var:l> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:382> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:382> * <var:u> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:454> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:454> * <var:F> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:446> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:446> * <var:M> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:480> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:480> * <var:t> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:382> * <var:u> + <nat:460> * <var:v> + <nat:302> * <var:V> + <nat:480> * <var:t> + <nat:454> * <var:F> + <nat:446> * <var:M> + <nat:52> * <var:l> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . auto . Qed . 