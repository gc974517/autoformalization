\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Given all $ <var:j> $ , $ <var:g> $ , $ <var:N> $ , $ <var:V> $ , $ <var:G> $ , and $ <var:P> \in \mathbb{Z}^+ $ the expression $ <nat:278> \times <var:V> + <nat:338> \times <var:G> + <var:g> \times <nat:306> + <var:P> \times <nat:282> + <nat:428> + <nat:286> \times <var:N> + <var:j> \times <nat:468> $ will be even . \end{theorem} \begin{proof} We show the theorem must be true . Remember $ <nat:428> $ is known to be an even number in $ \mathbb{Z}^+ $ . Notice that the sum $ <var:N> \cdot <nat:286> + <var:V> \cdot <nat:278> + <nat:468> \cdot <var:j> + <var:P> \cdot <nat:282> + <var:g> \cdot <nat:306> + <var:G> \cdot <nat:338> $ is obviously even . Observe the integers $ <nat:286> $ , $ <nat:306> $ , $ <nat:282> $ , and moreover $ <nat:468> $ are clearly even . As a consequence , the products $ <var:N> \cdot <nat:286> $ , $ <var:g> \cdot <nat:306> $ , $ <nat:282> \cdot <var:P> $ , as well as $ <nat:468> \cdot <var:j> $ is guaranteed to be even additionally . The pair $ <var:G> \cdot <nat:338> $ is obviously an even positive integer because multiplying of an even number in $ \mathbb{Z}^+ $ and a number in $ \mathbb{Z}^+ $ is guaranteed to be even additionally the natural number $ <nat:338> $ is guaranteed to be even . Remember that the integer $ <nat:278> $ is guaranteed to be even . So , the product $ <var:V> \cdot <nat:278> $ is even too . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:j> <var:g> <var:N> <var:V> <var:G> <var:P> : nat , Nat . even ( <nat:278> * <var:V> + <nat:338> * <var:G> + <nat:306> * <var:g> + <nat:282> * <var:P> + <nat:286> * <var:N> + <nat:468> * <var:j> + <nat:428> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:428> = true ) . { auto . } assert ( <genH> : Nat . even <nat:286> = true ) . { auto . } assert ( <genH> : Nat . even <nat:306> = true ) . { auto . } assert ( <genH> : Nat . even <nat:282> = true ) . { auto . } assert ( <genH> : Nat . even <nat:468> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:286> * <var:N> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:306> * <var:g> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:282> * <var:P> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:468> * <var:j> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:338> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:338> * <var:G> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:278> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:278> * <var:V> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:278> * <var:V> + <nat:338> * <var:G> + <nat:306> * <var:g> + <nat:282> * <var:P> + <nat:286> * <var:N> + <nat:468> * <var:j> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . auto . Qed . 