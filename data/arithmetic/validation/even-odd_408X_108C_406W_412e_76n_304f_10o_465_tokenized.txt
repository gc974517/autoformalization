\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Assuming some positive terms $ <var:n> $ , $ <var:e> $ , $ <var:X> $ , $ <var:f> $ , $ <var:C> $ , $ <var:o> $ , and $ <var:W> $ $ <var:X> * <nat:408> + <var:C> * <nat:108> + <nat:465> + <nat:406> * <var:W> + <nat:412> * <var:e> + <var:n> * <nat:76> + <nat:304> * <var:f> + <var:o> * <nat:10> $ will be odd . \end{theorem} \begin{proof} Take note $ <nat:465> $ is clearly odd . The summation between an even positive integer with an odd element of $ \mathbb{N} $ must be an odd natural . The terms $ <var:f> \times <nat:304> $ and also $ <var:X> \times <nat:408> $ are even elements of $ \mathbb{Z}^+ $ . Furthermore , we know the pairs $ <nat:76> \times <var:n> $ , $ <nat:10> \times <var:o> $ , $ <nat:406> \times <var:W> $ , additionally $ <nat:412> \times <var:e> $ are known as even . Likewise , $ <var:C> \times <nat:108> $ is known as an even element of $ \mathbb{N} $ . This must be true as a consequence that the product between an even positive integer with some number in $ \mathbb{Z}^+ $ will be even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:n> <var:e> <var:X> <var:f> <var:C> <var:o> <var:W> : nat , Nat . odd ( <nat:408> * <var:X> + <nat:108> * <var:C> + <nat:406> * <var:W> + <nat:412> * <var:e> + <nat:76> * <var:n> + <nat:304> * <var:f> + <nat:10> * <var:o> + <nat:465> ) = true . Proof . intros . assert ( <genH> : Nat . odd <nat:465> = true ) . { auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . assert ( <genH> : Nat . even ( <nat:304> * <var:f> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:408> * <var:X> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:76> * <var:n> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:10> * <var:o> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:406> * <var:W> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:412> * <var:e> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:108> * <var:C> ) = true ) . { rewrite Nat . even_mul . auto . } rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 