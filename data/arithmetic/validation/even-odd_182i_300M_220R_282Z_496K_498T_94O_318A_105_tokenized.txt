\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:i> \times <nat:182> + <var:T> \times <nat:498> + <var:A> \times <nat:318> + <nat:496> \times <var:K> + <nat:105> + <var:M> \times <nat:300> + <var:O> \times <nat:94> + <nat:282> \times <var:Z> + <nat:220> \times <var:R> $ is odd assuming every unknowns $ <var:i> $ , $ <var:Z> $ , $ <var:T> $ , $ <var:M> $ , $ <var:O> $ , $ <var:A> $ , $ <var:K> $ , and $ <var:R> $ . \end{theorem} \begin{proof} The summing between even whole numbers successively and an odd element of $ \mathbb{Z}^+ $ must be odd . Observe that the pairs $ <nat:318> \times <var:A> $ , $ <var:Z> \times <nat:282> $ , $ <nat:498> \times <var:T> $ , and likewise $ <var:K> \times <nat:496> $ are guaranteed to be even elements of $ \mathbb{N} $ . Observe the terms $ <nat:220> \times <var:R> $ in addition to $ <var:M> \times <nat:300> $ are trivially even elements of $ \mathbb{Z}^+ $ . This fact holds from the fact multiplying of an even natural with an arbitrary positive integer is guaranteed to be by definition an even natural number . Further , the term $ <nat:182> \times <var:i> $ is guaranteed to be even . Likewise , observe that the term $ <nat:94> \times <var:O> $ is obviously an even integer . We show the summation $ <var:i> * <nat:182> + <var:M> * <nat:300> + <var:R> * <nat:220> + <nat:105> + <var:Z> * <nat:282> + <nat:496> * <var:K> + <var:T> * <nat:498> + <var:O> * <nat:94> + <nat:318> * <var:A> $ will be odd . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:i> <var:Z> <var:T> <var:M> <var:O> <var:A> <var:K> <var:R> : nat , Nat . odd ( <nat:182> * <var:i> + <nat:498> * <var:T> + <nat:318> * <var:A> + <nat:496> * <var:K> + <nat:300> * <var:M> + <nat:94> * <var:O> + <nat:282> * <var:Z> + <nat:220> * <var:R> + <nat:105> ) = true . Proof . intros . rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . assert ( <genH> : Nat . even ( <nat:318> * <var:A> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:282> * <var:Z> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:498> * <var:T> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:496> * <var:K> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:220> * <var:R> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:300> * <var:M> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:182> * <var:i> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:94> * <var:O> ) = true ) . { rewrite Nat . even_mul . auto . } rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 