\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Using all whole numbers $ <var:g> $ , $ <var:c> $ , $ <var:E> $ , $ <var:T> $ , $ <var:q> $ , and $ <var:j> $ the summation $ <var:j> \times <nat:474> + <nat:324> \times <var:c> + <nat:320> \times <var:E> + <nat:70> \times <var:g> + <var:q> \times <nat:144> + <nat:50> \times <var:T> + <nat:411> $ will be odd . \end{theorem} \begin{proof} Notice that $ <nat:411> $ is known to be an odd whole number . It can be shown that this lemma is proven . Remember that the number $ <nat:320> $ is clearly even . Thus , the product $ <nat:320> \times <var:E> $ is guaranteed to be even at the same time . Building on , the integer $ <nat:144> $ is even . Then , the term $ <var:q> \times <nat:144> $ will be even too . In addition , take note $ <nat:50> \times <var:T> $ is an even element of $ \mathbb{N} $ . This fact is true from the knowledge multiplying of an even element of $ \mathbb{N} $ and some integer is guaranteed to be an even natural number . This fact is proven because the natural number $ <nat:50> $ is clearly even . The pair $ <nat:324> \times <var:c> $ is clearly an even positive integer . This is proven from the fact taking the product between an even number with any element of $ \mathbb{N} $ will be fundamentally an even number in $ \mathbb{Z}^+ $ . This must be true by reason that the positive integer $ <nat:324> $ is clearly even . Furthermore , the term $ <var:g> \times <nat:70> $ is guaranteed to be even . This claim must be true as a consequence that the number $ <nat:70> $ is known as an even number in $ \mathbb{N} $ . We know that the product $ <nat:474> \times <var:j> $ is obviously an even integer as a consequence that the product between an even number in $ \mathbb{N} $ with a natural is guaranteed to be even . This holds since the leading term $ <nat:474> $ is known as an even natural . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:g> <var:c> <var:E> <var:T> <var:q> <var:j> : nat , Nat . odd ( <nat:474> * <var:j> + <nat:324> * <var:c> + <nat:320> * <var:E> + <nat:70> * <var:g> + <nat:144> * <var:q> + <nat:50> * <var:T> + <nat:411> ) = true . Proof . intros . assert ( <genH> : Nat . odd <nat:411> = true ) . { auto . } assert ( <genH> : Nat . even <nat:320> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:320> * <var:E> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:144> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:144> * <var:q> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:50> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:50> * <var:T> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:324> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:324> * <var:c> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:70> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:70> * <var:g> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:474> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:474> * <var:j> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 