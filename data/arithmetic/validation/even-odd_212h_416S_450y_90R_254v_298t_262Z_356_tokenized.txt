\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:90> <var:R> + <var:v> <nat:254> + <nat:262> <var:Z> + <nat:356> + <nat:416> <var:S> + <nat:298> <var:t> + <nat:212> <var:h> + <nat:450> <var:y> $ will be even . \end{theorem} \begin{proof} The sum $ <nat:212> * <var:h> + <nat:416> * <var:S> + <var:y> * <nat:450> + <nat:90> * <var:R> + <nat:254> * <var:v> + <var:t> * <nat:298> + <var:Z> * <nat:262> $ is even . Recall the numbers $ <nat:212> $ , $ <nat:416> $ , $ <nat:450> $ , $ <nat:90> $ , $ <nat:254> $ , $ <nat:298> $ , and $ <nat:262> $ will be even positive integers . As a consequence , the terms $ <var:h> * <nat:212> $ , $ <var:S> * <nat:416> $ , $ <var:y> * <nat:450> $ , $ <nat:90> * <var:R> $ , $ <var:v> * <nat:254> $ , $ <nat:298> * <var:t> $ , additionally $ <var:Z> * <nat:262> $ must be even in addition . The totaling between an even element of $ \mathbb{N} $ with an even positive integer is guaranteed to be even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:R> <var:v> <var:Z> <var:S> <var:t> <var:h> <var:y> : nat , Nat . even ( <nat:90> * <var:R> + <nat:254> * <var:v> + <nat:262> * <var:Z> + <nat:416> * <var:S> + <nat:298> * <var:t> + <nat:212> * <var:h> + <nat:450> * <var:y> + <nat:356> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:212> = true ) . { auto . } assert ( <genH> : Nat . even <nat:416> = true ) . { auto . } assert ( <genH> : Nat . even <nat:450> = true ) . { auto . } assert ( <genH> : Nat . even <nat:90> = true ) . { auto . } assert ( <genH> : Nat . even <nat:254> = true ) . { auto . } assert ( <genH> : Nat . even <nat:298> = true ) . { auto . } assert ( <genH> : Nat . even <nat:262> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:212> * <var:h> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:416> * <var:S> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:450> * <var:y> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:90> * <var:R> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:254> * <var:v> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:298> * <var:t> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:262> * <var:Z> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:90> * <var:R> + <nat:254> * <var:v> + <nat:262> * <var:Z> + <nat:416> * <var:S> + <nat:298> * <var:t> + <nat:212> * <var:h> + <nat:450> * <var:y> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . even_add . rewrite <genH> . auto . Qed . 