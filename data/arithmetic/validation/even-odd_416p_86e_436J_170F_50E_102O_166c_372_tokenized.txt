\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:p> \times <nat:416> + <nat:86> \times <var:e> + <var:F> \times <nat:170> + <nat:102> \times <var:O> + <var:J> \times <nat:436> + <nat:166> \times <var:c> + <nat:50> \times <var:E> + <nat:372> $ is even . \end{theorem} \begin{proof} Recall the adding between an even whole number and an even positive integer will be an even whole number . $ <var:e> \cdot <nat:86> + <var:E> \cdot <nat:50> + <nat:102> \cdot <var:O> + <var:c> \cdot <nat:166> + <nat:436> \cdot <var:J> + <nat:416> \cdot <var:p> + <var:F> \cdot <nat:170> $ is guaranteed to be even . See the coefficients $ <nat:86> $ , $ <nat:50> $ , $ <nat:102> $ , $ <nat:166> $ , $ <nat:436> $ , $ <nat:416> $ , $ <nat:170> $ , are known to be even numbers in $ \mathbb{Z}^+ $ . Accordingly , the pairs $ <nat:86> * <var:e> $ , $ <var:E> * <nat:50> $ , $ <nat:102> * <var:O> $ , $ <nat:166> * <var:c> $ , $ <nat:436> * <var:J> $ , $ <var:p> * <nat:416> $ , $ <nat:170> * <var:F> $ , is even additionally . It can be proven that $ <var:p> \cdot <nat:416> + <nat:86> \cdot <var:e> + <nat:372> + <nat:436> \cdot <var:J> + <var:F> \cdot <nat:170> + <var:E> \cdot <nat:50> + <nat:102> \cdot <var:O> + <nat:166> \cdot <var:c> $ will be even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:p> <var:e> <var:F> <var:O> <var:J> <var:c> <var:E> : nat , Nat . even ( <nat:416> * <var:p> + <nat:86> * <var:e> + <nat:170> * <var:F> + <nat:102> * <var:O> + <nat:436> * <var:J> + <nat:166> * <var:c> + <nat:50> * <var:E> + <nat:372> ) = true . Proof . intros . rewrite Nat . even_add . assert ( <genH> : Nat . even <nat:86> = true ) . { auto . } assert ( <genH> : Nat . even <nat:50> = true ) . { auto . } assert ( <genH> : Nat . even <nat:102> = true ) . { auto . } assert ( <genH> : Nat . even <nat:166> = true ) . { auto . } assert ( <genH> : Nat . even <nat:436> = true ) . { auto . } assert ( <genH> : Nat . even <nat:416> = true ) . { auto . } assert ( <genH> : Nat . even <nat:170> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:86> * <var:e> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:50> * <var:E> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:102> * <var:O> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:166> * <var:c> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:436> * <var:J> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:416> * <var:p> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:170> * <var:F> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:416> * <var:p> + <nat:86> * <var:e> + <nat:170> * <var:F> + <nat:102> * <var:O> + <nat:436> * <var:J> + <nat:166> * <var:c> + <nat:50> * <var:E> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite <genH> . auto . Qed . 