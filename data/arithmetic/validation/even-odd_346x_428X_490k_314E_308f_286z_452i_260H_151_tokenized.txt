\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:x> \cdot <nat:346> + <nat:428> \cdot <var:X> + <var:f> \cdot <nat:308> + <nat:151> + <nat:286> \cdot <var:z> + <nat:260> \cdot <var:H> + <nat:490> \cdot <var:k> + <nat:314> \cdot <var:E> + <nat:452> \cdot <var:i> $ is guaranteed to be odd . \end{theorem} \begin{proof} It can be checked that $ <nat:490> \times <var:k> + <nat:314> \times <var:E> + <var:i> \times <nat:452> + <var:z> \times <nat:286> + <nat:428> \times <var:X> + <nat:151> + <var:x> \times <nat:346> + <var:H> \times <nat:260> + <var:f> \times <nat:308> $ is clearly odd since the sum $ <nat:346> \cdot <var:x> + <nat:428> \cdot <var:X> + <nat:490> \cdot <var:k> + <nat:314> \cdot <var:E> + <nat:308> \cdot <var:f> + <nat:286> \cdot <var:z> + <nat:452> \cdot <var:i> + <nat:260> \cdot <var:H> $ is trivially even . Remember that the products $ <nat:346> \times <var:x> $ , $ <var:X> \times <nat:428> $ , $ <var:k> \times <nat:490> $ , $ <var:E> \times <nat:314> $ , $ <nat:308> \times <var:f> $ , $ <var:z> \times <nat:286> $ , $ <nat:452> \times <var:i> $ , additionally $ <var:H> \times <nat:260> $ are known as even positive integers since the natural numbers $ <nat:346> $ , $ <nat:428> $ , $ <nat:490> $ , $ <nat:314> $ , $ <nat:308> $ , $ <nat:286> $ , $ <nat:452> $ , plus $ <nat:260> $ are trivially fundamentally even numbers in $ \mathbb{Z}^+ $ . By reason that the adding between an even number in $ \mathbb{Z}^+ $ and an even whole number must be an even number in $ \mathbb{Z}^+ $ , and also from the fact taking the product of even elements of $ \mathbb{Z}^+ $ and a number in $ \mathbb{Z}^+ $ will be an even number in $ \mathbb{N} $ . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:x> <var:X> <var:f> <var:z> <var:H> <var:k> <var:E> <var:i> : nat , Nat . odd ( <nat:346> * <var:x> + <nat:428> * <var:X> + <nat:308> * <var:f> + <nat:286> * <var:z> + <nat:260> * <var:H> + <nat:490> * <var:k> + <nat:314> * <var:E> + <nat:452> * <var:i> + <nat:151> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:346> = true ) . { auto . } assert ( <genH> : Nat . even <nat:428> = true ) . { auto . } assert ( <genH> : Nat . even <nat:490> = true ) . { auto . } assert ( <genH> : Nat . even <nat:314> = true ) . { auto . } assert ( <genH> : Nat . even <nat:308> = true ) . { auto . } assert ( <genH> : Nat . even <nat:286> = true ) . { auto . } assert ( <genH> : Nat . even <nat:452> = true ) . { auto . } assert ( <genH> : Nat . even <nat:260> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:346> * <var:x> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:428> * <var:X> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:490> * <var:k> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:314> * <var:E> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:308> * <var:f> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:286> * <var:z> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:452> * <var:i> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:260> * <var:H> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:346> * <var:x> + <nat:428> * <var:X> + <nat:308> * <var:f> + <nat:286> * <var:z> + <nat:260> * <var:H> + <nat:490> * <var:k> + <nat:314> * <var:E> + <nat:452> * <var:i> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . auto . Qed . 