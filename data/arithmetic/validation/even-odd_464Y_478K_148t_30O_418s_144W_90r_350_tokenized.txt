\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:W> \cdot <nat:144> + <nat:350> + <nat:464> \cdot <var:Y> + <var:r> \cdot <nat:90> + <var:s> \cdot <nat:418> + <var:K> \cdot <nat:478> + <var:t> \cdot <nat:148> + <var:O> \cdot <nat:30> $ will be even . \end{theorem} \begin{proof} The theorem holds as a consequence that $ <var:W> \cdot <nat:144> + <var:t> \cdot <nat:148> + <nat:30> \cdot <var:O> + <var:r> \cdot <nat:90> + <var:K> \cdot <nat:478> + <nat:418> \cdot <var:s> + <var:Y> \cdot <nat:464> $ is clearly even . The coefficients $ <nat:148> $ , $ <nat:30> $ , $ <nat:90> $ , $ <nat:144> $ , and also $ <nat:478> $ must be even positive integers In addition to this , we know that the leading term $ <nat:418> $ is clearly even The leading term $ <nat:464> $ is known to be even We verify the sum $ <nat:464> * <var:Y> + <var:K> * <nat:478> + <nat:350> + <var:t> * <nat:148> + <nat:30> * <var:O> + <var:s> * <nat:418> + <var:W> * <nat:144> + <nat:90> * <var:r> $ must be even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:W> <var:Y> <var:r> <var:s> <var:K> <var:t> <var:O> : nat , Nat . even ( <nat:144> * <var:W> + <nat:464> * <var:Y> + <nat:90> * <var:r> + <nat:418> * <var:s> + <nat:478> * <var:K> + <nat:148> * <var:t> + <nat:30> * <var:O> + <nat:350> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:148> = true ) . { auto . } assert ( <genH> : Nat . even <nat:30> = true ) . { auto . } assert ( <genH> : Nat . even <nat:90> = true ) . { auto . } assert ( <genH> : Nat . even <nat:144> = true ) . { auto . } assert ( <genH> : Nat . even <nat:478> = true ) . { auto . } assert ( <genH> : Nat . even <nat:418> = true ) . { auto . } assert ( <genH> : Nat . even <nat:464> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:144> * <var:W> + <nat:464> * <var:Y> + <nat:90> * <var:r> + <nat:418> * <var:s> + <nat:478> * <var:K> + <nat:148> * <var:t> + <nat:30> * <var:O> ) = true ) . { repeat rewrite Nat . even_add . repeat rewrite Nat . even_mul . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . even_add . rewrite <genH> . auto . Qed . 