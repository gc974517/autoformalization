\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Using any unknowns $ <var:j> $ , $ <var:Q> $ , $ <var:e> $ , $ <var:F> $ , $ <var:s> $ , and $ <var:n> $ $ <nat:335> + <var:Q> * <nat:92> + <nat:230> * <var:F> + <nat:340> * <var:e> + <var:j> * <nat:370> + <nat:490> * <var:s> + <var:n> * <nat:162> $ is odd . \end{theorem} \begin{proof} $ <var:j> * <nat:370> + <nat:92> * <var:Q> + <var:s> * <nat:490> + <nat:340> * <var:e> + <var:n> * <nat:162> + <nat:230> * <var:F> $ is trivially even . We know that the pairs $ <var:s> <nat:490> $ and likewise $ <var:e> <nat:340> $ will be even . This claim is proven from the fact the multiplication between an even number in $ \mathbb{N} $ and an arbitrary natural is even . Notice the products $ <var:F> <nat:230> $ and also $ <nat:92> <var:Q> $ are even positive integers . This fact is true since the product of an even natural and an arbitrary positive integer must be itself an even integer . What's more , see that $ <nat:162> <var:n> $ is clearly even . In addition to this , the pair $ <nat:370> <var:j> $ is clearly even . By reason that the adding of even elements of $ \mathbb{N} $ with even natural numbers is guaranteed to be even , our claim holds . We know the addition between even whole numbers with an odd integer must be an odd element of $ \mathbb{N} $ . Observe $ <nat:335> $ is trivially an odd positive integer . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:j> <var:Q> <var:e> <var:F> <var:s> <var:n> : nat , Nat . odd ( <nat:92> * <var:Q> + <nat:230> * <var:F> + <nat:340> * <var:e> + <nat:370> * <var:j> + <nat:490> * <var:s> + <nat:162> * <var:n> + <nat:335> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:490> * <var:s> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:340> * <var:e> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:230> * <var:F> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:92> * <var:Q> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:162> * <var:n> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:370> * <var:j> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:92> * <var:Q> + <nat:230> * <var:F> + <nat:340> * <var:e> + <nat:370> * <var:j> + <nat:490> * <var:s> + <nat:162> * <var:n> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . assert ( <genH> : Nat . odd <nat:335> = true ) . { auto . } rewrite <- Nat . negb_even . rewrite <genH> . rewrite <genH> . auto . Qed . 