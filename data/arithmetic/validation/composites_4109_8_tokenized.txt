\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} The positive integer <nat:4989600> is the multiplication between numbers $ <var:d> $ , $ <var:s> $ , $ <var:w> $ , $ <var:f> $ , $ <var:e> $ , $ <var:m> $ , $ <var:D> $ , and $ <var:N> \in \mathbb{Z}^+ $ so that $ <var:w> $ , $ <var:s> $ , $ <var:d> $ , $ <var:e> $ , $ <var:f> $ , $ <var:D> $ , $ <var:N> $ , $ <var:m> $ larger than <nat:1> . \end{theorem} \begin{proof} Allow $ <var:m> = <nat:5> $ , $ <var:D> = <nat:4> $ , $ <var:d> = <nat:9> $ , $ <var:f> = <nat:12> $ , $ <var:s> = <nat:3> $ , $ <var:w> = <nat:7> $ , $ <var:e> = <nat:10> $ , $ <var:N> = <nat:11> $ . Observe that $ <nat:4> $ , $ <nat:11> $ , $ <nat:3> $ , $ <nat:5> $ , $ <nat:7> $ , $ <nat:12> $ , $ <nat:9> $ , and $ <nat:10> $ are more than <nat:1> . This suggests the thesis holds . So , $ <var:s> \times <var:f> \times <var:m> \times <var:d> \times <var:w> \times <var:N> \times <var:e> \times <var:D> = <nat:4989600> $ plus $ <var:w> $ , $ <var:e> $ , $ <var:D> $ , $ <var:d> $ , $ <var:f> $ , $ <var:s> $ , $ <var:m> $ , $ <var:N> > <nat:1> $ has been verified . \end{proof} \end{document} 
~
Require Import Lia . Theorem <genP:1> : exists <var:d> <var:s> <var:w> <var:f> <var:e> <var:m> <var:D> <var:N> : nat , ( <nat:4989600> = <var:d> * <var:s> * <var:w> * <var:f> * <var:e> * <var:m> * <var:D> * <var:N> ) /\ ( <var:w> > <nat:1> ) /\ ( <var:s> > <nat:1> ) /\ ( <var:d> > <nat:1> ) /\ ( <var:e> > <nat:1> ) /\ ( <var:f> > <nat:1> ) /\ ( <var:D> > <nat:1> ) /\ ( <var:N> > <nat:1> ) /\ ( <var:m> > <nat:1> ) . Proof . exists <nat:9> . exists <nat:3> . exists <nat:7> . exists <nat:12> . exists <nat:10> . exists <nat:5> . exists <nat:4> . exists <nat:11> . assert ( <genH> : <nat:4> > <nat:1> ) . { lia . } assert ( <genH> : <nat:11> > <nat:1> ) . { lia . } assert ( <genH> : <nat:3> > <nat:1> ) . { lia . } assert ( <genH> : <nat:5> > <nat:1> ) . { lia . } assert ( <genH> : <nat:7> > <nat:1> ) . { lia . } assert ( <genH> : <nat:12> > <nat:1> ) . { lia . } assert ( <genH> : <nat:9> > <nat:1> ) . { lia . } assert ( <genH> : <nat:10> > <nat:1> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 