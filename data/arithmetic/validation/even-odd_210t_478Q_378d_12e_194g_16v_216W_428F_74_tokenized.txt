\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Using all terms $ <var:t> $ , $ <var:d> $ , $ <var:e> $ , $ <var:W> $ , $ <var:v> $ , $ <var:Q> $ , $ <var:g> $ , and $ <var:F> $ $ <nat:210> * <var:t> + <nat:478> * <var:Q> + <var:d> * <nat:378> + <nat:12> * <var:e> + <var:g> * <nat:194> + <nat:16> * <var:v> + <nat:74> + <var:W> * <nat:216> + <var:F> * <nat:428> $ is guaranteed to be even . \end{theorem} \begin{proof} Notice that the pairs $ <nat:378> \times <var:d> $ , $ <var:W> \times <nat:216> $ , $ <nat:478> \times <var:Q> $ , $ <var:F> \times <nat:428> $ , plus $ <nat:210> \times <var:t> $ are trivially even numbers in $ \mathbb{N} $ . The pair $ <var:v> \times <nat:16> $ is clearly an even whole number . Recall that the product $ <nat:194> \times <var:g> $ is obviously an even natural number . This holds because taking the product between an even number in $ \mathbb{N} $ and an arbitrary whole number is guaranteed to be by definition an even element of $ \mathbb{Z}^+ $ . See the pair $ <nat:12> \times <var:e> $ is known to be even . This must be true as a consequence that the product between an even integer and any whole number is an even number in $ \mathbb{Z}^+ $ . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:t> <var:d> <var:e> <var:W> <var:v> <var:Q> <var:g> <var:F> : nat , Nat . even ( <nat:210> * <var:t> + <nat:478> * <var:Q> + <nat:378> * <var:d> + <nat:12> * <var:e> + <nat:194> * <var:g> + <nat:16> * <var:v> + <nat:216> * <var:W> + <nat:428> * <var:F> + <nat:74> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:378> * <var:d> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:216> * <var:W> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:478> * <var:Q> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:428> * <var:F> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:210> * <var:t> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:16> * <var:v> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:194> * <var:g> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:12> * <var:e> ) = true ) . { rewrite Nat . even_mul . auto . } repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 