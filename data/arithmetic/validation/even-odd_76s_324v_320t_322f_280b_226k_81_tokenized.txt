\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:226> \cdot <var:k> + <nat:81> + <nat:320> \cdot <var:t> + <var:f> \cdot <nat:322> + <var:v> \cdot <nat:324> + <nat:76> \cdot <var:s> + <nat:280> \cdot <var:b> $ is odd . \end{theorem} \begin{proof} It can be demonstrated that our main result holds . See $ <nat:81> $ is known as odd . We work with the assumption the fact $ <var:v> \cdot <nat:324> + <nat:280> \cdot <var:b> + <var:k> \cdot <nat:226> + <var:f> \cdot <nat:322> + <var:t> \cdot <nat:320> + <var:s> \cdot <nat:76> + <nat:81> $ is guaranteed to be odd because the formula $ <var:s> \times <nat:76> + <var:v> \times <nat:324> + <nat:320> \times <var:t> + <var:f> \times <nat:322> + <nat:280> \times <var:b> + <nat:226> \times <var:k> $ is known as even . The terms $ <var:t> \times <nat:320> $ and likewise $ <nat:76> \times <var:s> $ will be even elements of $ \mathbb{N} $ . Further , the products $ <var:v> \times <nat:324> $ and likewise $ <var:k> \times <nat:226> $ are clearly even natural numbers . What's more , remember that the term $ <nat:322> \times <var:f> $ is clearly even . $ <nat:280> \times <var:b> $ is known as an even number in $ \mathbb{N} $ . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:k> <var:t> <var:f> <var:v> <var:s> <var:b> : nat , Nat . odd ( <nat:226> * <var:k> + <nat:320> * <var:t> + <nat:322> * <var:f> + <nat:324> * <var:v> + <nat:76> * <var:s> + <nat:280> * <var:b> + <nat:81> ) = true . Proof . intros . assert ( <genH> : Nat . odd <nat:81> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:320> * <var:t> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:76> * <var:s> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:324> * <var:v> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:226> * <var:k> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:322> * <var:f> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:280> * <var:b> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:226> * <var:k> + <nat:320> * <var:t> + <nat:322> * <var:f> + <nat:324> * <var:v> + <nat:76> * <var:s> + <nat:280> * <var:b> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . rewrite <genH> . auto . Qed . 