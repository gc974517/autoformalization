\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \newtheorem{definition}{Definition} \begin{document} \begin{definition} We claim that $ <var:F> $ is a <def:seven-composite> positive integer given that taking some $ <var:N> $ , $ <var:a> $ , $ <var:M> $ , $ <var:j> $ , $ <var:G> $ , $ <var:D> $ , $ <var:T> \in \mathbb{N} $ we have where $ <var:G> $ , $ <var:N> $ , $ <var:j> $ , $ <var:a> $ , $ <var:D> $ , $ <var:M> $ and $ <var:T> > <nat:1> $ and for some integer $ <var:F> $ , $ <var:F> = <var:M> * <var:a> * <var:T> * <var:j> * <var:G> * <var:N> * <var:D> $ . \end{definition} \begin{theorem} $ <nat:73920> = <var:F> $ is a <def:seven-composite> whole number . \end{theorem} \begin{proof} Note $ <nat:4> $ , $ <nat:8> $ , $ <nat:11> $ , $ <nat:5> $ , $ <nat:3> $ , $ <nat:7> $ , $ <nat:2> > <nat:1> $ . Also observe that moreover $ <var:j> \times <var:M> \times <var:D> \times <var:G> \times <var:T> \times <var:N> \times <var:a> = <nat:73920> $ yields $ <var:N> = <nat:11> $ , $ <var:D> = <nat:4> $ , $ <var:j> = <nat:8> $ , $ <var:M> = <nat:3> $ , $ <var:a> = <nat:5> $ , $ <var:G> = <nat:2> $ and $ <var:T> = <nat:7> $ . This gives <nat:73920> is <def:seven-composite> . Hence , $ <var:D> $ , $ <var:N> $ , $ <var:G> $ , $ <var:j> $ , $ <var:a> $ , $ <var:T> $ , and $ <var:M> $ are larger than <nat:1> plus <nat:73920> is the product of some $ <var:G> $ , $ <var:M> $ , $ <var:a> $ , $ <var:j> $ , $ <var:N> $ , $ <var:T> $ , $ <var:D> $ has been verified . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:seven-composite> ( <var:F> : nat ) := exists <var:N> <var:a> <var:M> <var:j> <var:G> <var:D> <var:T> : nat , ( <var:G> > <nat:1> ) /\ ( <var:N> > <nat:1> ) /\ ( <var:j> > <nat:1> ) /\ ( <var:a> > <nat:1> ) /\ ( <var:D> > <nat:1> ) /\ ( <var:M> > <nat:1> ) /\ ( <var:T> > <nat:1> ) /\ ( <var:F> = <var:M> * <var:a> * <var:T> * <var:j> * <var:G> * <var:N> * <var:D> ) . Theorem <genP:1> : <def:seven-composite> <nat:73920> . Proof . unfold <def:seven-composite> . assert ( <genH> : <nat:4> > <nat:1> ) . { lia . } assert ( <genH> : <nat:8> > <nat:1> ) . { lia . } assert ( <genH> : <nat:11> > <nat:1> ) . { lia . } assert ( <genH> : <nat:5> > <nat:1> ) . { lia . } assert ( <genH> : <nat:3> > <nat:1> ) . { lia . } assert ( <genH> : <nat:7> > <nat:1> ) . { lia . } assert ( <genH> : <nat:2> > <nat:1> ) . { lia . } exists <nat:11> . exists <nat:5> . exists <nat:3> . exists <nat:8> . exists <nat:2> . exists <nat:4> . exists <nat:7> . repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 