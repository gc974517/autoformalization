\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Assuming any unknowns $ <var:T> $ , $ <var:p> $ , $ <var:g> $ , $ <var:k> $ , $ <var:C> $ , $ <var:Q> $ , and $ <var:S> $ $ <var:g> \times <nat:184> + <var:p> \times <nat:138> + <nat:40> \times <var:Q> + <var:k> \times <nat:268> + <nat:86> \times <var:C> + <var:S> \times <nat:12> + <nat:443> + <nat:410> \times <var:T> $ is guaranteed to be odd . \end{theorem} \begin{proof} Notice that $ <nat:443> $ is odd . The summing between an even number in $ \mathbb{Z}^+ $ and an odd natural will be odd . Observe the terms $ <nat:268> \cdot <var:k> $ , $ <var:C> \cdot <nat:86> $ , $ <nat:12> \cdot <var:S> $ , $ <var:T> \cdot <nat:410> $ , $ <nat:40> \cdot <var:Q> $ , in addition to $ <var:p> \cdot <nat:138> $ are guaranteed to be even as a consequence that the product between an even number with an arbitrary integer is guaranteed to be even plus the numbers $ <nat:268> $ , $ <nat:86> $ , $ <nat:12> $ , $ <nat:410> $ , $ <nat:40> $ , and also $ <nat:138> $ must be even . On top of this , see that the natural number $ <nat:184> $ is guaranteed to be an even number in $ \mathbb{N} $ . Consequently , the term $ <var:g> \cdot <nat:184> $ is guaranteed to be even as well . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:T> <var:p> <var:g> <var:k> <var:C> <var:Q> <var:S> : nat , Nat . odd ( <nat:184> * <var:g> + <nat:138> * <var:p> + <nat:40> * <var:Q> + <nat:268> * <var:k> + <nat:86> * <var:C> + <nat:12> * <var:S> + <nat:410> * <var:T> + <nat:443> ) = true . Proof . intros . assert ( <genH> : Nat . odd <nat:443> = true ) . { auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . assert ( <genH> : Nat . even <nat:268> = true ) . { auto . } assert ( <genH> : Nat . even <nat:86> = true ) . { auto . } assert ( <genH> : Nat . even <nat:12> = true ) . { auto . } assert ( <genH> : Nat . even <nat:410> = true ) . { auto . } assert ( <genH> : Nat . even <nat:40> = true ) . { auto . } assert ( <genH> : Nat . even <nat:138> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:268> * <var:k> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:86> * <var:C> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:12> * <var:S> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:410> * <var:T> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:40> * <var:Q> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:138> * <var:p> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:184> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:184> * <var:g> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 