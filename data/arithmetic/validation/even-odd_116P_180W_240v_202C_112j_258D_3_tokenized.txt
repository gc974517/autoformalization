\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:3> + <nat:180> * <var:W> + <nat:258> * <var:D> + <var:v> * <nat:240> + <var:j> * <nat:112> + <var:C> * <nat:202> + <var:P> * <nat:116> $ will be odd . \end{theorem} \begin{proof} We verify our lemma is proven . We demonstrate the sum $ <nat:116> \times <var:P> + <var:W> \times <nat:180> + <var:v> \times <nat:240> + <var:C> \times <nat:202> + <var:j> \times <nat:112> + <nat:258> \times <var:D> $ is known as even . Observe the pairs $ <nat:116> \cdot <var:P> $ , $ <nat:180> \cdot <var:W> $ , $ <nat:258> \cdot <var:D> $ , plus $ <nat:240> \cdot <var:v> $ must be even numbers . This claim is proven by reason that multiplying of an even number in $ \mathbb{Z}^+ $ with any number is guaranteed to be an even natural number . Adding on , we know $ <nat:112> \cdot <var:j> $ is known to be an even natural . Building on , the product $ <var:C> \cdot <nat:202> $ is clearly an even integer . This fact is true from the knowledge the product of an even integer and any number must be even . Since taking the product between even integers with some natural number will be even the lemma must be true . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:W> <var:D> <var:v> <var:j> <var:C> <var:P> : nat , Nat . odd ( <nat:180> * <var:W> + <nat:258> * <var:D> + <nat:240> * <var:v> + <nat:112> * <var:j> + <nat:202> * <var:C> + <nat:116> * <var:P> + <nat:3> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:116> * <var:P> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:180> * <var:W> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:258> * <var:D> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:240> * <var:v> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:112> * <var:j> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:202> * <var:C> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:180> * <var:W> + <nat:258> * <var:D> + <nat:240> * <var:v> + <nat:112> * <var:j> + <nat:202> * <var:C> + <nat:116> * <var:P> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . auto . Qed . 