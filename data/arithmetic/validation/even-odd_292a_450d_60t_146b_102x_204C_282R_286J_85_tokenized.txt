\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Given every whole numbers $ <var:d> $ , $ <var:b> $ , $ <var:t> $ , $ <var:x> $ , $ <var:a> $ , $ <var:R> $ , $ <var:C> $ , and $ <var:J> $ the expression $ <nat:292> \times <var:a> + <var:d> \times <nat:450> + <var:t> \times <nat:60> + <nat:146> \times <var:b> + <var:x> \times <nat:102> + <nat:204> \times <var:C> + <var:R> \times <nat:282> + <var:J> \times <nat:286> + <nat:85> $ will be odd . \end{theorem} \begin{proof} Recall that the product between an even element of $ \mathbb{N} $ and a integer is guaranteed to be fundamentally an even number in $ \mathbb{Z}^+ $ . The positive integers $ <nat:204> $ , $ <nat:282> $ , $ <nat:292> $ , $ <nat:286> $ , $ <nat:102> $ , $ <nat:146> $ , and also $ <nat:450> $ will be even numbers in $ \mathbb{Z}^+ $ What's more , the coefficient $ <nat:60> $ is obviously an even number in $ \mathbb{Z}^+ $ \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:d> <var:b> <var:t> <var:x> <var:a> <var:R> <var:C> <var:J> : nat , Nat . odd ( <nat:292> * <var:a> + <nat:450> * <var:d> + <nat:60> * <var:t> + <nat:146> * <var:b> + <nat:102> * <var:x> + <nat:204> * <var:C> + <nat:282> * <var:R> + <nat:286> * <var:J> + <nat:85> ) = true . Proof . intros . rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . repeat rewrite Nat . even_mul . assert ( <genH> : Nat . even <nat:204> = true ) . { auto . } assert ( <genH> : Nat . even <nat:282> = true ) . { auto . } assert ( <genH> : Nat . even <nat:292> = true ) . { auto . } assert ( <genH> : Nat . even <nat:286> = true ) . { auto . } assert ( <genH> : Nat . even <nat:102> = true ) . { auto . } assert ( <genH> : Nat . even <nat:146> = true ) . { auto . } assert ( <genH> : Nat . even <nat:450> = true ) . { auto . } assert ( <genH> : Nat . even <nat:60> = true ) . { auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 