\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:d> \cdot <nat:288> + <nat:472> \cdot <var:T> + <var:I> \cdot <nat:268> + <nat:24> \cdot <var:j> + <var:m> \cdot <nat:118> + <nat:184> + <var:n> \cdot <nat:384> $ must be even . \end{theorem} \begin{proof} We prove the theorem must be true . We know the pairs $ <var:j> \cdot <nat:24> $ , $ <var:n> \cdot <nat:384> $ , $ <nat:118> \cdot <var:m> $ , $ <var:T> \cdot <nat:472> $ , and moreover $ <nat:268> \cdot <var:I> $ are even numbers from the knowledge the whole numbers $ <nat:24> $ , $ <nat:384> $ , $ <nat:118> $ , $ <nat:472> $ , and likewise $ <nat:268> $ are known as even . The product $ <var:d> \cdot <nat:288> $ is trivially an even integer as a consequence that the leading term $ <nat:288> $ is clearly even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:d> <var:T> <var:I> <var:j> <var:m> <var:n> : nat , Nat . even ( <nat:288> * <var:d> + <nat:472> * <var:T> + <nat:268> * <var:I> + <nat:24> * <var:j> + <nat:118> * <var:m> + <nat:384> * <var:n> + <nat:184> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:24> = true ) . { auto . } assert ( <genH> : Nat . even <nat:384> = true ) . { auto . } assert ( <genH> : Nat . even <nat:118> = true ) . { auto . } assert ( <genH> : Nat . even <nat:472> = true ) . { auto . } assert ( <genH> : Nat . even <nat:268> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:24> * <var:j> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:384> * <var:n> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:118> * <var:m> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:472> * <var:T> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:268> * <var:I> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:288> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:288> * <var:d> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 