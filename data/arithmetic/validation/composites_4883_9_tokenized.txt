\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Assume $ <var:T> $ , $ <var:s> $ , $ <var:d> $ , $ <var:y> $ , $ <var:A> $ , $ <var:D> $ , $ <var:C> $ , $ <var:v> $ , $ <var:P> \in \mathbb{N} $ . Take as given that some natural number $ <var:O> $ will be named a <def:nine-composite> natural number assuming $ <var:O> = <var:v> * <var:P> * <var:d> * <var:D> * <var:y> * <var:T> * <var:A> * <var:s> * <var:C> $ as well as unique terms are more than <nat:1> . Therefore $ <var:O> = <nat:6652800> $ is <def:nine-composite> . \end{theorem} \begin{proof} We verify $ <var:d> \cdot <var:D> \cdot <var:P> \cdot <var:v> \cdot <var:C> \cdot <var:y> \cdot <var:A> \cdot <var:s> \cdot <var:T> = <nat:6652800> $ and $ <var:P> $ , $ <var:C> $ , $ <var:T> $ , $ <var:v> $ , $ <var:D> $ , $ <var:A> $ , $ <var:d> $ , $ <var:s> $ and $ <var:y> > <nat:1> $ . Observe that $ <nat:10> $ , $ <nat:3> $ , $ <nat:7> $ , $ <nat:2> $ , $ <nat:8> $ , $ <nat:11> $ , $ <nat:4> $ , $ <nat:5> $ , and $ <nat:9> > <nat:1> $ . Additionally notice also $ <nat:6652800> = <nat:10> * <nat:5> * <nat:2> * <nat:4> * <nat:11> * <nat:3> * <nat:7> * <nat:9> * <nat:8> = <var:T> * <var:P> * <var:y> * <var:D> * <var:d> * <var:v> * <var:A> * <var:C> * <var:s> $ . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:nine-composite> ( <var:O> : nat ) := exists <var:T> <var:s> <var:d> <var:y> <var:A> <var:D> <var:C> <var:v> <var:P> : nat , ( <var:O> = <var:v> * <var:P> * <var:d> * <var:D> * <var:y> * <var:T> * <var:A> * <var:s> * <var:C> ) /\ ( <var:T> > <nat:1> ) /\ ( <var:s> > <nat:1> ) /\ ( <var:d> > <nat:1> ) /\ ( <var:y> > <nat:1> ) /\ ( <var:A> > <nat:1> ) /\ ( <var:D> > <nat:1> ) /\ ( <var:C> > <nat:1> ) /\ ( <var:v> > <nat:1> ) /\ ( <var:P> > <nat:1> ) . Theorem <genP:1> : <def:nine-composite> <nat:6652800> . Proof . unfold <def:nine-composite> . assert ( <genH> : <nat:10> > <nat:1> ) . { lia . } assert ( <genH> : <nat:3> > <nat:1> ) . { lia . } assert ( <genH> : <nat:7> > <nat:1> ) . { lia . } assert ( <genH> : <nat:2> > <nat:1> ) . { lia . } assert ( <genH> : <nat:8> > <nat:1> ) . { lia . } assert ( <genH> : <nat:11> > <nat:1> ) . { lia . } assert ( <genH> : <nat:4> > <nat:1> ) . { lia . } assert ( <genH> : <nat:5> > <nat:1> ) . { lia . } assert ( <genH> : <nat:9> > <nat:1> ) . { lia . } exists <nat:10> . exists <nat:8> . exists <nat:11> . exists <nat:2> . exists <nat:7> . exists <nat:4> . exists <nat:9> . exists <nat:3> . exists <nat:5> . repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 