\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Given unknowns $ <var:c> $ , $ <var:x> $ , $ <var:h> $ , and $ <var:M> $ the expression $ <nat:276> \cdot <var:M> + <var:h> \cdot <nat:224> + <nat:331> + <var:x> \cdot <nat:496> + <var:c> \cdot <nat:422> $ will be odd . \end{theorem} \begin{proof} Our claim must be true because $ <var:x> <nat:496> + <nat:224> <var:h> + <var:M> <nat:276> + <nat:422> <var:c> $ is clearly even . $ <nat:496> \cdot <var:x> $ is guaranteed to be even . This fact is true from the knowledge the coefficient $ <nat:496> $ is clearly an even positive integer . Building on , notice that $ <var:h> \cdot <nat:224> $ is trivially even . This fact holds from the knowledge the leading term $ <nat:224> $ is guaranteed to be an even positive integer . In addition , we know that the product $ <nat:422> \cdot <var:c> $ is trivially even because the whole number $ <nat:422> $ is clearly even . In addition , notice the pair $ <nat:276> \cdot <var:M> $ is trivially an even natural number from the knowledge the leading term $ <nat:276> $ is guaranteed to be even . By reason that the multiplication of an even element of $ \mathbb{N} $ with any whole number must be even the summation $ <nat:496> * <var:x> + <nat:422> * <var:c> + <nat:276> * <var:M> + <var:h> * <nat:224> $ must be even . Recall $ <nat:331> $ is trivially odd . It can be demonstrated that this claim is proven . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:c> <var:x> <var:h> <var:M> : nat , Nat . odd ( <nat:276> * <var:M> + <nat:224> * <var:h> + <nat:496> * <var:x> + <nat:422> * <var:c> + <nat:331> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:496> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:496> * <var:x> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:224> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:224> * <var:h> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:422> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:422> * <var:c> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:276> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:276> * <var:M> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:276> * <var:M> + <nat:224> * <var:h> + <nat:496> * <var:x> + <nat:422> * <var:c> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } assert ( <genH> : Nat . odd <nat:331> = true ) . { auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . rewrite <genH> . auto . Qed . 