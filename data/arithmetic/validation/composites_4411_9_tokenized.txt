\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Take $ <var:F> $ , $ <var:D> $ , $ <var:n> $ , $ <var:E> $ , $ <var:k> $ , $ <var:e> $ , $ <var:X> $ , $ <var:f> $ , and $ <var:K> \in \mathbb{Z}^+ $ so that $ <var:F> $ , $ <var:D> $ , $ <var:f> $ , $ <var:k> $ , $ <var:E> $ , $ <var:n> $ , $ <var:X> $ , $ <var:e> $ and $ <var:K> $ more than or equal to <nat:2> as well as such that $ <var:F> * <var:k> * <var:E> * <var:K> * <var:n> * <var:D> * <var:e> * <var:X> * <var:f> $ is the same as $ <nat:11404800> $ . \end{theorem} \begin{proof} Note that $ <nat:8> * <nat:9> * <nat:11> * <nat:12> * <nat:10> * <nat:3> * <nat:4> * <nat:5> * <nat:2> = <nat:11404800> $ . Further note that $ <nat:12> $ , $ <nat:5> $ , $ <nat:4> $ , $ <nat:2> $ , $ <nat:11> $ , $ <nat:8> $ , $ <nat:10> $ , $ <nat:9> $ , $ <nat:3> $ are greater than or equivalent to <nat:2> . \end{proof} \end{document} 
~
Require Import Lia . Theorem <genP:1> : exists <var:F> <var:D> <var:n> <var:E> <var:k> <var:e> <var:X> <var:f> <var:K> : nat , ( <var:F> >= <nat:2> ) /\ ( <var:D> >= <nat:2> ) /\ ( <var:f> >= <nat:2> ) /\ ( <var:k> >= <nat:2> ) /\ ( <var:E> >= <nat:2> ) /\ ( <var:n> >= <nat:2> ) /\ ( <var:X> >= <nat:2> ) /\ ( <var:e> >= <nat:2> ) /\ ( <var:K> >= <nat:2> ) /\ ( <var:F> * <var:k> * <var:E> * <var:K> * <var:n> * <var:D> * <var:e> * <var:X> * <var:f> = <nat:11404800> ) . Proof . exists <nat:9> . exists <nat:11> . exists <nat:3> . exists <nat:5> . exists <nat:10> . exists <nat:4> . exists <nat:2> . exists <nat:12> . exists <nat:8> . assert ( <genH> : <nat:12> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:5> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:4> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:2> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:11> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:8> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:10> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:9> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:3> >= <nat:2> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 