\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:456> * <var:Z> + <nat:276> * <var:g> + <nat:130> + <nat:10> * <var:V> + <var:f> * <nat:90> + <nat:174> * <var:o> + <nat:402> * <var:I> + <var:C> * <nat:278> + <var:a> * <nat:432> $ is even given some variables $ <var:g> $ , $ <var:V> $ , $ <var:f> $ , $ <var:Z> $ , $ <var:a> $ , $ <var:I> $ , $ <var:o> $ , and $ <var:C> $ . \end{theorem} \begin{proof} The natural numbers $ <nat:278> $ , $ <nat:402> $ , $ <nat:276> $ , $ <nat:456> $ , $ <nat:432> $ , additionally $ <nat:174> $ are known to be even elements of $ \mathbb{Z}^+ $ . So , the terms $ <var:C> \cdot <nat:278> $ , $ <nat:402> \cdot <var:I> $ , $ <nat:276> \cdot <var:g> $ , $ <nat:456> \cdot <var:Z> $ , $ <var:a> \cdot <nat:432> $ , and moreover $ <nat:174> \cdot <var:o> $ is guaranteed to be even also . The integer $ <nat:10> $ is an even natural number . For this reason , $ <nat:10> \cdot <var:V> $ must be even also . On top of this , the number $ <nat:90> $ is even . Consequently , the product $ <var:f> \cdot <nat:90> $ will be even too . Observe $ <nat:130> $ is an even number in $ \mathbb{N} $ . We justify this lemma is proven . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:g> <var:V> <var:f> <var:Z> <var:a> <var:I> <var:o> <var:C> : nat , Nat . even ( <nat:456> * <var:Z> + <nat:276> * <var:g> + <nat:10> * <var:V> + <nat:90> * <var:f> + <nat:174> * <var:o> + <nat:402> * <var:I> + <nat:278> * <var:C> + <nat:432> * <var:a> + <nat:130> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:278> = true ) . { auto . } assert ( <genH> : Nat . even <nat:402> = true ) . { auto . } assert ( <genH> : Nat . even <nat:276> = true ) . { auto . } assert ( <genH> : Nat . even <nat:456> = true ) . { auto . } assert ( <genH> : Nat . even <nat:432> = true ) . { auto . } assert ( <genH> : Nat . even <nat:174> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:278> * <var:C> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:402> * <var:I> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:276> * <var:g> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:456> * <var:Z> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:432> * <var:a> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:174> * <var:o> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:10> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:10> * <var:V> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:90> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:90> * <var:f> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:130> = true ) . { auto . } repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 