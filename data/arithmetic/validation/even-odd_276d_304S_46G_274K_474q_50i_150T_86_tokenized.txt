\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:S> \cdot <nat:304> + <var:K> \cdot <nat:274> + <nat:276> \cdot <var:d> + <nat:86> + <nat:50> \cdot <var:i> + <nat:150> \cdot <var:T> + <var:G> \cdot <nat:46> + <nat:474> \cdot <var:q> $ is even assuming all positive integers $ <var:G> $ , $ <var:i> $ , $ <var:S> $ , $ <var:K> $ , $ <var:d> $ , $ <var:q> $ , and $ <var:T> $ . \end{theorem} \begin{proof} We prove the sum $ <var:d> * <nat:276> + <nat:304> * <var:S> + <nat:46> * <var:G> + <var:K> * <nat:274> + <nat:86> + <var:q> * <nat:474> + <var:i> * <nat:50> + <nat:150> * <var:T> $ is guaranteed to be even . The pairs $ <nat:150> * <var:T> $ and moreover $ <nat:274> * <var:K> $ are clearly even . This fact holds by reason that the product between an even element of $ \mathbb{N} $ and a positive integer must be an even natural . Furthermore , the products $ <nat:50> * <var:i> $ as well as $ <var:G> * <nat:46> $ are trivially even . Observe that the pairs $ <nat:304> * <var:S> $ as well as $ <nat:276> * <var:d> $ must be even since taking the product of an even number and an arbitrary whole number is guaranteed to be an even whole number . The pair $ <var:q> * <nat:474> $ is trivially even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:G> <var:i> <var:S> <var:K> <var:d> <var:q> <var:T> : nat , Nat . even ( <nat:304> * <var:S> + <nat:274> * <var:K> + <nat:276> * <var:d> + <nat:50> * <var:i> + <nat:150> * <var:T> + <nat:46> * <var:G> + <nat:474> * <var:q> + <nat:86> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:150> * <var:T> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:274> * <var:K> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:50> * <var:i> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:46> * <var:G> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:304> * <var:S> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:276> * <var:d> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:474> * <var:q> ) = true ) . { rewrite Nat . even_mul . auto . } repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 