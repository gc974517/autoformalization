\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \newtheorem{definition}{Definition} \begin{document} \begin{definition} Let $ <var:T> $ , $ <var:I> $ , $ <var:s> $ , $ <var:C> $ , $ <var:a> $ , $ <var:p> $ , $ <var:b> $ , $ <var:R> \in \mathbb{N} $ satisfying the condition that $ <var:R> $ , $ <var:I> $ , $ <var:s> $ , $ <var:a> $ , $ <var:p> $ , $ <var:b> $ , $ <var:C> $ , and $ <var:T> \geq <nat:2> $ . We assume that some $ <var:S> $ is considered a <def:eight-composite> integer when $ <var:T> \cdot <var:b> \cdot <var:I> \cdot <var:R> \cdot <var:a> \cdot <var:p> \cdot <var:C> \cdot <var:s> = <var:S> $ . \end{definition} \begin{theorem} The integer <nat:1267200> is a <def:eight-composite> whole number . \end{theorem} \begin{proof} We prove $ <nat:1267200> = <var:p> * <var:a> * <var:s> * <var:C> * <var:T> * <var:b> * <var:R> * <var:I> $ . Notice $ <nat:1267200> = <nat:2> \times <nat:3> \times <nat:12> \times <nat:4> \times <nat:8> \times <nat:10> \times <nat:5> \times <nat:11> = <var:I> \times <var:C> \times <var:p> \times <var:a> \times <var:b> \times <var:T> \times <var:R> \times <var:s> $ . What's more observe $ <nat:12> $ , $ <nat:2> $ , $ <nat:4> $ , $ <nat:3> $ , $ <nat:10> $ , $ <nat:11> $ , $ <nat:8> $ , and $ <nat:5> \geq <nat:2> $ . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:eight-composite> ( <var:S> : nat ) := exists <var:T> <var:I> <var:s> <var:C> <var:a> <var:p> <var:b> <var:R> : nat , ( <var:R> >= <nat:2> ) /\ ( <var:I> >= <nat:2> ) /\ ( <var:s> >= <nat:2> ) /\ ( <var:a> >= <nat:2> ) /\ ( <var:p> >= <nat:2> ) /\ ( <var:b> >= <nat:2> ) /\ ( <var:C> >= <nat:2> ) /\ ( <var:T> >= <nat:2> ) /\ ( <var:T> * <var:b> * <var:I> * <var:R> * <var:a> * <var:p> * <var:C> * <var:s> = <var:S> ) . Theorem <genP:1> : <def:eight-composite> <nat:1267200> . Proof . unfold <def:eight-composite> . exists <nat:10> . exists <nat:2> . exists <nat:11> . exists <nat:3> . exists <nat:4> . exists <nat:12> . exists <nat:8> . exists <nat:5> . assert ( <genH> : <nat:12> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:2> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:4> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:3> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:10> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:11> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:8> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:5> >= <nat:2> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 