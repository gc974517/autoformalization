\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Taking any unknowns $ <var:J> $ , $ <var:y> $ , $ <var:G> $ , and $ <var:B> $ the formula $ <nat:214> \cdot <var:J> + <var:G> \cdot <nat:296> + <var:B> \cdot <nat:438> + <nat:419> + <nat:334> \cdot <var:y> $ must be odd . \end{theorem} \begin{proof} Notice the summation $ <nat:214> * <var:J> + <nat:419> + <nat:334> * <var:y> + <nat:438> * <var:B> + <nat:296> * <var:G> $ is odd because $ <nat:296> \times <var:G> + <nat:214> \times <var:J> + <var:B> \times <nat:438> + <nat:334> \times <var:y> $ is trivially even . The terms $ <var:G> <nat:296> $ plus $ <var:y> <nat:334> $ must be even elements of $ \mathbb{N} $ . Adding on , see $ <var:J> <nat:214> $ is obviously an even number . This claim is proven as a consequence that the product between an even element of $ \mathbb{Z}^+ $ and a natural number is guaranteed to be even . In addition , the product $ <nat:438> <var:B> $ is even . This fact is true as a consequence that the multiplication between an even number and some whole number is guaranteed to be even . From the fact the adding between an even positive integer with even whole numbers is even , the formula $ <nat:334> \cdot <var:y> + <nat:438> \cdot <var:B> + <var:G> \cdot <nat:296> + <nat:214> \cdot <var:J> $ is even . It can be shown that the expression $ <nat:214> <var:J> + <var:y> <nat:334> + <var:B> <nat:438> + <nat:419> + <nat:296> <var:G> $ will be odd . See $ <nat:419> $ is known to be an odd number in $ \mathbb{N} $ . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:J> <var:y> <var:G> <var:B> : nat , Nat . odd ( <nat:214> * <var:J> + <nat:296> * <var:G> + <nat:438> * <var:B> + <nat:334> * <var:y> + <nat:419> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:296> * <var:G> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:334> * <var:y> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:214> * <var:J> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:438> * <var:B> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:214> * <var:J> + <nat:296> * <var:G> + <nat:438> * <var:B> + <nat:334> * <var:y> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } assert ( <genH> : Nat . odd <nat:419> = true ) . { auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . rewrite <genH> . auto . Qed . 