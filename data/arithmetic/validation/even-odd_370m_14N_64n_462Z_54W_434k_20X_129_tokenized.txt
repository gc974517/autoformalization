\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Using any positive integers $ <var:N> $ , $ <var:W> $ , $ <var:k> $ , $ <var:Z> $ , $ <var:n> $ , $ <var:m> $ , and $ <var:X> $ $ <var:X> \times <nat:20> + <nat:370> \times <var:m> + <var:Z> \times <nat:462> + <var:N> \times <nat:14> + <nat:434> \times <var:k> + <var:n> \times <nat:64> + <nat:54> \times <var:W> + <nat:129> $ is odd . \end{theorem} \begin{proof} Recall that the product of an even number in $ \mathbb{Z}^+ $ and some number in $ \mathbb{Z}^+ $ must be obviously an even whole number . The coefficients $ <nat:14> $ plus $ <nat:370> $ are known to be even integers Additionally , notice the leading terms $ <nat:54> $ , $ <nat:434> $ , additionally $ <nat:64> $ will be even positive integers The integer $ <nat:462> $ is known as an even natural The coefficient $ <nat:20> $ is clearly an even natural number It can be shown that $ <var:m> \times <nat:370> + <nat:14> \times <var:N> + <nat:129> + <nat:64> \times <var:n> + <nat:462> \times <var:Z> + <nat:54> \times <var:W> + <nat:434> \times <var:k> + <nat:20> \times <var:X> $ will be odd . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:N> <var:W> <var:k> <var:Z> <var:n> <var:m> <var:X> : nat , Nat . odd ( <nat:20> * <var:X> + <nat:370> * <var:m> + <nat:462> * <var:Z> + <nat:14> * <var:N> + <nat:434> * <var:k> + <nat:64> * <var:n> + <nat:54> * <var:W> + <nat:129> ) = true . Proof . intros . rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . repeat rewrite Nat . even_mul . assert ( <genH> : Nat . even <nat:14> = true ) . { auto . } assert ( <genH> : Nat . even <nat:370> = true ) . { auto . } assert ( <genH> : Nat . even <nat:54> = true ) . { auto . } assert ( <genH> : Nat . even <nat:434> = true ) . { auto . } assert ( <genH> : Nat . even <nat:64> = true ) . { auto . } assert ( <genH> : Nat . even <nat:462> = true ) . { auto . } assert ( <genH> : Nat . even <nat:20> = true ) . { auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 