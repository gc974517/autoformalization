\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Let $ <var:S> $ , $ <var:Q> $ , $ <var:F> $ , $ <var:e> $ , $ <var:Y> $ , $ <var:E> $ , $ <var:A> $ be numbers larger than <nat:1> . Denote that some $ <var:z> $ will be named a <def:seven-composite> integer assuming $ <var:z> = <var:F> \cdot <var:A> \cdot <var:S> \cdot <var:E> \cdot <var:Q> \cdot <var:Y> \cdot <var:e> $ . Accordingly $ <nat:831600> = <var:z> $ is <def:seven-composite> . \end{theorem} \begin{proof} We confirm our belief holds in consideration of $ <var:E> \times <var:Q> \times <var:A> \times <var:e> \times <var:S> \times <var:Y> \times <var:F> = <nat:831600> $ yields $ <var:F> = <nat:7> $ , $ <var:Y> = <nat:5> $ , $ <var:Q> = <nat:10> $ , $ <var:e> = <nat:9> $ , $ <var:A> = <nat:11> $ , $ <var:S> = <nat:2> $ , and $ <var:E> = <nat:12> $ plus $ <nat:2> $ , $ <nat:7> $ , $ <nat:10> $ , $ <nat:5> $ , $ <nat:12> $ , $ <nat:9> $ and $ <nat:11> > <nat:1> $ . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:seven-composite> ( <var:z> : nat ) := exists <var:S> <var:Q> <var:F> <var:e> <var:Y> <var:E> <var:A> : nat , ( <var:S> > <nat:1> ) /\ ( <var:Q> > <nat:1> ) /\ ( <var:F> > <nat:1> ) /\ ( <var:e> > <nat:1> ) /\ ( <var:Y> > <nat:1> ) /\ ( <var:E> > <nat:1> ) /\ ( <var:A> > <nat:1> ) /\ ( <var:z> = <var:F> * <var:A> * <var:S> * <var:E> * <var:Q> * <var:Y> * <var:e> ) . Theorem <genP:1> : <def:seven-composite> <nat:831600> . Proof . unfold <def:seven-composite> . exists <nat:2> . exists <nat:10> . exists <nat:7> . exists <nat:9> . exists <nat:5> . exists <nat:12> . exists <nat:11> . assert ( <genH> : <nat:2> > <nat:1> ) . { lia . } assert ( <genH> : <nat:7> > <nat:1> ) . { lia . } assert ( <genH> : <nat:10> > <nat:1> ) . { lia . } assert ( <genH> : <nat:5> > <nat:1> ) . { lia . } assert ( <genH> : <nat:12> > <nat:1> ) . { lia . } assert ( <genH> : <nat:9> > <nat:1> ) . { lia . } assert ( <genH> : <nat:11> > <nat:1> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 