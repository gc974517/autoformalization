\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Supposing we have where $ <var:H> $ , $ <var:z> $ , $ <var:O> $ , $ <var:b> $ , $ <var:V> $ , $ <var:h> $ , $ <var:f> > <nat:1> $ so that using some positive integer $ <var:P> $ , $ <var:V> \cdot <var:f> \cdot <var:z> \cdot <var:H> \cdot <var:b> \cdot <var:O> \cdot <var:h> = <var:P> $ given some $ <var:V> $ , $ <var:f> $ , $ <var:O> $ , $ <var:b> $ , $ <var:z> $ , $ <var:H> $ , $ <var:h> \in \mathbb{N} $ , we define that $ <var:P> $ is a <def:seven-composite> natural number . Thus <nat:115200> is a <def:seven-composite> positive integer . \end{theorem} \begin{proof} Let $ <var:z> = <nat:2> $ , $ <var:b> = <nat:10> $ , $ <var:f> = <nat:3> $ , $ <var:h> = <nat:8> $ , $ <var:O> = <nat:12> $ , $ <var:V> = <nat:5> $ and $ <var:H> = <nat:4> $ . Plus observe $ <var:f> = <nat:3> $ , $ <var:H> = <nat:4> $ , $ <var:b> = <nat:10> $ , $ <var:V> = <nat:5> $ , $ <var:h> = <nat:8> $ , $ <var:O> = <nat:12> $ , $ <var:z> = <nat:2> $ are more than <nat:1> . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:seven-composite> ( <var:P> : nat ) := exists <var:V> <var:f> <var:O> <var:b> <var:z> <var:H> <var:h> : nat , ( <var:H> > <nat:1> ) /\ ( <var:z> > <nat:1> ) /\ ( <var:O> > <nat:1> ) /\ ( <var:b> > <nat:1> ) /\ ( <var:V> > <nat:1> ) /\ ( <var:h> > <nat:1> ) /\ ( <var:f> > <nat:1> ) /\ ( <var:V> * <var:f> * <var:z> * <var:H> * <var:b> * <var:O> * <var:h> = <var:P> ) . Theorem <genP:1> : <def:seven-composite> <nat:115200> . Proof . unfold <def:seven-composite> . exists <nat:5> . exists <nat:3> . exists <nat:12> . exists <nat:10> . exists <nat:2> . exists <nat:4> . exists <nat:8> . assert ( <genH> : <nat:3> > <nat:1> ) . { lia . } assert ( <genH> : <nat:4> > <nat:1> ) . { lia . } assert ( <genH> : <nat:10> > <nat:1> ) . { lia . } assert ( <genH> : <nat:5> > <nat:1> ) . { lia . } assert ( <genH> : <nat:8> > <nat:1> ) . { lia . } assert ( <genH> : <nat:12> > <nat:1> ) . { lia . } assert ( <genH> : <nat:2> > <nat:1> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 