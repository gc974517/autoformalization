\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} For every natural terms $ <var:j> $ , $ <var:V> $ , $ <var:m> $ , $ <var:D> $ , $ <var:w> $ , $ <var:Q> $ , and $ <var:d> $ $ <nat:52> \times <var:d> + <nat:211> + <nat:380> \times <var:m> + <nat:336> \times <var:j> + <nat:160> \times <var:V> + <var:w> \times <nat:398> + <var:Q> \times <nat:410> + <var:D> \times <nat:146> $ will be odd . \end{theorem} \begin{proof} The summing of an even number in $ \mathbb{Z}^+ $ with an odd element of $ \mathbb{N} $ is odd . Adding on , observe the coefficients $ <nat:52> $ , $ <nat:380> $ , $ <nat:336> $ , $ <nat:160> $ , $ <nat:398> $ , $ <nat:410> $ , and likewise $ <nat:146> $ are even . In consequence , the products $ <nat:52> <var:d> $ , $ <nat:380> <var:m> $ , $ <nat:336> <var:j> $ , $ <var:V> <nat:160> $ , $ <var:w> <nat:398> $ , $ <nat:410> <var:Q> $ , and $ <nat:146> <var:D> $ must be even additionally . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:j> <var:V> <var:m> <var:D> <var:w> <var:Q> <var:d> : nat , Nat . odd ( <nat:52> * <var:d> + <nat:380> * <var:m> + <nat:336> * <var:j> + <nat:160> * <var:V> + <nat:398> * <var:w> + <nat:410> * <var:Q> + <nat:146> * <var:D> + <nat:211> ) = true . Proof . intros . rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . assert ( <genH> : Nat . even <nat:52> = true ) . { auto . } assert ( <genH> : Nat . even <nat:380> = true ) . { auto . } assert ( <genH> : Nat . even <nat:336> = true ) . { auto . } assert ( <genH> : Nat . even <nat:160> = true ) . { auto . } assert ( <genH> : Nat . even <nat:398> = true ) . { auto . } assert ( <genH> : Nat . even <nat:410> = true ) . { auto . } assert ( <genH> : Nat . even <nat:146> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:52> * <var:d> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:380> * <var:m> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:336> * <var:j> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:160> * <var:V> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:398> * <var:w> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:410> * <var:Q> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:146> * <var:D> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 