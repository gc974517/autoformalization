\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:M> \cdot <nat:40> + <nat:362> \cdot <var:Z> + <nat:394> \cdot <var:K> + <var:H> \cdot <nat:436> + <nat:175> + <var:X> \cdot <nat:452> + <var:Q> \cdot <nat:10> + <var:R> \cdot <nat:364> $ must be odd . \end{theorem} \begin{proof} This result must be true from the knowledge $ <nat:10> \times <var:Q> + <nat:362> \times <var:Z> + <nat:394> \times <var:K> + <nat:452> \times <var:X> + <nat:436> \times <var:H> + <nat:40> \times <var:M> + <nat:364> \times <var:R> $ is guaranteed to be even , because the adding between an even positive integer with an even positive integer is guaranteed to be instrinsically an even number . The pairs $ <nat:362> \times <var:Z> $ , $ <var:Q> \times <nat:10> $ , $ <nat:40> \times <var:M> $ , $ <var:K> \times <nat:394> $ , as well as $ <var:X> \times <nat:452> $ are trivially even naturals . Notice that the pair $ <nat:364> \times <var:R> $ is clearly an even whole number from the fact the multiplication between an even number in $ \mathbb{Z}^+ $ with any element of $ \mathbb{N} $ is an even element of $ \mathbb{N} $ . We know that the product $ <var:H> \times <nat:436> $ is guaranteed to be even . This claim holds because the multiplication between an even element of $ \mathbb{N} $ with a integer is even . and moreover because taking the product between an even whole number with an arbitrary element of $ \mathbb{N} $ will be even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:M> <var:Z> <var:K> <var:H> <var:X> <var:Q> <var:R> : nat , Nat . odd ( <nat:40> * <var:M> + <nat:362> * <var:Z> + <nat:394> * <var:K> + <nat:436> * <var:H> + <nat:452> * <var:X> + <nat:10> * <var:Q> + <nat:364> * <var:R> + <nat:175> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:362> * <var:Z> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:10> * <var:Q> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:40> * <var:M> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:394> * <var:K> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:452> * <var:X> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:364> * <var:R> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:436> * <var:H> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:40> * <var:M> + <nat:362> * <var:Z> + <nat:394> * <var:K> + <nat:436> * <var:H> + <nat:452> * <var:X> + <nat:10> * <var:Q> + <nat:364> * <var:R> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . auto . Qed . 