\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:Y> * <nat:26> + <var:p> * <nat:44> + <nat:482> * <var:d> + <nat:343> + <nat:312> * <var:E> + <var:Q> * <nat:158> + <nat:362> * <var:B> + <nat:106> * <var:P> $ is guaranteed to be odd . \end{theorem} \begin{proof} We check this result is true . Recall $ <nat:343> $ is obviously odd . Remember that the summation $ <var:d> <nat:482> + <nat:106> <var:P> + <nat:312> <var:E> + <nat:362> <var:B> + <nat:44> <var:p> + <nat:26> <var:Y> + <var:Q> <nat:158> $ is known as even . Remember that the totaling between an even natural with an even element of $ \mathbb{Z}^+ $ is guaranteed to be by definition an even number in $ \mathbb{N} $ . Recall the leading terms $ <nat:312> $ , $ <nat:362> $ , $ <nat:482> $ , $ <nat:44> $ , and $ <nat:106> $ are known to be even In addition to this , remember that the positive integer $ <nat:26> $ is clearly even We know that the positive integer $ <nat:158> $ is even plus from the knowledge multiplying between even naturals with an arbitrary number in $ \mathbb{Z}^+ $ is an even integer $ <nat:44> * <var:p> + <var:B> * <nat:362> + <nat:482> * <var:d> + <var:E> * <nat:312> + <nat:26> * <var:Y> + <var:Q> * <nat:158> + <nat:106> * <var:P> $ is guaranteed to be fundamentally even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:Y> <var:p> <var:d> <var:E> <var:Q> <var:B> <var:P> : nat , Nat . odd ( <nat:26> * <var:Y> + <nat:44> * <var:p> + <nat:482> * <var:d> + <nat:312> * <var:E> + <nat:158> * <var:Q> + <nat:362> * <var:B> + <nat:106> * <var:P> + <nat:343> ) = true . Proof . intros . assert ( <genH> : Nat . odd <nat:343> = true ) . { auto . } assert ( <genH> : Nat . even <nat:312> = true ) . { auto . } assert ( <genH> : Nat . even <nat:362> = true ) . { auto . } assert ( <genH> : Nat . even <nat:482> = true ) . { auto . } assert ( <genH> : Nat . even <nat:44> = true ) . { auto . } assert ( <genH> : Nat . even <nat:106> = true ) . { auto . } assert ( <genH> : Nat . even <nat:26> = true ) . { auto . } assert ( <genH> : Nat . even <nat:158> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:26> * <var:Y> + <nat:44> * <var:p> + <nat:482> * <var:d> + <nat:312> * <var:E> + <nat:158> * <var:Q> + <nat:362> * <var:B> + <nat:106> * <var:P> ) = true ) . { repeat rewrite Nat . even_add . repeat rewrite Nat . even_mul . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . rewrite <genH> . auto . Qed . 