\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:m> * <nat:148> + <nat:400> * <var:R> + <nat:320> * <var:r> + <nat:222> * <var:p> + <nat:118> * <var:S> + <var:b> * <nat:418> + <nat:153> $ must be odd . \end{theorem} \begin{proof} Take note the coefficient $ <nat:400> $ is guaranteed to be even . For this reason , the product $ <nat:400> * <var:R> $ will be even additionally . The coefficient $ <nat:222> $ is guaranteed to be an even number in $ \mathbb{Z}^+ $ . So , the pair $ <var:p> * <nat:222> $ will be even also . See that the terms $ <var:S> * <nat:118> $ plus $ <nat:418> * <var:b> $ must be even numbers in $ \mathbb{N} $ because the multiplication between an even positive integer and a number in $ \mathbb{N} $ is guaranteed to be even . This claim is proven by reason that the whole numbers $ <nat:118> $ as well as $ <nat:418> $ must be even whole numbers . In addition , recall that the leading term $ <nat:320> $ is guaranteed to be even . As a consequence , $ <nat:320> * <var:r> $ is guaranteed to be even as well . The leading term $ <nat:148> $ is clearly an even element of $ \mathbb{Z}^+ $ . Hence , the product $ <var:m> * <nat:148> $ will be even at the same time . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:m> <var:R> <var:r> <var:p> <var:S> <var:b> : nat , Nat . odd ( <nat:148> * <var:m> + <nat:400> * <var:R> + <nat:320> * <var:r> + <nat:222> * <var:p> + <nat:118> * <var:S> + <nat:418> * <var:b> + <nat:153> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:400> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:400> * <var:R> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:222> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:222> * <var:p> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:118> = true ) . { auto . } assert ( <genH> : Nat . even <nat:418> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:118> * <var:S> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:418> * <var:b> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:320> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:320> * <var:r> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:148> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:148> * <var:m> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 