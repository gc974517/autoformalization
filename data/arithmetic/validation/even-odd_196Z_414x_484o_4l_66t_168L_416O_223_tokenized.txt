\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} For all natural numbers $ <var:L> $ , $ <var:o> $ , $ <var:x> $ , $ <var:O> $ , $ <var:l> $ , $ <var:Z> $ , and $ <var:t> $ the sum $ <nat:414> * <var:x> + <var:o> * <nat:484> + <nat:168> * <var:L> + <var:O> * <nat:416> + <nat:196> * <var:Z> + <nat:66> * <var:t> + <nat:223> + <nat:4> * <var:l> $ is guaranteed to be odd . \end{theorem} \begin{proof} It can be checked that the expression $ <var:Z> \times <nat:196> + <var:x> \times <nat:414> + <var:o> \times <nat:484> + <nat:4> \times <var:l> + <nat:223> + <var:t> \times <nat:66> + <var:L> \times <nat:168> + <nat:416> \times <var:O> $ is odd . Adding on , we know the products $ <var:Z> \times <nat:196> $ , $ <var:x> \times <nat:414> $ , $ <var:o> \times <nat:484> $ , $ <var:l> \times <nat:4> $ , $ <var:t> \times <nat:66> $ , $ <nat:168> \times <var:L> $ , plus $ <nat:416> \times <var:O> $ must be even . This claim must be true from the knowledge the multiplication between an even natural number and any natural must be an even number in $ \mathbb{N} $ . This fact is proven from the fact the whole numbers $ <nat:196> $ , $ <nat:414> $ , $ <nat:484> $ , $ <nat:4> $ , $ <nat:66> $ , $ <nat:168> $ , as well as $ <nat:416> $ are known to be even whole numbers . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:L> <var:o> <var:x> <var:O> <var:l> <var:Z> <var:t> : nat , Nat . odd ( <nat:414> * <var:x> + <nat:484> * <var:o> + <nat:168> * <var:L> + <nat:416> * <var:O> + <nat:196> * <var:Z> + <nat:66> * <var:t> + <nat:4> * <var:l> + <nat:223> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:196> = true ) . { auto . } assert ( <genH> : Nat . even <nat:414> = true ) . { auto . } assert ( <genH> : Nat . even <nat:484> = true ) . { auto . } assert ( <genH> : Nat . even <nat:4> = true ) . { auto . } assert ( <genH> : Nat . even <nat:66> = true ) . { auto . } assert ( <genH> : Nat . even <nat:168> = true ) . { auto . } assert ( <genH> : Nat . even <nat:416> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:196> * <var:Z> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:414> * <var:x> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:484> * <var:o> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:4> * <var:l> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:66> * <var:t> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:168> * <var:L> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:416> * <var:O> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 