\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:X> * <nat:166> + <nat:25> + <nat:266> * <var:o> + <nat:236> * <var:N> + <nat:340> * <var:x> + <nat:356> * <var:B> + <nat:480> * <var:I> + <nat:404> * <var:F> $ is guaranteed to be odd . \end{theorem} \begin{proof} It can be justified that this theorem holds . We justify the sum $ <var:F> \cdot <nat:404> + <var:X> \cdot <nat:166> + <var:x> \cdot <nat:340> + <nat:266> \cdot <var:o> + <nat:356> \cdot <var:B> + <var:N> \cdot <nat:236> + <nat:25> + <nat:480> \cdot <var:I> $ is known to be odd because $ <var:o> <nat:266> + <var:B> <nat:356> + <nat:404> <var:F> + <var:N> <nat:236> + <var:X> <nat:166> + <var:I> <nat:480> + <nat:340> <var:x> $ is known as even . The coefficients $ <nat:266> $ , $ <nat:356> $ , $ <nat:404> $ , $ <nat:236> $ , $ <nat:166> $ , $ <nat:480> $ , as well as $ <nat:340> $ are clearly even . Hence , the pairs $ <var:o> <nat:266> $ , $ <nat:356> <var:B> $ , $ <var:F> <nat:404> $ , $ <nat:236> <var:N> $ , $ <nat:166> <var:X> $ , $ <var:I> <nat:480> $ , additionally $ <nat:340> <var:x> $ must be even too . The sum $ <nat:480> <var:I> + <var:X> <nat:166> + <var:x> <nat:340> + <var:N> <nat:236> + <nat:266> <var:o> + <var:F> <nat:404> + <nat:356> <var:B> $ will be even by reason that the totaling of even whole numbers and even numbers in $ \mathbb{Z}^+ $ must be even and from the knowledge the product of even integers and an arbitrary element of $ \mathbb{N} $ is guaranteed to be even . Recall the totaling of an even number in $ \mathbb{N} $ and an odd whole number must be odd . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:X> <var:o> <var:N> <var:x> <var:B> <var:I> <var:F> : nat , Nat . odd ( <nat:166> * <var:X> + <nat:266> * <var:o> + <nat:236> * <var:N> + <nat:340> * <var:x> + <nat:356> * <var:B> + <nat:480> * <var:I> + <nat:404> * <var:F> + <nat:25> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:266> = true ) . { auto . } assert ( <genH> : Nat . even <nat:356> = true ) . { auto . } assert ( <genH> : Nat . even <nat:404> = true ) . { auto . } assert ( <genH> : Nat . even <nat:236> = true ) . { auto . } assert ( <genH> : Nat . even <nat:166> = true ) . { auto . } assert ( <genH> : Nat . even <nat:480> = true ) . { auto . } assert ( <genH> : Nat . even <nat:340> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:266> * <var:o> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:356> * <var:B> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:404> * <var:F> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:236> * <var:N> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:166> * <var:X> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:480> * <var:I> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:340> * <var:x> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:166> * <var:X> + <nat:266> * <var:o> + <nat:236> * <var:N> + <nat:340> * <var:x> + <nat:356> * <var:B> + <nat:480> * <var:I> + <nat:404> * <var:F> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . auto . Qed . 