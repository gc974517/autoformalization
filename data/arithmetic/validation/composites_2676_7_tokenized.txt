\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Assume that $ <var:k> $ is a <def:seven-composite> positive integer given there exist $ <var:Y> $ , $ <var:C> $ , $ <var:e> $ , $ <var:V> $ , $ <var:a> $ , $ <var:j> $ , $ <var:i> \in \mathbb{N} $ satisfying the condition that $ <var:Y> \times <var:e> \times <var:i> \times <var:V> \times <var:j> \times <var:C> \times <var:a> = <var:k> $ assuming $ <var:k> \in \mathbb{Z}^+ $ and where $ <var:C> $ , $ <var:e> $ , $ <var:j> $ , $ <var:i> $ , $ <var:a> $ , $ <var:Y> $ , $ <var:V> \geq <nat:2> $ . Then $ <var:k> = <nat:161280> $ is a <def:seven-composite> natural number . \end{theorem} \begin{proof} Recall that <nat:161280> is a <def:seven-composite> natural number with the condition <nat:161280> is the product between numbers $ <var:a> $ , $ <var:j> $ , $ <var:V> $ , $ <var:C> $ , $ <var:Y> $ , $ <var:i> $ , and $ <var:e> $ larger than <nat:1> . We present <nat:161280> is a <def:seven-composite> natural number . We demonstrate the claim is valid by reason of $ <nat:161280> = <var:C> \times <var:a> \times <var:Y> \times <var:e> \times <var:i> \times <var:V> \times <var:j> $ gives $ <var:j> = <nat:3> $ , $ <var:C> = <nat:2> $ , $ <var:V> = <nat:4> $ , $ <var:a> = <nat:10> $ , $ <var:i> = <nat:7> $ , $ <var:e> = <nat:8> $ , $ <var:Y> = <nat:12> $ . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:seven-composite> ( <var:k> : nat ) := exists <var:Y> <var:C> <var:e> <var:V> <var:a> <var:j> <var:i> : nat , ( <var:Y> * <var:e> * <var:i> * <var:V> * <var:j> * <var:C> * <var:a> = <var:k> ) /\ ( <var:C> >= <nat:2> ) /\ ( <var:e> >= <nat:2> ) /\ ( <var:j> >= <nat:2> ) /\ ( <var:i> >= <nat:2> ) /\ ( <var:a> >= <nat:2> ) /\ ( <var:Y> >= <nat:2> ) /\ ( <var:V> >= <nat:2> ) . Theorem <genP:1> : <def:seven-composite> <nat:161280> . Proof . unfold <def:seven-composite> . exists <nat:12> . exists <nat:2> . exists <nat:8> . exists <nat:4> . exists <nat:10> . exists <nat:3> . exists <nat:7> . repeat split . all : lia . Qed . 