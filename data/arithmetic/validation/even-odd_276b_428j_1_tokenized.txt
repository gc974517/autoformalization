\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:b> \times <nat:276> + <var:j> \times <nat:428> + <nat:1> $ must be odd taking positive numbers $ <var:b> $ , and $ <var:j> $ . \end{theorem} \begin{proof} $ <nat:276> \cdot <var:b> + <var:j> \cdot <nat:428> + <nat:1> $ is guaranteed to be odd since the sum $ <var:b> \cdot <nat:276> + <nat:428> \cdot <var:j> $ is obviously even . Observe that the pair $ <var:j> <nat:428> $ is obviously an even element of $ \mathbb{N} $ by reason that taking the product between an even whole number with an arbitrary integer must be an even natural number , which is proven as a consequence that the integer $ <nat:428> $ is obviously in itself an even number in $ \mathbb{Z}^+ $ . Adding on , see that the product $ <var:b> <nat:276> $ is clearly an even whole number . This fact is true by reason that taking the product between an even number in $ \mathbb{N} $ and any number in $ \mathbb{N} $ is guaranteed to be even additionally the coefficient $ <nat:276> $ is trivially itself an even natural . Observe the summation between an even number in $ \mathbb{N} $ with an odd integer is odd . Remember that $ <nat:1> $ is known as an odd natural . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:b> <var:j> : nat , Nat . odd ( <nat:276> * <var:b> + <nat:428> * <var:j> + <nat:1> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:428> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:428> * <var:j> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:276> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:276> * <var:b> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:276> * <var:b> + <nat:428> * <var:j> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . assert ( <genH> : Nat . odd <nat:1> = true ) . { auto . } rewrite <- Nat . negb_even . rewrite <genH> . rewrite <genH> . auto . Qed . 