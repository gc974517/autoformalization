\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Given any whole numbers $ <var:d> $ , $ <var:D> $ , and $ <var:Q> $ $ <nat:441> + <nat:148> * <var:d> + <nat:446> * <var:Q> + <var:D> * <nat:490> $ is odd . \end{theorem} \begin{proof} See that the summation between an even positive integer and an odd natural is guaranteed to be an odd element of $ \mathbb{Z}^+ $ . Observe $ <var:D> <nat:490> + <nat:148> <var:d> + <nat:446> <var:Q> + <nat:441> $ is known as odd from the knowledge the sum $ <var:D> <nat:490> + <var:Q> <nat:446> + <nat:148> <var:d> $ is trivially even . The terms $ <var:D> \times <nat:490> $ , $ <nat:446> \times <var:Q> $ , and also $ <nat:148> \times <var:d> $ will be even whole numbers . This is proven since multiplying between an even positive integer with an arbitrary positive integer is guaranteed to be even . This claim is true by reason that the numbers $ <nat:490> $ , $ <nat:446> $ , and also $ <nat:148> $ must be even . Our claim must be true from the knowledge multiplying of an even number and some natural number is guaranteed to be by its very nature an even whole number . It can be checked that the formula $ <nat:446> \cdot <var:Q> + <nat:441> + <var:d> \cdot <nat:148> + <var:D> \cdot <nat:490> $ must be odd . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:d> <var:D> <var:Q> : nat , Nat . odd ( <nat:148> * <var:d> + <nat:446> * <var:Q> + <nat:490> * <var:D> + <nat:441> ) = true . Proof . intros . rewrite Nat . odd_add . assert ( <genH> : Nat . even <nat:490> = true ) . { auto . } assert ( <genH> : Nat . even <nat:446> = true ) . { auto . } assert ( <genH> : Nat . even <nat:148> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:490> * <var:D> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:446> * <var:Q> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:148> * <var:d> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:148> * <var:d> + <nat:446> * <var:Q> + <nat:490> * <var:D> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite <- Nat . negb_even . rewrite <genH> . auto . Qed . 