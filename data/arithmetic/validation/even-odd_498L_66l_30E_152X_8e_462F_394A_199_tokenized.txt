\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Taking $ <var:e> $ , $ <var:F> $ , $ <var:X> $ , $ <var:A> $ , $ <var:E> $ , $ <var:l> $ , and $ <var:L> \in \mathbb{Z}^+ $ the formula $ <nat:199> + <var:E> \cdot <nat:30> + <nat:8> \cdot <var:e> + <var:L> \cdot <nat:498> + <var:F> \cdot <nat:462> + <var:l> \cdot <nat:66> + <var:X> \cdot <nat:152> + <var:A> \cdot <nat:394> $ will be odd . \end{theorem} \begin{proof} The adding between even numbers successively with an odd natural must be odd . As a consequence , this claim is proven . The sum $ <nat:498> \times <var:L> + <var:l> \times <nat:66> + <nat:30> \times <var:E> + <nat:152> \times <var:X> + <nat:8> \times <var:e> + <var:F> \times <nat:462> + <nat:394> \times <var:A> $ is known as even . We know the totaling between even numbers together with an even integer is instrinsically an even number in $ \mathbb{N} $ . The term $ <nat:8> \times <var:e> $ is obviously even . This claim holds as a consequence that multiplying between an even number in $ \mathbb{Z}^+ $ with an arbitrary element of $ \mathbb{Z}^+ $ will be instrinsically an even positive integer . The terms $ <nat:462> \times <var:F> $ , $ <nat:498> \times <var:L> $ , $ <var:l> \times <nat:66> $ , plus $ <var:X> \times <nat:152> $ will be even numbers in $ \mathbb{Z}^+ $ . Building on , the product $ <var:A> \times <nat:394> $ is trivially an even number . This holds as a consequence that multiplying of an even positive integer with some positive integer is guaranteed to be even . In addition to this , notice the term $ <nat:30> \times <var:E> $ is guaranteed to be an even element of $ \mathbb{Z}^+ $ . This holds since the product of an even natural with any number in $ \mathbb{N} $ must be even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:e> <var:F> <var:X> <var:A> <var:E> <var:l> <var:L> : nat , Nat . odd ( <nat:30> * <var:E> + <nat:8> * <var:e> + <nat:498> * <var:L> + <nat:462> * <var:F> + <nat:66> * <var:l> + <nat:152> * <var:X> + <nat:394> * <var:A> + <nat:199> ) = true . Proof . intros . rewrite Nat . odd_add . assert ( <genH> : Nat . even ( <nat:8> * <var:e> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:462> * <var:F> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:498> * <var:L> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:66> * <var:l> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:152> * <var:X> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:394> * <var:A> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:30> * <var:E> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:30> * <var:E> + <nat:8> * <var:e> + <nat:498> * <var:L> + <nat:462> * <var:F> + <nat:66> * <var:l> + <nat:152> * <var:X> + <nat:394> * <var:A> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite <- Nat . negb_even . rewrite <genH> . auto . Qed . 