\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:342> <var:G> + <nat:81> + <nat:214> <var:A> + <nat:112> <var:l> $ will be odd using variables $ <var:A> $ , $ <var:l> $ , and $ <var:G> $ . \end{theorem} \begin{proof} We justify the formula $ <nat:81> + <var:l> \cdot <nat:112> + <var:A> \cdot <nat:214> + <nat:342> \cdot <var:G> $ will be odd . We prove that the formula $ <nat:342> \times <var:G> + <nat:81> + <nat:112> \times <var:l> + <var:A> \times <nat:214> $ is clearly odd from the fact $ <var:l> * <nat:112> + <var:A> * <nat:214> + <nat:342> * <var:G> $ is trivially even . See the terms $ <var:G> <nat:342> $ in addition to $ <nat:214> <var:A> $ are known to be even natural numbers since taking the product of an even number in $ \mathbb{Z}^+ $ and a element of $ \mathbb{Z}^+ $ is guaranteed to be even . In addition to this , see the product $ <nat:112> <var:l> $ is known to be even . By reason that the adding of even numbers in $ \mathbb{N} $ and even positive integers is guaranteed to be even , the expression $ <nat:112> \times <var:l> + <var:G> \times <nat:342> + <nat:214> \times <var:A> $ will be itself even . The totaling of an even natural number with an odd element of $ \mathbb{Z}^+ $ will be odd . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:A> <var:l> <var:G> : nat , Nat . odd ( <nat:342> * <var:G> + <nat:214> * <var:A> + <nat:112> * <var:l> + <nat:81> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:342> * <var:G> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:214> * <var:A> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:112> * <var:l> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:342> * <var:G> + <nat:214> * <var:A> + <nat:112> * <var:l> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . auto . Qed . 