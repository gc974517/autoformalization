\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \newtheorem{definition}{Definition} \begin{document} \begin{definition} We claim that $ <var:k> $ is a <def:seven-composite> number only if for some $ <var:M> $ , $ <var:D> $ , $ <var:N> $ , $ <var:b> $ , $ <var:x> $ , $ <var:n> $ , $ <var:r> $ we have satisfying the condition that $ <var:r> $ , $ <var:N> $ , $ <var:D> $ , $ <var:n> $ , $ <var:M> $ , $ <var:b> $ and $ <var:x> > <nat:1> $ and using $ <var:k> \in \mathbb{Z}^+ $ , $ <var:k> = <var:n> \cdot <var:b> \cdot <var:N> \cdot <var:M> \cdot <var:D> \cdot <var:r> \cdot <var:x> $ . \end{definition} \begin{theorem} The number <nat:83160> is a <def:seven-composite> integer . \end{theorem} \begin{proof} Assume $ <var:D> = <nat:11> $ , $ <var:x> = <nat:7> $ , $ <var:N> = <nat:9> $ , $ <var:M> = <nat:5> $ , $ <var:r> = <nat:3> $ , $ <var:n> = <nat:2> $ , $ <var:b> = <nat:4> $ . Observe $ <var:r> \times <var:n> \times <var:N> \times <var:D> \times <var:b> \times <var:M> \times <var:x> = <nat:83160> $ . Also note that $ <nat:7> $ , $ <nat:3> $ , $ <nat:11> $ , $ <nat:5> $ , $ <nat:2> $ , $ <nat:9> $ , $ <nat:4> > <nat:1> $ . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:seven-composite> ( <var:k> : nat ) := exists <var:M> <var:D> <var:N> <var:b> <var:x> <var:n> <var:r> : nat , ( <var:r> > <nat:1> ) /\ ( <var:N> > <nat:1> ) /\ ( <var:D> > <nat:1> ) /\ ( <var:n> > <nat:1> ) /\ ( <var:M> > <nat:1> ) /\ ( <var:b> > <nat:1> ) /\ ( <var:x> > <nat:1> ) /\ ( <var:k> = <var:n> * <var:b> * <var:N> * <var:M> * <var:D> * <var:r> * <var:x> ) . Theorem <genP:1> : <def:seven-composite> <nat:83160> . Proof . unfold <def:seven-composite> . exists <nat:5> . exists <nat:11> . exists <nat:9> . exists <nat:4> . exists <nat:7> . exists <nat:2> . exists <nat:3> . assert ( <genH> : <nat:7> > <nat:1> ) . { lia . } assert ( <genH> : <nat:3> > <nat:1> ) . { lia . } assert ( <genH> : <nat:11> > <nat:1> ) . { lia . } assert ( <genH> : <nat:5> > <nat:1> ) . { lia . } assert ( <genH> : <nat:2> > <nat:1> ) . { lia . } assert ( <genH> : <nat:9> > <nat:1> ) . { lia . } assert ( <genH> : <nat:4> > <nat:1> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 