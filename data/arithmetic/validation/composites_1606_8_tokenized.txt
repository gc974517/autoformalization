\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Assuming that we get so that $ <var:Q> $ , $ <var:G> $ , $ <var:r> $ , $ <var:s> $ , $ <var:o> $ , $ <var:S> $ , $ <var:U> $ and $ <var:x> > <nat:1> $ so that taking some integer $ <var:V> $ , $ <var:V> = <var:G> \cdot <var:s> \cdot <var:r> \cdot <var:S> \cdot <var:x> \cdot <var:U> \cdot <var:Q> \cdot <var:o> $ , then we claim that $ <var:V> $ is a <def:eight-composite> natural number with some $ <var:x> $ , $ <var:U> $ , $ <var:G> $ , $ <var:o> $ , $ <var:S> $ , $ <var:s> $ , $ <var:Q> $ , $ <var:r> \in \mathbb{N} $ . Then $ <nat:544320> = <var:V> $ is a <def:eight-composite> whole number . \end{theorem} \begin{proof} We demonstrate our statement is true because $ <nat:6> $ , $ <nat:2> $ , $ <nat:4> $ , $ <nat:5> $ , $ <nat:12> $ , $ <nat:3> $ , $ <nat:9> $ , $ <nat:7> > <nat:1> $ plus in view of $ <nat:544320> = <var:s> * <var:o> * <var:Q> * <var:S> * <var:G> * <var:r> * <var:U> * <var:x> $ hints $ <var:x> = <nat:5> $ , $ <var:s> = <nat:4> $ , $ <var:U> = <nat:2> $ , $ <var:S> = <nat:12> $ , $ <var:r> = <nat:9> $ , $ <var:G> = <nat:6> $ , $ <var:Q> = <nat:3> $ , $ <var:o> = <nat:7> $ . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:eight-composite> ( <var:V> : nat ) := exists <var:x> <var:U> <var:G> <var:o> <var:S> <var:s> <var:Q> <var:r> : nat , ( <var:Q> > <nat:1> ) /\ ( <var:G> > <nat:1> ) /\ ( <var:r> > <nat:1> ) /\ ( <var:s> > <nat:1> ) /\ ( <var:o> > <nat:1> ) /\ ( <var:S> > <nat:1> ) /\ ( <var:U> > <nat:1> ) /\ ( <var:x> > <nat:1> ) /\ ( <var:V> = <var:G> * <var:s> * <var:r> * <var:S> * <var:x> * <var:U> * <var:Q> * <var:o> ) . Theorem <genP:1> : <def:eight-composite> <nat:544320> . Proof . unfold <def:eight-composite> . assert ( <genH> : <nat:6> > <nat:1> ) . { lia . } assert ( <genH> : <nat:2> > <nat:1> ) . { lia . } assert ( <genH> : <nat:4> > <nat:1> ) . { lia . } assert ( <genH> : <nat:5> > <nat:1> ) . { lia . } assert ( <genH> : <nat:12> > <nat:1> ) . { lia . } assert ( <genH> : <nat:3> > <nat:1> ) . { lia . } assert ( <genH> : <nat:9> > <nat:1> ) . { lia . } assert ( <genH> : <nat:7> > <nat:1> ) . { lia . } exists <nat:5> . exists <nat:2> . exists <nat:6> . exists <nat:7> . exists <nat:12> . exists <nat:4> . exists <nat:3> . exists <nat:9> . repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 