\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:409> + <nat:488> <var:W> + <nat:420> <var:m> + <nat:360> <var:P> + <nat:222> <var:Y> + <nat:300> <var:n> + <nat:338> <var:k> + <var:a> <nat:100> $ will be odd for positive integers $ <var:Y> $ , $ <var:n> $ , $ <var:P> $ , $ <var:W> $ , $ <var:a> $ , $ <var:k> $ , and $ <var:m> $ . \end{theorem} \begin{proof} Recall that the products $ <nat:222> * <var:Y> $ , $ <var:W> * <nat:488> $ , $ <nat:100> * <var:a> $ , plus $ <var:n> * <nat:300> $ are even because the coefficients $ <nat:222> $ , $ <nat:488> $ , $ <nat:100> $ , and moreover $ <nat:300> $ must be even whole numbers . Notice that the pairs $ <var:k> * <nat:338> $ and moreover $ <var:P> * <nat:360> $ are guaranteed to be even integers from the fact taking the product between an even element of $ \mathbb{N} $ and an arbitrary number in $ \mathbb{Z}^+ $ will be even , and holds as a consequence that the integers $ <nat:338> $ and moreover $ <nat:360> $ must be in themselves even numbers . Adding on , remember the integer $ <nat:420> $ is even . Consequently , the pair $ <nat:420> * <var:m> $ is even as well . Observe the adding of an even number in $ \mathbb{N} $ with an odd natural number must be by its very nature an odd positive integer . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:Y> <var:n> <var:P> <var:W> <var:a> <var:k> <var:m> : nat , Nat . odd ( <nat:488> * <var:W> + <nat:420> * <var:m> + <nat:360> * <var:P> + <nat:222> * <var:Y> + <nat:300> * <var:n> + <nat:338> * <var:k> + <nat:100> * <var:a> + <nat:409> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:222> = true ) . { auto . } assert ( <genH> : Nat . even <nat:488> = true ) . { auto . } assert ( <genH> : Nat . even <nat:100> = true ) . { auto . } assert ( <genH> : Nat . even <nat:300> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:222> * <var:Y> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:488> * <var:W> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:100> * <var:a> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:300> * <var:n> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:338> = true ) . { auto . } assert ( <genH> : Nat . even <nat:360> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:338> * <var:k> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:360> * <var:P> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:420> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:420> * <var:m> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 