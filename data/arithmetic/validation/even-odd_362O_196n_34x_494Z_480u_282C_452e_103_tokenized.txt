\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:Z> <nat:494> + <var:n> <nat:196> + <nat:282> <var:C> + <nat:480> <var:u> + <nat:103> + <var:O> <nat:362> + <var:e> <nat:452> + <var:x> <nat:34> $ is guaranteed to be odd . \end{theorem} \begin{proof} The integer $ <nat:452> $ is guaranteed to be even . For this reason , the term $ <nat:452> \cdot <var:e> $ must be even at the same time . Remember that the term $ <nat:494> \cdot <var:Z> $ is obviously an even natural . This claim is proven from the knowledge the product between an even number in $ \mathbb{N} $ and some number must be even . This claim is true as a consequence that the natural number $ <nat:494> $ is known to be an even natural . The whole number $ <nat:34> $ is known to be an even natural number . As a consequence , the pair $ <var:x> \cdot <nat:34> $ is guaranteed to be even at the same time . Likewise , the pair $ <var:C> \cdot <nat:282> $ is trivially an even whole number from the fact the positive integer $ <nat:282> $ is known to be even . Likewise , recall the pair $ <nat:196> \cdot <var:n> $ is clearly an even natural since the coefficient $ <nat:196> $ is an even integer . The whole number $ <nat:480> $ is known to be even . Hence , the product $ <nat:480> \cdot <var:u> $ must be even also . The natural number $ <nat:362> $ is known to be even . In consequence , the product $ <var:O> \cdot <nat:362> $ will be even also . Notice $ <nat:103> $ is an odd number in $ \mathbb{N} $ . It can be justified that the formula $ <nat:362> \cdot <var:O> + <nat:196> \cdot <var:n> + <var:x> \cdot <nat:34> + <var:Z> \cdot <nat:494> + <var:u> \cdot <nat:480> + <nat:282> \cdot <var:C> + <var:e> \cdot <nat:452> + <nat:103> $ is odd . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:Z> <var:n> <var:C> <var:u> <var:O> <var:e> <var:x> : nat , Nat . odd ( <nat:494> * <var:Z> + <nat:196> * <var:n> + <nat:282> * <var:C> + <nat:480> * <var:u> + <nat:362> * <var:O> + <nat:452> * <var:e> + <nat:34> * <var:x> + <nat:103> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:452> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:452> * <var:e> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:494> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:494> * <var:Z> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:34> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:34> * <var:x> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:282> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:282> * <var:C> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:196> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:196> * <var:n> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:480> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:480> * <var:u> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:362> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:362> * <var:O> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . odd <nat:103> = true ) . { auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 