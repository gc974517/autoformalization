\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Given all integers $ <var:z> $ , $ <var:Y> $ , $ <var:b> $ , $ <var:U> $ , $ <var:m> $ , $ <var:p> $ , $ <var:i> $ , and $ <var:l> $ $ <var:p> \cdot <nat:4> + <var:i> \cdot <nat:118> + <nat:430> \cdot <var:z> + <nat:132> \cdot <var:l> + <var:U> \cdot <nat:146> + <var:b> \cdot <nat:230> + <nat:50> \cdot <var:m> + <var:Y> \cdot <nat:40> + <nat:35> $ is odd . \end{theorem} \begin{proof} Observe the adding of an even whole number and an odd natural will be odd . Take note that the terms $ <nat:230> \cdot <var:b> $ and moreover $ <nat:40> \cdot <var:Y> $ are trivially even whole numbers . The terms $ <nat:118> \cdot <var:i> $ in addition to $ <var:m> \cdot <nat:50> $ must be even . This fact is true from the knowledge the product between an even natural number and some natural is even . Additionally , observe the terms $ <var:z> \cdot <nat:430> $ and $ <var:l> \cdot <nat:132> $ are even because multiplying of an even element of $ \mathbb{Z}^+ $ and some natural number will be even . We know $ <nat:4> \cdot <var:p> $ is trivially even by reason that the product of an even element of $ \mathbb{Z}^+ $ and any number in $ \mathbb{N} $ must be by its very nature an even number in $ \mathbb{Z}^+ $ . On top of this , the term $ <nat:146> \cdot <var:U> $ is known as even . It can be verified that the expression $ <nat:118> \times <var:i> + <var:m> \times <nat:50> + <var:Y> \times <nat:40> + <var:l> \times <nat:132> + <nat:430> \times <var:z> + <nat:230> \times <var:b> + <nat:35> + <var:U> \times <nat:146> + <var:p> \times <nat:4> $ must be odd . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:z> <var:Y> <var:b> <var:U> <var:m> <var:p> <var:i> <var:l> : nat , Nat . odd ( <nat:4> * <var:p> + <nat:118> * <var:i> + <nat:430> * <var:z> + <nat:132> * <var:l> + <nat:146> * <var:U> + <nat:230> * <var:b> + <nat:50> * <var:m> + <nat:40> * <var:Y> + <nat:35> ) = true . Proof . intros . rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . assert ( <genH> : Nat . even ( <nat:230> * <var:b> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:40> * <var:Y> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:118> * <var:i> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:50> * <var:m> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:430> * <var:z> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:132> * <var:l> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:4> * <var:p> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:146> * <var:U> ) = true ) . { rewrite Nat . even_mul . auto . } rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 