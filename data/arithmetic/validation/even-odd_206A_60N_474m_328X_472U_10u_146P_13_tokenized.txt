\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:60> <var:N> + <var:U> <nat:472> + <nat:13> + <nat:474> <var:m> + <var:X> <nat:328> + <var:A> <nat:206> + <var:P> <nat:146> + <nat:10> <var:u> $ must be odd taking every positive integers $ <var:X> $ , $ <var:u> $ , $ <var:m> $ , $ <var:N> $ , $ <var:U> $ , $ <var:A> $ , and $ <var:P> $ . \end{theorem} \begin{proof} The formula $ <nat:206> * <var:A> + <nat:60> * <var:N> + <var:m> * <nat:474> + <var:X> * <nat:328> + <var:U> * <nat:472> + <nat:10> * <var:u> + <var:P> * <nat:146> $ is known to be even . Notice that the product $ <nat:206> * <var:A> $ is guaranteed to be an even number in $ \mathbb{Z}^+ $ . This claim is proven by reason that the product of an even whole number and some number is obviously an even element of $ \mathbb{N} $ . Notice that the products $ <nat:10> * <var:u> $ additionally $ <var:P> * <nat:146> $ are known to be even whole numbers . Building on , the pairs $ <var:N> * <nat:60> $ as well as $ <nat:328> * <var:X> $ are trivially even numbers in $ \mathbb{Z}^+ $ from the knowledge the multiplication between an even natural number with an arbitrary number will be instrinsically an even number in $ \mathbb{Z}^+ $ . Take note that the product $ <nat:472> * <var:U> $ is clearly an even element of $ \mathbb{N} $ because multiplying between an even integer with a integer will be even . The pair $ <var:m> * <nat:474> $ is obviously even . This lemma holds as a consequence that the product between an even integer and a element of $ \mathbb{N} $ is an even number in $ \mathbb{N} $ . We show our claim is true . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:X> <var:u> <var:m> <var:N> <var:U> <var:A> <var:P> : nat , Nat . odd ( <nat:60> * <var:N> + <nat:472> * <var:U> + <nat:474> * <var:m> + <nat:328> * <var:X> + <nat:206> * <var:A> + <nat:146> * <var:P> + <nat:10> * <var:u> + <nat:13> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:206> * <var:A> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:10> * <var:u> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:146> * <var:P> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:60> * <var:N> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:328> * <var:X> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:472> * <var:U> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:474> * <var:m> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:60> * <var:N> + <nat:472> * <var:U> + <nat:474> * <var:m> + <nat:328> * <var:X> + <nat:206> * <var:A> + <nat:146> * <var:P> + <nat:10> * <var:u> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . auto . Qed . 