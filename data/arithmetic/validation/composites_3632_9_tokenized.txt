\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} The positive integer <nat:5443200> is the multiplication of positive integers $ <var:E> $ , $ <var:P> $ , $ <var:x> $ , $ <var:y> $ , $ <var:S> $ , $ <var:K> $ , $ <var:p> $ , $ <var:w> $ , $ <var:C> $ such that $ <var:x> $ , $ <var:C> $ , $ <var:y> $ , $ <var:K> $ , $ <var:P> $ , $ <var:w> $ , $ <var:S> $ , $ <var:E> $ , $ <var:p> > <nat:1> $ . \end{theorem} \begin{proof} Notice that $ <nat:7> $ , $ <nat:2> $ , $ <nat:12> $ , $ <nat:6> $ , $ <nat:4> $ , $ <nat:9> $ , $ <nat:5> $ , $ <nat:10> $ and $ <nat:3> > <nat:1> $ . Further notice further $ <var:x> \times <var:p> \times <var:S> \times <var:y> \times <var:E> \times <var:K> \times <var:C> \times <var:w> \times <var:P> = <nat:5443200> $ implies $ <var:x> = <nat:2> $ , $ <var:K> = <nat:4> $ , $ <var:P> = <nat:3> $ , $ <var:C> = <nat:10> $ , $ <var:w> = <nat:5> $ , $ <var:S> = <nat:6> $ , $ <var:E> = <nat:9> $ , $ <var:p> = <nat:7> $ , $ <var:y> = <nat:12> $ . Hence , <nat:5443200> is the product between $ <var:y> $ , $ <var:E> $ , $ <var:P> $ , $ <var:w> $ , $ <var:K> $ , $ <var:x> $ , $ <var:p> $ , $ <var:C> $ , $ <var:S> \in \mathbb{N} $ has been verified . \end{proof} \end{document} 
~
Require Import Lia . Theorem <genP:1> : exists <var:E> <var:P> <var:x> <var:y> <var:S> <var:K> <var:p> <var:w> <var:C> : nat , ( <nat:5443200> = <var:E> * <var:P> * <var:x> * <var:y> * <var:S> * <var:K> * <var:p> * <var:w> * <var:C> ) /\ ( <var:x> > <nat:1> ) /\ ( <var:C> > <nat:1> ) /\ ( <var:y> > <nat:1> ) /\ ( <var:K> > <nat:1> ) /\ ( <var:P> > <nat:1> ) /\ ( <var:w> > <nat:1> ) /\ ( <var:S> > <nat:1> ) /\ ( <var:E> > <nat:1> ) /\ ( <var:p> > <nat:1> ) . Proof . assert ( <genH> : <nat:7> > <nat:1> ) . { lia . } assert ( <genH> : <nat:2> > <nat:1> ) . { lia . } assert ( <genH> : <nat:12> > <nat:1> ) . { lia . } assert ( <genH> : <nat:6> > <nat:1> ) . { lia . } assert ( <genH> : <nat:4> > <nat:1> ) . { lia . } assert ( <genH> : <nat:9> > <nat:1> ) . { lia . } assert ( <genH> : <nat:5> > <nat:1> ) . { lia . } assert ( <genH> : <nat:10> > <nat:1> ) . { lia . } assert ( <genH> : <nat:3> > <nat:1> ) . { lia . } exists <nat:9> . exists <nat:3> . exists <nat:2> . exists <nat:12> . exists <nat:6> . exists <nat:4> . exists <nat:7> . exists <nat:5> . exists <nat:10> . repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 