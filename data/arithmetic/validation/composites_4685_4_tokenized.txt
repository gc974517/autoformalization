\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Assume that $ <var:Y> $ is a <def:four-composite> whole number granted that assuming some $ <var:c> $ , $ <var:p> $ , $ <var:N> $ , $ <var:Q> \in \mathbb{N} $ we have where $ <var:p> $ , $ <var:Q> $ , $ <var:N> $ , $ <var:c> > <nat:1> $ plus with $ <var:Y> \in \mathbb{N} $ , $ <var:N> \times <var:c> \times <var:Q> \times <var:p> = <var:Y> $ . For this reason the number <nat:1782> is a <def:four-composite> integer . \end{theorem} \begin{proof} Remember <nat:1782> is a <def:four-composite> positive integer granted that it is the product between numbers $ <var:N> $ , $ <var:Q> $ , $ <var:p> $ , $ <var:c> $ satisfying the condition that $ <var:p> $ , $ <var:c> $ , $ <var:Q> $ , $ <var:N> > <nat:1> $ . Assume $ <var:p> = <nat:3> $ , $ <var:N> = <nat:6> $ , $ <var:c> = <nat:11> $ , and $ <var:Q> = <nat:9> $ . Note that $ <var:p> = <nat:3> $ , $ <var:Q> = <nat:9> $ , $ <var:c> = <nat:11> $ and $ <var:N> = <nat:6> $ are greater than <nat:1> . This shows our principle is valid . Because of this , <nat:1782> is a <def:four-composite> integer has been validated . Because of this , <nat:1782> is the product between $ <var:Q> $ , $ <var:N> $ , $ <var:p> $ and $ <var:c> \in \mathbb{N} $ is validated . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:four-composite> ( <var:Y> : nat ) := exists <var:c> <var:p> <var:N> <var:Q> : nat , ( <var:p> > <nat:1> ) /\ ( <var:Q> > <nat:1> ) /\ ( <var:N> > <nat:1> ) /\ ( <var:c> > <nat:1> ) /\ ( <var:N> * <var:c> * <var:Q> * <var:p> = <var:Y> ) . Theorem <genP:1> : <def:four-composite> <nat:1782> . Proof . unfold <def:four-composite> . exists <nat:11> . exists <nat:3> . exists <nat:6> . exists <nat:9> . assert ( <genH> : <nat:3> > <nat:1> ) . { lia . } assert ( <genH> : <nat:9> > <nat:1> ) . { lia . } assert ( <genH> : <nat:11> > <nat:1> ) . { lia . } assert ( <genH> : <nat:6> > <nat:1> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 