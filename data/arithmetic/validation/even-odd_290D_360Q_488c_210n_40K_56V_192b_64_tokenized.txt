\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:290> * <var:D> + <nat:360> * <var:Q> + <var:c> * <nat:488> + <var:n> * <nat:210> + <var:K> * <nat:40> + <var:V> * <nat:56> + <var:b> * <nat:192> + <nat:64> $ will be even using any integers $ <var:K> $ , $ <var:b> $ , $ <var:D> $ , $ <var:Q> $ , $ <var:c> $ , $ <var:n> $ , and $ <var:V> $ . \end{theorem} \begin{proof} See that the terms $ <var:b> \times <nat:192> $ as well as $ <var:c> \times <nat:488> $ are guaranteed to be even numbers in $ \mathbb{N} $ . The terms $ <var:V> \times <nat:56> $ , $ <var:n> \times <nat:210> $ , $ <var:Q> \times <nat:360> $ , and likewise $ <var:D> \times <nat:290> $ are even numbers in $ \mathbb{Z}^+ $ . Building on , $ <var:K> \times <nat:40> $ is clearly even . This claim holds by reason that taking the product of an even element of $ \mathbb{Z}^+ $ and an arbitrary number will be even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:K> <var:b> <var:D> <var:Q> <var:c> <var:n> <var:V> : nat , Nat . even ( <nat:290> * <var:D> + <nat:360> * <var:Q> + <nat:488> * <var:c> + <nat:210> * <var:n> + <nat:40> * <var:K> + <nat:56> * <var:V> + <nat:192> * <var:b> + <nat:64> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:192> * <var:b> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:488> * <var:c> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:56> * <var:V> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:210> * <var:n> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:360> * <var:Q> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:290> * <var:D> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:40> * <var:K> ) = true ) . { rewrite Nat . even_mul . auto . } repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 