\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \newtheorem{definition}{Definition} \begin{document} \begin{definition} We assume that $ <var:y> $ is a <def:five-composite> whole number if and only if for some numbers $ <var:h> $ , $ <var:d> $ , $ <var:k> $ , $ <var:w> $ , $ <var:f> $ we have $ <var:y> = <var:k> \times <var:d> \times <var:w> \times <var:h> \times <var:f> $ given $ <var:y> \in \mathbb{N} $ plus so that $ <var:k> $ , $ <var:w> $ , $ <var:f> $ , $ <var:h> $ and $ <var:d> \geq <nat:2> $ . \end{definition} \begin{theorem} $ <nat:10080> = <var:y> $ is a <def:five-composite> integer . \end{theorem} \begin{proof} Recall that a <def:five-composite> is the product of natural numbers $ <var:w> $ , $ <var:f> $ , $ <var:h> $ , $ <var:k> $ and $ <var:d> $ where $ <var:d> $ , $ <var:f> $ , $ <var:w> $ , $ <var:k> $ , $ <var:h> \geq <nat:2> $ . Note $ <nat:5> $ , $ <nat:7> $ , $ <nat:4> $ , $ <nat:12> $ and $ <nat:6> \geq <nat:2> $ . Moreover observe that too $ <nat:6> \times <nat:5> \times <nat:4> \times <nat:12> \times <nat:7> = <nat:10080> = <var:k> \times <var:w> \times <var:h> \times <var:f> \times <var:d> $ . This gives <nat:10080> is a <def:five-composite> number . Consequently , <nat:10080> is <def:five-composite> is verified . Therefore , <nat:10080> is the product of some positive integers $ <var:h> $ , $ <var:d> $ , $ <var:k> $ , $ <var:w> $ , $ <var:f> $ has been verified . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:five-composite> ( <var:y> : nat ) := exists <var:h> <var:d> <var:k> <var:w> <var:f> : nat , ( <var:y> = <var:k> * <var:d> * <var:w> * <var:h> * <var:f> ) /\ ( <var:k> >= <nat:2> ) /\ ( <var:w> >= <nat:2> ) /\ ( <var:f> >= <nat:2> ) /\ ( <var:h> >= <nat:2> ) /\ ( <var:d> >= <nat:2> ) . Theorem <genP:1> : <def:five-composite> <nat:10080> . Proof . unfold <def:five-composite> . assert ( <genH> : <nat:5> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:7> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:4> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:12> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:6> >= <nat:2> ) . { lia . } exists <nat:4> . exists <nat:7> . exists <nat:6> . exists <nat:5> . exists <nat:12> . repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 