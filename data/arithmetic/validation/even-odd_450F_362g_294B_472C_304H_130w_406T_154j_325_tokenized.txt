\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:F> \cdot <nat:450> + <var:g> \cdot <nat:362> + <var:B> \cdot <nat:294> + <var:C> \cdot <nat:472> + <var:H> \cdot <nat:304> + <nat:325> + <var:w> \cdot <nat:130> + <var:T> \cdot <nat:406> + <nat:154> \cdot <var:j> $ is guaranteed to be odd assuming any positive integers $ <var:j> $ , $ <var:w> $ , $ <var:H> $ , $ <var:C> $ , $ <var:F> $ , $ <var:T> $ , $ <var:B> $ , and $ <var:g> $ . \end{theorem} \begin{proof} Observe that the terms $ <nat:450> * <var:F> $ , $ <var:g> * <nat:362> $ , $ <var:B> * <nat:294> $ , $ <var:C> * <nat:472> $ , $ <nat:304> * <var:H> $ , $ <var:w> * <nat:130> $ , $ <nat:406> * <var:T> $ , and likewise $ <nat:154> * <var:j> $ are trivially even . This is true because the multiplication of an even natural number with a number in $ \mathbb{N} $ must be an even number in $ \mathbb{N} $ , and holds by reason that the positive integers $ <nat:450> $ , $ <nat:362> $ , $ <nat:294> $ , $ <nat:472> $ , $ <nat:304> $ , $ <nat:130> $ , $ <nat:406> $ , plus $ <nat:154> $ are guaranteed to be even . Recall $ <nat:325> $ is known to be odd . Recall that the adding of an even element of $ \mathbb{Z}^+ $ and an odd number is guaranteed to be an odd number . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:j> <var:w> <var:H> <var:C> <var:F> <var:T> <var:B> <var:g> : nat , Nat . odd ( <nat:450> * <var:F> + <nat:362> * <var:g> + <nat:294> * <var:B> + <nat:472> * <var:C> + <nat:304> * <var:H> + <nat:130> * <var:w> + <nat:406> * <var:T> + <nat:154> * <var:j> + <nat:325> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:450> = true ) . { auto . } assert ( <genH> : Nat . even <nat:362> = true ) . { auto . } assert ( <genH> : Nat . even <nat:294> = true ) . { auto . } assert ( <genH> : Nat . even <nat:472> = true ) . { auto . } assert ( <genH> : Nat . even <nat:304> = true ) . { auto . } assert ( <genH> : Nat . even <nat:130> = true ) . { auto . } assert ( <genH> : Nat . even <nat:406> = true ) . { auto . } assert ( <genH> : Nat . even <nat:154> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:450> * <var:F> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:362> * <var:g> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:294> * <var:B> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:472> * <var:C> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:304> * <var:H> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:130> * <var:w> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:406> * <var:T> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:154> * <var:j> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . odd <nat:325> = true ) . { auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 