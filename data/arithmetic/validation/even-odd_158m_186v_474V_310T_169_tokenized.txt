\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:310> * <var:T> + <nat:474> * <var:V> + <nat:158> * <var:m> + <nat:169> + <nat:186> * <var:v> $ must be odd given any positive integers $ <var:v> $ , $ <var:m> $ , $ <var:V> $ , and $ <var:T> $ . \end{theorem} \begin{proof} This main result is proven as a consequence that $ <var:v> \times <nat:186> + <nat:158> \times <var:m> + <var:V> \times <nat:474> + <nat:310> \times <var:T> $ is trivially even . The coefficients $ <nat:186> $ , $ <nat:158> $ , $ <nat:474> $ , plus $ <nat:310> $ are guaranteed to be even naturals . So , the products $ <var:v> * <nat:186> $ , $ <nat:158> * <var:m> $ , $ <var:V> * <nat:474> $ , in addition to $ <var:T> * <nat:310> $ must be even at the same time . From the knowledge taking the product between an even number in $ \mathbb{N} $ with an arbitrary whole number must be an even natural number $ <nat:158> <var:m> + <nat:186> <var:v> + <var:V> <nat:474> + <nat:310> <var:T> $ is guaranteed to be even . We check this main result is proven . Recall that $ <nat:169> $ is known to be odd . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:v> <var:m> <var:V> <var:T> : nat , Nat . odd ( <nat:310> * <var:T> + <nat:474> * <var:V> + <nat:158> * <var:m> + <nat:186> * <var:v> + <nat:169> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:186> = true ) . { auto . } assert ( <genH> : Nat . even <nat:158> = true ) . { auto . } assert ( <genH> : Nat . even <nat:474> = true ) . { auto . } assert ( <genH> : Nat . even <nat:310> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:186> * <var:v> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:158> * <var:m> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:474> * <var:V> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:310> * <var:T> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:310> * <var:T> + <nat:474> * <var:V> + <nat:158> * <var:m> + <nat:186> * <var:v> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } assert ( <genH> : Nat . odd <nat:169> = true ) . { auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . rewrite <genH> . auto . Qed . 