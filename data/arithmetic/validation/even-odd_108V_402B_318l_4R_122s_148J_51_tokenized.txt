\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:108> * <var:V> + <nat:51> + <var:B> * <nat:402> + <nat:318> * <var:l> + <nat:4> * <var:R> + <nat:122> * <var:s> + <var:J> * <nat:148> $ must be odd with some unknowns $ <var:J> $ , $ <var:R> $ , $ <var:l> $ , $ <var:B> $ , $ <var:s> $ , and $ <var:V> $ . \end{theorem} \begin{proof} Take note that the terms $ <var:V> * <nat:108> $ , $ <nat:402> * <var:B> $ , $ <nat:148> * <var:J> $ , and also $ <var:R> * <nat:4> $ are known as even naturals . Recall that $ <nat:318> * <var:l> $ is even by reason that multiplying of an even whole number and a positive integer must be clearly an even integer . The product $ <var:s> * <nat:122> $ is known to be even . This must be true by reason that the multiplication of an even element of $ \mathbb{Z}^+ $ and any whole number must be by itself an even number in $ \mathbb{N} $ . See that the adding between even whole numbers together with an odd element of $ \mathbb{N} $ is guaranteed to be odd . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:J> <var:R> <var:l> <var:B> <var:s> <var:V> : nat , Nat . odd ( <nat:108> * <var:V> + <nat:402> * <var:B> + <nat:318> * <var:l> + <nat:4> * <var:R> + <nat:122> * <var:s> + <nat:148> * <var:J> + <nat:51> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:108> * <var:V> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:402> * <var:B> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:148> * <var:J> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:4> * <var:R> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:318> * <var:l> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:122> * <var:s> ) = true ) . { rewrite Nat . even_mul . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 