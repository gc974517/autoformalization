\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Under the condition we have $ <var:s> $ , $ <var:L> $ , $ <var:a> $ , $ <var:p> $ , $ <var:X> $ , $ <var:T> $ , $ <var:D> \geq <nat:2> $ such that assuming $ <var:K> \in \mathbb{Z}^+ $ , $ <var:K> = <var:p> \cdot <var:T> \cdot <var:D> \cdot <var:s> \cdot <var:X> \cdot <var:a> \cdot <var:L> $ assuming some natural numbers $ <var:p> $ , $ <var:X> $ , $ <var:a> $ , $ <var:T> $ , $ <var:L> $ , $ <var:D> $ , $ <var:s> $ , then take that $ <var:K> $ is a <def:seven-composite> whole number . Accordingly $ <nat:997920> = <var:K> $ is a <def:seven-composite> integer . \end{theorem} \begin{proof} Recall a <def:seven-composite> natural number is the product of positive integers $ <var:s> $ , $ <var:a> $ , $ <var:T> $ , $ <var:D> $ , $ <var:L> $ , $ <var:p> $ , $ <var:X> $ satisfying the condition that $ <var:s> $ , $ <var:L> $ , $ <var:a> $ , $ <var:T> $ , $ <var:X> $ , $ <var:D> $ , $ <var:p> \geq <nat:2> $ . Assume $ <var:p> = <nat:3> $ , $ <var:L> = <nat:9> $ , $ <var:T> = <nat:7> $ , $ <var:s> = <nat:5> $ , $ <var:a> = <nat:8> $ , $ <var:X> = <nat:11> $ , and $ <var:D> = <nat:12> $ . Note that $ <nat:997920> = <var:T> \times <var:a> \times <var:X> \times <var:D> \times <var:p> \times <var:L> \times <var:s> $ . In addition observe $ <nat:3> $ , $ <nat:9> $ , $ <nat:11> $ , $ <nat:12> $ , $ <nat:8> $ , $ <nat:7> $ and $ <nat:5> $ are larger than or equivalent to <nat:2> . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:seven-composite> ( <var:K> : nat ) := exists <var:p> <var:X> <var:a> <var:T> <var:L> <var:D> <var:s> : nat , ( <var:s> >= <nat:2> ) /\ ( <var:L> >= <nat:2> ) /\ ( <var:a> >= <nat:2> ) /\ ( <var:p> >= <nat:2> ) /\ ( <var:X> >= <nat:2> ) /\ ( <var:T> >= <nat:2> ) /\ ( <var:D> >= <nat:2> ) /\ ( <var:K> = <var:p> * <var:T> * <var:D> * <var:s> * <var:X> * <var:a> * <var:L> ) . Theorem <genP:1> : <def:seven-composite> <nat:997920> . Proof . unfold <def:seven-composite> . exists <nat:3> . exists <nat:11> . exists <nat:8> . exists <nat:7> . exists <nat:9> . exists <nat:12> . exists <nat:5> . assert ( <genH> : <nat:3> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:9> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:11> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:12> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:8> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:7> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:5> >= <nat:2> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 