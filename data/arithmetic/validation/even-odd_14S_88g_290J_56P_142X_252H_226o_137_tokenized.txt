\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:290> \cdot <var:J> + <nat:142> \cdot <var:X> + <nat:88> \cdot <var:g> + <var:S> \cdot <nat:14> + <var:P> \cdot <nat:56> + <var:H> \cdot <nat:252> + <var:o> \cdot <nat:226> + <nat:137> $ is guaranteed to be odd with every natural numbers $ <var:X> $ , $ <var:J> $ , $ <var:g> $ , $ <var:P> $ , $ <var:S> $ , $ <var:o> $ , and $ <var:H> $ . \end{theorem} \begin{proof} It can be checked that the sum $ <var:S> * <nat:14> + <nat:88> * <var:g> + <nat:290> * <var:J> + <nat:137> + <nat:56> * <var:P> + <nat:142> * <var:X> + <nat:252> * <var:H> + <var:o> * <nat:226> $ will be odd . Take note that the products $ <nat:226> <var:o> $ and likewise $ <nat:14> <var:S> $ are known as even integers . Remember the pairs $ <var:H> <nat:252> $ , $ <var:J> <nat:290> $ , as well as $ <var:g> <nat:88> $ will be even elements of $ \mathbb{N} $ as a consequence that taking the product between an even natural number with any number in $ \mathbb{Z}^+ $ is guaranteed to be even . What's more , remember the product $ <var:X> <nat:142> $ is known to be even . This holds by reason that taking the product of an even element of $ \mathbb{N} $ and an arbitrary element of $ \mathbb{Z}^+ $ is even . Likewise , the term $ <var:P> <nat:56> $ is clearly even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:X> <var:J> <var:g> <var:P> <var:S> <var:o> <var:H> : nat , Nat . odd ( <nat:290> * <var:J> + <nat:142> * <var:X> + <nat:88> * <var:g> + <nat:14> * <var:S> + <nat:56> * <var:P> + <nat:252> * <var:H> + <nat:226> * <var:o> + <nat:137> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:226> * <var:o> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:14> * <var:S> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:252> * <var:H> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:290> * <var:J> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:88> * <var:g> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:142> * <var:X> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:56> * <var:P> ) = true ) . { rewrite Nat . even_mul . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 