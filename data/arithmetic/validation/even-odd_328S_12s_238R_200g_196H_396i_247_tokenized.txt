\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Assuming any natural terms $ <var:g> $ , $ <var:s> $ , $ <var:S> $ , $ <var:H> $ , $ <var:R> $ , and $ <var:i> $ the formula $ <var:S> * <nat:328> + <nat:247> + <var:s> * <nat:12> + <nat:238> * <var:R> + <nat:200> * <var:g> + <var:H> * <nat:196> + <nat:396> * <var:i> $ will be odd . \end{theorem} \begin{proof} In addition , the terms $ <nat:328> <var:S> $ , $ <var:s> <nat:12> $ , $ <nat:238> <var:R> $ , $ <nat:200> <var:g> $ , $ <var:H> <nat:196> $ , and also $ <nat:396> <var:i> $ are known to be even positive integers by reason that taking the product of an even element of $ \mathbb{Z}^+ $ and a whole number must be even , which must be true by reason that the natural numbers $ <nat:328> $ , $ <nat:12> $ , $ <nat:238> $ , $ <nat:200> $ , $ <nat:196> $ , and also $ <nat:396> $ will be even . Take note $ <nat:247> $ is clearly an odd whole number . Recall that the adding of even numbers in $ \mathbb{N} $ together with an odd natural number is guaranteed to be odd . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:g> <var:s> <var:S> <var:H> <var:R> <var:i> : nat , Nat . odd ( <nat:328> * <var:S> + <nat:12> * <var:s> + <nat:238> * <var:R> + <nat:200> * <var:g> + <nat:196> * <var:H> + <nat:396> * <var:i> + <nat:247> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:328> = true ) . { auto . } assert ( <genH> : Nat . even <nat:12> = true ) . { auto . } assert ( <genH> : Nat . even <nat:238> = true ) . { auto . } assert ( <genH> : Nat . even <nat:200> = true ) . { auto . } assert ( <genH> : Nat . even <nat:196> = true ) . { auto . } assert ( <genH> : Nat . even <nat:396> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:328> * <var:S> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:12> * <var:s> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:238> * <var:R> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:200> * <var:g> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:196> * <var:H> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:396> * <var:i> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . odd <nat:247> = true ) . { auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 