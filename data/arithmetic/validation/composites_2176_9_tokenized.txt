\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} The number <nat:13305600> is the product of numbers $ <var:s> $ , $ <var:g> $ , $ <var:h> $ , $ <var:m> $ , $ <var:A> $ , $ <var:l> $ , $ <var:P> $ , $ <var:N> $ , $ <var:F> \in \mathbb{N} $ satisfying the condition that $ <var:g> $ , $ <var:P> $ , $ <var:m> $ , $ <var:F> $ , $ <var:s> $ , $ <var:A> $ , $ <var:N> $ , $ <var:h> $ and $ <var:l> \geq <nat:2> $ . \end{theorem} \begin{proof} Assume $ <var:N> = <nat:5> $ , $ <var:l> = <nat:2> $ , $ <var:F> = <nat:7> $ , $ <var:s> = <nat:10> $ , $ <var:P> = <nat:8> $ , $ <var:A> = <nat:6> $ , $ <var:h> = <nat:11> $ , $ <var:m> = <nat:3> $ , $ <var:g> = <nat:12> $ . Note $ <nat:7> $ , $ <nat:5> $ , $ <nat:12> $ , $ <nat:10> $ , $ <nat:2> $ , $ <nat:3> $ , $ <nat:6> $ , $ <nat:8> $ , and $ <nat:11> \geq <nat:2> $ . \end{proof} \end{document} 
~
Require Import Lia . Theorem <genP:1> : exists <var:s> <var:g> <var:h> <var:m> <var:A> <var:l> <var:P> <var:N> <var:F> : nat , ( <nat:13305600> = <var:s> * <var:g> * <var:h> * <var:m> * <var:A> * <var:l> * <var:P> * <var:N> * <var:F> ) /\ ( <var:g> >= <nat:2> ) /\ ( <var:P> >= <nat:2> ) /\ ( <var:m> >= <nat:2> ) /\ ( <var:F> >= <nat:2> ) /\ ( <var:s> >= <nat:2> ) /\ ( <var:A> >= <nat:2> ) /\ ( <var:N> >= <nat:2> ) /\ ( <var:h> >= <nat:2> ) /\ ( <var:l> >= <nat:2> ) . Proof . exists <nat:10> . exists <nat:12> . exists <nat:11> . exists <nat:3> . exists <nat:6> . exists <nat:2> . exists <nat:8> . exists <nat:5> . exists <nat:7> . assert ( <genH> : <nat:7> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:5> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:12> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:10> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:2> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:3> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:6> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:8> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:11> >= <nat:2> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 