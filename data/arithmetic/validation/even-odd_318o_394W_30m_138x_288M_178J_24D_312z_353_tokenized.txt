\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Given some terms $ <var:W> $ , $ <var:z> $ , $ <var:M> $ , $ <var:m> $ , $ <var:o> $ , $ <var:D> $ , $ <var:J> $ , and $ <var:x> $ the formula $ <nat:318> \times <var:o> + <nat:353> + <nat:394> \times <var:W> + <nat:30> \times <var:m> + <nat:138> \times <var:x> + <var:M> \times <nat:288> + <nat:178> \times <var:J> + <nat:24> \times <var:D> + <var:z> \times <nat:312> $ is guaranteed to be odd . \end{theorem} \begin{proof} By reason that the totaling of even numbers in $ \mathbb{N} $ together and an odd natural must be odd , hence this result holds . Take note the coefficients $ <nat:318> $ , $ <nat:394> $ , $ <nat:30> $ , $ <nat:138> $ , $ <nat:288> $ , $ <nat:178> $ , $ <nat:24> $ , and $ <nat:312> $ are known as even . Accordingly , the products $ <nat:318> \cdot <var:o> $ , $ <nat:394> \cdot <var:W> $ , $ <var:m> \cdot <nat:30> $ , $ <var:x> \cdot <nat:138> $ , $ <var:M> \cdot <nat:288> $ , $ <nat:178> \cdot <var:J> $ , $ <var:D> \cdot <nat:24> $ , and $ <nat:312> \cdot <var:z> $ will be even as well . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:W> <var:z> <var:M> <var:m> <var:o> <var:D> <var:J> <var:x> : nat , Nat . odd ( <nat:318> * <var:o> + <nat:394> * <var:W> + <nat:30> * <var:m> + <nat:138> * <var:x> + <nat:288> * <var:M> + <nat:178> * <var:J> + <nat:24> * <var:D> + <nat:312> * <var:z> + <nat:353> ) = true . Proof . intros . rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . assert ( <genH> : Nat . even <nat:318> = true ) . { auto . } assert ( <genH> : Nat . even <nat:394> = true ) . { auto . } assert ( <genH> : Nat . even <nat:30> = true ) . { auto . } assert ( <genH> : Nat . even <nat:138> = true ) . { auto . } assert ( <genH> : Nat . even <nat:288> = true ) . { auto . } assert ( <genH> : Nat . even <nat:178> = true ) . { auto . } assert ( <genH> : Nat . even <nat:24> = true ) . { auto . } assert ( <genH> : Nat . even <nat:312> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:318> * <var:o> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:394> * <var:W> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:30> * <var:m> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:138> * <var:x> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:288> * <var:M> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:178> * <var:J> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:24> * <var:D> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:312> * <var:z> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 