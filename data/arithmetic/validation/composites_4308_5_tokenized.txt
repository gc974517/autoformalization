\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Supposing that we have $ <var:I> $ , $ <var:M> $ , $ <var:q> $ , $ <var:p> $ and $ <var:t> \geq <nat:2> $ so that assuming $ <var:K> \in \mathbb{N} $ , $ <var:K> = <var:M> \times <var:t> \times <var:I> \times <var:q> \times <var:p> $ , define that $ <var:K> $ is a <def:five-composite> positive integer taking some $ <var:t> $ , $ <var:q> $ , $ <var:M> $ , $ <var:p> $ , $ <var:I> \in \mathbb{N} $ . Then $ <nat:28512> = <var:K> $ is a <def:five-composite> positive integer . \end{theorem} \begin{proof} Recall that a <def:five-composite> is the multiplication between $ <var:M> $ , $ <var:I> $ , $ <var:q> $ , $ <var:p> $ , and $ <var:t> $ such that $ <var:q> $ , $ <var:p> $ , $ <var:I> $ , $ <var:M> $ , $ <var:t> \geq <nat:2> $ . Allow $ <var:I> = <nat:11> $ , $ <var:t> = <nat:4> $ , $ <var:p> = <nat:9> $ , $ <var:M> = <nat:6> $ , and $ <var:q> = <nat:12> $ . Notice $ <var:p> * <var:t> * <var:q> * <var:I> * <var:M> = <nat:28512> $ . Additionally note $ <var:M> = <nat:6> $ , $ <var:p> = <nat:9> $ , $ <var:t> = <nat:4> $ , $ <var:I> = <nat:11> $ , and $ <var:q> = <nat:12> $ are greater than or equivalent to <nat:2> . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:five-composite> ( <var:K> : nat ) := exists <var:t> <var:q> <var:M> <var:p> <var:I> : nat , ( <var:I> >= <nat:2> ) /\ ( <var:M> >= <nat:2> ) /\ ( <var:q> >= <nat:2> ) /\ ( <var:p> >= <nat:2> ) /\ ( <var:t> >= <nat:2> ) /\ ( <var:K> = <var:M> * <var:t> * <var:I> * <var:q> * <var:p> ) . Theorem <genP:1> : <def:five-composite> <nat:28512> . Proof . unfold <def:five-composite> . exists <nat:4> . exists <nat:12> . exists <nat:6> . exists <nat:9> . exists <nat:11> . assert ( <genH> : <nat:6> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:9> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:4> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:11> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:12> >= <nat:2> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 