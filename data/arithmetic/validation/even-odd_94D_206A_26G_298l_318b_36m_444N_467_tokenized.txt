\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:467> + <nat:318> * <var:b> + <var:l> * <nat:298> + <var:G> * <nat:26> + <var:m> * <nat:36> + <var:D> * <nat:94> + <nat:206> * <var:A> + <nat:444> * <var:N> $ must be odd . \end{theorem} \begin{proof} It can be demonstrated that that $ <var:D> * <nat:94> + <var:A> * <nat:206> + <nat:26> * <var:G> + <var:l> * <nat:298> + <var:b> * <nat:318> + <nat:36> * <var:m> + <nat:444> * <var:N> $ is known as even . The products $ <nat:206> <var:A> $ and moreover $ <nat:298> <var:l> $ must be even . This claim must be true since the multiplication between an even natural and an arbitrary natural is guaranteed to be even . On top of this , the products $ <var:b> <nat:318> $ and $ <var:D> <nat:94> $ are known to be even . This claim is true from the knowledge taking the product between an even number and a natural is guaranteed to be even . In addition to this , $ <var:G> <nat:26> $ is an even number in $ \mathbb{Z}^+ $ by reason that the product of an even integer with an arbitrary number in $ \mathbb{Z}^+ $ is guaranteed to be by itself an even number . Likewise , the product $ <nat:444> <var:N> $ is trivially an even whole number by reason that multiplying between an even number in $ \mathbb{Z}^+ $ with a natural number is guaranteed to be even . We know that the product $ <var:m> <nat:36> $ is clearly even . From the fact the summation of even elements of $ \mathbb{N} $ with an even whole number must be even , this lemma is proven . We prove our lemma is true . Recall that $ <nat:467> $ is trivially odd . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:b> <var:l> <var:G> <var:m> <var:D> <var:A> <var:N> : nat , Nat . odd ( <nat:318> * <var:b> + <nat:298> * <var:l> + <nat:26> * <var:G> + <nat:36> * <var:m> + <nat:94> * <var:D> + <nat:206> * <var:A> + <nat:444> * <var:N> + <nat:467> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:206> * <var:A> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:298> * <var:l> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:318> * <var:b> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:94> * <var:D> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:26> * <var:G> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:444> * <var:N> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:36> * <var:m> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:318> * <var:b> + <nat:298> * <var:l> + <nat:26> * <var:G> + <nat:36> * <var:m> + <nat:94> * <var:D> + <nat:206> * <var:A> + <nat:444> * <var:N> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } assert ( <genH> : Nat . odd <nat:467> = true ) . { auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . rewrite <genH> . auto . Qed . 