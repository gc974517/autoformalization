\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:o> * <nat:242> + <var:c> * <nat:138> + <var:B> * <nat:264> + <var:A> * <nat:36> + <var:Z> * <nat:474> + <var:P> * <nat:412> + <nat:418> * <var:E> + <nat:499> $ will be odd given all natural numbers $ <var:Z> $ , $ <var:c> $ , $ <var:A> $ , $ <var:E> $ , $ <var:P> $ , $ <var:o> $ , and $ <var:B> $ . \end{theorem} \begin{proof} The expression $ <nat:242> <var:o> + <var:E> <nat:418> + <nat:36> <var:A> + <var:c> <nat:138> + <nat:474> <var:Z> + <var:P> <nat:412> + <var:B> <nat:264> $ is obviously even . See that the positive integers $ <nat:264> $ , $ <nat:474> $ , and also $ <nat:412> $ are guaranteed to be even Remember that the number $ <nat:138> $ is guaranteed to be even In addition to this , the whole number $ <nat:418> $ is known as even In addition , the leading term $ <nat:242> $ is known to be even In addition , observe that the leading term $ <nat:36> $ is an even number in $ \mathbb{Z}^+ $ From the fact multiplying between an even integer and an arbitrary natural is guaranteed to be by its very nature an even positive integer the summation $ <nat:264> <var:B> + <nat:418> <var:E> + <nat:242> <var:o> + <nat:36> <var:A> + <var:c> <nat:138> + <nat:412> <var:P> + <nat:474> <var:Z> $ is instrinsically even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:Z> <var:c> <var:A> <var:E> <var:P> <var:o> <var:B> : nat , Nat . odd ( <nat:242> * <var:o> + <nat:138> * <var:c> + <nat:264> * <var:B> + <nat:36> * <var:A> + <nat:474> * <var:Z> + <nat:412> * <var:P> + <nat:418> * <var:E> + <nat:499> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:264> = true ) . { auto . } assert ( <genH> : Nat . even <nat:474> = true ) . { auto . } assert ( <genH> : Nat . even <nat:412> = true ) . { auto . } assert ( <genH> : Nat . even <nat:138> = true ) . { auto . } assert ( <genH> : Nat . even <nat:418> = true ) . { auto . } assert ( <genH> : Nat . even <nat:242> = true ) . { auto . } assert ( <genH> : Nat . even <nat:36> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:242> * <var:o> + <nat:138> * <var:c> + <nat:264> * <var:B> + <nat:36> * <var:A> + <nat:474> * <var:Z> + <nat:412> * <var:P> + <nat:418> * <var:E> ) = true ) . { repeat rewrite Nat . even_add . repeat rewrite Nat . even_mul . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . auto . Qed . 