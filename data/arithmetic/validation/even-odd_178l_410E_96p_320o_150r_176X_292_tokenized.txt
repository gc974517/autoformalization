\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:178> * <var:l> + <nat:410> * <var:E> + <var:p> * <nat:96> + <nat:292> + <nat:320> * <var:o> + <nat:150> * <var:r> + <var:X> * <nat:176> $ is guaranteed to be even using positive integers $ <var:l> $ , $ <var:r> $ , $ <var:o> $ , $ <var:p> $ , $ <var:X> $ , and $ <var:E> $ . \end{theorem} \begin{proof} The coefficients $ <nat:178> $ , $ <nat:410> $ , $ <nat:96> $ , $ <nat:320> $ , $ <nat:150> $ , as well as $ <nat:176> $ are even . In consequence , the terms $ <var:l> \times <nat:178> $ , $ <nat:410> \times <var:E> $ , $ <var:p> \times <nat:96> $ , $ <nat:320> \times <var:o> $ , $ <var:r> \times <nat:150> $ , additionally $ <var:X> \times <nat:176> $ is even as well . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:l> <var:r> <var:o> <var:p> <var:X> <var:E> : nat , Nat . even ( <nat:178> * <var:l> + <nat:410> * <var:E> + <nat:96> * <var:p> + <nat:320> * <var:o> + <nat:150> * <var:r> + <nat:176> * <var:X> + <nat:292> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:178> = true ) . { auto . } assert ( <genH> : Nat . even <nat:410> = true ) . { auto . } assert ( <genH> : Nat . even <nat:96> = true ) . { auto . } assert ( <genH> : Nat . even <nat:320> = true ) . { auto . } assert ( <genH> : Nat . even <nat:150> = true ) . { auto . } assert ( <genH> : Nat . even <nat:176> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:178> * <var:l> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:410> * <var:E> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:96> * <var:p> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:320> * <var:o> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:150> * <var:r> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:176> * <var:X> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 