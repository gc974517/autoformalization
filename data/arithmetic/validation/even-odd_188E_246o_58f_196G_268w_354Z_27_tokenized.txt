\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:27> + <nat:268> <var:w> + <nat:354> <var:Z> + <nat:58> <var:f> + <nat:196> <var:G> + <var:E> <nat:188> + <nat:246> <var:o> $ is guaranteed to be odd . \end{theorem} \begin{proof} It can be proven that $ <nat:27> + <var:E> <nat:188> + <nat:58> <var:f> + <var:G> <nat:196> + <var:w> <nat:268> + <var:Z> <nat:354> + <nat:246> <var:o> $ is guaranteed to be odd . The lemma is proven since $ <var:w> * <nat:268> + <nat:188> * <var:E> + <nat:354> * <var:Z> + <nat:58> * <var:f> + <var:o> * <nat:246> + <nat:196> * <var:G> $ is known to be even , because the addition of an even element of $ \mathbb{N} $ and an even integer must be an even positive integer . Observe the leading terms $ <nat:354> $ in addition to $ <nat:58> $ are known as even whole numbers Likewise , see that the whole number $ <nat:196> $ is trivially even In addition , the number $ <nat:246> $ is trivially even The whole number $ <nat:188> $ is known as an even number in $ \mathbb{Z}^+ $ On top of this , the whole number $ <nat:268> $ is clearly even and likewise by reason that the product of even naturals with some element of $ \mathbb{N} $ is guaranteed to be even the summation $ <var:E> * <nat:188> + <nat:246> * <var:o> + <nat:58> * <var:f> + <nat:196> * <var:G> + <nat:268> * <var:w> + <var:Z> * <nat:354> $ is by itself even . Recall that the totaling of an even integer and an odd integer will be by its very nature an odd natural . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:w> <var:Z> <var:f> <var:G> <var:E> <var:o> : nat , Nat . odd ( <nat:268> * <var:w> + <nat:354> * <var:Z> + <nat:58> * <var:f> + <nat:196> * <var:G> + <nat:188> * <var:E> + <nat:246> * <var:o> + <nat:27> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:354> = true ) . { auto . } assert ( <genH> : Nat . even <nat:58> = true ) . { auto . } assert ( <genH> : Nat . even <nat:196> = true ) . { auto . } assert ( <genH> : Nat . even <nat:246> = true ) . { auto . } assert ( <genH> : Nat . even <nat:188> = true ) . { auto . } assert ( <genH> : Nat . even <nat:268> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:268> * <var:w> + <nat:354> * <var:Z> + <nat:58> * <var:f> + <nat:196> * <var:G> + <nat:188> * <var:E> + <nat:246> * <var:o> ) = true ) . { repeat rewrite Nat . even_add . repeat rewrite Nat . even_mul . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . auto . Qed . 