\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:95> + <var:F> \cdot <nat:464> + <var:J> \cdot <nat:220> + <nat:466> \cdot <var:U> + <var:Q> \cdot <nat:194> $ must be odd . \end{theorem} \begin{proof} We show that the expression $ <nat:95> + <var:U> <nat:466> + <var:Q> <nat:194> + <nat:220> <var:J> + <nat:464> <var:F> $ is known as odd from the fact the sum $ <nat:466> <var:U> + <nat:194> <var:Q> + <var:F> <nat:464> + <nat:220> <var:J> $ is known to be even , since the adding of an even element of $ \mathbb{Z}^+ $ with an even number must be an even number in $ \mathbb{Z}^+ $ . The products $ <var:F> \cdot <nat:464> $ plus $ <nat:220> \cdot <var:J> $ are known to be even numbers in $ \mathbb{Z}^+ $ . This claim holds because multiplying of an even element of $ \mathbb{N} $ with an arbitrary number in $ \mathbb{Z}^+ $ must be even and moreover the positive integers $ <nat:464> $ and also $ <nat:220> $ are fundamentally even elements of $ \mathbb{N} $ . Additionally , the number $ <nat:194> $ is guaranteed to be even . Accordingly , the pair $ <nat:194> \cdot <var:Q> $ must be even at the same time . Notice the leading term $ <nat:466> $ is obviously even . Then , the pair $ <nat:466> \cdot <var:U> $ must be even also . in addition to as a consequence that the product between even integers and an arbitrary number in $ \mathbb{N} $ must be an even element of $ \mathbb{N} $ the lemma is proven . Recall that the totaling of even positive integers successively and an odd positive integer must be an odd positive integer . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:F> <var:J> <var:U> <var:Q> : nat , Nat . odd ( <nat:464> * <var:F> + <nat:220> * <var:J> + <nat:466> * <var:U> + <nat:194> * <var:Q> + <nat:95> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:464> = true ) . { auto . } assert ( <genH> : Nat . even <nat:220> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:464> * <var:F> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:220> * <var:J> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:194> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:194> * <var:Q> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:466> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:466> * <var:U> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:464> * <var:F> + <nat:220> * <var:J> + <nat:466> * <var:U> + <nat:194> * <var:Q> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . auto . Qed . 