\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Using any whole numbers $ <var:w> $ , $ <var:p> $ , $ <var:k> $ , $ <var:h> $ , $ <var:G> $ , $ <var:e> $ , and $ <var:F> $ the expression $ <var:k> \cdot <nat:74> + <nat:480> \cdot <var:h> + <nat:40> \cdot <var:w> + <nat:283> + <nat:176> \cdot <var:e> + <var:G> \cdot <nat:200> + <nat:370> \cdot <var:p> + <nat:448> \cdot <var:F> $ will be odd . \end{theorem} \begin{proof} The terms $ <nat:74> <var:k> $ , $ <var:p> <nat:370> $ , and $ <nat:200> <var:G> $ are trivially even . Observe the term $ <nat:448> <var:F> $ is known as even . Remember that the pair $ <var:h> <nat:480> $ is obviously even . In addition , take note the term $ <var:w> <nat:40> $ is obviously even from the knowledge the product between an even element of $ \mathbb{Z}^+ $ with an arbitrary number in $ \mathbb{Z}^+ $ must be even . Take note that the product $ <var:e> <nat:176> $ is an even natural . This claim is true since multiplying between an even positive integer with any whole number is guaranteed to be clearly an even natural number . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:w> <var:p> <var:k> <var:h> <var:G> <var:e> <var:F> : nat , Nat . odd ( <nat:74> * <var:k> + <nat:480> * <var:h> + <nat:40> * <var:w> + <nat:176> * <var:e> + <nat:200> * <var:G> + <nat:370> * <var:p> + <nat:448> * <var:F> + <nat:283> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:74> * <var:k> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:370> * <var:p> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:200> * <var:G> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:448> * <var:F> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:480> * <var:h> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:40> * <var:w> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:176> * <var:e> ) = true ) . { rewrite Nat . even_mul . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 