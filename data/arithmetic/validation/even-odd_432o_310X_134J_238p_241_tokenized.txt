\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:432> \cdot <var:o> + <nat:241> + <var:X> \cdot <nat:310> + <var:J> \cdot <nat:134> + <var:p> \cdot <nat:238> $ is odd for every $ <var:X> $ , $ <var:o> $ , $ <var:p> $ , and $ <var:J> \in \mathbb{Z}^+ $ . \end{theorem} \begin{proof} The formula $ <nat:310> \times <var:X> + <nat:134> \times <var:J> + <nat:241> + <nat:432> \times <var:o> + <nat:238> \times <var:p> $ is guaranteed to be odd since $ <nat:432> * <var:o> + <nat:310> * <var:X> + <nat:134> * <var:J> + <var:p> * <nat:238> $ is clearly even . The products $ <nat:432> \cdot <var:o> $ , $ <nat:310> \cdot <var:X> $ , $ <var:J> \cdot <nat:134> $ , and moreover $ <var:p> \cdot <nat:238> $ are clearly even integers because the multiplication between an even integer and any natural number must be an even element of $ \mathbb{N} $ , and holds as a consequence that the leading terms $ <nat:432> $ , $ <nat:310> $ , $ <nat:134> $ , and moreover $ <nat:238> $ are clearly even integers . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:X> <var:o> <var:p> <var:J> : nat , Nat . odd ( <nat:432> * <var:o> + <nat:310> * <var:X> + <nat:134> * <var:J> + <nat:238> * <var:p> + <nat:241> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:432> = true ) . { auto . } assert ( <genH> : Nat . even <nat:310> = true ) . { auto . } assert ( <genH> : Nat . even <nat:134> = true ) . { auto . } assert ( <genH> : Nat . even <nat:238> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:432> * <var:o> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:310> * <var:X> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:134> * <var:J> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:238> * <var:p> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:432> * <var:o> + <nat:310> * <var:X> + <nat:134> * <var:J> + <nat:238> * <var:p> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . auto . Qed . 