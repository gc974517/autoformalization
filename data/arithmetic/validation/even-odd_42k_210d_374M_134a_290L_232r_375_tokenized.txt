\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:k> \cdot <nat:42> + <nat:375> + <var:r> \cdot <nat:232> + <nat:374> \cdot <var:M> + <nat:134> \cdot <var:a> + <var:d> \cdot <nat:210> + <nat:290> \cdot <var:L> $ is guaranteed to be odd for whole numbers $ <var:L> $ , $ <var:r> $ , $ <var:d> $ , $ <var:a> $ , $ <var:k> $ , and $ <var:M> $ . \end{theorem} \begin{proof} See that $ <nat:42> \cdot <var:k> + <var:d> \cdot <nat:210> + <nat:374> \cdot <var:M> + <nat:134> \cdot <var:a> + <nat:290> \cdot <var:L> + <var:r> \cdot <nat:232> $ is guaranteed to be even . We know multiplying between even numbers is itself an even natural . The leading terms $ <nat:42> $ and moreover $ <nat:290> $ are known as even numbers Likewise , the coefficients $ <nat:374> $ , $ <nat:232> $ , additionally $ <nat:134> $ are even numbers in $ \mathbb{Z}^+ $ We know that the number $ <nat:210> $ is trivially even See $ <nat:375> $ is known to be an odd number in $ \mathbb{Z}^+ $ . We know the totaling of an even positive integer with an odd number will be an odd number in $ \mathbb{Z}^+ $ . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:L> <var:r> <var:d> <var:a> <var:k> <var:M> : nat , Nat . odd ( <nat:42> * <var:k> + <nat:232> * <var:r> + <nat:374> * <var:M> + <nat:134> * <var:a> + <nat:210> * <var:d> + <nat:290> * <var:L> + <nat:375> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:42> = true ) . { auto . } assert ( <genH> : Nat . even <nat:290> = true ) . { auto . } assert ( <genH> : Nat . even <nat:374> = true ) . { auto . } assert ( <genH> : Nat . even <nat:232> = true ) . { auto . } assert ( <genH> : Nat . even <nat:134> = true ) . { auto . } assert ( <genH> : Nat . even <nat:210> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:42> * <var:k> + <nat:232> * <var:r> + <nat:374> * <var:M> + <nat:134> * <var:a> + <nat:210> * <var:d> + <nat:290> * <var:L> ) = true ) . { repeat rewrite Nat . even_add . repeat rewrite Nat . even_mul . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } assert ( <genH> : Nat . odd <nat:375> = true ) . { auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . rewrite <genH> . auto . Qed . 