\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} We denote that assuming that there exist natural numbers $ <var:f> $ , $ <var:k> $ , $ <var:Y> $ , $ <var:V> $ , $ <var:i> $ , $ <var:H> $ , $ <var:e> $ such that $ <var:Y> $ , $ <var:i> $ , $ <var:f> $ , $ <var:k> $ , $ <var:V> $ , $ <var:e> $ , $ <var:H> > <nat:1> $ . Claim that some integer $ <var:S> $ is considered to be a <def:seven-composite> integer assuming $ <var:S> = <var:k> \cdot <var:Y> \cdot <var:V> \cdot <var:f> \cdot <var:i> \cdot <var:H> \cdot <var:e> $ . Accordingly <nat:142560> is <def:seven-composite> . \end{theorem} \begin{proof} We show $ <var:V> \times <var:Y> \times <var:k> \times <var:i> \times <var:f> \times <var:e> \times <var:H> = <nat:142560> $ . Observe $ <nat:142560> = <var:k> * <var:H> * <var:i> * <var:V> * <var:e> * <var:f> * <var:Y> $ indicates $ <var:e> = <nat:11> $ , $ <var:H> = <nat:3> $ , $ <var:V> = <nat:12> $ , $ <var:i> = <nat:9> $ , $ <var:Y> = <nat:5> $ , $ <var:k> = <nat:2> $ , and $ <var:f> = <nat:4> $ . Further note that $ <nat:9> $ , $ <nat:12> $ , $ <nat:3> $ , $ <nat:11> $ , $ <nat:4> $ , $ <nat:2> $ , and $ <nat:5> > <nat:1> $ . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:seven-composite> ( <var:S> : nat ) := exists <var:f> <var:k> <var:Y> <var:V> <var:i> <var:H> <var:e> : nat , ( <var:Y> > <nat:1> ) /\ ( <var:i> > <nat:1> ) /\ ( <var:f> > <nat:1> ) /\ ( <var:k> > <nat:1> ) /\ ( <var:V> > <nat:1> ) /\ ( <var:e> > <nat:1> ) /\ ( <var:H> > <nat:1> ) /\ ( <var:S> = <var:k> * <var:Y> * <var:V> * <var:f> * <var:i> * <var:H> * <var:e> ) . Theorem <genP:1> : <def:seven-composite> <nat:142560> . Proof . unfold <def:seven-composite> . exists <nat:4> . exists <nat:2> . exists <nat:5> . exists <nat:12> . exists <nat:9> . exists <nat:3> . exists <nat:11> . assert ( <genH> : <nat:9> > <nat:1> ) . { lia . } assert ( <genH> : <nat:12> > <nat:1> ) . { lia . } assert ( <genH> : <nat:3> > <nat:1> ) . { lia . } assert ( <genH> : <nat:11> > <nat:1> ) . { lia . } assert ( <genH> : <nat:4> > <nat:1> ) . { lia . } assert ( <genH> : <nat:2> > <nat:1> ) . { lia . } assert ( <genH> : <nat:5> > <nat:1> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 