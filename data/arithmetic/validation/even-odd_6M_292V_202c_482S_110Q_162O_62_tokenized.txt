\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:62> + <nat:110> \cdot <var:Q> + <var:O> \cdot <nat:162> + <var:S> \cdot <nat:482> + <nat:292> \cdot <var:V> + <nat:6> \cdot <var:M> + <nat:202> \cdot <var:c> $ is even . \end{theorem} \begin{proof} Observe the coefficients $ <nat:6> $ , $ <nat:162> $ , plus $ <nat:292> $ will be even . Therefore , the terms $ <var:M> \cdot <nat:6> $ , $ <nat:162> \cdot <var:O> $ , and moreover $ <var:V> \cdot <nat:292> $ will be even also . Remember the products $ <nat:482> \cdot <var:S> $ and likewise $ <nat:110> \cdot <var:Q> $ will be even positive integers as a consequence that the product between an even number in $ \mathbb{N} $ with a whole number must be an even number in $ \mathbb{Z}^+ $ . This claim must be true from the fact the positive integers $ <nat:482> $ and likewise $ <nat:110> $ are guaranteed to be even . On top of this , see the pair $ <nat:202> \cdot <var:c> $ is trivially an even number since the positive integer $ <nat:202> $ is guaranteed to be an even whole number . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:Q> <var:O> <var:S> <var:V> <var:M> <var:c> : nat , Nat . even ( <nat:110> * <var:Q> + <nat:162> * <var:O> + <nat:482> * <var:S> + <nat:292> * <var:V> + <nat:6> * <var:M> + <nat:202> * <var:c> + <nat:62> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:6> = true ) . { auto . } assert ( <genH> : Nat . even <nat:162> = true ) . { auto . } assert ( <genH> : Nat . even <nat:292> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:6> * <var:M> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:162> * <var:O> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:292> * <var:V> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:482> = true ) . { auto . } assert ( <genH> : Nat . even <nat:110> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:482> * <var:S> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:110> * <var:Q> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:202> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:202> * <var:c> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 