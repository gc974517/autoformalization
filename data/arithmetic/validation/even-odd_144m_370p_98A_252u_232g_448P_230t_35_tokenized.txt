\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Assuming some $ <var:t> $ , $ <var:p> $ , $ <var:A> $ , $ <var:g> $ , $ <var:u> $ , $ <var:P> $ , and $ <var:m> $ the summation $ <nat:144> \times <var:m> + <var:p> \times <nat:370> + <nat:98> \times <var:A> + <nat:252> \times <var:u> + <var:g> \times <nat:232> + <var:P> \times <nat:448> + <nat:35> + <nat:230> \times <var:t> $ will be odd . \end{theorem} \begin{proof} On top of this , the terms $ <nat:144> \times <var:m> $ , $ <nat:370> \times <var:p> $ , $ <var:A> \times <nat:98> $ , $ <nat:252> \times <var:u> $ , $ <var:g> \times <nat:232> $ , $ <var:P> \times <nat:448> $ , and $ <var:t> \times <nat:230> $ are clearly even whole numbers as a consequence that the product of an even positive integer and a element of $ \mathbb{N} $ is guaranteed to be even , which is true as a consequence that the whole numbers $ <nat:144> $ , $ <nat:370> $ , $ <nat:98> $ , $ <nat:252> $ , $ <nat:232> $ , $ <nat:448> $ , and $ <nat:230> $ are known to be even . The totaling of even whole numbers together and an odd positive integer is odd . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:t> <var:p> <var:A> <var:g> <var:u> <var:P> <var:m> : nat , Nat . odd ( <nat:144> * <var:m> + <nat:370> * <var:p> + <nat:98> * <var:A> + <nat:252> * <var:u> + <nat:232> * <var:g> + <nat:448> * <var:P> + <nat:230> * <var:t> + <nat:35> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:144> = true ) . { auto . } assert ( <genH> : Nat . even <nat:370> = true ) . { auto . } assert ( <genH> : Nat . even <nat:98> = true ) . { auto . } assert ( <genH> : Nat . even <nat:252> = true ) . { auto . } assert ( <genH> : Nat . even <nat:232> = true ) . { auto . } assert ( <genH> : Nat . even <nat:448> = true ) . { auto . } assert ( <genH> : Nat . even <nat:230> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:144> * <var:m> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:370> * <var:p> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:98> * <var:A> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:252> * <var:u> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:232> * <var:g> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:448> * <var:P> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:230> * <var:t> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 