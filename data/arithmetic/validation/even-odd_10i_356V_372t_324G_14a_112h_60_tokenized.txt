\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Given any natural terms $ <var:i> $ , $ <var:t> $ , $ <var:V> $ , $ <var:G> $ , $ <var:h> $ , and $ <var:a> $ the sum $ <var:i> \times <nat:10> + <nat:356> \times <var:V> + <nat:60> + <var:t> \times <nat:372> + <nat:324> \times <var:G> + <nat:14> \times <var:a> + <var:h> \times <nat:112> $ must be even . \end{theorem} \begin{proof} Furthermore , observe that the integers $ <nat:10> $ , $ <nat:356> $ , $ <nat:372> $ , $ <nat:324> $ , $ <nat:14> $ , and also $ <nat:112> $ will be even naturals . As a consequence , the products $ <nat:10> <var:i> $ , $ <nat:356> <var:V> $ , $ <var:t> <nat:372> $ , $ <nat:324> <var:G> $ , $ <nat:14> <var:a> $ , and also $ <nat:112> <var:h> $ is guaranteed to be even additionally . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:i> <var:t> <var:V> <var:G> <var:h> <var:a> : nat , Nat . even ( <nat:10> * <var:i> + <nat:356> * <var:V> + <nat:372> * <var:t> + <nat:324> * <var:G> + <nat:14> * <var:a> + <nat:112> * <var:h> + <nat:60> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:10> = true ) . { auto . } assert ( <genH> : Nat . even <nat:356> = true ) . { auto . } assert ( <genH> : Nat . even <nat:372> = true ) . { auto . } assert ( <genH> : Nat . even <nat:324> = true ) . { auto . } assert ( <genH> : Nat . even <nat:14> = true ) . { auto . } assert ( <genH> : Nat . even <nat:112> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:10> * <var:i> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:356> * <var:V> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:372> * <var:t> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:324> * <var:G> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:14> * <var:a> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:112> * <var:h> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 