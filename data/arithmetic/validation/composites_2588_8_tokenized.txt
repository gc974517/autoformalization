\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \newtheorem{definition}{Definition} \begin{document} \begin{definition} Allow $ <var:S> $ , $ <var:x> $ , $ <var:T> $ , $ <var:s> $ , $ <var:U> $ , $ <var:J> $ , $ <var:F> $ , $ <var:P> \in \mathbb{N} $ greater than <nat:1> . Define that $ <var:z> \in \mathbb{N} $ is defined as a <def:eight-composite> positive integer given $ <var:S> \times <var:P> \times <var:s> \times <var:U> \times <var:T> \times <var:J> \times <var:x> \times <var:F> = <var:z> $ . \end{definition} \begin{theorem} <nat:1247400> is a <def:eight-composite> whole number . \end{theorem} \begin{proof} Recall <nat:1247400> is a <def:eight-composite> number iff it is the multiplication between whole numbers $ <var:S> $ , $ <var:x> $ , $ <var:U> $ , $ <var:J> $ , $ <var:T> $ , $ <var:P> $ , $ <var:s> $ , $ <var:F> $ more than <nat:1> . Notice $ <var:x> \cdot <var:S> \cdot <var:F> \cdot <var:J> \cdot <var:T> \cdot <var:U> \cdot <var:P> \cdot <var:s> = <nat:1247400> $ shows $ <var:U> = <nat:5> $ , $ <var:T> = <nat:9> $ , $ <var:S> = <nat:10> $ , $ <var:s> = <nat:11> $ , $ <var:x> = <nat:7> $ , $ <var:F> = <nat:3> $ , $ <var:J> = <nat:6> $ and $ <var:P> = <nat:2> $ . Further observe $ <nat:9> $ , $ <nat:5> $ , $ <nat:2> $ , $ <nat:6> $ , $ <nat:3> $ , $ <nat:10> $ , $ <nat:11> $ , $ <nat:7> $ are greater than <nat:1> . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:eight-composite> ( <var:z> : nat ) := exists <var:S> <var:x> <var:T> <var:s> <var:U> <var:J> <var:F> <var:P> : nat , ( <var:S> > <nat:1> ) /\ ( <var:x> > <nat:1> ) /\ ( <var:T> > <nat:1> ) /\ ( <var:s> > <nat:1> ) /\ ( <var:U> > <nat:1> ) /\ ( <var:J> > <nat:1> ) /\ ( <var:F> > <nat:1> ) /\ ( <var:P> > <nat:1> ) /\ ( <var:S> * <var:P> * <var:s> * <var:U> * <var:T> * <var:J> * <var:x> * <var:F> = <var:z> ) . Theorem <genP:1> : <def:eight-composite> <nat:1247400> . Proof . unfold <def:eight-composite> . exists <nat:10> . exists <nat:7> . exists <nat:9> . exists <nat:11> . exists <nat:5> . exists <nat:6> . exists <nat:3> . exists <nat:2> . assert ( <genH> : <nat:9> > <nat:1> ) . { lia . } assert ( <genH> : <nat:5> > <nat:1> ) . { lia . } assert ( <genH> : <nat:2> > <nat:1> ) . { lia . } assert ( <genH> : <nat:6> > <nat:1> ) . { lia . } assert ( <genH> : <nat:3> > <nat:1> ) . { lia . } assert ( <genH> : <nat:10> > <nat:1> ) . { lia . } assert ( <genH> : <nat:11> > <nat:1> ) . { lia . } assert ( <genH> : <nat:7> > <nat:1> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 