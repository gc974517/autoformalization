\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ \exists <var:e> $ , $ <var:N> $ , $ <var:j> $ , $ <var:u> $ , $ <var:S> $ , $ <var:Q> $ , $ <var:T> $ , and $ <var:m> \in \mathbb{N} $ satisfying the condition that $ <var:S> $ , $ <var:Q> $ , $ <var:N> $ , $ <var:u> $ , $ <var:T> $ , $ <var:e> $ , $ <var:j> $ and $ <var:m> $ greater than or equivalent to <nat:2> plus so that the integer <nat:19958400> is the product of positive integers $ <var:e> $ , $ <var:N> $ , $ <var:j> $ , $ <var:u> $ , $ <var:S> $ , $ <var:Q> $ , $ <var:T> $ and $ <var:m> \in \mathbb{Z}^+ $ . \end{theorem} \begin{proof} Let $ <var:Q> = <nat:8> $ , $ <var:N> = <nat:12> $ , $ <var:S> = <nat:9> $ , $ <var:u> = <nat:11> $ , $ <var:j> = <nat:10> $ , $ <var:m> = <nat:7> $ , $ <var:e> = <nat:5> $ , $ <var:T> = <nat:6> $ . Note $ <nat:8> $ , $ <nat:12> $ , $ <nat:11> $ , $ <nat:7> $ , $ <nat:9> $ , $ <nat:5> $ , $ <nat:10> $ , $ <nat:6> \geq <nat:2> $ . Hence , $ <var:j> $ , $ <var:e> $ , $ <var:S> $ , $ <var:m> $ , $ <var:Q> $ , $ <var:u> $ , $ <var:N> $ and $ <var:T> \geq <nat:2> $ as well as <nat:19958400> is the product of $ <var:j> $ , $ <var:S> $ , $ <var:N> $ , $ <var:Q> $ , $ <var:T> $ , $ <var:u> $ , $ <var:e> $ , and $ <var:m> \in \mathbb{N} $ has been validated . \end{proof} \end{document} 
~
Require Import Lia . Theorem <genP:1> : exists <var:e> <var:N> <var:j> <var:u> <var:S> <var:Q> <var:T> <var:m> : nat , ( <var:S> >= <nat:2> ) /\ ( <var:Q> >= <nat:2> ) /\ ( <var:N> >= <nat:2> ) /\ ( <var:u> >= <nat:2> ) /\ ( <var:T> >= <nat:2> ) /\ ( <var:e> >= <nat:2> ) /\ ( <var:j> >= <nat:2> ) /\ ( <var:m> >= <nat:2> ) /\ ( <nat:19958400> = <var:e> * <var:N> * <var:j> * <var:u> * <var:S> * <var:Q> * <var:T> * <var:m> ) . Proof . exists <nat:5> . exists <nat:12> . exists <nat:10> . exists <nat:11> . exists <nat:9> . exists <nat:8> . exists <nat:6> . exists <nat:7> . assert ( <genH> : <nat:8> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:12> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:11> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:7> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:9> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:5> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:10> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:6> >= <nat:2> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 