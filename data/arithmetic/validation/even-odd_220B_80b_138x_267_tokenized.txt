\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Assuming all unknowns $ <var:b> $ , $ <var:x> $ , and $ <var:B> $ $ <nat:267> + <var:b> \cdot <nat:80> + <nat:138> \cdot <var:x> + <var:B> \cdot <nat:220> $ will be odd . \end{theorem} \begin{proof} It can be proven that our result holds . Observe the summation $ <var:B> <nat:220> + <nat:80> <var:b> + <nat:138> <var:x> $ is known as even . The pair $ <var:b> \cdot <nat:80> $ is known to be an even number . This fact is true as a consequence that multiplying of an even positive integer and any number in $ \mathbb{N} $ is guaranteed to be an even number in $ \mathbb{N} $ . The term $ <nat:220> \cdot <var:B> $ is clearly an even integer . This fact is proven from the knowledge the product between an even integer and an arbitrary number in $ \mathbb{N} $ will be an even integer . Furthermore , $ <nat:138> \cdot <var:x> $ is guaranteed to be an even number in $ \mathbb{N} $ . By reason that the summing between an even number and an even number will be an even natural number , as well as because the multiplication of an even natural number with a number in $ \mathbb{Z}^+ $ is an even element of $ \mathbb{Z}^+ $ . Notice the addition of an even number in $ \mathbb{Z}^+ $ with an odd natural will be obviously an odd positive integer . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:b> <var:x> <var:B> : nat , Nat . odd ( <nat:80> * <var:b> + <nat:138> * <var:x> + <nat:220> * <var:B> + <nat:267> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:80> * <var:b> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:220> * <var:B> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:138> * <var:x> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:80> * <var:b> + <nat:138> * <var:x> + <nat:220> * <var:B> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . auto . Qed . 