\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} With every terms $ <var:x> $ , $ <var:W> $ , $ <var:E> $ , and $ <var:p> $ the summation $ <nat:460> + <nat:94> <var:W> + <nat:100> <var:E> + <nat:58> <var:x> + <var:p> <nat:88> $ must be even . \end{theorem} \begin{proof} The numbers $ <nat:100> $ , $ <nat:88> $ , in addition to $ <nat:94> $ are known as even . So , the products $ <var:E> \cdot <nat:100> $ , $ <nat:88> \cdot <var:p> $ , and $ <nat:94> \cdot <var:W> $ must be even as well . Furthermore , the pair $ <nat:58> \cdot <var:x> $ is obviously an even positive integer . This claim is true from the knowledge taking the product of an even natural number and some integer is guaranteed to be an even number in $ \mathbb{N} $ and moreover the positive integer $ <nat:58> $ is obviously even . It can be justified that the theorem is true using the knowledge the summation of even numbers collectively and an even integer is guaranteed to be even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:x> <var:W> <var:E> <var:p> : nat , Nat . even ( <nat:94> * <var:W> + <nat:100> * <var:E> + <nat:58> * <var:x> + <nat:88> * <var:p> + <nat:460> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:100> = true ) . { auto . } assert ( <genH> : Nat . even <nat:88> = true ) . { auto . } assert ( <genH> : Nat . even <nat:94> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:100> * <var:E> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:88> * <var:p> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:94> * <var:W> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:58> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:58> * <var:x> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 