\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} For unknowns $ <var:T> $ , $ <var:d> $ , $ <var:z> $ , $ <var:j> $ , $ <var:M> $ , $ <var:c> $ , and $ <var:e> $ $ <var:M> * <nat:230> + <var:T> * <nat:418> + <nat:197> + <var:z> * <nat:166> + <var:e> * <nat:94> + <nat:154> * <var:j> + <var:d> * <nat:210> + <var:c> * <nat:474> $ must be odd . \end{theorem} \begin{proof} Recall $ <nat:197> $ is known as odd . Take note that the adding of an even integer and an odd integer is guaranteed to be odd . We demonstrate that the expression $ <nat:166> * <var:z> + <var:c> * <nat:474> + <var:M> * <nat:230> + <nat:154> * <var:j> + <nat:210> * <var:d> + <nat:94> * <var:e> + <var:T> * <nat:418> $ is clearly even , by reason that the addition between even numbers in $ \mathbb{N} $ concurrently and an even element of $ \mathbb{Z}^+ $ must be even . The term $ <nat:154> \times <var:j> $ is trivially an even integer . Furthermore , remember that the term $ <var:z> \times <nat:166> $ is trivially even from the knowledge the product of an even natural with an arbitrary number must be obviously an even positive integer . The products $ <nat:230> \times <var:M> $ , $ <nat:474> \times <var:c> $ , $ <var:T> \times <nat:418> $ , in addition to $ <var:d> \times <nat:210> $ will be even integers . This claim must be true as a consequence that the multiplication of an even number in $ \mathbb{Z}^+ $ and some whole number will be an even element of $ \mathbb{N} $ . The product $ <var:e> \times <nat:94> $ is guaranteed to be even . and moreover from the knowledge the multiplication of even numbers in $ \mathbb{Z}^+ $ with any natural is an even number in $ \mathbb{Z}^+ $ . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:T> <var:d> <var:z> <var:j> <var:M> <var:c> <var:e> : nat , Nat . odd ( <nat:230> * <var:M> + <nat:418> * <var:T> + <nat:166> * <var:z> + <nat:94> * <var:e> + <nat:154> * <var:j> + <nat:210> * <var:d> + <nat:474> * <var:c> + <nat:197> ) = true . Proof . intros . assert ( <genH> : Nat . odd <nat:197> = true ) . { auto . } rewrite Nat . odd_add . assert ( <genH> : Nat . even ( <nat:154> * <var:j> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:166> * <var:z> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:230> * <var:M> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:474> * <var:c> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:418> * <var:T> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:210> * <var:d> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:94> * <var:e> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:230> * <var:M> + <nat:418> * <var:T> + <nat:166> * <var:z> + <nat:94> * <var:e> + <nat:154> * <var:j> + <nat:210> * <var:d> + <nat:474> * <var:c> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite <- Nat . negb_even . rewrite <genH> . rewrite <genH> . auto . Qed . 