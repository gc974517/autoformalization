\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Given terms $ <var:r> $ , $ <var:A> $ , $ <var:F> $ , $ <var:C> $ , $ <var:a> $ , $ <var:t> $ , and $ <var:H> $ the sum $ <nat:102> + <var:F> * <nat:352> + <var:r> * <nat:268> + <var:a> * <nat:138> + <var:A> * <nat:80> + <nat:194> * <var:C> + <var:H> * <nat:196> + <var:t> * <nat:30> $ is even . \end{theorem} \begin{proof} We check $ <var:r> <nat:268> + <var:a> <nat:138> + <var:F> <nat:352> + <var:t> <nat:30> + <var:A> <nat:80> + <var:C> <nat:194> + <var:H> <nat:196> $ is known as even . Observe that the pairs $ <nat:138> * <var:a> $ , $ <var:F> * <nat:352> $ , $ <nat:80> * <var:A> $ , $ <nat:196> * <var:H> $ , $ <var:C> * <nat:194> $ , and moreover $ <nat:30> * <var:t> $ are even naturals . On top of this , $ <var:r> * <nat:268> $ is obviously even since the product of an even element of $ \mathbb{Z}^+ $ and any positive integer will be even . The result holds from the knowledge the multiplication of an even whole number with a positive integer is guaranteed to be even . Recall that the addition of even numbers in $ \mathbb{N} $ successively and an even element of $ \mathbb{N} $ is guaranteed to be instrinsically an even whole number . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:r> <var:A> <var:F> <var:C> <var:a> <var:t> <var:H> : nat , Nat . even ( <nat:352> * <var:F> + <nat:268> * <var:r> + <nat:138> * <var:a> + <nat:80> * <var:A> + <nat:194> * <var:C> + <nat:196> * <var:H> + <nat:30> * <var:t> + <nat:102> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:138> * <var:a> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:352> * <var:F> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:80> * <var:A> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:196> * <var:H> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:194> * <var:C> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:30> * <var:t> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:268> * <var:r> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:352> * <var:F> + <nat:268> * <var:r> + <nat:138> * <var:a> + <nat:80> * <var:A> + <nat:194> * <var:C> + <nat:196> * <var:H> + <nat:30> * <var:t> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . even_add . rewrite <genH> . auto . Qed . 