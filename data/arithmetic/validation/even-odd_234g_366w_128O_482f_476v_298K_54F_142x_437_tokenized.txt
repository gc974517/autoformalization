\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:x> <nat:142> + <var:v> <nat:476> + <var:w> <nat:366> + <nat:437> + <var:O> <nat:128> + <var:g> <nat:234> + <nat:482> <var:f> + <nat:298> <var:K> + <nat:54> <var:F> $ will be odd with some $ <var:w> $ , $ <var:x> $ , $ <var:O> $ , $ <var:v> $ , $ <var:g> $ , $ <var:f> $ , $ <var:F> $ , and $ <var:K> \in \mathbb{N} $ . \end{theorem} \begin{proof} Recall that the expression $ <nat:142> \times <var:x> + <nat:54> \times <var:F> + <nat:366> \times <var:w> + <var:f> \times <nat:482> + <nat:298> \times <var:K> + <var:v> \times <nat:476> + <var:g> \times <nat:234> + <var:O> \times <nat:128> $ is trivially even . The pairs $ <nat:298> * <var:K> $ , $ <nat:142> * <var:x> $ , $ <var:w> * <nat:366> $ , and $ <nat:482> * <var:f> $ are known to be even elements of $ \mathbb{N} $ . The terms $ <nat:476> * <var:v> $ additionally $ <nat:234> * <var:g> $ are known as even . Additionally , the term $ <var:O> * <nat:128> $ is trivially even . Likewise , the pair $ <nat:54> * <var:F> $ is even . As a consequence that multiplying of an even element of $ \mathbb{Z}^+ $ with an arbitrary element of $ \mathbb{N} $ must be obviously an even number in $ \mathbb{N} $ $ <nat:234> <var:g> + <var:w> <nat:366> + <nat:128> <var:O> + <var:f> <nat:482> + <nat:476> <var:v> + <nat:298> <var:K> + <nat:54> <var:F> + <var:x> <nat:142> $ must be even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:w> <var:x> <var:O> <var:v> <var:g> <var:f> <var:F> <var:K> : nat , Nat . odd ( <nat:142> * <var:x> + <nat:476> * <var:v> + <nat:366> * <var:w> + <nat:128> * <var:O> + <nat:234> * <var:g> + <nat:482> * <var:f> + <nat:298> * <var:K> + <nat:54> * <var:F> + <nat:437> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:298> * <var:K> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:142> * <var:x> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:366> * <var:w> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:482> * <var:f> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:476> * <var:v> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:234> * <var:g> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:128> * <var:O> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:54> * <var:F> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:142> * <var:x> + <nat:476> * <var:v> + <nat:366> * <var:w> + <nat:128> * <var:O> + <nat:234> * <var:g> + <nat:482> * <var:f> + <nat:298> * <var:K> + <nat:54> * <var:F> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . auto . Qed . 