\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:148> \times <var:d> + <var:c> \times <nat:48> + <var:W> \times <nat:438> + <nat:398> \times <var:o> + <nat:10> \times <var:q> + <nat:450> \times <var:C> + <nat:155> + <var:m> \times <nat:472> $ will be odd taking any natural numbers $ <var:C> $ , $ <var:o> $ , $ <var:c> $ , $ <var:m> $ , $ <var:q> $ , $ <var:d> $ , and $ <var:W> $ . \end{theorem} \begin{proof} Our claim is proven from the fact $ <var:m> \times <nat:472> + <var:c> \times <nat:48> + <var:q> \times <nat:10> + <var:W> \times <nat:438> + <nat:398> \times <var:o> + <nat:450> \times <var:C> + <nat:148> \times <var:d> $ is guaranteed to be even . Observe that the natural number $ <nat:472> $ is known to be even . As a consequence , the term $ <var:m> <nat:472> $ must be even at the same time . The leading term $ <nat:148> $ is clearly even . Thus , the term $ <nat:148> <var:d> $ must be even at the same time . The term $ <var:W> <nat:438> $ is trivially even . This is true since multiplying of an even positive integer with some natural is even . This fact is true from the fact the integer $ <nat:438> $ is known to be an even number in $ \mathbb{Z}^+ $ . In addition to this , recall the product $ <var:C> <nat:450> $ is obviously an even number . This must be true from the knowledge the whole number $ <nat:450> $ is known as even . The positive integer $ <nat:48> $ is clearly an even number in $ \mathbb{Z}^+ $ . Then , the pair $ <var:c> <nat:48> $ must be even also . The pair $ <nat:398> <var:o> $ is known to be even by reason that the positive integer $ <nat:398> $ is trivially even . Further , the term $ <nat:10> <var:q> $ is clearly an even natural number . This is true from the fact the multiplication of an even number in $ \mathbb{N} $ with an arbitrary positive integer is guaranteed to be even . This holds because the coefficient $ <nat:10> $ is known to be even . The main result must be true as a consequence that the totaling between an even element of $ \mathbb{Z}^+ $ and even elements of $ \mathbb{Z}^+ $ is guaranteed to be even . We show the proposition must be true . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:C> <var:o> <var:c> <var:m> <var:q> <var:d> <var:W> : nat , Nat . odd ( <nat:148> * <var:d> + <nat:48> * <var:c> + <nat:438> * <var:W> + <nat:398> * <var:o> + <nat:10> * <var:q> + <nat:450> * <var:C> + <nat:472> * <var:m> + <nat:155> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:472> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:472> * <var:m> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:148> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:148> * <var:d> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:438> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:438> * <var:W> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:450> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:450> * <var:C> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:48> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:48> * <var:c> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:398> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:398> * <var:o> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:10> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:10> * <var:q> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:148> * <var:d> + <nat:48> * <var:c> + <nat:438> * <var:W> + <nat:398> * <var:o> + <nat:10> * <var:q> + <nat:450> * <var:C> + <nat:472> * <var:m> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . auto . Qed . 