\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:E> \times <nat:380> + <var:f> \times <nat:370> + <var:g> \times <nat:212> + <nat:290> \times <var:J> + <nat:404> \times <var:I> + <nat:495> + <nat:52> \times <var:T> $ is guaranteed to be odd using $ <var:I> $ , $ <var:f> $ , $ <var:E> $ , $ <var:T> $ , $ <var:g> $ , and $ <var:J> \in \mathbb{N} $ . \end{theorem} \begin{proof} See that $ <nat:495> $ is guaranteed to be odd . Remember the adding of even elements of $ \mathbb{N} $ and an odd positive integer will be fundamentally an odd whole number . We know that the integer $ <nat:52> $ is known to be even . Accordingly , $ <nat:52> * <var:T> $ must be even additionally . We know that $ <var:E> * <nat:380> $ is known as an even positive integer by reason that taking the product of an even number with a element of $ \mathbb{Z}^+ $ is guaranteed to be even additionally the integer $ <nat:380> $ is trivially an even number in $ \mathbb{Z}^+ $ . Further , the leading term $ <nat:370> $ is trivially an even element of $ \mathbb{N} $ . Then , the pair $ <nat:370> * <var:f> $ is even also . The number $ <nat:290> $ is known to be an even number . So , the term $ <nat:290> * <var:J> $ is even also . In addition to this , take note the coefficient $ <nat:212> $ is known as an even whole number . Therefore , the term $ <var:g> * <nat:212> $ must be even too . On top of this , recall that the leading term $ <nat:404> $ is known as even . Then , the product $ <nat:404> * <var:I> $ is even as well . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:I> <var:f> <var:E> <var:T> <var:g> <var:J> : nat , Nat . odd ( <nat:380> * <var:E> + <nat:370> * <var:f> + <nat:212> * <var:g> + <nat:290> * <var:J> + <nat:404> * <var:I> + <nat:52> * <var:T> + <nat:495> ) = true . Proof . intros . assert ( <genH> : Nat . odd <nat:495> = true ) . { auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . assert ( <genH> : Nat . even <nat:52> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:52> * <var:T> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:380> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:380> * <var:E> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:370> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:370> * <var:f> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:290> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:290> * <var:J> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:212> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:212> * <var:g> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:404> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:404> * <var:I> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 