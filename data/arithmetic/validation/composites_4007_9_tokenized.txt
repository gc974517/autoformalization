\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \newtheorem{definition}{Definition} \begin{document} \begin{definition} Supposing that we have where $ <var:E> $ , $ <var:k> $ , $ <var:K> $ , $ <var:c> $ , $ <var:A> $ , $ <var:O> $ , $ <var:X> $ , $ <var:L> $ , $ <var:v> > <nat:1> $ such that using $ <var:H> \in \mathbb{N} $ , $ <var:c> \times <var:k> \times <var:K> \times <var:O> \times <var:E> \times <var:L> \times <var:X> \times <var:v> \times <var:A> = <var:H> $ , let that $ <var:H> $ is a <def:nine-composite> whole number assuming some $ <var:L> $ , $ <var:k> $ , $ <var:O> $ , $ <var:K> $ , $ <var:A> $ , $ <var:v> $ , $ <var:X> $ , $ <var:c> $ , $ <var:E> \in \mathbb{Z}^+ $ . \end{definition} \begin{theorem} <nat:13685760> is a <def:nine-composite> number . \end{theorem} \begin{proof} Let $ <var:L> = <nat:10> $ , $ <var:X> = <nat:8> $ , $ <var:k> = <nat:4> $ , $ <var:c> = <nat:11> $ , $ <var:A> = <nat:3> $ , $ <var:K> = <nat:6> $ , $ <var:O> = <nat:12> $ , $ <var:v> = <nat:9> $ and $ <var:E> = <nat:2> $ . Further notice $ <nat:2> $ , $ <nat:9> $ , $ <nat:4> $ , $ <nat:6> $ , $ <nat:3> $ , $ <nat:12> $ , $ <nat:10> $ , $ <nat:11> $ , and $ <nat:8> > <nat:1> $ . This produces <nat:13685760> is <def:nine-composite> . Hence , $ <nat:13685760> = <var:c> \times <var:k> \times <var:v> \times <var:O> \times <var:A> \times <var:K> \times <var:L> \times <var:X> \times <var:E> $ has been verified . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:nine-composite> ( <var:H> : nat ) := exists <var:L> <var:k> <var:O> <var:K> <var:A> <var:v> <var:X> <var:c> <var:E> : nat , ( <var:E> > <nat:1> ) /\ ( <var:k> > <nat:1> ) /\ ( <var:K> > <nat:1> ) /\ ( <var:c> > <nat:1> ) /\ ( <var:A> > <nat:1> ) /\ ( <var:O> > <nat:1> ) /\ ( <var:X> > <nat:1> ) /\ ( <var:L> > <nat:1> ) /\ ( <var:v> > <nat:1> ) /\ ( <var:c> * <var:k> * <var:K> * <var:O> * <var:E> * <var:L> * <var:X> * <var:v> * <var:A> = <var:H> ) . Theorem <genP:1> : <def:nine-composite> <nat:13685760> . Proof . unfold <def:nine-composite> . exists <nat:10> . exists <nat:4> . exists <nat:12> . exists <nat:6> . exists <nat:3> . exists <nat:9> . exists <nat:8> . exists <nat:11> . exists <nat:2> . assert ( <genH> : <nat:2> > <nat:1> ) . { lia . } assert ( <genH> : <nat:9> > <nat:1> ) . { lia . } assert ( <genH> : <nat:4> > <nat:1> ) . { lia . } assert ( <genH> : <nat:6> > <nat:1> ) . { lia . } assert ( <genH> : <nat:3> > <nat:1> ) . { lia . } assert ( <genH> : <nat:12> > <nat:1> ) . { lia . } assert ( <genH> : <nat:10> > <nat:1> ) . { lia . } assert ( <genH> : <nat:11> > <nat:1> ) . { lia . } assert ( <genH> : <nat:8> > <nat:1> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 