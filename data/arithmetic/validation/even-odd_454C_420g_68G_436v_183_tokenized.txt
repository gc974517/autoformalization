\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:420> <var:g> + <nat:183> + <nat:454> <var:C> + <var:v> <nat:436> + <var:G> <nat:68> $ is guaranteed to be odd . \end{theorem} \begin{proof} We demonstrate the formula $ <nat:420> \cdot <var:g> + <var:v> \cdot <nat:436> + <var:C> \cdot <nat:454> + <nat:183> + <nat:68> \cdot <var:G> $ is odd . We apply the assumption the fact that $ <nat:454> <var:C> + <var:g> <nat:420> + <nat:68> <var:G> + <var:v> <nat:436> $ is known to be even . Take note the term $ <var:g> <nat:420> $ is guaranteed to be an even integer . This fact must be true from the fact the product of an even natural number and a whole number must be instrinsically an even element of $ \mathbb{Z}^+ $ . In addition , the terms $ <var:G> <nat:68> $ and likewise $ <nat:436> <var:v> $ are obviously even whole numbers as a consequence that taking the product of an even element of $ \mathbb{Z}^+ $ and any number is by itself an even integer . Adding on , $ <nat:454> <var:C> $ is known as an even element of $ \mathbb{Z}^+ $ . Because the adding between an even element of $ \mathbb{Z}^+ $ and an even element of $ \mathbb{Z}^+ $ must be trivially an even number in $ \mathbb{N} $ , plus from the fact taking the product between even numbers in $ \mathbb{Z}^+ $ and some positive integer will be even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:g> <var:C> <var:v> <var:G> : nat , Nat . odd ( <nat:420> * <var:g> + <nat:454> * <var:C> + <nat:436> * <var:v> + <nat:68> * <var:G> + <nat:183> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:420> * <var:g> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:68> * <var:G> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:436> * <var:v> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:454> * <var:C> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:420> * <var:g> + <nat:454> * <var:C> + <nat:436> * <var:v> + <nat:68> * <var:G> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . auto . Qed . 