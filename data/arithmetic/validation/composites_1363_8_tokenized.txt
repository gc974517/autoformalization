\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} <nat:6652800> is the multiplication of positive integers $ <var:G> $ , $ <var:P> $ , $ <var:E> $ , $ <var:q> $ , $ <var:s> $ , $ <var:r> $ , $ <var:V> $ , and $ <var:U> \in \mathbb{Z}^+ $ where $ <var:s> $ , $ <var:G> $ , $ <var:U> $ , $ <var:V> $ , $ <var:q> $ , $ <var:r> $ , $ <var:E> $ and $ <var:P> > <nat:1> $ . \end{theorem} \begin{proof} Note that $ <nat:12> $ , $ <nat:9> $ , $ <nat:7> $ , $ <nat:8> $ , $ <nat:10> $ , $ <nat:11> $ , $ <nat:2> $ , $ <nat:5> > <nat:1> $ . Furthermore note that further $ <var:E> \cdot <var:G> \cdot <var:P> \cdot <var:V> \cdot <var:r> \cdot <var:s> \cdot <var:q> \cdot <var:U> = <nat:6652800> $ indicates $ <var:q> = <nat:10> $ , $ <var:U> = <nat:9> $ , $ <var:E> = <nat:2> $ , $ <var:s> = <nat:11> $ , $ <var:V> = <nat:5> $ , $ <var:G> = <nat:7> $ , $ <var:P> = <nat:12> $ , and $ <var:r> = <nat:8> $ . This produces our formula is true . As a result , $ <nat:6652800> = <var:q> \times <var:G> \times <var:U> \times <var:s> \times <var:r> \times <var:P> \times <var:E> \times <var:V> $ and $ <var:V> $ , $ <var:E> $ , $ <var:U> $ , $ <var:G> $ , $ <var:P> $ , $ <var:s> $ , $ <var:q> $ and $ <var:r> > <nat:1> $ is validated . \end{proof} \end{document} 
~
Require Import Lia . Theorem <genP:1> : exists <var:G> <var:P> <var:E> <var:q> <var:s> <var:r> <var:V> <var:U> : nat , ( <nat:6652800> = <var:G> * <var:P> * <var:E> * <var:q> * <var:s> * <var:r> * <var:V> * <var:U> ) /\ ( <var:s> > <nat:1> ) /\ ( <var:G> > <nat:1> ) /\ ( <var:U> > <nat:1> ) /\ ( <var:V> > <nat:1> ) /\ ( <var:q> > <nat:1> ) /\ ( <var:r> > <nat:1> ) /\ ( <var:E> > <nat:1> ) /\ ( <var:P> > <nat:1> ) . Proof . assert ( <genH> : <nat:12> > <nat:1> ) . { lia . } assert ( <genH> : <nat:9> > <nat:1> ) . { lia . } assert ( <genH> : <nat:7> > <nat:1> ) . { lia . } assert ( <genH> : <nat:8> > <nat:1> ) . { lia . } assert ( <genH> : <nat:10> > <nat:1> ) . { lia . } assert ( <genH> : <nat:11> > <nat:1> ) . { lia . } assert ( <genH> : <nat:2> > <nat:1> ) . { lia . } assert ( <genH> : <nat:5> > <nat:1> ) . { lia . } exists <nat:7> . exists <nat:12> . exists <nat:2> . exists <nat:10> . exists <nat:11> . exists <nat:8> . exists <nat:5> . exists <nat:9> . repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 