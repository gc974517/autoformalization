\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:92> * <var:H> + <nat:432> * <var:O> + <var:D> * <nat:312> + <nat:21> + <nat:156> * <var:N> + <nat:146> * <var:p> + <var:y> * <nat:350> + <var:M> * <nat:202> $ must be odd . \end{theorem} \begin{proof} The addition of an even integer and an odd number in $ \mathbb{Z}^+ $ is odd . See that $ <nat:21> $ is odd . Our proposition is true as a consequence that $ <var:N> * <nat:156> + <var:y> * <nat:350> + <var:O> * <nat:432> + <nat:146> * <var:p> + <var:D> * <nat:312> + <var:M> * <nat:202> + <nat:92> * <var:H> $ is obviously even . Notice multiplying between an even natural and any natural number will be clearly an even number . Observe the integers $ <nat:432> $ , $ <nat:350> $ , $ <nat:92> $ , $ <nat:202> $ , $ <nat:156> $ , and also $ <nat:146> $ are even See the number $ <nat:312> $ is clearly an even natural number \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:H> <var:O> <var:D> <var:N> <var:p> <var:y> <var:M> : nat , Nat . odd ( <nat:92> * <var:H> + <nat:432> * <var:O> + <nat:312> * <var:D> + <nat:156> * <var:N> + <nat:146> * <var:p> + <nat:350> * <var:y> + <nat:202> * <var:M> + <nat:21> ) = true . Proof . intros . rewrite Nat . odd_add . assert ( <genH> : Nat . odd <nat:21> = true ) . { auto . } assert ( <genH> : Nat . even <nat:432> = true ) . { auto . } assert ( <genH> : Nat . even <nat:350> = true ) . { auto . } assert ( <genH> : Nat . even <nat:92> = true ) . { auto . } assert ( <genH> : Nat . even <nat:202> = true ) . { auto . } assert ( <genH> : Nat . even <nat:156> = true ) . { auto . } assert ( <genH> : Nat . even <nat:146> = true ) . { auto . } assert ( <genH> : Nat . even <nat:312> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:92> * <var:H> + <nat:432> * <var:O> + <nat:312> * <var:D> + <nat:156> * <var:N> + <nat:146> * <var:p> + <nat:350> * <var:y> + <nat:202> * <var:M> ) = true ) . { repeat rewrite Nat . even_add . repeat rewrite Nat . even_mul . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite <- Nat . negb_even . rewrite <genH> . rewrite <genH> . auto . Qed . 