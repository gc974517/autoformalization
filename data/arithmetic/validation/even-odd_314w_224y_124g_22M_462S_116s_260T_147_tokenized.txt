\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:w> * <nat:314> + <var:y> * <nat:224> + <nat:124> * <var:g> + <nat:22> * <var:M> + <var:S> * <nat:462> + <var:s> * <nat:116> + <nat:147> + <var:T> * <nat:260> $ is odd given any variables $ <var:w> $ , $ <var:T> $ , $ <var:M> $ , $ <var:y> $ , $ <var:S> $ , $ <var:s> $ , and $ <var:g> $ . \end{theorem} \begin{proof} Observe that the products $ <nat:314> <var:w> $ , $ <nat:224> <var:y> $ , $ <var:g> <nat:124> $ , $ <var:M> <nat:22> $ , $ <var:S> <nat:462> $ , $ <nat:116> <var:s> $ , additionally $ <nat:260> <var:T> $ are trivially even as a consequence that the multiplication between an even number in $ \mathbb{N} $ and a number is guaranteed to be an even whole number in addition to the leading terms $ <nat:314> $ , $ <nat:224> $ , $ <nat:124> $ , $ <nat:22> $ , $ <nat:462> $ , $ <nat:116> $ , as well as $ <nat:260> $ are clearly even . The adding of an even integer and an odd natural is odd . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:w> <var:T> <var:M> <var:y> <var:S> <var:s> <var:g> : nat , Nat . odd ( <nat:314> * <var:w> + <nat:224> * <var:y> + <nat:124> * <var:g> + <nat:22> * <var:M> + <nat:462> * <var:S> + <nat:116> * <var:s> + <nat:260> * <var:T> + <nat:147> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:314> = true ) . { auto . } assert ( <genH> : Nat . even <nat:224> = true ) . { auto . } assert ( <genH> : Nat . even <nat:124> = true ) . { auto . } assert ( <genH> : Nat . even <nat:22> = true ) . { auto . } assert ( <genH> : Nat . even <nat:462> = true ) . { auto . } assert ( <genH> : Nat . even <nat:116> = true ) . { auto . } assert ( <genH> : Nat . even <nat:260> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:314> * <var:w> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:224> * <var:y> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:124> * <var:g> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:22> * <var:M> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:462> * <var:S> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:116> * <var:s> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:260> * <var:T> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 