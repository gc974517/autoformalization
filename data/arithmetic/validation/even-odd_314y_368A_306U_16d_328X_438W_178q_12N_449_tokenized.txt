\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:y> <nat:314> + <var:A> <nat:368> + <var:U> <nat:306> + <nat:16> <var:d> + <nat:328> <var:X> + <nat:438> <var:W> + <nat:449> + <nat:178> <var:q> + <nat:12> <var:N> $ is odd for any $ <var:A> $ , $ <var:q> $ , $ <var:N> $ , $ <var:U> $ , $ <var:W> $ , $ <var:y> $ , $ <var:d> $ , and $ <var:X> \in \mathbb{N} $ . \end{theorem} \begin{proof} The pair $ <var:X> \cdot <nat:328> $ is guaranteed to be even . Building on , notice the pairs $ <var:N> \cdot <nat:12> $ , $ <nat:306> \cdot <var:U> $ , $ <var:A> \cdot <nat:368> $ , $ <nat:178> \cdot <var:q> $ , $ <nat:314> \cdot <var:y> $ , and also $ <nat:438> \cdot <var:W> $ are trivially even numbers in $ \mathbb{N} $ from the knowledge the product of an even natural number with any number is guaranteed to be an even number . Recall that the pair $ <var:d> \cdot <nat:16> $ is even . This claim must be true by reason that taking the product of an even whole number and any element of $ \mathbb{Z}^+ $ will be by definition an even element of $ \mathbb{Z}^+ $ . The addition between an even whole number with an odd whole number is guaranteed to be odd . Observe $ <nat:449> $ is obviously an odd number in $ \mathbb{Z}^+ $ . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:A> <var:q> <var:N> <var:U> <var:W> <var:y> <var:d> <var:X> : nat , Nat . odd ( <nat:314> * <var:y> + <nat:368> * <var:A> + <nat:306> * <var:U> + <nat:16> * <var:d> + <nat:328> * <var:X> + <nat:438> * <var:W> + <nat:178> * <var:q> + <nat:12> * <var:N> + <nat:449> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:328> * <var:X> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:12> * <var:N> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:306> * <var:U> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:368> * <var:A> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:178> * <var:q> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:314> * <var:y> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:438> * <var:W> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:16> * <var:d> ) = true ) . { rewrite Nat . even_mul . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . assert ( <genH> : Nat . odd <nat:449> = true ) . { auto . } rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 