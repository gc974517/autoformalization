\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:B> \cdot <nat:244> + <var:o> \cdot <nat:252> + <var:G> \cdot <nat:154> + <nat:370> \cdot <var:A> + <nat:59> + <nat:346> \cdot <var:r> + <var:b> \cdot <nat:174> $ is guaranteed to be odd . \end{theorem} \begin{proof} Observe the adding between even numbers in $ \mathbb{N} $ collectively with an odd number in $ \mathbb{Z}^+ $ will be odd . We make use the knowledge that $ <var:r> \cdot <nat:346> + <var:o> \cdot <nat:252> + <nat:244> \cdot <var:B> + <nat:174> \cdot <var:b> + <var:G> \cdot <nat:154> + <var:A> \cdot <nat:370> $ is known as even , since the summation of even whole numbers together with an even whole number is even . The pair $ <var:B> \times <nat:244> $ is known to be even . This is proven from the knowledge the coefficient $ <nat:244> $ is known as in itself an even positive integer . The integer $ <nat:252> $ is known as even . Accordingly , $ <var:o> \times <nat:252> $ will be even as well . Additionally , remember the coefficient $ <nat:370> $ is guaranteed to be even . Hence , $ <var:A> \times <nat:370> $ is guaranteed to be even at the same time . Further , the natural number $ <nat:154> $ is guaranteed to be even . As a consequence , $ <var:G> \times <nat:154> $ is guaranteed to be even at the same time . Recall that the term $ <var:r> \times <nat:346> $ is trivially an even positive integer . This is true as a consequence that the positive integer $ <nat:346> $ is known to be obviously an even number in $ \mathbb{N} $ . Recall the number $ <nat:174> $ is known to be even . Then , the pair $ <nat:174> \times <var:b> $ is guaranteed to be even also . It can be justified that the result must be true . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:B> <var:o> <var:G> <var:A> <var:r> <var:b> : nat , Nat . odd ( <nat:244> * <var:B> + <nat:252> * <var:o> + <nat:154> * <var:G> + <nat:370> * <var:A> + <nat:346> * <var:r> + <nat:174> * <var:b> + <nat:59> ) = true . Proof . intros . rewrite Nat . odd_add . assert ( <genH> : Nat . even <nat:244> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:244> * <var:B> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:252> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:252> * <var:o> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:370> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:370> * <var:A> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:154> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:154> * <var:G> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:346> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:346> * <var:r> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:174> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:174> * <var:b> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:244> * <var:B> + <nat:252> * <var:o> + <nat:154> * <var:G> + <nat:370> * <var:A> + <nat:346> * <var:r> + <nat:174> * <var:b> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite <- Nat . negb_even . rewrite <genH> . auto . Qed . 