\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:H> \cdot <nat:328> + <nat:340> \cdot <var:l> + <var:S> \cdot <nat:334> + <nat:487> $ is odd . \end{theorem} \begin{proof} Remember the adding between an even element of $ \mathbb{Z}^+ $ and an odd number will be odd . This proposition holds from the knowledge $ <nat:340> \cdot <var:l> + <var:S> \cdot <nat:334> + <var:H> \cdot <nat:328> $ is known to be even . The numbers $ <nat:340> $ , $ <nat:334> $ , plus $ <nat:328> $ are even . As a consequence , the products $ <nat:340> * <var:l> $ , $ <nat:334> * <var:S> $ , and also $ <var:H> * <nat:328> $ is guaranteed to be even as well . $ <var:S> \times <nat:334> + <var:l> \times <nat:340> + <nat:328> \times <var:H> $ is by definition even by reason that the addition of an even positive integer with an even number must be even in addition to by reason that the product of an even number with any integer must be an even number . We demonstrate this main result is true . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:H> <var:l> <var:S> : nat , Nat . odd ( <nat:328> * <var:H> + <nat:340> * <var:l> + <nat:334> * <var:S> + <nat:487> ) = true . Proof . intros . rewrite Nat . odd_add . assert ( <genH> : Nat . even <nat:340> = true ) . { auto . } assert ( <genH> : Nat . even <nat:334> = true ) . { auto . } assert ( <genH> : Nat . even <nat:328> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:340> * <var:l> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:334> * <var:S> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:328> * <var:H> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:328> * <var:H> + <nat:340> * <var:l> + <nat:334> * <var:S> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite <- Nat . negb_even . rewrite <genH> . auto . Qed . 