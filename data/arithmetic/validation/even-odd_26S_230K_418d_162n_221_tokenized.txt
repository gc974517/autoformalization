\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:221> + <var:S> \cdot <nat:26> + <var:K> \cdot <nat:230> + <nat:418> \cdot <var:d> + <var:n> \cdot <nat:162> $ must be odd . \end{theorem} \begin{proof} Take note that $ <nat:221> $ is known to be odd . The adding of even positive integers concurrently and an odd natural will be an odd number . Additionally , the leading terms $ <nat:26> $ , $ <nat:230> $ , $ <nat:418> $ , additionally $ <nat:162> $ are known as even . Hence , the terms $ <var:S> \cdot <nat:26> $ , $ <nat:230> \cdot <var:K> $ , $ <var:d> \cdot <nat:418> $ , plus $ <var:n> \cdot <nat:162> $ must be even as well . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:S> <var:K> <var:d> <var:n> : nat , Nat . odd ( <nat:26> * <var:S> + <nat:230> * <var:K> + <nat:418> * <var:d> + <nat:162> * <var:n> + <nat:221> ) = true . Proof . intros . assert ( <genH> : Nat . odd <nat:221> = true ) . { auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . assert ( <genH> : Nat . even <nat:26> = true ) . { auto . } assert ( <genH> : Nat . even <nat:230> = true ) . { auto . } assert ( <genH> : Nat . even <nat:418> = true ) . { auto . } assert ( <genH> : Nat . even <nat:162> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:26> * <var:S> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:230> * <var:K> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:418> * <var:d> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:162> * <var:n> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 