\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:54> \times <var:i> + <nat:74> \times <var:r> + <var:Y> \times <nat:160> + <var:l> \times <nat:292> + <nat:465> + <var:q> \times <nat:216> + <var:y> \times <nat:460> + <var:s> \times <nat:338> + <var:Z> \times <nat:76> $ is guaranteed to be odd . \end{theorem} \begin{proof} The sum $ <var:Z> <nat:76> + <nat:54> <var:i> + <nat:465> + <var:s> <nat:338> + <nat:160> <var:Y> + <var:y> <nat:460> + <nat:74> <var:r> + <var:q> <nat:216> + <var:l> <nat:292> $ is guaranteed to be odd by reason that the expression $ <var:y> * <nat:460> + <var:Z> * <nat:76> + <var:i> * <nat:54> + <var:s> * <nat:338> + <var:Y> * <nat:160> + <nat:74> * <var:r> + <nat:216> * <var:q> + <nat:292> * <var:l> $ is even . See that the positive integers $ <nat:216> $ , $ <nat:460> $ , and likewise $ <nat:54> $ are known to be even integers Further , the positive integers $ <nat:74> $ , $ <nat:160> $ , and likewise $ <nat:76> $ are trivially even What's more , the leading term $ <nat:292> $ is obviously even The leading term $ <nat:338> $ is known to be an even number As a consequence that the product between an even whole number with an arbitrary whole number must be trivially an even positive integer the summation $ <var:Y> \cdot <nat:160> + <var:q> \cdot <nat:216> + <var:Z> \cdot <nat:76> + <nat:338> \cdot <var:s> + <var:l> \cdot <nat:292> + <nat:460> \cdot <var:y> + <nat:54> \cdot <var:i> + <var:r> \cdot <nat:74> $ must be even . The totaling between even naturals successively and an odd number in $ \mathbb{N} $ must be itself an odd positive integer . Notice $ <nat:465> $ is trivially an odd whole number . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:i> <var:r> <var:Y> <var:l> <var:q> <var:y> <var:s> <var:Z> : nat , Nat . odd ( <nat:54> * <var:i> + <nat:74> * <var:r> + <nat:160> * <var:Y> + <nat:292> * <var:l> + <nat:216> * <var:q> + <nat:460> * <var:y> + <nat:338> * <var:s> + <nat:76> * <var:Z> + <nat:465> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:216> = true ) . { auto . } assert ( <genH> : Nat . even <nat:460> = true ) . { auto . } assert ( <genH> : Nat . even <nat:54> = true ) . { auto . } assert ( <genH> : Nat . even <nat:74> = true ) . { auto . } assert ( <genH> : Nat . even <nat:160> = true ) . { auto . } assert ( <genH> : Nat . even <nat:76> = true ) . { auto . } assert ( <genH> : Nat . even <nat:292> = true ) . { auto . } assert ( <genH> : Nat . even <nat:338> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:54> * <var:i> + <nat:74> * <var:r> + <nat:160> * <var:Y> + <nat:292> * <var:l> + <nat:216> * <var:q> + <nat:460> * <var:y> + <nat:338> * <var:s> + <nat:76> * <var:Z> ) = true ) . { repeat rewrite Nat . even_add . repeat rewrite Nat . even_mul . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . assert ( <genH> : Nat . odd <nat:465> = true ) . { auto . } rewrite <- Nat . negb_even . rewrite <genH> . rewrite <genH> . auto . Qed . 