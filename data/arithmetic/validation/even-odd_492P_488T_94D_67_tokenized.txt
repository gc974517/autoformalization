\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:67> + <var:T> * <nat:488> + <nat:94> * <var:D> + <nat:492> * <var:P> $ is guaranteed to be odd . \end{theorem} \begin{proof} We know that the adding between even numbers in $ \mathbb{Z}^+ $ and an odd natural number is odd . The formula $ <nat:492> \cdot <var:P> + <nat:67> + <var:T> \cdot <nat:488> + <var:D> \cdot <nat:94> $ is guaranteed to be odd by reason that $ <nat:94> \times <var:D> + <nat:488> \times <var:T> + <nat:492> \times <var:P> $ is guaranteed to be even . Notice the summation of even elements of $ \mathbb{N} $ collectively with an even integer is guaranteed to be an even number . The integers $ <nat:94> $ , $ <nat:488> $ , plus $ <nat:492> $ are trivially even numbers in $ \mathbb{Z}^+ $ . Accordingly , the products $ <nat:94> * <var:D> $ , $ <nat:488> * <var:T> $ , as well as $ <var:P> * <nat:492> $ must be even too . and moreover as a consequence that the multiplication between even elements of $ \mathbb{N} $ with some whole number is even the summation $ <var:P> \cdot <nat:492> + <nat:94> \cdot <var:D> + <var:T> \cdot <nat:488> $ must be even . It can be verified that $ <var:P> \cdot <nat:492> + <nat:488> \cdot <var:T> + <nat:94> \cdot <var:D> + <nat:67> $ must be odd . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:T> <var:D> <var:P> : nat , Nat . odd ( <nat:488> * <var:T> + <nat:94> * <var:D> + <nat:492> * <var:P> + <nat:67> ) = true . Proof . intros . rewrite Nat . odd_add . assert ( <genH> : Nat . even <nat:94> = true ) . { auto . } assert ( <genH> : Nat . even <nat:488> = true ) . { auto . } assert ( <genH> : Nat . even <nat:492> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:94> * <var:D> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:488> * <var:T> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:492> * <var:P> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:488> * <var:T> + <nat:94> * <var:D> + <nat:492> * <var:P> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite <- Nat . negb_even . rewrite <genH> . auto . Qed . 