\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} The integer <nat:26611200> is the multiplication between $ <var:T> $ , $ <var:H> $ , $ <var:g> $ , $ <var:V> $ , $ <var:B> $ , $ <var:Y> $ , $ <var:D> $ , $ <var:d> $ , $ <var:I> \in \mathbb{N} $ so that $ <var:B> $ , $ <var:H> $ , $ <var:T> $ , $ <var:I> $ , $ <var:g> $ , $ <var:Y> $ , $ <var:d> $ , $ <var:D> $ , $ <var:V> $ greater than <nat:1> . \end{theorem} \begin{proof} Assume $ <var:D> = <nat:11> $ , $ <var:H> = <nat:4> $ , $ <var:B> = <nat:10> $ , $ <var:g> = <nat:7> $ , $ <var:T> = <nat:5> $ , $ <var:V> = <nat:9> $ , $ <var:d> = <nat:8> $ , $ <var:Y> = <nat:12> $ , $ <var:I> = <nat:2> $ . We prove the principle is true on account of Considering $ <nat:11> $ , $ <nat:5> $ , $ <nat:12> $ , $ <nat:4> $ , $ <nat:8> $ , $ <nat:9> $ , $ <nat:7> $ , $ <nat:10> $ , and $ <nat:2> > <nat:1> $ . \end{proof} \end{document} 
~
Require Import Lia . Theorem <genP:1> : exists <var:T> <var:H> <var:g> <var:V> <var:B> <var:Y> <var:D> <var:d> <var:I> : nat , ( <nat:26611200> = <var:T> * <var:H> * <var:g> * <var:V> * <var:B> * <var:Y> * <var:D> * <var:d> * <var:I> ) /\ ( <var:B> > <nat:1> ) /\ ( <var:H> > <nat:1> ) /\ ( <var:T> > <nat:1> ) /\ ( <var:I> > <nat:1> ) /\ ( <var:g> > <nat:1> ) /\ ( <var:Y> > <nat:1> ) /\ ( <var:d> > <nat:1> ) /\ ( <var:D> > <nat:1> ) /\ ( <var:V> > <nat:1> ) . Proof . exists <nat:5> . exists <nat:4> . exists <nat:7> . exists <nat:9> . exists <nat:10> . exists <nat:12> . exists <nat:11> . exists <nat:8> . exists <nat:2> . assert ( <genH> : <nat:11> > <nat:1> ) . { lia . } assert ( <genH> : <nat:5> > <nat:1> ) . { lia . } assert ( <genH> : <nat:12> > <nat:1> ) . { lia . } assert ( <genH> : <nat:4> > <nat:1> ) . { lia . } assert ( <genH> : <nat:8> > <nat:1> ) . { lia . } assert ( <genH> : <nat:9> > <nat:1> ) . { lia . } assert ( <genH> : <nat:7> > <nat:1> ) . { lia . } assert ( <genH> : <nat:10> > <nat:1> ) . { lia . } assert ( <genH> : <nat:2> > <nat:1> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 