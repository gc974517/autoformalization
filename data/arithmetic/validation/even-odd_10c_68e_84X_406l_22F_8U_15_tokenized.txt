\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:X> * <nat:84> + <nat:15> + <var:F> * <nat:22> + <nat:68> * <var:e> + <var:U> * <nat:8> + <var:l> * <nat:406> + <var:c> * <nat:10> $ is odd given any positive integers $ <var:X> $ , $ <var:e> $ , $ <var:U> $ , $ <var:F> $ , $ <var:c> $ , and $ <var:l> $ . \end{theorem} \begin{proof} The summing between even numbers successively and an odd number is guaranteed to be odd . We apply the assumption the knowledge the sum $ <nat:8> \times <var:U> + <var:e> \times <nat:68> + <nat:15> + <nat:84> \times <var:X> + <nat:406> \times <var:l> + <nat:10> \times <var:c> + <var:F> \times <nat:22> $ is known to be odd since the sum $ <var:c> \cdot <nat:10> + <nat:68> \cdot <var:e> + <var:X> \cdot <nat:84> + <var:l> \cdot <nat:406> + <var:F> \cdot <nat:22> + <nat:8> \cdot <var:U> $ is obviously even , as a consequence that the summing between even whole numbers with an even natural is an even number in $ \mathbb{Z}^+ $ . Notice that the pairs $ <nat:8> \cdot <var:U> $ , $ <nat:68> \cdot <var:e> $ , $ <nat:84> \cdot <var:X> $ , and $ <nat:406> \cdot <var:l> $ are even numbers by reason that taking the product of an even number and an arbitrary number is an even whole number . Adding on , we know the product $ <var:F> \cdot <nat:22> $ is even . Furthermore , we know that $ <nat:10> \cdot <var:c> $ is known as an even element of $ \mathbb{Z}^+ $ . plus because the multiplication between even naturals and a whole number is guaranteed to be an even element of $ \mathbb{N} $ the lemma is proven . We justify our lemma holds . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:X> <var:e> <var:U> <var:F> <var:c> <var:l> : nat , Nat . odd ( <nat:84> * <var:X> + <nat:22> * <var:F> + <nat:68> * <var:e> + <nat:8> * <var:U> + <nat:406> * <var:l> + <nat:10> * <var:c> + <nat:15> ) = true . Proof . intros . rewrite Nat . odd_add . assert ( <genH> : Nat . even ( <nat:8> * <var:U> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:68> * <var:e> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:84> * <var:X> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:406> * <var:l> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:22> * <var:F> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:10> * <var:c> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:84> * <var:X> + <nat:22> * <var:F> + <nat:68> * <var:e> + <nat:8> * <var:U> + <nat:406> * <var:l> + <nat:10> * <var:c> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite <- Nat . negb_even . rewrite <genH> . auto . Qed . 