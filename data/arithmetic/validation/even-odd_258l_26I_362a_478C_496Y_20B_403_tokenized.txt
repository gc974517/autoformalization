\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:C> * <nat:478> + <var:B> * <nat:20> + <nat:496> * <var:Y> + <nat:26> * <var:I> + <var:a> * <nat:362> + <nat:258> * <var:l> + <nat:403> $ must be odd for all variables $ <var:a> $ , $ <var:C> $ , $ <var:B> $ , $ <var:Y> $ , $ <var:I> $ , and $ <var:l> $ . \end{theorem} \begin{proof} We know the summing between even numbers in $ \mathbb{Z}^+ $ with an odd element of $ \mathbb{N} $ is guaranteed to be odd . The lemma must be true from the knowledge $ <nat:26> \cdot <var:I> + <var:l> \cdot <nat:258> + <nat:496> \cdot <var:Y> + <nat:478> \cdot <var:C> + <var:a> \cdot <nat:362> + <nat:20> \cdot <var:B> $ is trivially even . Notice that the products $ <var:a> * <nat:362> $ and moreover $ <nat:258> * <var:l> $ are clearly even whole numbers . Adding on , see that the terms $ <var:C> * <nat:478> $ , $ <nat:20> * <var:B> $ , and also $ <nat:26> * <var:I> $ are even naturals . This fact must be true by reason that the multiplication between an even element of $ \mathbb{N} $ and some integer is clearly an even number in $ \mathbb{Z}^+ $ . The term $ <var:Y> * <nat:496> $ is known to be even . We justify $ <nat:403> + <var:l> * <nat:258> + <var:I> * <nat:26> + <var:a> * <nat:362> + <var:C> * <nat:478> + <nat:496> * <var:Y> + <var:B> * <nat:20> $ must be odd . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:a> <var:C> <var:B> <var:Y> <var:I> <var:l> : nat , Nat . odd ( <nat:478> * <var:C> + <nat:20> * <var:B> + <nat:496> * <var:Y> + <nat:26> * <var:I> + <nat:362> * <var:a> + <nat:258> * <var:l> + <nat:403> ) = true . Proof . intros . rewrite Nat . odd_add . assert ( <genH> : Nat . even ( <nat:362> * <var:a> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:258> * <var:l> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:478> * <var:C> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:20> * <var:B> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:26> * <var:I> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:496> * <var:Y> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:478> * <var:C> + <nat:20> * <var:B> + <nat:496> * <var:Y> + <nat:26> * <var:I> + <nat:362> * <var:a> + <nat:258> * <var:l> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite <- Nat . negb_even . rewrite <genH> . auto . Qed . 