\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:y> <nat:330> + <var:o> <nat:328> + <nat:450> <var:k> + <nat:181> + <nat:288> <var:q> + <nat:310> <var:U> + <nat:226> <var:j> + <nat:34> <var:h> + <var:i> <nat:426> $ is guaranteed to be odd . \end{theorem} \begin{proof} Our result holds since $ <var:h> * <nat:34> + <var:j> * <nat:226> + <nat:330> * <var:y> + <var:k> * <nat:450> + <nat:288> * <var:q> + <var:U> * <nat:310> + <nat:426> * <var:i> + <var:o> * <nat:328> $ is guaranteed to be even . The pairs $ <var:q> \cdot <nat:288> $ , $ <nat:426> \cdot <var:i> $ , $ <var:o> \cdot <nat:328> $ , $ <var:y> \cdot <nat:330> $ , $ <var:h> \cdot <nat:34> $ , $ <nat:226> \cdot <var:j> $ , and moreover $ <nat:310> \cdot <var:U> $ are clearly even numbers in $ \mathbb{N} $ . What's more , we know the product $ <var:k> \cdot <nat:450> $ is obviously even from the fact the multiplication of an even natural with an arbitrary number in $ \mathbb{N} $ is an even natural . Our lemma is true by reason that the product between even naturals with some element of $ \mathbb{N} $ must be itself an even element of $ \mathbb{N} $ . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:y> <var:o> <var:k> <var:q> <var:U> <var:j> <var:h> <var:i> : nat , Nat . odd ( <nat:330> * <var:y> + <nat:328> * <var:o> + <nat:450> * <var:k> + <nat:288> * <var:q> + <nat:310> * <var:U> + <nat:226> * <var:j> + <nat:34> * <var:h> + <nat:426> * <var:i> + <nat:181> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:288> * <var:q> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:426> * <var:i> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:328> * <var:o> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:330> * <var:y> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:34> * <var:h> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:226> * <var:j> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:310> * <var:U> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:450> * <var:k> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:330> * <var:y> + <nat:328> * <var:o> + <nat:450> * <var:k> + <nat:288> * <var:q> + <nat:310> * <var:U> + <nat:226> * <var:j> + <nat:34> * <var:h> + <nat:426> * <var:i> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . auto . Qed . 