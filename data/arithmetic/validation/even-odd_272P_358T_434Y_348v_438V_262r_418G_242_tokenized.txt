\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:T> \cdot <nat:358> + <nat:242> + <nat:262> \cdot <var:r> + <nat:418> \cdot <var:G> + <nat:434> \cdot <var:Y> + <var:P> \cdot <nat:272> + <nat:438> \cdot <var:V> + <var:v> \cdot <nat:348> $ is guaranteed to be even . \end{theorem} \begin{proof} See that $ <nat:242> $ is known to be an even natural number . We justify $ <var:P> \cdot <nat:272> + <nat:358> \cdot <var:T> + <var:Y> \cdot <nat:434> + <var:v> \cdot <nat:348> + <var:V> \cdot <nat:438> + <nat:242> + <var:r> \cdot <nat:262> + <nat:418> \cdot <var:G> $ is even . The products $ <var:Y> \cdot <nat:434> $ , $ <var:T> \cdot <nat:358> $ , $ <var:r> \cdot <nat:262> $ , $ <var:G> \cdot <nat:418> $ , and $ <var:V> \cdot <nat:438> $ are known as even from the knowledge the multiplication between an even number and an arbitrary whole number is guaranteed to be even . The product $ <var:P> \cdot <nat:272> $ is obviously even by reason that the multiplication of an even positive integer with any whole number is guaranteed to be even . Furthermore , take note that the product $ <nat:348> \cdot <var:v> $ is guaranteed to be even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:T> <var:r> <var:G> <var:Y> <var:P> <var:V> <var:v> : nat , Nat . even ( <nat:358> * <var:T> + <nat:262> * <var:r> + <nat:418> * <var:G> + <nat:434> * <var:Y> + <nat:272> * <var:P> + <nat:438> * <var:V> + <nat:348> * <var:v> + <nat:242> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:242> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:434> * <var:Y> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:358> * <var:T> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:262> * <var:r> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:418> * <var:G> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:438> * <var:V> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:272> * <var:P> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:348> * <var:v> ) = true ) . { rewrite Nat . even_mul . auto . } repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 