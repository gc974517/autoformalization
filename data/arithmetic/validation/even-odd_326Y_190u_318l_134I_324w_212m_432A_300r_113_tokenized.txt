\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:113> + <nat:212> * <var:m> + <var:u> * <nat:190> + <var:r> * <nat:300> + <var:A> * <nat:432> + <nat:326> * <var:Y> + <var:I> * <nat:134> + <var:w> * <nat:324> + <nat:318> * <var:l> $ must be odd . \end{theorem} \begin{proof} We utilize the knowledge the sum $ <nat:326> * <var:Y> + <nat:190> * <var:u> + <nat:318> * <var:l> + <nat:134> * <var:I> + <nat:324> * <var:w> + <var:m> * <nat:212> + <var:A> * <nat:432> + <var:r> * <nat:300> $ is known as even . The pairs $ <nat:190> <var:u> $ , $ <var:l> <nat:318> $ , $ <var:I> <nat:134> $ , $ <nat:432> <var:A> $ , in addition to $ <var:w> <nat:324> $ are known to be even . In addition to this , the pairs $ <var:r> <nat:300> $ and moreover $ <var:Y> <nat:326> $ will be even . Furthermore , observe that the term $ <nat:212> <var:m> $ is trivially even . Observe that the summing between even numbers in $ \mathbb{Z}^+ $ concurrently and an odd natural number is guaranteed to be in itself an odd natural number . Notice that $ <nat:113> $ is known to be odd . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:m> <var:u> <var:r> <var:A> <var:Y> <var:I> <var:w> <var:l> : nat , Nat . odd ( <nat:212> * <var:m> + <nat:190> * <var:u> + <nat:300> * <var:r> + <nat:432> * <var:A> + <nat:326> * <var:Y> + <nat:134> * <var:I> + <nat:324> * <var:w> + <nat:318> * <var:l> + <nat:113> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:190> * <var:u> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:318> * <var:l> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:134> * <var:I> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:432> * <var:A> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:324> * <var:w> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:300> * <var:r> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:326> * <var:Y> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:212> * <var:m> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:212> * <var:m> + <nat:190> * <var:u> + <nat:300> * <var:r> + <nat:432> * <var:A> + <nat:326> * <var:Y> + <nat:134> * <var:I> + <nat:324> * <var:w> + <nat:318> * <var:l> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . assert ( <genH> : Nat . odd <nat:113> = true ) . { auto . } rewrite <- Nat . negb_even . rewrite <genH> . rewrite <genH> . auto . Qed . 