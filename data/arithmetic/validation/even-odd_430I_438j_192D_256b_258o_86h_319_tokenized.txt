\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:319> + <var:h> \times <nat:86> + <var:D> \times <nat:192> + <nat:256> \times <var:b> + <nat:438> \times <var:j> + <var:I> \times <nat:430> + <nat:258> \times <var:o> $ is odd . \end{theorem} \begin{proof} See the positive integers $ <nat:430> $ , $ <nat:258> $ , $ <nat:438> $ , as well as $ <nat:86> $ are known as even natural numbers . Accordingly , the pairs $ <var:I> * <nat:430> $ , $ <nat:258> * <var:o> $ , $ <var:j> * <nat:438> $ , and $ <nat:86> * <var:h> $ is even as well . Remember that the product $ <nat:192> * <var:D> $ is known as an even natural . This fact is true from the fact the coefficient $ <nat:192> $ is clearly even . The term $ <nat:256> * <var:b> $ is clearly an even positive integer as a consequence that the positive integer $ <nat:256> $ is obviously even . Take note $ <nat:319> $ is guaranteed to be an odd natural . It can be proven that the expression $ <var:I> \times <nat:430> + <nat:438> \times <var:j> + <nat:192> \times <var:D> + <nat:319> + <nat:256> \times <var:b> + <nat:258> \times <var:o> + <nat:86> \times <var:h> $ must be odd . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:h> <var:D> <var:b> <var:j> <var:I> <var:o> : nat , Nat . odd ( <nat:86> * <var:h> + <nat:192> * <var:D> + <nat:256> * <var:b> + <nat:438> * <var:j> + <nat:430> * <var:I> + <nat:258> * <var:o> + <nat:319> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:430> = true ) . { auto . } assert ( <genH> : Nat . even <nat:258> = true ) . { auto . } assert ( <genH> : Nat . even <nat:438> = true ) . { auto . } assert ( <genH> : Nat . even <nat:86> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:430> * <var:I> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:258> * <var:o> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:438> * <var:j> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:86> * <var:h> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:192> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:192> * <var:D> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:256> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:256> * <var:b> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . odd <nat:319> = true ) . { auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 