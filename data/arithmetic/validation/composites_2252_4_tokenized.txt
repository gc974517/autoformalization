\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} If we have $ <var:E> = <var:Q> \cdot <var:A> \cdot <var:S> \cdot <var:P> $ given $ <var:E> \in \mathbb{N} $ plus such that $ <var:P> $ , $ <var:S> $ , $ <var:Q> $ , and $ <var:A> \geq <nat:2> $ with some $ <var:P> $ , $ <var:Q> $ , $ <var:S> $ , $ <var:A> $ , then say that $ <var:E> $ is <def:four-composite> . For this reason the whole number <nat:700> is a <def:four-composite> whole number . \end{theorem} \begin{proof} Recall a <def:four-composite> whole number is the multiplication between whole numbers $ <var:S> $ , $ <var:P> $ , $ <var:Q> $ , $ <var:A> $ larger than or equal to <nat:2> . We justify <nat:700> is a <def:four-composite> positive integer in consideration of $ <var:A> * <var:S> * <var:Q> * <var:P> = <nat:700> $ hints $ <var:P> = <nat:2> $ , $ <var:A> = <nat:7> $ , $ <var:Q> = <nat:5> $ , and $ <var:S> = <nat:10> $ and considering $ <nat:7> $ , $ <nat:2> $ , $ <nat:5> $ , $ <nat:10> \geq <nat:2> $ . Because of this , <nat:700> is a <def:four-composite> integer is proven . Because of this , <nat:700> is the product between some integers $ <var:A> $ , $ <var:Q> $ , $ <var:S> $ , $ <var:P> $ and $ <var:A> $ , $ <var:Q> $ , $ <var:P> $ and $ <var:S> $ are greater than or equal to <nat:2> has been validated . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:four-composite> ( <var:E> : nat ) := exists <var:P> <var:Q> <var:S> <var:A> : nat , ( <var:E> = <var:Q> * <var:A> * <var:S> * <var:P> ) /\ ( <var:P> >= <nat:2> ) /\ ( <var:S> >= <nat:2> ) /\ ( <var:Q> >= <nat:2> ) /\ ( <var:A> >= <nat:2> ) . Theorem <genP:1> : <def:four-composite> <nat:700> . Proof . unfold <def:four-composite> . exists <nat:2> . exists <nat:5> . exists <nat:10> . exists <nat:7> . assert ( <genH> : <nat:7> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:2> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:5> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:10> >= <nat:2> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 