\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:T> \cdot <nat:488> + <nat:300> \cdot <var:E> + <nat:485> + <nat:308> \cdot <var:f> + <nat:24> \cdot <var:w> $ will be odd assuming all unknowns $ <var:w> $ , $ <var:f> $ , $ <var:T> $ , and $ <var:E> $ . \end{theorem} \begin{proof} $ <nat:24> \cdot <var:w> $ is clearly even . The terms $ <var:T> \cdot <nat:488> $ additionally $ <var:E> \cdot <nat:300> $ will be even . Likewise , recall that the pair $ <nat:308> \cdot <var:f> $ is guaranteed to be even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:w> <var:f> <var:T> <var:E> : nat , Nat . odd ( <nat:488> * <var:T> + <nat:300> * <var:E> + <nat:308> * <var:f> + <nat:24> * <var:w> + <nat:485> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:24> * <var:w> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:488> * <var:T> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:300> * <var:E> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:308> * <var:f> ) = true ) . { rewrite Nat . even_mul . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 