\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:410> \cdot <var:B> + <var:m> \cdot <nat:10> + <var:S> \cdot <nat:220> + <var:a> \cdot <nat:56> + <nat:280> \cdot <var:w> + <nat:359> + <var:r> \cdot <nat:136> + <nat:148> \cdot <var:X> $ is odd given every terms $ <var:a> $ , $ <var:S> $ , $ <var:m> $ , $ <var:B> $ , $ <var:r> $ , $ <var:w> $ , and $ <var:X> $ . \end{theorem} \begin{proof} The summation $ <nat:220> <var:S> + <var:a> <nat:56> + <nat:359> + <var:X> <nat:148> + <nat:410> <var:B> + <var:r> <nat:136> + <nat:280> <var:w> + <var:m> <nat:10> $ is known as odd as a consequence that the formula $ <var:a> \times <nat:56> + <nat:280> \times <var:w> + <var:r> \times <nat:136> + <var:X> \times <nat:148> + <var:B> \times <nat:410> + <nat:220> \times <var:S> + <var:m> \times <nat:10> $ is guaranteed to be even . The terms $ <var:X> <nat:148> $ , $ <var:S> <nat:220> $ , and moreover $ <nat:56> <var:a> $ are known as even elements of $ \mathbb{N} $ . What's more , the pairs $ <nat:280> <var:w> $ and moreover $ <nat:136> <var:r> $ are even whole numbers . On top of this , the product $ <nat:10> <var:m> $ is obviously even . On top of this , $ <var:B> <nat:410> $ is known to be an even natural . The expression $ <nat:136> \times <var:r> + <var:a> \times <nat:56> + <nat:148> \times <var:X> + <nat:410> \times <var:B> + <var:m> \times <nat:10> + <nat:220> \times <var:S> + <var:w> \times <nat:280> $ is guaranteed to be even since the addition of an even positive integer and even natural numbers is an even element of $ \mathbb{Z}^+ $ and likewise because multiplying between even integers and some whole number must be by itself an even number in $ \mathbb{Z}^+ $ . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:a> <var:S> <var:m> <var:B> <var:r> <var:w> <var:X> : nat , Nat . odd ( <nat:410> * <var:B> + <nat:10> * <var:m> + <nat:220> * <var:S> + <nat:56> * <var:a> + <nat:280> * <var:w> + <nat:136> * <var:r> + <nat:148> * <var:X> + <nat:359> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:148> * <var:X> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:220> * <var:S> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:56> * <var:a> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:280> * <var:w> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:136> * <var:r> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:10> * <var:m> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:410> * <var:B> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:410> * <var:B> + <nat:10> * <var:m> + <nat:220> * <var:S> + <nat:56> * <var:a> + <nat:280> * <var:w> + <nat:136> * <var:r> + <nat:148> * <var:X> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . auto . Qed . 