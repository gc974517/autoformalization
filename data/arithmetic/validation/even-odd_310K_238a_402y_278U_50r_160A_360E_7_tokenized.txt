\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} With every unknowns $ <var:A> $ , $ <var:r> $ , $ <var:K> $ , $ <var:U> $ , $ <var:y> $ , $ <var:a> $ , and $ <var:E> $ the summation $ <nat:402> \times <var:y> + <var:r> \times <nat:50> + <nat:360> \times <var:E> + <nat:7> + <var:A> \times <nat:160> + <var:a> \times <nat:238> + <var:K> \times <nat:310> + <nat:278> \times <var:U> $ will be odd . \end{theorem} \begin{proof} Remember that the number $ <nat:310> $ is obviously an even number . Consequently , the pair $ <nat:310> \cdot <var:K> $ is guaranteed to be even also . Further , the whole number $ <nat:238> $ is known to be even . Hence , $ <var:a> \cdot <nat:238> $ will be even additionally . On top of this , remember that the pair $ <nat:402> \cdot <var:y> $ is even from the fact the multiplication of an even element of $ \mathbb{Z}^+ $ with a whole number must be an even number in $ \mathbb{N} $ . This holds as a consequence that the number $ <nat:402> $ is known to be trivially an even number in $ \mathbb{N} $ . The natural number $ <nat:278> $ is known to be an even whole number . Consequently , the product $ <var:U> \cdot <nat:278> $ will be even as well . In addition , the positive integer $ <nat:50> $ is trivially even . For this reason , the term $ <var:r> \cdot <nat:50> $ must be even at the same time . Notice $ <nat:160> \cdot <var:A> $ is an even natural number . This fact holds as a consequence that the coefficient $ <nat:160> $ is obviously an even number in $ \mathbb{Z}^+ $ . The natural number $ <nat:360> $ is guaranteed to be an even natural number . Hence , the term $ <var:E> \cdot <nat:360> $ is even also . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:A> <var:r> <var:K> <var:U> <var:y> <var:a> <var:E> : nat , Nat . odd ( <nat:402> * <var:y> + <nat:50> * <var:r> + <nat:360> * <var:E> + <nat:160> * <var:A> + <nat:238> * <var:a> + <nat:310> * <var:K> + <nat:278> * <var:U> + <nat:7> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:310> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:310> * <var:K> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:238> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:238> * <var:a> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:402> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:402> * <var:y> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:278> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:278> * <var:U> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:50> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:50> * <var:r> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:160> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:160> * <var:A> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:360> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:360> * <var:E> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 