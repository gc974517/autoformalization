\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} With every natural numbers $ <var:S> $ , $ <var:J> $ , $ <var:R> $ , and $ <var:r> $ the summation $ <nat:6> \cdot <var:r> + <var:S> \cdot <nat:114> + <var:R> \cdot <nat:212> + <var:J> \cdot <nat:180> + <nat:493> $ must be odd . \end{theorem} \begin{proof} It can be justified that the summation $ <nat:114> * <var:S> + <var:r> * <nat:6> + <var:J> * <nat:180> + <var:R> * <nat:212> + <nat:493> $ will be odd by using the knowledge that the adding of an even positive integer with an odd number in $ \mathbb{Z}^+ $ is odd . We justify $ <var:S> * <nat:114> + <nat:212> * <var:R> + <var:J> * <nat:180> + <var:r> * <nat:6> $ is known to be even . Remember that the addition of even numbers in $ \mathbb{Z}^+ $ successively with an even number in $ \mathbb{N} $ must be even . The positive integer $ <nat:212> $ is known to be an even element of $ \mathbb{Z}^+ $ . In consequence , the product $ <nat:212> * <var:R> $ will be even also . Additionally , $ <var:J> * <nat:180> $ is an even element of $ \mathbb{Z}^+ $ from the knowledge the multiplication between an even natural with some number is guaranteed to be by its very nature an even whole number . This claim holds because the number $ <nat:180> $ is clearly even . Further , see that the positive integer $ <nat:114> $ is an even number in $ \mathbb{Z}^+ $ . Hence , the product $ <nat:114> * <var:S> $ is even in addition . In addition to this , the pair $ <var:r> * <nat:6> $ is obviously even as a consequence that taking the product between an even positive integer and some natural number will be an even natural and also the positive integer $ <nat:6> $ is obviously obviously an even natural . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:S> <var:J> <var:R> <var:r> : nat , Nat . odd ( <nat:6> * <var:r> + <nat:114> * <var:S> + <nat:212> * <var:R> + <nat:180> * <var:J> + <nat:493> ) = true . Proof . intros . rewrite Nat . odd_add . assert ( <genH> : Nat . even <nat:212> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:212> * <var:R> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:180> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:180> * <var:J> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:114> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:114> * <var:S> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:6> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:6> * <var:r> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:6> * <var:r> + <nat:114> * <var:S> + <nat:212> * <var:R> + <nat:180> * <var:J> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite <- Nat . negb_even . rewrite <genH> . auto . Qed . 