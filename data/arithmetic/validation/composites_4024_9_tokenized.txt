\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} We claim that $ <var:c> $ is a <def:nine-composite> integer only if using some $ <var:d> $ , $ <var:X> $ , $ <var:G> $ , $ <var:f> $ , $ <var:w> $ , $ <var:h> $ , $ <var:M> $ , $ <var:Y> $ , $ <var:e> $ we have $ <var:X> \times <var:G> \times <var:f> \times <var:M> \times <var:e> \times <var:d> \times <var:h> \times <var:w> \times <var:Y> = <var:c> $ with some integer $ <var:c> $ and so that $ <var:X> $ , $ <var:G> $ , $ <var:h> $ , $ <var:Y> $ , $ <var:M> $ , $ <var:w> $ , $ <var:d> $ , $ <var:e> $ , $ <var:f> \geq <nat:2> $ . For this reason $ <var:c> = <nat:7983360> $ is a <def:nine-composite> natural number . \end{theorem} \begin{proof} Remember <nat:7983360> is <def:nine-composite> if and only if it is the product between $ <var:M> $ , $ <var:e> $ , $ <var:Y> $ , $ <var:h> $ , $ <var:X> $ , $ <var:G> $ , $ <var:w> $ , $ <var:d> $ , $ <var:f> $ more than <nat:1> . Notice that $ <nat:4> $ , $ <nat:8> $ , $ <nat:3> $ , $ <nat:11> $ , $ <nat:5> $ , $ <nat:2> $ , $ <nat:9> $ , $ <nat:12> $ , $ <nat:7> $ are more than <nat:1> . Also observe that still $ <nat:7983360> = <nat:3> \cdot <nat:2> \cdot <nat:5> \cdot <nat:8> \cdot <nat:11> \cdot <nat:4> \cdot <nat:12> \cdot <nat:9> \cdot <nat:7> = <var:M> \cdot <var:G> \cdot <var:f> \cdot <var:Y> \cdot <var:d> \cdot <var:X> \cdot <var:w> \cdot <var:h> \cdot <var:e> $ . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:nine-composite> ( <var:c> : nat ) := exists <var:d> <var:X> <var:G> <var:f> <var:w> <var:h> <var:M> <var:Y> <var:e> : nat , ( <var:X> * <var:G> * <var:f> * <var:M> * <var:e> * <var:d> * <var:h> * <var:w> * <var:Y> = <var:c> ) /\ ( <var:X> >= <nat:2> ) /\ ( <var:G> >= <nat:2> ) /\ ( <var:h> >= <nat:2> ) /\ ( <var:Y> >= <nat:2> ) /\ ( <var:M> >= <nat:2> ) /\ ( <var:w> >= <nat:2> ) /\ ( <var:d> >= <nat:2> ) /\ ( <var:e> >= <nat:2> ) /\ ( <var:f> >= <nat:2> ) . Theorem <genP:1> : <def:nine-composite> <nat:7983360> . Proof . unfold <def:nine-composite> . assert ( <genH> : <nat:4> > <nat:1> ) . { lia . } assert ( <genH> : <nat:8> > <nat:1> ) . { lia . } assert ( <genH> : <nat:3> > <nat:1> ) . { lia . } assert ( <genH> : <nat:11> > <nat:1> ) . { lia . } assert ( <genH> : <nat:5> > <nat:1> ) . { lia . } assert ( <genH> : <nat:2> > <nat:1> ) . { lia . } assert ( <genH> : <nat:9> > <nat:1> ) . { lia . } assert ( <genH> : <nat:12> > <nat:1> ) . { lia . } assert ( <genH> : <nat:7> > <nat:1> ) . { lia . } exists <nat:11> . exists <nat:4> . exists <nat:2> . exists <nat:5> . exists <nat:12> . exists <nat:9> . exists <nat:3> . exists <nat:8> . exists <nat:7> . repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 