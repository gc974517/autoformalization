\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Assuming any variables $ <var:Z> $ , $ <var:N> $ , $ <var:u> $ , $ <var:W> $ , $ <var:T> $ , $ <var:h> $ , $ <var:C> $ , and $ <var:D> $ the sum $ <var:D> * <nat:74> + <nat:10> * <var:N> + <nat:130> * <var:C> + <nat:364> * <var:Z> + <nat:168> * <var:W> + <var:u> * <nat:288> + <nat:298> * <var:T> + <nat:437> + <var:h> * <nat:332> $ will be odd . \end{theorem} \begin{proof} We know the integers $ <nat:332> $ and moreover $ <nat:168> $ are even natural numbers We know the numbers $ <nat:364> $ and moreover $ <nat:74> $ are obviously even Notice the natural number $ <nat:130> $ is obviously even Further , the positive integers $ <nat:288> $ plus $ <nat:298> $ will be even Adding on , take note that the leading term $ <nat:10> $ is trivially an even number in $ \mathbb{N} $ It can be checked that this lemma is true according to the knowledge the adding between even numbers together and an odd element of $ \mathbb{N} $ is odd and likewise the product of an even number and an arbitrary positive integer is guaranteed to be even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:Z> <var:N> <var:u> <var:W> <var:T> <var:h> <var:C> <var:D> : nat , Nat . odd ( <nat:74> * <var:D> + <nat:10> * <var:N> + <nat:130> * <var:C> + <nat:364> * <var:Z> + <nat:168> * <var:W> + <nat:288> * <var:u> + <nat:298> * <var:T> + <nat:332> * <var:h> + <nat:437> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:332> = true ) . { auto . } assert ( <genH> : Nat . even <nat:168> = true ) . { auto . } assert ( <genH> : Nat . even <nat:364> = true ) . { auto . } assert ( <genH> : Nat . even <nat:74> = true ) . { auto . } assert ( <genH> : Nat . even <nat:130> = true ) . { auto . } assert ( <genH> : Nat . even <nat:288> = true ) . { auto . } assert ( <genH> : Nat . even <nat:298> = true ) . { auto . } assert ( <genH> : Nat . even <nat:10> = true ) . { auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . repeat rewrite Nat . even_mul . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 