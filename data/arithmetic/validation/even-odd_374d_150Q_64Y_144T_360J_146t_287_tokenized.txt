\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:T> \cdot <nat:144> + <nat:150> \cdot <var:Q> + <nat:374> \cdot <var:d> + <nat:360> \cdot <var:J> + <nat:64> \cdot <var:Y> + <var:t> \cdot <nat:146> + <nat:287> $ is guaranteed to be odd assuming all whole numbers $ <var:Q> $ , $ <var:Y> $ , $ <var:T> $ , $ <var:t> $ , $ <var:d> $ , and $ <var:J> $ . \end{theorem} \begin{proof} Observe that $ <nat:287> $ is trivially odd . It can be checked that our lemma holds . The claim must be true from the knowledge $ <var:d> * <nat:374> + <nat:150> * <var:Q> + <var:Y> * <nat:64> + <var:T> * <nat:144> + <nat:360> * <var:J> + <var:t> * <nat:146> $ is trivially even . The positive integers $ <nat:360> $ additionally $ <nat:374> $ are trivially even natural numbers Notice the leading terms $ <nat:150> $ , $ <nat:146> $ , and $ <nat:144> $ are known to be even positive integers Observe the number $ <nat:64> $ is obviously even \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:Q> <var:Y> <var:T> <var:t> <var:d> <var:J> : nat , Nat . odd ( <nat:144> * <var:T> + <nat:150> * <var:Q> + <nat:374> * <var:d> + <nat:360> * <var:J> + <nat:64> * <var:Y> + <nat:146> * <var:t> + <nat:287> ) = true . Proof . intros . assert ( <genH> : Nat . odd <nat:287> = true ) . { auto . } assert ( <genH> : Nat . even <nat:360> = true ) . { auto . } assert ( <genH> : Nat . even <nat:374> = true ) . { auto . } assert ( <genH> : Nat . even <nat:150> = true ) . { auto . } assert ( <genH> : Nat . even <nat:146> = true ) . { auto . } assert ( <genH> : Nat . even <nat:144> = true ) . { auto . } assert ( <genH> : Nat . even <nat:64> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:144> * <var:T> + <nat:150> * <var:Q> + <nat:374> * <var:d> + <nat:360> * <var:J> + <nat:64> * <var:Y> + <nat:146> * <var:t> ) = true ) . { repeat rewrite Nat . even_add . repeat rewrite Nat . even_mul . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . rewrite <genH> . auto . Qed . 