\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:376> * <var:l> + <nat:374> * <var:w> + <var:s> * <nat:392> + <nat:330> + <var:h> * <nat:32> + <nat:60> * <var:z> + <nat:190> * <var:o> + <nat:142> * <var:A> $ is even . \end{theorem} \begin{proof} We use the assumption the understanding the expression $ <nat:392> <var:s> + <nat:32> <var:h> + <nat:376> <var:l> + <nat:142> <var:A> + <var:z> <nat:60> + <nat:190> <var:o> + <var:w> <nat:374> $ is known to be even . The pair $ <nat:142> \cdot <var:A> $ is known as even from the fact multiplying of an even element of $ \mathbb{Z}^+ $ and some element of $ \mathbb{N} $ is guaranteed to be even and the coefficient $ <nat:142> $ is known as an even positive integer . We know the product $ <nat:60> \cdot <var:z> $ is guaranteed to be even . This claim is proven because the number $ <nat:60> $ is clearly even . The term $ <nat:32> \cdot <var:h> $ is known to be an even whole number . This must be true as a consequence that the coefficient $ <nat:32> $ is known as an even integer . $ <nat:190> \cdot <var:o> $ is clearly an even number in $ \mathbb{N} $ by reason that the natural number $ <nat:190> $ is trivially an even integer . Observe the number $ <nat:376> $ is obviously even . Thus , the product $ <nat:376> \cdot <var:l> $ is guaranteed to be even as well . We know the pair $ <nat:392> \cdot <var:s> $ is guaranteed to be even by reason that multiplying between an even number in $ \mathbb{Z}^+ $ and an arbitrary element of $ \mathbb{Z}^+ $ will be even as well as the number $ <nat:392> $ is obviously an even element of $ \mathbb{Z}^+ $ . Recall that the integer $ <nat:374> $ is known to be even . Then , the product $ <nat:374> \cdot <var:w> $ is even in addition . Because taking the product of even naturals and an arbitrary natural is even the theorem is proven . We show the formula $ <nat:190> \times <var:o> + <nat:330> + <nat:376> \times <var:l> + <nat:374> \times <var:w> + <var:h> \times <nat:32> + <nat:60> \times <var:z> + <nat:392> \times <var:s> + <var:A> \times <nat:142> $ is guaranteed to be even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:l> <var:w> <var:s> <var:h> <var:z> <var:o> <var:A> : nat , Nat . even ( <nat:376> * <var:l> + <nat:374> * <var:w> + <nat:392> * <var:s> + <nat:32> * <var:h> + <nat:60> * <var:z> + <nat:190> * <var:o> + <nat:142> * <var:A> + <nat:330> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:142> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:142> * <var:A> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:60> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:60> * <var:z> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:32> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:32> * <var:h> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:190> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:190> * <var:o> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:376> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:376> * <var:l> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:392> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:392> * <var:s> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:374> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:374> * <var:w> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:376> * <var:l> + <nat:374> * <var:w> + <nat:392> * <var:s> + <nat:32> * <var:h> + <nat:60> * <var:z> + <nat:190> * <var:o> + <nat:142> * <var:A> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . even_add . rewrite <genH> . auto . Qed . 