\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Using every positive terms $ <var:v> $ , $ <var:m> $ , $ <var:y> $ , $ <var:o> $ , $ <var:f> $ , and $ <var:O> $ $ <var:o> \cdot <nat:126> + <nat:232> \cdot <var:m> + <nat:184> \cdot <var:v> + <nat:358> + <var:f> \cdot <nat:478> + <var:y> \cdot <nat:90> + <var:O> \cdot <nat:84> $ must be even . \end{theorem} \begin{proof} It can be shown that the summation $ <var:O> \cdot <nat:84> + <nat:90> \cdot <var:y> + <var:f> \cdot <nat:478> + <var:o> \cdot <nat:126> + <nat:184> \cdot <var:v> + <nat:358> + <nat:232> \cdot <var:m> $ will be even . Remember the products $ <var:m> <nat:232> $ additionally $ <nat:90> <var:y> $ are even . The terms $ <nat:126> <var:o> $ , $ <var:v> <nat:184> $ , additionally $ <nat:84> <var:O> $ are even by reason that the product of an even element of $ \mathbb{Z}^+ $ with a positive integer is even . In addition , $ <var:f> <nat:478> $ is an even positive integer . This fact is true because multiplying between an even natural number with a element of $ \mathbb{Z}^+ $ must be an even natural . The summation between an even positive integer with an even whole number is guaranteed to be an even whole number . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:v> <var:m> <var:y> <var:o> <var:f> <var:O> : nat , Nat . even ( <nat:126> * <var:o> + <nat:232> * <var:m> + <nat:184> * <var:v> + <nat:478> * <var:f> + <nat:90> * <var:y> + <nat:84> * <var:O> + <nat:358> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:232> * <var:m> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:90> * <var:y> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:126> * <var:o> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:184> * <var:v> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:84> * <var:O> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:478> * <var:f> ) = true ) . { rewrite Nat . even_mul . auto . } repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 