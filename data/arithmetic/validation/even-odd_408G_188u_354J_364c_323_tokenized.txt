\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Taking some $ <var:J> $ , $ <var:c> $ , $ <var:u> $ , and $ <var:G> \in \mathbb{N} $ $ <var:u> <nat:188> + <nat:354> <var:J> + <var:c> <nat:364> + <var:G> <nat:408> + <nat:323> $ is guaranteed to be odd . \end{theorem} \begin{proof} Take note that the sum $ <var:J> <nat:354> + <nat:408> <var:G> + <var:u> <nat:188> + <var:c> <nat:364> $ is even . The pair $ <var:G> * <nat:408> $ is guaranteed to be an even number in $ \mathbb{Z}^+ $ from the knowledge the natural number $ <nat:408> $ is known to be clearly an even positive integer . Notice the positive integer $ <nat:364> $ is obviously an even number in $ \mathbb{Z}^+ $ . So , the term $ <nat:364> * <var:c> $ will be even too . Building on , the term $ <nat:354> * <var:J> $ is known as an even element of $ \mathbb{Z}^+ $ because the whole number $ <nat:354> $ is obviously even . Furthermore , notice that the positive integer $ <nat:188> $ is guaranteed to be even . So , $ <nat:188> * <var:u> $ will be even too . From the fact the multiplication between even whole numbers with an arbitrary positive integer must be even the formula $ <nat:408> \cdot <var:G> + <nat:188> \cdot <var:u> + <var:J> \cdot <nat:354> + <var:c> \cdot <nat:364> $ will be even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:J> <var:c> <var:u> <var:G> : nat , Nat . odd ( <nat:188> * <var:u> + <nat:354> * <var:J> + <nat:364> * <var:c> + <nat:408> * <var:G> + <nat:323> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:408> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:408> * <var:G> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:364> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:364> * <var:c> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:354> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:354> * <var:J> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:188> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:188> * <var:u> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:188> * <var:u> + <nat:354> * <var:J> + <nat:364> * <var:c> + <nat:408> * <var:G> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . auto . Qed . 