\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} With all variables $ <var:a> $ , $ <var:q> $ , $ <var:P> $ , $ <var:S> $ , $ <var:o> $ , and $ <var:m> $ the expression $ <nat:190> \times <var:P> + <nat:198> \times <var:m> + <nat:64> \times <var:S> + <nat:87> + <nat:340> \times <var:o> + <var:a> \times <nat:426> + <nat:26> \times <var:q> $ is odd . \end{theorem} \begin{proof} The summing of even elements of $ \mathbb{N} $ and an odd whole number is guaranteed to be an odd natural number . Observe $ <nat:87> $ is obviously an odd element of $ \mathbb{N} $ . We know the product $ <var:q> \cdot <nat:26> $ is clearly even . Observe the pair $ <nat:64> \cdot <var:S> $ is known as even . This claim is proven because the multiplication between an even natural and a natural will be an even element of $ \mathbb{N} $ . In addition , observe that the products $ <nat:340> \cdot <var:o> $ , $ <nat:198> \cdot <var:m> $ , and likewise $ <nat:190> \cdot <var:P> $ are obviously even . This claim is proven from the knowledge the product of an even whole number and a number is guaranteed to be even . Further , observe the term $ <var:a> \cdot <nat:426> $ is known to be even from the knowledge multiplying between an even integer with any integer is guaranteed to be instrinsically an even number in $ \mathbb{N} $ . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:a> <var:q> <var:P> <var:S> <var:o> <var:m> : nat , Nat . odd ( <nat:190> * <var:P> + <nat:198> * <var:m> + <nat:64> * <var:S> + <nat:340> * <var:o> + <nat:426> * <var:a> + <nat:26> * <var:q> + <nat:87> ) = true . Proof . intros . rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . assert ( <genH> : Nat . odd <nat:87> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:26> * <var:q> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:64> * <var:S> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:340> * <var:o> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:198> * <var:m> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:190> * <var:P> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:426> * <var:a> ) = true ) . { rewrite Nat . even_mul . auto . } rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 