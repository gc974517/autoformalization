\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:324> + <nat:210> <var:t> + <var:x> <nat:18> + <var:A> <nat:414> + <var:D> <nat:246> + <nat:292> <var:C> + <var:i> <nat:358> + <nat:346> <var:B> $ is guaranteed to be even . \end{theorem} \begin{proof} We justify the formula $ <nat:358> * <var:i> + <var:x> * <nat:18> + <var:t> * <nat:210> + <nat:414> * <var:A> + <nat:246> * <var:D> + <nat:346> * <var:B> + <nat:292> * <var:C> $ is clearly even . Building on , the products $ <var:i> <nat:358> $ , $ <var:x> <nat:18> $ , $ <nat:210> <var:t> $ , $ <var:A> <nat:414> $ , $ <nat:246> <var:D> $ , $ <nat:346> <var:B> $ , plus $ <var:C> <nat:292> $ are guaranteed to be even naturals since the product of an even number and some number in $ \mathbb{N} $ will be even , which is true by reason that the whole numbers $ <nat:358> $ , $ <nat:18> $ , $ <nat:210> $ , $ <nat:414> $ , $ <nat:246> $ , $ <nat:346> $ , and $ <nat:292> $ are known as by their very nature even numbers in $ \mathbb{N} $ . As a consequence that taking the product of even elements of $ \mathbb{N} $ with any natural is guaranteed to be in itself an even integer the lemma holds . The summing of even naturals concurrently is guaranteed to be even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:t> <var:x> <var:A> <var:D> <var:C> <var:i> <var:B> : nat , Nat . even ( <nat:210> * <var:t> + <nat:18> * <var:x> + <nat:414> * <var:A> + <nat:246> * <var:D> + <nat:292> * <var:C> + <nat:358> * <var:i> + <nat:346> * <var:B> + <nat:324> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:358> = true ) . { auto . } assert ( <genH> : Nat . even <nat:18> = true ) . { auto . } assert ( <genH> : Nat . even <nat:210> = true ) . { auto . } assert ( <genH> : Nat . even <nat:414> = true ) . { auto . } assert ( <genH> : Nat . even <nat:246> = true ) . { auto . } assert ( <genH> : Nat . even <nat:346> = true ) . { auto . } assert ( <genH> : Nat . even <nat:292> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:358> * <var:i> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:18> * <var:x> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:210> * <var:t> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:414> * <var:A> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:246> * <var:D> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:346> * <var:B> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:292> * <var:C> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:210> * <var:t> + <nat:18> * <var:x> + <nat:414> * <var:A> + <nat:246> * <var:D> + <nat:292> * <var:C> + <nat:358> * <var:i> + <nat:346> * <var:B> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . even_add . rewrite <genH> . auto . Qed . 