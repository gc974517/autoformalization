\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Using any positive terms $ <var:N> $ , $ <var:z> $ , $ <var:y> $ , and $ <var:i> $ the sum $ <var:z> * <nat:274> + <nat:43> + <nat:20> * <var:N> + <var:y> * <nat:272> + <nat:2> * <var:i> $ is guaranteed to be odd . \end{theorem} \begin{proof} Remember that the summation $ <nat:2> <var:i> + <nat:20> <var:N> + <var:y> <nat:272> + <var:z> <nat:274> $ is known to be even . The terms $ <var:z> <nat:274> $ as well as $ <nat:272> <var:y> $ will be even . The term $ <nat:20> <var:N> $ is known to be even since the multiplication between an even element of $ \mathbb{N} $ with a positive integer is even . Furthermore , we know the product $ <nat:2> <var:i> $ is known to be an even natural . Our theorem is proven as a consequence that the summing between even numbers in $ \mathbb{N} $ with even numbers is guaranteed to be even and likewise as a consequence that the multiplication between even numbers with an arbitrary natural is guaranteed to be even . Take note that $ <nat:43> $ is clearly an odd natural . It can be shown that $ <var:i> <nat:2> + <var:N> <nat:20> + <var:y> <nat:272> + <nat:274> <var:z> + <nat:43> $ must be odd . Remember that the adding between an even natural number with an odd natural number is guaranteed to be clearly an odd element of $ \mathbb{Z}^+ $ . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:N> <var:z> <var:y> <var:i> : nat , Nat . odd ( <nat:274> * <var:z> + <nat:20> * <var:N> + <nat:272> * <var:y> + <nat:2> * <var:i> + <nat:43> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:274> * <var:z> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:272> * <var:y> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:20> * <var:N> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:2> * <var:i> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:274> * <var:z> + <nat:20> * <var:N> + <nat:272> * <var:y> + <nat:2> * <var:i> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } assert ( <genH> : Nat . odd <nat:43> = true ) . { auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . rewrite <genH> . auto . Qed . 