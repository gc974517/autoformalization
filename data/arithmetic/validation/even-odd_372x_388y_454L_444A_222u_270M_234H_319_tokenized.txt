\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:x> * <nat:372> + <nat:388> * <var:y> + <var:L> * <nat:454> + <nat:444> * <var:A> + <nat:319> + <var:u> * <nat:222> + <var:M> * <nat:270> + <var:H> * <nat:234> $ must be odd . \end{theorem} \begin{proof} The pairs $ <nat:372> \cdot <var:x> $ in addition to $ <nat:444> \cdot <var:A> $ are trivially even . Building on , recall the pairs $ <var:M> \cdot <nat:270> $ , $ <nat:454> \cdot <var:L> $ , $ <var:u> \cdot <nat:222> $ , and moreover $ <nat:234> \cdot <var:H> $ are obviously even natural numbers . The product $ <nat:388> \cdot <var:y> $ is known as an even number in $ \mathbb{Z}^+ $ by reason that the product between an even number with any integer is guaranteed to be even . Recall $ <nat:319> $ is known to be an odd number . We know that the adding between an even natural with an odd whole number must be odd . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:x> <var:y> <var:L> <var:A> <var:u> <var:M> <var:H> : nat , Nat . odd ( <nat:372> * <var:x> + <nat:388> * <var:y> + <nat:454> * <var:L> + <nat:444> * <var:A> + <nat:222> * <var:u> + <nat:270> * <var:M> + <nat:234> * <var:H> + <nat:319> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:372> * <var:x> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:444> * <var:A> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:270> * <var:M> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:454> * <var:L> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:222> * <var:u> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:234> * <var:H> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:388> * <var:y> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . odd <nat:319> = true ) . { auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 