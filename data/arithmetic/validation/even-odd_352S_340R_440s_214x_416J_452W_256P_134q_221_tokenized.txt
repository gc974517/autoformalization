\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Using variables $ <var:s> $ , $ <var:J> $ , $ <var:P> $ , $ <var:W> $ , $ <var:R> $ , $ <var:S> $ , $ <var:x> $ , and $ <var:q> $ the summation $ <nat:440> * <var:s> + <var:x> * <nat:214> + <nat:416> * <var:J> + <var:q> * <nat:134> + <var:W> * <nat:452> + <nat:256> * <var:P> + <nat:221> + <var:R> * <nat:340> + <nat:352> * <var:S> $ is odd . \end{theorem} \begin{proof} We apply that the summation $ <var:S> <nat:352> + <var:R> <nat:340> + <var:s> <nat:440> + <nat:214> <var:x> + <var:J> <nat:416> + <var:W> <nat:452> + <nat:256> <var:P> + <var:q> <nat:134> $ is guaranteed to be even , because the addition of even numbers collectively and an even number in $ \mathbb{N} $ is guaranteed to be itself an even number . Recall the terms $ <var:q> <nat:134> $ , $ <nat:440> <var:s> $ , $ <nat:352> <var:S> $ , in addition to $ <var:J> <nat:416> $ are known as even . Adding on , the pairs $ <nat:340> <var:R> $ , $ <var:x> <nat:214> $ , in addition to $ <var:W> <nat:452> $ are clearly even numbers . Observe the product $ <nat:256> <var:P> $ is trivially even . This fact holds since the product of an even number in $ \mathbb{Z}^+ $ and some natural number must be an even number . and also because taking the product between an even natural number with any element of $ \mathbb{Z}^+ $ must be even . We know $ <nat:221> $ is clearly odd . The adding between even whole numbers with an odd whole number will be an odd number in $ \mathbb{N} $ . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:s> <var:J> <var:P> <var:W> <var:R> <var:S> <var:x> <var:q> : nat , Nat . odd ( <nat:440> * <var:s> + <nat:214> * <var:x> + <nat:416> * <var:J> + <nat:134> * <var:q> + <nat:452> * <var:W> + <nat:256> * <var:P> + <nat:340> * <var:R> + <nat:352> * <var:S> + <nat:221> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:134> * <var:q> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:440> * <var:s> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:352> * <var:S> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:416> * <var:J> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:340> * <var:R> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:214> * <var:x> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:452> * <var:W> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:256> * <var:P> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:440> * <var:s> + <nat:214> * <var:x> + <nat:416> * <var:J> + <nat:134> * <var:q> + <nat:452> * <var:W> + <nat:256> * <var:P> + <nat:340> * <var:R> + <nat:352> * <var:S> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } assert ( <genH> : Nat . odd <nat:221> = true ) . { auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . rewrite <genH> . auto . Qed . 