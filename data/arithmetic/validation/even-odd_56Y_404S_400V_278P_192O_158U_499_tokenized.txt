\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:56> \cdot <var:Y> + <var:S> \cdot <nat:404> + <nat:499> + <var:V> \cdot <nat:400> + <nat:278> \cdot <var:P> + <var:O> \cdot <nat:192> + <nat:158> \cdot <var:U> $ is guaranteed to be odd assuming natural numbers $ <var:V> $ , $ <var:U> $ , $ <var:S> $ , $ <var:Y> $ , $ <var:P> $ , and $ <var:O> $ . \end{theorem} \begin{proof} Recall the product $ <nat:278> \cdot <var:P> $ is trivially even . $ <var:S> \cdot <nat:404> $ is an even element of $ \mathbb{N} $ . Take note that the pairs $ <nat:56> \cdot <var:Y> $ , $ <var:V> \cdot <nat:400> $ , and $ <var:O> \cdot <nat:192> $ are known as even . This fact must be true because the product between an even number in $ \mathbb{Z}^+ $ with an arbitrary element of $ \mathbb{Z}^+ $ is an even integer . Building on , remember that the term $ <nat:158> \cdot <var:U> $ is known as even . Notice the summation of even elements of $ \mathbb{Z}^+ $ collectively and an odd whole number is guaranteed to be odd . See $ <nat:499> $ is odd . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:V> <var:U> <var:S> <var:Y> <var:P> <var:O> : nat , Nat . odd ( <nat:56> * <var:Y> + <nat:404> * <var:S> + <nat:400> * <var:V> + <nat:278> * <var:P> + <nat:192> * <var:O> + <nat:158> * <var:U> + <nat:499> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:278> * <var:P> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:404> * <var:S> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:56> * <var:Y> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:400> * <var:V> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:192> * <var:O> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:158> * <var:U> ) = true ) . { rewrite Nat . even_mul . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . assert ( <genH> : Nat . odd <nat:499> = true ) . { auto . } rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 