\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Given all whole numbers $ <var:y> $ , $ <var:z> $ , $ <var:T> $ , and $ <var:S> $ the summation $ <nat:446> + <nat:312> \cdot <var:T> + <var:S> \cdot <nat:304> + <nat:108> \cdot <var:y> + <var:z> \cdot <nat:180> $ will be even . \end{theorem} \begin{proof} Remember that the leading term $ <nat:180> $ is guaranteed to be an even integer . Accordingly , $ <var:z> <nat:180> $ is even also . Additionally , observe the pair $ <var:y> <nat:108> $ is known as an even whole number because multiplying between an even natural number and an arbitrary number in $ \mathbb{N} $ is guaranteed to be even . This is proven because the positive integer $ <nat:108> $ is guaranteed to be even . See that the coefficient $ <nat:312> $ is known as an even element of $ \mathbb{Z}^+ $ . In consequence , the product $ <var:T> <nat:312> $ is guaranteed to be even in addition . The positive integer $ <nat:304> $ is trivially an even element of $ \mathbb{Z}^+ $ . In consequence , $ <var:S> <nat:304> $ is even additionally . Observe $ <nat:446> $ is trivially an even whole number . It can be demonstrated that this claim must be true . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:y> <var:z> <var:T> <var:S> : nat , Nat . even ( <nat:312> * <var:T> + <nat:304> * <var:S> + <nat:108> * <var:y> + <nat:180> * <var:z> + <nat:446> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:180> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:180> * <var:z> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:108> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:108> * <var:y> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:312> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:312> * <var:T> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:304> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:304> * <var:S> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:446> = true ) . { auto . } repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 