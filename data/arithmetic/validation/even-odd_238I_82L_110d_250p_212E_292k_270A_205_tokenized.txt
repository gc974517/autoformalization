\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} With every whole numbers $ <var:E> $ , $ <var:p> $ , $ <var:d> $ , $ <var:I> $ , $ <var:k> $ , $ <var:L> $ , and $ <var:A> $ $ <var:p> \cdot <nat:250> + <nat:82> \cdot <var:L> + <nat:110> \cdot <var:d> + <nat:212> \cdot <var:E> + <nat:205> + <nat:238> \cdot <var:I> + <var:k> \cdot <nat:292> + <nat:270> \cdot <var:A> $ will be odd . \end{theorem} \begin{proof} Our result is proven because $ <nat:292> \times <var:k> + <nat:110> \times <var:d> + <var:I> \times <nat:238> + <nat:82> \times <var:L> + <nat:250> \times <var:p> + <nat:212> \times <var:E> + <nat:270> \times <var:A> $ is known as even . The integer $ <nat:238> $ is obviously an even number in $ \mathbb{N} $ . For this reason , the pair $ <nat:238> \times <var:I> $ is guaranteed to be even too . The whole number $ <nat:292> $ is known to be even . Hence , $ <var:k> \times <nat:292> $ is guaranteed to be even additionally . In addition , see $ <var:A> \times <nat:270> $ is known to be an even number because the product between an even element of $ \mathbb{N} $ with a natural must be an even element of $ \mathbb{Z}^+ $ , which holds from the knowledge the whole number $ <nat:270> $ is known to be even . Remember the integer $ <nat:82> $ is guaranteed to be an even positive integer . For this reason , the product $ <nat:82> \times <var:L> $ must be even too . In addition , $ <var:E> \times <nat:212> $ is guaranteed to be even as a consequence that the positive integer $ <nat:212> $ is guaranteed to be even . Further , observe the product $ <nat:110> \times <var:d> $ is clearly even . This holds from the fact taking the product of an even number with a element of $ \mathbb{N} $ must be even , and holds as a consequence that the integer $ <nat:110> $ is trivially an even integer . Adding on , the positive integer $ <nat:250> $ is obviously even . In consequence , the product $ <var:p> \times <nat:250> $ is guaranteed to be even too . The formula $ <var:I> * <nat:238> + <nat:82> * <var:L> + <nat:110> * <var:d> + <nat:250> * <var:p> + <nat:212> * <var:E> + <var:k> * <nat:292> + <var:A> * <nat:270> $ is guaranteed to be even from the fact the summing of even positive integers with even integers must be an even natural number . Take note the adding of an even whole number with an odd natural will be an odd natural . Remember $ <nat:205> $ is clearly an odd natural number . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:E> <var:p> <var:d> <var:I> <var:k> <var:L> <var:A> : nat , Nat . odd ( <nat:250> * <var:p> + <nat:82> * <var:L> + <nat:110> * <var:d> + <nat:212> * <var:E> + <nat:238> * <var:I> + <nat:292> * <var:k> + <nat:270> * <var:A> + <nat:205> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:238> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:238> * <var:I> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:292> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:292> * <var:k> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:270> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:270> * <var:A> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:82> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:82> * <var:L> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:212> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:212> * <var:E> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:110> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:110> * <var:d> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:250> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:250> * <var:p> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:250> * <var:p> + <nat:82> * <var:L> + <nat:110> * <var:d> + <nat:212> * <var:E> + <nat:238> * <var:I> + <nat:292> * <var:k> + <nat:270> * <var:A> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . assert ( <genH> : Nat . odd <nat:205> = true ) . { auto . } rewrite <- Nat . negb_even . rewrite <genH> . rewrite <genH> . auto . Qed . 