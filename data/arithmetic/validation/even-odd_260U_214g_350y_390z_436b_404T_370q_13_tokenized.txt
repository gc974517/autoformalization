\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} With all $ <var:y> $ , $ <var:q> $ , $ <var:z> $ , $ <var:g> $ , $ <var:T> $ , $ <var:U> $ , and $ <var:b> $ the expression $ <nat:214> \cdot <var:g> + <var:q> \cdot <nat:370> + <nat:350> \cdot <var:y> + <var:T> \cdot <nat:404> + <nat:436> \cdot <var:b> + <nat:390> \cdot <var:z> + <nat:13> + <var:U> \cdot <nat:260> $ must be odd . \end{theorem} \begin{proof} The products $ <nat:390> * <var:z> $ , $ <nat:350> * <var:y> $ , $ <nat:370> * <var:q> $ , as well as $ <var:g> * <nat:214> $ are known as even as a consequence that the natural numbers $ <nat:390> $ , $ <nat:350> $ , $ <nat:370> $ , in addition to $ <nat:214> $ are even . The numbers $ <nat:260> $ as well as $ <nat:436> $ are guaranteed to be even . Therefore , the terms $ <var:U> * <nat:260> $ and also $ <var:b> * <nat:436> $ is even at the same time . Building on , notice the whole number $ <nat:404> $ is known as an even element of $ \mathbb{Z}^+ $ . In consequence , the term $ <nat:404> * <var:T> $ is guaranteed to be even too . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:y> <var:q> <var:z> <var:g> <var:T> <var:U> <var:b> : nat , Nat . odd ( <nat:214> * <var:g> + <nat:370> * <var:q> + <nat:350> * <var:y> + <nat:404> * <var:T> + <nat:436> * <var:b> + <nat:390> * <var:z> + <nat:260> * <var:U> + <nat:13> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:390> = true ) . { auto . } assert ( <genH> : Nat . even <nat:350> = true ) . { auto . } assert ( <genH> : Nat . even <nat:370> = true ) . { auto . } assert ( <genH> : Nat . even <nat:214> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:390> * <var:z> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:350> * <var:y> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:370> * <var:q> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:214> * <var:g> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:260> = true ) . { auto . } assert ( <genH> : Nat . even <nat:436> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:260> * <var:U> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:436> * <var:b> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:404> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:404> * <var:T> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 