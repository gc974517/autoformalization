\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \newtheorem{definition}{Definition} \begin{document} \begin{definition} Allow $ <var:n> $ , $ <var:J> $ , $ <var:X> $ , $ <var:B> $ , $ <var:T> $ , $ <var:Y> $ , $ <var:g> \in \mathbb{N} $ . Take as given that $ <var:D> \in \mathbb{N} $ is defined as a <def:seven-composite> integer assuming $ <var:D> = <var:T> \cdot <var:n> \cdot <var:J> \cdot <var:X> \cdot <var:B> \cdot <var:g> \cdot <var:Y> $ plus unique terms are greater than or equivalent to <nat:2> . \end{definition} \begin{theorem} The natural number <nat:1478400> is <def:seven-composite> . \end{theorem} \begin{proof} Remember that a <def:seven-composite> integer is the product between whole numbers $ <var:B> $ , $ <var:n> $ , $ <var:X> $ , $ <var:J> $ , $ <var:g> $ , $ <var:Y> $ , and $ <var:T> $ such that $ <var:n> $ , $ <var:Y> $ , $ <var:J> $ , $ <var:g> $ , $ <var:B> $ , $ <var:T> $ and $ <var:X> \geq <nat:2> $ . We verify <nat:1478400> is a <def:seven-composite> positive integer . Notice that $ <nat:7> $ , $ <nat:12> $ , $ <nat:10> $ , $ <nat:4> $ , $ <nat:5> $ , $ <nat:8> $ and $ <nat:11> \geq <nat:2> $ . Furthermore note that still $ <nat:1478400> = <var:B> \cdot <var:T> \cdot <var:J> \cdot <var:X> \cdot <var:g> \cdot <var:Y> \cdot <var:n> $ yields $ <var:J> = <nat:4> $ , $ <var:n> = <nat:8> $ , $ <var:Y> = <nat:10> $ , $ <var:B> = <nat:7> $ , $ <var:T> = <nat:11> $ , $ <var:g> = <nat:12> $ and $ <var:X> = <nat:5> $ . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:seven-composite> ( <var:D> : nat ) := exists <var:n> <var:J> <var:X> <var:B> <var:T> <var:Y> <var:g> : nat , ( <var:D> = <var:T> * <var:n> * <var:J> * <var:X> * <var:B> * <var:g> * <var:Y> ) /\ ( <var:n> >= <nat:2> ) /\ ( <var:J> >= <nat:2> ) /\ ( <var:X> >= <nat:2> ) /\ ( <var:B> >= <nat:2> ) /\ ( <var:T> >= <nat:2> ) /\ ( <var:Y> >= <nat:2> ) /\ ( <var:g> >= <nat:2> ) . Theorem <genP:1> : <def:seven-composite> <nat:1478400> . Proof . unfold <def:seven-composite> . assert ( <genH> : <nat:7> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:12> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:10> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:4> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:5> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:8> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:11> >= <nat:2> ) . { lia . } exists <nat:8> . exists <nat:4> . exists <nat:5> . exists <nat:7> . exists <nat:11> . exists <nat:10> . exists <nat:12> . repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 