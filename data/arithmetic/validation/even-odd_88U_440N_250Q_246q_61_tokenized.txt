\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:Q> * <nat:250> + <nat:440> * <var:N> + <nat:61> + <nat:88> * <var:U> + <var:q> * <nat:246> $ is guaranteed to be odd . \end{theorem} \begin{proof} See $ <nat:61> $ is known as an odd whole number . The adding of an even number in $ \mathbb{Z}^+ $ and an odd number in $ \mathbb{Z}^+ $ will be an odd number . We make use the knowledge that $ <var:q> * <nat:246> + <var:Q> * <nat:250> + <nat:440> * <var:N> + <nat:61> + <var:U> * <nat:88> $ is guaranteed to be odd because $ <var:U> <nat:88> + <nat:440> <var:N> + <nat:250> <var:Q> + <nat:246> <var:q> $ is obviously even . See the whole numbers $ <nat:88> $ , $ <nat:440> $ , $ <nat:250> $ , as well as $ <nat:246> $ are guaranteed to be even . Therefore , the terms $ <var:U> * <nat:88> $ , $ <nat:440> * <var:N> $ , $ <nat:250> * <var:Q> $ , and also $ <var:q> * <nat:246> $ will be even also . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:Q> <var:N> <var:U> <var:q> : nat , Nat . odd ( <nat:250> * <var:Q> + <nat:440> * <var:N> + <nat:88> * <var:U> + <nat:246> * <var:q> + <nat:61> ) = true . Proof . intros . assert ( <genH> : Nat . odd <nat:61> = true ) . { auto . } rewrite Nat . odd_add . assert ( <genH> : Nat . even <nat:88> = true ) . { auto . } assert ( <genH> : Nat . even <nat:440> = true ) . { auto . } assert ( <genH> : Nat . even <nat:250> = true ) . { auto . } assert ( <genH> : Nat . even <nat:246> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:88> * <var:U> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:440> * <var:N> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:250> * <var:Q> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:246> * <var:q> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:250> * <var:Q> + <nat:440> * <var:N> + <nat:88> * <var:U> + <nat:246> * <var:q> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite <- Nat . negb_even . rewrite <genH> . rewrite <genH> . auto . Qed . 