\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Assuming all positive terms $ <var:E> $ , $ <var:q> $ , $ <var:f> $ , $ <var:i> $ , $ <var:G> $ , and $ <var:j> $ the sum $ <nat:314> * <var:q> + <var:G> * <nat:202> + <nat:210> * <var:E> + <nat:118> * <var:f> + <var:i> * <nat:310> + <nat:66> * <var:j> + <nat:219> $ is odd . \end{theorem} \begin{proof} The summation of an even number in $ \mathbb{N} $ with an odd natural number is an odd positive integer . We demonstrate the expression $ <nat:202> \times <var:G> + <var:E> \times <nat:210> + <var:i> \times <nat:310> + <nat:314> \times <var:q> + <var:j> \times <nat:66> + <var:f> \times <nat:118> $ is even , since the adding of an even integer and an even element of $ \mathbb{N} $ will be an even natural . The terms $ <nat:118> \cdot <var:f> $ , $ <var:j> \cdot <nat:66> $ , $ <var:G> \cdot <nat:202> $ , plus $ <nat:314> \cdot <var:q> $ are guaranteed to be even as a consequence that multiplying between an even natural number with a element of $ \mathbb{Z}^+ $ is an even integer , and is proven because the coefficients $ <nat:118> $ , $ <nat:66> $ , $ <nat:202> $ , as well as $ <nat:314> $ are trivially . The pair $ <var:E> \cdot <nat:210> $ is trivially an even number in $ \mathbb{Z}^+ $ because the leading term $ <nat:210> $ is guaranteed to be an even number . Furthermore , $ <nat:310> \cdot <var:i> $ is obviously an even number . This holds since the whole number $ <nat:310> $ is guaranteed to be an even integer . It can be proven that our proposition holds . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:E> <var:q> <var:f> <var:i> <var:G> <var:j> : nat , Nat . odd ( <nat:314> * <var:q> + <nat:202> * <var:G> + <nat:210> * <var:E> + <nat:118> * <var:f> + <nat:310> * <var:i> + <nat:66> * <var:j> + <nat:219> ) = true . Proof . intros . rewrite Nat . odd_add . assert ( <genH> : Nat . even <nat:118> = true ) . { auto . } assert ( <genH> : Nat . even <nat:66> = true ) . { auto . } assert ( <genH> : Nat . even <nat:202> = true ) . { auto . } assert ( <genH> : Nat . even <nat:314> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:118> * <var:f> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:66> * <var:j> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:202> * <var:G> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:314> * <var:q> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:210> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:210> * <var:E> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:310> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:310> * <var:i> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:314> * <var:q> + <nat:202> * <var:G> + <nat:210> * <var:E> + <nat:118> * <var:f> + <nat:310> * <var:i> + <nat:66> * <var:j> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite <- Nat . negb_even . rewrite <genH> . auto . Qed . 