\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Taking every $ <var:p> $ , $ <var:e> $ , $ <var:P> $ , $ <var:y> $ , $ <var:o> $ , $ <var:m> $ , $ <var:w> $ , and $ <var:g> \in \mathbb{Z}^+ $ the expression $ <var:g> \cdot <nat:392> + <var:p> \cdot <nat:198> + <var:w> \cdot <nat:476> + <var:P> \cdot <nat:440> + <nat:156> \cdot <var:m> + <nat:352> \cdot <var:o> + <nat:251> + <nat:32> \cdot <var:e> + <var:y> \cdot <nat:454> $ will be odd . \end{theorem} \begin{proof} Observe that the products $ <nat:352> <var:o> $ , $ <var:P> <nat:440> $ , $ <var:y> <nat:454> $ , $ <nat:156> <var:m> $ , $ <nat:476> <var:w> $ , $ <nat:392> <var:g> $ , and also $ <var:p> <nat:198> $ are even . Building on , the pair $ <nat:32> <var:e> $ is clearly an even integer from the fact taking the product of an even element of $ \mathbb{Z}^+ $ and any number is an even number in $ \mathbb{Z}^+ $ . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:p> <var:e> <var:P> <var:y> <var:o> <var:m> <var:w> <var:g> : nat , Nat . odd ( <nat:392> * <var:g> + <nat:198> * <var:p> + <nat:476> * <var:w> + <nat:440> * <var:P> + <nat:156> * <var:m> + <nat:352> * <var:o> + <nat:32> * <var:e> + <nat:454> * <var:y> + <nat:251> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:352> * <var:o> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:440> * <var:P> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:454> * <var:y> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:156> * <var:m> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:476> * <var:w> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:392> * <var:g> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:198> * <var:p> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:32> * <var:e> ) = true ) . { rewrite Nat . even_mul . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 