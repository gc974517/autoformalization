\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Taking any integers $ <var:H> $ , $ <var:z> $ , $ <var:y> $ , $ <var:T> $ , $ <var:c> $ , and $ <var:D> $ the summation $ <var:y> \times <nat:308> + <var:z> \times <nat:152> + <var:T> \times <nat:248> + <nat:82> \times <var:c> + <var:H> \times <nat:6> + <nat:100> + <var:D> \times <nat:4> $ is even . \end{theorem} \begin{proof} We know that $ <var:H> \times <nat:6> + <var:D> \times <nat:4> + <var:T> \times <nat:248> + <nat:308> \times <var:y> + <var:c> \times <nat:82> + <var:z> \times <nat:152> $ is even , since the adding between an even integer with an even whole number must be even . We know that the products $ <nat:6> \times <var:H> $ , $ <nat:4> \times <var:D> $ , $ <nat:248> \times <var:T> $ , $ <nat:308> \times <var:y> $ , $ <nat:82> \times <var:c> $ , and also $ <var:z> \times <nat:152> $ are guaranteed to be even integers . This claim is true from the fact the leading terms $ <nat:6> $ , $ <nat:4> $ , $ <nat:248> $ , $ <nat:308> $ , $ <nat:82> $ , plus $ <nat:152> $ are known as even positive integers . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:H> <var:z> <var:y> <var:T> <var:c> <var:D> : nat , Nat . even ( <nat:308> * <var:y> + <nat:152> * <var:z> + <nat:248> * <var:T> + <nat:82> * <var:c> + <nat:6> * <var:H> + <nat:4> * <var:D> + <nat:100> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:6> = true ) . { auto . } assert ( <genH> : Nat . even <nat:4> = true ) . { auto . } assert ( <genH> : Nat . even <nat:248> = true ) . { auto . } assert ( <genH> : Nat . even <nat:308> = true ) . { auto . } assert ( <genH> : Nat . even <nat:82> = true ) . { auto . } assert ( <genH> : Nat . even <nat:152> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:6> * <var:H> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:4> * <var:D> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:248> * <var:T> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:308> * <var:y> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:82> * <var:c> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:152> * <var:z> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:308> * <var:y> + <nat:152> * <var:z> + <nat:248> * <var:T> + <nat:82> * <var:c> + <nat:6> * <var:H> + <nat:4> * <var:D> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . even_add . rewrite <genH> . auto . Qed . 