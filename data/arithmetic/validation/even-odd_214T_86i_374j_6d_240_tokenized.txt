\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:86> \cdot <var:i> + <nat:240> + <var:j> \cdot <nat:374> + <nat:6> \cdot <var:d> + <var:T> \cdot <nat:214> $ will be even . \end{theorem} \begin{proof} The coefficient $ <nat:214> $ is known as even . Consequently , the pair $ <var:T> <nat:214> $ is guaranteed to be even in addition . The positive integer $ <nat:86> $ is even . Thus , the pair $ <nat:86> <var:i> $ must be even at the same time . Likewise , the term $ <var:j> <nat:374> $ is trivially even . This claim holds since taking the product of an even natural and some whole number must be an even number and also the whole number $ <nat:374> $ is known to be fundamentally an even positive integer . Remember that the term $ <nat:6> <var:d> $ is trivially an even number in $ \mathbb{Z}^+ $ . This holds from the knowledge the multiplication between an even natural with some number must be even , which is proven since the leading term $ <nat:6> $ is trivially itself an even element of $ \mathbb{N} $ . Recall $ <nat:240> $ is trivially even . Notice the addition of an even number in $ \mathbb{Z}^+ $ with an even positive integer will be even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:i> <var:j> <var:d> <var:T> : nat , Nat . even ( <nat:86> * <var:i> + <nat:374> * <var:j> + <nat:6> * <var:d> + <nat:214> * <var:T> + <nat:240> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:214> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:214> * <var:T> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:86> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:86> * <var:i> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:374> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:374> * <var:j> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:6> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:6> * <var:d> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:240> = true ) . { auto . } repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 