\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:198> * <var:h> + <var:g> * <nat:352> + <var:o> * <nat:208> + <var:T> * <nat:370> + <nat:386> $ must be even . \end{theorem} \begin{proof} See that $ <nat:386> $ is guaranteed to be even . Notice the summation between an even integer with an even number must be even . It can be justified that $ <var:g> <nat:352> + <nat:370> <var:T> + <nat:198> <var:h> + <nat:208> <var:o> + <nat:386> $ is trivially even from the fact the summation $ <var:g> <nat:352> + <var:T> <nat:370> + <nat:208> <var:o> + <nat:198> <var:h> $ is trivially even . Adding on , the products $ <var:g> \times <nat:352> $ , $ <nat:370> \times <var:T> $ , $ <var:o> \times <nat:208> $ , and also $ <var:h> \times <nat:198> $ are guaranteed to be even positive integers from the fact the multiplication between an even natural number with an arbitrary whole number is even . This claim is true because the whole numbers $ <nat:352> $ , $ <nat:370> $ , $ <nat:208> $ , in addition to $ <nat:198> $ are trivially even elements of $ \mathbb{Z}^+ $ . Because taking the product of an even natural number and a number in $ \mathbb{Z}^+ $ is guaranteed to be even the claim must be true . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:h> <var:g> <var:o> <var:T> : nat , Nat . even ( <nat:198> * <var:h> + <nat:352> * <var:g> + <nat:208> * <var:o> + <nat:370> * <var:T> + <nat:386> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:386> = true ) . { auto . } rewrite Nat . even_add . assert ( <genH> : Nat . even <nat:352> = true ) . { auto . } assert ( <genH> : Nat . even <nat:370> = true ) . { auto . } assert ( <genH> : Nat . even <nat:208> = true ) . { auto . } assert ( <genH> : Nat . even <nat:198> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:352> * <var:g> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:370> * <var:T> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:208> * <var:o> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:198> * <var:h> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:198> * <var:h> + <nat:352> * <var:g> + <nat:208> * <var:o> + <nat:370> * <var:T> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite <genH> . rewrite <genH> . auto . Qed . 