\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Given every $ <var:j> $ , $ <var:w> $ , $ <var:o> $ , and $ <var:S> \in \mathbb{Z}^+ $ the formula $ <nat:26> * <var:S> + <nat:2> * <var:w> + <var:o> * <nat:34> + <nat:18> * <var:j> + <nat:378> $ must be even . \end{theorem} \begin{proof} See that the summation $ <var:w> <nat:2> + <nat:34> <var:o> + <nat:18> <var:j> + <nat:26> <var:S> $ is known to be even . The pair $ <var:w> <nat:2> $ is known as an even natural . This fact holds since multiplying between an even element of $ \mathbb{Z}^+ $ with an arbitrary number is in itself an even element of $ \mathbb{N} $ . This must be true from the knowledge the whole number $ <nat:2> $ is guaranteed to be even . Additionally , take note that the products $ <nat:18> <var:j> $ and also $ <var:S> <nat:26> $ must be even integers . This fact is true since the coefficients $ <nat:18> $ and also $ <nat:26> $ are known to be even numbers . Notice the whole number $ <nat:34> $ is known as even . Hence , $ <nat:34> <var:o> $ must be even in addition . We verify the result holds . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:j> <var:w> <var:o> <var:S> : nat , Nat . even ( <nat:26> * <var:S> + <nat:2> * <var:w> + <nat:34> * <var:o> + <nat:18> * <var:j> + <nat:378> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:2> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:2> * <var:w> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:18> = true ) . { auto . } assert ( <genH> : Nat . even <nat:26> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:18> * <var:j> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:26> * <var:S> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:34> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:34> * <var:o> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:26> * <var:S> + <nat:2> * <var:w> + <nat:34> * <var:o> + <nat:18> * <var:j> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . even_add . rewrite <genH> . auto . Qed . 