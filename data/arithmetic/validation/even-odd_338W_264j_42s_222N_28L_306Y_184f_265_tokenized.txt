\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:264> \times <var:j> + <nat:265> + <nat:28> \times <var:L> + <nat:338> \times <var:W> + <var:s> \times <nat:42> + <nat:222> \times <var:N> + <var:Y> \times <nat:306> + <nat:184> \times <var:f> $ will be odd . \end{theorem} \begin{proof} We verify the summation $ <var:W> <nat:338> + <nat:264> <var:j> + <var:s> <nat:42> + <nat:222> <var:N> + <nat:28> <var:L> + <nat:306> <var:Y> + <var:f> <nat:184> $ is even . Recall the products $ <var:s> \times <nat:42> $ , $ <var:L> \times <nat:28> $ , and $ <nat:264> \times <var:j> $ are guaranteed to be even . Adding on , the products $ <nat:306> \times <var:Y> $ and also $ <var:N> \times <nat:222> $ are obviously even by reason that the product of an even natural number and some integer will be by definition an even natural number . Remember the term $ <nat:184> \times <var:f> $ is clearly an even integer . Observe that $ <var:W> \times <nat:338> $ is known as even . This is proven from the fact the product between an even number in $ \mathbb{Z}^+ $ and a element of $ \mathbb{N} $ must be even . Because the summing of an even natural number with even whole numbers will be an even natural , as well as by reason that the product between even numbers in $ \mathbb{Z}^+ $ and a number in $ \mathbb{N} $ is guaranteed to be by itself an even number in $ \mathbb{N} $ . Take note $ <nat:265> $ is clearly odd . Notice that the totaling of even naturals concurrently with an odd integer will be odd . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:j> <var:L> <var:W> <var:s> <var:N> <var:Y> <var:f> : nat , Nat . odd ( <nat:264> * <var:j> + <nat:28> * <var:L> + <nat:338> * <var:W> + <nat:42> * <var:s> + <nat:222> * <var:N> + <nat:306> * <var:Y> + <nat:184> * <var:f> + <nat:265> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:42> * <var:s> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:28> * <var:L> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:264> * <var:j> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:306> * <var:Y> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:222> * <var:N> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:184> * <var:f> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:338> * <var:W> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:264> * <var:j> + <nat:28> * <var:L> + <nat:338> * <var:W> + <nat:42> * <var:s> + <nat:222> * <var:N> + <nat:306> * <var:Y> + <nat:184> * <var:f> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } assert ( <genH> : Nat . odd <nat:265> = true ) . { auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . rewrite <genH> . auto . Qed . 