\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:S> <nat:22> + <var:U> <nat:132> + <nat:473> + <nat:360> <var:i> + <var:M> <nat:250> + <var:o> <nat:100> + <nat:146> <var:h> $ must be odd taking every natural terms $ <var:U> $ , $ <var:o> $ , $ <var:M> $ , $ <var:h> $ , $ <var:S> $ , and $ <var:i> $ . \end{theorem} \begin{proof} We verify that the expression $ <var:M> \times <nat:250> + <var:o> \times <nat:100> + <var:U> \times <nat:132> + <var:S> \times <nat:22> + <nat:360> \times <var:i> + <nat:146> \times <var:h> $ is known as even . The terms $ <var:o> \cdot <nat:100> $ , $ <nat:360> \cdot <var:i> $ , $ <var:S> \cdot <nat:22> $ , $ <var:M> \cdot <nat:250> $ , in addition to $ <var:U> \cdot <nat:132> $ will be even integers . Likewise , remember that the pair $ <nat:146> \cdot <var:h> $ is known as even . The sum $ <nat:360> * <var:i> + <nat:132> * <var:U> + <nat:146> * <var:h> + <var:o> * <nat:100> + <nat:22> * <var:S> + <nat:250> * <var:M> $ must be even because the multiplication between an even element of $ \mathbb{N} $ and an arbitrary number will be even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:U> <var:o> <var:M> <var:h> <var:S> <var:i> : nat , Nat . odd ( <nat:22> * <var:S> + <nat:132> * <var:U> + <nat:360> * <var:i> + <nat:250> * <var:M> + <nat:100> * <var:o> + <nat:146> * <var:h> + <nat:473> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:100> * <var:o> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:360> * <var:i> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:22> * <var:S> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:250> * <var:M> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:132> * <var:U> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:146> * <var:h> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:22> * <var:S> + <nat:132> * <var:U> + <nat:360> * <var:i> + <nat:250> * <var:M> + <nat:100> * <var:o> + <nat:146> * <var:h> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . auto . Qed . 