\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:64> <var:s> + <nat:170> + <var:g> <nat:310> + <nat:204> <var:K> + <nat:110> <var:E> $ is even assuming all $ <var:g> $ , $ <var:E> $ , $ <var:s> $ , and $ <var:K> \in \mathbb{N} $ . \end{theorem} \begin{proof} It can be demonstrated that the result must be true . It can be proven that $ <nat:310> \times <var:g> + <nat:110> \times <var:E> + <var:s> \times <nat:64> + <nat:204> \times <var:K> + <nat:170> $ is known as even since the formula $ <var:E> \times <nat:110> + <nat:204> \times <var:K> + <var:s> \times <nat:64> + <nat:310> \times <var:g> $ is known as even . Recall the summation of even numbers in $ \mathbb{Z}^+ $ concurrently is even . The leading terms $ <nat:310> $ and moreover $ <nat:110> $ are obviously even . So , the products $ <var:g> <nat:310> $ plus $ <nat:110> <var:E> $ must be even also . Likewise , $ <nat:64> <var:s> $ is obviously an even positive integer . This holds since the coefficient $ <nat:64> $ is known to be even . In addition , the natural number $ <nat:204> $ is even . As a consequence , the product $ <var:K> <nat:204> $ will be even too . plus from the knowledge the product between an even number with an arbitrary whole number is guaranteed to be even . The addition of even naturals will be an even number in $ \mathbb{N} $ . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:g> <var:E> <var:s> <var:K> : nat , Nat . even ( <nat:64> * <var:s> + <nat:310> * <var:g> + <nat:204> * <var:K> + <nat:110> * <var:E> + <nat:170> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:310> = true ) . { auto . } assert ( <genH> : Nat . even <nat:110> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:310> * <var:g> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:110> * <var:E> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:64> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:64> * <var:s> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:204> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:204> * <var:K> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:64> * <var:s> + <nat:310> * <var:g> + <nat:204> * <var:K> + <nat:110> * <var:E> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . even_add . rewrite <genH> . auto . Qed . 