\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Taking whole numbers $ <var:V> $ , $ <var:r> $ , $ <var:N> $ , $ <var:I> $ , $ <var:S> $ , and $ <var:a> $ $ <var:I> * <nat:256> + <nat:326> * <var:r> + <nat:97> + <nat:180> * <var:S> + <var:a> * <nat:82> + <var:V> * <nat:354> + <nat:226> * <var:N> $ is guaranteed to be odd . \end{theorem} \begin{proof} By reason that the summation between an even number in $ \mathbb{N} $ with an odd number in $ \mathbb{N} $ is guaranteed to be an odd positive integer , our claim is true . Further , observe the products $ <nat:256> \cdot <var:I> $ , $ <nat:326> \cdot <var:r> $ , $ <nat:180> \cdot <var:S> $ , $ <nat:82> \cdot <var:a> $ , $ <var:V> \cdot <nat:354> $ , additionally $ <var:N> \cdot <nat:226> $ are trivially even integers . This claim holds because the leading terms $ <nat:256> $ , $ <nat:326> $ , $ <nat:180> $ , $ <nat:82> $ , $ <nat:354> $ , and also $ <nat:226> $ are in themselves even integers . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:V> <var:r> <var:N> <var:I> <var:S> <var:a> : nat , Nat . odd ( <nat:256> * <var:I> + <nat:326> * <var:r> + <nat:180> * <var:S> + <nat:82> * <var:a> + <nat:354> * <var:V> + <nat:226> * <var:N> + <nat:97> ) = true . Proof . intros . rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . assert ( <genH> : Nat . even <nat:256> = true ) . { auto . } assert ( <genH> : Nat . even <nat:326> = true ) . { auto . } assert ( <genH> : Nat . even <nat:180> = true ) . { auto . } assert ( <genH> : Nat . even <nat:82> = true ) . { auto . } assert ( <genH> : Nat . even <nat:354> = true ) . { auto . } assert ( <genH> : Nat . even <nat:226> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:256> * <var:I> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:326> * <var:r> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:180> * <var:S> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:82> * <var:a> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:354> * <var:V> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:226> * <var:N> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 