\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \newtheorem{definition}{Definition} \begin{document} \begin{definition} Say that $ <var:w> $ is <def:five-composite> granted that there are some numbers $ <var:f> $ , $ <var:z> $ , $ <var:x> $ , $ <var:e> $ , $ <var:C> $ where $ <var:w> = <var:x> * <var:z> * <var:f> * <var:e> * <var:C> $ given $ <var:w> \in \mathbb{Z}^+ $ plus where $ <var:x> $ , $ <var:f> $ , $ <var:z> $ , $ <var:e> $ , $ <var:C> \geq <nat:2> $ . \end{definition} \begin{theorem} $ <nat:1152> = <var:w> $ is a <def:five-composite> natural number . \end{theorem} \begin{proof} Remember a <def:five-composite> is the multiplication of natural numbers $ <var:e> $ , $ <var:x> $ , $ <var:f> $ , $ <var:C> $ , $ <var:z> $ greater than <nat:1> . Allow $ <var:e> = <nat:8> $ , $ <var:x> = <nat:3> $ , $ <var:z> = <nat:2> $ , $ <var:f> = <nat:4> $ , and $ <var:C> = <nat:6> $ . We prove <nat:1152> is a <def:five-composite> integer . Note $ <nat:2> \cdot <nat:4> \cdot <nat:3> \cdot <nat:8> \cdot <nat:6> = <nat:1152> = <var:z> \cdot <var:f> \cdot <var:x> \cdot <var:e> \cdot <var:C> $ . Furthermore note $ <nat:3> $ , $ <nat:8> $ , $ <nat:6> $ , $ <nat:2> $ , $ <nat:4> $ are larger than <nat:1> . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:five-composite> ( <var:w> : nat ) := exists <var:f> <var:z> <var:x> <var:e> <var:C> : nat , ( <var:w> = <var:x> * <var:z> * <var:f> * <var:e> * <var:C> ) /\ ( <var:x> >= <nat:2> ) /\ ( <var:f> >= <nat:2> ) /\ ( <var:z> >= <nat:2> ) /\ ( <var:e> >= <nat:2> ) /\ ( <var:C> >= <nat:2> ) . Theorem <genP:1> : <def:five-composite> <nat:1152> . Proof . unfold <def:five-composite> . exists <nat:4> . exists <nat:2> . exists <nat:3> . exists <nat:8> . exists <nat:6> . assert ( <genH> : <nat:3> > <nat:1> ) . { lia . } assert ( <genH> : <nat:8> > <nat:1> ) . { lia . } assert ( <genH> : <nat:6> > <nat:1> ) . { lia . } assert ( <genH> : <nat:2> > <nat:1> ) . { lia . } assert ( <genH> : <nat:4> > <nat:1> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 