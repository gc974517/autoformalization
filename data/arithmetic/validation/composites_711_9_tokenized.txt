\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Assume that when there exist integers $ <var:V> $ , $ <var:l> $ , $ <var:u> $ , $ <var:O> $ , $ <var:W> $ , $ <var:t> $ , $ <var:g> $ , $ <var:e> $ , $ <var:J> $ then claim that some $ <var:E> $ is called a <def:nine-composite> natural number when $ <var:E> = <var:W> \times <var:J> \times <var:t> \times <var:g> \times <var:e> \times <var:l> \times <var:u> \times <var:V> \times <var:O> $ and where $ <var:V> $ , $ <var:l> $ , $ <var:J> $ , $ <var:O> $ , $ <var:W> $ , $ <var:e> $ , $ <var:t> $ , $ <var:u> $ , $ <var:g> \geq <nat:2> $ . For this reason $ <nat:5322240> = <var:E> $ is a <def:nine-composite> positive integer . \end{theorem} \begin{proof} Recall <nat:5322240> is a <def:nine-composite> number when <nat:5322240> is the product of $ <var:J> $ , $ <var:u> $ , $ <var:g> $ , $ <var:t> $ , $ <var:l> $ , $ <var:O> $ , $ <var:V> $ , $ <var:W> $ , $ <var:e> $ such that $ <var:O> $ , $ <var:J> $ , $ <var:t> $ , $ <var:W> $ , $ <var:V> $ , $ <var:u> $ , $ <var:e> $ , $ <var:l> $ , $ <var:g> \geq <nat:2> $ . We confirm <nat:5322240> is a <def:nine-composite> whole number . Note that $ <nat:5322240> = <var:V> * <var:e> * <var:J> * <var:l> * <var:t> * <var:g> * <var:u> * <var:O> * <var:W> $ yields $ <var:g> = <nat:12> $ , $ <var:t> = <nat:8> $ , $ <var:W> = <nat:6> $ , $ <var:e> = <nat:3> $ , $ <var:l> = <nat:11> $ , $ <var:J> = <nat:5> $ , $ <var:O> = <nat:7> $ , $ <var:u> = <nat:2> $ and $ <var:V> = <nat:4> $ . Similarly notice $ <nat:3> $ , $ <nat:7> $ , $ <nat:6> $ , $ <nat:2> $ , $ <nat:8> $ , $ <nat:11> $ , $ <nat:12> $ , $ <nat:5> $ and $ <nat:4> \geq <nat:2> $ . This gives <nat:5322240> is a <def:nine-composite> integer . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:nine-composite> ( <var:E> : nat ) := exists <var:V> <var:l> <var:u> <var:O> <var:W> <var:t> <var:g> <var:e> <var:J> : nat , ( <var:E> = <var:W> * <var:J> * <var:t> * <var:g> * <var:e> * <var:l> * <var:u> * <var:V> * <var:O> ) /\ ( <var:V> >= <nat:2> ) /\ ( <var:l> >= <nat:2> ) /\ ( <var:J> >= <nat:2> ) /\ ( <var:O> >= <nat:2> ) /\ ( <var:W> >= <nat:2> ) /\ ( <var:e> >= <nat:2> ) /\ ( <var:t> >= <nat:2> ) /\ ( <var:u> >= <nat:2> ) /\ ( <var:g> >= <nat:2> ) . Theorem <genP:1> : <def:nine-composite> <nat:5322240> . Proof . unfold <def:nine-composite> . exists <nat:4> . exists <nat:11> . exists <nat:2> . exists <nat:7> . exists <nat:6> . exists <nat:8> . exists <nat:12> . exists <nat:3> . exists <nat:5> . assert ( <genH> : <nat:3> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:7> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:6> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:2> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:8> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:11> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:12> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:5> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:4> >= <nat:2> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 