\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Given any integers $ <var:b> $ , $ <var:S> $ , $ <var:H> $ , $ <var:K> $ , $ <var:T> $ , $ <var:q> $ , $ <var:t> $ , and $ <var:u> $ the sum $ <var:q> <nat:456> + <var:u> <nat:390> + <var:H> <nat:454> + <var:T> <nat:156> + <nat:60> <var:S> + <nat:144> <var:b> + <nat:262> <var:t> + <nat:155> + <var:K> <nat:86> $ is odd . \end{theorem} \begin{proof} The summing between even naturals together and an odd number in $ \mathbb{N} $ is guaranteed to be odd . Take note that the natural numbers $ <nat:456> $ , $ <nat:390> $ , $ <nat:454> $ , $ <nat:156> $ , $ <nat:60> $ , $ <nat:144> $ , $ <nat:262> $ , as well as $ <nat:86> $ are clearly even natural numbers . For this reason , the products $ <var:q> \times <nat:456> $ , $ <nat:390> \times <var:u> $ , $ <var:H> \times <nat:454> $ , $ <nat:156> \times <var:T> $ , $ <var:S> \times <nat:60> $ , $ <nat:144> \times <var:b> $ , $ <nat:262> \times <var:t> $ , and $ <var:K> \times <nat:86> $ will be even in addition . We demonstrate $ <var:S> \cdot <nat:60> + <var:t> \cdot <nat:262> + <var:b> \cdot <nat:144> + <nat:86> \cdot <var:K> + <var:q> \cdot <nat:456> + <nat:156> \cdot <var:T> + <nat:390> \cdot <var:u> + <nat:155> + <nat:454> \cdot <var:H> $ will be odd . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:b> <var:S> <var:H> <var:K> <var:T> <var:q> <var:t> <var:u> : nat , Nat . odd ( <nat:456> * <var:q> + <nat:390> * <var:u> + <nat:454> * <var:H> + <nat:156> * <var:T> + <nat:60> * <var:S> + <nat:144> * <var:b> + <nat:262> * <var:t> + <nat:86> * <var:K> + <nat:155> ) = true . Proof . intros . rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . assert ( <genH> : Nat . even <nat:456> = true ) . { auto . } assert ( <genH> : Nat . even <nat:390> = true ) . { auto . } assert ( <genH> : Nat . even <nat:454> = true ) . { auto . } assert ( <genH> : Nat . even <nat:156> = true ) . { auto . } assert ( <genH> : Nat . even <nat:60> = true ) . { auto . } assert ( <genH> : Nat . even <nat:144> = true ) . { auto . } assert ( <genH> : Nat . even <nat:262> = true ) . { auto . } assert ( <genH> : Nat . even <nat:86> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:456> * <var:q> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:390> * <var:u> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:454> * <var:H> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:156> * <var:T> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:60> * <var:S> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:144> * <var:b> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:262> * <var:t> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:86> * <var:K> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 