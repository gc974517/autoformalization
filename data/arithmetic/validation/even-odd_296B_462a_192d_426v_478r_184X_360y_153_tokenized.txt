\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:192> * <var:d> + <nat:153> + <var:X> * <nat:184> + <nat:296> * <var:B> + <var:v> * <nat:426> + <var:r> * <nat:478> + <var:y> * <nat:360> + <var:a> * <nat:462> $ is guaranteed to be odd . \end{theorem} \begin{proof} This claim holds from the fact $ <var:v> \cdot <nat:426> + <var:d> \cdot <nat:192> + <nat:184> \cdot <var:X> + <var:a> \cdot <nat:462> + <nat:296> \cdot <var:B> + <var:y> \cdot <nat:360> + <var:r> \cdot <nat:478> $ is clearly even . Furthermore , recall the natural numbers $ <nat:426> $ , $ <nat:192> $ , $ <nat:184> $ , $ <nat:462> $ , $ <nat:296> $ , $ <nat:360> $ , in addition to $ <nat:478> $ are even numbers in $ \mathbb{N} $ . Thus , the products $ <var:v> * <nat:426> $ , $ <nat:192> * <var:d> $ , $ <nat:184> * <var:X> $ , $ <nat:462> * <var:a> $ , $ <nat:296> * <var:B> $ , $ <var:y> * <nat:360> $ , additionally $ <nat:478> * <var:r> $ will be even in addition . From the knowledge the product of even naturals with any number in $ \mathbb{Z}^+ $ will be an even number the summation $ <nat:296> \cdot <var:B> + <nat:462> \cdot <var:a> + <nat:192> \cdot <var:d> + <var:v> \cdot <nat:426> + <nat:478> \cdot <var:r> + <nat:184> \cdot <var:X> + <var:y> \cdot <nat:360> $ is guaranteed to be even . Notice the totaling of an even natural and an odd element of $ \mathbb{Z}^+ $ must be by its very nature an odd number in $ \mathbb{N} $ . Notice $ <nat:153> $ is known as an odd number in $ \mathbb{N} $ . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:d> <var:X> <var:B> <var:v> <var:r> <var:y> <var:a> : nat , Nat . odd ( <nat:192> * <var:d> + <nat:184> * <var:X> + <nat:296> * <var:B> + <nat:426> * <var:v> + <nat:478> * <var:r> + <nat:360> * <var:y> + <nat:462> * <var:a> + <nat:153> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:426> = true ) . { auto . } assert ( <genH> : Nat . even <nat:192> = true ) . { auto . } assert ( <genH> : Nat . even <nat:184> = true ) . { auto . } assert ( <genH> : Nat . even <nat:462> = true ) . { auto . } assert ( <genH> : Nat . even <nat:296> = true ) . { auto . } assert ( <genH> : Nat . even <nat:360> = true ) . { auto . } assert ( <genH> : Nat . even <nat:478> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:426> * <var:v> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:192> * <var:d> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:184> * <var:X> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:462> * <var:a> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:296> * <var:B> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:360> * <var:y> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:478> * <var:r> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:192> * <var:d> + <nat:184> * <var:X> + <nat:296> * <var:B> + <nat:426> * <var:v> + <nat:478> * <var:r> + <nat:360> * <var:y> + <nat:462> * <var:a> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . assert ( <genH> : Nat . odd <nat:153> = true ) . { auto . } rewrite <- Nat . negb_even . rewrite <genH> . rewrite <genH> . auto . Qed . 