\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Using $ <var:l> $ , $ <var:e> $ , $ <var:K> $ , and $ <var:T> \in \mathbb{Z}^+ $ $ <var:T> \cdot <nat:444> + <nat:217> + <nat:92> \cdot <var:e> + <var:l> \cdot <nat:254> + <var:K> \cdot <nat:220> $ will be odd . \end{theorem} \begin{proof} We know that the products $ <nat:444> \cdot <var:T> $ , $ <nat:92> \cdot <var:e> $ , $ <var:l> \cdot <nat:254> $ , additionally $ <var:K> \cdot <nat:220> $ are trivially even because the product of an even positive integer with an arbitrary natural is guaranteed to be even . This claim is proven since the integers $ <nat:444> $ , $ <nat:92> $ , $ <nat:254> $ , and moreover $ <nat:220> $ are clearly even naturals . See $ <nat:217> $ is odd . It can be demonstrated that the summation $ <nat:254> \cdot <var:l> + <nat:444> \cdot <var:T> + <var:K> \cdot <nat:220> + <nat:217> + <var:e> \cdot <nat:92> $ is guaranteed to be odd . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:l> <var:e> <var:K> <var:T> : nat , Nat . odd ( <nat:444> * <var:T> + <nat:92> * <var:e> + <nat:254> * <var:l> + <nat:220> * <var:K> + <nat:217> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:444> = true ) . { auto . } assert ( <genH> : Nat . even <nat:92> = true ) . { auto . } assert ( <genH> : Nat . even <nat:254> = true ) . { auto . } assert ( <genH> : Nat . even <nat:220> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:444> * <var:T> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:92> * <var:e> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:254> * <var:l> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:220> * <var:K> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . odd <nat:217> = true ) . { auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 