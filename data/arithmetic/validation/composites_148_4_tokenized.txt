\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \newtheorem{definition}{Definition} \begin{document} \begin{definition} Granted we get $ <var:p> \times <var:w> \times <var:P> \times <var:h> = <var:M> $ assuming some number $ <var:M> $ as well as satisfying the condition that $ <var:P> $ , $ <var:w> $ , $ <var:p> $ and $ <var:h> \geq <nat:2> $ with some $ <var:P> $ , $ <var:h> $ , $ <var:w> $ , $ <var:p> \in \mathbb{N} $ , then we claim that $ <var:M> $ is a <def:four-composite> number . \end{definition} \begin{theorem} $ <nat:1100> = <var:M> $ is a <def:four-composite> natural number . \end{theorem} \begin{proof} Recall <nat:1100> is a <def:four-composite> number iff it is the multiplication between positive integers $ <var:p> $ , $ <var:h> $ , $ <var:w> $ , $ <var:P> $ satisfying the condition that $ <var:w> $ , $ <var:p> $ , $ <var:h> $ and $ <var:P> > <nat:1> $ . Let $ <var:h> = <nat:10> $ , $ <var:P> = <nat:5> $ , $ <var:w> = <nat:11> $ and $ <var:p> = <nat:2> $ . We verify our belief is true on account of $ <nat:1100> = <nat:10> \cdot <nat:11> \cdot <nat:2> \cdot <nat:5> $ plus in consideration of $ <var:P> = <nat:5> $ , $ <var:h> = <nat:10> $ , $ <var:p> = <nat:2> $ , and $ <var:w> = <nat:11> > <nat:1> $ . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:four-composite> ( <var:M> : nat ) := exists <var:P> <var:h> <var:w> <var:p> : nat , ( <var:p> * <var:w> * <var:P> * <var:h> = <var:M> ) /\ ( <var:P> >= <nat:2> ) /\ ( <var:w> >= <nat:2> ) /\ ( <var:p> >= <nat:2> ) /\ ( <var:h> >= <nat:2> ) . Theorem <genP:1> : <def:four-composite> <nat:1100> . Proof . unfold <def:four-composite> . exists <nat:5> . exists <nat:10> . exists <nat:11> . exists <nat:2> . assert ( <genH> : <nat:5> > <nat:1> ) . { lia . } assert ( <genH> : <nat:10> > <nat:1> ) . { lia . } assert ( <genH> : <nat:2> > <nat:1> ) . { lia . } assert ( <genH> : <nat:11> > <nat:1> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 