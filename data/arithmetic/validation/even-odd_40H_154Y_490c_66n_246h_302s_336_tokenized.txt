\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Using every positive numbers $ <var:s> $ , $ <var:n> $ , $ <var:h> $ , $ <var:Y> $ , $ <var:H> $ , and $ <var:c> $ the formula $ <var:H> \times <nat:40> + <nat:336> + <nat:154> \times <var:Y> + <var:c> \times <nat:490> + <nat:66> \times <var:n> + <var:h> \times <nat:246> + <nat:302> \times <var:s> $ is even . \end{theorem} \begin{proof} The pairs $ <var:h> \cdot <nat:246> $ , $ <var:c> \cdot <nat:490> $ , $ <nat:66> \cdot <var:n> $ , $ <var:Y> \cdot <nat:154> $ , and moreover $ <var:s> \cdot <nat:302> $ are trivially even whole numbers . This holds because multiplying between an even integer with an arbitrary number is even . On top of this , the pair $ <nat:40> \cdot <var:H> $ is trivially an even positive integer . The adding between even positive integers is by definition an even number in $ \mathbb{Z}^+ $ . Remember $ <nat:336> $ is known as even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:s> <var:n> <var:h> <var:Y> <var:H> <var:c> : nat , Nat . even ( <nat:40> * <var:H> + <nat:154> * <var:Y> + <nat:490> * <var:c> + <nat:66> * <var:n> + <nat:246> * <var:h> + <nat:302> * <var:s> + <nat:336> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:246> * <var:h> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:490> * <var:c> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:66> * <var:n> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:154> * <var:Y> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:302> * <var:s> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:40> * <var:H> ) = true ) . { rewrite Nat . even_mul . auto . } repeat rewrite Nat . even_add . assert ( <genH> : Nat . even <nat:336> = true ) . { auto . } rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 