\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} For some positive numbers $ <var:S> $ , $ <var:u> $ , $ <var:W> $ , $ <var:M> $ , $ <var:m> $ , $ <var:R> $ , $ <var:Y> $ , and $ <var:P> $ $ <var:W> * <nat:406> + <var:u> * <nat:122> + <var:R> * <nat:268> + <var:Y> * <nat:188> + <nat:486> * <var:S> + <var:M> * <nat:270> + <nat:221> + <nat:150> * <var:m> + <var:P> * <nat:118> $ is guaranteed to be odd . \end{theorem} \begin{proof} The pairs $ <nat:118> \times <var:P> $ , $ <var:u> \times <nat:122> $ , $ <nat:270> \times <var:M> $ , $ <var:R> \times <nat:268> $ , $ <var:S> \times <nat:486> $ , $ <nat:406> \times <var:W> $ , additionally $ <var:m> \times <nat:150> $ are clearly even . Building on , the pair $ <var:Y> \times <nat:188> $ is known as an even element of $ \mathbb{N} $ . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:S> <var:u> <var:W> <var:M> <var:m> <var:R> <var:Y> <var:P> : nat , Nat . odd ( <nat:406> * <var:W> + <nat:122> * <var:u> + <nat:268> * <var:R> + <nat:188> * <var:Y> + <nat:486> * <var:S> + <nat:270> * <var:M> + <nat:150> * <var:m> + <nat:118> * <var:P> + <nat:221> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:118> * <var:P> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:122> * <var:u> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:270> * <var:M> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:268> * <var:R> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:486> * <var:S> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:406> * <var:W> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:150> * <var:m> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:188> * <var:Y> ) = true ) . { rewrite Nat . even_mul . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 