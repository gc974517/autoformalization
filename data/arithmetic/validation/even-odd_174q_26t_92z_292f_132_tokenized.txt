\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:174> \times <var:q> + <nat:92> \times <var:z> + <nat:292> \times <var:f> + <nat:132> + <nat:26> \times <var:t> $ will be even . \end{theorem} \begin{proof} This claim is proven since $ <nat:92> \cdot <var:z> + <nat:26> \cdot <var:t> + <var:f> \cdot <nat:292> + <var:q> \cdot <nat:174> $ is known to be even . Remember that the product $ <var:f> \cdot <nat:292> $ is guaranteed to be an even number since multiplying between an even number in $ \mathbb{N} $ and an arbitrary element of $ \mathbb{N} $ is itself an even element of $ \mathbb{N} $ and likewise the leading term $ <nat:292> $ is guaranteed to be by its very nature an even whole number . On top of this , take note the product $ <var:q> \cdot <nat:174> $ is clearly even because the leading term $ <nat:174> $ is trivially an even number . What's more , $ <nat:92> \cdot <var:z> $ is obviously an even number in $ \mathbb{Z}^+ $ . This claim holds from the knowledge the integer $ <nat:92> $ is obviously obviously an even number . Likewise , $ <nat:26> \cdot <var:t> $ is an even element of $ \mathbb{N} $ from the fact taking the product of an even number with any element of $ \mathbb{N} $ must be obviously an even element of $ \mathbb{Z}^+ $ , and must be true because the integer $ <nat:26> $ is clearly even . The formula $ <var:q> <nat:174> + <nat:26> <var:t> + <nat:92> <var:z> + <nat:292> <var:f> $ is even because multiplying between even integers and any number is even . The addition of an even integer and an even number in $ \mathbb{N} $ will be even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:q> <var:z> <var:f> <var:t> : nat , Nat . even ( <nat:174> * <var:q> + <nat:92> * <var:z> + <nat:292> * <var:f> + <nat:26> * <var:t> + <nat:132> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:292> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:292> * <var:f> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:174> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:174> * <var:q> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:92> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:92> * <var:z> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:26> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:26> * <var:t> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:174> * <var:q> + <nat:92> * <var:z> + <nat:292> * <var:f> + <nat:26> * <var:t> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . even_add . rewrite <genH> . auto . Qed . 