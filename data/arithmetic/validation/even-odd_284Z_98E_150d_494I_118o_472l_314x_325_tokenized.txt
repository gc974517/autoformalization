\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:Z> * <nat:284> + <nat:98> * <var:E> + <nat:325> + <var:d> * <nat:150> + <nat:494> * <var:I> + <nat:118> * <var:o> + <nat:472> * <var:l> + <var:x> * <nat:314> $ must be odd using some variables $ <var:Z> $ , $ <var:l> $ , $ <var:o> $ , $ <var:E> $ , $ <var:I> $ , $ <var:d> $ , and $ <var:x> $ . \end{theorem} \begin{proof} Remember $ <nat:325> $ is trivially odd . We justify our result must be true making use of the understanding that the summation of an even natural number with an odd number is guaranteed to be an odd positive integer . Recall that the pairs $ <var:l> \times <nat:472> $ , $ <nat:118> \times <var:o> $ , $ <nat:494> \times <var:I> $ , $ <nat:314> \times <var:x> $ , $ <var:d> \times <nat:150> $ , and $ <nat:284> \times <var:Z> $ must be even . This fact is true because the product of an even natural number with any element of $ \mathbb{Z}^+ $ will be fundamentally an even whole number . Recall that the pair $ <var:E> \times <nat:98> $ is known to be even since the product between an even natural and an arbitrary number in $ \mathbb{Z}^+ $ must be even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:Z> <var:l> <var:o> <var:E> <var:I> <var:d> <var:x> : nat , Nat . odd ( <nat:284> * <var:Z> + <nat:98> * <var:E> + <nat:150> * <var:d> + <nat:494> * <var:I> + <nat:118> * <var:o> + <nat:472> * <var:l> + <nat:314> * <var:x> + <nat:325> ) = true . Proof . intros . assert ( <genH> : Nat . odd <nat:325> = true ) . { auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . assert ( <genH> : Nat . even ( <nat:472> * <var:l> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:118> * <var:o> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:494> * <var:I> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:314> * <var:x> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:150> * <var:d> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:284> * <var:Z> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:98> * <var:E> ) = true ) . { rewrite Nat . even_mul . auto . } rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 