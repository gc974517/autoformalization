\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Allow $ <var:P> $ , $ <var:J> $ , $ <var:b> $ , $ <var:j> $ , $ <var:Z> $ , $ <var:I> $ , $ <var:N> $ , $ <var:p> $ , $ <var:r> $ as positive integers larger than or equivalent to <nat:2> . We denote that $ <var:G> \in \mathbb{Z}^+ $ is considered to be a <def:nine-composite> natural number when $ <var:G> = <var:b> \cdot <var:p> \cdot <var:P> \cdot <var:Z> \cdot <var:I> \cdot <var:J> \cdot <var:j> \cdot <var:r> \cdot <var:N> $ . Thus the natural number <nat:14515200> is a <def:nine-composite> positive integer . \end{theorem} \begin{proof} Let $ <var:N> = <nat:6> $ , $ <var:b> = <nat:2> $ , $ <var:J> = <nat:4> $ , $ <var:P> = <nat:8> $ , $ <var:r> = <nat:10> $ , $ <var:j> = <nat:7> $ , $ <var:I> = <nat:5> $ , $ <var:p> = <nat:9> $ , $ <var:Z> = <nat:12> $ . We verify <nat:14515200> is a <def:nine-composite> whole number as $ <nat:9> $ , $ <nat:10> $ , $ <nat:6> $ , $ <nat:2> $ , $ <nat:4> $ , $ <nat:7> $ , $ <nat:5> $ , $ <nat:12> $ , and $ <nat:8> \geq <nat:2> $ . Thus , $ <var:I> $ , $ <var:b> $ , $ <var:p> $ , $ <var:J> $ , $ <var:P> $ , $ <var:N> $ , $ <var:j> $ , $ <var:Z> $ , $ <var:r> $ are more than or equal to <nat:2> as well as $ <nat:14515200> = <var:J> * <var:j> * <var:r> * <var:b> * <var:I> * <var:p> * <var:N> * <var:Z> * <var:P> $ is verified . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:nine-composite> ( <var:G> : nat ) := exists <var:P> <var:J> <var:b> <var:j> <var:Z> <var:I> <var:N> <var:p> <var:r> : nat , ( <var:P> >= <nat:2> ) /\ ( <var:J> >= <nat:2> ) /\ ( <var:b> >= <nat:2> ) /\ ( <var:j> >= <nat:2> ) /\ ( <var:Z> >= <nat:2> ) /\ ( <var:I> >= <nat:2> ) /\ ( <var:N> >= <nat:2> ) /\ ( <var:p> >= <nat:2> ) /\ ( <var:r> >= <nat:2> ) /\ ( <var:G> = <var:b> * <var:p> * <var:P> * <var:Z> * <var:I> * <var:J> * <var:j> * <var:r> * <var:N> ) . Theorem <genP:1> : <def:nine-composite> <nat:14515200> . Proof . unfold <def:nine-composite> . exists <nat:8> . exists <nat:4> . exists <nat:2> . exists <nat:7> . exists <nat:12> . exists <nat:5> . exists <nat:6> . exists <nat:9> . exists <nat:10> . assert ( <genH> : <nat:9> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:10> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:6> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:2> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:4> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:7> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:5> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:12> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:8> >= <nat:2> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 