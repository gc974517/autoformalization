\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:484> + <var:F> * <nat:64> + <var:Z> * <nat:362> + <var:D> * <nat:6> + <nat:146> * <var:T> + <var:K> * <nat:334> + <var:L> * <nat:344> + <nat:340> * <var:W> $ will be even . \end{theorem} \begin{proof} We demonstrate that the sum $ <nat:344> * <var:L> + <var:K> * <nat:334> + <nat:146> * <var:T> + <var:F> * <nat:64> + <var:W> * <nat:340> + <var:D> * <nat:6> + <nat:362> * <var:Z> $ is guaranteed to be even . What's more , observe that the whole numbers $ <nat:344> $ , $ <nat:334> $ , $ <nat:146> $ , $ <nat:64> $ , $ <nat:340> $ , $ <nat:6> $ , additionally $ <nat:362> $ are even natural numbers . Accordingly , the pairs $ <nat:344> * <var:L> $ , $ <var:K> * <nat:334> $ , $ <var:T> * <nat:146> $ , $ <nat:64> * <var:F> $ , $ <var:W> * <nat:340> $ , $ <var:D> * <nat:6> $ , as well as $ <nat:362> * <var:Z> $ is even too . We justify our theorem holds . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:F> <var:Z> <var:D> <var:T> <var:K> <var:L> <var:W> : nat , Nat . even ( <nat:64> * <var:F> + <nat:362> * <var:Z> + <nat:6> * <var:D> + <nat:146> * <var:T> + <nat:334> * <var:K> + <nat:344> * <var:L> + <nat:340> * <var:W> + <nat:484> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:344> = true ) . { auto . } assert ( <genH> : Nat . even <nat:334> = true ) . { auto . } assert ( <genH> : Nat . even <nat:146> = true ) . { auto . } assert ( <genH> : Nat . even <nat:64> = true ) . { auto . } assert ( <genH> : Nat . even <nat:340> = true ) . { auto . } assert ( <genH> : Nat . even <nat:6> = true ) . { auto . } assert ( <genH> : Nat . even <nat:362> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:344> * <var:L> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:334> * <var:K> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:146> * <var:T> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:64> * <var:F> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:340> * <var:W> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:6> * <var:D> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:362> * <var:Z> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:64> * <var:F> + <nat:362> * <var:Z> + <nat:6> * <var:D> + <nat:146> * <var:T> + <nat:334> * <var:K> + <nat:344> * <var:L> + <nat:340> * <var:W> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . even_add . rewrite <genH> . auto . Qed . 