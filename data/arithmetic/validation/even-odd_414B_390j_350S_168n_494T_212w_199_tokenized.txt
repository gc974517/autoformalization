\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:414> \cdot <var:B> + <var:j> \cdot <nat:390> + <nat:168> \cdot <var:n> + <var:T> \cdot <nat:494> + <nat:199> + <nat:212> \cdot <var:w> + <nat:350> \cdot <var:S> $ will be odd . \end{theorem} \begin{proof} Notice the formula $ <nat:199> + <var:S> * <nat:350> + <var:B> * <nat:414> + <var:w> * <nat:212> + <var:T> * <nat:494> + <var:j> * <nat:390> + <var:n> * <nat:168> $ is known to be odd from the fact the formula $ <nat:414> \cdot <var:B> + <nat:390> \cdot <var:j> + <nat:350> \cdot <var:S> + <var:n> \cdot <nat:168> + <var:T> \cdot <nat:494> + <var:w> \cdot <nat:212> $ is guaranteed to be even . The pair $ <var:w> <nat:212> $ is known to be even . Adding on , recall the pair $ <var:j> <nat:390> $ is guaranteed to be an even natural number as a consequence that taking the product between an even whole number with any integer is fundamentally an even number . Further , the pairs $ <nat:350> <var:S> $ as well as $ <nat:414> <var:B> $ are trivially even whole numbers . The product $ <var:T> <nat:494> $ is trivially even . In addition , take note the product $ <var:n> <nat:168> $ is trivially an even integer . By reason that the multiplication of an even integer with an arbitrary natural must be even this lemma is true . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:B> <var:j> <var:n> <var:T> <var:w> <var:S> : nat , Nat . odd ( <nat:414> * <var:B> + <nat:390> * <var:j> + <nat:168> * <var:n> + <nat:494> * <var:T> + <nat:212> * <var:w> + <nat:350> * <var:S> + <nat:199> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:212> * <var:w> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:390> * <var:j> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:350> * <var:S> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:414> * <var:B> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:494> * <var:T> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:168> * <var:n> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:414> * <var:B> + <nat:390> * <var:j> + <nat:168> * <var:n> + <nat:494> * <var:T> + <nat:212> * <var:w> + <nat:350> * <var:S> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . auto . Qed . 