\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} With every $ <var:M> $ , $ <var:r> $ , $ <var:g> $ , and $ <var:B> \in \mathbb{N} $ the sum $ <var:g> \cdot <nat:132> + <nat:297> + <nat:80> \cdot <var:B> + <var:r> \cdot <nat:106> + <nat:380> \cdot <var:M> $ is odd . \end{theorem} \begin{proof} Recall that $ <nat:297> $ is known to be an odd natural . The summing of an even element of $ \mathbb{Z}^+ $ and an odd element of $ \mathbb{Z}^+ $ will be odd . Furthermore , the natural numbers $ <nat:132> $ , $ <nat:80> $ , $ <nat:106> $ , and also $ <nat:380> $ are clearly even naturals . For this reason , the terms $ <var:g> \cdot <nat:132> $ , $ <nat:80> \cdot <var:B> $ , $ <nat:106> \cdot <var:r> $ , in addition to $ <nat:380> \cdot <var:M> $ must be even as well . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:M> <var:r> <var:g> <var:B> : nat , Nat . odd ( <nat:132> * <var:g> + <nat:80> * <var:B> + <nat:106> * <var:r> + <nat:380> * <var:M> + <nat:297> ) = true . Proof . intros . assert ( <genH> : Nat . odd <nat:297> = true ) . { auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . assert ( <genH> : Nat . even <nat:132> = true ) . { auto . } assert ( <genH> : Nat . even <nat:80> = true ) . { auto . } assert ( <genH> : Nat . even <nat:106> = true ) . { auto . } assert ( <genH> : Nat . even <nat:380> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:132> * <var:g> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:80> * <var:B> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:106> * <var:r> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:380> * <var:M> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 