\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:286> \cdot <var:c> + <nat:144> \cdot <var:R> + <nat:396> \cdot <var:A> + <var:t> \cdot <nat:32> + <nat:14> \cdot <var:d> + <nat:16> \cdot <var:L> + <nat:262> \cdot <var:T> + <nat:225> $ must be odd . \end{theorem} \begin{proof} We use the knowledge the summation $ <nat:262> <var:T> + <nat:144> <var:R> + <nat:16> <var:L> + <var:t> <nat:32> + <var:d> <nat:14> + <nat:286> <var:c> + <var:A> <nat:396> $ is known to be even . The integers $ <nat:396> $ , $ <nat:144> $ , $ <nat:14> $ , $ <nat:262> $ , as well as $ <nat:286> $ are obviously even whole numbers Further , notice the leading term $ <nat:16> $ is trivially an even whole number Building on , the leading term $ <nat:32> $ is known to be an even natural number The sum $ <nat:16> <var:L> + <nat:286> <var:c> + <nat:262> <var:T> + <nat:396> <var:A> + <var:d> <nat:14> + <var:R> <nat:144> + <var:t> <nat:32> $ is by itself even as a consequence that the product of an even element of $ \mathbb{N} $ with any natural number will be an even number in $ \mathbb{N} $ . It can be demonstrated that $ <var:T> * <nat:262> + <var:d> * <nat:14> + <nat:225> + <nat:16> * <var:L> + <nat:144> * <var:R> + <nat:32> * <var:t> + <var:c> * <nat:286> + <nat:396> * <var:A> $ must be odd . Observe that $ <nat:225> $ is an odd element of $ \mathbb{N} $ . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:c> <var:R> <var:A> <var:t> <var:d> <var:L> <var:T> : nat , Nat . odd ( <nat:286> * <var:c> + <nat:144> * <var:R> + <nat:396> * <var:A> + <nat:32> * <var:t> + <nat:14> * <var:d> + <nat:16> * <var:L> + <nat:262> * <var:T> + <nat:225> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:396> = true ) . { auto . } assert ( <genH> : Nat . even <nat:144> = true ) . { auto . } assert ( <genH> : Nat . even <nat:14> = true ) . { auto . } assert ( <genH> : Nat . even <nat:262> = true ) . { auto . } assert ( <genH> : Nat . even <nat:286> = true ) . { auto . } assert ( <genH> : Nat . even <nat:16> = true ) . { auto . } assert ( <genH> : Nat . even <nat:32> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:286> * <var:c> + <nat:144> * <var:R> + <nat:396> * <var:A> + <nat:32> * <var:t> + <nat:14> * <var:d> + <nat:16> * <var:L> + <nat:262> * <var:T> ) = true ) . { repeat rewrite Nat . even_add . repeat rewrite Nat . even_mul . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } assert ( <genH> : Nat . odd <nat:225> = true ) . { auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . rewrite <genH> . auto . Qed . 