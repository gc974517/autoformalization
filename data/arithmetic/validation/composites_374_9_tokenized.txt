\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Allow $ <var:C> $ , $ <var:g> $ , $ <var:o> $ , $ <var:s> $ , $ <var:H> $ , $ <var:A> $ , $ <var:a> $ , $ <var:X> $ and $ <var:n> \in \mathbb{N} $ where $ <var:o> $ , $ <var:a> $ , $ <var:C> $ , $ <var:g> $ , $ <var:n> $ , $ <var:A> $ , $ <var:H> $ , $ <var:s> $ and $ <var:X> > <nat:1> $ as well as such that $ <var:C> \cdot <var:A> \cdot <var:n> \cdot <var:a> \cdot <var:H> \cdot <var:g> \cdot <var:s> \cdot <var:X> \cdot <var:o> $ equals $ <nat:5702400> $ . \end{theorem} \begin{proof} Assume $ <var:H> = <nat:2> $ , $ <var:g> = <nat:5> $ , $ <var:a> = <nat:3> $ , $ <var:A> = <nat:6> $ , $ <var:C> = <nat:8> $ , $ <var:s> = <nat:4> $ , $ <var:n> = <nat:11> $ , $ <var:o> = <nat:10> $ , $ <var:X> = <nat:9> $ . What's more note that $ <var:g> = <nat:5> $ , $ <var:n> = <nat:11> $ , $ <var:H> = <nat:2> $ , $ <var:X> = <nat:9> $ , $ <var:A> = <nat:6> $ , $ <var:s> = <nat:4> $ , $ <var:a> = <nat:3> $ , $ <var:C> = <nat:8> $ , and $ <var:o> = <nat:10> $ are greater than <nat:1> . This implies the formula holds . \end{proof} \end{document} 
~
Require Import Lia . Theorem <genP:1> : exists <var:C> <var:g> <var:o> <var:s> <var:H> <var:A> <var:a> <var:X> <var:n> : nat , ( <var:o> > <nat:1> ) /\ ( <var:a> > <nat:1> ) /\ ( <var:C> > <nat:1> ) /\ ( <var:g> > <nat:1> ) /\ ( <var:n> > <nat:1> ) /\ ( <var:A> > <nat:1> ) /\ ( <var:H> > <nat:1> ) /\ ( <var:s> > <nat:1> ) /\ ( <var:X> > <nat:1> ) /\ ( <var:C> * <var:A> * <var:n> * <var:a> * <var:H> * <var:g> * <var:s> * <var:X> * <var:o> = <nat:5702400> ) . Proof . exists <nat:8> . exists <nat:5> . exists <nat:10> . exists <nat:4> . exists <nat:2> . exists <nat:6> . exists <nat:3> . exists <nat:9> . exists <nat:11> . assert ( <genH> : <nat:5> > <nat:1> ) . { lia . } assert ( <genH> : <nat:11> > <nat:1> ) . { lia . } assert ( <genH> : <nat:2> > <nat:1> ) . { lia . } assert ( <genH> : <nat:9> > <nat:1> ) . { lia . } assert ( <genH> : <nat:6> > <nat:1> ) . { lia . } assert ( <genH> : <nat:4> > <nat:1> ) . { lia . } assert ( <genH> : <nat:3> > <nat:1> ) . { lia . } assert ( <genH> : <nat:8> > <nat:1> ) . { lia . } assert ( <genH> : <nat:10> > <nat:1> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 