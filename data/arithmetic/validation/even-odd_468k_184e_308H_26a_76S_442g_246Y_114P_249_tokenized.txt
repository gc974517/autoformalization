\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:184> <var:e> + <var:Y> <nat:246> + <nat:249> + <nat:26> <var:a> + <var:k> <nat:468> + <nat:76> <var:S> + <var:P> <nat:114> + <nat:442> <var:g> + <nat:308> <var:H> $ must be odd given every $ <var:e> $ , $ <var:a> $ , $ <var:S> $ , $ <var:k> $ , $ <var:Y> $ , $ <var:g> $ , $ <var:H> $ , and $ <var:P> \in \mathbb{Z}^+ $ . \end{theorem} \begin{proof} The summation between an even number in $ \mathbb{N} $ and an odd positive integer is guaranteed to be by its very nature an odd integer . The integers $ <nat:246> $ , $ <nat:114> $ , $ <nat:308> $ , and $ <nat:442> $ are known as even numbers in $ \mathbb{Z}^+ $ . For this reason , the terms $ <var:Y> * <nat:246> $ , $ <var:P> * <nat:114> $ , $ <nat:308> * <var:H> $ , additionally $ <nat:442> * <var:g> $ is guaranteed to be even too . The products $ <var:e> * <nat:184> $ in addition to $ <nat:26> * <var:a> $ are known as even by reason that the natural numbers $ <nat:184> $ and likewise $ <nat:26> $ are clearly themselves even numbers in $ \mathbb{N} $ . See the product $ <var:k> * <nat:468> $ is guaranteed to be even . This claim is proven from the fact the product of an even element of $ \mathbb{Z}^+ $ with an arbitrary natural number must be instrinsically an even element of $ \mathbb{Z}^+ $ . This fact is proven because the natural number $ <nat:468> $ is clearly even . The leading term $ <nat:76> $ is guaranteed to be an even number in $ \mathbb{N} $ . As a consequence , the pair $ <var:S> * <nat:76> $ must be even too . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:e> <var:a> <var:S> <var:k> <var:Y> <var:g> <var:H> <var:P> : nat , Nat . odd ( <nat:184> * <var:e> + <nat:246> * <var:Y> + <nat:26> * <var:a> + <nat:468> * <var:k> + <nat:76> * <var:S> + <nat:114> * <var:P> + <nat:442> * <var:g> + <nat:308> * <var:H> + <nat:249> ) = true . Proof . intros . rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . assert ( <genH> : Nat . even <nat:246> = true ) . { auto . } assert ( <genH> : Nat . even <nat:114> = true ) . { auto . } assert ( <genH> : Nat . even <nat:308> = true ) . { auto . } assert ( <genH> : Nat . even <nat:442> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:246> * <var:Y> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:114> * <var:P> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:308> * <var:H> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:442> * <var:g> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:184> = true ) . { auto . } assert ( <genH> : Nat . even <nat:26> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:184> * <var:e> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:26> * <var:a> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:468> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:468> * <var:k> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:76> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:76> * <var:S> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 