\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Wherever we get $ <var:m> $ , $ <var:r> $ , $ <var:e> $ , $ <var:s> $ , $ <var:o> $ , $ <var:k> $ , $ <var:I> $ , $ <var:X> $ , $ <var:d> \geq <nat:2> $ such that for $ <var:u> \in \mathbb{Z}^+ $ , $ <var:k> \cdot <var:d> \cdot <var:X> \cdot <var:I> \cdot <var:m> \cdot <var:r> \cdot <var:e> \cdot <var:s> \cdot <var:o> = <var:u> $ , denote that $ <var:u> $ is <def:nine-composite> given some $ <var:e> $ , $ <var:k> $ , $ <var:I> $ , $ <var:m> $ , $ <var:r> $ , $ <var:X> $ , $ <var:d> $ , $ <var:o> $ , $ <var:s> \in \mathbb{Z}^+ $ . Then $ <var:u> = <nat:3991680> $ is a <def:nine-composite> natural number . \end{theorem} \begin{proof} Take $ <var:X> = <nat:4> $ , $ <var:o> = <nat:5> $ , $ <var:s> = <nat:6> $ , $ <var:d> = <nat:8> $ , $ <var:r> = <nat:9> $ , $ <var:I> = <nat:11> $ , $ <var:e> = <nat:3> $ , $ <var:m> = <nat:2> $ , and $ <var:k> = <nat:7> $ . Observe $ <nat:2> * <nat:9> * <nat:7> * <nat:4> * <nat:5> * <nat:8> * <nat:11> * <nat:6> * <nat:3> = <var:m> * <var:r> * <var:k> * <var:X> * <var:o> * <var:d> * <var:I> * <var:s> * <var:e> = <nat:3991680> $ . This hints <nat:3991680> is a <def:nine-composite> number . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:nine-composite> ( <var:u> : nat ) := exists <var:e> <var:k> <var:I> <var:m> <var:r> <var:X> <var:d> <var:o> <var:s> : nat , ( <var:m> >= <nat:2> ) /\ ( <var:r> >= <nat:2> ) /\ ( <var:e> >= <nat:2> ) /\ ( <var:s> >= <nat:2> ) /\ ( <var:o> >= <nat:2> ) /\ ( <var:k> >= <nat:2> ) /\ ( <var:I> >= <nat:2> ) /\ ( <var:X> >= <nat:2> ) /\ ( <var:d> >= <nat:2> ) /\ ( <var:k> * <var:d> * <var:X> * <var:I> * <var:m> * <var:r> * <var:e> * <var:s> * <var:o> = <var:u> ) . Theorem <genP:1> : <def:nine-composite> <nat:3991680> . Proof . unfold <def:nine-composite> . exists <nat:3> . exists <nat:7> . exists <nat:11> . exists <nat:2> . exists <nat:9> . exists <nat:4> . exists <nat:8> . exists <nat:5> . exists <nat:6> . repeat split . all : lia . Qed . 