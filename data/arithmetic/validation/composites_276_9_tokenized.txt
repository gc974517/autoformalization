\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:S> * <var:B> * <var:w> * <var:e> * <var:u> * <var:T> * <var:A> * <var:n> * <var:P> = <nat:39916800> $ for $ <var:P> $ , $ <var:n> $ , $ <var:e> $ , $ <var:u> $ , $ <var:S> $ , $ <var:T> $ , $ <var:A> $ , $ <var:B> $ , $ <var:w> \in \mathbb{Z}^+ $ such that $ <var:w> $ , $ <var:B> $ , $ <var:T> $ , $ <var:P> $ , $ <var:S> $ , $ <var:n> $ , $ <var:e> $ , $ <var:A> $ and $ <var:u> > <nat:1> $ . \end{theorem} \begin{proof} Assume $ <var:w> = <nat:3> $ , $ <var:e> = <nat:9> $ , $ <var:T> = <nat:8> $ , $ <var:B> = <nat:10> $ , $ <var:n> = <nat:5> $ , $ <var:u> = <nat:11> $ , $ <var:A> = <nat:12> $ , $ <var:P> = <nat:7> $ , and $ <var:S> = <nat:4> $ . We demonstrate the statement holds in view of $ <nat:39916800> = <var:T> \times <var:u> \times <var:S> \times <var:e> \times <var:P> \times <var:B> \times <var:A> \times <var:n> \times <var:w> $ and in consideration of $ <var:B> = <nat:10> $ , $ <var:e> = <nat:9> $ , $ <var:u> = <nat:11> $ , $ <var:S> = <nat:4> $ , $ <var:P> = <nat:7> $ , $ <var:A> = <nat:12> $ , $ <var:n> = <nat:5> $ , $ <var:T> = <nat:8> $ , $ <var:w> = <nat:3> > <nat:1> $ . \end{proof} \end{document} 
~
Require Import Lia . Theorem <genP:1> : exists <var:P> <var:n> <var:e> <var:u> <var:S> <var:T> <var:A> <var:B> <var:w> : nat , ( <var:S> * <var:B> * <var:w> * <var:e> * <var:u> * <var:T> * <var:A> * <var:n> * <var:P> = <nat:39916800> ) /\ ( <var:w> > <nat:1> ) /\ ( <var:B> > <nat:1> ) /\ ( <var:T> > <nat:1> ) /\ ( <var:P> > <nat:1> ) /\ ( <var:S> > <nat:1> ) /\ ( <var:n> > <nat:1> ) /\ ( <var:e> > <nat:1> ) /\ ( <var:A> > <nat:1> ) /\ ( <var:u> > <nat:1> ) . Proof . exists <nat:7> . exists <nat:5> . exists <nat:9> . exists <nat:11> . exists <nat:4> . exists <nat:8> . exists <nat:12> . exists <nat:10> . exists <nat:3> . assert ( <genH> : <nat:10> > <nat:1> ) . { lia . } assert ( <genH> : <nat:9> > <nat:1> ) . { lia . } assert ( <genH> : <nat:11> > <nat:1> ) . { lia . } assert ( <genH> : <nat:4> > <nat:1> ) . { lia . } assert ( <genH> : <nat:7> > <nat:1> ) . { lia . } assert ( <genH> : <nat:12> > <nat:1> ) . { lia . } assert ( <genH> : <nat:5> > <nat:1> ) . { lia . } assert ( <genH> : <nat:8> > <nat:1> ) . { lia . } assert ( <genH> : <nat:3> > <nat:1> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 