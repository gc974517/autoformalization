\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Taking every $ <var:F> $ , $ <var:S> $ , $ <var:A> $ , $ <var:a> $ , $ <var:d> $ , and $ <var:w> \in \mathbb{N} $ the formula $ <nat:490> <var:A> + <var:a> <nat:440> + <var:d> <nat:402> + <nat:202> <var:F> + <var:w> <nat:184> + <nat:24> <var:S> + <nat:377> $ is guaranteed to be odd . \end{theorem} \begin{proof} See that $ <nat:490> \cdot <var:A> $ is obviously even because taking the product between an even positive integer with a number in $ \mathbb{N} $ is an even whole number . Additionally , recall that the pairs $ <var:S> \cdot <nat:24> $ plus $ <nat:402> \cdot <var:d> $ are known to be even numbers . This fact is true from the knowledge taking the product between an even number in $ \mathbb{N} $ and some natural number must be even . We know the term $ <var:w> \cdot <nat:184> $ is clearly even . The pair $ <var:F> \cdot <nat:202> $ is known as an even whole number . Likewise , we know that the term $ <var:a> \cdot <nat:440> $ is known to be even since the product of an even number in $ \mathbb{N} $ with an arbitrary integer will be even . See $ <nat:377> $ is known to be an odd positive integer . We check the lemma must be true in accordance with the fact the summing between an even whole number and an odd number must be trivially an odd natural . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:F> <var:S> <var:A> <var:a> <var:d> <var:w> : nat , Nat . odd ( <nat:490> * <var:A> + <nat:440> * <var:a> + <nat:402> * <var:d> + <nat:202> * <var:F> + <nat:184> * <var:w> + <nat:24> * <var:S> + <nat:377> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:490> * <var:A> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:24> * <var:S> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:402> * <var:d> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:184> * <var:w> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:202> * <var:F> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:440> * <var:a> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . odd <nat:377> = true ) . { auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 