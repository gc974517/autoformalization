\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Assuming some natural terms $ <var:o> $ , $ <var:N> $ , $ <var:e> $ , $ <var:m> $ , $ <var:d> $ , and $ <var:M> $ $ <var:o> <nat:186> + <nat:259> + <var:m> <nat:350> + <var:M> <nat:126> + <var:e> <nat:498> + <nat:238> <var:N> + <var:d> <nat:404> $ will be odd . \end{theorem} \begin{proof} We work with the assumption that the formula $ <nat:498> <var:e> + <var:o> <nat:186> + <nat:350> <var:m> + <var:N> <nat:238> + <nat:126> <var:M> + <nat:404> <var:d> $ is even , from the fact the summing of even naturals together and an even integer is guaranteed to be even . The positive integers $ <nat:238> $ , $ <nat:404> $ , additionally $ <nat:498> $ are guaranteed to be even whole numbers Further , the coefficients $ <nat:350> $ in addition to $ <nat:186> $ will be even whole numbers Remember that the coefficient $ <nat:126> $ is obviously even and also because the product between even elements of $ \mathbb{Z}^+ $ with an arbitrary integer will be even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:o> <var:N> <var:e> <var:m> <var:d> <var:M> : nat , Nat . odd ( <nat:186> * <var:o> + <nat:350> * <var:m> + <nat:126> * <var:M> + <nat:498> * <var:e> + <nat:238> * <var:N> + <nat:404> * <var:d> + <nat:259> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:238> = true ) . { auto . } assert ( <genH> : Nat . even <nat:404> = true ) . { auto . } assert ( <genH> : Nat . even <nat:498> = true ) . { auto . } assert ( <genH> : Nat . even <nat:350> = true ) . { auto . } assert ( <genH> : Nat . even <nat:186> = true ) . { auto . } assert ( <genH> : Nat . even <nat:126> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:186> * <var:o> + <nat:350> * <var:m> + <nat:126> * <var:M> + <nat:498> * <var:e> + <nat:238> * <var:N> + <nat:404> * <var:d> ) = true ) . { repeat rewrite Nat . even_add . repeat rewrite Nat . even_mul . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . auto . Qed . 