\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:R> \times <nat:428> + <var:l> \times <nat:118> + <nat:374> \times <var:r> + <var:X> \times <nat:486> + <var:o> \times <nat:418> + <var:c> \times <nat:110> + <nat:211> + <var:f> \times <nat:466> + <var:s> \times <nat:296> $ must be odd . \end{theorem} \begin{proof} We utilize that $ <var:o> \times <nat:418> + <var:X> \times <nat:486> + <nat:428> \times <var:R> + <var:f> \times <nat:466> + <nat:296> \times <var:s> + <nat:118> \times <var:l> + <var:r> \times <nat:374> + <var:c> \times <nat:110> $ is even . The leading terms $ <nat:418> $ , $ <nat:486> $ , $ <nat:428> $ , $ <nat:466> $ , $ <nat:296> $ , $ <nat:118> $ , $ <nat:374> $ , and likewise $ <nat:110> $ will be even numbers in $ \mathbb{N} $ . Accordingly , the pairs $ <var:o> \cdot <nat:418> $ , $ <nat:486> \cdot <var:X> $ , $ <var:R> \cdot <nat:428> $ , $ <var:f> \cdot <nat:466> $ , $ <var:s> \cdot <nat:296> $ , $ <nat:118> \cdot <var:l> $ , $ <nat:374> \cdot <var:r> $ , and $ <var:c> \cdot <nat:110> $ will be even additionally . From the fact the addition of an even natural number and even whole numbers must be even , as well as as a consequence that taking the product between an even element of $ \mathbb{Z}^+ $ with a number in $ \mathbb{Z}^+ $ must be fundamentally an even number . We know that $ <nat:211> $ is clearly an odd number . We justify this claim holds . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:R> <var:l> <var:r> <var:X> <var:o> <var:c> <var:f> <var:s> : nat , Nat . odd ( <nat:428> * <var:R> + <nat:118> * <var:l> + <nat:374> * <var:r> + <nat:486> * <var:X> + <nat:418> * <var:o> + <nat:110> * <var:c> + <nat:466> * <var:f> + <nat:296> * <var:s> + <nat:211> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:418> = true ) . { auto . } assert ( <genH> : Nat . even <nat:486> = true ) . { auto . } assert ( <genH> : Nat . even <nat:428> = true ) . { auto . } assert ( <genH> : Nat . even <nat:466> = true ) . { auto . } assert ( <genH> : Nat . even <nat:296> = true ) . { auto . } assert ( <genH> : Nat . even <nat:118> = true ) . { auto . } assert ( <genH> : Nat . even <nat:374> = true ) . { auto . } assert ( <genH> : Nat . even <nat:110> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:418> * <var:o> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:486> * <var:X> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:428> * <var:R> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:466> * <var:f> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:296> * <var:s> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:118> * <var:l> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:374> * <var:r> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:110> * <var:c> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:428> * <var:R> + <nat:118> * <var:l> + <nat:374> * <var:r> + <nat:486> * <var:X> + <nat:418> * <var:o> + <nat:110> * <var:c> + <nat:466> * <var:f> + <nat:296> * <var:s> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } assert ( <genH> : Nat . odd <nat:211> = true ) . { auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . rewrite <genH> . auto . Qed . 