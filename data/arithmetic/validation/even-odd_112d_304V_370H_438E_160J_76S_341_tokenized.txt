\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:S> <nat:76> + <nat:160> <var:J> + <nat:370> <var:H> + <var:E> <nat:438> + <nat:304> <var:V> + <nat:341> + <nat:112> <var:d> $ is odd with any $ <var:d> $ , $ <var:E> $ , $ <var:J> $ , $ <var:V> $ , $ <var:S> $ , and $ <var:H> \in \mathbb{N} $ . \end{theorem} \begin{proof} It can be verified that the formula $ <nat:112> * <var:d> + <nat:370> * <var:H> + <nat:341> + <var:S> * <nat:76> + <var:E> * <nat:438> + <nat:160> * <var:J> + <var:V> * <nat:304> $ must be odd . We check the sum $ <nat:112> \cdot <var:d> + <nat:304> \cdot <var:V> + <nat:370> \cdot <var:H> + <var:E> \cdot <nat:438> + <nat:160> \cdot <var:J> + <var:S> \cdot <nat:76> $ is clearly even . The products $ <nat:370> \cdot <var:H> $ , $ <var:d> \cdot <nat:112> $ , $ <nat:76> \cdot <var:S> $ , as well as $ <var:J> \cdot <nat:160> $ are known as even . See $ <var:V> \cdot <nat:304> $ is known to be an even number in $ \mathbb{Z}^+ $ since the product of an even whole number and an arbitrary element of $ \mathbb{N} $ will be an even element of $ \mathbb{Z}^+ $ . The term $ <var:E> \cdot <nat:438> $ is guaranteed to be even as a consequence that the multiplication between an even element of $ \mathbb{N} $ and a number in $ \mathbb{N} $ is an even whole number . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:d> <var:E> <var:J> <var:V> <var:S> <var:H> : nat , Nat . odd ( <nat:76> * <var:S> + <nat:160> * <var:J> + <nat:370> * <var:H> + <nat:438> * <var:E> + <nat:304> * <var:V> + <nat:112> * <var:d> + <nat:341> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:370> * <var:H> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:112> * <var:d> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:76> * <var:S> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:160> * <var:J> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:304> * <var:V> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:438> * <var:E> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:76> * <var:S> + <nat:160> * <var:J> + <nat:370> * <var:H> + <nat:438> * <var:E> + <nat:304> * <var:V> + <nat:112> * <var:d> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . auto . Qed . 