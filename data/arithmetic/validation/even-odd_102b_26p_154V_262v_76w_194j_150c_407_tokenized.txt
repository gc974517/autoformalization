\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:V> <nat:154> + <var:w> <nat:76> + <var:v> <nat:262> + <var:j> <nat:194> + <nat:407> + <nat:150> <var:c> + <var:p> <nat:26> + <var:b> <nat:102> $ is guaranteed to be odd . \end{theorem} \begin{proof} Our lemma is proven from the fact $ <var:b> \cdot <nat:102> + <var:p> \cdot <nat:26> + <nat:154> \cdot <var:V> + <var:v> \cdot <nat:262> + <var:w> \cdot <nat:76> + <nat:194> \cdot <var:j> + <var:c> \cdot <nat:150> $ is known to be even , from the knowledge the addition between even numbers in $ \mathbb{Z}^+ $ concurrently and an even number is guaranteed to be an even element of $ \mathbb{N} $ . Recall that the product $ <var:w> \times <nat:76> $ is known as even . Further , see that the pairs $ <nat:262> \times <var:v> $ , $ <nat:150> \times <var:c> $ , $ <var:b> \times <nat:102> $ , $ <nat:154> \times <var:V> $ , plus $ <nat:26> \times <var:p> $ are obviously even . We know that the product $ <nat:194> \times <var:j> $ is trivially an even integer from the knowledge the multiplication of an even natural with any number is guaranteed to be an even number . in addition to from the knowledge multiplying between an even whole number with some element of $ \mathbb{Z}^+ $ must be by definition an even element of $ \mathbb{N} $ . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:V> <var:w> <var:v> <var:j> <var:c> <var:p> <var:b> : nat , Nat . odd ( <nat:154> * <var:V> + <nat:76> * <var:w> + <nat:262> * <var:v> + <nat:194> * <var:j> + <nat:150> * <var:c> + <nat:26> * <var:p> + <nat:102> * <var:b> + <nat:407> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:76> * <var:w> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:262> * <var:v> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:150> * <var:c> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:102> * <var:b> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:154> * <var:V> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:26> * <var:p> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:194> * <var:j> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:154> * <var:V> + <nat:76> * <var:w> + <nat:262> * <var:v> + <nat:194> * <var:j> + <nat:150> * <var:c> + <nat:26> * <var:p> + <nat:102> * <var:b> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . auto . Qed . 