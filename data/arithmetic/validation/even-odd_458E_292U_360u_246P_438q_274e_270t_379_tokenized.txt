\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:379> + <var:P> <nat:246> + <nat:360> <var:u> + <nat:292> <var:U> + <nat:270> <var:t> + <var:e> <nat:274> + <var:E> <nat:458> + <var:q> <nat:438> $ must be odd . \end{theorem} \begin{proof} We show our result holds . $ <nat:360> \cdot <var:u> + <var:e> \cdot <nat:274> + <nat:438> \cdot <var:q> + <nat:379> + <nat:270> \cdot <var:t> + <nat:292> \cdot <var:U> + <nat:246> \cdot <var:P> + <var:E> \cdot <nat:458> $ is clearly odd since the formula $ <var:P> * <nat:246> + <var:u> * <nat:360> + <nat:274> * <var:e> + <nat:270> * <var:t> + <var:U> * <nat:292> + <nat:438> * <var:q> + <var:E> * <nat:458> $ is clearly even . Recall that the terms $ <nat:292> \times <var:U> $ , $ <var:e> \times <nat:274> $ , additionally $ <nat:246> \times <var:P> $ are known to be even elements of $ \mathbb{Z}^+ $ . On top of this , notice $ <nat:360> \times <var:u> $ is clearly an even element of $ \mathbb{N} $ . What's more , the product $ <var:E> \times <nat:458> $ is clearly an even integer . This must be true from the fact taking the product of an even natural with a positive integer will be even . The product $ <var:q> \times <nat:438> $ is known as even . Furthermore , the term $ <var:t> \times <nat:270> $ is known as an even number . By reason that the addition of even whole numbers with an even element of $ \mathbb{Z}^+ $ is even , $ <var:E> * <nat:458> + <nat:292> * <var:U> + <var:u> * <nat:360> + <nat:246> * <var:P> + <var:q> * <nat:438> + <nat:274> * <var:e> + <var:t> * <nat:270> $ is even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:P> <var:u> <var:U> <var:t> <var:e> <var:E> <var:q> : nat , Nat . odd ( <nat:246> * <var:P> + <nat:360> * <var:u> + <nat:292> * <var:U> + <nat:270> * <var:t> + <nat:274> * <var:e> + <nat:458> * <var:E> + <nat:438> * <var:q> + <nat:379> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:292> * <var:U> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:274> * <var:e> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:246> * <var:P> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:360> * <var:u> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:458> * <var:E> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:438> * <var:q> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:270> * <var:t> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:246> * <var:P> + <nat:360> * <var:u> + <nat:292> * <var:U> + <nat:270> * <var:t> + <nat:274> * <var:e> + <nat:458> * <var:E> + <nat:438> * <var:q> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . auto . Qed . 