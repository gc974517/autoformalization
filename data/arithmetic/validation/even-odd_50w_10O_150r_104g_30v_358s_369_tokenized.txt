\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:50> * <var:w> + <var:r> * <nat:150> + <nat:104> * <var:g> + <var:v> * <nat:30> + <nat:10> * <var:O> + <nat:358> * <var:s> + <nat:369> $ is guaranteed to be odd using natural numbers $ <var:w> $ , $ <var:s> $ , $ <var:O> $ , $ <var:v> $ , $ <var:r> $ , and $ <var:g> $ . \end{theorem} \begin{proof} The totaling of even whole numbers successively and an odd integer must be itself an odd natural . So , the proposition must be true . Observe $ <nat:369> $ is guaranteed to be odd . This proposition is true from the knowledge $ <nat:30> \times <var:v> + <nat:150> \times <var:r> + <var:g> \times <nat:104> + <var:w> \times <nat:50> + <nat:10> \times <var:O> + <nat:358> \times <var:s> $ is even , as a consequence that the summing of even positive integers together with an even number will be even . $ <nat:50> * <var:w> $ is trivially an even number . This claim holds from the knowledge the integer $ <nat:50> $ is guaranteed to be even . Remember the positive integer $ <nat:104> $ is trivially an even number in $ \mathbb{N} $ . Therefore , the product $ <nat:104> * <var:g> $ will be even as well . The terms $ <var:r> * <nat:150> $ , $ <nat:30> * <var:v> $ , and $ <nat:358> * <var:s> $ are obviously even . This claim must be true by reason that the whole numbers $ <nat:150> $ , $ <nat:30> $ , and likewise $ <nat:358> $ are even natural numbers . See the term $ <nat:10> * <var:O> $ is guaranteed to be even . This must be true as a consequence that taking the product between an even natural number and an arbitrary natural number is clearly an even positive integer additionally the leading term $ <nat:10> $ is known as even . and by reason that the product of even positive integers and any element of $ \mathbb{N} $ will be an even positive integer this claim must be true . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:w> <var:s> <var:O> <var:v> <var:r> <var:g> : nat , Nat . odd ( <nat:50> * <var:w> + <nat:150> * <var:r> + <nat:104> * <var:g> + <nat:30> * <var:v> + <nat:10> * <var:O> + <nat:358> * <var:s> + <nat:369> ) = true . Proof . intros . rewrite Nat . odd_add . assert ( <genH> : Nat . odd <nat:369> = true ) . { auto . } assert ( <genH> : Nat . even <nat:50> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:50> * <var:w> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:104> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:104> * <var:g> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:150> = true ) . { auto . } assert ( <genH> : Nat . even <nat:30> = true ) . { auto . } assert ( <genH> : Nat . even <nat:358> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:150> * <var:r> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:30> * <var:v> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:358> * <var:s> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:10> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:10> * <var:O> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:50> * <var:w> + <nat:150> * <var:r> + <nat:104> * <var:g> + <nat:30> * <var:v> + <nat:10> * <var:O> + <nat:358> * <var:s> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite <- Nat . negb_even . rewrite <genH> . rewrite <genH> . auto . Qed . 