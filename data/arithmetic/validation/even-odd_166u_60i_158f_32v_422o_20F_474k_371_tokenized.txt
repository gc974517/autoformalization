\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:20> \cdot <var:F> + <nat:422> \cdot <var:o> + <nat:60> \cdot <var:i> + <nat:371> + <nat:158> \cdot <var:f> + <nat:474> \cdot <var:k> + <var:v> \cdot <nat:32> + <var:u> \cdot <nat:166> $ is guaranteed to be odd . \end{theorem} \begin{proof} Observe that the addition between even elements of $ \mathbb{Z}^+ $ successively and an odd integer must be odd . Take note $ <nat:371> $ is odd . $ <var:v> \cdot <nat:32> + <nat:371> + <var:i> \cdot <nat:60> + <nat:158> \cdot <var:f> + <var:u> \cdot <nat:166> + <nat:20> \cdot <var:F> + <nat:474> \cdot <var:k> + <nat:422> \cdot <var:o> $ is guaranteed to be odd from the knowledge the sum $ <var:u> \cdot <nat:166> + <nat:60> \cdot <var:i> + <var:f> \cdot <nat:158> + <var:v> \cdot <nat:32> + <nat:422> \cdot <var:o> + <var:F> \cdot <nat:20> + <var:k> \cdot <nat:474> $ is guaranteed to be even , because the totaling of an even number with an even element of $ \mathbb{N} $ is in itself an even integer . Recall the whole numbers $ <nat:20> $ , $ <nat:422> $ , $ <nat:158> $ , $ <nat:474> $ , $ <nat:166> $ , and likewise $ <nat:60> $ are guaranteed to be even Remember that the positive integer $ <nat:32> $ is trivially an even integer and likewise because multiplying between even positive integers with an arbitrary integer is guaranteed to be an even element of $ \mathbb{N} $ the main result is proven . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:F> <var:o> <var:i> <var:f> <var:k> <var:v> <var:u> : nat , Nat . odd ( <nat:20> * <var:F> + <nat:422> * <var:o> + <nat:60> * <var:i> + <nat:158> * <var:f> + <nat:474> * <var:k> + <nat:32> * <var:v> + <nat:166> * <var:u> + <nat:371> ) = true . Proof . intros . rewrite Nat . odd_add . assert ( <genH> : Nat . odd <nat:371> = true ) . { auto . } assert ( <genH> : Nat . even <nat:20> = true ) . { auto . } assert ( <genH> : Nat . even <nat:422> = true ) . { auto . } assert ( <genH> : Nat . even <nat:158> = true ) . { auto . } assert ( <genH> : Nat . even <nat:474> = true ) . { auto . } assert ( <genH> : Nat . even <nat:166> = true ) . { auto . } assert ( <genH> : Nat . even <nat:60> = true ) . { auto . } assert ( <genH> : Nat . even <nat:32> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:20> * <var:F> + <nat:422> * <var:o> + <nat:60> * <var:i> + <nat:158> * <var:f> + <nat:474> * <var:k> + <nat:32> * <var:v> + <nat:166> * <var:u> ) = true ) . { repeat rewrite Nat . even_add . repeat rewrite Nat . even_mul . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite <- Nat . negb_even . rewrite <genH> . rewrite <genH> . auto . Qed . 