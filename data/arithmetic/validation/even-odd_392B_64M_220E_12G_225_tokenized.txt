\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:225> + <var:M> \times <nat:64> + <var:G> \times <nat:12> + <nat:220> \times <var:E> + <nat:392> \times <var:B> $ is odd assuming every unknowns $ <var:E> $ , $ <var:G> $ , $ <var:M> $ , and $ <var:B> $ . \end{theorem} \begin{proof} We justify the expression $ <nat:220> * <var:E> + <var:M> * <nat:64> + <nat:225> + <nat:12> * <var:G> + <nat:392> * <var:B> $ is guaranteed to be odd . It can be proven that that $ <nat:225> + <nat:392> \cdot <var:B> + <var:G> \cdot <nat:12> + <var:M> \cdot <nat:64> + <var:E> \cdot <nat:220> $ is known as odd because $ <var:B> * <nat:392> + <var:M> * <nat:64> + <nat:220> * <var:E> + <var:G> * <nat:12> $ is obviously even . The coefficient $ <nat:64> $ is known as an even number We know that the numbers $ <nat:12> $ in addition to $ <nat:220> $ are guaranteed to be even The leading term $ <nat:392> $ is known to be an even number in $ \mathbb{N} $ Our main result holds as a consequence that taking the product of even elements of $ \mathbb{Z}^+ $ and an arbitrary number in $ \mathbb{Z}^+ $ is even . Remember that the summing between an even positive integer and an odd number is odd . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:E> <var:G> <var:M> <var:B> : nat , Nat . odd ( <nat:64> * <var:M> + <nat:12> * <var:G> + <nat:220> * <var:E> + <nat:392> * <var:B> + <nat:225> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:64> = true ) . { auto . } assert ( <genH> : Nat . even <nat:12> = true ) . { auto . } assert ( <genH> : Nat . even <nat:220> = true ) . { auto . } assert ( <genH> : Nat . even <nat:392> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:64> * <var:M> + <nat:12> * <var:G> + <nat:220> * <var:E> + <nat:392> * <var:B> ) = true ) . { repeat rewrite Nat . even_add . repeat rewrite Nat . even_mul . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . auto . Qed . 