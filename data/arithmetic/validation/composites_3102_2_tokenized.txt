\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \newtheorem{definition}{Definition} \begin{document} \begin{definition} Assuming $ \exists <var:o> $ , $ <var:D> \in \mathbb{Z}^+ $ then define that some integer $ <var:K> $ will be called a <def:two-composite> number when $ <var:K> = <var:o> \cdot <var:D> $ and unique terms are greater than or equivalent to <nat:2> . \end{definition} \begin{theorem} The whole number <nat:33> is <def:two-composite> . \end{theorem} \begin{proof} We verify <nat:33> is a <def:two-composite> integer as $ <nat:3> $ , and $ <nat:11> $ are greater than or equivalent to <nat:2> as well as considering $ <nat:33> = <nat:3> \cdot <nat:11> $ . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:two-composite> ( <var:K> : nat ) := exists <var:o> <var:D> : nat , ( <var:K> = <var:o> * <var:D> ) /\ ( <var:o> >= <nat:2> ) /\ ( <var:D> >= <nat:2> ) . Theorem <genP:1> : <def:two-composite> <nat:33> . Proof . unfold <def:two-composite> . assert ( <genH> : <nat:3> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:11> >= <nat:2> ) . { lia . } exists <nat:11> . exists <nat:3> . repeat split . all : try apply <genH> . all : try apply <genH> . Qed . 