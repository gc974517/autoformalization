\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:128> * <var:H> + <var:S> * <nat:204> + <nat:41> + <var:u> * <nat:238> + <var:V> * <nat:140> + <var:x> * <nat:6> + <var:Y> * <nat:134> + <var:N> * <nat:234> + <nat:492> * <var:l> $ will be odd taking any $ <var:l> $ , $ <var:V> $ , $ <var:Y> $ , $ <var:x> $ , $ <var:S> $ , $ <var:H> $ , $ <var:N> $ , and $ <var:u> $ . \end{theorem} \begin{proof} Remember that the positive integer $ <nat:134> $ is known as an even positive integer Further , the coefficients $ <nat:492> $ in addition to $ <nat:128> $ are obviously even On top of this , the whole number $ <nat:140> $ is known as an even whole number Take note the numbers $ <nat:204> $ , $ <nat:238> $ , plus $ <nat:234> $ are obviously even natural numbers Likewise , take note the leading term $ <nat:6> $ is guaranteed to be even The addition of even whole numbers successively with an odd positive integer must be odd . Then , the summation $ <nat:238> \cdot <var:u> + <var:l> \cdot <nat:492> + <nat:41> + <var:V> \cdot <nat:140> + <nat:128> \cdot <var:H> + <var:S> \cdot <nat:204> + <nat:6> \cdot <var:x> + <nat:134> \cdot <var:Y> + <nat:234> \cdot <var:N> $ must be odd . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:l> <var:V> <var:Y> <var:x> <var:S> <var:H> <var:N> <var:u> : nat , Nat . odd ( <nat:128> * <var:H> + <nat:204> * <var:S> + <nat:238> * <var:u> + <nat:140> * <var:V> + <nat:6> * <var:x> + <nat:134> * <var:Y> + <nat:234> * <var:N> + <nat:492> * <var:l> + <nat:41> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:134> = true ) . { auto . } assert ( <genH> : Nat . even <nat:492> = true ) . { auto . } assert ( <genH> : Nat . even <nat:128> = true ) . { auto . } assert ( <genH> : Nat . even <nat:140> = true ) . { auto . } assert ( <genH> : Nat . even <nat:204> = true ) . { auto . } assert ( <genH> : Nat . even <nat:238> = true ) . { auto . } assert ( <genH> : Nat . even <nat:234> = true ) . { auto . } assert ( <genH> : Nat . even <nat:6> = true ) . { auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . repeat rewrite Nat . even_mul . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 