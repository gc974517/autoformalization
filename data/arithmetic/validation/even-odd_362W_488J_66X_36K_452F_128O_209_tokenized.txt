\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Using any positive terms $ <var:F> $ , $ <var:J> $ , $ <var:W> $ , $ <var:O> $ , $ <var:X> $ , and $ <var:K> $ the sum $ <var:O> \times <nat:128> + <var:W> \times <nat:362> + <nat:209> + <var:J> \times <nat:488> + <var:K> \times <nat:36> + <var:X> \times <nat:66> + <nat:452> \times <var:F> $ will be odd . \end{theorem} \begin{proof} The summation $ <var:W> * <nat:362> + <nat:66> * <var:X> + <nat:36> * <var:K> + <nat:128> * <var:O> + <var:F> * <nat:452> + <nat:209> + <var:J> * <nat:488> $ is obviously odd because $ <nat:128> * <var:O> + <nat:66> * <var:X> + <nat:362> * <var:W> + <nat:488> * <var:J> + <var:K> * <nat:36> + <var:F> * <nat:452> $ is clearly even . The leading terms $ <nat:128> $ , $ <nat:66> $ , $ <nat:362> $ , $ <nat:488> $ , $ <nat:36> $ , plus $ <nat:452> $ are known as even . Then , the terms $ <nat:128> <var:O> $ , $ <nat:66> <var:X> $ , $ <nat:362> <var:W> $ , $ <nat:488> <var:J> $ , $ <var:K> <nat:36> $ , plus $ <var:F> <nat:452> $ must be even as well . The formula $ <nat:362> \cdot <var:W> + <nat:488> \cdot <var:J> + <var:X> \cdot <nat:66> + <nat:36> \cdot <var:K> + <nat:452> \cdot <var:F> + <var:O> \cdot <nat:128> $ is guaranteed to be even because multiplying of even whole numbers with a number in $ \mathbb{Z}^+ $ will be even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:F> <var:J> <var:W> <var:O> <var:X> <var:K> : nat , Nat . odd ( <nat:128> * <var:O> + <nat:362> * <var:W> + <nat:488> * <var:J> + <nat:36> * <var:K> + <nat:66> * <var:X> + <nat:452> * <var:F> + <nat:209> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:128> = true ) . { auto . } assert ( <genH> : Nat . even <nat:66> = true ) . { auto . } assert ( <genH> : Nat . even <nat:362> = true ) . { auto . } assert ( <genH> : Nat . even <nat:488> = true ) . { auto . } assert ( <genH> : Nat . even <nat:36> = true ) . { auto . } assert ( <genH> : Nat . even <nat:452> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:128> * <var:O> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:66> * <var:X> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:362> * <var:W> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:488> * <var:J> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:36> * <var:K> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:452> * <var:F> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:128> * <var:O> + <nat:362> * <var:W> + <nat:488> * <var:J> + <nat:36> * <var:K> + <nat:66> * <var:X> + <nat:452> * <var:F> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . auto . Qed . 