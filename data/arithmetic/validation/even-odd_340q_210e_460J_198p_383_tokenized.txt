\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:q> <nat:340> + <nat:198> <var:p> + <nat:383> + <var:J> <nat:460> + <var:e> <nat:210> $ is guaranteed to be odd . \end{theorem} \begin{proof} The addition between an even element of $ \mathbb{N} $ with an odd whole number is odd . This lemma holds as a consequence that $ <var:q> \cdot <nat:340> + <nat:210> \cdot <var:e> + <nat:460> \cdot <var:J> + <nat:198> \cdot <var:p> $ is clearly even , as a consequence that the summing of an even number and an even integer must be even . $ <var:q> <nat:340> $ is known to be even from the fact multiplying between an even element of $ \mathbb{Z}^+ $ and some number in $ \mathbb{Z}^+ $ is an even integer . See the products $ <var:J> <nat:460> $ and moreover $ <var:e> <nat:210> $ are known to be even positive integers . This claim must be true from the fact taking the product of an even whole number and an arbitrary whole number must be even . Additionally , see the pair $ <nat:198> <var:p> $ is guaranteed to be even because the product of an even element of $ \mathbb{N} $ and a element of $ \mathbb{Z}^+ $ will be even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:q> <var:p> <var:J> <var:e> : nat , Nat . odd ( <nat:340> * <var:q> + <nat:198> * <var:p> + <nat:460> * <var:J> + <nat:210> * <var:e> + <nat:383> ) = true . Proof . intros . rewrite Nat . odd_add . assert ( <genH> : Nat . even ( <nat:340> * <var:q> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:460> * <var:J> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:210> * <var:e> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:198> * <var:p> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:340> * <var:q> + <nat:198> * <var:p> + <nat:460> * <var:J> + <nat:210> * <var:e> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite <- Nat . negb_even . rewrite <genH> . auto . Qed . 