\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \newtheorem{definition}{Definition} \begin{document} \begin{definition} Wherever we get $ <var:L> * <var:Q> * <var:O> * <var:h> * <var:v> * <var:d> * <var:A> * <var:t> = <var:S> $ with some number $ <var:S> $ plus where $ <var:L> $ , $ <var:d> $ , $ <var:t> $ , $ <var:v> $ , $ <var:h> $ , $ <var:A> $ , $ <var:Q> $ and $ <var:O> \geq <nat:2> $ taking some $ <var:t> $ , $ <var:Q> $ , $ <var:O> $ , $ <var:A> $ , $ <var:v> $ , $ <var:L> $ , $ <var:h> $ , $ <var:d> \in \mathbb{N} $ , then we denote that $ <var:S> $ is <def:eight-composite> . \end{definition} \begin{theorem} $ <nat:3991680> = <var:S> $ is <def:eight-composite> . \end{theorem} \begin{proof} Remember a <def:eight-composite> positive integer is the multiplication of natural numbers $ <var:A> $ , $ <var:v> $ , $ <var:O> $ , $ <var:Q> $ , $ <var:d> $ , $ <var:L> $ , $ <var:t> $ , $ <var:h> $ where $ <var:A> $ , $ <var:Q> $ , $ <var:O> $ , $ <var:t> $ , $ <var:v> $ , $ <var:L> $ , $ <var:h> $ and $ <var:d> \geq <nat:2> $ . Allow $ <var:A> = <nat:8> $ , $ <var:t> = <nat:4> $ , $ <var:h> = <nat:10> $ , $ <var:d> = <nat:6> $ , $ <var:Q> = <nat:9> $ , $ <var:v> = <nat:11> $ , $ <var:L> = <nat:7> $ , $ <var:O> = <nat:3> $ . Observe that $ <var:A> = <nat:8> $ , $ <var:d> = <nat:6> $ , $ <var:v> = <nat:11> $ , $ <var:O> = <nat:3> $ , $ <var:h> = <nat:10> $ , $ <var:t> = <nat:4> $ , $ <var:L> = <nat:7> $ and $ <var:Q> = <nat:9> \geq <nat:2> $ . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:eight-composite> ( <var:S> : nat ) := exists <var:t> <var:Q> <var:O> <var:A> <var:v> <var:L> <var:h> <var:d> : nat , ( <var:L> * <var:Q> * <var:O> * <var:h> * <var:v> * <var:d> * <var:A> * <var:t> = <var:S> ) /\ ( <var:L> >= <nat:2> ) /\ ( <var:d> >= <nat:2> ) /\ ( <var:t> >= <nat:2> ) /\ ( <var:v> >= <nat:2> ) /\ ( <var:h> >= <nat:2> ) /\ ( <var:A> >= <nat:2> ) /\ ( <var:Q> >= <nat:2> ) /\ ( <var:O> >= <nat:2> ) . Theorem <genP:1> : <def:eight-composite> <nat:3991680> . Proof . unfold <def:eight-composite> . exists <nat:4> . exists <nat:9> . exists <nat:3> . exists <nat:8> . exists <nat:11> . exists <nat:7> . exists <nat:10> . exists <nat:6> . assert ( <genH> : <nat:8> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:6> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:11> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:3> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:10> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:4> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:7> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:9> >= <nat:2> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 