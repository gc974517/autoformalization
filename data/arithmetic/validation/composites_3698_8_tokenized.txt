\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \newtheorem{definition}{Definition} \begin{document} \begin{definition} Take $ <var:X> $ , $ <var:S> $ , $ <var:Y> $ , $ <var:B> $ , $ <var:r> $ , $ <var:K> $ , $ <var:M> $ , $ <var:C> \in \mathbb{Z}^+ $ . We define that $ <var:t> \in \mathbb{N} $ will be considered as a <def:eight-composite> integer assuming $ <var:B> * <var:X> * <var:S> * <var:M> * <var:C> * <var:Y> * <var:r> * <var:K> = <var:t> $ as well as unique terms are more than or equal to <nat:2> . \end{definition} \begin{theorem} <nat:3628800> is <def:eight-composite> . \end{theorem} \begin{proof} Allow $ <var:B> = <nat:6> $ , $ <var:X> = <nat:12> $ , $ <var:C> = <nat:9> $ , $ <var:S> = <nat:10> $ , $ <var:K> = <nat:5> $ , $ <var:M> = <nat:2> $ , $ <var:Y> = <nat:8> $ , and $ <var:r> = <nat:7> $ . We confirm <nat:3628800> is <def:eight-composite> as $ <var:r> \cdot <var:M> \cdot <var:S> \cdot <var:C> \cdot <var:Y> \cdot <var:K> \cdot <var:X> \cdot <var:B> = <nat:3628800> $ plus in view of $ <nat:10> $ , $ <nat:5> $ , $ <nat:8> $ , $ <nat:9> $ , $ <nat:6> $ , $ <nat:2> $ , $ <nat:7> $ and $ <nat:12> \geq <nat:2> $ . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:eight-composite> ( <var:t> : nat ) := exists <var:X> <var:S> <var:Y> <var:B> <var:r> <var:K> <var:M> <var:C> : nat , ( <var:B> * <var:X> * <var:S> * <var:M> * <var:C> * <var:Y> * <var:r> * <var:K> = <var:t> ) /\ ( <var:X> >= <nat:2> ) /\ ( <var:S> >= <nat:2> ) /\ ( <var:Y> >= <nat:2> ) /\ ( <var:B> >= <nat:2> ) /\ ( <var:r> >= <nat:2> ) /\ ( <var:K> >= <nat:2> ) /\ ( <var:M> >= <nat:2> ) /\ ( <var:C> >= <nat:2> ) . Theorem <genP:1> : <def:eight-composite> <nat:3628800> . Proof . unfold <def:eight-composite> . exists <nat:12> . exists <nat:10> . exists <nat:8> . exists <nat:6> . exists <nat:7> . exists <nat:5> . exists <nat:2> . exists <nat:9> . assert ( <genH> : <nat:10> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:5> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:8> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:9> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:6> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:2> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:7> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:12> >= <nat:2> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 