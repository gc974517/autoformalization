\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} With all positive terms $ <var:I> $ , $ <var:m> $ , $ <var:h> $ , $ <var:A> $ , $ <var:P> $ , and $ <var:a> $ $ <var:P> * <nat:344> + <var:m> * <nat:242> + <var:h> * <nat:78> + <nat:46> * <var:A> + <nat:144> * <var:a> + <nat:228> + <var:I> * <nat:6> $ is guaranteed to be even . \end{theorem} \begin{proof} See that the products $ <nat:46> <var:A> $ , $ <var:h> <nat:78> $ , $ <nat:6> <var:I> $ , $ <var:m> <nat:242> $ , and moreover $ <nat:144> <var:a> $ are even since the whole numbers $ <nat:46> $ , $ <nat:78> $ , $ <nat:6> $ , $ <nat:242> $ , additionally $ <nat:144> $ will be even . We know that $ <var:P> <nat:344> $ is guaranteed to be even . This fact must be true because the product of an even positive integer with some element of $ \mathbb{Z}^+ $ will be an even number in $ \mathbb{N} $ and moreover the coefficient $ <nat:344> $ is guaranteed to be even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:I> <var:m> <var:h> <var:A> <var:P> <var:a> : nat , Nat . even ( <nat:344> * <var:P> + <nat:242> * <var:m> + <nat:78> * <var:h> + <nat:46> * <var:A> + <nat:144> * <var:a> + <nat:6> * <var:I> + <nat:228> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:46> = true ) . { auto . } assert ( <genH> : Nat . even <nat:78> = true ) . { auto . } assert ( <genH> : Nat . even <nat:6> = true ) . { auto . } assert ( <genH> : Nat . even <nat:242> = true ) . { auto . } assert ( <genH> : Nat . even <nat:144> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:46> * <var:A> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:78> * <var:h> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:6> * <var:I> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:242> * <var:m> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:144> * <var:a> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:344> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:344> * <var:P> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 