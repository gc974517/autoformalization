\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Allow $ <var:K> $ , $ <var:N> $ , $ <var:I> $ , $ <var:L> $ , $ <var:f> \in \mathbb{Z}^+ $ . We denote that some number $ <var:j> $ is defined as a <def:five-composite> positive integer assuming $ <var:j> = <var:f> \cdot <var:L> \cdot <var:K> \cdot <var:I> \cdot <var:N> $ plus so that $ <var:K> $ , $ <var:L> $ , $ <var:f> $ , $ <var:I> $ and $ <var:N> \geq <nat:2> $ . Hence <nat:1152> is a <def:five-composite> natural number . \end{theorem} \begin{proof} Remember that a <def:five-composite> whole number is the multiplication between integers $ <var:f> $ , $ <var:I> $ , $ <var:L> $ , $ <var:K> $ and $ <var:N> $ so that $ <var:f> $ , $ <var:N> $ , $ <var:L> $ , $ <var:K> $ , and $ <var:I> \geq <nat:2> $ . We confirm the proposition is true considering $ <nat:1152> = <var:f> \times <var:N> \times <var:K> \times <var:L> \times <var:I> $ implies $ <var:K> = <nat:2> $ , $ <var:L> = <nat:8> $ , $ <var:f> = <nat:4> $ , $ <var:I> = <nat:6> $ and $ <var:N> = <nat:3> $ plus by reason of $ <nat:2> $ , $ <nat:8> $ , $ <nat:3> $ , $ <nat:4> $ and $ <nat:6> $ are greater than or equivalent to <nat:2> . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:five-composite> ( <var:j> : nat ) := exists <var:K> <var:N> <var:I> <var:L> <var:f> : nat , ( <var:j> = <var:f> * <var:L> * <var:K> * <var:I> * <var:N> ) /\ ( <var:K> >= <nat:2> ) /\ ( <var:L> >= <nat:2> ) /\ ( <var:f> >= <nat:2> ) /\ ( <var:I> >= <nat:2> ) /\ ( <var:N> >= <nat:2> ) . Theorem <genP:1> : <def:five-composite> <nat:1152> . Proof . unfold <def:five-composite> . exists <nat:2> . exists <nat:3> . exists <nat:6> . exists <nat:8> . exists <nat:4> . assert ( <genH> : <nat:2> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:8> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:3> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:4> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:6> >= <nat:2> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 