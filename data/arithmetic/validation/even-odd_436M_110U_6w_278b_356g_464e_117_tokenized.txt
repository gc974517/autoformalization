\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Using all positive numbers $ <var:w> $ , $ <var:U> $ , $ <var:M> $ , $ <var:g> $ , $ <var:b> $ , and $ <var:e> $ the summation $ <nat:464> \times <var:e> + <nat:6> \times <var:w> + <var:b> \times <nat:278> + <var:U> \times <nat:110> + <var:M> \times <nat:436> + <nat:117> + <nat:356> \times <var:g> $ is guaranteed to be odd . \end{theorem} \begin{proof} See $ <nat:117> $ is obviously an odd number . Remember the summation between an even element of $ \mathbb{N} $ and an odd element of $ \mathbb{Z}^+ $ will be odd . The product $ <nat:436> <var:M> $ is clearly even because taking the product between an even element of $ \mathbb{N} $ and an arbitrary natural number must be even , which is proven by reason that the number $ <nat:436> $ is even . In addition to this , see that $ <nat:110> <var:U> $ is guaranteed to be an even element of $ \mathbb{Z}^+ $ . This fact holds by reason that the coefficient $ <nat:110> $ is clearly by definition an even number in $ \mathbb{Z}^+ $ . The positive integer $ <nat:6> $ is trivially an even element of $ \mathbb{N} $ . Thus , the pair $ <nat:6> <var:w> $ will be even as well . Likewise , the coefficient $ <nat:278> $ is obviously an even natural number . Thus , the pair $ <nat:278> <var:b> $ will be even too . Building on , the pair $ <nat:356> <var:g> $ is trivially an even natural number from the knowledge taking the product between an even whole number and a number is by itself an even natural number , which is true from the fact the leading term $ <nat:356> $ is an even element of $ \mathbb{Z}^+ $ . Notice that the product $ <var:e> <nat:464> $ is known as even . This must be true since the number $ <nat:464> $ is an even whole number . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:w> <var:U> <var:M> <var:g> <var:b> <var:e> : nat , Nat . odd ( <nat:464> * <var:e> + <nat:6> * <var:w> + <nat:278> * <var:b> + <nat:110> * <var:U> + <nat:436> * <var:M> + <nat:356> * <var:g> + <nat:117> ) = true . Proof . intros . assert ( <genH> : Nat . odd <nat:117> = true ) . { auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . assert ( <genH> : Nat . even <nat:436> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:436> * <var:M> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:110> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:110> * <var:U> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:6> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:6> * <var:w> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:278> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:278> * <var:b> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:356> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:356> * <var:g> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:464> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:464> * <var:e> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 