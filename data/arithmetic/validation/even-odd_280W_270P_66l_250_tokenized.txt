\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:W> <nat:280> + <var:l> <nat:66> + <nat:250> + <nat:270> <var:P> $ will be even using some terms $ <var:P> $ , $ <var:l> $ , and $ <var:W> $ . \end{theorem} \begin{proof} We know $ <nat:250> $ is an even natural number . The adding between an even number and an even element of $ \mathbb{Z}^+ $ is guaranteed to be in itself an even positive integer . For this reason , the sum $ <nat:66> <var:l> + <nat:270> <var:P> + <nat:280> <var:W> + <nat:250> $ by itself must be even . We employ the fact that the formula $ <var:l> \times <nat:66> + <var:W> \times <nat:280> + <nat:270> \times <var:P> + <nat:250> $ is clearly even from the fact $ <nat:280> \cdot <var:W> + <var:P> \cdot <nat:270> + <var:l> \cdot <nat:66> $ is known as even . The leading terms $ <nat:280> $ , $ <nat:270> $ , and moreover $ <nat:66> $ are known to be even . Accordingly , the products $ <nat:280> <var:W> $ , $ <nat:270> <var:P> $ , as well as $ <var:l> <nat:66> $ is guaranteed to be even additionally . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:P> <var:l> <var:W> : nat , Nat . even ( <nat:280> * <var:W> + <nat:66> * <var:l> + <nat:270> * <var:P> + <nat:250> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:250> = true ) . { auto . } rewrite Nat . even_add . assert ( <genH> : Nat . even <nat:280> = true ) . { auto . } assert ( <genH> : Nat . even <nat:270> = true ) . { auto . } assert ( <genH> : Nat . even <nat:66> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:280> * <var:W> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:270> * <var:P> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:66> * <var:l> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:280> * <var:W> + <nat:66> * <var:l> + <nat:270> * <var:P> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite <genH> . rewrite <genH> . auto . Qed . 