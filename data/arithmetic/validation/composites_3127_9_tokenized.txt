\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} There are $ <var:H> $ , $ <var:n> $ , $ <var:F> $ , $ <var:N> $ , $ <var:L> $ , $ <var:l> $ , $ <var:I> $ , $ <var:u> $ and $ <var:f> \in \mathbb{Z}^+ $ such that $ <var:u> $ , $ <var:n> $ , $ <var:F> $ , $ <var:I> $ , $ <var:L> $ , $ <var:N> $ , $ <var:H> $ , $ <var:f> $ , and $ <var:l> \geq <nat:2> $ as well as such that $ <var:N> \cdot <var:n> \cdot <var:L> \cdot <var:f> \cdot <var:H> \cdot <var:u> \cdot <var:l> \cdot <var:F> \cdot <var:I> = <nat:7257600> $ . \end{theorem} \begin{proof} Observe that $ <nat:12> * <nat:7> * <nat:5> * <nat:3> * <nat:8> * <nat:10> * <nat:4> * <nat:9> * <nat:2> = <nat:7257600> $ . Moreover note $ <nat:4> $ , $ <nat:2> $ , $ <nat:9> $ , $ <nat:3> $ , $ <nat:5> $ , $ <nat:7> $ , $ <nat:10> $ , $ <nat:12> $ and $ <nat:8> \geq <nat:2> $ . This suggests our principle holds . \end{proof} \end{document} 
~
Require Import Lia . Theorem <genP:1> : exists <var:H> <var:n> <var:F> <var:N> <var:L> <var:l> <var:I> <var:u> <var:f> : nat , ( <var:u> >= <nat:2> ) /\ ( <var:n> >= <nat:2> ) /\ ( <var:F> >= <nat:2> ) /\ ( <var:I> >= <nat:2> ) /\ ( <var:L> >= <nat:2> ) /\ ( <var:N> >= <nat:2> ) /\ ( <var:H> >= <nat:2> ) /\ ( <var:f> >= <nat:2> ) /\ ( <var:l> >= <nat:2> ) /\ ( <var:N> * <var:n> * <var:L> * <var:f> * <var:H> * <var:u> * <var:l> * <var:F> * <var:I> = <nat:7257600> ) . Proof . exists <nat:9> . exists <nat:4> . exists <nat:12> . exists <nat:8> . exists <nat:3> . exists <nat:10> . exists <nat:5> . exists <nat:2> . exists <nat:7> . assert ( <genH> : <nat:4> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:2> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:9> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:3> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:5> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:7> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:10> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:12> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:8> >= <nat:2> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 