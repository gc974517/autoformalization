\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:z> <nat:172> + <nat:114> <var:p> + <nat:124> <var:d> + <nat:366> <var:c> + <var:q> <nat:20> + <nat:215> + <nat:26> <var:m> $ is guaranteed to be odd given any positive integers $ <var:z> $ , $ <var:m> $ , $ <var:c> $ , $ <var:d> $ , $ <var:q> $ , and $ <var:p> $ . \end{theorem} \begin{proof} We demonstrate that the summation $ <var:p> \cdot <nat:114> + <var:c> \cdot <nat:366> + <nat:20> \cdot <var:q> + <var:z> \cdot <nat:172> + <nat:124> \cdot <var:d> + <nat:215> + <var:m> \cdot <nat:26> $ is clearly odd since the formula $ <nat:366> <var:c> + <var:q> <nat:20> + <var:m> <nat:26> + <nat:114> <var:p> + <var:d> <nat:124> + <var:z> <nat:172> $ is even . The products $ <var:p> \cdot <nat:114> $ , $ <var:z> \cdot <nat:172> $ , and likewise $ <var:c> \cdot <nat:366> $ will be even from the fact multiplying of an even positive integer with a element of $ \mathbb{N} $ must be even . In addition to this , the pair $ <nat:26> \cdot <var:m> $ is obviously an even element of $ \mathbb{Z}^+ $ . Take note that the product $ <var:d> \cdot <nat:124> $ is guaranteed to be even . We know that the term $ <var:q> \cdot <nat:20> $ is even . This holds because taking the product between an even number in $ \mathbb{Z}^+ $ and a natural number must be an even number in $ \mathbb{N} $ . Our claim is proven since the adding between even numbers in $ \mathbb{Z}^+ $ with an even element of $ \mathbb{N} $ is guaranteed to be even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:z> <var:m> <var:c> <var:d> <var:q> <var:p> : nat , Nat . odd ( <nat:172> * <var:z> + <nat:114> * <var:p> + <nat:124> * <var:d> + <nat:366> * <var:c> + <nat:20> * <var:q> + <nat:26> * <var:m> + <nat:215> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:114> * <var:p> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:172> * <var:z> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:366> * <var:c> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:26> * <var:m> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:124> * <var:d> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:20> * <var:q> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:172> * <var:z> + <nat:114> * <var:p> + <nat:124> * <var:d> + <nat:366> * <var:c> + <nat:20> * <var:q> + <nat:26> * <var:m> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . auto . Qed . 