\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Take that with the condition there are natural numbers $ <var:G> $ , $ <var:h> $ , $ <var:o> $ , $ <var:i> $ , $ <var:U> $ , $ <var:N> $ , $ <var:m> $ such that $ <var:i> $ , $ <var:N> $ , $ <var:h> $ , $ <var:m> $ , $ <var:o> $ , $ <var:U> $ , $ <var:G> \geq <nat:2> $ . We define that $ <var:b> \in \mathbb{Z}^+ $ is called a <def:seven-composite> integer if $ <var:b> = <var:h> * <var:i> * <var:N> * <var:o> * <var:m> * <var:G> * <var:U> $ . Thus <nat:253440> is <def:seven-composite> . \end{theorem} \begin{proof} Recall that a <def:seven-composite> number is the product between positive integers $ <var:i> $ , $ <var:o> $ , $ <var:N> $ , $ <var:h> $ , $ <var:G> $ , $ <var:m> $ and $ <var:U> $ such that $ <var:N> $ , $ <var:U> $ , $ <var:m> $ , $ <var:o> $ , $ <var:i> $ , $ <var:G> $ and $ <var:h> \geq <nat:2> $ . Let $ <var:o> = <nat:10> $ , $ <var:N> = <nat:2> $ , $ <var:U> = <nat:12> $ , $ <var:m> = <nat:8> $ , $ <var:G> = <nat:3> $ , $ <var:h> = <nat:4> $ and $ <var:i> = <nat:11> $ . We verify <nat:253440> is a <def:seven-composite> whole number . Notice that $ <nat:253440> = <nat:2> * <nat:8> * <nat:10> * <nat:3> * <nat:11> * <nat:12> * <nat:4> $ . Further observe that $ <nat:11> $ , $ <nat:4> $ , $ <nat:8> $ , $ <nat:12> $ , $ <nat:10> $ , $ <nat:2> $ and $ <nat:3> \geq <nat:2> $ . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:seven-composite> ( <var:b> : nat ) := exists <var:G> <var:h> <var:o> <var:i> <var:U> <var:N> <var:m> : nat , ( <var:i> >= <nat:2> ) /\ ( <var:N> >= <nat:2> ) /\ ( <var:h> >= <nat:2> ) /\ ( <var:m> >= <nat:2> ) /\ ( <var:o> >= <nat:2> ) /\ ( <var:U> >= <nat:2> ) /\ ( <var:G> >= <nat:2> ) /\ ( <var:b> = <var:h> * <var:i> * <var:N> * <var:o> * <var:m> * <var:G> * <var:U> ) . Theorem <genP:1> : <def:seven-composite> <nat:253440> . Proof . unfold <def:seven-composite> . exists <nat:3> . exists <nat:4> . exists <nat:10> . exists <nat:11> . exists <nat:12> . exists <nat:2> . exists <nat:8> . assert ( <genH> : <nat:11> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:4> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:8> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:12> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:10> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:2> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:3> >= <nat:2> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 