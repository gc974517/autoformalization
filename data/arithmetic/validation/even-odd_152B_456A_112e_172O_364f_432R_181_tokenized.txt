\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:152> <var:B> + <var:A> <nat:456> + <var:e> <nat:112> + <var:O> <nat:172> + <nat:364> <var:f> + <nat:181> + <var:R> <nat:432> $ will be odd taking every whole numbers $ <var:f> $ , $ <var:R> $ , $ <var:A> $ , $ <var:O> $ , $ <var:e> $ , and $ <var:B> $ . \end{theorem} \begin{proof} The pairs $ <var:B> \times <nat:152> $ , $ <var:A> \times <nat:456> $ , $ <nat:112> \times <var:e> $ , $ <var:O> \times <nat:172> $ , $ <var:f> \times <nat:364> $ , plus $ <var:R> \times <nat:432> $ are trivially even elements of $ \mathbb{N} $ . This claim is true from the fact the coefficients $ <nat:152> $ , $ <nat:456> $ , $ <nat:112> $ , $ <nat:172> $ , $ <nat:364> $ , additionally $ <nat:432> $ are obviously even whole numbers . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:f> <var:R> <var:A> <var:O> <var:e> <var:B> : nat , Nat . odd ( <nat:152> * <var:B> + <nat:456> * <var:A> + <nat:112> * <var:e> + <nat:172> * <var:O> + <nat:364> * <var:f> + <nat:432> * <var:R> + <nat:181> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:152> = true ) . { auto . } assert ( <genH> : Nat . even <nat:456> = true ) . { auto . } assert ( <genH> : Nat . even <nat:112> = true ) . { auto . } assert ( <genH> : Nat . even <nat:172> = true ) . { auto . } assert ( <genH> : Nat . even <nat:364> = true ) . { auto . } assert ( <genH> : Nat . even <nat:432> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:152> * <var:B> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:456> * <var:A> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:112> * <var:e> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:172> * <var:O> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:364> * <var:f> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:432> * <var:R> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 