\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:339> + <nat:134> <var:J> + <nat:172> <var:O> + <nat:424> <var:f> + <nat:56> <var:M> $ must be odd . \end{theorem} \begin{proof} The totaling between even positive integers successively with an odd number in $ \mathbb{Z}^+ $ will be odd . We apply the assumption the understanding that the summation $ <var:M> \cdot <nat:56> + <var:f> \cdot <nat:424> + <var:O> \cdot <nat:172> + <var:J> \cdot <nat:134> $ is obviously even . See the numbers $ <nat:56> $ , $ <nat:424> $ , $ <nat:172> $ , plus $ <nat:134> $ are guaranteed to be even . Consequently , the terms $ <var:M> \times <nat:56> $ , $ <nat:424> \times <var:f> $ , $ <var:O> \times <nat:172> $ , and also $ <var:J> \times <nat:134> $ will be even as well . The formula $ <var:O> \cdot <nat:172> + <nat:134> \cdot <var:J> + <nat:56> \cdot <var:M> + <var:f> \cdot <nat:424> $ must be instrinsically even from the knowledge multiplying of even whole numbers with any positive integer must be by definition an even whole number . It can be proven that the claim is proven . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:J> <var:O> <var:f> <var:M> : nat , Nat . odd ( <nat:134> * <var:J> + <nat:172> * <var:O> + <nat:424> * <var:f> + <nat:56> * <var:M> + <nat:339> ) = true . Proof . intros . rewrite Nat . odd_add . assert ( <genH> : Nat . even <nat:56> = true ) . { auto . } assert ( <genH> : Nat . even <nat:424> = true ) . { auto . } assert ( <genH> : Nat . even <nat:172> = true ) . { auto . } assert ( <genH> : Nat . even <nat:134> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:56> * <var:M> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:424> * <var:f> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:172> * <var:O> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:134> * <var:J> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:134> * <var:J> + <nat:172> * <var:O> + <nat:424> * <var:f> + <nat:56> * <var:M> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite <- Nat . negb_even . rewrite <genH> . auto . Qed . 