\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:256> \cdot <var:G> + <var:m> \cdot <nat:286> + <var:O> \cdot <nat:136> + <var:v> \cdot <nat:50> + <var:b> \cdot <nat:210> + <nat:430> \cdot <var:Y> + <nat:302> + <var:a> \cdot <nat:74> + <nat:158> \cdot <var:f> $ is even for variables $ <var:G> $ , $ <var:Y> $ , $ <var:b> $ , $ <var:m> $ , $ <var:f> $ , $ <var:v> $ , $ <var:O> $ , and $ <var:a> $ . \end{theorem} \begin{proof} We know that $ <nat:302> $ is guaranteed to be an even natural number . We show $ <var:b> \cdot <nat:210> + <nat:136> \cdot <var:O> + <var:Y> \cdot <nat:430> + <nat:286> \cdot <var:m> + <nat:74> \cdot <var:a> + <var:f> \cdot <nat:158> + <nat:50> \cdot <var:v> + <nat:302> + <var:G> \cdot <nat:256> $ will be even . Notice that the addition of an even element of $ \mathbb{Z}^+ $ with an even element of $ \mathbb{N} $ is even . We check that $ <nat:74> \times <var:a> + <var:b> \times <nat:210> + <nat:136> \times <var:O> + <nat:302> + <var:f> \times <nat:158> + <var:m> \times <nat:286> + <var:G> \times <nat:256> + <nat:430> \times <var:Y> + <nat:50> \times <var:v> $ is known to be even from the knowledge the formula $ <nat:210> * <var:b> + <var:a> * <nat:74> + <nat:158> * <var:f> + <var:O> * <nat:136> + <var:m> * <nat:286> + <var:Y> * <nat:430> + <nat:50> * <var:v> + <var:G> * <nat:256> $ is obviously even . What's more , we know the pairs $ <nat:210> <var:b> $ , $ <var:a> <nat:74> $ , $ <nat:158> <var:f> $ , $ <nat:136> <var:O> $ , $ <nat:286> <var:m> $ , $ <nat:430> <var:Y> $ , $ <var:v> <nat:50> $ , plus $ <var:G> <nat:256> $ are clearly even from the knowledge the coefficients $ <nat:210> $ , $ <nat:74> $ , $ <nat:158> $ , $ <nat:136> $ , $ <nat:286> $ , $ <nat:430> $ , $ <nat:50> $ , plus $ <nat:256> $ are known as even . From the knowledge taking the product of even whole numbers and any number in $ \mathbb{N} $ must be an even number our lemma is true . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:G> <var:Y> <var:b> <var:m> <var:f> <var:v> <var:O> <var:a> : nat , Nat . even ( <nat:256> * <var:G> + <nat:286> * <var:m> + <nat:136> * <var:O> + <nat:50> * <var:v> + <nat:210> * <var:b> + <nat:430> * <var:Y> + <nat:74> * <var:a> + <nat:158> * <var:f> + <nat:302> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:302> = true ) . { auto . } rewrite Nat . even_add . assert ( <genH> : Nat . even <nat:210> = true ) . { auto . } assert ( <genH> : Nat . even <nat:74> = true ) . { auto . } assert ( <genH> : Nat . even <nat:158> = true ) . { auto . } assert ( <genH> : Nat . even <nat:136> = true ) . { auto . } assert ( <genH> : Nat . even <nat:286> = true ) . { auto . } assert ( <genH> : Nat . even <nat:430> = true ) . { auto . } assert ( <genH> : Nat . even <nat:50> = true ) . { auto . } assert ( <genH> : Nat . even <nat:256> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:210> * <var:b> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:74> * <var:a> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:158> * <var:f> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:136> * <var:O> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:286> * <var:m> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:430> * <var:Y> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:50> * <var:v> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:256> * <var:G> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:256> * <var:G> + <nat:286> * <var:m> + <nat:136> * <var:O> + <nat:50> * <var:v> + <nat:210> * <var:b> + <nat:430> * <var:Y> + <nat:74> * <var:a> + <nat:158> * <var:f> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite <genH> . rewrite <genH> . auto . Qed . 