\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Assuming every $ <var:f> $ , $ <var:m> $ , $ <var:i> $ , and $ <var:r> \in \mathbb{N} $ $ <var:i> * <nat:440> + <var:f> * <nat:248> + <nat:496> * <var:r> + <var:m> * <nat:334> + <nat:85> $ is guaranteed to be odd . \end{theorem} \begin{proof} The terms $ <var:r> \times <nat:496> $ , $ <nat:248> \times <var:f> $ , additionally $ <var:m> \times <nat:334> $ are trivially even natural numbers from the fact the multiplication of an even whole number with some number in $ \mathbb{N} $ must be even . This claim is proven from the fact the integers $ <nat:496> $ , $ <nat:248> $ , and also $ <nat:334> $ are obviously fundamentally even natural numbers . Furthermore , we know that the pair $ <var:i> \times <nat:440> $ is trivially an even positive integer . This claim must be true because taking the product of an even natural number with any number must be even . This claim is proven as a consequence that the positive integer $ <nat:440> $ is known as even . It can be checked that the sum $ <nat:334> * <var:m> + <nat:85> + <nat:496> * <var:r> + <nat:248> * <var:f> + <var:i> * <nat:440> $ must be odd . Remember that $ <nat:85> $ is trivially odd . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:f> <var:m> <var:i> <var:r> : nat , Nat . odd ( <nat:440> * <var:i> + <nat:248> * <var:f> + <nat:496> * <var:r> + <nat:334> * <var:m> + <nat:85> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:496> = true ) . { auto . } assert ( <genH> : Nat . even <nat:248> = true ) . { auto . } assert ( <genH> : Nat . even <nat:334> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:496> * <var:r> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:248> * <var:f> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:334> * <var:m> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:440> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:440> * <var:i> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . odd <nat:85> = true ) . { auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 