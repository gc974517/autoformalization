\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:46> \cdot <var:R> + <var:m> \cdot <nat:226> + <var:T> \cdot <nat:30> + <var:H> \cdot <nat:360> + <var:h> \cdot <nat:98> + <nat:50> \cdot <var:C> + <nat:496> \cdot <var:A> + <nat:307> + <nat:334> \cdot <var:V> $ is guaranteed to be odd with natural terms $ <var:A> $ , $ <var:V> $ , $ <var:R> $ , $ <var:m> $ , $ <var:H> $ , $ <var:h> $ , $ <var:T> $ , and $ <var:C> $ . \end{theorem} \begin{proof} See the products $ <var:h> \times <nat:98> $ and also $ <var:C> \times <nat:50> $ are trivially even . Recall that the terms $ <var:R> \times <nat:46> $ and $ <nat:334> \times <var:V> $ are clearly even numbers in $ \mathbb{N} $ . This claim is true from the knowledge the multiplication between an even positive integer with any positive integer will be an even positive integer . The products $ <nat:360> \times <var:H> $ additionally $ <nat:496> \times <var:A> $ are guaranteed to be even . This fact is true because taking the product between an even element of $ \mathbb{Z}^+ $ with any natural is guaranteed to be itself an even number . Likewise , $ <var:T> \times <nat:30> $ is trivially even because multiplying of an even element of $ \mathbb{N} $ with a whole number is even . Likewise , the pair $ <var:m> \times <nat:226> $ is clearly an even positive integer . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:A> <var:V> <var:R> <var:m> <var:H> <var:h> <var:T> <var:C> : nat , Nat . odd ( <nat:46> * <var:R> + <nat:226> * <var:m> + <nat:30> * <var:T> + <nat:360> * <var:H> + <nat:98> * <var:h> + <nat:50> * <var:C> + <nat:496> * <var:A> + <nat:334> * <var:V> + <nat:307> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:98> * <var:h> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:50> * <var:C> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:46> * <var:R> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:334> * <var:V> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:360> * <var:H> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:496> * <var:A> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:30> * <var:T> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:226> * <var:m> ) = true ) . { rewrite Nat . even_mul . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 