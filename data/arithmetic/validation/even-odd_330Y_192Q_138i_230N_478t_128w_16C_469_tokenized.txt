\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:t> <nat:478> + <nat:128> <var:w> + <nat:469> + <var:C> <nat:16> + <nat:138> <var:i> + <nat:230> <var:N> + <nat:192> <var:Q> + <nat:330> <var:Y> $ is guaranteed to be odd . \end{theorem} \begin{proof} Remember the summation of even numbers in $ \mathbb{Z}^+ $ successively with an odd natural is guaranteed to be an odd whole number . Observe $ <nat:469> $ is known as an odd whole number . We know that $ <nat:16> <var:C> + <var:N> <nat:230> + <var:Y> <nat:330> + <nat:192> <var:Q> + <nat:138> <var:i> + <var:t> <nat:478> + <nat:469> + <nat:128> <var:w> $ is clearly odd from the fact $ <var:Y> * <nat:330> + <var:Q> * <nat:192> + <var:i> * <nat:138> + <var:N> * <nat:230> + <var:t> * <nat:478> + <var:w> * <nat:128> + <var:C> * <nat:16> $ is obviously even . Notice that the numbers $ <nat:330> $ and also $ <nat:230> $ are even Remember that the coefficients $ <nat:128> $ , $ <nat:138> $ , and likewise $ <nat:192> $ are trivially even In addition to this , the whole number $ <nat:478> $ is guaranteed to be even The integer $ <nat:16> $ is known as an even natural Our proposition is proven because the product between even elements of $ \mathbb{Z}^+ $ and an arbitrary number must be even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:t> <var:w> <var:C> <var:i> <var:N> <var:Q> <var:Y> : nat , Nat . odd ( <nat:478> * <var:t> + <nat:128> * <var:w> + <nat:16> * <var:C> + <nat:138> * <var:i> + <nat:230> * <var:N> + <nat:192> * <var:Q> + <nat:330> * <var:Y> + <nat:469> ) = true . Proof . intros . rewrite Nat . odd_add . assert ( <genH> : Nat . odd <nat:469> = true ) . { auto . } assert ( <genH> : Nat . even <nat:330> = true ) . { auto . } assert ( <genH> : Nat . even <nat:230> = true ) . { auto . } assert ( <genH> : Nat . even <nat:128> = true ) . { auto . } assert ( <genH> : Nat . even <nat:138> = true ) . { auto . } assert ( <genH> : Nat . even <nat:192> = true ) . { auto . } assert ( <genH> : Nat . even <nat:478> = true ) . { auto . } assert ( <genH> : Nat . even <nat:16> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:478> * <var:t> + <nat:128> * <var:w> + <nat:16> * <var:C> + <nat:138> * <var:i> + <nat:230> * <var:N> + <nat:192> * <var:Q> + <nat:330> * <var:Y> ) = true ) . { repeat rewrite Nat . even_add . repeat rewrite Nat . even_mul . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite <- Nat . negb_even . rewrite <genH> . rewrite <genH> . auto . Qed . 