\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Given all natural numbers $ <var:C> $ , $ <var:h> $ , $ <var:x> $ , $ <var:p> $ , $ <var:v> $ , and $ <var:U> $ $ <nat:348> + <var:C> * <nat:320> + <nat:392> * <var:x> + <var:v> * <nat:314> + <var:h> * <nat:466> + <var:p> * <nat:410> + <nat:220> * <var:U> $ is even . \end{theorem} \begin{proof} Additionally , the positive integers $ <nat:320> $ , $ <nat:392> $ , $ <nat:314> $ , $ <nat:466> $ , $ <nat:410> $ , and $ <nat:220> $ are known to be even . Hence , the terms $ <var:C> \cdot <nat:320> $ , $ <nat:392> \cdot <var:x> $ , $ <var:v> \cdot <nat:314> $ , $ <var:h> \cdot <nat:466> $ , $ <nat:410> \cdot <var:p> $ , in addition to $ <var:U> \cdot <nat:220> $ is even at the same time . The adding of an even integer and an even integer must be clearly an even natural number . Hence , $ <var:x> <nat:392> + <var:p> <nat:410> + <var:h> <nat:466> + <nat:220> <var:U> + <nat:320> <var:C> + <nat:348> + <var:v> <nat:314> $ is guaranteed to be even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:C> <var:h> <var:x> <var:p> <var:v> <var:U> : nat , Nat . even ( <nat:320> * <var:C> + <nat:392> * <var:x> + <nat:314> * <var:v> + <nat:466> * <var:h> + <nat:410> * <var:p> + <nat:220> * <var:U> + <nat:348> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:320> = true ) . { auto . } assert ( <genH> : Nat . even <nat:392> = true ) . { auto . } assert ( <genH> : Nat . even <nat:314> = true ) . { auto . } assert ( <genH> : Nat . even <nat:466> = true ) . { auto . } assert ( <genH> : Nat . even <nat:410> = true ) . { auto . } assert ( <genH> : Nat . even <nat:220> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:320> * <var:C> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:392> * <var:x> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:314> * <var:v> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:466> * <var:h> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:410> * <var:p> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:220> * <var:U> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 