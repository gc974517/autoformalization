\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:N> * <nat:128> + <nat:92> * <var:l> + <var:S> * <nat:486> + <nat:330> * <var:e> + <nat:6> + <nat:172> * <var:z> + <var:D> * <nat:186> + <var:V> * <nat:260> + <var:f> * <nat:366> + <nat:280> * <var:b> $ must be even . \end{theorem} \begin{proof} The products $ <nat:280> <var:b> $ , $ <nat:330> <var:e> $ , $ <nat:260> <var:V> $ , and moreover $ <var:f> <nat:366> $ are known as even numbers in $ \mathbb{Z}^+ $ . Additionally , observe that the products $ <nat:186> <var:D> $ , $ <var:S> <nat:486> $ , $ <nat:128> <var:N> $ , additionally $ <nat:172> <var:z> $ are even since multiplying between an even natural and an arbitrary number in $ \mathbb{N} $ is an even element of $ \mathbb{Z}^+ $ . Adding on , the pair $ <var:l> <nat:92> $ is known to be even . This is true as a consequence that taking the product of an even natural number with a number in $ \mathbb{N} $ is guaranteed to be an even element of $ \mathbb{Z}^+ $ . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:N> <var:l> <var:S> <var:e> <var:z> <var:D> <var:V> <var:f> <var:b> : nat , Nat . even ( <nat:128> * <var:N> + <nat:92> * <var:l> + <nat:486> * <var:S> + <nat:330> * <var:e> + <nat:172> * <var:z> + <nat:186> * <var:D> + <nat:260> * <var:V> + <nat:366> * <var:f> + <nat:280> * <var:b> + <nat:6> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:280> * <var:b> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:330> * <var:e> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:260> * <var:V> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:366> * <var:f> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:186> * <var:D> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:486> * <var:S> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:128> * <var:N> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:172> * <var:z> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:92> * <var:l> ) = true ) . { rewrite Nat . even_mul . auto . } repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 