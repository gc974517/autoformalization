\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:L> \times <nat:32> + <nat:449> + <var:Q> \times <nat:94> + <var:I> \times <nat:432> + <var:P> \times <nat:6> + <var:C> \times <nat:316> $ is odd taking some unknowns $ <var:L> $ , $ <var:I> $ , $ <var:P> $ , $ <var:C> $ , and $ <var:Q> $ . \end{theorem} \begin{proof} See that $ <nat:449> $ is trivially an odd number in $ \mathbb{N} $ . Recall the addition of even whole numbers together and an odd whole number must be an odd natural number . Notice the product $ <nat:32> \cdot <var:L> $ is obviously even . Take note $ <var:C> \cdot <nat:316> $ is trivially even . This claim is true since taking the product between an even number in $ \mathbb{Z}^+ $ and any element of $ \mathbb{Z}^+ $ is guaranteed to be even . In addition to this , the product $ <var:P> \cdot <nat:6> $ is obviously even from the fact multiplying of an even number with some natural is guaranteed to be even . Furthermore , the pair $ <var:I> \cdot <nat:432> $ is clearly an even number in $ \mathbb{N} $ . Observe the term $ <var:Q> \cdot <nat:94> $ is an even number in $ \mathbb{Z}^+ $ from the fact the product of an even element of $ \mathbb{Z}^+ $ with a number in $ \mathbb{Z}^+ $ is by itself an even element of $ \mathbb{N} $ . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:L> <var:I> <var:P> <var:C> <var:Q> : nat , Nat . odd ( <nat:32> * <var:L> + <nat:94> * <var:Q> + <nat:432> * <var:I> + <nat:6> * <var:P> + <nat:316> * <var:C> + <nat:449> ) = true . Proof . intros . assert ( <genH> : Nat . odd <nat:449> = true ) . { auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . assert ( <genH> : Nat . even ( <nat:32> * <var:L> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:316> * <var:C> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:6> * <var:P> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:432> * <var:I> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:94> * <var:Q> ) = true ) . { rewrite Nat . even_mul . auto . } rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 