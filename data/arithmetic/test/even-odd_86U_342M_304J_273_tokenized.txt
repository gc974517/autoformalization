\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Using all integers $ <var:U> $ , $ <var:J> $ , and $ <var:M> $ the summation $ <var:U> * <nat:86> + <var:M> * <nat:342> + <nat:304> * <var:J> + <nat:273> $ will be odd . \end{theorem} \begin{proof} The sum $ <nat:273> + <var:J> \times <nat:304> + <var:M> \times <nat:342> + <nat:86> \times <var:U> $ is trivially odd because $ <var:J> <nat:304> + <var:U> <nat:86> + <var:M> <nat:342> $ is known as even . Take note the coefficient $ <nat:342> $ is trivially an even element of $ \mathbb{Z}^+ $ . Consequently , $ <var:M> * <nat:342> $ will be even additionally . Adding on , the product $ <var:U> * <nat:86> $ is guaranteed to be even since multiplying between an even number with any number in $ \mathbb{N} $ will be an even natural plus the number $ <nat:86> $ is known to be even . $ <var:J> * <nat:304> $ is clearly an even element of $ \mathbb{N} $ . This is true as a consequence that the natural number $ <nat:304> $ is known to be even . We prove the result is proven . Take note that $ <nat:273> $ is known as an odd number in $ \mathbb{Z}^+ $ . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:U> <var:J> <var:M> : nat , Nat . odd ( <nat:86> * <var:U> + <nat:342> * <var:M> + <nat:304> * <var:J> + <nat:273> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:342> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:342> * <var:M> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:86> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:86> * <var:U> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:304> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:304> * <var:J> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:86> * <var:U> + <nat:342> * <var:M> + <nat:304> * <var:J> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } assert ( <genH> : Nat . odd <nat:273> = true ) . { auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . rewrite <genH> . auto . Qed . 