\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Given all unknowns $ <var:C> $ , $ <var:m> $ , $ <var:s> $ , $ <var:h> $ , $ <var:i> $ , $ <var:d> $ , $ <var:E> $ , and $ <var:O> $ $ <nat:268> \times <var:m> + <var:C> \times <nat:124> + <nat:62> \times <var:s> + <var:h> \times <nat:280> + <nat:359> + <var:i> \times <nat:292> + <nat:306> \times <var:O> + <nat:132> \times <var:d> + <var:E> \times <nat:154> $ will be odd . \end{theorem} \begin{proof} It can be justified that $ <nat:132> <var:d> + <nat:292> <var:i> + <nat:306> <var:O> + <var:E> <nat:154> + <nat:62> <var:s> + <nat:268> <var:m> + <var:C> <nat:124> + <var:h> <nat:280> $ is even . Take note that the natural numbers $ <nat:292> $ , $ <nat:268> $ , $ <nat:306> $ , $ <nat:62> $ , and $ <nat:154> $ are obviously even whole numbers The whole numbers $ <nat:280> $ and likewise $ <nat:132> $ are known to be even integers What's more , the leading term $ <nat:124> $ is guaranteed to be an even natural number See $ <nat:359> $ is trivially odd . It can be proven that the expression $ <nat:359> + <var:h> * <nat:280> + <nat:268> * <var:m> + <nat:306> * <var:O> + <nat:124> * <var:C> + <var:i> * <nat:292> + <var:E> * <nat:154> + <nat:132> * <var:d> + <nat:62> * <var:s> $ is guaranteed to be odd . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:C> <var:m> <var:s> <var:h> <var:i> <var:d> <var:E> <var:O> : nat , Nat . odd ( <nat:268> * <var:m> + <nat:124> * <var:C> + <nat:62> * <var:s> + <nat:280> * <var:h> + <nat:292> * <var:i> + <nat:306> * <var:O> + <nat:132> * <var:d> + <nat:154> * <var:E> + <nat:359> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:292> = true ) . { auto . } assert ( <genH> : Nat . even <nat:268> = true ) . { auto . } assert ( <genH> : Nat . even <nat:306> = true ) . { auto . } assert ( <genH> : Nat . even <nat:62> = true ) . { auto . } assert ( <genH> : Nat . even <nat:154> = true ) . { auto . } assert ( <genH> : Nat . even <nat:280> = true ) . { auto . } assert ( <genH> : Nat . even <nat:132> = true ) . { auto . } assert ( <genH> : Nat . even <nat:124> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:268> * <var:m> + <nat:124> * <var:C> + <nat:62> * <var:s> + <nat:280> * <var:h> + <nat:292> * <var:i> + <nat:306> * <var:O> + <nat:132> * <var:d> + <nat:154> * <var:E> ) = true ) . { repeat rewrite Nat . even_add . repeat rewrite Nat . even_mul . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } assert ( <genH> : Nat . odd <nat:359> = true ) . { auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . rewrite <genH> . auto . Qed . 