\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \newtheorem{definition}{Definition} \begin{document} \begin{definition} $ \exists <var:Y> $ , $ <var:z> $ , $ <var:i> $ , $ <var:U> $ , $ <var:N> $ , $ <var:R> $ , $ <var:y> \in \mathbb{Z}^+ $ such that $ <var:U> $ , $ <var:Y> $ , $ <var:z> $ , $ <var:y> $ , $ <var:N> $ , $ <var:i> $ , $ <var:R> \geq <nat:2> $ . We say that $ <var:j> \in \mathbb{N} $ will be named a <def:seven-composite> integer if $ <var:R> * <var:U> * <var:z> * <var:Y> * <var:N> * <var:y> * <var:i> = <var:j> $ . \end{definition} \begin{theorem} The number <nat:741312> is a <def:seven-composite> whole number . \end{theorem} \begin{proof} Recall that <nat:741312> is <def:seven-composite> given it is the multiplication between $ <var:y> $ , $ <var:z> $ , $ <var:N> $ , $ <var:R> $ , $ <var:i> $ , $ <var:Y> $ , $ <var:U> $ greater than or equivalent to <nat:2> . Allow $ <var:U> = <nat:4> $ , $ <var:y> = <nat:2> $ , $ <var:N> = <nat:12> $ , $ <var:i> = <nat:13> $ , $ <var:R> = <nat:6> $ , $ <var:z> = <nat:9> $ , $ <var:Y> = <nat:11> $ . Notice that $ <var:R> = <nat:6> $ , $ <var:Y> = <nat:11> $ , $ <var:N> = <nat:12> $ , $ <var:z> = <nat:9> $ , $ <var:U> = <nat:4> $ , $ <var:i> = <nat:13> $ , and $ <var:y> = <nat:2> \geq <nat:2> $ . Furthermore observe that moreover $ <nat:741312> = <var:z> \times <var:y> \times <var:i> \times <var:N> \times <var:R> \times <var:Y> \times <var:U> $ . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:seven-composite> ( <var:j> : nat ) := exists <var:Y> <var:z> <var:i> <var:U> <var:N> <var:R> <var:y> : nat , ( <var:U> >= <nat:2> ) /\ ( <var:Y> >= <nat:2> ) /\ ( <var:z> >= <nat:2> ) /\ ( <var:y> >= <nat:2> ) /\ ( <var:N> >= <nat:2> ) /\ ( <var:i> >= <nat:2> ) /\ ( <var:R> >= <nat:2> ) /\ ( <var:R> * <var:U> * <var:z> * <var:Y> * <var:N> * <var:y> * <var:i> = <var:j> ) . Theorem <genP:1> : <def:seven-composite> <nat:741312> . Proof . unfold <def:seven-composite> . exists <nat:11> . exists <nat:9> . exists <nat:13> . exists <nat:4> . exists <nat:12> . exists <nat:6> . exists <nat:2> . assert ( <genH> : <nat:6> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:11> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:12> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:9> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:4> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:13> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:2> >= <nat:2> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 