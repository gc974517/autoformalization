\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:480> \times <var:y> + <nat:54> \times <var:d> + <nat:264> \times <var:e> + <var:B> \times <nat:46> + <nat:258> \times <var:j> + <nat:256> \times <var:n> + <nat:78> \times <var:x> + <var:V> \times <nat:416> + <nat:407> + <var:M> \times <nat:58> + <var:I> \times <nat:230> $ will be odd . \end{theorem} \begin{proof} Observe that $ <nat:407> $ is guaranteed to be an odd number . It can be shown that the claim holds . Remember the pairs $ <nat:264> <var:e> $ , $ <nat:480> <var:y> $ , $ <nat:258> <var:j> $ , $ <var:n> <nat:256> $ , $ <var:x> <nat:78> $ , $ <nat:54> <var:d> $ , and likewise $ <var:V> <nat:416> $ are trivially even natural numbers . This fact holds from the fact multiplying between an even element of $ \mathbb{Z}^+ $ and a number in $ \mathbb{Z}^+ $ must be instrinsically an even natural . The pair $ <nat:46> <var:B> $ is known to be an even natural . Likewise , notice that $ <var:M> <nat:58> $ is trivially even . This fact must be true since taking the product of an even whole number and any number is guaranteed to be an even element of $ \mathbb{Z}^+ $ . On top of this , see that the term $ <nat:230> <var:I> $ is obviously an even number . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:y> <var:d> <var:e> <var:B> <var:j> <var:n> <var:x> <var:V> <var:M> <var:I> : nat , Nat . odd ( <nat:480> * <var:y> + <nat:54> * <var:d> + <nat:264> * <var:e> + <nat:46> * <var:B> + <nat:258> * <var:j> + <nat:256> * <var:n> + <nat:78> * <var:x> + <nat:416> * <var:V> + <nat:58> * <var:M> + <nat:230> * <var:I> + <nat:407> ) = true . Proof . intros . assert ( <genH> : Nat . odd <nat:407> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:264> * <var:e> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:480> * <var:y> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:258> * <var:j> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:256> * <var:n> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:78> * <var:x> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:54> * <var:d> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:416> * <var:V> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:46> * <var:B> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:58> * <var:M> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:230> * <var:I> ) = true ) . { rewrite Nat . even_mul . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 