\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Take $ <var:D> $ , $ <var:B> $ , $ <var:Q> $ , $ <var:p> $ , $ <var:m> $ , $ <var:w> $ , $ <var:h> $ and $ <var:j> \in \mathbb{Z}^+ $ so that $ <var:m> $ , $ <var:h> $ , $ <var:w> $ , $ <var:p> $ , $ <var:Q> $ , $ <var:D> $ , $ <var:B> $ and $ <var:j> \geq <nat:2> $ plus so that the positive integer <nat:806400> is the product of integers $ <var:D> $ , $ <var:B> $ , $ <var:Q> $ , $ <var:p> $ , $ <var:m> $ , $ <var:w> $ , $ <var:h> $ , and $ <var:j> \in \mathbb{N} $ . \end{theorem} \begin{proof} Take $ <var:D> = <nat:7> $ , $ <var:m> = <nat:3> $ , $ <var:h> = <nat:12> $ , $ <var:B> = <nat:10> $ , $ <var:j> = <nat:5> $ , $ <var:w> = <nat:4> $ , $ <var:Q> = <nat:8> $ , $ <var:p> = <nat:2> $ . Furthermore notice $ <var:Q> = <nat:8> $ , $ <var:w> = <nat:4> $ , $ <var:j> = <nat:5> $ , $ <var:D> = <nat:7> $ , $ <var:B> = <nat:10> $ , $ <var:m> = <nat:3> $ , $ <var:p> = <nat:2> $ , and $ <var:h> = <nat:12> $ are more than or equivalent to <nat:2> . \end{proof} \end{document} 
~
Require Import Lia . Theorem <genP:1> : exists <var:D> <var:B> <var:Q> <var:p> <var:m> <var:w> <var:h> <var:j> : nat , ( <var:m> >= <nat:2> ) /\ ( <var:h> >= <nat:2> ) /\ ( <var:w> >= <nat:2> ) /\ ( <var:p> >= <nat:2> ) /\ ( <var:Q> >= <nat:2> ) /\ ( <var:D> >= <nat:2> ) /\ ( <var:B> >= <nat:2> ) /\ ( <var:j> >= <nat:2> ) /\ ( <nat:806400> = <var:D> * <var:B> * <var:Q> * <var:p> * <var:m> * <var:w> * <var:h> * <var:j> ) . Proof . exists <nat:7> . exists <nat:10> . exists <nat:8> . exists <nat:2> . exists <nat:3> . exists <nat:4> . exists <nat:12> . exists <nat:5> . assert ( <genH> : <nat:8> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:4> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:5> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:7> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:10> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:3> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:2> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:12> >= <nat:2> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 