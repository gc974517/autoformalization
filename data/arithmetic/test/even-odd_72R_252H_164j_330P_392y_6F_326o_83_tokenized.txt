\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:j> * <nat:164> + <var:y> * <nat:392> + <nat:72> * <var:R> + <var:H> * <nat:252> + <nat:83> + <var:o> * <nat:326> + <var:P> * <nat:330> + <var:F> * <nat:6> $ will be odd taking every $ <var:H> $ , $ <var:P> $ , $ <var:o> $ , $ <var:j> $ , $ <var:F> $ , $ <var:R> $ , and $ <var:y> $ . \end{theorem} \begin{proof} We know the expression $ <var:F> * <nat:6> + <var:o> * <nat:326> + <nat:330> * <var:P> + <nat:72> * <var:R> + <var:j> * <nat:164> + <nat:252> * <var:H> + <var:y> * <nat:392> $ is clearly even . Adding on , we know the natural numbers $ <nat:6> $ , $ <nat:326> $ , $ <nat:330> $ , $ <nat:72> $ , $ <nat:164> $ , $ <nat:252> $ , $ <nat:392> $ , are known to be even . So , the terms $ <nat:6> * <var:F> $ , $ <var:o> * <nat:326> $ , $ <nat:330> * <var:P> $ , $ <nat:72> * <var:R> $ , $ <nat:164> * <var:j> $ , $ <nat:252> * <var:H> $ , $ <nat:392> * <var:y> $ , will be even additionally . The expression $ <nat:72> * <var:R> + <var:H> * <nat:252> + <nat:164> * <var:j> + <var:P> * <nat:330> + <var:y> * <nat:392> + <var:F> * <nat:6> + <var:o> * <nat:326> $ is itself even as a consequence that the multiplication between an even element of $ \mathbb{N} $ with any positive integer will be even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:H> <var:P> <var:o> <var:j> <var:F> <var:R> <var:y> : nat , Nat . odd ( <nat:164> * <var:j> + <nat:392> * <var:y> + <nat:72> * <var:R> + <nat:252> * <var:H> + <nat:326> * <var:o> + <nat:330> * <var:P> + <nat:6> * <var:F> + <nat:83> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:6> = true ) . { auto . } assert ( <genH> : Nat . even <nat:326> = true ) . { auto . } assert ( <genH> : Nat . even <nat:330> = true ) . { auto . } assert ( <genH> : Nat . even <nat:72> = true ) . { auto . } assert ( <genH> : Nat . even <nat:164> = true ) . { auto . } assert ( <genH> : Nat . even <nat:252> = true ) . { auto . } assert ( <genH> : Nat . even <nat:392> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:6> * <var:F> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:326> * <var:o> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:330> * <var:P> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:72> * <var:R> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:164> * <var:j> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:252> * <var:H> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:392> * <var:y> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:164> * <var:j> + <nat:392> * <var:y> + <nat:72> * <var:R> + <nat:252> * <var:H> + <nat:326> * <var:o> + <nat:330> * <var:P> + <nat:6> * <var:F> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . auto . Qed . 