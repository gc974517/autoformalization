\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Claim that $ <var:Y> $ is a <def:ten-composite> whole number iff for some positive integers $ <var:T> $ , $ <var:A> $ , $ <var:v> $ , $ <var:t> $ , $ <var:y> $ , $ <var:d> $ , $ <var:l> $ , $ <var:F> $ , $ <var:O> $ , $ <var:H> $ we get so that $ <var:v> $ , $ <var:d> $ , $ <var:O> $ , $ <var:t> $ , $ <var:T> $ , $ <var:l> $ , $ <var:H> $ , $ <var:A> $ , $ <var:F> $ , $ <var:y> > <nat:1> $ as well as for $ <var:Y> \in \mathbb{N} $ , $ <var:H> \cdot <var:F> \cdot <var:v> \cdot <var:d> \cdot <var:O> \cdot <var:t> \cdot <var:l> \cdot <var:y> \cdot <var:A> \cdot <var:T> = <var:Y> $ . Accordingly $ <nat:148262400> = <var:Y> $ is a <def:ten-composite> integer . \end{theorem} \begin{proof} Recall a <def:ten-composite> is the multiplication between $ <var:t> $ , $ <var:A> $ , $ <var:l> $ , $ <var:F> $ , $ <var:d> $ , $ <var:y> $ , $ <var:O> $ , $ <var:H> $ , $ <var:v> $ and $ <var:T> $ such that $ <var:F> $ , $ <var:d> $ , $ <var:y> $ , $ <var:H> $ , $ <var:t> $ , $ <var:A> $ , $ <var:v> $ , $ <var:O> $ , $ <var:l> $ , and $ <var:T> > <nat:1> $ . Take $ <var:l> = <nat:5> $ , $ <var:v> = <nat:11> $ , $ <var:F> = <nat:10> $ , $ <var:A> = <nat:3> $ , $ <var:d> = <nat:2> $ , $ <var:H> = <nat:9> $ , $ <var:T> = <nat:12> $ , $ <var:t> = <nat:13> $ , $ <var:y> = <nat:8> $ , and $ <var:O> = <nat:4> $ . We verify <nat:148262400> is <def:ten-composite> . We justify the proposition holds considering $ <var:T> = <nat:12> $ , $ <var:A> = <nat:3> $ , $ <var:d> = <nat:2> $ , $ <var:l> = <nat:5> $ , $ <var:H> = <nat:9> $ , $ <var:v> = <nat:11> $ , $ <var:O> = <nat:4> $ , $ <var:F> = <nat:10> $ , $ <var:t> = <nat:13> $ and $ <var:y> = <nat:8> > <nat:1> $ and in consideration of $ <nat:148262400> = <var:A> * <var:y> * <var:H> * <var:T> * <var:d> * <var:v> * <var:O> * <var:l> * <var:t> * <var:F> $ . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:ten-composite> ( <var:Y> : nat ) := exists <var:T> <var:A> <var:v> <var:t> <var:y> <var:d> <var:l> <var:F> <var:O> <var:H> : nat , ( <var:v> > <nat:1> ) /\ ( <var:d> > <nat:1> ) /\ ( <var:O> > <nat:1> ) /\ ( <var:t> > <nat:1> ) /\ ( <var:T> > <nat:1> ) /\ ( <var:l> > <nat:1> ) /\ ( <var:H> > <nat:1> ) /\ ( <var:A> > <nat:1> ) /\ ( <var:F> > <nat:1> ) /\ ( <var:y> > <nat:1> ) /\ ( <var:H> * <var:F> * <var:v> * <var:d> * <var:O> * <var:t> * <var:l> * <var:y> * <var:A> * <var:T> = <var:Y> ) . Theorem <genP:1> : <def:ten-composite> <nat:148262400> . Proof . unfold <def:ten-composite> . exists <nat:12> . exists <nat:3> . exists <nat:11> . exists <nat:13> . exists <nat:8> . exists <nat:2> . exists <nat:5> . exists <nat:10> . exists <nat:4> . exists <nat:9> . assert ( <genH> : <nat:12> > <nat:1> ) . { lia . } assert ( <genH> : <nat:3> > <nat:1> ) . { lia . } assert ( <genH> : <nat:2> > <nat:1> ) . { lia . } assert ( <genH> : <nat:5> > <nat:1> ) . { lia . } assert ( <genH> : <nat:9> > <nat:1> ) . { lia . } assert ( <genH> : <nat:11> > <nat:1> ) . { lia . } assert ( <genH> : <nat:4> > <nat:1> ) . { lia . } assert ( <genH> : <nat:10> > <nat:1> ) . { lia . } assert ( <genH> : <nat:13> > <nat:1> ) . { lia . } assert ( <genH> : <nat:8> > <nat:1> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 