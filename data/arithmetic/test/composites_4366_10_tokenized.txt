\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Let that $ <var:G> $ is a <def:ten-composite> positive integer assuming there are some positive integers $ <var:d> $ , $ <var:P> $ , $ <var:h> $ , $ <var:q> $ , $ <var:o> $ , $ <var:n> $ , $ <var:N> $ , $ <var:e> $ , $ <var:v> $ , $ <var:a> $ such that satisfying the condition that $ <var:h> $ , $ <var:e> $ , $ <var:N> $ , $ <var:n> $ , $ <var:a> $ , $ <var:P> $ , $ <var:d> $ , $ <var:v> $ , $ <var:o> $ , $ <var:q> > <nat:1> $ as well as given some positive integer $ <var:G> $ , $ <var:G> = <var:h> \times <var:P> \times <var:o> \times <var:n> \times <var:e> \times <var:q> \times <var:v> \times <var:N> \times <var:a> \times <var:d> $ . Consequently $ <var:G> = <nat:77837760> $ is a <def:ten-composite> whole number . \end{theorem} \begin{proof} Recollect that <nat:77837760> is a <def:ten-composite> number only if it is the product between $ <var:h> $ , $ <var:v> $ , $ <var:a> $ , $ <var:N> $ , $ <var:d> $ , $ <var:n> $ , $ <var:P> $ , $ <var:e> $ , $ <var:o> $ , $ <var:q> $ satisfying the condition that $ <var:N> $ , $ <var:h> $ , $ <var:d> $ , $ <var:v> $ , $ <var:n> $ , $ <var:q> $ , $ <var:a> $ , $ <var:o> $ , $ <var:e> $ , and $ <var:P> > <nat:1> $ . Allow $ <var:h> = <nat:5> $ , $ <var:P> = <nat:3> $ , $ <var:a> = <nat:9> $ , $ <var:e> = <nat:2> $ , $ <var:q> = <nat:13> $ , $ <var:v> = <nat:7> $ , $ <var:o> = <nat:12> $ , $ <var:N> = <nat:11> $ , $ <var:d> = <nat:6> $ , $ <var:n> = <nat:4> $ . Observe that $ <nat:77837760> = <var:n> * <var:e> * <var:h> * <var:N> * <var:P> * <var:a> * <var:d> * <var:q> * <var:o> * <var:v> $ . Similarly notice that $ <var:e> = <nat:2> $ , $ <var:a> = <nat:9> $ , $ <var:q> = <nat:13> $ , $ <var:o> = <nat:12> $ , $ <var:d> = <nat:6> $ , $ <var:n> = <nat:4> $ , $ <var:v> = <nat:7> $ , $ <var:h> = <nat:5> $ , $ <var:P> = <nat:3> $ and $ <var:N> = <nat:11> > <nat:1> $ . This shows our theory holds . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:ten-composite> ( <var:G> : nat ) := exists <var:d> <var:P> <var:h> <var:q> <var:o> <var:n> <var:N> <var:e> <var:v> <var:a> : nat , ( <var:h> > <nat:1> ) /\ ( <var:e> > <nat:1> ) /\ ( <var:N> > <nat:1> ) /\ ( <var:n> > <nat:1> ) /\ ( <var:a> > <nat:1> ) /\ ( <var:P> > <nat:1> ) /\ ( <var:d> > <nat:1> ) /\ ( <var:v> > <nat:1> ) /\ ( <var:o> > <nat:1> ) /\ ( <var:q> > <nat:1> ) /\ ( <var:G> = <var:h> * <var:P> * <var:o> * <var:n> * <var:e> * <var:q> * <var:v> * <var:N> * <var:a> * <var:d> ) . Theorem <genP:1> : <def:ten-composite> <nat:77837760> . Proof . unfold <def:ten-composite> . exists <nat:6> . exists <nat:3> . exists <nat:5> . exists <nat:13> . exists <nat:12> . exists <nat:4> . exists <nat:11> . exists <nat:2> . exists <nat:7> . exists <nat:9> . assert ( <genH> : <nat:2> > <nat:1> ) . { lia . } assert ( <genH> : <nat:9> > <nat:1> ) . { lia . } assert ( <genH> : <nat:13> > <nat:1> ) . { lia . } assert ( <genH> : <nat:12> > <nat:1> ) . { lia . } assert ( <genH> : <nat:6> > <nat:1> ) . { lia . } assert ( <genH> : <nat:4> > <nat:1> ) . { lia . } assert ( <genH> : <nat:7> > <nat:1> ) . { lia . } assert ( <genH> : <nat:5> > <nat:1> ) . { lia . } assert ( <genH> : <nat:3> > <nat:1> ) . { lia . } assert ( <genH> : <nat:11> > <nat:1> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 