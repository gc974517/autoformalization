\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:384> * <var:F> + <nat:93> + <nat:170> * <var:m> + <nat:280> * <var:i> + <var:D> * <nat:444> + <nat:282> * <var:G> $ is odd given any unknowns $ <var:D> $ , $ <var:G> $ , $ <var:i> $ , $ <var:m> $ , and $ <var:F> $ . \end{theorem} \begin{proof} Observe the adding between even whole numbers concurrently and an odd integer is odd . Take note $ <nat:93> $ is known as an odd number . The pairs $ <var:G> \times <nat:282> $ as well as $ <var:F> \times <nat:384> $ are known as even . This fact is proven because multiplying of an even number and some element of $ \mathbb{Z}^+ $ will be an even element of $ \mathbb{N} $ . The product $ <var:i> \times <nat:280> $ is clearly even . This is proven since taking the product of an even whole number with a element of $ \mathbb{N} $ is even . What's more , the pair $ <var:D> \times <nat:444> $ is even . See the product $ <var:m> \times <nat:170> $ is known as an even element of $ \mathbb{N} $ . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:D> <var:G> <var:i> <var:m> <var:F> : nat , Nat . odd ( <nat:384> * <var:F> + <nat:170> * <var:m> + <nat:280> * <var:i> + <nat:444> * <var:D> + <nat:282> * <var:G> + <nat:93> ) = true . Proof . intros . rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . assert ( <genH> : Nat . odd <nat:93> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:282> * <var:G> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:384> * <var:F> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:280> * <var:i> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:444> * <var:D> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:170> * <var:m> ) = true ) . { rewrite Nat . even_mul . auto . } rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 