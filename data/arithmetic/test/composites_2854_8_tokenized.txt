\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} The positive integer <nat:4804800> is the product of numbers $ <var:k> $ , $ <var:w> $ , $ <var:K> $ , $ <var:P> $ , $ <var:L> $ , $ <var:b> $ , $ <var:q> $ , $ <var:p> \in \mathbb{Z}^+ $ satisfying the condition that $ <var:L> $ , $ <var:K> $ , $ <var:w> $ , $ <var:b> $ , $ <var:k> $ , $ <var:p> $ , $ <var:q> $ and $ <var:P> $ larger than or equivalent to <nat:2> . \end{theorem} \begin{proof} Notice that $ <var:k> * <var:q> * <var:P> * <var:K> * <var:w> * <var:p> * <var:L> * <var:b> = <nat:4804800> $ indicates $ <var:b> = <nat:2> $ , $ <var:L> = <nat:7> $ , $ <var:k> = <nat:11> $ , $ <var:P> = <nat:5> $ , $ <var:K> = <nat:6> $ , $ <var:q> = <nat:13> $ , $ <var:p> = <nat:8> $ , $ <var:w> = <nat:10> $ . Further observe $ <nat:13> $ , $ <nat:5> $ , $ <nat:8> $ , $ <nat:6> $ , $ <nat:11> $ , $ <nat:2> $ , $ <nat:7> $ and $ <nat:10> \geq <nat:2> $ . This gives our theory is true . \end{proof} \end{document} 
~
Require Import Lia . Theorem <genP:1> : exists <var:k> <var:w> <var:K> <var:P> <var:L> <var:b> <var:q> <var:p> : nat , ( <nat:4804800> = <var:k> * <var:w> * <var:K> * <var:P> * <var:L> * <var:b> * <var:q> * <var:p> ) /\ ( <var:L> >= <nat:2> ) /\ ( <var:K> >= <nat:2> ) /\ ( <var:w> >= <nat:2> ) /\ ( <var:b> >= <nat:2> ) /\ ( <var:k> >= <nat:2> ) /\ ( <var:p> >= <nat:2> ) /\ ( <var:q> >= <nat:2> ) /\ ( <var:P> >= <nat:2> ) . Proof . exists <nat:11> . exists <nat:10> . exists <nat:6> . exists <nat:5> . exists <nat:7> . exists <nat:2> . exists <nat:13> . exists <nat:8> . assert ( <genH> : <nat:13> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:5> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:8> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:6> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:11> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:2> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:7> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:10> >= <nat:2> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 