\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:z> <nat:422> + <nat:394> <var:V> + <nat:354> <var:s> + <nat:17> + <var:O> <nat:334> $ is guaranteed to be odd for every $ <var:O> $ , $ <var:V> $ , $ <var:s> $ , and $ <var:z> \in \mathbb{Z}^+ $ . \end{theorem} \begin{proof} Our proposition holds by reason that $ <nat:394> * <var:V> + <var:z> * <nat:422> + <nat:334> * <var:O> + <nat:354> * <var:s> $ is guaranteed to be even . We know that the terms $ <nat:422> \times <var:z> $ and likewise $ <var:V> \times <nat:394> $ are clearly even positive integers . This is proven since the multiplication of an even number in $ \mathbb{Z}^+ $ with a whole number will be in itself an even natural number . Remember that the term $ <var:O> \times <nat:334> $ is known as an even number in $ \mathbb{N} $ . Furthermore , the term $ <var:s> \times <nat:354> $ is even from the knowledge the multiplication of an even positive integer with some integer will be fundamentally an even number . The result holds because multiplying of even whole numbers with a natural number must be even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:O> <var:V> <var:s> <var:z> : nat , Nat . odd ( <nat:422> * <var:z> + <nat:394> * <var:V> + <nat:354> * <var:s> + <nat:334> * <var:O> + <nat:17> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:422> * <var:z> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:394> * <var:V> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:334> * <var:O> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:354> * <var:s> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:422> * <var:z> + <nat:394> * <var:V> + <nat:354> * <var:s> + <nat:334> * <var:O> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . auto . Qed . 