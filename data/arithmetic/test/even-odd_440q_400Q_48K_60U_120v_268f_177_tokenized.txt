\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} With every $ <var:v> $ , $ <var:Q> $ , $ <var:q> $ , $ <var:K> $ , $ <var:f> $ , and $ <var:U> \in \mathbb{Z}^+ $ the expression $ <nat:440> \cdot <var:q> + <var:Q> \cdot <nat:400> + <nat:48> \cdot <var:K> + <nat:60> \cdot <var:U> + <nat:120> \cdot <var:v> + <nat:177> + <nat:268> \cdot <var:f> $ must be odd . \end{theorem} \begin{proof} Furthermore , the whole numbers $ <nat:440> $ , $ <nat:400> $ , $ <nat:48> $ , $ <nat:60> $ , $ <nat:120> $ , and also $ <nat:268> $ are even . For this reason , the pairs $ <nat:440> \cdot <var:q> $ , $ <var:Q> \cdot <nat:400> $ , $ <var:K> \cdot <nat:48> $ , $ <nat:60> \cdot <var:U> $ , $ <var:v> \cdot <nat:120> $ , additionally $ <nat:268> \cdot <var:f> $ must be even also . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:v> <var:Q> <var:q> <var:K> <var:f> <var:U> : nat , Nat . odd ( <nat:440> * <var:q> + <nat:400> * <var:Q> + <nat:48> * <var:K> + <nat:60> * <var:U> + <nat:120> * <var:v> + <nat:268> * <var:f> + <nat:177> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:440> = true ) . { auto . } assert ( <genH> : Nat . even <nat:400> = true ) . { auto . } assert ( <genH> : Nat . even <nat:48> = true ) . { auto . } assert ( <genH> : Nat . even <nat:60> = true ) . { auto . } assert ( <genH> : Nat . even <nat:120> = true ) . { auto . } assert ( <genH> : Nat . even <nat:268> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:440> * <var:q> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:400> * <var:Q> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:48> * <var:K> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:60> * <var:U> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:120> * <var:v> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:268> * <var:f> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 