\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:94> * <var:n> + <nat:414> * <var:W> + <nat:394> * <var:Y> + <var:X> * <nat:288> + <nat:496> * <var:B> + <nat:89> + <nat:376> * <var:d> + <var:a> * <nat:304> + <var:h> * <nat:456> + <var:J> * <nat:44> $ is odd with any $ <var:n> $ , $ <var:d> $ , $ <var:J> $ , $ <var:X> $ , $ <var:W> $ , $ <var:Y> $ , $ <var:B> $ , $ <var:a> $ , and $ <var:h> $ . \end{theorem} \begin{proof} This theorem is true by reason that $ <nat:304> * <var:a> + <var:n> * <nat:94> + <nat:456> * <var:h> + <nat:44> * <var:J> + <var:d> * <nat:376> + <var:Y> * <nat:394> + <nat:288> * <var:X> + <var:W> * <nat:414> + <var:B> * <nat:496> $ is known as even . The positive integers $ <nat:394> $ , $ <nat:44> $ , $ <nat:496> $ , $ <nat:376> $ , $ <nat:94> $ , $ <nat:456> $ , and also $ <nat:414> $ are clearly even integers The integer $ <nat:288> $ is guaranteed to be even Take note the positive integer $ <nat:304> $ is guaranteed to be an even whole number It can be shown that $ <nat:394> * <var:Y> + <nat:304> * <var:a> + <nat:414> * <var:W> + <var:h> * <nat:456> + <nat:288> * <var:X> + <nat:376> * <var:d> + <var:n> * <nat:94> + <nat:89> + <nat:496> * <var:B> + <var:J> * <nat:44> $ must be odd . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:n> <var:d> <var:J> <var:X> <var:W> <var:Y> <var:B> <var:a> <var:h> : nat , Nat . odd ( <nat:94> * <var:n> + <nat:414> * <var:W> + <nat:394> * <var:Y> + <nat:288> * <var:X> + <nat:496> * <var:B> + <nat:376> * <var:d> + <nat:304> * <var:a> + <nat:456> * <var:h> + <nat:44> * <var:J> + <nat:89> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:394> = true ) . { auto . } assert ( <genH> : Nat . even <nat:44> = true ) . { auto . } assert ( <genH> : Nat . even <nat:496> = true ) . { auto . } assert ( <genH> : Nat . even <nat:376> = true ) . { auto . } assert ( <genH> : Nat . even <nat:94> = true ) . { auto . } assert ( <genH> : Nat . even <nat:456> = true ) . { auto . } assert ( <genH> : Nat . even <nat:414> = true ) . { auto . } assert ( <genH> : Nat . even <nat:288> = true ) . { auto . } assert ( <genH> : Nat . even <nat:304> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:94> * <var:n> + <nat:414> * <var:W> + <nat:394> * <var:Y> + <nat:288> * <var:X> + <nat:496> * <var:B> + <nat:376> * <var:d> + <nat:304> * <var:a> + <nat:456> * <var:h> + <nat:44> * <var:J> ) = true ) . { repeat rewrite Nat . even_add . repeat rewrite Nat . even_mul . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . auto . Qed . 