\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:209> + <nat:42> \times <var:h> + <var:E> \times <nat:422> + <var:V> \times <nat:138> + <var:X> \times <nat:478> + <var:s> \times <nat:492> + <nat:154> \times <var:d> $ is odd given terms $ <var:h> $ , $ <var:s> $ , $ <var:X> $ , $ <var:E> $ , $ <var:V> $ , and $ <var:d> $ . \end{theorem} \begin{proof} The whole number $ <nat:42> $ is trivially even . As a consequence , the term $ <nat:42> \times <var:h> $ must be even as well . In addition to this , remember that the leading term $ <nat:422> $ is known as an even number . For this reason , $ <var:E> \times <nat:422> $ is guaranteed to be even in addition . Notice $ <var:V> \times <nat:138> $ is an even number in $ \mathbb{Z}^+ $ by reason that the multiplication between an even positive integer and some number in $ \mathbb{Z}^+ $ is guaranteed to be even . This holds from the fact the leading term $ <nat:138> $ is obviously fundamentally an even whole number . On top of this , take note that the whole number $ <nat:154> $ is known to be an even element of $ \mathbb{Z}^+ $ . Thus , the product $ <var:d> \times <nat:154> $ must be even also . Further , recall the whole number $ <nat:492> $ is guaranteed to be even . For this reason , the term $ <var:s> \times <nat:492> $ is even at the same time . Notice the coefficient $ <nat:478> $ is guaranteed to be an even natural number . In consequence , the product $ <var:X> \times <nat:478> $ is guaranteed to be even at the same time . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:h> <var:s> <var:X> <var:E> <var:V> <var:d> : nat , Nat . odd ( <nat:42> * <var:h> + <nat:422> * <var:E> + <nat:138> * <var:V> + <nat:478> * <var:X> + <nat:492> * <var:s> + <nat:154> * <var:d> + <nat:209> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:42> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:42> * <var:h> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:422> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:422> * <var:E> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:138> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:138> * <var:V> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:154> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:154> * <var:d> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:492> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:492> * <var:s> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:478> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:478> * <var:X> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 