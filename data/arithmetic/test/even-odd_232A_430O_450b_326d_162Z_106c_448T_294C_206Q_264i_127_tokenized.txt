\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:C> \cdot <nat:294> + <nat:232> \cdot <var:A> + <nat:326> \cdot <var:d> + <nat:127> + <nat:162> \cdot <var:Z> + <var:Q> \cdot <nat:206> + <var:c> \cdot <nat:106> + <var:b> \cdot <nat:450> + <nat:448> \cdot <var:T> + <var:O> \cdot <nat:430> + <nat:264> \cdot <var:i> $ is guaranteed to be odd . \end{theorem} \begin{proof} The pairs $ <var:C> \times <nat:294> $ and moreover $ <var:O> \times <nat:430> $ must be even elements of $ \mathbb{Z}^+ $ from the fact the multiplication of an even whole number with an arbitrary positive integer is even . Take note the terms $ <nat:450> \times <var:b> $ as well as $ <nat:448> \times <var:T> $ will be even numbers in $ \mathbb{N} $ . This claim is proven by reason that multiplying between an even positive integer and an arbitrary element of $ \mathbb{Z}^+ $ is guaranteed to be even . Observe the terms $ <var:c> \times <nat:106> $ , $ <nat:206> \times <var:Q> $ , $ <var:Z> \times <nat:162> $ , $ <nat:232> \times <var:A> $ , and $ <nat:326> \times <var:d> $ are even elements of $ \mathbb{Z}^+ $ . See that the term $ <var:i> \times <nat:264> $ is trivially even . It can be justified that $ <nat:232> \cdot <var:A> + <nat:430> \cdot <var:O> + <var:b> \cdot <nat:450> + <var:d> \cdot <nat:326> + <var:Z> \cdot <nat:162> + <var:c> \cdot <nat:106> + <nat:448> \cdot <var:T> + <var:C> \cdot <nat:294> + <nat:127> + <var:Q> \cdot <nat:206> + <nat:264> \cdot <var:i> $ must be odd . Remember that $ <nat:127> $ is obviously an odd element of $ \mathbb{Z}^+ $ . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:C> <var:A> <var:d> <var:Z> <var:Q> <var:c> <var:b> <var:T> <var:O> <var:i> : nat , Nat . odd ( <nat:294> * <var:C> + <nat:232> * <var:A> + <nat:326> * <var:d> + <nat:162> * <var:Z> + <nat:206> * <var:Q> + <nat:106> * <var:c> + <nat:450> * <var:b> + <nat:448> * <var:T> + <nat:430> * <var:O> + <nat:264> * <var:i> + <nat:127> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:294> * <var:C> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:430> * <var:O> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:450> * <var:b> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:448> * <var:T> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:106> * <var:c> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:206> * <var:Q> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:162> * <var:Z> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:232> * <var:A> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:326> * <var:d> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:264> * <var:i> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . odd <nat:127> = true ) . { auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 