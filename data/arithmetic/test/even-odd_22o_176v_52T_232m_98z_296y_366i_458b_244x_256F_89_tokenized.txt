\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:256> \times <var:F> + <var:z> \times <nat:98> + <nat:458> \times <var:b> + <nat:89> + <nat:244> \times <var:x> + <var:o> \times <nat:22> + <var:i> \times <nat:366> + <nat:232> \times <var:m> + <var:y> \times <nat:296> + <nat:52> \times <var:T> + <var:v> \times <nat:176> $ will be odd . \end{theorem} \begin{proof} We justify $ <var:i> \cdot <nat:366> + <nat:176> \cdot <var:v> + <var:b> \cdot <nat:458> + <var:F> \cdot <nat:256> + <nat:232> \cdot <var:m> + <nat:52> \cdot <var:T> + <nat:22> \cdot <var:o> + <var:y> \cdot <nat:296> + <nat:89> + <nat:244> \cdot <var:x> + <nat:98> \cdot <var:z> $ is odd . We show the summation $ <var:z> <nat:98> + <var:b> <nat:458> + <nat:52> <var:T> + <var:i> <nat:366> + <var:y> <nat:296> + <nat:256> <var:F> + <var:o> <nat:22> + <var:m> <nat:232> + <nat:89> + <nat:176> <var:v> + <var:x> <nat:244> $ is trivially odd from the knowledge the expression $ <var:y> \times <nat:296> + <var:z> \times <nat:98> + <nat:176> \times <var:v> + <var:b> \times <nat:458> + <nat:22> \times <var:o> + <var:T> \times <nat:52> + <var:m> \times <nat:232> + <var:F> \times <nat:256> + <var:x> \times <nat:244> + <nat:366> \times <var:i> $ is clearly even . The positive integers $ <nat:296> $ , $ <nat:98> $ , $ <nat:176> $ , $ <nat:458> $ , $ <nat:22> $ , $ <nat:52> $ , $ <nat:232> $ , $ <nat:256> $ , $ <nat:244> $ , plus $ <nat:366> $ are known as even . As a consequence , the products $ <nat:296> \times <var:y> $ , $ <nat:98> \times <var:z> $ , $ <var:v> \times <nat:176> $ , $ <var:b> \times <nat:458> $ , $ <var:o> \times <nat:22> $ , $ <nat:52> \times <var:T> $ , $ <nat:232> \times <var:m> $ , $ <var:F> \times <nat:256> $ , $ <nat:244> \times <var:x> $ , and likewise $ <var:i> \times <nat:366> $ is guaranteed to be even in addition . The formula $ <var:o> \cdot <nat:22> + <var:v> \cdot <nat:176> + <var:T> \cdot <nat:52> + <nat:232> \cdot <var:m> + <var:z> \cdot <nat:98> + <var:y> \cdot <nat:296> + <var:i> \cdot <nat:366> + <var:b> \cdot <nat:458> + <nat:244> \cdot <var:x> + <var:F> \cdot <nat:256> $ is even because multiplying of an even number in $ \mathbb{Z}^+ $ and a natural must be an even integer . The adding between even positive integers concurrently and an odd number is guaranteed to be odd . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:F> <var:z> <var:b> <var:x> <var:o> <var:i> <var:m> <var:y> <var:T> <var:v> : nat , Nat . odd ( <nat:256> * <var:F> + <nat:98> * <var:z> + <nat:458> * <var:b> + <nat:244> * <var:x> + <nat:22> * <var:o> + <nat:366> * <var:i> + <nat:232> * <var:m> + <nat:296> * <var:y> + <nat:52> * <var:T> + <nat:176> * <var:v> + <nat:89> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:296> = true ) . { auto . } assert ( <genH> : Nat . even <nat:98> = true ) . { auto . } assert ( <genH> : Nat . even <nat:176> = true ) . { auto . } assert ( <genH> : Nat . even <nat:458> = true ) . { auto . } assert ( <genH> : Nat . even <nat:22> = true ) . { auto . } assert ( <genH> : Nat . even <nat:52> = true ) . { auto . } assert ( <genH> : Nat . even <nat:232> = true ) . { auto . } assert ( <genH> : Nat . even <nat:256> = true ) . { auto . } assert ( <genH> : Nat . even <nat:244> = true ) . { auto . } assert ( <genH> : Nat . even <nat:366> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:296> * <var:y> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:98> * <var:z> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:176> * <var:v> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:458> * <var:b> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:22> * <var:o> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:52> * <var:T> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:232> * <var:m> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:256> * <var:F> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:244> * <var:x> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:366> * <var:i> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:256> * <var:F> + <nat:98> * <var:z> + <nat:458> * <var:b> + <nat:244> * <var:x> + <nat:22> * <var:o> + <nat:366> * <var:i> + <nat:232> * <var:m> + <nat:296> * <var:y> + <nat:52> * <var:T> + <nat:176> * <var:v> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . auto . Qed . 