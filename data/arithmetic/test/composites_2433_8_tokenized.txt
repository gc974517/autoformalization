\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Let that iff there are numbers $ <var:S> $ , $ <var:Q> $ , $ <var:U> $ , $ <var:f> $ , $ <var:F> $ , $ <var:d> $ , $ <var:n> $ , $ <var:o> $ satisfying the condition that $ <var:Q> $ , $ <var:f> $ , $ <var:S> $ , $ <var:U> $ , $ <var:o> $ , $ <var:n> $ , $ <var:F> $ and $ <var:d> > <nat:1> $ . We claim that $ <var:C> \in \mathbb{Z}^+ $ will be considered to be <def:eight-composite> when $ <var:S> * <var:F> * <var:f> * <var:Q> * <var:d> * <var:n> * <var:o> * <var:U> = <var:C> $ . Hence the whole number <nat:2851200> is a <def:eight-composite> number . \end{theorem} \begin{proof} Let $ <var:U> = <nat:4> $ , $ <var:Q> = <nat:8> $ , $ <var:f> = <nat:5> $ , $ <var:F> = <nat:3> $ , $ <var:n> = <nat:10> $ , $ <var:o> = <nat:9> $ , $ <var:S> = <nat:6> $ and $ <var:d> = <nat:11> $ . We present our proposition is true considering $ <var:o> = <nat:9> $ , $ <var:f> = <nat:5> $ , $ <var:F> = <nat:3> $ , $ <var:S> = <nat:6> $ , $ <var:n> = <nat:10> $ , $ <var:Q> = <nat:8> $ , $ <var:d> = <nat:11> $ and $ <var:U> = <nat:4> $ are larger than <nat:1> . Consequently , $ <nat:2851200> = <var:Q> \times <var:n> \times <var:d> \times <var:S> \times <var:f> \times <var:U> \times <var:F> \times <var:o> $ has been verified . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:eight-composite> ( <var:C> : nat ) := exists <var:S> <var:Q> <var:U> <var:f> <var:F> <var:d> <var:n> <var:o> : nat , ( <var:Q> > <nat:1> ) /\ ( <var:f> > <nat:1> ) /\ ( <var:S> > <nat:1> ) /\ ( <var:U> > <nat:1> ) /\ ( <var:o> > <nat:1> ) /\ ( <var:n> > <nat:1> ) /\ ( <var:F> > <nat:1> ) /\ ( <var:d> > <nat:1> ) /\ ( <var:S> * <var:F> * <var:f> * <var:Q> * <var:d> * <var:n> * <var:o> * <var:U> = <var:C> ) . Theorem <genP:1> : <def:eight-composite> <nat:2851200> . Proof . unfold <def:eight-composite> . exists <nat:6> . exists <nat:8> . exists <nat:4> . exists <nat:5> . exists <nat:3> . exists <nat:11> . exists <nat:10> . exists <nat:9> . assert ( <genH> : <nat:9> > <nat:1> ) . { lia . } assert ( <genH> : <nat:5> > <nat:1> ) . { lia . } assert ( <genH> : <nat:3> > <nat:1> ) . { lia . } assert ( <genH> : <nat:6> > <nat:1> ) . { lia . } assert ( <genH> : <nat:10> > <nat:1> ) . { lia . } assert ( <genH> : <nat:8> > <nat:1> ) . { lia . } assert ( <genH> : <nat:11> > <nat:1> ) . { lia . } assert ( <genH> : <nat:4> > <nat:1> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 