\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:F> <nat:218> + <nat:84> <var:Y> + <var:p> <nat:328> + <var:z> <nat:390> + <nat:411> + <var:j> <nat:416> + <nat:296> <var:v> + <nat:64> <var:d> + <var:a> <nat:348> + <var:l> <nat:162> + <nat:194> <var:g> + <nat:244> <var:C> $ must be odd . \end{theorem} \begin{proof} Recall that $ <nat:411> $ is obviously an odd number . Taking the product between an even integer with some element of $ \mathbb{Z}^+ $ is even . Remember that the numbers $ <nat:194> $ , $ <nat:416> $ , additionally $ <nat:328> $ are guaranteed to be even integers Building on , notice the natural numbers $ <nat:84> $ and likewise $ <nat:64> $ are clearly even The integers $ <nat:348> $ , $ <nat:296> $ , and also $ <nat:390> $ are clearly even In addition to this , the numbers $ <nat:162> $ and likewise $ <nat:244> $ are obviously even naturals Building on , the leading term $ <nat:218> $ is known as an even whole number \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:F> <var:Y> <var:p> <var:z> <var:j> <var:v> <var:d> <var:a> <var:l> <var:g> <var:C> : nat , Nat . odd ( <nat:218> * <var:F> + <nat:84> * <var:Y> + <nat:328> * <var:p> + <nat:390> * <var:z> + <nat:416> * <var:j> + <nat:296> * <var:v> + <nat:64> * <var:d> + <nat:348> * <var:a> + <nat:162> * <var:l> + <nat:194> * <var:g> + <nat:244> * <var:C> + <nat:411> ) = true . Proof . intros . assert ( <genH> : Nat . odd <nat:411> = true ) . { auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . repeat rewrite Nat . even_mul . assert ( <genH> : Nat . even <nat:194> = true ) . { auto . } assert ( <genH> : Nat . even <nat:416> = true ) . { auto . } assert ( <genH> : Nat . even <nat:328> = true ) . { auto . } assert ( <genH> : Nat . even <nat:84> = true ) . { auto . } assert ( <genH> : Nat . even <nat:64> = true ) . { auto . } assert ( <genH> : Nat . even <nat:348> = true ) . { auto . } assert ( <genH> : Nat . even <nat:296> = true ) . { auto . } assert ( <genH> : Nat . even <nat:390> = true ) . { auto . } assert ( <genH> : Nat . even <nat:162> = true ) . { auto . } assert ( <genH> : Nat . even <nat:244> = true ) . { auto . } assert ( <genH> : Nat . even <nat:218> = true ) . { auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 