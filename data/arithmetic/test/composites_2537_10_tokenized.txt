\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Supposing we have $ <var:F> $ , $ <var:z> $ , $ <var:r> $ , $ <var:e> $ , $ <var:Q> $ , $ <var:y> $ , $ <var:H> $ , $ <var:n> $ , $ <var:k> $ and $ <var:w> \geq <nat:2> $ so that taking some integer $ <var:m> $ , $ <var:m> = <var:n> \times <var:w> \times <var:y> \times <var:Q> \times <var:k> \times <var:e> \times <var:r> \times <var:z> \times <var:F> \times <var:H> $ for some numbers $ <var:n> $ , $ <var:y> $ , $ <var:e> $ , $ <var:w> $ , $ <var:H> $ , $ <var:Q> $ , $ <var:z> $ , $ <var:k> $ , $ <var:r> $ , $ <var:F> $ , then we claim that $ <var:m> $ is <def:ten-composite> . So $ <nat:311351040> = <var:m> $ is a <def:ten-composite> whole number . \end{theorem} \begin{proof} Allow $ <var:r> = <nat:8> $ , $ <var:Q> = <nat:6> $ , $ <var:H> = <nat:4> $ , $ <var:k> = <nat:5> $ , $ <var:y> = <nat:7> $ , $ <var:w> = <nat:12> $ , $ <var:F> = <nat:9> $ , $ <var:n> = <nat:13> $ , $ <var:z> = <nat:3> $ , and $ <var:e> = <nat:11> $ . In addition notice $ <var:w> = <nat:12> $ , $ <var:e> = <nat:11> $ , $ <var:r> = <nat:8> $ , $ <var:y> = <nat:7> $ , $ <var:z> = <nat:3> $ , $ <var:F> = <nat:9> $ , $ <var:Q> = <nat:6> $ , $ <var:k> = <nat:5> $ , $ <var:H> = <nat:4> $ , $ <var:n> = <nat:13> \geq <nat:2> $ . Therefore , $ <var:H> $ , $ <var:k> $ , $ <var:r> $ , $ <var:w> $ , $ <var:z> $ , $ <var:F> $ , $ <var:n> $ , $ <var:e> $ , $ <var:y> $ , $ <var:Q> $ are larger than or equal to <nat:2> as well as $ <nat:311351040> = <var:z> \times <var:w> \times <var:y> \times <var:H> \times <var:F> \times <var:n> \times <var:r> \times <var:e> \times <var:Q> \times <var:k> $ is verified . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:ten-composite> ( <var:m> : nat ) := exists <var:n> <var:y> <var:e> <var:w> <var:H> <var:Q> <var:z> <var:k> <var:r> <var:F> : nat , ( <var:F> >= <nat:2> ) /\ ( <var:z> >= <nat:2> ) /\ ( <var:r> >= <nat:2> ) /\ ( <var:e> >= <nat:2> ) /\ ( <var:Q> >= <nat:2> ) /\ ( <var:y> >= <nat:2> ) /\ ( <var:H> >= <nat:2> ) /\ ( <var:n> >= <nat:2> ) /\ ( <var:k> >= <nat:2> ) /\ ( <var:w> >= <nat:2> ) /\ ( <var:m> = <var:n> * <var:w> * <var:y> * <var:Q> * <var:k> * <var:e> * <var:r> * <var:z> * <var:F> * <var:H> ) . Theorem <genP:1> : <def:ten-composite> <nat:311351040> . Proof . unfold <def:ten-composite> . exists <nat:13> . exists <nat:7> . exists <nat:11> . exists <nat:12> . exists <nat:4> . exists <nat:6> . exists <nat:3> . exists <nat:5> . exists <nat:8> . exists <nat:9> . assert ( <genH> : <nat:12> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:11> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:8> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:7> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:3> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:9> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:6> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:5> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:4> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:13> >= <nat:2> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 