\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:463> + <nat:274> * <var:Q> + <nat:182> * <var:y> + <nat:130> * <var:B> + <nat:264> * <var:M> + <nat:356> * <var:p> + <nat:12> * <var:w> $ will be odd . \end{theorem} \begin{proof} We show that the summation $ <var:Q> * <nat:274> + <var:M> * <nat:264> + <var:w> * <nat:12> + <var:p> * <nat:356> + <var:B> * <nat:130> + <var:y> * <nat:182> $ is guaranteed to be even . The terms $ <nat:356> \cdot <var:p> $ and $ <nat:130> \cdot <var:B> $ are known to be even elements of $ \mathbb{N} $ . Remember the products $ <var:w> \cdot <nat:12> $ and $ <var:M> \cdot <nat:264> $ are trivially even natural numbers . In addition , we know that the pair $ <var:y> \cdot <nat:182> $ is obviously even . This must be true since the product of an even natural number and any positive integer is even . In addition , notice the pair $ <nat:274> \cdot <var:Q> $ is trivially even . As a consequence that taking the product between even whole numbers with a integer is guaranteed to be even this result is proven . We justify $ <var:y> \cdot <nat:182> + <nat:264> \cdot <var:M> + <var:B> \cdot <nat:130> + <var:p> \cdot <nat:356> + <nat:274> \cdot <var:Q> + <nat:12> \cdot <var:w> + <nat:463> $ will be odd . See that the summation between even numbers in $ \mathbb{N} $ collectively and an odd natural number is odd . Remember that $ <nat:463> $ is trivially an odd number . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:Q> <var:y> <var:B> <var:M> <var:p> <var:w> : nat , Nat . odd ( <nat:274> * <var:Q> + <nat:182> * <var:y> + <nat:130> * <var:B> + <nat:264> * <var:M> + <nat:356> * <var:p> + <nat:12> * <var:w> + <nat:463> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:356> * <var:p> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:130> * <var:B> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:12> * <var:w> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:264> * <var:M> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:182> * <var:y> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:274> * <var:Q> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:274> * <var:Q> + <nat:182> * <var:y> + <nat:130> * <var:B> + <nat:264> * <var:M> + <nat:356> * <var:p> + <nat:12> * <var:w> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . assert ( <genH> : Nat . odd <nat:463> = true ) . { auto . } rewrite <- Nat . negb_even . rewrite <genH> . rewrite <genH> . auto . Qed . 