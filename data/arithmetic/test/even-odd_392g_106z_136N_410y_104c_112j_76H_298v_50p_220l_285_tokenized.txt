\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Using some positive terms $ <var:g> $ , $ <var:l> $ , $ <var:y> $ , $ <var:N> $ , $ <var:v> $ , $ <var:z> $ , $ <var:c> $ , $ <var:j> $ , $ <var:H> $ , and $ <var:p> $ the formula $ <nat:392> <var:g> + <nat:106> <var:z> + <nat:136> <var:N> + <nat:285> + <var:y> <nat:410> + <var:c> <nat:104> + <var:j> <nat:112> + <var:H> <nat:76> + <var:v> <nat:298> + <nat:50> <var:p> + <var:l> <nat:220> $ is guaranteed to be odd . \end{theorem} \begin{proof} Remember that the coefficients $ <nat:76> $ , $ <nat:104> $ , $ <nat:298> $ , $ <nat:410> $ , additionally $ <nat:392> $ are known to be even integers Likewise , the number $ <nat:136> $ is clearly even In addition to this , notice that the natural numbers $ <nat:220> $ , $ <nat:112> $ , and also $ <nat:106> $ are even numbers in $ \mathbb{Z}^+ $ In addition to this , take note that the integer $ <nat:50> $ is guaranteed to be an even positive integer \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:g> <var:l> <var:y> <var:N> <var:v> <var:z> <var:c> <var:j> <var:H> <var:p> : nat , Nat . odd ( <nat:392> * <var:g> + <nat:106> * <var:z> + <nat:136> * <var:N> + <nat:410> * <var:y> + <nat:104> * <var:c> + <nat:112> * <var:j> + <nat:76> * <var:H> + <nat:298> * <var:v> + <nat:50> * <var:p> + <nat:220> * <var:l> + <nat:285> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:76> = true ) . { auto . } assert ( <genH> : Nat . even <nat:104> = true ) . { auto . } assert ( <genH> : Nat . even <nat:298> = true ) . { auto . } assert ( <genH> : Nat . even <nat:410> = true ) . { auto . } assert ( <genH> : Nat . even <nat:392> = true ) . { auto . } assert ( <genH> : Nat . even <nat:136> = true ) . { auto . } assert ( <genH> : Nat . even <nat:220> = true ) . { auto . } assert ( <genH> : Nat . even <nat:112> = true ) . { auto . } assert ( <genH> : Nat . even <nat:106> = true ) . { auto . } assert ( <genH> : Nat . even <nat:50> = true ) . { auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . repeat rewrite Nat . even_mul . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 