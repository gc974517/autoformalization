\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:82> * <var:i> + <nat:89> + <var:Y> * <nat:208> + <var:v> * <nat:496> + <var:Z> * <nat:296> + <nat:284> * <var:A> + <nat:6> * <var:W> + <var:b> * <nat:206> + <var:P> * <nat:242> + <var:f> * <nat:156> $ must be odd . \end{theorem} \begin{proof} The totaling of an even whole number and an odd number in $ \mathbb{N} $ is an odd whole number . Recall that the pairs $ <nat:206> \cdot <var:b> $ , $ <nat:296> \cdot <var:Z> $ , $ <var:W> \cdot <nat:6> $ , $ <var:v> \cdot <nat:496> $ , $ <var:A> \cdot <nat:284> $ , in addition to $ <nat:156> \cdot <var:f> $ are even . This is proven by reason that the multiplication between an even whole number and some element of $ \mathbb{Z}^+ $ is even . See the pair $ <var:i> \cdot <nat:82> $ is even . On top of this , we know that the pair $ <nat:208> \cdot <var:Y> $ is guaranteed to be an even number in $ \mathbb{Z}^+ $ . Adding on , see the term $ <nat:242> \cdot <var:P> $ is known to be even . It can be verified that this claim is true . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:i> <var:Y> <var:v> <var:Z> <var:A> <var:W> <var:b> <var:P> <var:f> : nat , Nat . odd ( <nat:82> * <var:i> + <nat:208> * <var:Y> + <nat:496> * <var:v> + <nat:296> * <var:Z> + <nat:284> * <var:A> + <nat:6> * <var:W> + <nat:206> * <var:b> + <nat:242> * <var:P> + <nat:156> * <var:f> + <nat:89> ) = true . Proof . intros . rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . assert ( <genH> : Nat . even ( <nat:206> * <var:b> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:296> * <var:Z> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:6> * <var:W> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:496> * <var:v> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:284> * <var:A> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:156> * <var:f> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:82> * <var:i> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:208> * <var:Y> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:242> * <var:P> ) = true ) . { rewrite Nat . even_mul . auto . } rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 