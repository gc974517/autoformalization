\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:494> <var:s> + <nat:164> <var:u> + <nat:192> <var:d> + <nat:407> + <var:m> <nat:104> + <nat:228> <var:n> + <nat:84> <var:B> + <var:D> <nat:126> + <nat:496> <var:z> + <nat:38> <var:q> + <nat:334> <var:r> + <nat:76> <var:t> $ must be odd for all $ <var:d> $ , $ <var:r> $ , $ <var:B> $ , $ <var:t> $ , $ <var:n> $ , $ <var:z> $ , $ <var:m> $ , $ <var:u> $ , $ <var:s> $ , $ <var:D> $ , and $ <var:q> \in \mathbb{N} $ . \end{theorem} \begin{proof} It can be justified that the theorem must be true . The integers $ <nat:334> $ , $ <nat:76> $ , $ <nat:192> $ , and $ <nat:164> $ are obviously even . Hence , the pairs $ <nat:334> \times <var:r> $ , $ <var:t> \times <nat:76> $ , $ <var:d> \times <nat:192> $ , as well as $ <nat:164> \times <var:u> $ is guaranteed to be even as well . What's more , recall the natural numbers $ <nat:494> $ and moreover $ <nat:38> $ are even numbers . For this reason , the products $ <nat:494> \times <var:s> $ as well as $ <var:q> \times <nat:38> $ is guaranteed to be even at the same time . Furthermore , the terms $ <var:m> \times <nat:104> $ , $ <nat:228> \times <var:n> $ , additionally $ <var:B> \times <nat:84> $ are guaranteed to be even numbers in $ \mathbb{N} $ because the whole numbers $ <nat:104> $ , $ <nat:228> $ , and moreover $ <nat:84> $ are clearly even positive integers . In addition , the product $ <var:D> \times <nat:126> $ is clearly even . This fact must be true from the knowledge the multiplication between an even positive integer and some whole number must be an even positive integer . This fact is true since the positive integer $ <nat:126> $ is obviously in itself an even number . $ <nat:496> \times <var:z> $ is known as even . This fact is true as a consequence that the product between an even natural with a element of $ \mathbb{N} $ is guaranteed to be even . This is true since the natural number $ <nat:496> $ is clearly by its very nature an even whole number . Remember that the summing of even numbers in $ \mathbb{Z}^+ $ concurrently with an odd integer will be odd . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:d> <var:r> <var:B> <var:t> <var:n> <var:z> <var:m> <var:u> <var:s> <var:D> <var:q> : nat , Nat . odd ( <nat:494> * <var:s> + <nat:164> * <var:u> + <nat:192> * <var:d> + <nat:104> * <var:m> + <nat:228> * <var:n> + <nat:84> * <var:B> + <nat:126> * <var:D> + <nat:496> * <var:z> + <nat:38> * <var:q> + <nat:334> * <var:r> + <nat:76> * <var:t> + <nat:407> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:334> = true ) . { auto . } assert ( <genH> : Nat . even <nat:76> = true ) . { auto . } assert ( <genH> : Nat . even <nat:192> = true ) . { auto . } assert ( <genH> : Nat . even <nat:164> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:334> * <var:r> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:76> * <var:t> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:192> * <var:d> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:164> * <var:u> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:494> = true ) . { auto . } assert ( <genH> : Nat . even <nat:38> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:494> * <var:s> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:38> * <var:q> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:104> = true ) . { auto . } assert ( <genH> : Nat . even <nat:228> = true ) . { auto . } assert ( <genH> : Nat . even <nat:84> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:104> * <var:m> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:228> * <var:n> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:84> * <var:B> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:126> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:126> * <var:D> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:496> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:496> * <var:z> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 