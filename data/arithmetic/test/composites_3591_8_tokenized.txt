\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \newtheorem{definition}{Definition} \begin{document} \begin{definition} Granted that we have $ <var:K> = <var:t> \times <var:o> \times <var:J> \times <var:U> \times <var:P> \times <var:k> \times <var:d> \times <var:O> $ assuming some $ <var:K> $ and so that $ <var:O> $ , $ <var:U> $ , $ <var:d> $ , $ <var:J> $ , $ <var:P> $ , $ <var:t> $ , $ <var:k> $ , $ <var:o> \geq <nat:2> $ , we claim that $ <var:K> $ is a <def:eight-composite> positive integer using some $ <var:O> $ , $ <var:U> $ , $ <var:d> $ , $ <var:t> $ , $ <var:P> $ , $ <var:o> $ , $ <var:J> $ , $ <var:k> \in \mathbb{Z}^+ $ . \end{definition} \begin{theorem} The positive integer <nat:2073600> is a <def:eight-composite> integer . \end{theorem} \begin{proof} Recall that <nat:2073600> is a <def:eight-composite> integer with the condition that it is the product of natural numbers $ <var:d> $ , $ <var:O> $ , $ <var:J> $ , $ <var:P> $ , $ <var:t> $ , $ <var:U> $ , $ <var:o> $ , and $ <var:k> $ where $ <var:P> $ , $ <var:J> $ , $ <var:t> $ , $ <var:U> $ , $ <var:o> $ , $ <var:d> $ , $ <var:O> $ , and $ <var:k> > <nat:1> $ . Note that $ <nat:2073600> = <nat:4> * <nat:9> * <nat:2> * <nat:5> * <nat:6> * <nat:10> * <nat:8> * <nat:12> $ . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:eight-composite> ( <var:K> : nat ) := exists <var:O> <var:U> <var:d> <var:t> <var:P> <var:o> <var:J> <var:k> : nat , ( <var:K> = <var:t> * <var:o> * <var:J> * <var:U> * <var:P> * <var:k> * <var:d> * <var:O> ) /\ ( <var:O> >= <nat:2> ) /\ ( <var:U> >= <nat:2> ) /\ ( <var:d> >= <nat:2> ) /\ ( <var:J> >= <nat:2> ) /\ ( <var:P> >= <nat:2> ) /\ ( <var:t> >= <nat:2> ) /\ ( <var:k> >= <nat:2> ) /\ ( <var:o> >= <nat:2> ) . Theorem <genP:1> : <def:eight-composite> <nat:2073600> . Proof . unfold <def:eight-composite> . exists <nat:10> . exists <nat:12> . exists <nat:6> . exists <nat:8> . exists <nat:9> . exists <nat:2> . exists <nat:5> . exists <nat:4> . repeat split . all : lia . Qed . 