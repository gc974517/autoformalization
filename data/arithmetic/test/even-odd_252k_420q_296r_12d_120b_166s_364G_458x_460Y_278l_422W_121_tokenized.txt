\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:252> \cdot <var:k> + <nat:460> \cdot <var:Y> + <nat:120> \cdot <var:b> + <var:q> \cdot <nat:420> + <nat:121> + <var:d> \cdot <nat:12> + <var:x> \cdot <nat:458> + <var:l> \cdot <nat:278> + <var:r> \cdot <nat:296> + <var:G> \cdot <nat:364> + <nat:166> \cdot <var:s> + <nat:422> \cdot <var:W> $ will be odd assuming any natural numbers $ <var:q> $ , $ <var:k> $ , $ <var:G> $ , $ <var:b> $ , $ <var:l> $ , $ <var:W> $ , $ <var:x> $ , $ <var:d> $ , $ <var:r> $ , $ <var:s> $ , and $ <var:Y> $ . \end{theorem} \begin{proof} We apply the fact that the expression $ <var:q> \cdot <nat:420> + <nat:120> \cdot <var:b> + <nat:458> \cdot <var:x> + <nat:278> \cdot <var:l> + <var:d> \cdot <nat:12> + <nat:252> \cdot <var:k> + <var:W> \cdot <nat:422> + <nat:166> \cdot <var:s> + <var:Y> \cdot <nat:460> + <nat:364> \cdot <var:G> + <nat:296> \cdot <var:r> $ is trivially even . The terms $ <var:x> \cdot <nat:458> $ , $ <var:d> \cdot <nat:12> $ , $ <nat:278> \cdot <var:l> $ , $ <var:q> \cdot <nat:420> $ , $ <var:r> \cdot <nat:296> $ , $ <var:W> \cdot <nat:422> $ , and moreover $ <var:b> \cdot <nat:120> $ are even . The terms $ <nat:460> \cdot <var:Y> $ , $ <var:k> \cdot <nat:252> $ , and likewise $ <nat:364> \cdot <var:G> $ are even numbers in $ \mathbb{Z}^+ $ as a consequence that taking the product between an even element of $ \mathbb{Z}^+ $ with an arbitrary number in $ \mathbb{N} $ will be even . Remember $ <var:s> \cdot <nat:166> $ is known to be an even number in $ \mathbb{N} $ . By reason that the addition of an even number in $ \mathbb{N} $ and even elements of $ \mathbb{N} $ is even , the expression $ <var:k> \times <nat:252> + <var:q> \times <nat:420> + <var:r> \times <nat:296> + <nat:12> \times <var:d> + <nat:120> \times <var:b> + <nat:166> \times <var:s> + <var:G> \times <nat:364> + <nat:458> \times <var:x> + <var:Y> \times <nat:460> + <nat:278> \times <var:l> + <var:W> \times <nat:422> $ must be even . We justify our claim is true . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:q> <var:k> <var:G> <var:b> <var:l> <var:W> <var:x> <var:d> <var:r> <var:s> <var:Y> : nat , Nat . odd ( <nat:252> * <var:k> + <nat:460> * <var:Y> + <nat:120> * <var:b> + <nat:420> * <var:q> + <nat:12> * <var:d> + <nat:458> * <var:x> + <nat:278> * <var:l> + <nat:296> * <var:r> + <nat:364> * <var:G> + <nat:166> * <var:s> + <nat:422> * <var:W> + <nat:121> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:458> * <var:x> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:12> * <var:d> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:278> * <var:l> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:420> * <var:q> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:296> * <var:r> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:422> * <var:W> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:120> * <var:b> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:460> * <var:Y> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:252> * <var:k> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:364> * <var:G> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:166> * <var:s> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:252> * <var:k> + <nat:460> * <var:Y> + <nat:120> * <var:b> + <nat:420> * <var:q> + <nat:12> * <var:d> + <nat:458> * <var:x> + <nat:278> * <var:l> + <nat:296> * <var:r> + <nat:364> * <var:G> + <nat:166> * <var:s> + <nat:422> * <var:W> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . auto . Qed . 