\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:q> \cdot <nat:150> + <nat:316> \cdot <var:f> + <nat:280> \cdot <var:m> + <var:Z> \cdot <nat:228> + <var:L> \cdot <nat:320> + <var:w> \cdot <nat:34> + <nat:210> \cdot <var:X> + <nat:116> $ must be even . \end{theorem} \begin{proof} See $ <nat:116> $ is known to be an even number in $ \mathbb{N} $ . It can be shown that the expression $ <var:w> \cdot <nat:34> + <nat:280> \cdot <var:m> + <nat:316> \cdot <var:f> + <nat:228> \cdot <var:Z> + <var:L> \cdot <nat:320> + <nat:116> + <nat:150> \cdot <var:q> + <var:X> \cdot <nat:210> $ will be even . Observe that the coefficients $ <nat:280> $ , $ <nat:34> $ , $ <nat:228> $ , $ <nat:150> $ , $ <nat:316> $ , and also $ <nat:210> $ are guaranteed to be even whole numbers . Thus , the products $ <nat:280> \times <var:m> $ , $ <nat:34> \times <var:w> $ , $ <var:Z> \times <nat:228> $ , $ <nat:150> \times <var:q> $ , $ <nat:316> \times <var:f> $ , and moreover $ <nat:210> \times <var:X> $ is guaranteed to be even as well . Observe the coefficient $ <nat:320> $ is trivially even . Therefore , $ <var:L> \times <nat:320> $ is guaranteed to be even in addition . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:q> <var:f> <var:m> <var:Z> <var:L> <var:w> <var:X> : nat , Nat . even ( <nat:150> * <var:q> + <nat:316> * <var:f> + <nat:280> * <var:m> + <nat:228> * <var:Z> + <nat:320> * <var:L> + <nat:34> * <var:w> + <nat:210> * <var:X> + <nat:116> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:116> = true ) . { auto . } assert ( <genH> : Nat . even <nat:280> = true ) . { auto . } assert ( <genH> : Nat . even <nat:34> = true ) . { auto . } assert ( <genH> : Nat . even <nat:228> = true ) . { auto . } assert ( <genH> : Nat . even <nat:150> = true ) . { auto . } assert ( <genH> : Nat . even <nat:316> = true ) . { auto . } assert ( <genH> : Nat . even <nat:210> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:280> * <var:m> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:34> * <var:w> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:228> * <var:Z> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:150> * <var:q> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:316> * <var:f> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:210> * <var:X> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:320> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:320> * <var:L> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 