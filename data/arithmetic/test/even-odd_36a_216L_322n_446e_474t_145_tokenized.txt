\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:e> * <nat:446> + <nat:474> * <var:t> + <nat:145> + <nat:322> * <var:n> + <nat:36> * <var:a> + <nat:216> * <var:L> $ is odd given natural numbers $ <var:n> $ , $ <var:t> $ , $ <var:L> $ , $ <var:e> $ , and $ <var:a> $ . \end{theorem} \begin{proof} We know that the totaling between an even number in $ \mathbb{N} $ with an odd number in $ \mathbb{Z}^+ $ is trivially an odd whole number . Notice that $ <nat:145> $ is trivially an odd number in $ \mathbb{N} $ . The lemma must be true since $ <nat:36> <var:a> + <nat:216> <var:L> + <var:n> <nat:322> + <var:e> <nat:446> + <var:t> <nat:474> $ is trivially even . We know that the positive integers $ <nat:322> $ , $ <nat:36> $ , $ <nat:216> $ , as well as $ <nat:474> $ are known to be even Likewise , we know the positive integer $ <nat:446> $ is clearly an even natural Since the adding between even natural numbers with even numbers in $ \mathbb{N} $ will be even , this theorem is true . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:n> <var:t> <var:L> <var:e> <var:a> : nat , Nat . odd ( <nat:446> * <var:e> + <nat:474> * <var:t> + <nat:322> * <var:n> + <nat:36> * <var:a> + <nat:216> * <var:L> + <nat:145> ) = true . Proof . intros . rewrite Nat . odd_add . assert ( <genH> : Nat . odd <nat:145> = true ) . { auto . } assert ( <genH> : Nat . even <nat:322> = true ) . { auto . } assert ( <genH> : Nat . even <nat:36> = true ) . { auto . } assert ( <genH> : Nat . even <nat:216> = true ) . { auto . } assert ( <genH> : Nat . even <nat:474> = true ) . { auto . } assert ( <genH> : Nat . even <nat:446> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:446> * <var:e> + <nat:474> * <var:t> + <nat:322> * <var:n> + <nat:36> * <var:a> + <nat:216> * <var:L> ) = true ) . { repeat rewrite Nat . even_add . repeat rewrite Nat . even_mul . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite <- Nat . negb_even . rewrite <genH> . rewrite <genH> . auto . Qed . 