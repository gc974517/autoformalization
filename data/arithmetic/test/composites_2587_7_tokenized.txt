\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \newtheorem{definition}{Definition} \begin{document} \begin{definition} There are $ <var:f> $ , $ <var:U> $ , $ <var:S> $ , $ <var:a> $ , $ <var:P> $ , $ <var:I> $ , $ <var:x> \in \mathbb{N} $ more than or equal to <nat:2> . Say that some number $ <var:h> $ will be called a <def:seven-composite> integer if $ <var:P> \times <var:f> \times <var:a> \times <var:x> \times <var:S> \times <var:U> \times <var:I> = <var:h> $ . \end{definition} \begin{theorem} $ <nat:2096640> = <var:h> $ is <def:seven-composite> . \end{theorem} \begin{proof} Note $ <var:a> \times <var:x> \times <var:I> \times <var:P> \times <var:S> \times <var:f> \times <var:U> = <nat:2096640> $ gives $ <var:a> = <nat:7> $ , $ <var:f> = <nat:6> $ , $ <var:I> = <nat:4> $ , $ <var:S> = <nat:10> $ , $ <var:x> = <nat:12> $ , $ <var:P> = <nat:8> $ and $ <var:U> = <nat:13> $ . What's more observe $ <nat:10> $ , $ <nat:8> $ , $ <nat:4> $ , $ <nat:6> $ , $ <nat:12> $ , $ <nat:13> $ , and $ <nat:7> \geq <nat:2> $ . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:seven-composite> ( <var:h> : nat ) := exists <var:f> <var:U> <var:S> <var:a> <var:P> <var:I> <var:x> : nat , ( <var:f> >= <nat:2> ) /\ ( <var:U> >= <nat:2> ) /\ ( <var:S> >= <nat:2> ) /\ ( <var:a> >= <nat:2> ) /\ ( <var:P> >= <nat:2> ) /\ ( <var:I> >= <nat:2> ) /\ ( <var:x> >= <nat:2> ) /\ ( <var:P> * <var:f> * <var:a> * <var:x> * <var:S> * <var:U> * <var:I> = <var:h> ) . Theorem <genP:1> : <def:seven-composite> <nat:2096640> . Proof . unfold <def:seven-composite> . exists <nat:6> . exists <nat:13> . exists <nat:10> . exists <nat:7> . exists <nat:8> . exists <nat:4> . exists <nat:12> . assert ( <genH> : <nat:10> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:8> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:4> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:6> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:12> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:13> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:7> >= <nat:2> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 