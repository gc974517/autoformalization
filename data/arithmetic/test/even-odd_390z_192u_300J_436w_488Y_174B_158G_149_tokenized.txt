\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:390> * <var:z> + <nat:149> + <var:u> * <nat:192> + <nat:300> * <var:J> + <var:w> * <nat:436> + <var:Y> * <nat:488> + <var:B> * <nat:174> + <nat:158> * <var:G> $ will be odd assuming some $ <var:u> $ , $ <var:w> $ , $ <var:z> $ , $ <var:Y> $ , $ <var:B> $ , $ <var:G> $ , and $ <var:J> \in \mathbb{Z}^+ $ . \end{theorem} \begin{proof} Remember $ <nat:149> $ is guaranteed to be an odd element of $ \mathbb{N} $ . The totaling between an even natural and an odd element of $ \mathbb{N} $ will be odd . The products $ <nat:390> \times <var:z> $ , $ <var:u> \times <nat:192> $ , $ <var:J> \times <nat:300> $ , $ <var:w> \times <nat:436> $ , $ <var:Y> \times <nat:488> $ , $ <nat:174> \times <var:B> $ , in addition to $ <nat:158> \times <var:G> $ are guaranteed to be even . This claim holds as a consequence that multiplying between an even number with an arbitrary natural number will be even . This fact is proven as a consequence that the whole numbers $ <nat:390> $ , $ <nat:192> $ , $ <nat:300> $ , $ <nat:436> $ , $ <nat:488> $ , $ <nat:174> $ , and likewise $ <nat:158> $ are guaranteed to be even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:u> <var:w> <var:z> <var:Y> <var:B> <var:G> <var:J> : nat , Nat . odd ( <nat:390> * <var:z> + <nat:192> * <var:u> + <nat:300> * <var:J> + <nat:436> * <var:w> + <nat:488> * <var:Y> + <nat:174> * <var:B> + <nat:158> * <var:G> + <nat:149> ) = true . Proof . intros . assert ( <genH> : Nat . odd <nat:149> = true ) . { auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . assert ( <genH> : Nat . even <nat:390> = true ) . { auto . } assert ( <genH> : Nat . even <nat:192> = true ) . { auto . } assert ( <genH> : Nat . even <nat:300> = true ) . { auto . } assert ( <genH> : Nat . even <nat:436> = true ) . { auto . } assert ( <genH> : Nat . even <nat:488> = true ) . { auto . } assert ( <genH> : Nat . even <nat:174> = true ) . { auto . } assert ( <genH> : Nat . even <nat:158> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:390> * <var:z> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:192> * <var:u> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:300> * <var:J> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:436> * <var:w> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:488> * <var:Y> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:174> * <var:B> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:158> * <var:G> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 