\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:242> \times <var:T> + <var:X> \times <nat:394> + <nat:216> \times <var:y> + <var:A> \times <nat:134> + <nat:119> + <var:c> \times <nat:450> $ must be odd with natural numbers $ <var:c> $ , $ <var:X> $ , $ <var:T> $ , $ <var:y> $ , and $ <var:A> $ . \end{theorem} \begin{proof} The claim must be true as a consequence that $ <var:A> \times <nat:134> + <var:X> \times <nat:394> + <var:c> \times <nat:450> + <nat:242> \times <var:T> + <nat:216> \times <var:y> $ is even . The pairs $ <var:c> \cdot <nat:450> $ in addition to $ <var:T> \cdot <nat:242> $ must be even positive integers since the multiplication between an even number in $ \mathbb{Z}^+ $ and a number is an even integer . In addition , the term $ <var:X> \cdot <nat:394> $ is known as even since the multiplication of an even element of $ \mathbb{N} $ and some natural is instrinsically an even element of $ \mathbb{Z}^+ $ . Recall the pair $ <var:y> \cdot <nat:216> $ is trivially even . The term $ <nat:134> \cdot <var:A> $ is guaranteed to be an even positive integer . This holds by reason that multiplying between an even number and an arbitrary element of $ \mathbb{Z}^+ $ is even . As a consequence that multiplying of an even natural number and a whole number will be even the summation $ <var:A> \cdot <nat:134> + <var:T> \cdot <nat:242> + <var:X> \cdot <nat:394> + <nat:450> \cdot <var:c> + <nat:216> \cdot <var:y> $ will be even . Observe $ <nat:119> $ is guaranteed to be odd . The adding between an even element of $ \mathbb{N} $ with an odd element of $ \mathbb{N} $ must be odd . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:c> <var:X> <var:T> <var:y> <var:A> : nat , Nat . odd ( <nat:242> * <var:T> + <nat:394> * <var:X> + <nat:216> * <var:y> + <nat:134> * <var:A> + <nat:450> * <var:c> + <nat:119> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:450> * <var:c> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:242> * <var:T> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:394> * <var:X> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:216> * <var:y> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:134> * <var:A> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:242> * <var:T> + <nat:394> * <var:X> + <nat:216> * <var:y> + <nat:134> * <var:A> + <nat:450> * <var:c> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } assert ( <genH> : Nat . odd <nat:119> = true ) . { auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . rewrite <genH> . auto . Qed . 