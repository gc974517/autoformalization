\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:474> * <var:F> + <var:k> * <nat:262> + <nat:120> * <var:n> + <var:X> * <nat:126> + <var:l> * <nat:92> + <var:C> * <nat:208> + <nat:248> * <var:H> + <var:Y> * <nat:468> + <nat:55> + <nat:198> * <var:A> + <nat:494> * <var:x> $ must be odd . \end{theorem} \begin{proof} It can be shown that the sum $ <nat:208> \times <var:C> + <nat:474> \times <var:F> + <nat:468> \times <var:Y> + <nat:126> \times <var:X> + <nat:55> + <var:k> \times <nat:262> + <nat:494> \times <var:x> + <var:n> \times <nat:120> + <nat:92> \times <var:l> + <nat:198> \times <var:A> + <nat:248> \times <var:H> $ is odd . Observe that $ <nat:55> $ is known to be odd . The coefficients $ <nat:494> $ , $ <nat:262> $ , $ <nat:474> $ , additionally $ <nat:208> $ are obviously even On top of this , the whole numbers $ <nat:468> $ , $ <nat:126> $ , $ <nat:92> $ , $ <nat:248> $ , and $ <nat:198> $ are known as even numbers in $ \mathbb{N} $ Observe the leading term $ <nat:120> $ is clearly an even number \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:F> <var:k> <var:n> <var:X> <var:l> <var:C> <var:H> <var:Y> <var:A> <var:x> : nat , Nat . odd ( <nat:474> * <var:F> + <nat:262> * <var:k> + <nat:120> * <var:n> + <nat:126> * <var:X> + <nat:92> * <var:l> + <nat:208> * <var:C> + <nat:248> * <var:H> + <nat:468> * <var:Y> + <nat:198> * <var:A> + <nat:494> * <var:x> + <nat:55> ) = true . Proof . intros . assert ( <genH> : Nat . odd <nat:55> = true ) . { auto . } assert ( <genH> : Nat . even <nat:494> = true ) . { auto . } assert ( <genH> : Nat . even <nat:262> = true ) . { auto . } assert ( <genH> : Nat . even <nat:474> = true ) . { auto . } assert ( <genH> : Nat . even <nat:208> = true ) . { auto . } assert ( <genH> : Nat . even <nat:468> = true ) . { auto . } assert ( <genH> : Nat . even <nat:126> = true ) . { auto . } assert ( <genH> : Nat . even <nat:92> = true ) . { auto . } assert ( <genH> : Nat . even <nat:248> = true ) . { auto . } assert ( <genH> : Nat . even <nat:198> = true ) . { auto . } assert ( <genH> : Nat . even <nat:120> = true ) . { auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . repeat rewrite Nat . even_mul . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 