\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} For any positive numbers $ <var:u> $ , $ <var:B> $ , $ <var:x> $ , $ <var:e> $ , $ <var:j> $ , and $ <var:A> $ the sum $ <nat:456> + <nat:132> \cdot <var:j> + <nat:154> \cdot <var:e> + <nat:258> \cdot <var:A> + <nat:26> \cdot <var:B> + <var:u> \cdot <nat:78> + <nat:330> \cdot <var:x> $ must be even . \end{theorem} \begin{proof} On top of this , observe the positive integers $ <nat:132> $ , $ <nat:154> $ , $ <nat:258> $ , $ <nat:26> $ , $ <nat:78> $ , in addition to $ <nat:330> $ are trivially even . In consequence , the products $ <nat:132> \cdot <var:j> $ , $ <var:e> \cdot <nat:154> $ , $ <var:A> \cdot <nat:258> $ , $ <nat:26> \cdot <var:B> $ , $ <nat:78> \cdot <var:u> $ , and moreover $ <nat:330> \cdot <var:x> $ will be even at the same time . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:u> <var:B> <var:x> <var:e> <var:j> <var:A> : nat , Nat . even ( <nat:132> * <var:j> + <nat:154> * <var:e> + <nat:258> * <var:A> + <nat:26> * <var:B> + <nat:78> * <var:u> + <nat:330> * <var:x> + <nat:456> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:132> = true ) . { auto . } assert ( <genH> : Nat . even <nat:154> = true ) . { auto . } assert ( <genH> : Nat . even <nat:258> = true ) . { auto . } assert ( <genH> : Nat . even <nat:26> = true ) . { auto . } assert ( <genH> : Nat . even <nat:78> = true ) . { auto . } assert ( <genH> : Nat . even <nat:330> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:132> * <var:j> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:154> * <var:e> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:258> * <var:A> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:26> * <var:B> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:78> * <var:u> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:330> * <var:x> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 