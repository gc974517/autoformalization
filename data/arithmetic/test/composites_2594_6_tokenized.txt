\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Assuming that $ \exists <var:m> $ , $ <var:j> $ , $ <var:Y> $ , $ <var:B> $ , $ <var:p> $ , $ <var:q> \in \mathbb{Z}^+ $ satisfying the condition that $ <var:Y> $ , $ <var:j> $ , $ <var:p> $ , $ <var:m> $ , $ <var:B> $ , $ <var:q> \geq <nat:2> $ . Denote that $ <var:O> \in \mathbb{Z}^+ $ is named a <def:six-composite> natural number if $ <var:O> = <var:B> * <var:m> * <var:Y> * <var:q> * <var:p> * <var:j> $ . Hence <nat:35200> is a <def:six-composite> natural number . \end{theorem} \begin{proof} Remember <nat:35200> is a <def:six-composite> whole number supposing that <nat:35200> is the product of numbers $ <var:q> $ , $ <var:m> $ , $ <var:B> $ , $ <var:p> $ , $ <var:j> $ and $ <var:Y> $ larger than or equal to <nat:2> . Note that $ <nat:8> $ , $ <nat:5> $ , $ <nat:10> $ , $ <nat:11> $ , $ <nat:2> $ , $ <nat:4> $ are larger than or equivalent to <nat:2> . Similarly note likewise $ <nat:35200> = <nat:5> \cdot <nat:2> \cdot <nat:4> \cdot <nat:10> \cdot <nat:11> \cdot <nat:8> = <var:q> \cdot <var:m> \cdot <var:Y> \cdot <var:B> \cdot <var:p> \cdot <var:j> $ . This yields our proposition holds . Consequently , <nat:35200> is a <def:six-composite> integer is proven . Hence , $ <var:B> $ , $ <var:j> $ , $ <var:m> $ , $ <var:p> $ , $ <var:q> $ and $ <var:Y> \geq <nat:2> $ as well as $ <var:p> \times <var:m> \times <var:j> \times <var:Y> \times <var:B> \times <var:q> = <nat:35200> $ is proven . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:six-composite> ( <var:O> : nat ) := exists <var:m> <var:j> <var:Y> <var:B> <var:p> <var:q> : nat , ( <var:Y> >= <nat:2> ) /\ ( <var:j> >= <nat:2> ) /\ ( <var:p> >= <nat:2> ) /\ ( <var:m> >= <nat:2> ) /\ ( <var:B> >= <nat:2> ) /\ ( <var:q> >= <nat:2> ) /\ ( <var:O> = <var:B> * <var:m> * <var:Y> * <var:q> * <var:p> * <var:j> ) . Theorem <genP:1> : <def:six-composite> <nat:35200> . Proof . unfold <def:six-composite> . assert ( <genH> : <nat:8> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:5> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:10> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:11> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:2> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:4> >= <nat:2> ) . { lia . } exists <nat:2> . exists <nat:8> . exists <nat:4> . exists <nat:10> . exists <nat:11> . exists <nat:5> . repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 