\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:l> <nat:302> + <var:L> <nat:230> + <var:Y> <nat:136> + <nat:6> <var:e> + <nat:262> <var:D> + <nat:110> <var:j> + <nat:466> $ is guaranteed to be even for unknowns $ <var:L> $ , $ <var:j> $ , $ <var:l> $ , $ <var:e> $ , $ <var:Y> $ , and $ <var:D> $ . \end{theorem} \begin{proof} The adding of even numbers in $ \mathbb{Z}^+ $ successively with an even natural number is instrinsically an even element of $ \mathbb{Z}^+ $ . Remember $ <nat:466> $ is trivially an even number . We use the assumption the knowledge the sum $ <nat:6> \times <var:e> + <nat:230> \times <var:L> + <nat:136> \times <var:Y> + <nat:262> \times <var:D> + <nat:110> \times <var:j> + <var:l> \times <nat:302> $ is even . Remember that the numbers $ <nat:6> $ , $ <nat:230> $ , $ <nat:136> $ , $ <nat:262> $ , $ <nat:110> $ , and also $ <nat:302> $ are even numbers . Thus , the pairs $ <var:e> * <nat:6> $ , $ <var:L> * <nat:230> $ , $ <var:Y> * <nat:136> $ , $ <nat:262> * <var:D> $ , $ <nat:110> * <var:j> $ , and $ <nat:302> * <var:l> $ must be even also . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:L> <var:j> <var:l> <var:e> <var:Y> <var:D> : nat , Nat . even ( <nat:302> * <var:l> + <nat:230> * <var:L> + <nat:136> * <var:Y> + <nat:6> * <var:e> + <nat:262> * <var:D> + <nat:110> * <var:j> + <nat:466> ) = true . Proof . intros . rewrite Nat . even_add . assert ( <genH> : Nat . even <nat:466> = true ) . { auto . } assert ( <genH> : Nat . even <nat:6> = true ) . { auto . } assert ( <genH> : Nat . even <nat:230> = true ) . { auto . } assert ( <genH> : Nat . even <nat:136> = true ) . { auto . } assert ( <genH> : Nat . even <nat:262> = true ) . { auto . } assert ( <genH> : Nat . even <nat:110> = true ) . { auto . } assert ( <genH> : Nat . even <nat:302> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:6> * <var:e> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:230> * <var:L> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:136> * <var:Y> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:262> * <var:D> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:110> * <var:j> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:302> * <var:l> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:302> * <var:l> + <nat:230> * <var:L> + <nat:136> * <var:Y> + <nat:6> * <var:e> + <nat:262> * <var:D> + <nat:110> * <var:j> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite <genH> . rewrite <genH> . auto . Qed . 