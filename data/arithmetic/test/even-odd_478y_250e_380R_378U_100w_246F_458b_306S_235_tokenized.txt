\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:U> \times <nat:378> + <nat:478> \times <var:y> + <nat:458> \times <var:b> + <var:F> \times <nat:246> + <nat:306> \times <var:S> + <nat:380> \times <var:R> + <nat:235> + <nat:100> \times <var:w> + <nat:250> \times <var:e> $ is odd . \end{theorem} \begin{proof} The expression $ <nat:478> \cdot <var:y> + <var:e> \cdot <nat:250> + <nat:380> \cdot <var:R> + <var:U> \cdot <nat:378> + <var:w> \cdot <nat:100> + <var:F> \cdot <nat:246> + <nat:458> \cdot <var:b> + <var:S> \cdot <nat:306> $ is clearly even . Notice the adding between even natural numbers collectively and an even element of $ \mathbb{Z}^+ $ is guaranteed to be by its very nature an even integer . The terms $ <var:y> \times <nat:478> $ , $ <var:e> \times <nat:250> $ , $ <var:R> \times <nat:380> $ , $ <nat:378> \times <var:U> $ , $ <nat:100> \times <var:w> $ , $ <nat:246> \times <var:F> $ , $ <var:b> \times <nat:458> $ , in addition to $ <var:S> \times <nat:306> $ are even elements of $ \mathbb{N} $ as a consequence that the integers $ <nat:478> $ , $ <nat:250> $ , $ <nat:380> $ , $ <nat:378> $ , $ <nat:100> $ , $ <nat:246> $ , $ <nat:458> $ , as well as $ <nat:306> $ are guaranteed to be even positive integers . as well as from the fact the product between even positive integers and some element of $ \mathbb{Z}^+ $ is guaranteed to be even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:U> <var:y> <var:b> <var:F> <var:S> <var:R> <var:w> <var:e> : nat , Nat . odd ( <nat:378> * <var:U> + <nat:478> * <var:y> + <nat:458> * <var:b> + <nat:246> * <var:F> + <nat:306> * <var:S> + <nat:380> * <var:R> + <nat:100> * <var:w> + <nat:250> * <var:e> + <nat:235> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:478> = true ) . { auto . } assert ( <genH> : Nat . even <nat:250> = true ) . { auto . } assert ( <genH> : Nat . even <nat:380> = true ) . { auto . } assert ( <genH> : Nat . even <nat:378> = true ) . { auto . } assert ( <genH> : Nat . even <nat:100> = true ) . { auto . } assert ( <genH> : Nat . even <nat:246> = true ) . { auto . } assert ( <genH> : Nat . even <nat:458> = true ) . { auto . } assert ( <genH> : Nat . even <nat:306> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:478> * <var:y> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:250> * <var:e> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:380> * <var:R> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:378> * <var:U> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:100> * <var:w> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:246> * <var:F> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:458> * <var:b> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:306> * <var:S> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:378> * <var:U> + <nat:478> * <var:y> + <nat:458> * <var:b> + <nat:246> * <var:F> + <nat:306> * <var:S> + <nat:380> * <var:R> + <nat:100> * <var:w> + <nat:250> * <var:e> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . auto . Qed . 