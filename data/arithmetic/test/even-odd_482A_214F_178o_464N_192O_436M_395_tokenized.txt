\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:178> \times <var:o> + <var:F> \times <nat:214> + <nat:395> + <var:N> \times <nat:464> + <var:O> \times <nat:192> + <nat:482> \times <var:A> + <nat:436> \times <var:M> $ must be odd using every whole numbers $ <var:A> $ , $ <var:M> $ , $ <var:N> $ , $ <var:o> $ , $ <var:F> $ , and $ <var:O> $ . \end{theorem} \begin{proof} We demonstrate our proposition is true . Remember that $ <nat:395> $ is known as an odd natural . The proposition holds by reason that $ <nat:464> * <var:N> + <var:M> * <nat:436> + <nat:482> * <var:A> + <nat:214> * <var:F> + <var:O> * <nat:192> + <nat:178> * <var:o> $ is trivially even . Remember the products $ <var:M> \times <nat:436> $ , $ <nat:464> \times <var:N> $ , $ <var:F> \times <nat:214> $ , $ <nat:482> \times <var:A> $ , and $ <nat:178> \times <var:o> $ will be even positive integers . This fact must be true as a consequence that the product of an even positive integer and some number is even , and must be true from the knowledge the whole numbers $ <nat:436> $ , $ <nat:464> $ , $ <nat:214> $ , $ <nat:482> $ , and $ <nat:178> $ will be . The integer $ <nat:192> $ is known as even . Accordingly , the term $ <var:O> \times <nat:192> $ is even in addition . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:A> <var:M> <var:N> <var:o> <var:F> <var:O> : nat , Nat . odd ( <nat:178> * <var:o> + <nat:214> * <var:F> + <nat:464> * <var:N> + <nat:192> * <var:O> + <nat:482> * <var:A> + <nat:436> * <var:M> + <nat:395> ) = true . Proof . intros . assert ( <genH> : Nat . odd <nat:395> = true ) . { auto . } assert ( <genH> : Nat . even <nat:436> = true ) . { auto . } assert ( <genH> : Nat . even <nat:464> = true ) . { auto . } assert ( <genH> : Nat . even <nat:214> = true ) . { auto . } assert ( <genH> : Nat . even <nat:482> = true ) . { auto . } assert ( <genH> : Nat . even <nat:178> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:436> * <var:M> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:464> * <var:N> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:214> * <var:F> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:482> * <var:A> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:178> * <var:o> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:192> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:192> * <var:O> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:178> * <var:o> + <nat:214> * <var:F> + <nat:464> * <var:N> + <nat:192> * <var:O> + <nat:482> * <var:A> + <nat:436> * <var:M> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . rewrite <genH> . auto . Qed . 