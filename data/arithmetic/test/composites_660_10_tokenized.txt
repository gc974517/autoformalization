\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} The integer <nat:1037836800> is the product of numbers $ <var:N> $ , $ <var:S> $ , $ <var:b> $ , $ <var:z> $ , $ <var:y> $ , $ <var:t> $ , $ <var:Y> $ , $ <var:k> $ , $ <var:u> $ and $ <var:C> $ where $ <var:C> $ , $ <var:N> $ , $ <var:Y> $ , $ <var:z> $ , $ <var:S> $ , $ <var:b> $ , $ <var:y> $ , $ <var:t> $ , $ <var:u> $ and $ <var:k> > <nat:1> $ . \end{theorem} \begin{proof} Notice that $ <nat:8> $ , $ <nat:12> $ , $ <nat:4> $ , $ <nat:7> $ , $ <nat:10> $ , $ <nat:6> $ , $ <nat:13> $ , $ <nat:11> $ , $ <nat:9> $ , $ <nat:5> > <nat:1> $ . Further note that likewise $ <nat:10> * <nat:12> * <nat:6> * <nat:7> * <nat:4> * <nat:8> * <nat:11> * <nat:5> * <nat:13> * <nat:9> = <nat:1037836800> $ . This indicates the formula holds . So , $ <var:N> * <var:C> * <var:b> * <var:t> * <var:S> * <var:k> * <var:y> * <var:u> * <var:Y> * <var:z> = <nat:1037836800> $ as well as $ <var:y> $ , $ <var:k> $ , $ <var:S> $ , $ <var:C> $ , $ <var:z> $ , $ <var:t> $ , $ <var:N> $ , $ <var:u> $ , $ <var:Y> $ , and $ <var:b> > <nat:1> $ is verified . \end{proof} \end{document} 
~
Require Import Lia . Theorem <genP:1> : exists <var:N> <var:S> <var:b> <var:z> <var:y> <var:t> <var:Y> <var:k> <var:u> <var:C> : nat , ( <nat:1037836800> = <var:N> * <var:S> * <var:b> * <var:z> * <var:y> * <var:t> * <var:Y> * <var:k> * <var:u> * <var:C> ) /\ ( <var:C> > <nat:1> ) /\ ( <var:N> > <nat:1> ) /\ ( <var:Y> > <nat:1> ) /\ ( <var:z> > <nat:1> ) /\ ( <var:S> > <nat:1> ) /\ ( <var:b> > <nat:1> ) /\ ( <var:y> > <nat:1> ) /\ ( <var:t> > <nat:1> ) /\ ( <var:u> > <nat:1> ) /\ ( <var:k> > <nat:1> ) . Proof . assert ( <genH> : <nat:8> > <nat:1> ) . { lia . } assert ( <genH> : <nat:12> > <nat:1> ) . { lia . } assert ( <genH> : <nat:4> > <nat:1> ) . { lia . } assert ( <genH> : <nat:7> > <nat:1> ) . { lia . } assert ( <genH> : <nat:10> > <nat:1> ) . { lia . } assert ( <genH> : <nat:6> > <nat:1> ) . { lia . } assert ( <genH> : <nat:13> > <nat:1> ) . { lia . } assert ( <genH> : <nat:11> > <nat:1> ) . { lia . } assert ( <genH> : <nat:9> > <nat:1> ) . { lia . } assert ( <genH> : <nat:5> > <nat:1> ) . { lia . } exists <nat:10> . exists <nat:6> . exists <nat:7> . exists <nat:13> . exists <nat:9> . exists <nat:5> . exists <nat:8> . exists <nat:12> . exists <nat:11> . exists <nat:4> . repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 