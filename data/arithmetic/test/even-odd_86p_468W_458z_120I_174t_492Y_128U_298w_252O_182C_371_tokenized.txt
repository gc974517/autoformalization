\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:p> * <nat:86> + <nat:468> * <var:W> + <nat:371> + <var:z> * <nat:458> + <var:I> * <nat:120> + <var:t> * <nat:174> + <nat:492> * <var:Y> + <nat:128> * <var:U> + <nat:298> * <var:w> + <nat:252> * <var:O> + <var:C> * <nat:182> $ will be odd . \end{theorem} \begin{proof} The terms $ <nat:182> <var:C> $ , $ <var:I> <nat:120> $ , $ <var:p> <nat:86> $ , $ <nat:468> <var:W> $ , $ <nat:492> <var:Y> $ , $ <var:t> <nat:174> $ , plus $ <nat:458> <var:z> $ will be even . This fact holds because taking the product of an even element of $ \mathbb{N} $ with any number is guaranteed to be even . Additionally , the products $ <var:w> <nat:298> $ and $ <var:U> <nat:128> $ are guaranteed to be even elements of $ \mathbb{Z}^+ $ . Likewise , recall that the pair $ <var:O> <nat:252> $ is even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:p> <var:W> <var:z> <var:I> <var:t> <var:Y> <var:U> <var:w> <var:O> <var:C> : nat , Nat . odd ( <nat:86> * <var:p> + <nat:468> * <var:W> + <nat:458> * <var:z> + <nat:120> * <var:I> + <nat:174> * <var:t> + <nat:492> * <var:Y> + <nat:128> * <var:U> + <nat:298> * <var:w> + <nat:252> * <var:O> + <nat:182> * <var:C> + <nat:371> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:182> * <var:C> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:120> * <var:I> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:86> * <var:p> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:468> * <var:W> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:492> * <var:Y> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:174> * <var:t> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:458> * <var:z> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:298> * <var:w> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:128> * <var:U> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:252> * <var:O> ) = true ) . { rewrite Nat . even_mul . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 