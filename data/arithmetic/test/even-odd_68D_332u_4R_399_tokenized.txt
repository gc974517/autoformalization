\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} For some positive terms $ <var:R> $ , $ <var:u> $ , and $ <var:D> $ the sum $ <var:u> \times <nat:332> + <var:R> \times <nat:4> + <var:D> \times <nat:68> + <nat:399> $ is odd . \end{theorem} \begin{proof} We verify that the expression $ <nat:332> \times <var:u> + <nat:399> + <nat:4> \times <var:R> + <var:D> \times <nat:68> $ is odd . Recall that the adding of even numbers together with an odd number in $ \mathbb{Z}^+ $ will be instrinsically an odd number in $ \mathbb{N} $ . Observe $ <nat:399> $ is guaranteed to be an odd element of $ \mathbb{N} $ . Remember the formula $ <var:D> \times <nat:68> + <nat:332> \times <var:u> + <var:R> \times <nat:4> $ is guaranteed to be even . Building on , recall that the products $ <var:D> \cdot <nat:68> $ , $ <nat:332> \cdot <var:u> $ , and also $ <var:R> \cdot <nat:4> $ are known to be even because taking the product between an even natural with some number will be an even positive integer , which must be true from the fact the positive integers $ <nat:68> $ , $ <nat:332> $ , as well as $ <nat:4> $ are known as even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:R> <var:u> <var:D> : nat , Nat . odd ( <nat:332> * <var:u> + <nat:4> * <var:R> + <nat:68> * <var:D> + <nat:399> ) = true . Proof . intros . rewrite Nat . odd_add . assert ( <genH> : Nat . odd <nat:399> = true ) . { auto . } assert ( <genH> : Nat . even <nat:68> = true ) . { auto . } assert ( <genH> : Nat . even <nat:332> = true ) . { auto . } assert ( <genH> : Nat . even <nat:4> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:68> * <var:D> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:332> * <var:u> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:4> * <var:R> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:332> * <var:u> + <nat:4> * <var:R> + <nat:68> * <var:D> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite <- Nat . negb_even . rewrite <genH> . rewrite <genH> . auto . Qed . 