\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:276> \times <var:c> + <nat:96> \times <var:R> + <var:P> \times <nat:250> + <nat:348> \times <var:m> + <nat:97> + <var:H> \times <nat:262> + <var:C> \times <nat:124> + <var:n> \times <nat:22> + <nat:470> \times <var:k> $ must be odd . \end{theorem} \begin{proof} Recall that multiplying between even naturals will be even . Notice $ <nat:97> $ is clearly an odd natural number . Observe that the positive integers $ <nat:96> $ additionally $ <nat:22> $ are known to be even The positive integers $ <nat:348> $ , $ <nat:262> $ , $ <nat:470> $ , $ <nat:124> $ , and likewise $ <nat:250> $ must be even The coefficient $ <nat:276> $ is trivially even \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:c> <var:R> <var:P> <var:m> <var:H> <var:C> <var:n> <var:k> : nat , Nat . odd ( <nat:276> * <var:c> + <nat:96> * <var:R> + <nat:250> * <var:P> + <nat:348> * <var:m> + <nat:262> * <var:H> + <nat:124> * <var:C> + <nat:22> * <var:n> + <nat:470> * <var:k> + <nat:97> ) = true . Proof . intros . rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . repeat rewrite Nat . even_mul . assert ( <genH> : Nat . odd <nat:97> = true ) . { auto . } assert ( <genH> : Nat . even <nat:96> = true ) . { auto . } assert ( <genH> : Nat . even <nat:22> = true ) . { auto . } assert ( <genH> : Nat . even <nat:348> = true ) . { auto . } assert ( <genH> : Nat . even <nat:262> = true ) . { auto . } assert ( <genH> : Nat . even <nat:470> = true ) . { auto . } assert ( <genH> : Nat . even <nat:124> = true ) . { auto . } assert ( <genH> : Nat . even <nat:250> = true ) . { auto . } assert ( <genH> : Nat . even <nat:276> = true ) . { auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 