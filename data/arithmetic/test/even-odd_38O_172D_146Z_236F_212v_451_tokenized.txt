\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:451> + <var:D> \cdot <nat:172> + <nat:236> \cdot <var:F> + <var:Z> \cdot <nat:146> + <nat:212> \cdot <var:v> + <var:O> \cdot <nat:38> $ must be odd using some unknowns $ <var:Z> $ , $ <var:D> $ , $ <var:O> $ , $ <var:v> $ , and $ <var:F> $ . \end{theorem} \begin{proof} Recall that the products $ <nat:172> <var:D> $ , $ <nat:236> <var:F> $ , $ <nat:146> <var:Z> $ , $ <nat:212> <var:v> $ , additionally $ <nat:38> <var:O> $ are even . This fact must be true as a consequence that the whole numbers $ <nat:172> $ , $ <nat:236> $ , $ <nat:146> $ , $ <nat:212> $ , plus $ <nat:38> $ are obviously even whole numbers . As a consequence that the summing of an even positive integer with an odd element of $ \mathbb{Z}^+ $ will be itself an odd number in $ \mathbb{Z}^+ $ , thus the summation $ <var:O> <nat:38> + <nat:172> <var:D> + <nat:146> <var:Z> + <var:F> <nat:236> + <nat:212> <var:v> + <nat:451> $ is odd . Take note that $ <nat:451> $ is known as odd . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:Z> <var:D> <var:O> <var:v> <var:F> : nat , Nat . odd ( <nat:172> * <var:D> + <nat:236> * <var:F> + <nat:146> * <var:Z> + <nat:212> * <var:v> + <nat:38> * <var:O> + <nat:451> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:172> = true ) . { auto . } assert ( <genH> : Nat . even <nat:236> = true ) . { auto . } assert ( <genH> : Nat . even <nat:146> = true ) . { auto . } assert ( <genH> : Nat . even <nat:212> = true ) . { auto . } assert ( <genH> : Nat . even <nat:38> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:172> * <var:D> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:236> * <var:F> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:146> * <var:Z> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:212> * <var:v> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:38> * <var:O> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . assert ( <genH> : Nat . odd <nat:451> = true ) . { auto . } rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 