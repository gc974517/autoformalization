\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \newtheorem{definition}{Definition} \begin{document} \begin{definition} Supposing we have such that $ <var:c> $ , $ <var:F> $ , $ <var:U> $ , $ <var:f> $ , $ <var:i> $ , $ <var:Q> $ , $ <var:O> $ , $ <var:T> $ , $ <var:s> $ , and $ <var:J> > <nat:1> $ satisfying the condition that given $ <var:B> \in \mathbb{Z}^+ $ , $ <var:s> * <var:J> * <var:i> * <var:Q> * <var:O> * <var:f> * <var:c> * <var:F> * <var:U> * <var:T> = <var:B> $ , we define that $ <var:B> $ is <def:ten-composite> with some integers $ <var:F> $ , $ <var:U> $ , $ <var:f> $ , $ <var:T> $ , $ <var:s> $ , $ <var:i> $ , $ <var:O> $ , $ <var:J> $ , $ <var:Q> $ , $ <var:c> $ . \end{definition} \begin{theorem} $ <var:B> = <nat:129729600> $ is a <def:ten-composite> positive integer . \end{theorem} \begin{proof} Remember that <nat:129729600> is a <def:ten-composite> integer supposing that <nat:129729600> is the multiplication between positive integers $ <var:s> $ , $ <var:F> $ , $ <var:U> $ , $ <var:Q> $ , $ <var:c> $ , $ <var:O> $ , $ <var:f> $ , $ <var:T> $ , $ <var:i> $ and $ <var:J> $ greater than <nat:1> . We confirm <nat:129729600> is a <def:ten-composite> number by reason of $ <var:U> \times <var:O> \times <var:f> \times <var:i> \times <var:F> \times <var:c> \times <var:Q> \times <var:T> \times <var:J> \times <var:s> = <nat:129729600> $ implies $ <var:T> = <nat:11> $ , $ <var:Q> = <nat:3> $ , $ <var:f> = <nat:5> $ , $ <var:J> = <nat:6> $ , $ <var:F> = <nat:2> $ , $ <var:i> = <nat:9> $ , $ <var:s> = <nat:8> $ , $ <var:U> = <nat:10> $ , $ <var:O> = <nat:13> $ , $ <var:c> = <nat:7> $ plus on account of $ <nat:11> $ , $ <nat:5> $ , $ <nat:7> $ , $ <nat:3> $ , $ <nat:13> $ , $ <nat:8> $ , $ <nat:9> $ , $ <nat:2> $ , $ <nat:10> $ and $ <nat:6> > <nat:1> $ . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:ten-composite> ( <var:B> : nat ) := exists <var:F> <var:U> <var:f> <var:T> <var:s> <var:i> <var:O> <var:J> <var:Q> <var:c> : nat , ( <var:c> > <nat:1> ) /\ ( <var:F> > <nat:1> ) /\ ( <var:U> > <nat:1> ) /\ ( <var:f> > <nat:1> ) /\ ( <var:i> > <nat:1> ) /\ ( <var:Q> > <nat:1> ) /\ ( <var:O> > <nat:1> ) /\ ( <var:T> > <nat:1> ) /\ ( <var:s> > <nat:1> ) /\ ( <var:J> > <nat:1> ) /\ ( <var:s> * <var:J> * <var:i> * <var:Q> * <var:O> * <var:f> * <var:c> * <var:F> * <var:U> * <var:T> = <var:B> ) . Theorem <genP:1> : <def:ten-composite> <nat:129729600> . Proof . unfold <def:ten-composite> . exists <nat:2> . exists <nat:10> . exists <nat:5> . exists <nat:11> . exists <nat:8> . exists <nat:9> . exists <nat:13> . exists <nat:6> . exists <nat:3> . exists <nat:7> . assert ( <genH> : <nat:11> > <nat:1> ) . { lia . } assert ( <genH> : <nat:5> > <nat:1> ) . { lia . } assert ( <genH> : <nat:7> > <nat:1> ) . { lia . } assert ( <genH> : <nat:3> > <nat:1> ) . { lia . } assert ( <genH> : <nat:13> > <nat:1> ) . { lia . } assert ( <genH> : <nat:8> > <nat:1> ) . { lia . } assert ( <genH> : <nat:9> > <nat:1> ) . { lia . } assert ( <genH> : <nat:2> > <nat:1> ) . { lia . } assert ( <genH> : <nat:10> > <nat:1> ) . { lia . } assert ( <genH> : <nat:6> > <nat:1> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 