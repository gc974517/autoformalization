\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:G> \cdot <nat:270> + <var:U> \cdot <nat:488> + <nat:361> + <nat:426> \cdot <var:Q> + <nat:256> \cdot <var:n> + <nat:142> \cdot <var:y> + <nat:184> \cdot <var:P> + <nat:416> \cdot <var:R> + <nat:180> \cdot <var:j> + <var:r> \cdot <nat:34> + <var:z> \cdot <nat:230> $ must be odd taking some terms $ <var:P> $ , $ <var:R> $ , $ <var:z> $ , $ <var:G> $ , $ <var:j> $ , $ <var:n> $ , $ <var:Q> $ , $ <var:r> $ , $ <var:U> $ , and $ <var:y> $ . \end{theorem} \begin{proof} $ <var:Q> \times <nat:426> + <nat:488> \times <var:U> + <nat:34> \times <var:r> + <nat:142> \times <var:y> + <nat:361> + <nat:416> \times <var:R> + <var:P> \times <nat:184> + <nat:180> \times <var:j> + <var:n> \times <nat:256> + <nat:270> \times <var:G> + <var:z> \times <nat:230> $ is obviously odd as a consequence that $ <nat:184> \cdot <var:P> + <nat:142> \cdot <var:y> + <nat:488> \cdot <var:U> + <nat:256> \cdot <var:n> + <var:j> \cdot <nat:180> + <var:R> \cdot <nat:416> + <var:Q> \cdot <nat:426> + <nat:270> \cdot <var:G> + <var:z> \cdot <nat:230> + <nat:34> \cdot <var:r> $ is obviously even . Observe that the pairs $ <nat:256> \times <var:n> $ , $ <nat:180> \times <var:j> $ , $ <var:y> \times <nat:142> $ , plus $ <var:R> \times <nat:416> $ are known as even whole numbers . This is true as a consequence that multiplying of an even number in $ \mathbb{Z}^+ $ and an arbitrary number is even . Building on , remember the products $ <nat:184> \times <var:P> $ , $ <nat:230> \times <var:z> $ , $ <nat:488> \times <var:U> $ , in addition to $ <var:Q> \times <nat:426> $ are obviously even . Furthermore , notice $ <nat:34> \times <var:r> $ is clearly an even whole number because multiplying between an even integer with any element of $ \mathbb{N} $ is an even element of $ \mathbb{N} $ . Likewise , the term $ <var:G> \times <nat:270> $ is clearly an even natural number . This must be true because the multiplication of an even element of $ \mathbb{N} $ with any natural number is guaranteed to be an even integer . From the knowledge the multiplication of an even natural with an arbitrary number in $ \mathbb{N} $ must be even this proposition must be true . The summation of an even integer with an odd whole number is guaranteed to be odd . Hence , the lemma is true . Recall $ <nat:361> $ is trivially odd . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:P> <var:R> <var:z> <var:G> <var:j> <var:n> <var:Q> <var:r> <var:U> <var:y> : nat , Nat . odd ( <nat:270> * <var:G> + <nat:488> * <var:U> + <nat:426> * <var:Q> + <nat:256> * <var:n> + <nat:142> * <var:y> + <nat:184> * <var:P> + <nat:416> * <var:R> + <nat:180> * <var:j> + <nat:34> * <var:r> + <nat:230> * <var:z> + <nat:361> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:256> * <var:n> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:180> * <var:j> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:142> * <var:y> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:416> * <var:R> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:184> * <var:P> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:230> * <var:z> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:488> * <var:U> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:426> * <var:Q> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:34> * <var:r> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:270> * <var:G> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:270> * <var:G> + <nat:488> * <var:U> + <nat:426> * <var:Q> + <nat:256> * <var:n> + <nat:142> * <var:y> + <nat:184> * <var:P> + <nat:416> * <var:R> + <nat:180> * <var:j> + <nat:34> * <var:r> + <nat:230> * <var:z> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . assert ( <genH> : Nat . odd <nat:361> = true ) . { auto . } rewrite <- Nat . negb_even . rewrite <genH> . rewrite <genH> . auto . Qed . 