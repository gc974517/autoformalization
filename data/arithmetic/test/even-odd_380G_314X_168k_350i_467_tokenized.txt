\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Given any positive integers $ <var:i> $ , $ <var:G> $ , $ <var:k> $ , and $ <var:X> $ $ <var:G> * <nat:380> + <var:X> * <nat:314> + <nat:467> + <var:k> * <nat:168> + <var:i> * <nat:350> $ must be odd . \end{theorem} \begin{proof} Observe $ <nat:467> $ is an odd number in $ \mathbb{N} $ . We verify our theorem must be true with the summation between even positive integers together with an odd natural number will be odd . See the coefficients $ <nat:380> $ , $ <nat:314> $ , $ <nat:168> $ , plus $ <nat:350> $ will be even integers . As a consequence , the products $ <nat:380> \times <var:G> $ , $ <var:X> \times <nat:314> $ , $ <var:k> \times <nat:168> $ , and $ <nat:350> \times <var:i> $ is guaranteed to be even also . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:i> <var:G> <var:k> <var:X> : nat , Nat . odd ( <nat:380> * <var:G> + <nat:314> * <var:X> + <nat:168> * <var:k> + <nat:350> * <var:i> + <nat:467> ) = true . Proof . intros . assert ( <genH> : Nat . odd <nat:467> = true ) . { auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . assert ( <genH> : Nat . even <nat:380> = true ) . { auto . } assert ( <genH> : Nat . even <nat:314> = true ) . { auto . } assert ( <genH> : Nat . even <nat:168> = true ) . { auto . } assert ( <genH> : Nat . even <nat:350> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:380> * <var:G> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:314> * <var:X> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:168> * <var:k> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:350> * <var:i> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 