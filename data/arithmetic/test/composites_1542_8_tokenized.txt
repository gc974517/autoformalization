\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Supposing that $ \exists <var:x> $ , $ <var:H> $ , $ <var:W> $ , $ <var:u> $ , $ <var:A> $ , $ <var:r> $ , $ <var:S> $ , $ <var:l> \in \mathbb{N} $ more than or equivalent to <nat:2> . We assume that $ <var:i> \in \mathbb{Z}^+ $ will be called <def:eight-composite> assuming $ <var:H> \cdot <var:S> \cdot <var:A> \cdot <var:l> \cdot <var:r> \cdot <var:W> \cdot <var:u> \cdot <var:x> = <var:i> $ . Therefore the whole number <nat:887040> is a <def:eight-composite> number . \end{theorem} \begin{proof} Note that $ <nat:887040> = <var:l> \cdot <var:S> \cdot <var:x> \cdot <var:r> \cdot <var:W> \cdot <var:u> \cdot <var:H> \cdot <var:A> $ produces $ <var:x> = <nat:12> $ , $ <var:H> = <nat:4> $ , $ <var:A> = <nat:7> $ , $ <var:W> = <nat:2> $ , $ <var:r> = <nat:8> $ , $ <var:u> = <nat:5> $ , $ <var:S> = <nat:11> $ and $ <var:l> = <nat:3> $ . What's more notice that $ <nat:12> $ , $ <nat:11> $ , $ <nat:7> $ , $ <nat:2> $ , $ <nat:3> $ , $ <nat:5> $ , $ <nat:4> $ and $ <nat:8> \geq <nat:2> $ . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:eight-composite> ( <var:i> : nat ) := exists <var:x> <var:H> <var:W> <var:u> <var:A> <var:r> <var:S> <var:l> : nat , ( <var:x> >= <nat:2> ) /\ ( <var:H> >= <nat:2> ) /\ ( <var:W> >= <nat:2> ) /\ ( <var:u> >= <nat:2> ) /\ ( <var:A> >= <nat:2> ) /\ ( <var:r> >= <nat:2> ) /\ ( <var:S> >= <nat:2> ) /\ ( <var:l> >= <nat:2> ) /\ ( <var:H> * <var:S> * <var:A> * <var:l> * <var:r> * <var:W> * <var:u> * <var:x> = <var:i> ) . Theorem <genP:1> : <def:eight-composite> <nat:887040> . Proof . unfold <def:eight-composite> . exists <nat:12> . exists <nat:4> . exists <nat:2> . exists <nat:5> . exists <nat:7> . exists <nat:8> . exists <nat:11> . exists <nat:3> . assert ( <genH> : <nat:12> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:11> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:7> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:2> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:3> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:5> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:4> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:8> >= <nat:2> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 