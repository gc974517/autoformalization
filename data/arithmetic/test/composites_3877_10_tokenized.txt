\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \newtheorem{definition}{Definition} \begin{document} \begin{definition} Iff there exist numbers $ <var:z> $ , $ <var:M> $ , $ <var:L> $ , $ <var:Z> $ , $ <var:h> $ , $ <var:f> $ , $ <var:l> $ , $ <var:F> $ , $ <var:g> $ , $ <var:C> $ claim that $ <var:P> \in \mathbb{Z}^+ $ will be considered as <def:ten-composite> if $ <var:P> = <var:z> \cdot <var:l> \cdot <var:Z> \cdot <var:h> \cdot <var:L> \cdot <var:F> \cdot <var:M> \cdot <var:g> \cdot <var:C> \cdot <var:f> $ and unique terms are larger than <nat:1> . \end{definition} \begin{theorem} $ <nat:111196800> = <var:P> $ is a <def:ten-composite> number . \end{theorem} \begin{proof} Recall a <def:ten-composite> positive integer is the product of positive integers $ <var:z> $ , $ <var:h> $ , $ <var:M> $ , $ <var:f> $ , $ <var:Z> $ , $ <var:g> $ , $ <var:l> $ , $ <var:L> $ , $ <var:F> $ , $ <var:C> $ more than <nat:1> . Observe that $ <nat:111196800> = <nat:13> * <nat:11> * <nat:3> * <nat:12> * <nat:4> * <nat:5> * <nat:10> * <nat:9> * <nat:2> * <nat:6> = <var:z> * <var:L> * <var:l> * <var:h> * <var:Z> * <var:M> * <var:f> * <var:g> * <var:F> * <var:C> $ . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:ten-composite> ( <var:P> : nat ) := exists <var:z> <var:M> <var:L> <var:Z> <var:h> <var:f> <var:l> <var:F> <var:g> <var:C> : nat , ( <var:P> = <var:z> * <var:l> * <var:Z> * <var:h> * <var:L> * <var:F> * <var:M> * <var:g> * <var:C> * <var:f> ) /\ ( <var:z> > <nat:1> ) /\ ( <var:M> > <nat:1> ) /\ ( <var:L> > <nat:1> ) /\ ( <var:Z> > <nat:1> ) /\ ( <var:h> > <nat:1> ) /\ ( <var:f> > <nat:1> ) /\ ( <var:l> > <nat:1> ) /\ ( <var:F> > <nat:1> ) /\ ( <var:g> > <nat:1> ) /\ ( <var:C> > <nat:1> ) . Theorem <genP:1> : <def:ten-composite> <nat:111196800> . Proof . unfold <def:ten-composite> . exists <nat:13> . exists <nat:5> . exists <nat:11> . exists <nat:4> . exists <nat:12> . exists <nat:10> . exists <nat:3> . exists <nat:2> . exists <nat:9> . exists <nat:6> . repeat split . all : lia . Qed . 