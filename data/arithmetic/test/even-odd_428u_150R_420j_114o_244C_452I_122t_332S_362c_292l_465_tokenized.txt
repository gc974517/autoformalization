\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:u> \times <nat:428> + <nat:465> + <var:R> \times <nat:150> + <nat:420> \times <var:j> + <nat:114> \times <var:o> + <var:C> \times <nat:244> + <nat:452> \times <var:I> + <var:t> \times <nat:122> + <nat:332> \times <var:S> + <var:c> \times <nat:362> + <var:l> \times <nat:292> $ must be odd using any $ <var:t> $ , $ <var:j> $ , $ <var:o> $ , $ <var:l> $ , $ <var:R> $ , $ <var:S> $ , $ <var:u> $ , $ <var:C> $ , $ <var:c> $ , and $ <var:I> \in \mathbb{Z}^+ $ . \end{theorem} \begin{proof} It can be verified that the proposition must be true . Take note $ <nat:465> $ is guaranteed to be an odd natural . The coefficients $ <nat:428> $ , $ <nat:150> $ , $ <nat:420> $ , $ <nat:114> $ , $ <nat:244> $ , $ <nat:452> $ , $ <nat:122> $ , $ <nat:332> $ , $ <nat:362> $ , additionally $ <nat:292> $ will be even . Then , the terms $ <nat:428> \cdot <var:u> $ , $ <var:R> \cdot <nat:150> $ , $ <nat:420> \cdot <var:j> $ , $ <var:o> \cdot <nat:114> $ , $ <var:C> \cdot <nat:244> $ , $ <var:I> \cdot <nat:452> $ , $ <nat:122> \cdot <var:t> $ , $ <nat:332> \cdot <var:S> $ , $ <var:c> \cdot <nat:362> $ , plus $ <var:l> \cdot <nat:292> $ must be even also . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:t> <var:j> <var:o> <var:l> <var:R> <var:S> <var:u> <var:C> <var:c> <var:I> : nat , Nat . odd ( <nat:428> * <var:u> + <nat:150> * <var:R> + <nat:420> * <var:j> + <nat:114> * <var:o> + <nat:244> * <var:C> + <nat:452> * <var:I> + <nat:122> * <var:t> + <nat:332> * <var:S> + <nat:362> * <var:c> + <nat:292> * <var:l> + <nat:465> ) = true . Proof . intros . assert ( <genH> : Nat . odd <nat:465> = true ) . { auto . } assert ( <genH> : Nat . even <nat:428> = true ) . { auto . } assert ( <genH> : Nat . even <nat:150> = true ) . { auto . } assert ( <genH> : Nat . even <nat:420> = true ) . { auto . } assert ( <genH> : Nat . even <nat:114> = true ) . { auto . } assert ( <genH> : Nat . even <nat:244> = true ) . { auto . } assert ( <genH> : Nat . even <nat:452> = true ) . { auto . } assert ( <genH> : Nat . even <nat:122> = true ) . { auto . } assert ( <genH> : Nat . even <nat:332> = true ) . { auto . } assert ( <genH> : Nat . even <nat:362> = true ) . { auto . } assert ( <genH> : Nat . even <nat:292> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:428> * <var:u> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:150> * <var:R> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:420> * <var:j> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:114> * <var:o> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:244> * <var:C> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:452> * <var:I> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:122> * <var:t> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:332> * <var:S> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:362> * <var:c> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:292> * <var:l> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 