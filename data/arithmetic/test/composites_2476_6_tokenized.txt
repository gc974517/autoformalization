\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Allow $ <var:T> $ , $ <var:k> $ , $ <var:m> $ , $ <var:w> $ , $ <var:X> $ , $ <var:a> $ are whole numbers . Take that some whole number $ <var:j> $ is said to be <def:six-composite> when $ <var:j> = <var:X> \times <var:T> \times <var:w> \times <var:a> \times <var:k> \times <var:m> $ and more than or equivalent to <nat:2> . Consequently the natural number <nat:20160> is a <def:six-composite> whole number . \end{theorem} \begin{proof} Take $ <var:k> = <nat:5> $ , $ <var:X> = <nat:2> $ , $ <var:T> = <nat:9> $ , $ <var:w> = <nat:7> $ , $ <var:a> = <nat:4> $ , $ <var:m> = <nat:8> $ . We justify $ <var:T> * <var:w> * <var:X> * <var:a> * <var:k> * <var:m> = <nat:20160> $ . Note that $ <var:T> = <nat:9> $ , $ <var:k> = <nat:5> $ , $ <var:X> = <nat:2> $ , $ <var:m> = <nat:8> $ , $ <var:w> = <nat:7> $ , and $ <var:a> = <nat:4> \geq <nat:2> $ . Further note that additionally $ <var:m> \cdot <var:k> \cdot <var:T> \cdot <var:a> \cdot <var:X> \cdot <var:w> = <nat:20160> $ . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:six-composite> ( <var:j> : nat ) := exists <var:T> <var:k> <var:m> <var:w> <var:X> <var:a> : nat , ( <var:j> = <var:X> * <var:T> * <var:w> * <var:a> * <var:k> * <var:m> ) /\ ( <var:T> >= <nat:2> ) /\ ( <var:k> >= <nat:2> ) /\ ( <var:m> >= <nat:2> ) /\ ( <var:w> >= <nat:2> ) /\ ( <var:X> >= <nat:2> ) /\ ( <var:a> >= <nat:2> ) . Theorem <genP:1> : <def:six-composite> <nat:20160> . Proof . unfold <def:six-composite> . exists <nat:9> . exists <nat:5> . exists <nat:8> . exists <nat:7> . exists <nat:2> . exists <nat:4> . assert ( <genH> : <nat:9> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:5> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:2> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:8> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:7> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:4> >= <nat:2> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 