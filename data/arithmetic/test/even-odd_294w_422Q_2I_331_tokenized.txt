\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:2> \cdot <var:I> + <nat:294> \cdot <var:w> + <nat:422> \cdot <var:Q> + <nat:331> $ is odd . \end{theorem} \begin{proof} We check $ <var:I> <nat:2> + <var:w> <nat:294> + <nat:422> <var:Q> + <nat:331> $ is odd because the formula $ <nat:422> \times <var:Q> + <var:w> \times <nat:294> + <nat:2> \times <var:I> $ is obviously even . The terms $ <var:Q> * <nat:422> $ , $ <var:w> * <nat:294> $ , plus $ <var:I> * <nat:2> $ are known as even . This claim is true since the integers $ <nat:422> $ , $ <nat:294> $ , additionally $ <nat:2> $ are trivially even . As a consequence that the totaling between even elements of $ \mathbb{Z}^+ $ and an even number in $ \mathbb{Z}^+ $ is guaranteed to be even , the summation $ <nat:294> <var:w> + <var:Q> <nat:422> + <nat:2> <var:I> $ must be even . It can be checked that this main result must be true with the fact that the totaling of even numbers in $ \mathbb{N} $ together with an odd number in $ \mathbb{Z}^+ $ is an odd number in $ \mathbb{Z}^+ $ . We know $ <nat:331> $ is trivially an odd integer . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:I> <var:w> <var:Q> : nat , Nat . odd ( <nat:2> * <var:I> + <nat:294> * <var:w> + <nat:422> * <var:Q> + <nat:331> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:422> = true ) . { auto . } assert ( <genH> : Nat . even <nat:294> = true ) . { auto . } assert ( <genH> : Nat . even <nat:2> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:422> * <var:Q> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:294> * <var:w> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:2> * <var:I> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:2> * <var:I> + <nat:294> * <var:w> + <nat:422> * <var:Q> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . assert ( <genH> : Nat . odd <nat:331> = true ) . { auto . } rewrite <- Nat . negb_even . rewrite <genH> . rewrite <genH> . auto . Qed . 