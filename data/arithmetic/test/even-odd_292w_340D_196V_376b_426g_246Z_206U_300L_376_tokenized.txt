\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} For any whole numbers $ <var:b> $ , $ <var:V> $ , $ <var:D> $ , $ <var:U> $ , $ <var:g> $ , $ <var:w> $ , $ <var:L> $ , and $ <var:Z> $ the sum $ <var:w> <nat:292> + <nat:246> <var:Z> + <nat:426> <var:g> + <nat:206> <var:U> + <var:b> <nat:376> + <var:L> <nat:300> + <nat:340> <var:D> + <nat:376> + <var:V> <nat:196> $ will be even . \end{theorem} \begin{proof} The claim is true from the fact $ <nat:196> \cdot <var:V> + <nat:206> \cdot <var:U> + <nat:246> \cdot <var:Z> + <var:w> \cdot <nat:292> + <nat:340> \cdot <var:D> + <var:L> \cdot <nat:300> + <nat:376> \cdot <var:b> + <nat:426> \cdot <var:g> $ is known to be even . Take note that the products $ <var:V> \cdot <nat:196> $ , $ <nat:206> \cdot <var:U> $ , $ <var:Z> \cdot <nat:246> $ , $ <var:w> \cdot <nat:292> $ , $ <nat:340> \cdot <var:D> $ , $ <var:L> \cdot <nat:300> $ , $ <var:b> \cdot <nat:376> $ , additionally $ <var:g> \cdot <nat:426> $ must be even positive integers from the knowledge the positive integers $ <nat:196> $ , $ <nat:206> $ , $ <nat:246> $ , $ <nat:292> $ , $ <nat:340> $ , $ <nat:300> $ , $ <nat:376> $ , in addition to $ <nat:426> $ are guaranteed to be even . The expression $ <var:w> <nat:292> + <var:D> <nat:340> + <nat:196> <var:V> + <nat:376> <var:b> + <var:g> <nat:426> + <nat:246> <var:Z> + <var:U> <nat:206> + <nat:300> <var:L> $ is even from the knowledge the addition of an even number in $ \mathbb{N} $ with even positive integers is guaranteed to be even in addition to since multiplying between an even positive integer and an arbitrary element of $ \mathbb{N} $ is guaranteed to be even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:b> <var:V> <var:D> <var:U> <var:g> <var:w> <var:L> <var:Z> : nat , Nat . even ( <nat:292> * <var:w> + <nat:246> * <var:Z> + <nat:426> * <var:g> + <nat:206> * <var:U> + <nat:376> * <var:b> + <nat:300> * <var:L> + <nat:340> * <var:D> + <nat:196> * <var:V> + <nat:376> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:196> = true ) . { auto . } assert ( <genH> : Nat . even <nat:206> = true ) . { auto . } assert ( <genH> : Nat . even <nat:246> = true ) . { auto . } assert ( <genH> : Nat . even <nat:292> = true ) . { auto . } assert ( <genH> : Nat . even <nat:340> = true ) . { auto . } assert ( <genH> : Nat . even <nat:300> = true ) . { auto . } assert ( <genH> : Nat . even <nat:376> = true ) . { auto . } assert ( <genH> : Nat . even <nat:426> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:196> * <var:V> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:206> * <var:U> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:246> * <var:Z> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:292> * <var:w> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:340> * <var:D> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:300> * <var:L> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:376> * <var:b> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:426> * <var:g> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:292> * <var:w> + <nat:246> * <var:Z> + <nat:426> * <var:g> + <nat:206> * <var:U> + <nat:376> * <var:b> + <nat:300> * <var:L> + <nat:340> * <var:D> + <nat:196> * <var:V> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . even_add . rewrite <genH> . auto . Qed . 