\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:i> \times <nat:252> + <nat:248> \times <var:c> + <nat:368> \times <var:z> + <nat:148> + <nat:302> \times <var:r> + <var:o> \times <nat:480> + <nat:256> \times <var:O> $ is guaranteed to be even for all positive integers $ <var:O> $ , $ <var:z> $ , $ <var:c> $ , $ <var:o> $ , $ <var:r> $ , and $ <var:i> $ . \end{theorem} \begin{proof} Observe that the products $ <var:o> * <nat:480> $ and moreover $ <nat:368> * <var:z> $ are known to be even integers . This is proven since the product between an even natural with an arbitrary number in $ \mathbb{N} $ will be in itself an even integer . The product $ <var:r> * <nat:302> $ is known as even . In addition to this , the products $ <nat:252> * <var:i> $ as well as $ <nat:248> * <var:c> $ are even . What's more , take note that the term $ <var:O> * <nat:256> $ is known to be an even positive integer . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:O> <var:z> <var:c> <var:o> <var:r> <var:i> : nat , Nat . even ( <nat:252> * <var:i> + <nat:248> * <var:c> + <nat:368> * <var:z> + <nat:302> * <var:r> + <nat:480> * <var:o> + <nat:256> * <var:O> + <nat:148> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:480> * <var:o> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:368> * <var:z> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:302> * <var:r> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:252> * <var:i> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:248> * <var:c> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:256> * <var:O> ) = true ) . { rewrite Nat . even_mul . auto . } repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 