\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:59> + <var:t> \cdot <nat:16> + <nat:104> \cdot <var:f> + <nat:488> \cdot <var:U> + <var:h> \cdot <nat:140> + <nat:266> \cdot <var:S> + <var:l> \cdot <nat:240> + <var:u> \cdot <nat:146> $ is odd . \end{theorem} \begin{proof} We show the expression $ <nat:240> \times <var:l> + <nat:104> \times <var:f> + <var:t> \times <nat:16> + <nat:266> \times <var:S> + <nat:59> + <var:h> \times <nat:140> + <nat:146> \times <var:u> + <nat:488> \times <var:U> $ is guaranteed to be odd since $ <var:t> * <nat:16> + <nat:146> * <var:u> + <var:f> * <nat:104> + <var:h> * <nat:140> + <nat:240> * <var:l> + <var:S> * <nat:266> + <var:U> * <nat:488> $ is clearly even , from the fact the multiplication between even integers must be even . The numbers $ <nat:16> $ and $ <nat:146> $ are guaranteed to be even In addition , the whole numbers $ <nat:104> $ , $ <nat:140> $ , additionally $ <nat:240> $ are guaranteed to be even numbers Observe that the whole number $ <nat:488> $ is obviously an even number The leading term $ <nat:266> $ is an even number in $ \mathbb{Z}^+ $ As a consequence that the summing between even positive integers and an even integer must be an even number in $ \mathbb{Z}^+ $ , We prove the sum $ <var:U> <nat:488> + <var:l> <nat:240> + <nat:104> <var:f> + <var:u> <nat:146> + <var:t> <nat:16> + <var:S> <nat:266> + <nat:59> + <var:h> <nat:140> $ will be odd . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:t> <var:f> <var:U> <var:h> <var:S> <var:l> <var:u> : nat , Nat . odd ( <nat:16> * <var:t> + <nat:104> * <var:f> + <nat:488> * <var:U> + <nat:140> * <var:h> + <nat:266> * <var:S> + <nat:240> * <var:l> + <nat:146> * <var:u> + <nat:59> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:16> = true ) . { auto . } assert ( <genH> : Nat . even <nat:146> = true ) . { auto . } assert ( <genH> : Nat . even <nat:104> = true ) . { auto . } assert ( <genH> : Nat . even <nat:140> = true ) . { auto . } assert ( <genH> : Nat . even <nat:240> = true ) . { auto . } assert ( <genH> : Nat . even <nat:488> = true ) . { auto . } assert ( <genH> : Nat . even <nat:266> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:16> * <var:t> + <nat:104> * <var:f> + <nat:488> * <var:U> + <nat:140> * <var:h> + <nat:266> * <var:S> + <nat:240> * <var:l> + <nat:146> * <var:u> ) = true ) . { repeat rewrite Nat . even_add . repeat rewrite Nat . even_mul . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . auto . Qed . 