\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:152> \cdot <var:m> + <nat:68> \cdot <var:l> + <var:Z> \cdot <nat:322> + <nat:74> + <var:i> \cdot <nat:436> + <nat:214> \cdot <var:Q> + <nat:134> \cdot <var:t> + <var:z> \cdot <nat:112> + <nat:486> \cdot <var:o> $ is even . \end{theorem} \begin{proof} The addition of an even number with an even number in $ \mathbb{N} $ must be instrinsically an even number in $ \mathbb{N} $ . Additionally , the terms $ <var:m> * <nat:152> $ , $ <var:l> * <nat:68> $ , $ <var:Z> * <nat:322> $ , $ <nat:436> * <var:i> $ , $ <var:Q> * <nat:214> $ , $ <nat:134> * <var:t> $ , $ <nat:112> * <var:z> $ , and also $ <var:o> * <nat:486> $ are even positive integers . This claim is true from the knowledge the product between an even integer with an arbitrary natural is even . This holds since the positive integers $ <nat:152> $ , $ <nat:68> $ , $ <nat:322> $ , $ <nat:436> $ , $ <nat:214> $ , $ <nat:134> $ , $ <nat:112> $ , and also $ <nat:486> $ will be themselves even integers . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:m> <var:l> <var:Z> <var:i> <var:Q> <var:t> <var:z> <var:o> : nat , Nat . even ( <nat:152> * <var:m> + <nat:68> * <var:l> + <nat:322> * <var:Z> + <nat:436> * <var:i> + <nat:214> * <var:Q> + <nat:134> * <var:t> + <nat:112> * <var:z> + <nat:486> * <var:o> + <nat:74> ) = true . Proof . intros . repeat rewrite Nat . even_add . assert ( <genH> : Nat . even <nat:152> = true ) . { auto . } assert ( <genH> : Nat . even <nat:68> = true ) . { auto . } assert ( <genH> : Nat . even <nat:322> = true ) . { auto . } assert ( <genH> : Nat . even <nat:436> = true ) . { auto . } assert ( <genH> : Nat . even <nat:214> = true ) . { auto . } assert ( <genH> : Nat . even <nat:134> = true ) . { auto . } assert ( <genH> : Nat . even <nat:112> = true ) . { auto . } assert ( <genH> : Nat . even <nat:486> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:152> * <var:m> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:68> * <var:l> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:322> * <var:Z> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:436> * <var:i> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:214> * <var:Q> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:134> * <var:t> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:112> * <var:z> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:486> * <var:o> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 