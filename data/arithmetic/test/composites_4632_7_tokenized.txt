\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \newtheorem{definition}{Definition} \begin{document} \begin{definition} $ \exists <var:U> $ , $ <var:Y> $ , $ <var:y> $ , $ <var:i> $ , $ <var:C> $ , $ <var:J> $ , $ <var:z> \in \mathbb{N} $ where $ <var:z> $ , $ <var:J> $ , $ <var:U> $ , $ <var:i> $ , $ <var:y> $ , $ <var:C> $ , $ <var:Y> \geq <nat:2> $ . Take that $ <var:b> \in \mathbb{Z}^+ $ will be named a <def:seven-composite> integer when $ <var:b> = <var:U> \times <var:Y> \times <var:J> \times <var:C> \times <var:y> \times <var:i> \times <var:z> $ . \end{definition} \begin{theorem} $ <var:b> = <nat:181440> $ is a <def:seven-composite> number . \end{theorem} \begin{proof} Remember a <def:seven-composite> whole number is the multiplication of $ <var:z> $ , $ <var:C> $ , $ <var:Y> $ , $ <var:U> $ , $ <var:J> $ , $ <var:y> $ , $ <var:i> $ greater than or equal to <nat:2> . Let $ <var:C> = <nat:12> $ , $ <var:Y> = <nat:5> $ , $ <var:J> = <nat:8> $ , $ <var:z> = <nat:7> $ , $ <var:U> = <nat:3> $ , $ <var:y> = <nat:9> $ , and $ <var:i> = <nat:2> $ . Observe that $ <nat:12> $ , $ <nat:2> $ , $ <nat:7> $ , $ <nat:8> $ , $ <nat:5> $ , $ <nat:3> $ and $ <nat:9> \geq <nat:2> $ . So , <nat:181440> is a <def:seven-composite> number is verified . Hence , $ <var:y> \times <var:z> \times <var:U> \times <var:Y> \times <var:C> \times <var:J> \times <var:i> = <nat:181440> $ has been validated . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:seven-composite> ( <var:b> : nat ) := exists <var:U> <var:Y> <var:y> <var:i> <var:C> <var:J> <var:z> : nat , ( <var:z> >= <nat:2> ) /\ ( <var:J> >= <nat:2> ) /\ ( <var:U> >= <nat:2> ) /\ ( <var:i> >= <nat:2> ) /\ ( <var:y> >= <nat:2> ) /\ ( <var:C> >= <nat:2> ) /\ ( <var:Y> >= <nat:2> ) /\ ( <var:b> = <var:U> * <var:Y> * <var:J> * <var:C> * <var:y> * <var:i> * <var:z> ) . Theorem <genP:1> : <def:seven-composite> <nat:181440> . Proof . unfold <def:seven-composite> . exists <nat:3> . exists <nat:5> . exists <nat:9> . exists <nat:2> . exists <nat:12> . exists <nat:8> . exists <nat:7> . assert ( <genH> : <nat:12> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:2> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:7> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:8> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:5> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:3> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:9> >= <nat:2> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 