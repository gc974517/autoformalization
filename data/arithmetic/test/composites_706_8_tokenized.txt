\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} There are some $ <var:c> $ , $ <var:w> $ , $ <var:S> $ , $ <var:I> $ , $ <var:d> $ , $ <var:j> $ , $ <var:J> $ , $ <var:e> $ where $ <var:J> $ , $ <var:d> $ , $ <var:I> $ , $ <var:w> $ , $ <var:e> $ , $ <var:c> $ , $ <var:j> $ and $ <var:S> \geq <nat:2> $ and where the integer <nat:5559840> is the product of positive integers $ <var:c> $ , $ <var:w> $ , $ <var:S> $ , $ <var:I> $ , $ <var:d> $ , $ <var:j> $ , $ <var:J> $ , and $ <var:e> $ . \end{theorem} \begin{proof} Take $ <var:J> = <nat:13> $ , $ <var:d> = <nat:11> $ , $ <var:e> = <nat:6> $ , $ <var:S> = <nat:9> $ , $ <var:c> = <nat:5> $ , $ <var:j> = <nat:4> $ , $ <var:w> = <nat:12> $ , $ <var:I> = <nat:3> $ . Notice $ <var:J> * <var:j> * <var:d> * <var:S> * <var:c> * <var:I> * <var:w> * <var:e> = <nat:5559840> $ . Similarly note that $ <nat:6> $ , $ <nat:5> $ , $ <nat:11> $ , $ <nat:3> $ , $ <nat:12> $ , $ <nat:13> $ , $ <nat:9> $ , $ <nat:4> \geq <nat:2> $ . \end{proof} \end{document} 
~
Require Import Lia . Theorem <genP:1> : exists <var:c> <var:w> <var:S> <var:I> <var:d> <var:j> <var:J> <var:e> : nat , ( <var:J> >= <nat:2> ) /\ ( <var:d> >= <nat:2> ) /\ ( <var:I> >= <nat:2> ) /\ ( <var:w> >= <nat:2> ) /\ ( <var:e> >= <nat:2> ) /\ ( <var:c> >= <nat:2> ) /\ ( <var:j> >= <nat:2> ) /\ ( <var:S> >= <nat:2> ) /\ ( <nat:5559840> = <var:c> * <var:w> * <var:S> * <var:I> * <var:d> * <var:j> * <var:J> * <var:e> ) . Proof . exists <nat:5> . exists <nat:12> . exists <nat:9> . exists <nat:3> . exists <nat:11> . exists <nat:4> . exists <nat:13> . exists <nat:6> . assert ( <genH> : <nat:6> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:5> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:11> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:3> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:12> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:13> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:9> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:4> >= <nat:2> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 