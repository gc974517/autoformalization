\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:V> \cdot <nat:360> + <var:y> \cdot <nat:436> + <nat:260> \cdot <var:B> + <var:N> \cdot <nat:158> + <var:l> \cdot <nat:482> + <nat:10> \cdot <var:f> + <nat:195> + <nat:170> \cdot <var:I> + <var:s> \cdot <nat:240> $ will be odd for any unknowns $ <var:I> $ , $ <var:V> $ , $ <var:s> $ , $ <var:l> $ , $ <var:f> $ , $ <var:B> $ , $ <var:N> $ , and $ <var:y> $ . \end{theorem} \begin{proof} Notice that $ <nat:195> $ is clearly an odd number in $ \mathbb{N} $ . We demonstrate this proposition is true . The lemma is proven since $ <nat:436> <var:y> + <nat:170> <var:I> + <var:V> <nat:360> + <nat:482> <var:l> + <var:s> <nat:240> + <nat:158> <var:N> + <nat:10> <var:f> + <var:B> <nat:260> $ is trivially even . Remember the positive integers $ <nat:436> $ , $ <nat:240> $ , $ <nat:360> $ , $ <nat:260> $ , $ <nat:482> $ , and moreover $ <nat:10> $ are even The whole number $ <nat:170> $ is obviously an even element of $ \mathbb{N} $ The natural number $ <nat:158> $ is trivially an even whole number \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:I> <var:V> <var:s> <var:l> <var:f> <var:B> <var:N> <var:y> : nat , Nat . odd ( <nat:360> * <var:V> + <nat:436> * <var:y> + <nat:260> * <var:B> + <nat:158> * <var:N> + <nat:482> * <var:l> + <nat:10> * <var:f> + <nat:170> * <var:I> + <nat:240> * <var:s> + <nat:195> ) = true . Proof . intros . assert ( <genH> : Nat . odd <nat:195> = true ) . { auto . } assert ( <genH> : Nat . even <nat:436> = true ) . { auto . } assert ( <genH> : Nat . even <nat:240> = true ) . { auto . } assert ( <genH> : Nat . even <nat:360> = true ) . { auto . } assert ( <genH> : Nat . even <nat:260> = true ) . { auto . } assert ( <genH> : Nat . even <nat:482> = true ) . { auto . } assert ( <genH> : Nat . even <nat:10> = true ) . { auto . } assert ( <genH> : Nat . even <nat:170> = true ) . { auto . } assert ( <genH> : Nat . even <nat:158> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:360> * <var:V> + <nat:436> * <var:y> + <nat:260> * <var:B> + <nat:158> * <var:N> + <nat:482> * <var:l> + <nat:10> * <var:f> + <nat:170> * <var:I> + <nat:240> * <var:s> ) = true ) . { repeat rewrite Nat . even_add . repeat rewrite Nat . even_mul . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . rewrite <genH> . auto . Qed . 