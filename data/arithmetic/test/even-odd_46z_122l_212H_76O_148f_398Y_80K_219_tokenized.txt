\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:46> * <var:z> + <nat:398> * <var:Y> + <nat:219> + <nat:80> * <var:K> + <nat:122> * <var:l> + <var:O> * <nat:76> + <nat:212> * <var:H> + <nat:148> * <var:f> $ is guaranteed to be odd . \end{theorem} \begin{proof} It can be justified that this result is proven . This theorem is true because $ <nat:398> \times <var:Y> + <var:l> \times <nat:122> + <nat:46> \times <var:z> + <var:f> \times <nat:148> + <var:O> \times <nat:76> + <var:H> \times <nat:212> + <nat:80> \times <var:K> $ is even . Remember that the terms $ <nat:46> \cdot <var:z> $ , $ <nat:148> \cdot <var:f> $ , $ <nat:212> \cdot <var:H> $ , $ <nat:122> \cdot <var:l> $ , $ <var:O> \cdot <nat:76> $ , and likewise $ <nat:398> \cdot <var:Y> $ must be even from the knowledge multiplying between an even positive integer and an arbitrary positive integer will be clearly an even element of $ \mathbb{Z}^+ $ . The pair $ <nat:80> \cdot <var:K> $ is known as even . $ <var:z> \times <nat:46> + <nat:122> \times <var:l> + <var:H> \times <nat:212> + <nat:76> \times <var:O> + <var:f> \times <nat:148> + <nat:398> \times <var:Y> + <var:K> \times <nat:80> $ must be even since the product between even elements of $ \mathbb{Z}^+ $ and an arbitrary number in $ \mathbb{N} $ must be even . Recall that the adding of even elements of $ \mathbb{N} $ collectively and an odd number in $ \mathbb{N} $ is odd . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:z> <var:Y> <var:K> <var:l> <var:O> <var:H> <var:f> : nat , Nat . odd ( <nat:46> * <var:z> + <nat:398> * <var:Y> + <nat:80> * <var:K> + <nat:122> * <var:l> + <nat:76> * <var:O> + <nat:212> * <var:H> + <nat:148> * <var:f> + <nat:219> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:46> * <var:z> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:148> * <var:f> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:212> * <var:H> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:122> * <var:l> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:76> * <var:O> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:398> * <var:Y> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:80> * <var:K> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:46> * <var:z> + <nat:398> * <var:Y> + <nat:80> * <var:K> + <nat:122> * <var:l> + <nat:76> * <var:O> + <nat:212> * <var:H> + <nat:148> * <var:f> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . auto . Qed . 