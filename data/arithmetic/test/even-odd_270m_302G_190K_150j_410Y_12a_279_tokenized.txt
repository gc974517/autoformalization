\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:150> * <var:j> + <nat:12> * <var:a> + <nat:270> * <var:m> + <var:K> * <nat:190> + <var:Y> * <nat:410> + <var:G> * <nat:302> + <nat:279> $ must be odd . \end{theorem} \begin{proof} It can be checked that the result is true . Take note the summation $ <nat:302> \cdot <var:G> + <nat:279> + <nat:190> \cdot <var:K> + <var:j> \cdot <nat:150> + <nat:12> \cdot <var:a> + <var:m> \cdot <nat:270> + <var:Y> \cdot <nat:410> $ is obviously odd as a consequence that the summation $ <var:G> \times <nat:302> + <nat:12> \times <var:a> + <nat:410> \times <var:Y> + <var:j> \times <nat:150> + <nat:270> \times <var:m> + <var:K> \times <nat:190> $ is even , since the summing of an even integer and an even whole number will be an even element of $ \mathbb{Z}^+ $ . The leading terms $ <nat:410> $ and $ <nat:150> $ must be even Furthermore , the integer $ <nat:302> $ is trivially even On top of this , the natural number $ <nat:190> $ is obviously an even element of $ \mathbb{N} $ Adding on , the whole number $ <nat:12> $ is even Likewise , see that the integer $ <nat:270> $ is even and likewise because multiplying between an even number in $ \mathbb{Z}^+ $ and an arbitrary integer is guaranteed to be an even whole number the sum $ <var:m> * <nat:270> + <var:G> * <nat:302> + <var:K> * <nat:190> + <nat:150> * <var:j> + <nat:410> * <var:Y> + <nat:12> * <var:a> $ is obviously even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:j> <var:a> <var:m> <var:K> <var:Y> <var:G> : nat , Nat . odd ( <nat:150> * <var:j> + <nat:12> * <var:a> + <nat:270> * <var:m> + <nat:190> * <var:K> + <nat:410> * <var:Y> + <nat:302> * <var:G> + <nat:279> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:410> = true ) . { auto . } assert ( <genH> : Nat . even <nat:150> = true ) . { auto . } assert ( <genH> : Nat . even <nat:302> = true ) . { auto . } assert ( <genH> : Nat . even <nat:190> = true ) . { auto . } assert ( <genH> : Nat . even <nat:12> = true ) . { auto . } assert ( <genH> : Nat . even <nat:270> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:150> * <var:j> + <nat:12> * <var:a> + <nat:270> * <var:m> + <nat:190> * <var:K> + <nat:410> * <var:Y> + <nat:302> * <var:G> ) = true ) . { repeat rewrite Nat . even_add . repeat rewrite Nat . even_mul . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . auto . Qed . 