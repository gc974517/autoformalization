\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:388> * <var:F> + <nat:134> * <var:v> + <nat:153> + <var:Y> * <nat:376> + <nat:138> * <var:h> + <nat:92> * <var:H> + <nat:286> * <var:m> + <var:f> * <nat:108> $ must be odd . \end{theorem} \begin{proof} Observe the coefficient $ <nat:138> $ is trivially even Observe that the integers $ <nat:376> $ , $ <nat:388> $ , additionally $ <nat:286> $ are clearly even In addition to this , recall that the whole number $ <nat:108> $ is known to be even The integer $ <nat:134> $ is guaranteed to be even Additionally , remember the leading term $ <nat:92> $ is guaranteed to be an even natural Remember that $ <nat:153> $ is trivially an odd whole number . The product of even numbers is guaranteed to be an even natural . So , this main result is proven . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:F> <var:v> <var:Y> <var:h> <var:H> <var:m> <var:f> : nat , Nat . odd ( <nat:388> * <var:F> + <nat:134> * <var:v> + <nat:376> * <var:Y> + <nat:138> * <var:h> + <nat:92> * <var:H> + <nat:286> * <var:m> + <nat:108> * <var:f> + <nat:153> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:138> = true ) . { auto . } assert ( <genH> : Nat . even <nat:376> = true ) . { auto . } assert ( <genH> : Nat . even <nat:388> = true ) . { auto . } assert ( <genH> : Nat . even <nat:286> = true ) . { auto . } assert ( <genH> : Nat . even <nat:108> = true ) . { auto . } assert ( <genH> : Nat . even <nat:134> = true ) . { auto . } assert ( <genH> : Nat . even <nat:92> = true ) . { auto . } assert ( <genH> : Nat . odd <nat:153> = true ) . { auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . repeat rewrite Nat . even_mul . rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 