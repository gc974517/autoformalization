\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Take that under the condition that there are $ <var:M> $ , $ <var:P> $ , $ <var:O> $ , $ <var:c> $ , $ <var:U> $ , $ <var:f> $ , $ <var:D> $ , $ <var:J> $ , $ <var:x> \in \mathbb{Z}^+ $ satisfying the condition that $ <var:P> $ , $ <var:U> $ , $ <var:D> $ , $ <var:J> $ , $ <var:c> $ , $ <var:f> $ , $ <var:M> $ , $ <var:O> $ and $ <var:x> \geq <nat:2> $ . Take as given that some integer $ <var:t> $ will be considered a <def:nine-composite> positive integer if $ <var:t> = <var:x> \times <var:O> \times <var:M> \times <var:U> \times <var:D> \times <var:f> \times <var:J> \times <var:c> \times <var:P> $ . Therefore the whole number <nat:14515200> is a <def:nine-composite> whole number . \end{theorem} \begin{proof} Notice $ <var:J> \cdot <var:D> \cdot <var:U> \cdot <var:M> \cdot <var:O> \cdot <var:x> \cdot <var:c> \cdot <var:P> \cdot <var:f> = <nat:14515200> $ suggests $ <var:f> = <nat:10> $ , $ <var:P> = <nat:12> $ , $ <var:O> = <nat:7> $ , $ <var:c> = <nat:9> $ , $ <var:M> = <nat:8> $ , $ <var:U> = <nat:4> $ , $ <var:J> = <nat:6> $ , $ <var:D> = <nat:5> $ and $ <var:x> = <nat:2> $ . Also notice that $ <nat:2> $ , $ <nat:8> $ , $ <nat:7> $ , $ <nat:4> $ , $ <nat:10> $ , $ <nat:6> $ , $ <nat:12> $ , $ <nat:9> $ , and $ <nat:5> $ are greater than or equal to <nat:2> . This hints <nat:14515200> is a <def:nine-composite> whole number . Thus , $ <var:x> $ , $ <var:f> $ , $ <var:U> $ , $ <var:J> $ , $ <var:D> $ , $ <var:c> $ , $ <var:M> $ , $ <var:P> $ and $ <var:O> \geq <nat:2> $ plus $ <var:P> \times <var:f> \times <var:O> \times <var:U> \times <var:M> \times <var:c> \times <var:D> \times <var:x> \times <var:J> = <nat:14515200> $ is validated . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:nine-composite> ( <var:t> : nat ) := exists <var:M> <var:P> <var:O> <var:c> <var:U> <var:f> <var:D> <var:J> <var:x> : nat , ( <var:P> >= <nat:2> ) /\ ( <var:U> >= <nat:2> ) /\ ( <var:D> >= <nat:2> ) /\ ( <var:J> >= <nat:2> ) /\ ( <var:c> >= <nat:2> ) /\ ( <var:f> >= <nat:2> ) /\ ( <var:M> >= <nat:2> ) /\ ( <var:O> >= <nat:2> ) /\ ( <var:x> >= <nat:2> ) /\ ( <var:t> = <var:x> * <var:O> * <var:M> * <var:U> * <var:D> * <var:f> * <var:J> * <var:c> * <var:P> ) . Theorem <genP:1> : <def:nine-composite> <nat:14515200> . Proof . unfold <def:nine-composite> . exists <nat:8> . exists <nat:12> . exists <nat:7> . exists <nat:9> . exists <nat:4> . exists <nat:10> . exists <nat:5> . exists <nat:6> . exists <nat:2> . assert ( <genH> : <nat:2> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:8> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:7> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:4> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:10> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:6> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:12> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:9> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:5> >= <nat:2> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 