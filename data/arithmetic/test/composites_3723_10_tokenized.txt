\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \newtheorem{definition}{Definition} \begin{document} \begin{definition} Given that we have $ <var:N> = <var:o> \times <var:b> \times <var:m> \times <var:H> \times <var:v> \times <var:q> \times <var:n> \times <var:f> \times <var:P> \times <var:X> $ for some number $ <var:N> $ as well as so that $ <var:H> $ , $ <var:q> $ , $ <var:o> $ , $ <var:b> $ , $ <var:P> $ , $ <var:v> $ , $ <var:n> $ , $ <var:m> $ , $ <var:X> $ and $ <var:f> \geq <nat:2> $ assuming some positive integers $ <var:o> $ , $ <var:m> $ , $ <var:X> $ , $ <var:f> $ , $ <var:n> $ , $ <var:b> $ , $ <var:H> $ , $ <var:P> $ , $ <var:v> $ , $ <var:q> $ , we define that $ <var:N> $ is a <def:ten-composite> positive integer . \end{definition} \begin{theorem} The whole number <nat:56609280> is a <def:ten-composite> positive integer . \end{theorem} \begin{proof} Recollect that a <def:ten-composite> positive integer is the multiplication between whole numbers $ <var:o> $ , $ <var:n> $ , $ <var:m> $ , $ <var:v> $ , $ <var:H> $ , $ <var:b> $ , $ <var:q> $ , $ <var:f> $ , $ <var:X> $ and $ <var:P> $ where $ <var:v> $ , $ <var:P> $ , $ <var:n> $ , $ <var:m> $ , $ <var:H> $ , $ <var:b> $ , $ <var:o> $ , $ <var:f> $ , $ <var:X> $ and $ <var:q> \geq <nat:2> $ . Observe that $ <nat:3> $ , $ <nat:13> $ , $ <nat:4> $ , $ <nat:7> $ , $ <nat:9> $ , $ <nat:12> $ , $ <nat:5> $ , $ <nat:6> $ , $ <nat:8> $ and $ <nat:2> $ are larger than or equal to <nat:2> . What's more note that additionally $ <var:H> \cdot <var:n> \cdot <var:P> \cdot <var:f> \cdot <var:b> \cdot <var:v> \cdot <var:m> \cdot <var:o> \cdot <var:q> \cdot <var:X> = <nat:56609280> $ hints $ <var:v> = <nat:9> $ , $ <var:H> = <nat:12> $ , $ <var:X> = <nat:7> $ , $ <var:b> = <nat:3> $ , $ <var:f> = <nat:4> $ , $ <var:m> = <nat:13> $ , $ <var:n> = <nat:5> $ , $ <var:q> = <nat:2> $ , $ <var:o> = <nat:6> $ and $ <var:P> = <nat:8> $ . This shows <nat:56609280> is a <def:ten-composite> natural number . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:ten-composite> ( <var:N> : nat ) := exists <var:o> <var:m> <var:X> <var:f> <var:n> <var:b> <var:H> <var:P> <var:v> <var:q> : nat , ( <var:N> = <var:o> * <var:b> * <var:m> * <var:H> * <var:v> * <var:q> * <var:n> * <var:f> * <var:P> * <var:X> ) /\ ( <var:H> >= <nat:2> ) /\ ( <var:q> >= <nat:2> ) /\ ( <var:o> >= <nat:2> ) /\ ( <var:b> >= <nat:2> ) /\ ( <var:P> >= <nat:2> ) /\ ( <var:v> >= <nat:2> ) /\ ( <var:n> >= <nat:2> ) /\ ( <var:m> >= <nat:2> ) /\ ( <var:X> >= <nat:2> ) /\ ( <var:f> >= <nat:2> ) . Theorem <genP:1> : <def:ten-composite> <nat:56609280> . Proof . unfold <def:ten-composite> . assert ( <genH> : <nat:3> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:13> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:4> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:7> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:9> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:12> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:5> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:6> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:8> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:2> >= <nat:2> ) . { lia . } exists <nat:6> . exists <nat:13> . exists <nat:7> . exists <nat:4> . exists <nat:5> . exists <nat:3> . exists <nat:12> . exists <nat:8> . exists <nat:9> . exists <nat:2> . repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 