\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:245> + <nat:462> <var:E> + <nat:6> <var:F> + <var:e> <nat:346> + <nat:478> <var:y> + <var:O> <nat:284> + <nat:200> <var:B> + <nat:448> <var:t> + <nat:32> <var:v> + <nat:96> <var:n> $ is odd given any positive numbers $ <var:n> $ , $ <var:e> $ , $ <var:B> $ , $ <var:y> $ , $ <var:F> $ , $ <var:t> $ , $ <var:O> $ , $ <var:v> $ , and $ <var:E> $ . \end{theorem} \begin{proof} We apply the understanding that the formula $ <nat:346> \cdot <var:e> + <nat:462> \cdot <var:E> + <nat:96> \cdot <var:n> + <var:y> \cdot <nat:478> + <nat:448> \cdot <var:t> + <nat:6> \cdot <var:F> + <nat:284> \cdot <var:O> + <nat:32> \cdot <var:v> + <var:B> \cdot <nat:200> $ is known as even . The whole numbers $ <nat:346> $ , $ <nat:462> $ , additionally $ <nat:6> $ are known to be even naturals . Hence , the products $ <var:e> <nat:346> $ , $ <nat:462> <var:E> $ , as well as $ <var:F> <nat:6> $ is even in addition . What's more , the products $ <var:y> <nat:478> $ plus $ <var:t> <nat:448> $ are guaranteed to be even naturals . This claim must be true because the product of an even natural number and any element of $ \mathbb{N} $ is guaranteed to be even and the numbers $ <nat:478> $ and likewise $ <nat:448> $ are known as even . The leading term $ <nat:32> $ is known as an even natural . So , the product $ <nat:32> <var:v> $ must be even also . In addition , notice the pairs $ <nat:96> <var:n> $ and moreover $ <var:B> <nat:200> $ are even because the product of an even natural and any number in $ \mathbb{Z}^+ $ will be even , and must be true as a consequence that the numbers $ <nat:96> $ in addition to $ <nat:200> $ are obviously obviously even positive integers . The natural number $ <nat:284> $ is clearly even . Hence , the product $ <var:O> <nat:284> $ is even too . We check the expression $ <nat:346> \cdot <var:e> + <var:F> \cdot <nat:6> + <nat:200> \cdot <var:B> + <var:v> \cdot <nat:32> + <var:n> \cdot <nat:96> + <var:t> \cdot <nat:448> + <var:y> \cdot <nat:478> + <var:E> \cdot <nat:462> + <nat:284> \cdot <var:O> + <nat:245> $ will be odd . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:n> <var:e> <var:B> <var:y> <var:F> <var:t> <var:O> <var:v> <var:E> : nat , Nat . odd ( <nat:462> * <var:E> + <nat:6> * <var:F> + <nat:346> * <var:e> + <nat:478> * <var:y> + <nat:284> * <var:O> + <nat:200> * <var:B> + <nat:448> * <var:t> + <nat:32> * <var:v> + <nat:96> * <var:n> + <nat:245> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:346> = true ) . { auto . } assert ( <genH> : Nat . even <nat:462> = true ) . { auto . } assert ( <genH> : Nat . even <nat:6> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:346> * <var:e> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:462> * <var:E> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:6> * <var:F> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:478> = true ) . { auto . } assert ( <genH> : Nat . even <nat:448> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:478> * <var:y> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:448> * <var:t> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:32> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:32> * <var:v> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:96> = true ) . { auto . } assert ( <genH> : Nat . even <nat:200> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:96> * <var:n> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:200> * <var:B> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:284> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:284> * <var:O> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:462> * <var:E> + <nat:6> * <var:F> + <nat:346> * <var:e> + <nat:478> * <var:y> + <nat:284> * <var:O> + <nat:200> * <var:B> + <nat:448> * <var:t> + <nat:32> * <var:v> + <nat:96> * <var:n> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . auto . Qed . 