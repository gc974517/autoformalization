\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} With any whole numbers $ <var:V> $ , $ <var:M> $ , $ <var:d> $ , $ <var:b> $ , $ <var:h> $ , $ <var:K> $ , and $ <var:U> $ $ <nat:375> + <var:h> \times <nat:376> + <nat:220> \times <var:V> + <nat:310> \times <var:K> + <nat:360> \times <var:d> + <nat:272> \times <var:U> + <nat:70> \times <var:M> + <var:b> \times <nat:122> $ must be odd . \end{theorem} \begin{proof} We apply the fact that the formula $ <var:h> <nat:376> + <nat:310> <var:K> + <nat:272> <var:U> + <nat:70> <var:M> + <nat:220> <var:V> + <nat:360> <var:d> + <nat:122> <var:b> $ is clearly even , because the summation between even naturals successively and an even natural will be even . The natural numbers $ <nat:360> $ , $ <nat:220> $ , and $ <nat:272> $ are guaranteed to be even positive integers Additionally , observe the natural number $ <nat:310> $ is known to be even Further , notice the positive integer $ <nat:122> $ is obviously even The leading term $ <nat:70> $ is known as an even natural In addition , notice that the positive integer $ <nat:376> $ is known to be an even integer additionally as a consequence that the multiplication between even whole numbers and some number in $ \mathbb{N} $ must be even the sum $ <var:d> * <nat:360> + <nat:310> * <var:K> + <nat:122> * <var:b> + <var:h> * <nat:376> + <nat:70> * <var:M> + <nat:220> * <var:V> + <var:U> * <nat:272> $ must be itself even . See $ <nat:375> $ is clearly an odd element of $ \mathbb{N} $ . The adding between even elements of $ \mathbb{N} $ successively and an odd positive integer must be by itself an odd positive integer . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:V> <var:M> <var:d> <var:b> <var:h> <var:K> <var:U> : nat , Nat . odd ( <nat:376> * <var:h> + <nat:220> * <var:V> + <nat:310> * <var:K> + <nat:360> * <var:d> + <nat:272> * <var:U> + <nat:70> * <var:M> + <nat:122> * <var:b> + <nat:375> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:360> = true ) . { auto . } assert ( <genH> : Nat . even <nat:220> = true ) . { auto . } assert ( <genH> : Nat . even <nat:272> = true ) . { auto . } assert ( <genH> : Nat . even <nat:310> = true ) . { auto . } assert ( <genH> : Nat . even <nat:122> = true ) . { auto . } assert ( <genH> : Nat . even <nat:70> = true ) . { auto . } assert ( <genH> : Nat . even <nat:376> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:376> * <var:h> + <nat:220> * <var:V> + <nat:310> * <var:K> + <nat:360> * <var:d> + <nat:272> * <var:U> + <nat:70> * <var:M> + <nat:122> * <var:b> ) = true ) . { repeat rewrite Nat . even_add . repeat rewrite Nat . even_mul . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } assert ( <genH> : Nat . odd <nat:375> = true ) . { auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . rewrite <genH> . auto . Qed . 