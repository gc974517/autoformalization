\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} With any positive numbers $ <var:k> $ , $ <var:m> $ , $ <var:r> $ , $ <var:N> $ , $ <var:I> $ , $ <var:e> $ , $ <var:F> $ , $ <var:A> $ , and $ <var:n> $ $ <nat:149> + <var:N> <nat:256> + <nat:312> <var:F> + <nat:346> <var:n> + <var:m> <nat:84> + <nat:234> <var:e> + <nat:324> <var:I> + <var:r> <nat:94> + <var:A> <nat:372> + <var:k> <nat:264> $ will be odd . \end{theorem} \begin{proof} Remember that the products $ <nat:372> <var:A> $ , $ <nat:264> <var:k> $ , $ <var:n> <nat:346> $ , $ <var:N> <nat:256> $ , in addition to $ <var:m> <nat:84> $ are even . Additionally , $ <var:r> <nat:94> $ is an even number in $ \mathbb{N} $ from the knowledge multiplying between an even positive integer and an arbitrary number in $ \mathbb{N} $ must be an even number . The products $ <nat:312> <var:F> $ and $ <var:e> <nat:234> $ must be even as a consequence that taking the product between an even number with any element of $ \mathbb{Z}^+ $ is guaranteed to be an even natural number . Recall that the term $ <var:I> <nat:324> $ is known to be an even number in $ \mathbb{Z}^+ $ . This fact holds from the knowledge the multiplication of an even number in $ \mathbb{N} $ and any natural must be even . Notice $ <nat:149> $ is odd . The totaling between an even whole number and an odd element of $ \mathbb{Z}^+ $ will be by its very nature an odd integer . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:k> <var:m> <var:r> <var:N> <var:I> <var:e> <var:F> <var:A> <var:n> : nat , Nat . odd ( <nat:256> * <var:N> + <nat:312> * <var:F> + <nat:346> * <var:n> + <nat:84> * <var:m> + <nat:234> * <var:e> + <nat:324> * <var:I> + <nat:94> * <var:r> + <nat:372> * <var:A> + <nat:264> * <var:k> + <nat:149> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:372> * <var:A> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:264> * <var:k> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:346> * <var:n> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:256> * <var:N> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:84> * <var:m> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:94> * <var:r> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:312> * <var:F> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:234> * <var:e> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:324> * <var:I> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . odd <nat:149> = true ) . { auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 