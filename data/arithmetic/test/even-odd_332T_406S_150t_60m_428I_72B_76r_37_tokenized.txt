\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:I> * <nat:428> + <var:m> * <nat:60> + <var:T> * <nat:332> + <var:B> * <nat:72> + <nat:37> + <nat:406> * <var:S> + <nat:76> * <var:r> + <var:t> * <nat:150> $ is guaranteed to be odd . \end{theorem} \begin{proof} This claim must be true by reason that $ <nat:332> \times <var:T> + <nat:406> \times <var:S> + <nat:150> \times <var:t> + <var:m> \times <nat:60> + <var:I> \times <nat:428> + <var:B> \times <nat:72> + <nat:76> \times <var:r> $ is trivially even . The terms $ <nat:332> * <var:T> $ , $ <nat:428> * <var:I> $ , $ <var:B> * <nat:72> $ , as well as $ <nat:60> * <var:m> $ will be even naturals . The pair $ <var:S> * <nat:406> $ is clearly an even number in $ \mathbb{Z}^+ $ . On top of this , we know the term $ <var:r> * <nat:76> $ is an even number in $ \mathbb{Z}^+ $ . This claim is proven from the knowledge the product of an even integer with a element of $ \mathbb{N} $ is even . On top of this , the term $ <var:t> * <nat:150> $ is clearly an even positive integer . Our claim is true because the addition of an even positive integer and even elements of $ \mathbb{N} $ will be an even positive integer . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:I> <var:m> <var:T> <var:B> <var:S> <var:r> <var:t> : nat , Nat . odd ( <nat:428> * <var:I> + <nat:60> * <var:m> + <nat:332> * <var:T> + <nat:72> * <var:B> + <nat:406> * <var:S> + <nat:76> * <var:r> + <nat:150> * <var:t> + <nat:37> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:332> * <var:T> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:428> * <var:I> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:72> * <var:B> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:60> * <var:m> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:406> * <var:S> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:76> * <var:r> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:150> * <var:t> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:428> * <var:I> + <nat:60> * <var:m> + <nat:332> * <var:T> + <nat:72> * <var:B> + <nat:406> * <var:S> + <nat:76> * <var:r> + <nat:150> * <var:t> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . auto . Qed . 