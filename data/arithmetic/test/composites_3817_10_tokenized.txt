\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Assume $ <var:R> $ , $ <var:T> $ , $ <var:M> $ , $ <var:a> $ , $ <var:O> $ , $ <var:l> $ , $ <var:p> $ , $ <var:d> $ , $ <var:Y> $ , $ <var:y> $ are positive integers such that $ <var:l> $ , $ <var:a> $ , $ <var:T> $ , $ <var:y> $ , $ <var:p> $ , $ <var:O> $ , $ <var:d> $ , $ <var:Y> $ , $ <var:M> $ , and $ <var:R> \geq <nat:2> $ . Denote that $ <var:F> \in \mathbb{N} $ is defined to be a <def:ten-composite> integer given $ <var:R> \cdot <var:d> \cdot <var:l> \cdot <var:O> \cdot <var:T> \cdot <var:p> \cdot <var:M> \cdot <var:Y> \cdot <var:a> \cdot <var:y> = <var:F> $ . For this reason the positive integer <nat:95800320> is <def:ten-composite> . \end{theorem} \begin{proof} Recall <nat:95800320> is a <def:ten-composite> whole number if it is the multiplication of positive integers $ <var:O> $ , $ <var:Y> $ , $ <var:p> $ , $ <var:a> $ , $ <var:M> $ , $ <var:y> $ , $ <var:l> $ , $ <var:T> $ , $ <var:d> $ , $ <var:R> $ so that $ <var:l> $ , $ <var:Y> $ , $ <var:a> $ , $ <var:M> $ , $ <var:y> $ , $ <var:T> $ , $ <var:d> $ , $ <var:p> $ , $ <var:R> $ , and $ <var:O> \geq <nat:2> $ . We show <nat:95800320> is a <def:ten-composite> positive integer on account of $ <nat:95800320> = <nat:12> \cdot <nat:10> \cdot <nat:9> \cdot <nat:6> \cdot <nat:3> \cdot <nat:2> \cdot <nat:7> \cdot <nat:4> \cdot <nat:8> \cdot <nat:11> $ and in view of $ <nat:2> $ , $ <nat:11> $ , $ <nat:4> $ , $ <nat:10> $ , $ <nat:6> $ , $ <nat:9> $ , $ <nat:3> $ , $ <nat:12> $ , $ <nat:8> $ , and $ <nat:7> \geq <nat:2> $ . Hence , <nat:95800320> is <def:ten-composite> is validated . Thus , $ <nat:95800320> = <var:y> \times <var:l> \times <var:a> \times <var:Y> \times <var:O> \times <var:R> \times <var:T> \times <var:M> \times <var:p> \times <var:d> $ has been validated . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:ten-composite> ( <var:F> : nat ) := exists <var:R> <var:T> <var:M> <var:a> <var:O> <var:l> <var:p> <var:d> <var:Y> <var:y> : nat , ( <var:l> >= <nat:2> ) /\ ( <var:a> >= <nat:2> ) /\ ( <var:T> >= <nat:2> ) /\ ( <var:y> >= <nat:2> ) /\ ( <var:p> >= <nat:2> ) /\ ( <var:O> >= <nat:2> ) /\ ( <var:d> >= <nat:2> ) /\ ( <var:Y> >= <nat:2> ) /\ ( <var:M> >= <nat:2> ) /\ ( <var:R> >= <nat:2> ) /\ ( <var:R> * <var:d> * <var:l> * <var:O> * <var:T> * <var:p> * <var:M> * <var:Y> * <var:a> * <var:y> = <var:F> ) . Theorem <genP:1> : <def:ten-composite> <nat:95800320> . Proof . unfold <def:ten-composite> . exists <nat:8> . exists <nat:10> . exists <nat:4> . exists <nat:9> . exists <nat:3> . exists <nat:11> . exists <nat:12> . exists <nat:7> . exists <nat:2> . exists <nat:6> . assert ( <genH> : <nat:2> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:11> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:4> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:10> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:6> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:9> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:3> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:12> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:8> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:7> >= <nat:2> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 