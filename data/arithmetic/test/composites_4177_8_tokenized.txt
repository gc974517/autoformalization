\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \newtheorem{definition}{Definition} \begin{document} \begin{definition} Let $ <var:t> $ , $ <var:q> $ , $ <var:s> $ , $ <var:i> $ , $ <var:g> $ , $ <var:B> $ , $ <var:R> $ , $ <var:D> $ be positive integers greater than or equal to <nat:2> . We claim that some whole number $ <var:c> $ is defined to be a <def:eight-composite> whole number assuming $ <var:t> * <var:g> * <var:i> * <var:q> * <var:B> * <var:D> * <var:s> * <var:R> = <var:c> $ . \end{definition} \begin{theorem} The natural number <nat:1140480> is a <def:eight-composite> integer . \end{theorem} \begin{proof} Recall a <def:eight-composite> is the product between $ <var:s> $ , $ <var:i> $ , $ <var:D> $ , $ <var:g> $ , $ <var:B> $ , $ <var:t> $ , $ <var:R> $ , and $ <var:q> $ greater than or equal to <nat:2> . Observe that $ <nat:1140480> = <nat:3> \times <nat:8> \times <nat:11> \times <nat:12> \times <nat:2> \times <nat:5> \times <nat:4> \times <nat:9> $ . Also notice $ <nat:8> $ , $ <nat:9> $ , $ <nat:2> $ , $ <nat:11> $ , $ <nat:4> $ , $ <nat:5> $ , $ <nat:3> $ and $ <nat:12> $ are more than or equivalent to <nat:2> . This suggests <nat:1140480> is a <def:eight-composite> natural number . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:eight-composite> ( <var:c> : nat ) := exists <var:t> <var:q> <var:s> <var:i> <var:g> <var:B> <var:R> <var:D> : nat , ( <var:t> >= <nat:2> ) /\ ( <var:q> >= <nat:2> ) /\ ( <var:s> >= <nat:2> ) /\ ( <var:i> >= <nat:2> ) /\ ( <var:g> >= <nat:2> ) /\ ( <var:B> >= <nat:2> ) /\ ( <var:R> >= <nat:2> ) /\ ( <var:D> >= <nat:2> ) /\ ( <var:t> * <var:g> * <var:i> * <var:q> * <var:B> * <var:D> * <var:s> * <var:R> = <var:c> ) . Theorem <genP:1> : <def:eight-composite> <nat:1140480> . Proof . unfold <def:eight-composite> . exists <nat:5> . exists <nat:12> . exists <nat:2> . exists <nat:9> . exists <nat:11> . exists <nat:3> . exists <nat:4> . exists <nat:8> . assert ( <genH> : <nat:8> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:9> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:2> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:11> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:4> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:5> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:3> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:12> >= <nat:2> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 