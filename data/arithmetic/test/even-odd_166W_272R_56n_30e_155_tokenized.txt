\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:155> + <nat:30> * <var:e> + <nat:272> * <var:R> + <var:W> * <nat:166> + <var:n> * <nat:56> $ will be odd . \end{theorem} \begin{proof} We justify the formula $ <var:e> \cdot <nat:30> + <var:n> \cdot <nat:56> + <nat:155> + <var:W> \cdot <nat:166> + <nat:272> \cdot <var:R> $ will be odd . Remember $ <nat:30> <var:e> + <nat:155> + <nat:166> <var:W> + <nat:272> <var:R> + <nat:56> <var:n> $ is known to be odd from the fact $ <var:R> * <nat:272> + <nat:56> * <var:n> + <var:W> * <nat:166> + <nat:30> * <var:e> $ is known to be even . What's more , observe that the positive integer $ <nat:166> $ is clearly even . Accordingly , $ <var:W> <nat:166> $ must be even in addition . Recall the whole number $ <nat:272> $ is known to be an even integer . So , the pair $ <var:R> <nat:272> $ is even too . We know the natural number $ <nat:56> $ is obviously even . Thus , $ <var:n> <nat:56> $ is guaranteed to be even too . Building on , the term $ <var:e> <nat:30> $ is known to be even as a consequence that the product between an even positive integer and some number in $ \mathbb{N} $ is guaranteed to be even , and is proven from the fact the leading term $ <nat:30> $ is trivially even . The theorem holds as a consequence that the addition of an even natural and even natural numbers will be an even natural number and also since the product of an even integer and any number in $ \mathbb{N} $ will be even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:e> <var:R> <var:W> <var:n> : nat , Nat . odd ( <nat:30> * <var:e> + <nat:272> * <var:R> + <nat:166> * <var:W> + <nat:56> * <var:n> + <nat:155> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:166> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:166> * <var:W> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:272> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:272> * <var:R> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:56> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:56> * <var:n> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:30> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:30> * <var:e> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:30> * <var:e> + <nat:272> * <var:R> + <nat:166> * <var:W> + <nat:56> * <var:n> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . auto . Qed . 