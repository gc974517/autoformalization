\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} We define that granted there exist $ <var:R> $ , $ <var:b> $ , $ <var:V> $ , $ <var:J> $ , $ <var:Y> $ , $ <var:f> $ , $ <var:p> $ , $ <var:I> $ , $ <var:s> \in \mathbb{Z}^+ $ claim that $ <var:k> \in \mathbb{N} $ will be called a <def:nine-composite> whole number given $ <var:p> \times <var:Y> \times <var:J> \times <var:R> \times <var:f> \times <var:b> \times <var:I> \times <var:s> \times <var:V> = <var:k> $ plus terms are larger than <nat:1> . Accordingly the natural number <nat:115315200> is a <def:nine-composite> natural number . \end{theorem} \begin{proof} Let $ <var:R> = <nat:12> $ , $ <var:Y> = <nat:7> $ , $ <var:s> = <nat:10> $ , $ <var:b> = <nat:8> $ , $ <var:f> = <nat:4> $ , $ <var:V> = <nat:11> $ , $ <var:J> = <nat:13> $ , $ <var:I> = <nat:6> $ , $ <var:p> = <nat:5> $ . We justify <nat:115315200> is a <def:nine-composite> whole number because $ <nat:12> $ , $ <nat:6> $ , $ <nat:13> $ , $ <nat:5> $ , $ <nat:7> $ , $ <nat:11> $ , $ <nat:4> $ , $ <nat:8> $ , $ <nat:10> > <nat:1> $ and seeing that $ <var:J> \times <var:R> \times <var:I> \times <var:Y> \times <var:V> \times <var:b> \times <var:p> \times <var:s> \times <var:f> = <nat:115315200> $ . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:nine-composite> ( <var:k> : nat ) := exists <var:R> <var:b> <var:V> <var:J> <var:Y> <var:f> <var:p> <var:I> <var:s> : nat , ( <var:p> * <var:Y> * <var:J> * <var:R> * <var:f> * <var:b> * <var:I> * <var:s> * <var:V> = <var:k> ) /\ ( <var:R> > <nat:1> ) /\ ( <var:b> > <nat:1> ) /\ ( <var:V> > <nat:1> ) /\ ( <var:J> > <nat:1> ) /\ ( <var:Y> > <nat:1> ) /\ ( <var:f> > <nat:1> ) /\ ( <var:p> > <nat:1> ) /\ ( <var:I> > <nat:1> ) /\ ( <var:s> > <nat:1> ) . Theorem <genP:1> : <def:nine-composite> <nat:115315200> . Proof . unfold <def:nine-composite> . exists <nat:12> . exists <nat:8> . exists <nat:11> . exists <nat:13> . exists <nat:7> . exists <nat:4> . exists <nat:5> . exists <nat:6> . exists <nat:10> . assert ( <genH> : <nat:12> > <nat:1> ) . { lia . } assert ( <genH> : <nat:6> > <nat:1> ) . { lia . } assert ( <genH> : <nat:13> > <nat:1> ) . { lia . } assert ( <genH> : <nat:5> > <nat:1> ) . { lia . } assert ( <genH> : <nat:7> > <nat:1> ) . { lia . } assert ( <genH> : <nat:11> > <nat:1> ) . { lia . } assert ( <genH> : <nat:4> > <nat:1> ) . { lia . } assert ( <genH> : <nat:8> > <nat:1> ) . { lia . } assert ( <genH> : <nat:10> > <nat:1> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 