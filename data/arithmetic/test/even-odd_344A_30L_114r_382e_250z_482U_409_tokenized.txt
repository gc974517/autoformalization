\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:482> \times <var:U> + <var:A> \times <nat:344> + <var:e> \times <nat:382> + <nat:409> + <nat:30> \times <var:L> + <nat:250> \times <var:z> + <var:r> \times <nat:114> $ is odd . \end{theorem} \begin{proof} Observe that the summation $ <nat:382> \times <var:e> + <var:z> \times <nat:250> + <var:r> \times <nat:114> + <nat:409> + <nat:344> \times <var:A> + <var:L> \times <nat:30> + <nat:482> \times <var:U> $ is clearly odd as a consequence that the summation $ <nat:344> \cdot <var:A> + <nat:30> \cdot <var:L> + <nat:114> \cdot <var:r> + <nat:382> \cdot <var:e> + <nat:250> \cdot <var:z> + <nat:482> \cdot <var:U> $ is obviously even . Take note that the terms $ <nat:114> \times <var:r> $ and $ <nat:382> \times <var:e> $ are known to be even as a consequence that multiplying between an even natural with a whole number is guaranteed to be an even positive integer . On top of this , the product $ <var:z> \times <nat:250> $ is known as even . The products $ <nat:344> \times <var:A> $ plus $ <nat:482> \times <var:U> $ are known to be even natural numbers . The product $ <nat:30> \times <var:L> $ is clearly an even number from the fact the multiplication of an even number in $ \mathbb{Z}^+ $ with a whole number will be an even number in $ \mathbb{Z}^+ $ . From the fact the totaling of an even integer and an even element of $ \mathbb{Z}^+ $ is even , and moreover from the knowledge taking the product of even numbers in $ \mathbb{N} $ and a element of $ \mathbb{Z}^+ $ is guaranteed to be even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:U> <var:A> <var:e> <var:L> <var:z> <var:r> : nat , Nat . odd ( <nat:482> * <var:U> + <nat:344> * <var:A> + <nat:382> * <var:e> + <nat:30> * <var:L> + <nat:250> * <var:z> + <nat:114> * <var:r> + <nat:409> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:114> * <var:r> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:382> * <var:e> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:250> * <var:z> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:344> * <var:A> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:482> * <var:U> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:30> * <var:L> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:482> * <var:U> + <nat:344> * <var:A> + <nat:382> * <var:e> + <nat:30> * <var:L> + <nat:250> * <var:z> + <nat:114> * <var:r> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . auto . Qed . 