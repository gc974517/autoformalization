\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Allow $ <var:x> $ , $ <var:W> $ , $ <var:b> $ , $ <var:s> $ , $ <var:i> $ , $ <var:P> $ , $ <var:l> $ , $ <var:d> $ , $ <var:u> \in \mathbb{N} $ such that $ <var:x> $ , $ <var:P> $ , $ <var:d> $ , $ <var:b> $ , $ <var:i> $ , $ <var:u> $ , $ <var:l> $ , $ <var:W> $ , $ <var:s> $ larger than <nat:1> plus satisfying the condition that the whole number <nat:10644480> is the product of numbers $ <var:x> $ , $ <var:W> $ , $ <var:b> $ , $ <var:s> $ , $ <var:i> $ , $ <var:P> $ , $ <var:l> $ , $ <var:d> $ and $ <var:u> \in \mathbb{Z}^+ $ . \end{theorem} \begin{proof} Note that $ <var:l> \cdot <var:i> \cdot <var:x> \cdot <var:P> \cdot <var:u> \cdot <var:W> \cdot <var:d> \cdot <var:b> \cdot <var:s> = <nat:10644480> $ shows $ <var:u> = <nat:8> $ , $ <var:b> = <nat:12> $ , $ <var:x> = <nat:3> $ , $ <var:l> = <nat:4> $ , $ <var:d> = <nat:2> $ , $ <var:W> = <nat:10> $ , $ <var:s> = <nat:6> $ , $ <var:i> = <nat:11> $ , $ <var:P> = <nat:7> $ . Plus notice that $ <nat:4> $ , $ <nat:7> $ , $ <nat:6> $ , $ <nat:3> $ , $ <nat:10> $ , $ <nat:8> $ , $ <nat:2> $ , $ <nat:11> $ , and $ <nat:12> > <nat:1> $ . This produces our theory holds . \end{proof} \end{document} 
~
Require Import Lia . Theorem <genP:1> : exists <var:x> <var:W> <var:b> <var:s> <var:i> <var:P> <var:l> <var:d> <var:u> : nat , ( <var:x> > <nat:1> ) /\ ( <var:P> > <nat:1> ) /\ ( <var:d> > <nat:1> ) /\ ( <var:b> > <nat:1> ) /\ ( <var:i> > <nat:1> ) /\ ( <var:u> > <nat:1> ) /\ ( <var:l> > <nat:1> ) /\ ( <var:W> > <nat:1> ) /\ ( <var:s> > <nat:1> ) /\ ( <nat:10644480> = <var:x> * <var:W> * <var:b> * <var:s> * <var:i> * <var:P> * <var:l> * <var:d> * <var:u> ) . Proof . exists <nat:3> . exists <nat:10> . exists <nat:12> . exists <nat:6> . exists <nat:11> . exists <nat:7> . exists <nat:4> . exists <nat:2> . exists <nat:8> . assert ( <genH> : <nat:4> > <nat:1> ) . { lia . } assert ( <genH> : <nat:7> > <nat:1> ) . { lia . } assert ( <genH> : <nat:6> > <nat:1> ) . { lia . } assert ( <genH> : <nat:3> > <nat:1> ) . { lia . } assert ( <genH> : <nat:10> > <nat:1> ) . { lia . } assert ( <genH> : <nat:8> > <nat:1> ) . { lia . } assert ( <genH> : <nat:2> > <nat:1> ) . { lia . } assert ( <genH> : <nat:11> > <nat:1> ) . { lia . } assert ( <genH> : <nat:12> > <nat:1> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 