\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Claim that $ <var:S> $ is a <def:ten-composite> positive integer given that there exist some integers $ <var:l> $ , $ <var:m> $ , $ <var:k> $ , $ <var:q> $ , $ <var:t> $ , $ <var:r> $ , $ <var:J> $ , $ <var:T> $ , $ <var:o> $ , $ <var:Z> $ so that $ <var:k> \cdot <var:T> \cdot <var:q> \cdot <var:t> \cdot <var:r> \cdot <var:J> \cdot <var:l> \cdot <var:Z> \cdot <var:m> \cdot <var:o> = <var:S> $ given some integer $ <var:S> $ plus satisfying the condition that $ <var:T> $ , $ <var:o> $ , $ <var:k> $ , $ <var:r> $ , $ <var:J> $ , $ <var:Z> $ , $ <var:q> $ , $ <var:l> $ , $ <var:m> $ , $ <var:t> \geq <nat:2> $ . Thus the whole number <nat:62899200> is a <def:ten-composite> whole number . \end{theorem} \begin{proof} Remember a <def:ten-composite> is the product of natural numbers $ <var:T> $ , $ <var:Z> $ , $ <var:l> $ , $ <var:o> $ , $ <var:k> $ , $ <var:t> $ , $ <var:m> $ , $ <var:J> $ , $ <var:q> $ , $ <var:r> $ more than or equal to <nat:2> . Assume $ <var:l> = <nat:13> $ , $ <var:t> = <nat:5> $ , $ <var:m> = <nat:8> $ , $ <var:J> = <nat:10> $ , $ <var:Z> = <nat:4> $ , $ <var:T> = <nat:6> $ , $ <var:r> = <nat:3> $ , $ <var:o> = <nat:7> $ , $ <var:k> = <nat:2> $ and $ <var:q> = <nat:12> $ . We verify the thesis is valid on account of $ <var:l> = <nat:13> $ , $ <var:Z> = <nat:4> $ , $ <var:o> = <nat:7> $ , $ <var:k> = <nat:2> $ , $ <var:m> = <nat:8> $ , $ <var:q> = <nat:12> $ , $ <var:J> = <nat:10> $ , $ <var:T> = <nat:6> $ , $ <var:t> = <nat:5> $ and $ <var:r> = <nat:3> $ are larger than or equivalent to <nat:2> . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:ten-composite> ( <var:S> : nat ) := exists <var:l> <var:m> <var:k> <var:q> <var:t> <var:r> <var:J> <var:T> <var:o> <var:Z> : nat , ( <var:k> * <var:T> * <var:q> * <var:t> * <var:r> * <var:J> * <var:l> * <var:Z> * <var:m> * <var:o> = <var:S> ) /\ ( <var:T> >= <nat:2> ) /\ ( <var:o> >= <nat:2> ) /\ ( <var:k> >= <nat:2> ) /\ ( <var:r> >= <nat:2> ) /\ ( <var:J> >= <nat:2> ) /\ ( <var:Z> >= <nat:2> ) /\ ( <var:q> >= <nat:2> ) /\ ( <var:l> >= <nat:2> ) /\ ( <var:m> >= <nat:2> ) /\ ( <var:t> >= <nat:2> ) . Theorem <genP:1> : <def:ten-composite> <nat:62899200> . Proof . unfold <def:ten-composite> . exists <nat:13> . exists <nat:8> . exists <nat:2> . exists <nat:12> . exists <nat:5> . exists <nat:3> . exists <nat:10> . exists <nat:6> . exists <nat:7> . exists <nat:4> . assert ( <genH> : <nat:13> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:4> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:7> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:2> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:8> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:12> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:10> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:6> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:5> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:3> >= <nat:2> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 