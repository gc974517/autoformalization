\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:u> \times <nat:282> + <var:L> \times <nat:312> + <var:s> \times <nat:472> + <nat:352> \times <var:Y> + <nat:173> + <var:e> \times <nat:236> + <var:a> \times <nat:440> $ is guaranteed to be odd . \end{theorem} \begin{proof} This claim is proven as a consequence that $ <var:a> <nat:440> + <nat:352> <var:Y> + <nat:282> <var:u> + <var:L> <nat:312> + <nat:472> <var:s> + <nat:236> <var:e> $ is even . Remember the products $ <var:e> \times <nat:236> $ , $ <var:L> \times <nat:312> $ , $ <nat:472> \times <var:s> $ , $ <var:a> \times <nat:440> $ , and $ <var:Y> \times <nat:352> $ must be even . Notice that the product $ <var:u> \times <nat:282> $ is known to be an even integer . It can be verified that $ <nat:173> + <var:a> <nat:440> + <nat:312> <var:L> + <var:Y> <nat:352> + <var:s> <nat:472> + <nat:282> <var:u> + <var:e> <nat:236> $ will be odd . Remember that $ <nat:173> $ is known to be odd . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:u> <var:L> <var:s> <var:Y> <var:e> <var:a> : nat , Nat . odd ( <nat:282> * <var:u> + <nat:312> * <var:L> + <nat:472> * <var:s> + <nat:352> * <var:Y> + <nat:236> * <var:e> + <nat:440> * <var:a> + <nat:173> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:236> * <var:e> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:312> * <var:L> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:472> * <var:s> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:440> * <var:a> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:352> * <var:Y> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:282> * <var:u> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:282> * <var:u> + <nat:312> * <var:L> + <nat:472> * <var:s> + <nat:352> * <var:Y> + <nat:236> * <var:e> + <nat:440> * <var:a> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } assert ( <genH> : Nat . odd <nat:173> = true ) . { auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . rewrite <genH> . auto . Qed . 