\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:204> * <var:A> + <var:j> * <nat:120> + <nat:292> * <var:n> + <nat:156> * <var:Y> + <nat:168> * <var:X> + <nat:200> * <var:q> + <nat:63> + <nat:202> * <var:W> + <var:C> * <nat:48> $ is guaranteed to be odd taking every natural terms $ <var:C> $ , $ <var:q> $ , $ <var:X> $ , $ <var:A> $ , $ <var:Y> $ , $ <var:j> $ , $ <var:W> $ , and $ <var:n> $ . \end{theorem} \begin{proof} It can be verified that that the formula $ <var:q> \times <nat:200> + <nat:63> + <var:X> \times <nat:168> + <var:n> \times <nat:292> + <nat:202> \times <var:W> + <var:Y> \times <nat:156> + <nat:48> \times <var:C> + <nat:120> \times <var:j> + <nat:204> \times <var:A> $ is guaranteed to be odd . Take note that the product of an even whole number and any whole number must be by definition an even natural . Take note $ <nat:63> $ is obviously odd . Notice the positive integers $ <nat:156> $ , $ <nat:48> $ , $ <nat:120> $ , $ <nat:168> $ , $ <nat:204> $ , in addition to $ <nat:292> $ are guaranteed to be even The whole number $ <nat:202> $ is known to be an even element of $ \mathbb{N} $ Building on , the coefficient $ <nat:200> $ is known as an even element of $ \mathbb{Z}^+ $ \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:C> <var:q> <var:X> <var:A> <var:Y> <var:j> <var:W> <var:n> : nat , Nat . odd ( <nat:204> * <var:A> + <nat:120> * <var:j> + <nat:292> * <var:n> + <nat:156> * <var:Y> + <nat:168> * <var:X> + <nat:200> * <var:q> + <nat:202> * <var:W> + <nat:48> * <var:C> + <nat:63> ) = true . Proof . intros . rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . repeat rewrite Nat . even_mul . assert ( <genH> : Nat . odd <nat:63> = true ) . { auto . } assert ( <genH> : Nat . even <nat:156> = true ) . { auto . } assert ( <genH> : Nat . even <nat:48> = true ) . { auto . } assert ( <genH> : Nat . even <nat:120> = true ) . { auto . } assert ( <genH> : Nat . even <nat:168> = true ) . { auto . } assert ( <genH> : Nat . even <nat:204> = true ) . { auto . } assert ( <genH> : Nat . even <nat:292> = true ) . { auto . } assert ( <genH> : Nat . even <nat:202> = true ) . { auto . } assert ( <genH> : Nat . even <nat:200> = true ) . { auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 