\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:E> * <nat:440> + <nat:334> * <var:A> + <var:l> * <nat:494> + <nat:360> * <var:u> + <var:L> * <nat:234> + <nat:87> + <var:m> * <nat:374> $ will be odd taking every whole numbers $ <var:m> $ , $ <var:E> $ , $ <var:l> $ , $ <var:L> $ , $ <var:u> $ , and $ <var:A> $ . \end{theorem} \begin{proof} We prove this result must be true . Recall $ <nat:87> $ is trivially an odd number . Notice that the product $ <var:l> <nat:494> $ is clearly even from the fact multiplying of an even number in $ \mathbb{N} $ and a element of $ \mathbb{Z}^+ $ must be an even number in $ \mathbb{N} $ . Take note the products $ <nat:234> <var:L> $ , $ <nat:440> <var:E> $ , and $ <var:u> <nat:360> $ will be even numbers from the fact the multiplication between an even element of $ \mathbb{Z}^+ $ and a natural will be an even whole number . Adding on , the product $ <var:m> <nat:374> $ is obviously an even element of $ \mathbb{Z}^+ $ . This fact is true by reason that multiplying of an even number in $ \mathbb{N} $ and any number in $ \mathbb{N} $ is guaranteed to be even . Remember the pair $ <nat:334> <var:A> $ is obviously even . This fact is true as a consequence that the product between an even positive integer and some natural number is guaranteed to be even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:m> <var:E> <var:l> <var:L> <var:u> <var:A> : nat , Nat . odd ( <nat:440> * <var:E> + <nat:334> * <var:A> + <nat:494> * <var:l> + <nat:360> * <var:u> + <nat:234> * <var:L> + <nat:374> * <var:m> + <nat:87> ) = true . Proof . intros . assert ( <genH> : Nat . odd <nat:87> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:494> * <var:l> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:234> * <var:L> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:440> * <var:E> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:360> * <var:u> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:374> * <var:m> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:334> * <var:A> ) = true ) . { rewrite Nat . even_mul . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 