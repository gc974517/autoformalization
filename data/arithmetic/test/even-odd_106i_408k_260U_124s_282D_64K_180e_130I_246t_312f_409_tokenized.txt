\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:409> + <nat:106> \times <var:i> + <var:k> \times <nat:408> + <nat:260> \times <var:U> + <nat:124> \times <var:s> + <var:D> \times <nat:282> + <nat:64> \times <var:K> + <var:e> \times <nat:180> + <nat:130> \times <var:I> + <var:t> \times <nat:246> + <var:f> \times <nat:312> $ must be odd with any positive integers $ <var:e> $ , $ <var:t> $ , $ <var:i> $ , $ <var:I> $ , $ <var:U> $ , $ <var:K> $ , $ <var:D> $ , $ <var:s> $ , $ <var:k> $ , and $ <var:f> $ . \end{theorem} \begin{proof} The adding between an even integer and an odd whole number is odd . Notice $ <nat:409> $ is an odd positive integer . Observe the leading terms $ <nat:180> $ , $ <nat:312> $ , $ <nat:130> $ , $ <nat:106> $ , $ <nat:282> $ , $ <nat:124> $ , as well as $ <nat:260> $ will be even The integer $ <nat:408> $ is known to be an even natural number Likewise , notice the coefficient $ <nat:246> $ is obviously even The positive integer $ <nat:64> $ is an even whole number \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:e> <var:t> <var:i> <var:I> <var:U> <var:K> <var:D> <var:s> <var:k> <var:f> : nat , Nat . odd ( <nat:106> * <var:i> + <nat:408> * <var:k> + <nat:260> * <var:U> + <nat:124> * <var:s> + <nat:282> * <var:D> + <nat:64> * <var:K> + <nat:180> * <var:e> + <nat:130> * <var:I> + <nat:246> * <var:t> + <nat:312> * <var:f> + <nat:409> ) = true . Proof . intros . rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . assert ( <genH> : Nat . odd <nat:409> = true ) . { auto . } assert ( <genH> : Nat . even <nat:180> = true ) . { auto . } assert ( <genH> : Nat . even <nat:312> = true ) . { auto . } assert ( <genH> : Nat . even <nat:130> = true ) . { auto . } assert ( <genH> : Nat . even <nat:106> = true ) . { auto . } assert ( <genH> : Nat . even <nat:282> = true ) . { auto . } assert ( <genH> : Nat . even <nat:124> = true ) . { auto . } assert ( <genH> : Nat . even <nat:260> = true ) . { auto . } assert ( <genH> : Nat . even <nat:408> = true ) . { auto . } assert ( <genH> : Nat . even <nat:246> = true ) . { auto . } assert ( <genH> : Nat . even <nat:64> = true ) . { auto . } repeat rewrite Nat . even_mul . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 