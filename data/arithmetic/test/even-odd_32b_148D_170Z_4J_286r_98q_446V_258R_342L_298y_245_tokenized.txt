\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:342> * <var:L> + <nat:446> * <var:V> + <nat:298> * <var:y> + <var:R> * <nat:258> + <nat:148> * <var:D> + <var:J> * <nat:4> + <nat:245> + <var:Z> * <nat:170> + <nat:32> * <var:b> + <var:r> * <nat:286> + <nat:98> * <var:q> $ must be odd assuming unknowns $ <var:q> $ , $ <var:V> $ , $ <var:D> $ , $ <var:Z> $ , $ <var:r> $ , $ <var:L> $ , $ <var:J> $ , $ <var:R> $ , $ <var:b> $ , and $ <var:y> $ . \end{theorem} \begin{proof} It can be verified that that $ <nat:32> \cdot <var:b> + <var:D> \cdot <nat:148> + <nat:170> \cdot <var:Z> + <var:J> \cdot <nat:4> + <nat:286> \cdot <var:r> + <var:q> \cdot <nat:98> + <var:V> \cdot <nat:446> + <var:R> \cdot <nat:258> + <nat:342> \cdot <var:L> + <nat:298> \cdot <var:y> $ is clearly even . We know multiplying between an even positive integer with an arbitrary element of $ \mathbb{Z}^+ $ is guaranteed to be an even element of $ \mathbb{Z}^+ $ . Recall the positive integers $ <nat:4> $ , $ <nat:286> $ , $ <nat:170> $ , $ <nat:298> $ , $ <nat:258> $ , $ <nat:342> $ , as well as $ <nat:98> $ must be even Take note that the leading terms $ <nat:446> $ and also $ <nat:32> $ are trivially even integers Adding on , the coefficient $ <nat:148> $ is obviously an even natural number \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:q> <var:V> <var:D> <var:Z> <var:r> <var:L> <var:J> <var:R> <var:b> <var:y> : nat , Nat . odd ( <nat:342> * <var:L> + <nat:446> * <var:V> + <nat:298> * <var:y> + <nat:258> * <var:R> + <nat:148> * <var:D> + <nat:4> * <var:J> + <nat:170> * <var:Z> + <nat:32> * <var:b> + <nat:286> * <var:r> + <nat:98> * <var:q> + <nat:245> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:4> = true ) . { auto . } assert ( <genH> : Nat . even <nat:286> = true ) . { auto . } assert ( <genH> : Nat . even <nat:170> = true ) . { auto . } assert ( <genH> : Nat . even <nat:298> = true ) . { auto . } assert ( <genH> : Nat . even <nat:258> = true ) . { auto . } assert ( <genH> : Nat . even <nat:342> = true ) . { auto . } assert ( <genH> : Nat . even <nat:98> = true ) . { auto . } assert ( <genH> : Nat . even <nat:446> = true ) . { auto . } assert ( <genH> : Nat . even <nat:32> = true ) . { auto . } assert ( <genH> : Nat . even <nat:148> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:342> * <var:L> + <nat:446> * <var:V> + <nat:298> * <var:y> + <nat:258> * <var:R> + <nat:148> * <var:D> + <nat:4> * <var:J> + <nat:170> * <var:Z> + <nat:32> * <var:b> + <nat:286> * <var:r> + <nat:98> * <var:q> ) = true ) . { repeat rewrite Nat . even_add . repeat rewrite Nat . even_mul . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . auto . Qed . 