\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:4> * <var:w> + <var:E> * <nat:70> + <nat:223> + <nat:232> * <var:Q> + <nat:16> * <var:S> + <nat:78> * <var:n> $ is guaranteed to be odd . \end{theorem} \begin{proof} Recall the totaling between an even whole number and an odd number must be an odd number in $ \mathbb{N} $ . Our lemma is proven from the fact $ <nat:16> \cdot <var:S> + <var:E> \cdot <nat:70> + <nat:4> \cdot <var:w> + <nat:232> \cdot <var:Q> + <nat:78> \cdot <var:n> $ is trivially even , because the addition of an even number in $ \mathbb{N} $ with an even number in $ \mathbb{Z}^+ $ is itself an even number . Remember the terms $ <nat:4> \times <var:w> $ , $ <nat:78> \times <var:n> $ , and moreover $ <var:E> \times <nat:70> $ are even whole numbers . Take note the product $ <var:Q> \times <nat:232> $ is clearly an even number in $ \mathbb{N} $ . What's more , the product $ <nat:16> \times <var:S> $ is even by reason that the product of an even element of $ \mathbb{Z}^+ $ with any positive integer must be obviously an even whole number . additionally by reason that the multiplication between even integers with any number in $ \mathbb{Z}^+ $ is an even natural number the sum $ <nat:70> \times <var:E> + <var:n> \times <nat:78> + <nat:4> \times <var:w> + <nat:16> \times <var:S> + <var:Q> \times <nat:232> $ will be in itself even . We justify the main result is proven . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:w> <var:E> <var:Q> <var:S> <var:n> : nat , Nat . odd ( <nat:4> * <var:w> + <nat:70> * <var:E> + <nat:232> * <var:Q> + <nat:16> * <var:S> + <nat:78> * <var:n> + <nat:223> ) = true . Proof . intros . rewrite Nat . odd_add . assert ( <genH> : Nat . even ( <nat:4> * <var:w> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:78> * <var:n> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:70> * <var:E> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:232> * <var:Q> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:16> * <var:S> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:4> * <var:w> + <nat:70> * <var:E> + <nat:232> * <var:Q> + <nat:16> * <var:S> + <nat:78> * <var:n> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite <- Nat . negb_even . rewrite <genH> . auto . Qed . 