\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:392> <var:J> + <var:G> <nat:302> + <var:L> <nat:442> + <var:C> <nat:222> + <var:A> <nat:278> + <nat:280> <var:m> + <nat:206> <var:p> + <nat:62> <var:y> + <nat:193> $ will be odd . \end{theorem} \begin{proof} We know that $ <nat:193> $ is trivially an odd number in $ \mathbb{N} $ . We prove our claim is proven . See the term $ <var:G> <nat:302> $ is an even natural number . The products $ <nat:278> <var:A> $ , $ <nat:442> <var:L> $ , as well as $ <nat:392> <var:J> $ are trivially even . Further , the terms $ <var:p> <nat:206> $ and moreover $ <var:m> <nat:280> $ are obviously even whole numbers . This claim must be true by reason that taking the product of an even positive integer with some number will be fundamentally an even positive integer . On top of this , $ <var:C> <nat:222> $ is clearly even . This fact must be true from the knowledge multiplying between an even number in $ \mathbb{N} $ with a natural number must be by itself an even whole number . Furthermore , notice the pair $ <nat:62> <var:y> $ is trivially an even natural number from the knowledge the multiplication of an even natural and an arbitrary number in $ \mathbb{N} $ is even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:J> <var:G> <var:L> <var:C> <var:A> <var:m> <var:p> <var:y> : nat , Nat . odd ( <nat:392> * <var:J> + <nat:302> * <var:G> + <nat:442> * <var:L> + <nat:222> * <var:C> + <nat:278> * <var:A> + <nat:280> * <var:m> + <nat:206> * <var:p> + <nat:62> * <var:y> + <nat:193> ) = true . Proof . intros . assert ( <genH> : Nat . odd <nat:193> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:302> * <var:G> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:278> * <var:A> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:442> * <var:L> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:392> * <var:J> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:206> * <var:p> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:280> * <var:m> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:222> * <var:C> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:62> * <var:y> ) = true ) . { rewrite Nat . even_mul . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 