\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:341> + <nat:72> \times <var:P> + <nat:102> \times <var:c> + <var:N> \times <nat:284> + <nat:318> \times <var:S> + <nat:430> \times <var:Q> + <nat:354> \times <var:t> $ will be odd for any terms $ <var:S> $ , $ <var:P> $ , $ <var:Q> $ , $ <var:t> $ , $ <var:c> $ , and $ <var:N> $ . \end{theorem} \begin{proof} $ <var:P> \times <nat:72> + <var:t> \times <nat:354> + <nat:102> \times <var:c> + <nat:284> \times <var:N> + <nat:318> \times <var:S> + <var:Q> \times <nat:430> $ is known as even , as a consequence that the summation between even elements of $ \mathbb{Z}^+ $ successively and an even number in $ \mathbb{N} $ is guaranteed to be even . The product $ <var:Q> * <nat:430> $ is obviously even . In addition , observe the product $ <nat:354> * <var:t> $ is trivially even since multiplying between an even positive integer and a element of $ \mathbb{Z}^+ $ is guaranteed to be even . The pair $ <nat:102> * <var:c> $ is even because taking the product between an even element of $ \mathbb{N} $ and a natural will be an even element of $ \mathbb{N} $ . The pairs $ <var:N> * <nat:284> $ and moreover $ <var:S> * <nat:318> $ must be even elements of $ \mathbb{Z}^+ $ because the product between an even natural and an arbitrary natural is guaranteed to be even . See that $ <var:P> * <nat:72> $ is obviously even . This fact holds because the product between an even whole number and a natural number will be even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:S> <var:P> <var:Q> <var:t> <var:c> <var:N> : nat , Nat . odd ( <nat:72> * <var:P> + <nat:102> * <var:c> + <nat:284> * <var:N> + <nat:318> * <var:S> + <nat:430> * <var:Q> + <nat:354> * <var:t> + <nat:341> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:430> * <var:Q> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:354> * <var:t> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:102> * <var:c> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:284> * <var:N> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:318> * <var:S> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:72> * <var:P> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:72> * <var:P> + <nat:102> * <var:c> + <nat:284> * <var:N> + <nat:318> * <var:S> + <nat:430> * <var:Q> + <nat:354> * <var:t> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . auto . Qed . 