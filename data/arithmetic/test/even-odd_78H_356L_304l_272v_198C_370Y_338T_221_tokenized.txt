\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:304> \cdot <var:l> + <var:T> \cdot <nat:338> + <var:C> \cdot <nat:198> + <nat:78> \cdot <var:H> + <nat:221> + <nat:370> \cdot <var:Y> + <nat:356> \cdot <var:L> + <var:v> \cdot <nat:272> $ is guaranteed to be odd assuming some whole numbers $ <var:C> $ , $ <var:L> $ , $ <var:v> $ , $ <var:H> $ , $ <var:l> $ , $ <var:T> $ , and $ <var:Y> $ . \end{theorem} \begin{proof} Observe that $ <nat:221> $ is guaranteed to be an odd whole number . The totaling between even whole numbers with an odd number must be odd . The summation $ <nat:78> * <var:H> + <var:v> * <nat:272> + <var:L> * <nat:356> + <var:Y> * <nat:370> + <var:C> * <nat:198> + <nat:304> * <var:l> + <nat:338> * <var:T> $ is known as even . In addition , the integers $ <nat:78> $ , $ <nat:272> $ , $ <nat:356> $ , $ <nat:370> $ , $ <nat:198> $ , $ <nat:304> $ , as well as $ <nat:338> $ are trivially even . Accordingly , the terms $ <nat:78> <var:H> $ , $ <var:v> <nat:272> $ , $ <var:L> <nat:356> $ , $ <var:Y> <nat:370> $ , $ <var:C> <nat:198> $ , $ <nat:304> <var:l> $ , plus $ <nat:338> <var:T> $ must be even too . The expression $ <var:H> \cdot <nat:78> + <nat:356> \cdot <var:L> + <nat:304> \cdot <var:l> + <nat:272> \cdot <var:v> + <var:C> \cdot <nat:198> + <var:Y> \cdot <nat:370> + <var:T> \cdot <nat:338> $ is guaranteed to be even as a consequence that the product of even naturals and an arbitrary positive integer must be itself an even element of $ \mathbb{Z}^+ $ . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:C> <var:L> <var:v> <var:H> <var:l> <var:T> <var:Y> : nat , Nat . odd ( <nat:304> * <var:l> + <nat:338> * <var:T> + <nat:198> * <var:C> + <nat:78> * <var:H> + <nat:370> * <var:Y> + <nat:356> * <var:L> + <nat:272> * <var:v> + <nat:221> ) = true . Proof . intros . assert ( <genH> : Nat . odd <nat:221> = true ) . { auto . } rewrite Nat . odd_add . assert ( <genH> : Nat . even <nat:78> = true ) . { auto . } assert ( <genH> : Nat . even <nat:272> = true ) . { auto . } assert ( <genH> : Nat . even <nat:356> = true ) . { auto . } assert ( <genH> : Nat . even <nat:370> = true ) . { auto . } assert ( <genH> : Nat . even <nat:198> = true ) . { auto . } assert ( <genH> : Nat . even <nat:304> = true ) . { auto . } assert ( <genH> : Nat . even <nat:338> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:78> * <var:H> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:272> * <var:v> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:356> * <var:L> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:370> * <var:Y> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:198> * <var:C> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:304> * <var:l> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:338> * <var:T> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:304> * <var:l> + <nat:338> * <var:T> + <nat:198> * <var:C> + <nat:78> * <var:H> + <nat:370> * <var:Y> + <nat:356> * <var:L> + <nat:272> * <var:v> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite <- Nat . negb_even . rewrite <genH> . rewrite <genH> . auto . Qed . 