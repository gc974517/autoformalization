\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:88> \cdot <var:O> + <var:G> \cdot <nat:350> + <nat:414> \cdot <var:C> + <var:H> \cdot <nat:476> + <nat:18> + <var:l> \cdot <nat:458> + <nat:100> \cdot <var:K> + <nat:494> \cdot <var:v> + <var:z> \cdot <nat:82> + <nat:478> \cdot <var:D> + <nat:114> \cdot <var:N> + <nat:370> \cdot <var:e> $ is guaranteed to be even with any $ <var:l> $ , $ <var:v> $ , $ <var:e> $ , $ <var:D> $ , $ <var:G> $ , $ <var:z> $ , $ <var:H> $ , $ <var:C> $ , $ <var:O> $ , $ <var:K> $ , and $ <var:N> $ . \end{theorem} \begin{proof} In addition to this , remember the natural numbers $ <nat:88> $ , $ <nat:350> $ , $ <nat:414> $ , $ <nat:476> $ , $ <nat:458> $ , $ <nat:100> $ , $ <nat:494> $ , $ <nat:82> $ , $ <nat:478> $ , $ <nat:114> $ , plus $ <nat:370> $ must be even positive integers . As a consequence , the terms $ <nat:88> \times <var:O> $ , $ <nat:350> \times <var:G> $ , $ <var:C> \times <nat:414> $ , $ <var:H> \times <nat:476> $ , $ <nat:458> \times <var:l> $ , $ <nat:100> \times <var:K> $ , $ <nat:494> \times <var:v> $ , $ <var:z> \times <nat:82> $ , $ <var:D> \times <nat:478> $ , $ <nat:114> \times <var:N> $ , and moreover $ <nat:370> \times <var:e> $ will be even in addition . We prove $ <nat:494> \times <var:v> + <var:G> \times <nat:350> + <nat:458> \times <var:l> + <nat:478> \times <var:D> + <nat:18> + <nat:114> \times <var:N> + <nat:82> \times <var:z> + <var:e> \times <nat:370> + <nat:100> \times <var:K> + <nat:476> \times <var:H> + <nat:88> \times <var:O> + <nat:414> \times <var:C> $ is even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:l> <var:v> <var:e> <var:D> <var:G> <var:z> <var:H> <var:C> <var:O> <var:K> <var:N> : nat , Nat . even ( <nat:88> * <var:O> + <nat:350> * <var:G> + <nat:414> * <var:C> + <nat:476> * <var:H> + <nat:458> * <var:l> + <nat:100> * <var:K> + <nat:494> * <var:v> + <nat:82> * <var:z> + <nat:478> * <var:D> + <nat:114> * <var:N> + <nat:370> * <var:e> + <nat:18> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:88> = true ) . { auto . } assert ( <genH> : Nat . even <nat:350> = true ) . { auto . } assert ( <genH> : Nat . even <nat:414> = true ) . { auto . } assert ( <genH> : Nat . even <nat:476> = true ) . { auto . } assert ( <genH> : Nat . even <nat:458> = true ) . { auto . } assert ( <genH> : Nat . even <nat:100> = true ) . { auto . } assert ( <genH> : Nat . even <nat:494> = true ) . { auto . } assert ( <genH> : Nat . even <nat:82> = true ) . { auto . } assert ( <genH> : Nat . even <nat:478> = true ) . { auto . } assert ( <genH> : Nat . even <nat:114> = true ) . { auto . } assert ( <genH> : Nat . even <nat:370> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:88> * <var:O> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:350> * <var:G> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:414> * <var:C> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:476> * <var:H> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:458> * <var:l> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:100> * <var:K> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:494> * <var:v> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:82> * <var:z> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:478> * <var:D> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:114> * <var:N> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:370> * <var:e> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 