\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:104> + <nat:22> \cdot <var:l> + <var:q> \cdot <nat:188> + <var:B> \cdot <nat:406> + <var:f> \cdot <nat:204> + <nat:66> \cdot <var:S> + <nat:74> \cdot <var:e> + <var:J> \cdot <nat:2> + <nat:16> \cdot <var:M> $ is guaranteed to be even . \end{theorem} \begin{proof} The totaling between even positive integers concurrently and an even element of $ \mathbb{Z}^+ $ will be trivially an even positive integer . We check the expression $ <var:B> * <nat:406> + <nat:74> * <var:e> + <nat:204> * <var:f> + <nat:2> * <var:J> + <var:M> * <nat:16> + <var:S> * <nat:66> + <var:q> * <nat:188> + <var:l> * <nat:22> $ is even . Notice that the totaling of even naturals concurrently will be even . Furthermore , the coefficients $ <nat:406> $ , $ <nat:74> $ , $ <nat:204> $ , $ <nat:2> $ , $ <nat:16> $ , $ <nat:66> $ , $ <nat:188> $ , and $ <nat:22> $ are even numbers in $ \mathbb{N} $ . As a consequence , the pairs $ <nat:406> * <var:B> $ , $ <var:e> * <nat:74> $ , $ <var:f> * <nat:204> $ , $ <var:J> * <nat:2> $ , $ <var:M> * <nat:16> $ , $ <nat:66> * <var:S> $ , $ <nat:188> * <var:q> $ , plus $ <var:l> * <nat:22> $ must be even as well . additionally as a consequence that taking the product between even natural numbers with some natural is guaranteed to be an even integer . It can be justified that the proposition is proven . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:l> <var:q> <var:B> <var:f> <var:S> <var:e> <var:J> <var:M> : nat , Nat . even ( <nat:22> * <var:l> + <nat:188> * <var:q> + <nat:406> * <var:B> + <nat:204> * <var:f> + <nat:66> * <var:S> + <nat:74> * <var:e> + <nat:2> * <var:J> + <nat:16> * <var:M> + <nat:104> ) = true . Proof . intros . rewrite Nat . even_add . assert ( <genH> : Nat . even <nat:406> = true ) . { auto . } assert ( <genH> : Nat . even <nat:74> = true ) . { auto . } assert ( <genH> : Nat . even <nat:204> = true ) . { auto . } assert ( <genH> : Nat . even <nat:2> = true ) . { auto . } assert ( <genH> : Nat . even <nat:16> = true ) . { auto . } assert ( <genH> : Nat . even <nat:66> = true ) . { auto . } assert ( <genH> : Nat . even <nat:188> = true ) . { auto . } assert ( <genH> : Nat . even <nat:22> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:406> * <var:B> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:74> * <var:e> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:204> * <var:f> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:2> * <var:J> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:16> * <var:M> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:66> * <var:S> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:188> * <var:q> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:22> * <var:l> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:22> * <var:l> + <nat:188> * <var:q> + <nat:406> * <var:B> + <nat:204> * <var:f> + <nat:66> * <var:S> + <nat:74> * <var:e> + <nat:2> * <var:J> + <nat:16> * <var:M> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite <genH> . auto . Qed . 