\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} For every $ <var:j> $ , $ <var:M> $ , and $ <var:m> \in \mathbb{N} $ the sum $ <var:j> \cdot <nat:254> + <nat:490> \cdot <var:m> + <var:M> \cdot <nat:22> + <nat:325> $ is odd . \end{theorem} \begin{proof} $ <var:j> <nat:254> + <var:M> <nat:22> + <nat:490> <var:m> $ is even . See that the adding of an even whole number with an even element of $ \mathbb{N} $ will be itself an even element of $ \mathbb{Z}^+ $ . Observe that the term $ <nat:22> * <var:M> $ is guaranteed to be an even whole number . This is true since the coefficient $ <nat:22> $ is guaranteed to be even . The coefficient $ <nat:254> $ is trivially even . Consequently , the product $ <var:j> * <nat:254> $ will be even at the same time . See the product $ <nat:490> * <var:m> $ is guaranteed to be an even positive integer . This is proven because multiplying between an even element of $ \mathbb{N} $ with any element of $ \mathbb{N} $ will be itself an even natural . This claim must be true since the natural number $ <nat:490> $ is guaranteed to be even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:j> <var:M> <var:m> : nat , Nat . odd ( <nat:254> * <var:j> + <nat:490> * <var:m> + <nat:22> * <var:M> + <nat:325> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:22> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:22> * <var:M> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:254> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:254> * <var:j> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:490> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:490> * <var:m> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:254> * <var:j> + <nat:490> * <var:m> + <nat:22> * <var:M> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . auto . Qed . 