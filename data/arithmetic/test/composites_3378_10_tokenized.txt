\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} With the condition that we have $ <var:Y> = <var:B> \times <var:d> \times <var:i> \times <var:J> \times <var:D> \times <var:x> \times <var:q> \times <var:U> \times <var:p> \times <var:l> $ with $ <var:Y> \in \mathbb{N} $ as well as such that $ <var:x> $ , $ <var:J> $ , $ <var:q> $ , $ <var:p> $ , $ <var:B> $ , $ <var:D> $ , $ <var:i> $ , $ <var:U> $ , $ <var:l> $ , $ <var:d> \geq <nat:2> $ with some numbers $ <var:d> $ , $ <var:B> $ , $ <var:l> $ , $ <var:J> $ , $ <var:D> $ , $ <var:U> $ , $ <var:i> $ , $ <var:x> $ , $ <var:p> $ , $ <var:q> $ , then take that $ <var:Y> $ is a <def:ten-composite> positive integer . Accordingly $ <nat:70761600> = <var:Y> $ is a <def:ten-composite> number . \end{theorem} \begin{proof} Let $ <var:U> = <nat:10> $ , $ <var:p> = <nat:9> $ , $ <var:B> = <nat:5> $ , $ <var:x> = <nat:7> $ , $ <var:D> = <nat:6> $ , $ <var:i> = <nat:2> $ , $ <var:J> = <nat:12> $ , $ <var:q> = <nat:13> $ , $ <var:d> = <nat:4> $ , $ <var:l> = <nat:3> $ . We justify $ <nat:70761600> = <var:D> \times <var:J> \times <var:d> \times <var:U> \times <var:l> \times <var:q> \times <var:x> \times <var:B> \times <var:p> \times <var:i> $ as well as $ <var:x> $ , $ <var:U> $ , $ <var:J> $ , $ <var:d> $ , $ <var:i> $ , $ <var:D> $ , $ <var:l> $ , $ <var:q> $ , $ <var:p> $ and $ <var:B> > <nat:1> $ . We present <nat:70761600> is <def:ten-composite> on account of $ <var:B> = <nat:5> $ , $ <var:i> = <nat:2> $ , $ <var:d> = <nat:4> $ , $ <var:J> = <nat:12> $ , $ <var:D> = <nat:6> $ , $ <var:l> = <nat:3> $ , $ <var:q> = <nat:13> $ , $ <var:x> = <nat:7> $ , $ <var:U> = <nat:10> $ , and $ <var:p> = <nat:9> $ are larger than <nat:1> . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:ten-composite> ( <var:Y> : nat ) := exists <var:d> <var:B> <var:l> <var:J> <var:D> <var:U> <var:i> <var:x> <var:p> <var:q> : nat , ( <var:Y> = <var:B> * <var:d> * <var:i> * <var:J> * <var:D> * <var:x> * <var:q> * <var:U> * <var:p> * <var:l> ) /\ ( <var:x> >= <nat:2> ) /\ ( <var:J> >= <nat:2> ) /\ ( <var:q> >= <nat:2> ) /\ ( <var:p> >= <nat:2> ) /\ ( <var:B> >= <nat:2> ) /\ ( <var:D> >= <nat:2> ) /\ ( <var:i> >= <nat:2> ) /\ ( <var:U> >= <nat:2> ) /\ ( <var:l> >= <nat:2> ) /\ ( <var:d> >= <nat:2> ) . Theorem <genP:1> : <def:ten-composite> <nat:70761600> . Proof . unfold <def:ten-composite> . exists <nat:4> . exists <nat:5> . exists <nat:3> . exists <nat:12> . exists <nat:6> . exists <nat:10> . exists <nat:2> . exists <nat:7> . exists <nat:9> . exists <nat:13> . assert ( <genH> : <nat:5> > <nat:1> ) . { lia . } assert ( <genH> : <nat:2> > <nat:1> ) . { lia . } assert ( <genH> : <nat:4> > <nat:1> ) . { lia . } assert ( <genH> : <nat:12> > <nat:1> ) . { lia . } assert ( <genH> : <nat:6> > <nat:1> ) . { lia . } assert ( <genH> : <nat:3> > <nat:1> ) . { lia . } assert ( <genH> : <nat:13> > <nat:1> ) . { lia . } assert ( <genH> : <nat:7> > <nat:1> ) . { lia . } assert ( <genH> : <nat:10> > <nat:1> ) . { lia . } assert ( <genH> : <nat:9> > <nat:1> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 