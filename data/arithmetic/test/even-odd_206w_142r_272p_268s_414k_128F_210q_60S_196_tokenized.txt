\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:414> * <var:k> + <var:r> * <nat:142> + <var:w> * <nat:206> + <nat:60> * <var:S> + <nat:210> * <var:q> + <nat:268> * <var:s> + <nat:128> * <var:F> + <nat:272> * <var:p> + <nat:196> $ is guaranteed to be even . \end{theorem} \begin{proof} Take note the pairs $ <var:F> \cdot <nat:128> $ , $ <var:w> \cdot <nat:206> $ , $ <nat:272> \cdot <var:p> $ , $ <var:k> \cdot <nat:414> $ , $ <nat:210> \cdot <var:q> $ , $ <nat:142> \cdot <var:r> $ , and likewise $ <var:s> \cdot <nat:268> $ are even by reason that the multiplication between an even integer and some positive integer must be even . We know that the product $ <nat:60> \cdot <var:S> $ is known to be an even number in $ \mathbb{Z}^+ $ . Take note that $ <nat:196> $ is clearly even . The summing of an even integer and an even integer is even . Thus , the summation $ <nat:206> \cdot <var:w> + <nat:196> + <nat:142> \cdot <var:r> + <nat:272> \cdot <var:p> + <nat:268> \cdot <var:s> + <nat:414> \cdot <var:k> + <var:F> \cdot <nat:128> + <nat:210> \cdot <var:q> + <nat:60> \cdot <var:S> $ must be even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:k> <var:r> <var:w> <var:S> <var:q> <var:s> <var:F> <var:p> : nat , Nat . even ( <nat:414> * <var:k> + <nat:142> * <var:r> + <nat:206> * <var:w> + <nat:60> * <var:S> + <nat:210> * <var:q> + <nat:268> * <var:s> + <nat:128> * <var:F> + <nat:272> * <var:p> + <nat:196> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:128> * <var:F> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:206> * <var:w> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:272> * <var:p> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:414> * <var:k> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:210> * <var:q> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:142> * <var:r> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:268> * <var:s> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:60> * <var:S> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even <nat:196> = true ) . { auto . } repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 