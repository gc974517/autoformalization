\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:142> + <var:g> \times <nat:202> + <nat:468> \times <var:R> + <nat:358> \times <var:z> + <var:O> \times <nat:46> + <nat:380> \times <var:a> $ will be even for some positive integers $ <var:O> $ , $ <var:g> $ , $ <var:R> $ , $ <var:z> $ , and $ <var:a> $ . \end{theorem} \begin{proof} It can be verified that the formula $ <var:g> * <nat:202> + <nat:358> * <var:z> + <nat:142> + <var:a> * <nat:380> + <var:R> * <nat:468> + <var:O> * <nat:46> $ must be even . See that $ <nat:142> $ is obviously an even number in $ \mathbb{N} $ . The claim holds as a consequence that $ <nat:46> <var:O> + <var:R> <nat:468> + <nat:358> <var:z> + <nat:380> <var:a> + <nat:202> <var:g> $ is trivially even . See that the products $ <nat:358> <var:z> $ plus $ <nat:202> <var:g> $ are clearly even . This claim is true by reason that multiplying of an even positive integer with some natural number must be even . This holds because the positive integers $ <nat:358> $ additionally $ <nat:202> $ are obviously . In addition to this , the integers $ <nat:380> $ as well as $ <nat:468> $ are known as even . Thus , the pairs $ <var:a> <nat:380> $ and likewise $ <var:R> <nat:468> $ must be even additionally . On top of this , we know the term $ <nat:46> <var:O> $ is an even integer because the multiplication between an even natural with some number in $ \mathbb{N} $ is guaranteed to be even . This claim must be true from the knowledge the integer $ <nat:46> $ is obviously obviously an even number in $ \mathbb{Z}^+ $ . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:O> <var:g> <var:R> <var:z> <var:a> : nat , Nat . even ( <nat:202> * <var:g> + <nat:468> * <var:R> + <nat:358> * <var:z> + <nat:46> * <var:O> + <nat:380> * <var:a> + <nat:142> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:142> = true ) . { auto . } assert ( <genH> : Nat . even <nat:358> = true ) . { auto . } assert ( <genH> : Nat . even <nat:202> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:358> * <var:z> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:202> * <var:g> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:380> = true ) . { auto . } assert ( <genH> : Nat . even <nat:468> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:380> * <var:a> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:468> * <var:R> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:46> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:46> * <var:O> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:202> * <var:g> + <nat:468> * <var:R> + <nat:358> * <var:z> + <nat:46> * <var:O> + <nat:380> * <var:a> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . auto . Qed . 