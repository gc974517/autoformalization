\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:i> \times <nat:152> + <var:k> \times <nat:494> + <nat:196> \times <var:a> + <nat:164> \times <var:A> + <nat:186> + <var:Z> \times <nat:356> + <var:R> \times <nat:32> $ is guaranteed to be even . \end{theorem} \begin{proof} We verify the summation $ <nat:164> \cdot <var:A> + <var:R> \cdot <nat:32> + <var:i> \cdot <nat:152> + <var:a> \cdot <nat:196> + <var:k> \cdot <nat:494> + <var:Z> \cdot <nat:356> $ is known to be even . In addition to this , the integers $ <nat:164> $ , $ <nat:32> $ , $ <nat:152> $ , $ <nat:196> $ , $ <nat:494> $ , and $ <nat:356> $ must be even . So , the products $ <nat:164> \cdot <var:A> $ , $ <var:R> \cdot <nat:32> $ , $ <var:i> \cdot <nat:152> $ , $ <var:a> \cdot <nat:196> $ , $ <nat:494> \cdot <var:k> $ , plus $ <nat:356> \cdot <var:Z> $ will be even additionally . From the fact multiplying of an even integer with some integer is even our lemma is true . The summation of an even natural and an even number in $ \mathbb{Z}^+ $ will be an even integer . As a consequence , the summation $ <var:i> \cdot <nat:152> + <nat:186> + <var:a> \cdot <nat:196> + <var:R> \cdot <nat:32> + <nat:494> \cdot <var:k> + <nat:164> \cdot <var:A> + <var:Z> \cdot <nat:356> $ will be even . Observe $ <nat:186> $ is guaranteed to be even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:i> <var:k> <var:a> <var:A> <var:Z> <var:R> : nat , Nat . even ( <nat:152> * <var:i> + <nat:494> * <var:k> + <nat:196> * <var:a> + <nat:164> * <var:A> + <nat:356> * <var:Z> + <nat:32> * <var:R> + <nat:186> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:164> = true ) . { auto . } assert ( <genH> : Nat . even <nat:32> = true ) . { auto . } assert ( <genH> : Nat . even <nat:152> = true ) . { auto . } assert ( <genH> : Nat . even <nat:196> = true ) . { auto . } assert ( <genH> : Nat . even <nat:494> = true ) . { auto . } assert ( <genH> : Nat . even <nat:356> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:164> * <var:A> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:32> * <var:R> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:152> * <var:i> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:196> * <var:a> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:494> * <var:k> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:356> * <var:Z> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:152> * <var:i> + <nat:494> * <var:k> + <nat:196> * <var:a> + <nat:164> * <var:A> + <nat:356> * <var:Z> + <nat:32> * <var:R> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . even_add . assert ( <genH> : Nat . even <nat:186> = true ) . { auto . } rewrite <genH> . rewrite <genH> . auto . Qed . 