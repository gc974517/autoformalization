\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Take $ <var:c> $ , $ <var:i> $ , $ <var:I> $ , $ <var:M> $ , $ <var:E> $ , $ <var:G> $ , $ <var:S> $ , $ <var:k> $ and $ <var:a> \in \mathbb{Z}^+ $ where $ <var:i> $ , $ <var:I> $ , $ <var:S> $ , $ <var:G> $ , $ <var:c> $ , $ <var:a> $ , $ <var:M> $ , $ <var:E> $ , and $ <var:k> \geq <nat:2> $ as well as such that <nat:21621600> is the multiplication between natural numbers $ <var:c> $ , $ <var:i> $ , $ <var:I> $ , $ <var:M> $ , $ <var:E> $ , $ <var:G> $ , $ <var:S> $ , $ <var:k> $ , $ <var:a> \in \mathbb{Z}^+ $ . \end{theorem} \begin{proof} Observe that $ <nat:21621600> = <var:G> \cdot <var:c> \cdot <var:a> \cdot <var:k> \cdot <var:M> \cdot <var:E> \cdot <var:i> \cdot <var:I> \cdot <var:S> $ shows $ <var:c> = <nat:3> $ , $ <var:M> = <nat:2> $ , $ <var:I> = <nat:13> $ , $ <var:a> = <nat:10> $ , $ <var:i> = <nat:9> $ , $ <var:G> = <nat:7> $ , $ <var:k> = <nat:11> $ , $ <var:E> = <nat:8> $ , $ <var:S> = <nat:5> $ . Similarly observe that $ <nat:13> $ , $ <nat:5> $ , $ <nat:7> $ , $ <nat:9> $ , $ <nat:2> $ , $ <nat:10> $ , $ <nat:8> $ , $ <nat:11> $ , $ <nat:3> \geq <nat:2> $ . This implies the principle holds . \end{proof} \end{document} 
~
Require Import Lia . Theorem <genP:1> : exists <var:c> <var:i> <var:I> <var:M> <var:E> <var:G> <var:S> <var:k> <var:a> : nat , ( <var:i> >= <nat:2> ) /\ ( <var:I> >= <nat:2> ) /\ ( <var:S> >= <nat:2> ) /\ ( <var:G> >= <nat:2> ) /\ ( <var:c> >= <nat:2> ) /\ ( <var:a> >= <nat:2> ) /\ ( <var:M> >= <nat:2> ) /\ ( <var:E> >= <nat:2> ) /\ ( <var:k> >= <nat:2> ) /\ ( <nat:21621600> = <var:c> * <var:i> * <var:I> * <var:M> * <var:E> * <var:G> * <var:S> * <var:k> * <var:a> ) . Proof . exists <nat:3> . exists <nat:9> . exists <nat:13> . exists <nat:2> . exists <nat:8> . exists <nat:7> . exists <nat:5> . exists <nat:11> . exists <nat:10> . assert ( <genH> : <nat:13> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:5> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:7> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:9> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:2> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:10> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:8> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:11> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:3> >= <nat:2> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 