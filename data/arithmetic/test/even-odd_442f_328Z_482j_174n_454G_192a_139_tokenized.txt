\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:G> \times <nat:454> + <var:f> \times <nat:442> + <var:a> \times <nat:192> + <nat:174> \times <var:n> + <var:j> \times <nat:482> + <nat:328> \times <var:Z> + <nat:139> $ is guaranteed to be odd . \end{theorem} \begin{proof} Notice $ <nat:139> $ is known to be an odd number . The summing of even positive integers with an odd natural number must be in itself an odd whole number . This result is true as a consequence that $ <var:f> * <nat:442> + <nat:328> * <var:Z> + <nat:482> * <var:j> + <nat:174> * <var:n> + <nat:454> * <var:G> + <var:a> * <nat:192> $ is known as even . What's more , notice that the terms $ <var:f> <nat:442> $ , $ <nat:328> <var:Z> $ , $ <var:j> <nat:482> $ , $ <var:n> <nat:174> $ , $ <var:G> <nat:454> $ , plus $ <var:a> <nat:192> $ are even naturals . This claim holds by reason that the positive integers $ <nat:442> $ , $ <nat:328> $ , $ <nat:482> $ , $ <nat:174> $ , $ <nat:454> $ , as well as $ <nat:192> $ are even elements of $ \mathbb{N} $ . By reason that taking the product of an even number in $ \mathbb{N} $ and some element of $ \mathbb{Z}^+ $ is guaranteed to be even this claim is proven . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:G> <var:f> <var:a> <var:n> <var:j> <var:Z> : nat , Nat . odd ( <nat:454> * <var:G> + <nat:442> * <var:f> + <nat:192> * <var:a> + <nat:174> * <var:n> + <nat:482> * <var:j> + <nat:328> * <var:Z> + <nat:139> ) = true . Proof . intros . assert ( <genH> : Nat . odd <nat:139> = true ) . { auto . } rewrite Nat . odd_add . assert ( <genH> : Nat . even <nat:442> = true ) . { auto . } assert ( <genH> : Nat . even <nat:328> = true ) . { auto . } assert ( <genH> : Nat . even <nat:482> = true ) . { auto . } assert ( <genH> : Nat . even <nat:174> = true ) . { auto . } assert ( <genH> : Nat . even <nat:454> = true ) . { auto . } assert ( <genH> : Nat . even <nat:192> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:442> * <var:f> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:328> * <var:Z> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:482> * <var:j> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:174> * <var:n> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:454> * <var:G> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:192> * <var:a> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:454> * <var:G> + <nat:442> * <var:f> + <nat:192> * <var:a> + <nat:174> * <var:n> + <nat:482> * <var:j> + <nat:328> * <var:Z> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite <- Nat . negb_even . rewrite <genH> . rewrite <genH> . auto . Qed . 