\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:101> + <var:i> \cdot <nat:314> + <var:l> \cdot <nat:468> + <var:F> \cdot <nat:362> + <nat:140> \cdot <var:k> + <var:s> \cdot <nat:182> + <nat:58> \cdot <var:A> + <nat:160> \cdot <var:R> $ must be odd . \end{theorem} \begin{proof} The number $ <nat:160> $ is known to be even Building on , the numbers $ <nat:362> $ additionally $ <nat:140> $ are obviously even naturals On top of this , the numbers $ <nat:58> $ plus $ <nat:468> $ are trivially even natural numbers Take note the positive integer $ <nat:314> $ is trivially even See the whole number $ <nat:182> $ is guaranteed to be even See that the summing of even numbers in $ \mathbb{Z}^+ $ concurrently and an odd number must be an odd whole number . See that $ <nat:101> $ is obviously an odd positive integer . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:i> <var:l> <var:F> <var:k> <var:s> <var:A> <var:R> : nat , Nat . odd ( <nat:314> * <var:i> + <nat:468> * <var:l> + <nat:362> * <var:F> + <nat:140> * <var:k> + <nat:182> * <var:s> + <nat:58> * <var:A> + <nat:160> * <var:R> + <nat:101> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:160> = true ) . { auto . } assert ( <genH> : Nat . even <nat:362> = true ) . { auto . } assert ( <genH> : Nat . even <nat:140> = true ) . { auto . } assert ( <genH> : Nat . even <nat:58> = true ) . { auto . } assert ( <genH> : Nat . even <nat:468> = true ) . { auto . } assert ( <genH> : Nat . even <nat:314> = true ) . { auto . } assert ( <genH> : Nat . even <nat:182> = true ) . { auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . assert ( <genH> : Nat . odd <nat:101> = true ) . { auto . } repeat rewrite Nat . even_mul . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 