\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \newtheorem{definition}{Definition} \begin{document} \begin{definition} Assume that $ <var:D> $ is a <def:ten-composite> whole number supposing that there are $ <var:h> $ , $ <var:n> $ , $ <var:a> $ , $ <var:e> $ , $ <var:s> $ , $ <var:N> $ , $ <var:d> $ , $ <var:K> $ , $ <var:x> $ , $ <var:o> \in \mathbb{Z}^+ $ such that $ <var:x> \times <var:s> \times <var:d> \times <var:h> \times <var:e> \times <var:K> \times <var:a> \times <var:o> \times <var:N> \times <var:n> = <var:D> $ with some integer $ <var:D> $ and satisfying the condition that $ <var:a> $ , $ <var:o> $ , $ <var:x> $ , $ <var:d> $ , $ <var:K> $ , $ <var:h> $ , $ <var:n> $ , $ <var:N> $ , $ <var:s> $ , and $ <var:e> \geq <nat:2> $ . \end{definition} \begin{theorem} $ <nat:51891840> = <var:D> $ is a <def:ten-composite> integer . \end{theorem} \begin{proof} Remember a <def:ten-composite> number is the product of integers $ <var:n> $ , $ <var:h> $ , $ <var:x> $ , $ <var:K> $ , $ <var:o> $ , $ <var:e> $ , $ <var:s> $ , $ <var:a> $ , $ <var:d> $ and $ <var:N> $ greater than <nat:1> . Note that $ <nat:2> $ , $ <nat:3> $ , $ <nat:5> $ , $ <nat:6> $ , $ <nat:13> $ , $ <nat:9> $ , $ <nat:7> $ , $ <nat:4> $ , $ <nat:11> $ , and $ <nat:8> $ are larger than <nat:1> . Similarly notice that also $ <nat:51891840> = <nat:9> \times <nat:8> \times <nat:7> \times <nat:11> \times <nat:5> \times <nat:3> \times <nat:6> \times <nat:13> \times <nat:2> \times <nat:4> $ . This shows <nat:51891840> is a <def:ten-composite> integer . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:ten-composite> ( <var:D> : nat ) := exists <var:h> <var:n> <var:a> <var:e> <var:s> <var:N> <var:d> <var:K> <var:x> <var:o> : nat , ( <var:x> * <var:s> * <var:d> * <var:h> * <var:e> * <var:K> * <var:a> * <var:o> * <var:N> * <var:n> = <var:D> ) /\ ( <var:a> >= <nat:2> ) /\ ( <var:o> >= <nat:2> ) /\ ( <var:x> >= <nat:2> ) /\ ( <var:d> >= <nat:2> ) /\ ( <var:K> >= <nat:2> ) /\ ( <var:h> >= <nat:2> ) /\ ( <var:n> >= <nat:2> ) /\ ( <var:N> >= <nat:2> ) /\ ( <var:s> >= <nat:2> ) /\ ( <var:e> >= <nat:2> ) . Theorem <genP:1> : <def:ten-composite> <nat:51891840> . Proof . unfold <def:ten-composite> . assert ( <genH> : <nat:2> > <nat:1> ) . { lia . } assert ( <genH> : <nat:3> > <nat:1> ) . { lia . } assert ( <genH> : <nat:5> > <nat:1> ) . { lia . } assert ( <genH> : <nat:6> > <nat:1> ) . { lia . } assert ( <genH> : <nat:13> > <nat:1> ) . { lia . } assert ( <genH> : <nat:9> > <nat:1> ) . { lia . } assert ( <genH> : <nat:7> > <nat:1> ) . { lia . } assert ( <genH> : <nat:4> > <nat:1> ) . { lia . } assert ( <genH> : <nat:11> > <nat:1> ) . { lia . } assert ( <genH> : <nat:8> > <nat:1> ) . { lia . } exists <nat:9> . exists <nat:7> . exists <nat:8> . exists <nat:6> . exists <nat:4> . exists <nat:3> . exists <nat:13> . exists <nat:11> . exists <nat:2> . exists <nat:5> . repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 