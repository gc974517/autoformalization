\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:274> <var:A> + <nat:146> <var:d> + <var:K> <nat:466> + <nat:442> <var:Y> + <var:N> <nat:270> + <nat:348> <var:F> + <nat:286> <var:f> + <var:y> <nat:308> + <nat:258> <var:U> + <var:H> <nat:374> + <nat:291> + <var:X> <nat:24> $ is odd . \end{theorem} \begin{proof} Recall the terms $ <nat:466> <var:K> $ , $ <var:y> <nat:308> $ , $ <var:A> <nat:274> $ , $ <var:X> <nat:24> $ , additionally $ <nat:270> <var:N> $ are obviously even . Additionally , the products $ <var:H> <nat:374> $ , $ <var:Y> <nat:442> $ , $ <var:d> <nat:146> $ , additionally $ <var:F> <nat:348> $ must be even . This claim holds from the knowledge multiplying of an even element of $ \mathbb{N} $ with some element of $ \mathbb{Z}^+ $ must be by its very nature an even whole number . Notice that the term $ <nat:258> <var:U> $ is known to be an even natural number . This is true since taking the product of an even whole number and any natural will be an even number in $ \mathbb{Z}^+ $ . What's more , remember the product $ <nat:286> <var:f> $ is even . This fact must be true from the fact taking the product of an even element of $ \mathbb{Z}^+ $ with any element of $ \mathbb{N} $ must be even . Take note that $ <nat:291> $ is odd . The summation between even numbers successively and an odd element of $ \mathbb{Z}^+ $ is guaranteed to be odd . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:A> <var:d> <var:K> <var:Y> <var:N> <var:F> <var:f> <var:y> <var:U> <var:H> <var:X> : nat , Nat . odd ( <nat:274> * <var:A> + <nat:146> * <var:d> + <nat:466> * <var:K> + <nat:442> * <var:Y> + <nat:270> * <var:N> + <nat:348> * <var:F> + <nat:286> * <var:f> + <nat:308> * <var:y> + <nat:258> * <var:U> + <nat:374> * <var:H> + <nat:24> * <var:X> + <nat:291> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:466> * <var:K> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:308> * <var:y> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:274> * <var:A> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:24> * <var:X> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:270> * <var:N> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:374> * <var:H> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:442> * <var:Y> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:146> * <var:d> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:348> * <var:F> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:258> * <var:U> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:286> * <var:f> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . odd <nat:291> = true ) . { auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 