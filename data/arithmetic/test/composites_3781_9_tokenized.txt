\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \newtheorem{definition}{Definition} \begin{document} \begin{definition} Say that $ <var:Y> $ is a <def:nine-composite> integer when $ \exists <var:c> $ , $ <var:a> $ , $ <var:O> $ , $ <var:H> $ , $ <var:v> $ , $ <var:T> $ , $ <var:p> $ , $ <var:e> $ , $ <var:D> \in \mathbb{N} $ so that satisfying the condition that $ <var:a> $ , $ <var:T> $ , $ <var:H> $ , $ <var:v> $ , $ <var:c> $ , $ <var:p> $ , $ <var:D> $ , $ <var:O> $ , $ <var:e> > <nat:1> $ plus using some natural number $ <var:Y> $ , $ <var:Y> = <var:v> * <var:p> * <var:e> * <var:H> * <var:a> * <var:c> * <var:D> * <var:T> * <var:O> $ . \end{definition} \begin{theorem} $ <nat:43243200> = <var:Y> $ is a <def:nine-composite> integer . \end{theorem} \begin{proof} Allow $ <var:p> = <nat:10> $ , $ <var:e> = <nat:4> $ , $ <var:O> = <nat:8> $ , $ <var:H> = <nat:13> $ , $ <var:T> = <nat:9> $ , $ <var:v> = <nat:3> $ , $ <var:c> = <nat:5> $ , $ <var:D> = <nat:11> $ and $ <var:a> = <nat:7> $ . Notice that $ <nat:10> * <nat:11> * <nat:7> * <nat:13> * <nat:8> * <nat:4> * <nat:9> * <nat:3> * <nat:5> = <nat:43243200> $ . Further notice that $ <var:a> = <nat:7> $ , $ <var:v> = <nat:3> $ , $ <var:H> = <nat:13> $ , $ <var:O> = <nat:8> $ , $ <var:c> = <nat:5> $ , $ <var:T> = <nat:9> $ , $ <var:e> = <nat:4> $ , $ <var:D> = <nat:11> $ , and $ <var:p> = <nat:10> $ are greater than <nat:1> . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:nine-composite> ( <var:Y> : nat ) := exists <var:c> <var:a> <var:O> <var:H> <var:v> <var:T> <var:p> <var:e> <var:D> : nat , ( <var:a> > <nat:1> ) /\ ( <var:T> > <nat:1> ) /\ ( <var:H> > <nat:1> ) /\ ( <var:v> > <nat:1> ) /\ ( <var:c> > <nat:1> ) /\ ( <var:p> > <nat:1> ) /\ ( <var:D> > <nat:1> ) /\ ( <var:O> > <nat:1> ) /\ ( <var:e> > <nat:1> ) /\ ( <var:Y> = <var:v> * <var:p> * <var:e> * <var:H> * <var:a> * <var:c> * <var:D> * <var:T> * <var:O> ) . Theorem <genP:1> : <def:nine-composite> <nat:43243200> . Proof . unfold <def:nine-composite> . exists <nat:5> . exists <nat:7> . exists <nat:8> . exists <nat:13> . exists <nat:3> . exists <nat:9> . exists <nat:10> . exists <nat:4> . exists <nat:11> . assert ( <genH> : <nat:7> > <nat:1> ) . { lia . } assert ( <genH> : <nat:3> > <nat:1> ) . { lia . } assert ( <genH> : <nat:13> > <nat:1> ) . { lia . } assert ( <genH> : <nat:8> > <nat:1> ) . { lia . } assert ( <genH> : <nat:5> > <nat:1> ) . { lia . } assert ( <genH> : <nat:9> > <nat:1> ) . { lia . } assert ( <genH> : <nat:4> > <nat:1> ) . { lia . } assert ( <genH> : <nat:11> > <nat:1> ) . { lia . } assert ( <genH> : <nat:10> > <nat:1> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 