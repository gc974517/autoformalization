\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:484> * <var:P> + <nat:242> * <var:x> + <var:o> * <nat:374> + <nat:382> * <var:Q> + <nat:344> * <var:s> + <var:K> * <nat:120> + <nat:61> + <nat:260> * <var:c> $ is guaranteed to be odd with natural numbers $ <var:Q> $ , $ <var:K> $ , $ <var:s> $ , $ <var:P> $ , $ <var:c> $ , $ <var:o> $ , and $ <var:x> $ . \end{theorem} \begin{proof} Our result is true from the fact $ <var:o> \cdot <nat:374> + <var:s> \cdot <nat:344> + <nat:242> \cdot <var:x> + <nat:120> \cdot <var:K> + <nat:260> \cdot <var:c> + <var:Q> \cdot <nat:382> + <nat:484> \cdot <var:P> $ is trivially even . We know the terms $ <var:K> \cdot <nat:120> $ additionally $ <nat:242> \cdot <var:x> $ will be even . Further , take note the terms $ <var:c> \cdot <nat:260> $ , $ <var:P> \cdot <nat:484> $ , $ <var:Q> \cdot <nat:382> $ , and also $ <var:o> \cdot <nat:374> $ must be even naturals . Likewise , $ <var:s> \cdot <nat:344> $ is even . From the fact the adding of even positive integers with even numbers will be even , the lemma holds . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:Q> <var:K> <var:s> <var:P> <var:c> <var:o> <var:x> : nat , Nat . odd ( <nat:484> * <var:P> + <nat:242> * <var:x> + <nat:374> * <var:o> + <nat:382> * <var:Q> + <nat:344> * <var:s> + <nat:120> * <var:K> + <nat:260> * <var:c> + <nat:61> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:120> * <var:K> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:242> * <var:x> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:260> * <var:c> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:484> * <var:P> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:382> * <var:Q> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:374> * <var:o> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:344> * <var:s> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:484> * <var:P> + <nat:242> * <var:x> + <nat:374> * <var:o> + <nat:382> * <var:Q> + <nat:344> * <var:s> + <nat:120> * <var:K> + <nat:260> * <var:c> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . auto . Qed . 