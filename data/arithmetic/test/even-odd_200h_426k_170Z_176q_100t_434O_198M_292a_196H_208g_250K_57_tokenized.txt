\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:57> + <nat:200> \cdot <var:h> + <nat:426> \cdot <var:k> + <var:Z> \cdot <nat:170> + <var:q> \cdot <nat:176> + <var:t> \cdot <nat:100> + <var:O> \cdot <nat:434> + <nat:198> \cdot <var:M> + <nat:292> \cdot <var:a> + <var:H> \cdot <nat:196> + <nat:208> \cdot <var:g> + <nat:250> \cdot <var:K> $ is odd using any positive numbers $ <var:a> $ , $ <var:M> $ , $ <var:q> $ , $ <var:h> $ , $ <var:K> $ , $ <var:g> $ , $ <var:Z> $ , $ <var:H> $ , $ <var:t> $ , $ <var:O> $ , and $ <var:k> $ . \end{theorem} \begin{proof} The numbers $ <nat:292> $ , $ <nat:198> $ , $ <nat:100> $ , as well as $ <nat:196> $ must be even Furthermore , the whole numbers $ <nat:208> $ , $ <nat:200> $ , $ <nat:434> $ , $ <nat:170> $ , $ <nat:176> $ , and moreover $ <nat:250> $ are even numbers in $ \mathbb{N} $ In addition to this , see that the whole number $ <nat:426> $ is guaranteed to be an even element of $ \mathbb{N} $ The summation of even integers with an odd natural number is odd . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:a> <var:M> <var:q> <var:h> <var:K> <var:g> <var:Z> <var:H> <var:t> <var:O> <var:k> : nat , Nat . odd ( <nat:200> * <var:h> + <nat:426> * <var:k> + <nat:170> * <var:Z> + <nat:176> * <var:q> + <nat:100> * <var:t> + <nat:434> * <var:O> + <nat:198> * <var:M> + <nat:292> * <var:a> + <nat:196> * <var:H> + <nat:208> * <var:g> + <nat:250> * <var:K> + <nat:57> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:292> = true ) . { auto . } assert ( <genH> : Nat . even <nat:198> = true ) . { auto . } assert ( <genH> : Nat . even <nat:100> = true ) . { auto . } assert ( <genH> : Nat . even <nat:196> = true ) . { auto . } assert ( <genH> : Nat . even <nat:208> = true ) . { auto . } assert ( <genH> : Nat . even <nat:200> = true ) . { auto . } assert ( <genH> : Nat . even <nat:434> = true ) . { auto . } assert ( <genH> : Nat . even <nat:170> = true ) . { auto . } assert ( <genH> : Nat . even <nat:176> = true ) . { auto . } assert ( <genH> : Nat . even <nat:250> = true ) . { auto . } assert ( <genH> : Nat . even <nat:426> = true ) . { auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . repeat rewrite Nat . even_mul . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 