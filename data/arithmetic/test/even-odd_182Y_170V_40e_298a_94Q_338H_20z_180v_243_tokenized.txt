\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Assuming all positive terms $ <var:V> $ , $ <var:H> $ , $ <var:v> $ , $ <var:Y> $ , $ <var:Q> $ , $ <var:e> $ , $ <var:z> $ , and $ <var:a> $ the summation $ <nat:182> \cdot <var:Y> + <nat:170> \cdot <var:V> + <nat:243> + <nat:40> \cdot <var:e> + <var:a> \cdot <nat:298> + <nat:94> \cdot <var:Q> + <nat:338> \cdot <var:H> + <var:z> \cdot <nat:20> + <var:v> \cdot <nat:180> $ is guaranteed to be odd . \end{theorem} \begin{proof} On top of this , the whole numbers $ <nat:182> $ , $ <nat:170> $ , $ <nat:40> $ , $ <nat:298> $ , $ <nat:94> $ , $ <nat:338> $ , $ <nat:20> $ , and moreover $ <nat:180> $ are known to be even . In consequence , the terms $ <nat:182> \times <var:Y> $ , $ <nat:170> \times <var:V> $ , $ <nat:40> \times <var:e> $ , $ <var:a> \times <nat:298> $ , $ <var:Q> \times <nat:94> $ , $ <var:H> \times <nat:338> $ , $ <nat:20> \times <var:z> $ , additionally $ <nat:180> \times <var:v> $ is even additionally . Observe that $ <nat:243> $ is known as an odd natural . Take note the summing between an even whole number with an odd integer is an odd integer . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:V> <var:H> <var:v> <var:Y> <var:Q> <var:e> <var:z> <var:a> : nat , Nat . odd ( <nat:182> * <var:Y> + <nat:170> * <var:V> + <nat:40> * <var:e> + <nat:298> * <var:a> + <nat:94> * <var:Q> + <nat:338> * <var:H> + <nat:20> * <var:z> + <nat:180> * <var:v> + <nat:243> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:182> = true ) . { auto . } assert ( <genH> : Nat . even <nat:170> = true ) . { auto . } assert ( <genH> : Nat . even <nat:40> = true ) . { auto . } assert ( <genH> : Nat . even <nat:298> = true ) . { auto . } assert ( <genH> : Nat . even <nat:94> = true ) . { auto . } assert ( <genH> : Nat . even <nat:338> = true ) . { auto . } assert ( <genH> : Nat . even <nat:20> = true ) . { auto . } assert ( <genH> : Nat . even <nat:180> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:182> * <var:Y> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:170> * <var:V> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:40> * <var:e> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:298> * <var:a> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:94> * <var:Q> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:338> * <var:H> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:20> * <var:z> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:180> * <var:v> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . odd <nat:243> = true ) . { auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 