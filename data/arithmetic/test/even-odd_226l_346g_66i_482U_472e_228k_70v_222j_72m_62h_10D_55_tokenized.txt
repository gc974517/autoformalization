\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Using all $ <var:i> $ , $ <var:k> $ , $ <var:U> $ , $ <var:l> $ , $ <var:e> $ , $ <var:h> $ , $ <var:v> $ , $ <var:g> $ , $ <var:j> $ , $ <var:D> $ , and $ <var:m> \in \mathbb{Z}^+ $ $ <nat:55> + <nat:472> * <var:e> + <nat:70> * <var:v> + <var:D> * <nat:10> + <nat:222> * <var:j> + <nat:346> * <var:g> + <nat:62> * <var:h> + <nat:482> * <var:U> + <nat:66> * <var:i> + <var:l> * <nat:226> + <var:m> * <nat:72> + <nat:228> * <var:k> $ must be odd . \end{theorem} \begin{proof} Recall $ <nat:55> $ is odd . The adding of even integers collectively with an odd element of $ \mathbb{N} $ is guaranteed to be odd . Therefore , the summation $ <nat:55> + <nat:10> \cdot <var:D> + <var:h> \cdot <nat:62> + <nat:482> \cdot <var:U> + <nat:472> \cdot <var:e> + <var:m> \cdot <nat:72> + <var:k> \cdot <nat:228> + <nat:222> \cdot <var:j> + <nat:70> \cdot <var:v> + <var:g> \cdot <nat:346> + <var:i> \cdot <nat:66> + <var:l> \cdot <nat:226> $ is guaranteed to be odd . It can be shown that $ <nat:222> \times <var:j> + <var:g> \times <nat:346> + <nat:226> \times <var:l> + <nat:472> \times <var:e> + <nat:66> \times <var:i> + <nat:228> \times <var:k> + <var:U> \times <nat:482> + <nat:70> \times <var:v> + <var:h> \times <nat:62> + <nat:10> \times <var:D> + <var:m> \times <nat:72> $ is trivially even . Notice the term $ <var:l> <nat:226> $ is clearly even . This fact must be true by reason that the integer $ <nat:226> $ is known as even . What's more , see that the pair $ <nat:346> <var:g> $ is known to be even . This must be true from the fact the number $ <nat:346> $ is an even natural . Remember that the product $ <nat:66> <var:i> $ is clearly even from the knowledge the coefficient $ <nat:66> $ is trivially fundamentally an even element of $ \mathbb{Z}^+ $ . On top of this , notice that the leading term $ <nat:482> $ is obviously even . As a consequence , the term $ <nat:482> <var:U> $ is guaranteed to be even at the same time . Furthermore , recall the term $ <nat:472> <var:e> $ is trivially even . This is true because the whole number $ <nat:472> $ is trivially even . Building on , see the whole number $ <nat:228> $ is known as an even integer . Therefore , the pair $ <nat:228> <var:k> $ is even additionally . On top of this , the product $ <nat:70> <var:v> $ is clearly even from the knowledge the natural number $ <nat:70> $ is clearly instrinsically an even positive integer . Remember the number $ <nat:222> $ is known to be an even natural . As a consequence , $ <var:j> <nat:222> $ will be even too . Likewise , take note the number $ <nat:72> $ is an even integer . As a consequence , the term $ <nat:72> <var:m> $ is guaranteed to be even additionally . Observe that the pair $ <var:h> <nat:62> $ is obviously even as a consequence that the product of an even integer and a number in $ \mathbb{N} $ is even plus the natural number $ <nat:62> $ is clearly in itself an even whole number . Likewise , take note the positive integer $ <nat:10> $ is trivially an even positive integer . As a consequence , the pair $ <nat:10> <var:D> $ must be even additionally . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:i> <var:k> <var:U> <var:l> <var:e> <var:h> <var:v> <var:g> <var:j> <var:D> <var:m> : nat , Nat . odd ( <nat:472> * <var:e> + <nat:70> * <var:v> + <nat:10> * <var:D> + <nat:222> * <var:j> + <nat:346> * <var:g> + <nat:62> * <var:h> + <nat:482> * <var:U> + <nat:66> * <var:i> + <nat:226> * <var:l> + <nat:72> * <var:m> + <nat:228> * <var:k> + <nat:55> ) = true . Proof . intros . assert ( <genH> : Nat . odd <nat:55> = true ) . { auto . } rewrite Nat . odd_add . assert ( <genH> : Nat . even <nat:226> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:226> * <var:l> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:346> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:346> * <var:g> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:66> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:66> * <var:i> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:482> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:482> * <var:U> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:472> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:472> * <var:e> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:228> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:228> * <var:k> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:70> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:70> * <var:v> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:222> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:222> * <var:j> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:72> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:72> * <var:m> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:62> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:62> * <var:h> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:10> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:10> * <var:D> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:472> * <var:e> + <nat:70> * <var:v> + <nat:10> * <var:D> + <nat:222> * <var:j> + <nat:346> * <var:g> + <nat:62> * <var:h> + <nat:482> * <var:U> + <nat:66> * <var:i> + <nat:226> * <var:l> + <nat:72> * <var:m> + <nat:228> * <var:k> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite <- Nat . negb_even . rewrite <genH> . rewrite <genH> . auto . Qed . 