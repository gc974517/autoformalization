\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Assuming some $ <var:B> $ , $ <var:G> $ , $ <var:M> $ , $ <var:m> $ , $ <var:w> $ , and $ <var:l> \in \mathbb{Z}^+ $ the sum $ <nat:32> \cdot <var:m> + <nat:448> \cdot <var:G> + <nat:175> + <nat:422> \cdot <var:l> + <var:B> \cdot <nat:334> + <var:M> \cdot <nat:492> + <nat:240> \cdot <var:w> $ must be odd . \end{theorem} \begin{proof} On top of this , the whole numbers $ <nat:32> $ , $ <nat:448> $ , $ <nat:422> $ , $ <nat:334> $ , $ <nat:492> $ , additionally $ <nat:240> $ must be even . Thus , the pairs $ <var:m> <nat:32> $ , $ <var:G> <nat:448> $ , $ <var:l> <nat:422> $ , $ <nat:334> <var:B> $ , $ <nat:492> <var:M> $ , and $ <nat:240> <var:w> $ is guaranteed to be even as well . Take note $ <nat:175> $ is known to be odd . The totaling of even naturals collectively with an odd number in $ \mathbb{N} $ is guaranteed to be in itself an odd element of $ \mathbb{N} $ . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:B> <var:G> <var:M> <var:m> <var:w> <var:l> : nat , Nat . odd ( <nat:32> * <var:m> + <nat:448> * <var:G> + <nat:422> * <var:l> + <nat:334> * <var:B> + <nat:492> * <var:M> + <nat:240> * <var:w> + <nat:175> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:32> = true ) . { auto . } assert ( <genH> : Nat . even <nat:448> = true ) . { auto . } assert ( <genH> : Nat . even <nat:422> = true ) . { auto . } assert ( <genH> : Nat . even <nat:334> = true ) . { auto . } assert ( <genH> : Nat . even <nat:492> = true ) . { auto . } assert ( <genH> : Nat . even <nat:240> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:32> * <var:m> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:448> * <var:G> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:422> * <var:l> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:334> * <var:B> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:492> * <var:M> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:240> * <var:w> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . odd <nat:175> = true ) . { auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 