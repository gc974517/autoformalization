\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} With positive terms $ <var:H> $ , $ <var:y> $ , and $ <var:b> $ the sum $ <nat:426> \cdot <var:y> + <nat:111> + <var:H> \cdot <nat:282> + <var:b> \cdot <nat:162> $ will be odd . \end{theorem} \begin{proof} It can be demonstrated that this result holds . The theorem is proven from the fact $ <var:b> * <nat:162> + <var:H> * <nat:282> + <nat:426> * <var:y> $ is obviously even . The number $ <nat:162> $ is guaranteed to be even . Thus , the term $ <var:b> * <nat:162> $ must be even too . The term $ <var:y> * <nat:426> $ is even from the knowledge the integer $ <nat:426> $ is known to be an even natural number . In addition to this , observe $ <var:H> * <nat:282> $ is clearly an even element of $ \mathbb{N} $ . This claim must be true from the fact multiplying between an even number with any number is guaranteed to be an even element of $ \mathbb{N} $ plus the natural number $ <nat:282> $ is trivially even . Our main result holds as a consequence that the totaling between an even positive integer with even elements of $ \mathbb{Z}^+ $ must be an even number in $ \mathbb{N} $ and moreover as a consequence that multiplying between an even element of $ \mathbb{Z}^+ $ with a element of $ \mathbb{N} $ will be an even natural number . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:H> <var:y> <var:b> : nat , Nat . odd ( <nat:426> * <var:y> + <nat:282> * <var:H> + <nat:162> * <var:b> + <nat:111> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:162> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:162> * <var:b> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:426> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:426> * <var:y> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:282> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:282> * <var:H> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:426> * <var:y> + <nat:282> * <var:H> + <nat:162> * <var:b> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . auto . Qed . 