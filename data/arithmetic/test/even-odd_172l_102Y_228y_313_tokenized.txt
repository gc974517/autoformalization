\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Using natural numbers $ <var:Y> $ , $ <var:y> $ , and $ <var:l> $ $ <nat:313> + <nat:102> \cdot <var:Y> + <nat:228> \cdot <var:y> + <var:l> \cdot <nat:172> $ must be odd . \end{theorem} \begin{proof} We know the expression $ <var:l> <nat:172> + <var:Y> <nat:102> + <var:y> <nat:228> $ is clearly even . Remember that the term $ <var:Y> \times <nat:102> $ is trivially even . The pair $ <nat:172> \times <var:l> $ is clearly an even integer . Further , $ <var:y> \times <nat:228> $ is known as even . This claim is true from the knowledge taking the product of an even positive integer with a natural number is in itself an even integer . This main result must be true since the summation of an even element of $ \mathbb{N} $ and even positive integers will be even plus by reason that multiplying of even whole numbers with any number is guaranteed to be in itself an even positive integer . Observe that the summing of an even number in $ \mathbb{Z}^+ $ with an odd number in $ \mathbb{Z}^+ $ is odd . Recall $ <nat:313> $ is guaranteed to be odd . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:Y> <var:y> <var:l> : nat , Nat . odd ( <nat:102> * <var:Y> + <nat:228> * <var:y> + <nat:172> * <var:l> + <nat:313> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:102> * <var:Y> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:172> * <var:l> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:228> * <var:y> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:102> * <var:Y> + <nat:228> * <var:y> + <nat:172> * <var:l> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . assert ( <genH> : Nat . odd <nat:313> = true ) . { auto . } rewrite <- Nat . negb_even . rewrite <genH> . rewrite <genH> . auto . Qed . 