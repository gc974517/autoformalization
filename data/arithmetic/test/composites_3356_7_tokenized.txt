\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} If and only if there exist $ <var:V> $ , $ <var:Y> $ , $ <var:n> $ , $ <var:P> $ , $ <var:A> $ , $ <var:E> $ , $ <var:N> \in \mathbb{Z}^+ $ larger than <nat:1> . Say that $ <var:x> \in \mathbb{N} $ will be called a <def:seven-composite> natural number when $ <var:A> * <var:n> * <var:V> * <var:E> * <var:N> * <var:P> * <var:Y> = <var:x> $ . Consequently $ <nat:2217600> = <var:x> $ is a <def:seven-composite> natural number . \end{theorem} \begin{proof} Remember that <nat:2217600> is <def:seven-composite> wherever it is the product between positive integers $ <var:n> $ , $ <var:N> $ , $ <var:P> $ , $ <var:E> $ , $ <var:V> $ , $ <var:Y> $ , $ <var:A> $ larger than <nat:1> . Allow $ <var:N> = <nat:10> $ , $ <var:Y> = <nat:8> $ , $ <var:A> = <nat:7> $ , $ <var:E> = <nat:11> $ , $ <var:V> = <nat:12> $ , $ <var:P> = <nat:6> $ , and $ <var:n> = <nat:5> $ . Notice $ <var:P> = <nat:6> $ , $ <var:V> = <nat:12> $ , $ <var:E> = <nat:11> $ , $ <var:A> = <nat:7> $ , $ <var:n> = <nat:5> $ , $ <var:Y> = <nat:8> $ , $ <var:N> = <nat:10> > <nat:1> $ . Moreover notice likewise $ <nat:12> * <nat:6> * <nat:11> * <nat:10> * <nat:8> * <nat:7> * <nat:5> = <var:V> * <var:P> * <var:E> * <var:N> * <var:Y> * <var:A> * <var:n> = <nat:2217600> $ . This implies <nat:2217600> is <def:seven-composite> . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:seven-composite> ( <var:x> : nat ) := exists <var:V> <var:Y> <var:n> <var:P> <var:A> <var:E> <var:N> : nat , ( <var:V> > <nat:1> ) /\ ( <var:Y> > <nat:1> ) /\ ( <var:n> > <nat:1> ) /\ ( <var:P> > <nat:1> ) /\ ( <var:A> > <nat:1> ) /\ ( <var:E> > <nat:1> ) /\ ( <var:N> > <nat:1> ) /\ ( <var:A> * <var:n> * <var:V> * <var:E> * <var:N> * <var:P> * <var:Y> = <var:x> ) . Theorem <genP:1> : <def:seven-composite> <nat:2217600> . Proof . unfold <def:seven-composite> . exists <nat:12> . exists <nat:8> . exists <nat:5> . exists <nat:6> . exists <nat:7> . exists <nat:11> . exists <nat:10> . assert ( <genH> : <nat:6> > <nat:1> ) . { lia . } assert ( <genH> : <nat:12> > <nat:1> ) . { lia . } assert ( <genH> : <nat:11> > <nat:1> ) . { lia . } assert ( <genH> : <nat:7> > <nat:1> ) . { lia . } assert ( <genH> : <nat:5> > <nat:1> ) . { lia . } assert ( <genH> : <nat:8> > <nat:1> ) . { lia . } assert ( <genH> : <nat:10> > <nat:1> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 