\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:310> * <var:k> + <nat:258> * <var:g> + <nat:480> + <nat:110> * <var:n> + <nat:320> * <var:I> + <var:s> * <nat:112> + <nat:84> * <var:H> $ is even for some variables $ <var:H> $ , $ <var:s> $ , $ <var:n> $ , $ <var:I> $ , $ <var:k> $ , and $ <var:g> $ . \end{theorem} \begin{proof} It can be proven that $ <var:n> \cdot <nat:110> + <var:g> \cdot <nat:258> + <nat:480> + <var:H> \cdot <nat:84> + <nat:112> \cdot <var:s> + <var:I> \cdot <nat:320> + <var:k> \cdot <nat:310> $ must be even . Take note that $ <nat:480> $ is even . See the product $ <var:n> \times <nat:110> $ is trivially even . Further , the pairs $ <var:k> \times <nat:310> $ , $ <nat:320> \times <var:I> $ , $ <nat:112> \times <var:s> $ , and moreover $ <var:g> \times <nat:258> $ must be even integers . This fact holds from the knowledge the multiplication of an even number in $ \mathbb{N} $ and an arbitrary number will be even . $ <nat:84> \times <var:H> $ is known to be an even whole number . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:H> <var:s> <var:n> <var:I> <var:k> <var:g> : nat , Nat . even ( <nat:310> * <var:k> + <nat:258> * <var:g> + <nat:110> * <var:n> + <nat:320> * <var:I> + <nat:112> * <var:s> + <nat:84> * <var:H> + <nat:480> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:480> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:110> * <var:n> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:310> * <var:k> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:320> * <var:I> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:112> * <var:s> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:258> * <var:g> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:84> * <var:H> ) = true ) . { rewrite Nat . even_mul . auto . } repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 