\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:27> + <var:s> * <nat:182> + <var:l> * <nat:444> + <nat:106> * <var:G> $ is odd taking any unknowns $ <var:l> $ , $ <var:G> $ , and $ <var:s> $ . \end{theorem} \begin{proof} Remember $ <var:s> \cdot <nat:182> + <nat:106> \cdot <var:G> + <var:l> \cdot <nat:444> $ is trivially even . The whole number $ <nat:444> $ is obviously even . Therefore , the pair $ <var:l> * <nat:444> $ will be even additionally . On top of this , recall the pair $ <var:G> * <nat:106> $ is clearly even . This fact is true since the whole number $ <nat:106> $ is trivially even . Recall the term $ <nat:182> * <var:s> $ is guaranteed to be an even element of $ \mathbb{Z}^+ $ from the knowledge the product between an even whole number with a positive integer will be even . This claim must be true from the knowledge the integer $ <nat:182> $ is known as an even number in $ \mathbb{N} $ . As a consequence that the summation between even numbers in $ \mathbb{N} $ with even positive integers is guaranteed to be by its very nature an even element of $ \mathbb{N} $ , the summation $ <nat:106> \cdot <var:G> + <var:s> \cdot <nat:182> + <var:l> \cdot <nat:444> $ is even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:l> <var:G> <var:s> : nat , Nat . odd ( <nat:182> * <var:s> + <nat:444> * <var:l> + <nat:106> * <var:G> + <nat:27> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:444> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:444> * <var:l> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:106> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:106> * <var:G> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:182> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:182> * <var:s> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:182> * <var:s> + <nat:444> * <var:l> + <nat:106> * <var:G> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . auto . Qed . 