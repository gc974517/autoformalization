\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Using $ <var:y> $ , $ <var:l> $ , $ <var:u> $ , $ <var:r> $ , $ <var:F> $ , $ <var:M> $ , $ <var:Q> $ , $ <var:g> $ , $ <var:k> $ , and $ <var:a> $ the expression $ <var:Q> <nat:256> + <var:r> <nat:364> + <nat:162> <var:l> + <nat:405> + <var:a> <nat:316> + <nat:476> <var:k> + <var:y> <nat:390> + <nat:380> <var:u> + <var:F> <nat:450> + <nat:384> <var:g> + <nat:90> <var:M> $ will be odd . \end{theorem} \begin{proof} Take note $ <nat:405> $ is guaranteed to be an odd number in $ \mathbb{Z}^+ $ . The summing of even natural numbers together with an odd natural must be odd . We demonstrate that the expression $ <nat:90> <var:M> + <nat:405> + <var:l> <nat:162> + <var:a> <nat:316> + <nat:390> <var:y> + <nat:450> <var:F> + <var:Q> <nat:256> + <nat:476> <var:k> + <var:u> <nat:380> + <nat:364> <var:r> + <var:g> <nat:384> $ is guaranteed to be odd as a consequence that the expression $ <var:y> \times <nat:390> + <var:g> \times <nat:384> + <var:M> \times <nat:90> + <nat:364> \times <var:r> + <var:F> \times <nat:450> + <var:a> \times <nat:316> + <nat:380> \times <var:u> + <nat:476> \times <var:k> + <nat:162> \times <var:l> + <var:Q> \times <nat:256> $ is obviously even . The numbers $ <nat:390> $ , $ <nat:384> $ , $ <nat:90> $ , $ <nat:364> $ , $ <nat:450> $ , $ <nat:316> $ , $ <nat:380> $ , $ <nat:476> $ , $ <nat:162> $ , and moreover $ <nat:256> $ must be even natural numbers . Therefore , the pairs $ <nat:390> \times <var:y> $ , $ <nat:384> \times <var:g> $ , $ <nat:90> \times <var:M> $ , $ <nat:364> \times <var:r> $ , $ <nat:450> \times <var:F> $ , $ <var:a> \times <nat:316> $ , $ <nat:380> \times <var:u> $ , $ <var:k> \times <nat:476> $ , $ <nat:162> \times <var:l> $ , plus $ <var:Q> \times <nat:256> $ is even in addition . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:y> <var:l> <var:u> <var:r> <var:F> <var:M> <var:Q> <var:g> <var:k> <var:a> : nat , Nat . odd ( <nat:256> * <var:Q> + <nat:364> * <var:r> + <nat:162> * <var:l> + <nat:316> * <var:a> + <nat:476> * <var:k> + <nat:390> * <var:y> + <nat:380> * <var:u> + <nat:450> * <var:F> + <nat:384> * <var:g> + <nat:90> * <var:M> + <nat:405> ) = true . Proof . intros . assert ( <genH> : Nat . odd <nat:405> = true ) . { auto . } rewrite Nat . odd_add . assert ( <genH> : Nat . even <nat:390> = true ) . { auto . } assert ( <genH> : Nat . even <nat:384> = true ) . { auto . } assert ( <genH> : Nat . even <nat:90> = true ) . { auto . } assert ( <genH> : Nat . even <nat:364> = true ) . { auto . } assert ( <genH> : Nat . even <nat:450> = true ) . { auto . } assert ( <genH> : Nat . even <nat:316> = true ) . { auto . } assert ( <genH> : Nat . even <nat:380> = true ) . { auto . } assert ( <genH> : Nat . even <nat:476> = true ) . { auto . } assert ( <genH> : Nat . even <nat:162> = true ) . { auto . } assert ( <genH> : Nat . even <nat:256> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:390> * <var:y> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:384> * <var:g> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:90> * <var:M> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:364> * <var:r> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:450> * <var:F> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:316> * <var:a> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:380> * <var:u> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:476> * <var:k> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:162> * <var:l> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:256> * <var:Q> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:256> * <var:Q> + <nat:364> * <var:r> + <nat:162> * <var:l> + <nat:316> * <var:a> + <nat:476> * <var:k> + <nat:390> * <var:y> + <nat:380> * <var:u> + <nat:450> * <var:F> + <nat:384> * <var:g> + <nat:90> * <var:M> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite <- Nat . negb_even . rewrite <genH> . rewrite <genH> . auto . Qed . 