\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:5> + <var:q> * <nat:20> + <var:W> * <nat:228> + <nat:412> * <var:V> + <var:j> * <nat:218> + <nat:144> * <var:L> + <var:C> * <nat:306> $ is odd . \end{theorem} \begin{proof} The claim is true by reason that $ <var:q> \times <nat:20> + <var:C> \times <nat:306> + <var:V> \times <nat:412> + <nat:144> \times <var:L> + <var:W> \times <nat:228> + <nat:218> \times <var:j> $ is known as even . Observe the products $ <var:W> \times <nat:228> $ , $ <var:q> \times <nat:20> $ , and likewise $ <var:L> \times <nat:144> $ will be even elements of $ \mathbb{Z}^+ $ . In addition , remember that the pair $ <nat:306> \times <var:C> $ is even . Further , the product $ <var:V> \times <nat:412> $ is clearly an even number . This fact must be true by reason that the product between an even element of $ \mathbb{N} $ and some number in $ \mathbb{N} $ is guaranteed to be by its very nature an even element of $ \mathbb{Z}^+ $ . Observe the pair $ <nat:218> \times <var:j> $ is guaranteed to be even . This fact is true since taking the product of an even whole number with a element of $ \mathbb{Z}^+ $ is guaranteed to be trivially an even element of $ \mathbb{Z}^+ $ . Notice that $ <nat:5> $ is obviously an odd element of $ \mathbb{N} $ . The totaling of even elements of $ \mathbb{Z}^+ $ concurrently with an odd element of $ \mathbb{Z}^+ $ is odd . So , $ <nat:412> * <var:V> + <nat:218> * <var:j> + <nat:5> + <nat:228> * <var:W> + <nat:144> * <var:L> + <nat:20> * <var:q> + <nat:306> * <var:C> $ instrinsically is guaranteed to be odd . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:q> <var:W> <var:V> <var:j> <var:L> <var:C> : nat , Nat . odd ( <nat:20> * <var:q> + <nat:228> * <var:W> + <nat:412> * <var:V> + <nat:218> * <var:j> + <nat:144> * <var:L> + <nat:306> * <var:C> + <nat:5> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:228> * <var:W> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:20> * <var:q> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:144> * <var:L> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:306> * <var:C> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:412> * <var:V> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:218> * <var:j> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:20> * <var:q> + <nat:228> * <var:W> + <nat:412> * <var:V> + <nat:218> * <var:j> + <nat:144> * <var:L> + <nat:306> * <var:C> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } assert ( <genH> : Nat . odd <nat:5> = true ) . { auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . rewrite <genH> . auto . Qed . 