\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:y> * <nat:344> + <var:e> * <nat:74> + <nat:236> * <var:N> + <nat:480> * <var:j> + <nat:484> * <var:q> + <var:a> * <nat:268> + <nat:162> * <var:Q> + <nat:274> * <var:g> + <nat:57> $ is odd using some $ <var:a> $ , $ <var:e> $ , $ <var:j> $ , $ <var:Q> $ , $ <var:N> $ , $ <var:g> $ , $ <var:q> $ , and $ <var:y> $ . \end{theorem} \begin{proof} As a consequence that the summation between an even natural number and an odd number in $ \mathbb{N} $ will be odd , as a consequence the sum $ <var:a> \times <nat:268> + <nat:57> + <var:Q> \times <nat:162> + <var:e> \times <nat:74> + <var:q> \times <nat:484> + <var:g> \times <nat:274> + <var:j> \times <nat:480> + <var:N> \times <nat:236> + <var:y> \times <nat:344> $ will be odd . Our main result is proven as a consequence that $ <var:Q> <nat:162> + <var:g> <nat:274> + <nat:484> <var:q> + <nat:74> <var:e> + <var:a> <nat:268> + <var:y> <nat:344> + <nat:236> <var:N> + <nat:480> <var:j> $ is clearly even . By reason that the summation between even naturals with even natural numbers is guaranteed to be even , $ <nat:74> * <var:e> + <var:j> * <nat:480> + <nat:344> * <var:y> + <var:q> * <nat:484> + <nat:236> * <var:N> + <nat:274> * <var:g> + <var:Q> * <nat:162> + <var:a> * <nat:268> $ is guaranteed to be by definition even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:a> <var:e> <var:j> <var:Q> <var:N> <var:g> <var:q> <var:y> : nat , Nat . odd ( <nat:344> * <var:y> + <nat:74> * <var:e> + <nat:236> * <var:N> + <nat:480> * <var:j> + <nat:484> * <var:q> + <nat:268> * <var:a> + <nat:162> * <var:Q> + <nat:274> * <var:g> + <nat:57> ) = true . Proof . intros . rewrite Nat . odd_add . assert ( <genH> : Nat . even ( <nat:344> * <var:y> + <nat:74> * <var:e> + <nat:236> * <var:N> + <nat:480> * <var:j> + <nat:484> * <var:q> + <nat:268> * <var:a> + <nat:162> * <var:Q> + <nat:274> * <var:g> ) = true ) . { repeat rewrite Nat . even_add . repeat rewrite Nat . even_mul . auto . } rewrite <- Nat . negb_even . rewrite <genH> . auto . Qed . 