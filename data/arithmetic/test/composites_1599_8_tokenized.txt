\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} There exist $ <var:F> $ , $ <var:s> $ , $ <var:T> $ , $ <var:b> $ , $ <var:X> $ , $ <var:K> $ , $ <var:H> $ , $ <var:e> \in \mathbb{Z}^+ $ so that $ <var:H> $ , $ <var:e> $ , $ <var:X> $ , $ <var:b> $ , $ <var:T> $ , $ <var:s> $ , $ <var:K> $ and $ <var:F> \geq <nat:2> $ as well as so that the positive integer <nat:1965600> is the product of integers $ <var:F> $ , $ <var:s> $ , $ <var:T> $ , $ <var:b> $ , $ <var:X> $ , $ <var:K> $ , $ <var:H> $ , and $ <var:e> \in \mathbb{N} $ . \end{theorem} \begin{proof} We prove $ <var:K> * <var:b> * <var:H> * <var:s> * <var:X> * <var:F> * <var:e> * <var:T> = <nat:1965600> $ . Observe that $ <nat:1965600> = <nat:10> \cdot <nat:7> \cdot <nat:13> \cdot <nat:3> \cdot <nat:9> \cdot <nat:5> \cdot <nat:8> \cdot <nat:2> $ . Additionally observe $ <nat:2> $ , $ <nat:8> $ , $ <nat:5> $ , $ <nat:9> $ , $ <nat:7> $ , $ <nat:3> $ , $ <nat:10> $ and $ <nat:13> $ are more than or equivalent to <nat:2> . \end{proof} \end{document} 
~
Require Import Lia . Theorem <genP:1> : exists <var:F> <var:s> <var:T> <var:b> <var:X> <var:K> <var:H> <var:e> : nat , ( <var:H> >= <nat:2> ) /\ ( <var:e> >= <nat:2> ) /\ ( <var:X> >= <nat:2> ) /\ ( <var:b> >= <nat:2> ) /\ ( <var:T> >= <nat:2> ) /\ ( <var:s> >= <nat:2> ) /\ ( <var:K> >= <nat:2> ) /\ ( <var:F> >= <nat:2> ) /\ ( <nat:1965600> = <var:F> * <var:s> * <var:T> * <var:b> * <var:X> * <var:K> * <var:H> * <var:e> ) . Proof . exists <nat:2> . exists <nat:13> . exists <nat:10> . exists <nat:3> . exists <nat:8> . exists <nat:9> . exists <nat:5> . exists <nat:7> . assert ( <genH> : <nat:2> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:8> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:5> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:9> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:7> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:3> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:10> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:13> >= <nat:2> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 