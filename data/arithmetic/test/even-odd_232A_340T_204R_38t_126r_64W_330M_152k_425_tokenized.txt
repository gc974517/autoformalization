\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:A> \cdot <nat:232> + <var:T> \cdot <nat:340> + <var:R> \cdot <nat:204> + <nat:38> \cdot <var:t> + <var:r> \cdot <nat:126> + <var:W> \cdot <nat:64> + <var:M> \cdot <nat:330> + <var:k> \cdot <nat:152> + <nat:425> $ must be odd given positive numbers $ <var:W> $ , $ <var:t> $ , $ <var:M> $ , $ <var:T> $ , $ <var:k> $ , $ <var:A> $ , $ <var:R> $ , and $ <var:r> $ . \end{theorem} \begin{proof} Additionally , the natural numbers $ <nat:232> $ , $ <nat:340> $ , $ <nat:204> $ , $ <nat:38> $ , $ <nat:126> $ , $ <nat:64> $ , $ <nat:330> $ , $ <nat:152> $ , are clearly even . Hence , the products $ <nat:232> \cdot <var:A> $ , $ <var:T> \cdot <nat:340> $ , $ <nat:204> \cdot <var:R> $ , $ <var:t> \cdot <nat:38> $ , $ <var:r> \cdot <nat:126> $ , $ <nat:64> \cdot <var:W> $ , $ <var:M> \cdot <nat:330> $ , $ <nat:152> \cdot <var:k> $ , must be even at the same time . Recall that the summation of even positive integers collectively and an odd element of $ \mathbb{Z}^+ $ will be an odd whole number . See $ <nat:425> $ is trivially odd . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:W> <var:t> <var:M> <var:T> <var:k> <var:A> <var:R> <var:r> : nat , Nat . odd ( <nat:232> * <var:A> + <nat:340> * <var:T> + <nat:204> * <var:R> + <nat:38> * <var:t> + <nat:126> * <var:r> + <nat:64> * <var:W> + <nat:330> * <var:M> + <nat:152> * <var:k> + <nat:425> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:232> = true ) . { auto . } assert ( <genH> : Nat . even <nat:340> = true ) . { auto . } assert ( <genH> : Nat . even <nat:204> = true ) . { auto . } assert ( <genH> : Nat . even <nat:38> = true ) . { auto . } assert ( <genH> : Nat . even <nat:126> = true ) . { auto . } assert ( <genH> : Nat . even <nat:64> = true ) . { auto . } assert ( <genH> : Nat . even <nat:330> = true ) . { auto . } assert ( <genH> : Nat . even <nat:152> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:232> * <var:A> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:340> * <var:T> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:204> * <var:R> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:38> * <var:t> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:126> * <var:r> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:64> * <var:W> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:330> * <var:M> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:152> * <var:k> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . assert ( <genH> : Nat . odd <nat:425> = true ) . { auto . } rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 