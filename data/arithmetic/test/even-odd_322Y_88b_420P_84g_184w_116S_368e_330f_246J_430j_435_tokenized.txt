\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} With all positive terms $ <var:f> $ , $ <var:w> $ , $ <var:b> $ , $ <var:P> $ , $ <var:e> $ , $ <var:Y> $ , $ <var:j> $ , $ <var:S> $ , $ <var:g> $ , and $ <var:J> $ the expression $ <var:b> * <nat:88> + <nat:184> * <var:w> + <nat:246> * <var:J> + <nat:330> * <var:f> + <var:P> * <nat:420> + <nat:435> + <nat:116> * <var:S> + <var:e> * <nat:368> + <nat:430> * <var:j> + <var:Y> * <nat:322> + <var:g> * <nat:84> $ must be odd . \end{theorem} \begin{proof} Remember that $ <var:Y> * <nat:322> + <nat:88> * <var:b> + <nat:420> * <var:P> + <nat:84> * <var:g> + <var:w> * <nat:184> + <nat:116> * <var:S> + <var:e> * <nat:368> + <var:f> * <nat:330> + <var:J> * <nat:246> + <nat:430> * <var:j> $ is trivially even , from the fact the totaling of even elements of $ \mathbb{Z}^+ $ successively with an even number is guaranteed to be even . What's more , remember the whole numbers $ <nat:322> $ , $ <nat:88> $ , $ <nat:420> $ , $ <nat:84> $ , $ <nat:184> $ , $ <nat:116> $ , $ <nat:368> $ , $ <nat:330> $ , $ <nat:246> $ , in addition to $ <nat:430> $ will be even . So , the terms $ <nat:322> <var:Y> $ , $ <var:b> <nat:88> $ , $ <nat:420> <var:P> $ , $ <var:g> <nat:84> $ , $ <var:w> <nat:184> $ , $ <nat:116> <var:S> $ , $ <nat:368> <var:e> $ , $ <nat:330> <var:f> $ , $ <var:J> <nat:246> $ , in addition to $ <var:j> <nat:430> $ is guaranteed to be even additionally . and moreover by reason that taking the product of even positive integers with an arbitrary element of $ \mathbb{N} $ will be even . The totaling between an even positive integer and an odd element of $ \mathbb{Z}^+ $ must be odd . We know that $ <nat:435> $ is obviously an odd integer . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:f> <var:w> <var:b> <var:P> <var:e> <var:Y> <var:j> <var:S> <var:g> <var:J> : nat , Nat . odd ( <nat:88> * <var:b> + <nat:184> * <var:w> + <nat:246> * <var:J> + <nat:330> * <var:f> + <nat:420> * <var:P> + <nat:116> * <var:S> + <nat:368> * <var:e> + <nat:430> * <var:j> + <nat:322> * <var:Y> + <nat:84> * <var:g> + <nat:435> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:322> = true ) . { auto . } assert ( <genH> : Nat . even <nat:88> = true ) . { auto . } assert ( <genH> : Nat . even <nat:420> = true ) . { auto . } assert ( <genH> : Nat . even <nat:84> = true ) . { auto . } assert ( <genH> : Nat . even <nat:184> = true ) . { auto . } assert ( <genH> : Nat . even <nat:116> = true ) . { auto . } assert ( <genH> : Nat . even <nat:368> = true ) . { auto . } assert ( <genH> : Nat . even <nat:330> = true ) . { auto . } assert ( <genH> : Nat . even <nat:246> = true ) . { auto . } assert ( <genH> : Nat . even <nat:430> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:322> * <var:Y> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:88> * <var:b> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:420> * <var:P> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:84> * <var:g> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:184> * <var:w> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:116> * <var:S> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:368> * <var:e> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:330> * <var:f> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:246> * <var:J> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:430> * <var:j> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:88> * <var:b> + <nat:184> * <var:w> + <nat:246> * <var:J> + <nat:330> * <var:f> + <nat:420> * <var:P> + <nat:116> * <var:S> + <nat:368> * <var:e> + <nat:430> * <var:j> + <nat:322> * <var:Y> + <nat:84> * <var:g> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . assert ( <genH> : Nat . odd <nat:435> = true ) . { auto . } rewrite <- Nat . negb_even . rewrite <genH> . rewrite <genH> . auto . Qed . 