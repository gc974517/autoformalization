\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Using any positive numbers $ <var:J> $ , $ <var:c> $ , and $ <var:W> $ $ <var:W> \cdot <nat:444> + <var:J> \cdot <nat:48> + <nat:241> + <nat:302> \cdot <var:c> $ will be odd . \end{theorem} \begin{proof} We prove the expression $ <nat:302> * <var:c> + <nat:241> + <nat:48> * <var:J> + <var:W> * <nat:444> $ will be odd . Remember that the expression $ <var:W> * <nat:444> + <nat:48> * <var:J> + <nat:302> * <var:c> + <nat:241> $ is odd since $ <nat:444> <var:W> + <var:c> <nat:302> + <nat:48> <var:J> $ is clearly even . Building on , recall the positive integers $ <nat:444> $ , $ <nat:302> $ , and also $ <nat:48> $ are clearly even positive integers . Hence , the products $ <var:W> <nat:444> $ , $ <nat:302> <var:c> $ , as well as $ <var:J> <nat:48> $ is guaranteed to be even in addition . Because the product between an even natural and a integer is even $ <var:W> * <nat:444> + <nat:302> * <var:c> + <var:J> * <nat:48> $ must be by itself even . The adding of even naturals with an odd number will be in itself an odd element of $ \mathbb{Z}^+ $ . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:J> <var:c> <var:W> : nat , Nat . odd ( <nat:444> * <var:W> + <nat:48> * <var:J> + <nat:302> * <var:c> + <nat:241> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:444> = true ) . { auto . } assert ( <genH> : Nat . even <nat:302> = true ) . { auto . } assert ( <genH> : Nat . even <nat:48> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:444> * <var:W> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:302> * <var:c> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:48> * <var:J> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:444> * <var:W> + <nat:48> * <var:J> + <nat:302> * <var:c> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . auto . Qed . 