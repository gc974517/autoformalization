\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:10> <var:O> + <nat:384> <var:D> + <var:H> <nat:492> + <var:W> <nat:120> + <nat:59> $ is guaranteed to be odd . \end{theorem} \begin{proof} We employ the fact that the formula $ <var:D> \cdot <nat:384> + <nat:59> + <var:O> \cdot <nat:10> + <nat:492> \cdot <var:H> + <var:W> \cdot <nat:120> $ is trivially odd from the knowledge the expression $ <nat:120> \cdot <var:W> + <nat:492> \cdot <var:H> + <var:D> \cdot <nat:384> + <nat:10> \cdot <var:O> $ is clearly even . The leading terms $ <nat:10> $ , $ <nat:492> $ , additionally $ <nat:120> $ are even elements of $ \mathbb{Z}^+ $ . For this reason , the products $ <nat:10> \times <var:O> $ , $ <var:H> \times <nat:492> $ , and moreover $ <nat:120> \times <var:W> $ must be even at the same time . Further , we know that $ <nat:384> \times <var:D> $ is clearly an even natural by reason that the whole number $ <nat:384> $ is known as even . Since the totaling between an even positive integer and even whole numbers is clearly an even element of $ \mathbb{N} $ , and likewise from the knowledge taking the product between even integers with an arbitrary number in $ \mathbb{Z}^+ $ will be an even element of $ \mathbb{N} $ . See that $ <nat:59> $ is known as an odd element of $ \mathbb{Z}^+ $ . We check the main result holds . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:O> <var:D> <var:H> <var:W> : nat , Nat . odd ( <nat:10> * <var:O> + <nat:384> * <var:D> + <nat:492> * <var:H> + <nat:120> * <var:W> + <nat:59> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:10> = true ) . { auto . } assert ( <genH> : Nat . even <nat:492> = true ) . { auto . } assert ( <genH> : Nat . even <nat:120> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:10> * <var:O> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:492> * <var:H> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:120> * <var:W> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:384> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:384> * <var:D> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:10> * <var:O> + <nat:384> * <var:D> + <nat:492> * <var:H> + <nat:120> * <var:W> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } assert ( <genH> : Nat . odd <nat:59> = true ) . { auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . rewrite <genH> . auto . Qed . 