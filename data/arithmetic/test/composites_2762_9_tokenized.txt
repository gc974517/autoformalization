\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:14826240> $ is $ <var:T> \cdot <var:h> \cdot <var:S> \cdot <var:O> \cdot <var:x> \cdot <var:e> \cdot <var:c> \cdot <var:Q> \cdot <var:K> $ given $ <var:K> $ , $ <var:h> $ , $ <var:O> $ , $ <var:c> $ , $ <var:e> $ , $ <var:Q> $ , $ <var:T> $ , $ <var:S> $ , and $ <var:x> $ so that $ <var:Q> $ , $ <var:O> $ , $ <var:S> $ , $ <var:x> $ , $ <var:h> $ , $ <var:c> $ , $ <var:e> $ , $ <var:K> $ , and $ <var:T> > <nat:1> $ . \end{theorem} \begin{proof} We show the result is valid for $ <nat:14826240> = <nat:11> \times <nat:2> \times <nat:13> \times <nat:9> \times <nat:4> \times <nat:10> \times <nat:8> \times <nat:3> \times <nat:6> $ plus seeing that $ <nat:9> $ , $ <nat:11> $ , $ <nat:13> $ , $ <nat:4> $ , $ <nat:6> $ , $ <nat:10> $ , $ <nat:2> $ , $ <nat:8> $ and $ <nat:3> > <nat:1> $ . Hence , $ <nat:14826240> = <var:T> * <var:Q> * <var:K> * <var:x> * <var:O> * <var:e> * <var:h> * <var:S> * <var:c> $ has been validated . \end{proof} \end{document} 
~
Require Import Lia . Theorem <genP:1> : exists <var:K> <var:h> <var:O> <var:c> <var:e> <var:Q> <var:T> <var:S> <var:x> : nat , ( <nat:14826240> = <var:T> * <var:h> * <var:S> * <var:O> * <var:x> * <var:e> * <var:c> * <var:Q> * <var:K> ) /\ ( <var:Q> > <nat:1> ) /\ ( <var:O> > <nat:1> ) /\ ( <var:S> > <nat:1> ) /\ ( <var:x> > <nat:1> ) /\ ( <var:h> > <nat:1> ) /\ ( <var:c> > <nat:1> ) /\ ( <var:e> > <nat:1> ) /\ ( <var:K> > <nat:1> ) /\ ( <var:T> > <nat:1> ) . Proof . exists <nat:8> . exists <nat:10> . exists <nat:9> . exists <nat:11> . exists <nat:2> . exists <nat:6> . exists <nat:3> . exists <nat:4> . exists <nat:13> . assert ( <genH> : <nat:9> > <nat:1> ) . { lia . } assert ( <genH> : <nat:11> > <nat:1> ) . { lia . } assert ( <genH> : <nat:13> > <nat:1> ) . { lia . } assert ( <genH> : <nat:4> > <nat:1> ) . { lia . } assert ( <genH> : <nat:6> > <nat:1> ) . { lia . } assert ( <genH> : <nat:10> > <nat:1> ) . { lia . } assert ( <genH> : <nat:2> > <nat:1> ) . { lia . } assert ( <genH> : <nat:8> > <nat:1> ) . { lia . } assert ( <genH> : <nat:3> > <nat:1> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 