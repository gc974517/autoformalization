\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \newtheorem{definition}{Definition} \begin{document} \begin{definition} Under the condition there exist $ <var:P> $ , $ <var:C> $ , $ <var:I> $ , $ <var:L> $ , $ <var:d> $ , $ <var:e> \in \mathbb{N} $ then let that some integer $ <var:M> $ will be called a <def:six-composite> number when $ <var:M> = <var:e> \cdot <var:C> \cdot <var:d> \cdot <var:P> \cdot <var:I> \cdot <var:L> $ as well as larger than or equivalent to <nat:2> . \end{definition} \begin{theorem} $ <nat:741312> = <var:M> $ is a <def:six-composite> whole number . \end{theorem} \begin{proof} Take $ <var:C> = <nat:13> $ , $ <var:P> = <nat:6> $ , $ <var:e> = <nat:12> $ , $ <var:d> = <nat:9> $ , $ <var:I> = <nat:8> $ , and $ <var:L> = <nat:11> $ . Note that $ <nat:9> $ , $ <nat:13> $ , $ <nat:12> $ , $ <nat:6> $ , $ <nat:8> $ , $ <nat:11> \geq <nat:2> $ . Thus , $ <nat:741312> = <var:I> * <var:P> * <var:d> * <var:L> * <var:e> * <var:C> $ has been verified . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:six-composite> ( <var:M> : nat ) := exists <var:P> <var:C> <var:I> <var:L> <var:d> <var:e> : nat , ( <var:M> = <var:e> * <var:C> * <var:d> * <var:P> * <var:I> * <var:L> ) /\ ( <var:P> >= <nat:2> ) /\ ( <var:C> >= <nat:2> ) /\ ( <var:I> >= <nat:2> ) /\ ( <var:L> >= <nat:2> ) /\ ( <var:d> >= <nat:2> ) /\ ( <var:e> >= <nat:2> ) . Theorem <genP:1> : <def:six-composite> <nat:741312> . Proof . unfold <def:six-composite> . exists <nat:6> . exists <nat:13> . exists <nat:8> . exists <nat:11> . exists <nat:9> . exists <nat:12> . assert ( <genH> : <nat:9> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:13> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:12> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:6> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:8> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:11> >= <nat:2> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 