\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:O> <nat:432> + <nat:132> <var:X> + <var:e> <nat:436> + <var:d> <nat:114> + <var:C> <nat:32> + <var:F> <nat:258> + <nat:479> + <var:U> <nat:398> + <var:B> <nat:322> + <var:P> <nat:166> $ is odd . \end{theorem} \begin{proof} The leading terms $ <nat:132> $ , $ <nat:32> $ , $ <nat:398> $ , $ <nat:436> $ , $ <nat:322> $ , $ <nat:166> $ , $ <nat:432> $ , and likewise $ <nat:114> $ are clearly even Building on , the integer $ <nat:258> $ is clearly even From the fact multiplying of an even element of $ \mathbb{Z}^+ $ and a element of $ \mathbb{Z}^+ $ must be even , as a result the lemma is true . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:O> <var:X> <var:e> <var:d> <var:C> <var:F> <var:U> <var:B> <var:P> : nat , Nat . odd ( <nat:432> * <var:O> + <nat:132> * <var:X> + <nat:436> * <var:e> + <nat:114> * <var:d> + <nat:32> * <var:C> + <nat:258> * <var:F> + <nat:398> * <var:U> + <nat:322> * <var:B> + <nat:166> * <var:P> + <nat:479> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:132> = true ) . { auto . } assert ( <genH> : Nat . even <nat:32> = true ) . { auto . } assert ( <genH> : Nat . even <nat:398> = true ) . { auto . } assert ( <genH> : Nat . even <nat:436> = true ) . { auto . } assert ( <genH> : Nat . even <nat:322> = true ) . { auto . } assert ( <genH> : Nat . even <nat:166> = true ) . { auto . } assert ( <genH> : Nat . even <nat:432> = true ) . { auto . } assert ( <genH> : Nat . even <nat:114> = true ) . { auto . } assert ( <genH> : Nat . even <nat:258> = true ) . { auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . repeat rewrite Nat . even_mul . rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 