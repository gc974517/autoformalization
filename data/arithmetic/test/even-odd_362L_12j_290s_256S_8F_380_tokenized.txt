\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:s> \cdot <nat:290> + <nat:8> \cdot <var:F> + <nat:380> + <var:S> \cdot <nat:256> + <var:j> \cdot <nat:12> + <var:L> \cdot <nat:362> $ is guaranteed to be even . \end{theorem} \begin{proof} It can be checked that the sum $ <var:S> \cdot <nat:256> + <nat:380> + <nat:8> \cdot <var:F> + <var:s> \cdot <nat:290> + <var:j> \cdot <nat:12> + <nat:362> \cdot <var:L> $ is even . Take note that $ <nat:380> $ is guaranteed to be an even positive integer . The products $ <nat:290> \times <var:s> $ and likewise $ <nat:12> \times <var:j> $ must be even naturals because the leading terms $ <nat:290> $ and $ <nat:12> $ are guaranteed to be even . Likewise , the terms $ <nat:8> \times <var:F> $ and also $ <var:S> \times <nat:256> $ are even because the natural numbers $ <nat:8> $ in addition to $ <nat:256> $ are guaranteed to be even positive integers . Additionally , observe that the product $ <var:L> \times <nat:362> $ is known as even since multiplying between an even natural number with an arbitrary element of $ \mathbb{Z}^+ $ is guaranteed to be by its very nature an even natural number plus the whole number $ <nat:362> $ is clearly trivially an even number . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:s> <var:F> <var:S> <var:j> <var:L> : nat , Nat . even ( <nat:290> * <var:s> + <nat:8> * <var:F> + <nat:256> * <var:S> + <nat:12> * <var:j> + <nat:362> * <var:L> + <nat:380> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:380> = true ) . { auto . } assert ( <genH> : Nat . even <nat:290> = true ) . { auto . } assert ( <genH> : Nat . even <nat:12> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:290> * <var:s> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:12> * <var:j> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:8> = true ) . { auto . } assert ( <genH> : Nat . even <nat:256> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:8> * <var:F> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:256> * <var:S> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:362> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:362> * <var:L> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 