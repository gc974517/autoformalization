\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:62> * <var:f> + <nat:312> * <var:g> + <nat:221> + <var:q> * <nat:296> + <nat:12> * <var:N> + <nat:92> * <var:D> + <nat:370> * <var:y> + <var:u> * <nat:380> + <nat:128> * <var:s> + <nat:344> * <var:d> $ is odd . \end{theorem} \begin{proof} The pairs $ <var:d> * <nat:344> $ plus $ <nat:296> * <var:q> $ are clearly even elements of $ \mathbb{Z}^+ $ . The terms $ <var:f> * <nat:62> $ , $ <nat:12> * <var:N> $ , $ <nat:92> * <var:D> $ , plus $ <var:u> * <nat:380> $ are known as even by reason that the multiplication of an even positive integer and an arbitrary number in $ \mathbb{Z}^+ $ is even . Building on , see that the terms $ <var:g> * <nat:312> $ and likewise $ <nat:370> * <var:y> $ will be even natural numbers . In addition to this , the product $ <nat:128> * <var:s> $ is known as an even element of $ \mathbb{Z}^+ $ . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:f> <var:g> <var:q> <var:N> <var:D> <var:y> <var:u> <var:s> <var:d> : nat , Nat . odd ( <nat:62> * <var:f> + <nat:312> * <var:g> + <nat:296> * <var:q> + <nat:12> * <var:N> + <nat:92> * <var:D> + <nat:370> * <var:y> + <nat:380> * <var:u> + <nat:128> * <var:s> + <nat:344> * <var:d> + <nat:221> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:344> * <var:d> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:296> * <var:q> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:62> * <var:f> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:12> * <var:N> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:92> * <var:D> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:380> * <var:u> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:312> * <var:g> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:370> * <var:y> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:128> * <var:s> ) = true ) . { rewrite Nat . even_mul . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 