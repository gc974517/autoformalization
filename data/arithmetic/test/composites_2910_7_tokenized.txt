\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Allow $ <var:L> $ , $ <var:d> $ , $ <var:C> $ , $ <var:e> $ , $ <var:I> $ , $ <var:m> $ , $ <var:j> \in \mathbb{N} $ so that $ <var:d> $ , $ <var:C> $ , $ <var:e> $ , $ <var:m> $ , $ <var:j> $ , $ <var:L> $ , and $ <var:I> $ greater than or equal to <nat:2> as well as where the number <nat:748440> is the product between natural numbers $ <var:L> $ , $ <var:d> $ , $ <var:C> $ , $ <var:e> $ , $ <var:I> $ , $ <var:m> $ , and $ <var:j> \in \mathbb{Z}^+ $ . \end{theorem} \begin{proof} Let $ <var:j> = <nat:3> $ , $ <var:C> = <nat:7> $ , $ <var:e> = <nat:6> $ , $ <var:m> = <nat:12> $ , $ <var:L> = <nat:11> $ , $ <var:I> = <nat:9> $ and $ <var:d> = <nat:5> $ . We justify $ <var:C> * <var:e> * <var:d> * <var:L> * <var:I> * <var:m> * <var:j> = <nat:748440> $ . Plus observe that $ <var:L> = <nat:11> $ , $ <var:j> = <nat:3> $ , $ <var:d> = <nat:5> $ , $ <var:e> = <nat:6> $ , $ <var:m> = <nat:12> $ , $ <var:C> = <nat:7> $ and $ <var:I> = <nat:9> $ are larger than or equal to <nat:2> . This produces our thesis is true . \end{proof} \end{document} 
~
Require Import Lia . Theorem <genP:1> : exists <var:L> <var:d> <var:C> <var:e> <var:I> <var:m> <var:j> : nat , ( <var:d> >= <nat:2> ) /\ ( <var:C> >= <nat:2> ) /\ ( <var:e> >= <nat:2> ) /\ ( <var:m> >= <nat:2> ) /\ ( <var:j> >= <nat:2> ) /\ ( <var:L> >= <nat:2> ) /\ ( <var:I> >= <nat:2> ) /\ ( <nat:748440> = <var:L> * <var:d> * <var:C> * <var:e> * <var:I> * <var:m> * <var:j> ) . Proof . exists <nat:11> . exists <nat:5> . exists <nat:7> . exists <nat:6> . exists <nat:9> . exists <nat:12> . exists <nat:3> . assert ( <genH> : <nat:11> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:3> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:5> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:6> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:12> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:7> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:9> >= <nat:2> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 