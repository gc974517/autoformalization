\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:346> \times <var:t> + <var:c> \times <nat:426> + <nat:440> \times <var:I> + <var:J> \times <nat:492> + <nat:312> \times <var:R> + <nat:315> + <var:o> \times <nat:458> $ will be odd given some $ <var:R> $ , $ <var:o> $ , $ <var:c> $ , $ <var:J> $ , $ <var:I> $ , and $ <var:t> \in \mathbb{N} $ . \end{theorem} \begin{proof} In addition , the products $ <var:t> \cdot <nat:346> $ , $ <nat:426> \cdot <var:c> $ , $ <nat:440> \cdot <var:I> $ , $ <nat:492> \cdot <var:J> $ , $ <var:R> \cdot <nat:312> $ , and moreover $ <var:o> \cdot <nat:458> $ must be even whole numbers . This claim is proven by reason that the coefficients $ <nat:346> $ , $ <nat:426> $ , $ <nat:440> $ , $ <nat:492> $ , $ <nat:312> $ , and moreover $ <nat:458> $ are known as fundamentally even naturals . The summation between even integers collectively with an odd number in $ \mathbb{Z}^+ $ must be by its very nature an odd number in $ \mathbb{Z}^+ $ . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:R> <var:o> <var:c> <var:J> <var:I> <var:t> : nat , Nat . odd ( <nat:346> * <var:t> + <nat:426> * <var:c> + <nat:440> * <var:I> + <nat:492> * <var:J> + <nat:312> * <var:R> + <nat:458> * <var:o> + <nat:315> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:346> = true ) . { auto . } assert ( <genH> : Nat . even <nat:426> = true ) . { auto . } assert ( <genH> : Nat . even <nat:440> = true ) . { auto . } assert ( <genH> : Nat . even <nat:492> = true ) . { auto . } assert ( <genH> : Nat . even <nat:312> = true ) . { auto . } assert ( <genH> : Nat . even <nat:458> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:346> * <var:t> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:426> * <var:c> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:440> * <var:I> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:492> * <var:J> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:312> * <var:R> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:458> * <var:o> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 