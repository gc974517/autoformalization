\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:134> \times <var:T> + <nat:132> \times <var:y> + <nat:258> \times <var:E> + <nat:230> \times <var:w> + <nat:293> + <var:I> \times <nat:190> + <nat:198> \times <var:Q> + <var:s> \times <nat:194> + <var:m> \times <nat:200> $ will be odd for any natural numbers $ <var:y> $ , $ <var:E> $ , $ <var:T> $ , $ <var:s> $ , $ <var:I> $ , $ <var:Q> $ , $ <var:w> $ , and $ <var:m> $ . \end{theorem} \begin{proof} The coefficient $ <nat:194> $ is known as an even positive integer . Consequently , $ <nat:194> \times <var:s> $ is guaranteed to be even in addition . $ <nat:132> \times <var:y> $ is even . This claim is proven by reason that the whole number $ <nat:132> $ is clearly even . On top of this , the pair $ <var:w> \times <nat:230> $ is obviously an even whole number . This claim is proven since taking the product between an even number and an arbitrary natural number must be trivially an even number . This claim is proven since the integer $ <nat:230> $ is an even element of $ \mathbb{Z}^+ $ . What's more , the product $ <var:T> \times <nat:134> $ is known to be an even integer as a consequence that the leading term $ <nat:134> $ is obviously by definition an even element of $ \mathbb{Z}^+ $ . The natural number $ <nat:190> $ is guaranteed to be even . Thus , $ <var:I> \times <nat:190> $ is even in addition . Remember that the term $ <nat:258> \times <var:E> $ is obviously an even whole number . This must be true by reason that multiplying of an even whole number with some number is even as well as the number $ <nat:258> $ is trivially an even number . Likewise , we know that the whole number $ <nat:198> $ is trivially even . Accordingly , the product $ <nat:198> \times <var:Q> $ is even also . $ <var:m> \times <nat:200> $ is clearly an even number in $ \mathbb{Z}^+ $ from the knowledge the product of an even element of $ \mathbb{N} $ and any number in $ \mathbb{N} $ is guaranteed to be even as well as the integer $ <nat:200> $ is known to be an even natural . We show $ <nat:198> \cdot <var:Q> + <nat:194> \cdot <var:s> + <nat:230> \cdot <var:w> + <nat:132> \cdot <var:y> + <var:I> \cdot <nat:190> + <nat:134> \cdot <var:T> + <nat:200> \cdot <var:m> + <nat:293> + <nat:258> \cdot <var:E> $ will be odd . Take note that the totaling between even whole numbers successively with an odd whole number is odd . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:y> <var:E> <var:T> <var:s> <var:I> <var:Q> <var:w> <var:m> : nat , Nat . odd ( <nat:134> * <var:T> + <nat:132> * <var:y> + <nat:258> * <var:E> + <nat:230> * <var:w> + <nat:190> * <var:I> + <nat:198> * <var:Q> + <nat:194> * <var:s> + <nat:200> * <var:m> + <nat:293> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:194> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:194> * <var:s> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:132> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:132> * <var:y> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:230> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:230> * <var:w> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:134> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:134> * <var:T> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:190> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:190> * <var:I> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:258> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:258> * <var:E> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:198> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:198> * <var:Q> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:200> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:200> * <var:m> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 