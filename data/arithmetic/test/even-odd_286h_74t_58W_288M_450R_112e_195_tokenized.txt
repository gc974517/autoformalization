\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:h> \times <nat:286> + <nat:74> \times <var:t> + <var:W> \times <nat:58> + <nat:288> \times <var:M> + <var:R> \times <nat:450> + <nat:112> \times <var:e> + <nat:195> $ must be odd for all $ <var:M> $ , $ <var:e> $ , $ <var:R> $ , $ <var:h> $ , $ <var:W> $ , and $ <var:t> \in \mathbb{N} $ . \end{theorem} \begin{proof} In addition to this , the pairs $ <var:h> <nat:286> $ , $ <var:t> <nat:74> $ , $ <nat:58> <var:W> $ , $ <nat:288> <var:M> $ , $ <nat:450> <var:R> $ , $ <var:e> <nat:112> $ , are guaranteed to be even . This is true by reason that the product of an even number in $ \mathbb{N} $ and a element of $ \mathbb{Z}^+ $ is even . This fact is true as a consequence that the natural numbers $ <nat:286> $ , $ <nat:74> $ , $ <nat:58> $ , $ <nat:288> $ , $ <nat:450> $ , $ <nat:112> $ , are trivially in themselves even numbers in $ \mathbb{Z}^+ $ . The adding between an even natural number and an odd natural must be odd . See that $ <nat:195> $ is odd . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:M> <var:e> <var:R> <var:h> <var:W> <var:t> : nat , Nat . odd ( <nat:286> * <var:h> + <nat:74> * <var:t> + <nat:58> * <var:W> + <nat:288> * <var:M> + <nat:450> * <var:R> + <nat:112> * <var:e> + <nat:195> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:286> = true ) . { auto . } assert ( <genH> : Nat . even <nat:74> = true ) . { auto . } assert ( <genH> : Nat . even <nat:58> = true ) . { auto . } assert ( <genH> : Nat . even <nat:288> = true ) . { auto . } assert ( <genH> : Nat . even <nat:450> = true ) . { auto . } assert ( <genH> : Nat . even <nat:112> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:286> * <var:h> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:74> * <var:t> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:58> * <var:W> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:288> * <var:M> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:450> * <var:R> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:112> * <var:e> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . assert ( <genH> : Nat . odd <nat:195> = true ) . { auto . } rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 