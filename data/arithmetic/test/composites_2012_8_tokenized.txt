\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:777600> = <var:L> * <var:n> * <var:v> * <var:l> * <var:M> * <var:e> * <var:P> * <var:R> $ given $ <var:n> $ , $ <var:l> $ , $ <var:P> $ , $ <var:L> $ , $ <var:v> $ , $ <var:e> $ , $ <var:M> $ and $ <var:R> $ satisfying the condition that $ <var:L> $ , $ <var:R> $ , $ <var:e> $ , $ <var:l> $ , $ <var:P> $ , $ <var:n> $ , $ <var:v> $ and $ <var:M> \geq <nat:2> $ . \end{theorem} \begin{proof} Let $ <var:v> = <nat:10> $ , $ <var:l> = <nat:6> $ , $ <var:L> = <nat:4> $ , $ <var:e> = <nat:9> $ , $ <var:M> = <nat:12> $ , $ <var:R> = <nat:3> $ , $ <var:n> = <nat:5> $ , $ <var:P> = <nat:2> $ . We justify our claim holds in view of $ <nat:6> $ , $ <nat:2> $ , $ <nat:3> $ , $ <nat:10> $ , $ <nat:5> $ , $ <nat:12> $ , $ <nat:9> $ , $ <nat:4> \geq <nat:2> $ and considering $ <nat:777600> = <var:R> * <var:e> * <var:M> * <var:v> * <var:P> * <var:n> * <var:l> * <var:L> $ . Thus , $ <var:n> \cdot <var:v> \cdot <var:L> \cdot <var:e> \cdot <var:M> \cdot <var:R> \cdot <var:l> \cdot <var:P> = <nat:777600> $ has been validated . \end{proof} \end{document} 
~
Require Import Lia . Theorem <genP:1> : exists <var:n> <var:l> <var:P> <var:L> <var:v> <var:e> <var:M> <var:R> : nat , ( <nat:777600> = <var:L> * <var:n> * <var:v> * <var:l> * <var:M> * <var:e> * <var:P> * <var:R> ) /\ ( <var:L> >= <nat:2> ) /\ ( <var:R> >= <nat:2> ) /\ ( <var:e> >= <nat:2> ) /\ ( <var:l> >= <nat:2> ) /\ ( <var:P> >= <nat:2> ) /\ ( <var:n> >= <nat:2> ) /\ ( <var:v> >= <nat:2> ) /\ ( <var:M> >= <nat:2> ) . Proof . exists <nat:5> . exists <nat:6> . exists <nat:2> . exists <nat:4> . exists <nat:10> . exists <nat:9> . exists <nat:12> . exists <nat:3> . assert ( <genH> : <nat:6> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:2> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:3> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:10> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:5> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:12> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:9> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:4> >= <nat:2> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 