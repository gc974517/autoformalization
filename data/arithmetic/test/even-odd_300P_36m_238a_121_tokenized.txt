\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:238> <var:a> + <var:m> <nat:36> + <nat:300> <var:P> + <nat:121> $ is guaranteed to be odd . \end{theorem} \begin{proof} It can be demonstrated that this main result is proven . Our theorem is true because $ <var:m> * <nat:36> + <nat:238> * <var:a> + <nat:300> * <var:P> $ is known to be even , by reason that the totaling between even positive integers concurrently with an even whole number must be even . Recall that the pair $ <nat:300> <var:P> $ is known to be even . This claim is true as a consequence that the integer $ <nat:300> $ is obviously even . On top of this , we know the pair $ <nat:36> <var:m> $ is known to be an even natural as a consequence that the integer $ <nat:36> $ is known to be obviously an even number . See that the positive integer $ <nat:238> $ is clearly an even element of $ \mathbb{Z}^+ $ . Accordingly , the product $ <var:a> <nat:238> $ is guaranteed to be even as well . The summing between even integers together and an odd element of $ \mathbb{N} $ is an odd number in $ \mathbb{Z}^+ $ . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:a> <var:m> <var:P> : nat , Nat . odd ( <nat:238> * <var:a> + <nat:36> * <var:m> + <nat:300> * <var:P> + <nat:121> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:300> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:300> * <var:P> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:36> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:36> * <var:m> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:238> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:238> * <var:a> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:238> * <var:a> + <nat:36> * <var:m> + <nat:300> * <var:P> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . auto . Qed . 