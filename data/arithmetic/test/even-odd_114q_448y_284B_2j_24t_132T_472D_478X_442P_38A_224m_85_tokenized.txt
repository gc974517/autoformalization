\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:114> * <var:q> + <nat:85> + <nat:448> * <var:y> + <var:B> * <nat:284> + <var:j> * <nat:2> + <nat:24> * <var:t> + <nat:132> * <var:T> + <var:D> * <nat:472> + <nat:478> * <var:X> + <var:P> * <nat:442> + <nat:38> * <var:A> + <var:m> * <nat:224> $ will be odd using any integers $ <var:T> $ , $ <var:P> $ , $ <var:y> $ , $ <var:X> $ , $ <var:D> $ , $ <var:t> $ , $ <var:m> $ , $ <var:A> $ , $ <var:q> $ , $ <var:j> $ , and $ <var:B> $ . \end{theorem} \begin{proof} Notice the coefficients $ <nat:114> $ , $ <nat:448> $ , $ <nat:2> $ , $ <nat:472> $ , in addition to $ <nat:478> $ are even positive integers We know the natural numbers $ <nat:132> $ , $ <nat:284> $ , $ <nat:38> $ , $ <nat:224> $ , and $ <nat:24> $ are guaranteed to be even whole numbers The leading term $ <nat:442> $ is trivially even \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:T> <var:P> <var:y> <var:X> <var:D> <var:t> <var:m> <var:A> <var:q> <var:j> <var:B> : nat , Nat . odd ( <nat:114> * <var:q> + <nat:448> * <var:y> + <nat:284> * <var:B> + <nat:2> * <var:j> + <nat:24> * <var:t> + <nat:132> * <var:T> + <nat:472> * <var:D> + <nat:478> * <var:X> + <nat:442> * <var:P> + <nat:38> * <var:A> + <nat:224> * <var:m> + <nat:85> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:114> = true ) . { auto . } assert ( <genH> : Nat . even <nat:448> = true ) . { auto . } assert ( <genH> : Nat . even <nat:2> = true ) . { auto . } assert ( <genH> : Nat . even <nat:472> = true ) . { auto . } assert ( <genH> : Nat . even <nat:478> = true ) . { auto . } assert ( <genH> : Nat . even <nat:132> = true ) . { auto . } assert ( <genH> : Nat . even <nat:284> = true ) . { auto . } assert ( <genH> : Nat . even <nat:38> = true ) . { auto . } assert ( <genH> : Nat . even <nat:224> = true ) . { auto . } assert ( <genH> : Nat . even <nat:24> = true ) . { auto . } assert ( <genH> : Nat . even <nat:442> = true ) . { auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . repeat rewrite Nat . even_mul . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 