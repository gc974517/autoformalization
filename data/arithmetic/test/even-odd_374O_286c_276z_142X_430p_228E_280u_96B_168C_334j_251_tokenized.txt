\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:251> + <var:O> <nat:374> + <nat:286> <var:c> + <var:z> <nat:276> + <nat:142> <var:X> + <nat:430> <var:p> + <var:E> <nat:228> + <nat:280> <var:u> + <var:B> <nat:96> + <nat:168> <var:C> + <var:j> <nat:334> $ is odd using some whole numbers $ <var:E> $ , $ <var:p> $ , $ <var:c> $ , $ <var:C> $ , $ <var:z> $ , $ <var:B> $ , $ <var:j> $ , $ <var:O> $ , $ <var:X> $ , and $ <var:u> $ . \end{theorem} \begin{proof} Recall the pairs $ <nat:228> \times <var:E> $ plus $ <nat:374> \times <var:O> $ are obviously even numbers . Additionally , the products $ <var:c> \times <nat:286> $ , $ <nat:334> \times <var:j> $ , $ <var:C> \times <nat:168> $ , $ <var:z> \times <nat:276> $ , $ <nat:430> \times <var:p> $ , as well as $ <var:B> \times <nat:96> $ are trivially even numbers in $ \mathbb{N} $ since taking the product of an even element of $ \mathbb{N} $ with an arbitrary positive integer is guaranteed to be even . Likewise , the product $ <var:X> \times <nat:142> $ is obviously an even number . The term $ <var:u> \times <nat:280> $ is obviously an even integer . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:E> <var:p> <var:c> <var:C> <var:z> <var:B> <var:j> <var:O> <var:X> <var:u> : nat , Nat . odd ( <nat:374> * <var:O> + <nat:286> * <var:c> + <nat:276> * <var:z> + <nat:142> * <var:X> + <nat:430> * <var:p> + <nat:228> * <var:E> + <nat:280> * <var:u> + <nat:96> * <var:B> + <nat:168> * <var:C> + <nat:334> * <var:j> + <nat:251> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:228> * <var:E> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:374> * <var:O> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:286> * <var:c> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:334> * <var:j> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:168> * <var:C> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:276> * <var:z> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:430> * <var:p> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:96> * <var:B> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:142> * <var:X> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:280> * <var:u> ) = true ) . { rewrite Nat . even_mul . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 