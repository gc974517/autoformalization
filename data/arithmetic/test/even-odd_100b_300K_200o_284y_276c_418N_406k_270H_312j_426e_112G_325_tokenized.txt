\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:100> * <var:b> + <var:K> * <nat:300> + <var:o> * <nat:200> + <var:y> * <nat:284> + <var:c> * <nat:276> + <nat:325> + <nat:418> * <var:N> + <nat:406> * <var:k> + <var:H> * <nat:270> + <var:j> * <nat:312> + <nat:426> * <var:e> + <var:G> * <nat:112> $ will be odd using some positive numbers $ <var:j> $ , $ <var:c> $ , $ <var:k> $ , $ <var:K> $ , $ <var:o> $ , $ <var:N> $ , $ <var:y> $ , $ <var:G> $ , $ <var:e> $ , $ <var:H> $ , and $ <var:b> $ . \end{theorem} \begin{proof} See that the adding of even naturals collectively and an odd element of $ \mathbb{Z}^+ $ must be an odd whole number . Recall the leading terms $ <nat:100> $ , $ <nat:426> $ , $ <nat:300> $ , $ <nat:270> $ , $ <nat:200> $ , and moreover $ <nat:418> $ are trivially even The integers $ <nat:284> $ , $ <nat:112> $ , and also $ <nat:276> $ are trivially even numbers in $ \mathbb{N} $ We know the coefficient $ <nat:312> $ is guaranteed to be an even natural We know that the positive integer $ <nat:406> $ is known to be even Multiplying between an even element of $ \mathbb{Z}^+ $ and some element of $ \mathbb{N} $ is guaranteed to be an even natural . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:j> <var:c> <var:k> <var:K> <var:o> <var:N> <var:y> <var:G> <var:e> <var:H> <var:b> : nat , Nat . odd ( <nat:100> * <var:b> + <nat:300> * <var:K> + <nat:200> * <var:o> + <nat:284> * <var:y> + <nat:276> * <var:c> + <nat:418> * <var:N> + <nat:406> * <var:k> + <nat:270> * <var:H> + <nat:312> * <var:j> + <nat:426> * <var:e> + <nat:112> * <var:G> + <nat:325> ) = true . Proof . intros . rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . assert ( <genH> : Nat . even <nat:100> = true ) . { auto . } assert ( <genH> : Nat . even <nat:426> = true ) . { auto . } assert ( <genH> : Nat . even <nat:300> = true ) . { auto . } assert ( <genH> : Nat . even <nat:270> = true ) . { auto . } assert ( <genH> : Nat . even <nat:200> = true ) . { auto . } assert ( <genH> : Nat . even <nat:418> = true ) . { auto . } assert ( <genH> : Nat . even <nat:284> = true ) . { auto . } assert ( <genH> : Nat . even <nat:112> = true ) . { auto . } assert ( <genH> : Nat . even <nat:276> = true ) . { auto . } assert ( <genH> : Nat . even <nat:312> = true ) . { auto . } assert ( <genH> : Nat . even <nat:406> = true ) . { auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . repeat rewrite Nat . even_mul . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 