\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:328> * <var:S> + <nat:100> * <var:q> + <nat:39> + <var:r> * <nat:72> + <var:g> * <nat:156> + <var:t> * <nat:254> $ will be odd . \end{theorem} \begin{proof} Adding on , take note that the pairs $ <nat:328> \cdot <var:S> $ , $ <nat:100> \cdot <var:q> $ , $ <var:r> \cdot <nat:72> $ , $ <nat:156> \cdot <var:g> $ , in addition to $ <nat:254> \cdot <var:t> $ are trivially even from the knowledge the integers $ <nat:328> $ , $ <nat:100> $ , $ <nat:72> $ , $ <nat:156> $ , as well as $ <nat:254> $ are obviously even whole numbers . Remember that $ <nat:39> $ is clearly odd . The summation between an even number in $ \mathbb{N} $ with an odd element of $ \mathbb{Z}^+ $ is guaranteed to be odd . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:S> <var:q> <var:r> <var:g> <var:t> : nat , Nat . odd ( <nat:328> * <var:S> + <nat:100> * <var:q> + <nat:72> * <var:r> + <nat:156> * <var:g> + <nat:254> * <var:t> + <nat:39> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:328> = true ) . { auto . } assert ( <genH> : Nat . even <nat:100> = true ) . { auto . } assert ( <genH> : Nat . even <nat:72> = true ) . { auto . } assert ( <genH> : Nat . even <nat:156> = true ) . { auto . } assert ( <genH> : Nat . even <nat:254> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:328> * <var:S> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:100> * <var:q> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:72> * <var:r> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:156> * <var:g> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:254> * <var:t> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . odd <nat:39> = true ) . { auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 