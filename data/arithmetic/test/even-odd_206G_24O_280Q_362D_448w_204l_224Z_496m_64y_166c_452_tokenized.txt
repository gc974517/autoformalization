\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:362> <var:D> + <nat:166> <var:c> + <nat:204> <var:l> + <nat:280> <var:Q> + <var:O> <nat:24> + <var:m> <nat:496> + <nat:64> <var:y> + <nat:448> <var:w> + <nat:452> + <nat:224> <var:Z> + <var:G> <nat:206> $ is guaranteed to be even using all terms $ <var:w> $ , $ <var:O> $ , $ <var:Z> $ , $ <var:Q> $ , $ <var:y> $ , $ <var:m> $ , $ <var:D> $ , $ <var:c> $ , $ <var:G> $ , and $ <var:l> $ . \end{theorem} \begin{proof} The expression $ <nat:362> \cdot <var:D> + <var:G> \cdot <nat:206> + <nat:452> + <nat:224> \cdot <var:Z> + <var:O> \cdot <nat:24> + <var:w> \cdot <nat:448> + <var:Q> \cdot <nat:280> + <nat:204> \cdot <var:l> + <nat:166> \cdot <var:c> + <var:y> \cdot <nat:64> + <nat:496> \cdot <var:m> $ is even from the knowledge the expression $ <var:D> <nat:362> + <nat:24> <var:O> + <var:l> <nat:204> + <var:c> <nat:166> + <var:y> <nat:64> + <var:m> <nat:496> + <nat:224> <var:Z> + <var:Q> <nat:280> + <var:w> <nat:448> + <nat:206> <var:G> $ is guaranteed to be even . The numbers $ <nat:362> $ , $ <nat:24> $ , $ <nat:204> $ , $ <nat:166> $ , $ <nat:64> $ , $ <nat:496> $ , $ <nat:224> $ , $ <nat:280> $ , $ <nat:448> $ , and likewise $ <nat:206> $ are even . In consequence , the terms $ <nat:362> <var:D> $ , $ <var:O> <nat:24> $ , $ <nat:204> <var:l> $ , $ <nat:166> <var:c> $ , $ <nat:64> <var:y> $ , $ <nat:496> <var:m> $ , $ <var:Z> <nat:224> $ , $ <nat:280> <var:Q> $ , $ <nat:448> <var:w> $ , and also $ <nat:206> <var:G> $ is guaranteed to be even in addition . The summation $ <var:G> * <nat:206> + <nat:24> * <var:O> + <var:Q> * <nat:280> + <nat:362> * <var:D> + <var:w> * <nat:448> + <var:l> * <nat:204> + <nat:224> * <var:Z> + <nat:496> * <var:m> + <nat:64> * <var:y> + <var:c> * <nat:166> $ is guaranteed to be even since the adding between even natural numbers with even natural numbers is even and since multiplying between even numbers in $ \mathbb{N} $ and a positive integer will be even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:w> <var:O> <var:Z> <var:Q> <var:y> <var:m> <var:D> <var:c> <var:G> <var:l> : nat , Nat . even ( <nat:362> * <var:D> + <nat:166> * <var:c> + <nat:204> * <var:l> + <nat:280> * <var:Q> + <nat:24> * <var:O> + <nat:496> * <var:m> + <nat:64> * <var:y> + <nat:448> * <var:w> + <nat:224> * <var:Z> + <nat:206> * <var:G> + <nat:452> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:362> = true ) . { auto . } assert ( <genH> : Nat . even <nat:24> = true ) . { auto . } assert ( <genH> : Nat . even <nat:204> = true ) . { auto . } assert ( <genH> : Nat . even <nat:166> = true ) . { auto . } assert ( <genH> : Nat . even <nat:64> = true ) . { auto . } assert ( <genH> : Nat . even <nat:496> = true ) . { auto . } assert ( <genH> : Nat . even <nat:224> = true ) . { auto . } assert ( <genH> : Nat . even <nat:280> = true ) . { auto . } assert ( <genH> : Nat . even <nat:448> = true ) . { auto . } assert ( <genH> : Nat . even <nat:206> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:362> * <var:D> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:24> * <var:O> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:204> * <var:l> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:166> * <var:c> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:64> * <var:y> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:496> * <var:m> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:224> * <var:Z> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:280> * <var:Q> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:448> * <var:w> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:206> * <var:G> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:362> * <var:D> + <nat:166> * <var:c> + <nat:204> * <var:l> + <nat:280> * <var:Q> + <nat:24> * <var:O> + <nat:496> * <var:m> + <nat:64> * <var:y> + <nat:448> * <var:w> + <nat:224> * <var:Z> + <nat:206> * <var:G> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . even_add . rewrite <genH> . auto . Qed . 