\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:176> \cdot <var:I> + <var:q> \cdot <nat:88> + <nat:154> \cdot <var:m> + <var:N> \cdot <nat:208> + <nat:468> \cdot <var:w> + <var:s> \cdot <nat:162> + <nat:262> \cdot <var:p> + <nat:481> + <var:W> \cdot <nat:326> $ must be odd . \end{theorem} \begin{proof} It can be demonstrated that the summation $ <var:w> <nat:468> + <var:m> <nat:154> + <nat:481> + <var:I> <nat:176> + <nat:326> <var:W> + <var:s> <nat:162> + <var:q> <nat:88> + <nat:262> <var:p> + <var:N> <nat:208> $ must be odd . The terms $ <nat:208> <var:N> $ , $ <var:s> <nat:162> $ , $ <nat:154> <var:m> $ , $ <nat:176> <var:I> $ , additionally $ <nat:88> <var:q> $ are clearly even . In addition to this , the product $ <var:W> <nat:326> $ is known as an even element of $ \mathbb{Z}^+ $ . This holds from the knowledge the product between an even element of $ \mathbb{Z}^+ $ with an arbitrary number is guaranteed to be even . The term $ <var:p> <nat:262> $ is known to be even . In addition , the term $ <nat:468> <var:w> $ is known to be an even number in $ \mathbb{N} $ . Remember the addition of even numbers together with an odd natural number is by definition an odd positive integer . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:I> <var:q> <var:m> <var:N> <var:w> <var:s> <var:p> <var:W> : nat , Nat . odd ( <nat:176> * <var:I> + <nat:88> * <var:q> + <nat:154> * <var:m> + <nat:208> * <var:N> + <nat:468> * <var:w> + <nat:162> * <var:s> + <nat:262> * <var:p> + <nat:326> * <var:W> + <nat:481> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:208> * <var:N> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:162> * <var:s> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:154> * <var:m> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:176> * <var:I> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:88> * <var:q> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:326> * <var:W> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:262> * <var:p> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:468> * <var:w> ) = true ) . { rewrite Nat . even_mul . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 