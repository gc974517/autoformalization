\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:209> + <nat:218> * <var:y> + <nat:370> * <var:U> + <var:h> * <nat:102> + <var:V> * <nat:220> + <nat:114> * <var:I> + <nat:72> * <var:j> + <nat:20> * <var:W> + <var:q> * <nat:364> + <nat:190> * <var:x> $ must be odd taking all natural numbers $ <var:q> $ , $ <var:h> $ , $ <var:W> $ , $ <var:j> $ , $ <var:V> $ , $ <var:y> $ , $ <var:U> $ , $ <var:I> $ , and $ <var:x> $ . \end{theorem} \begin{proof} Observe that the summation of even numbers with an odd whole number must be odd . Furthermore , we know the integers $ <nat:218> $ , $ <nat:370> $ , $ <nat:102> $ , $ <nat:220> $ , $ <nat:114> $ , $ <nat:72> $ , $ <nat:20> $ , $ <nat:364> $ , and also $ <nat:190> $ are known as even . Thus , the products $ <nat:218> \times <var:y> $ , $ <nat:370> \times <var:U> $ , $ <nat:102> \times <var:h> $ , $ <var:V> \times <nat:220> $ , $ <nat:114> \times <var:I> $ , $ <nat:72> \times <var:j> $ , $ <nat:20> \times <var:W> $ , $ <nat:364> \times <var:q> $ , as well as $ <var:x> \times <nat:190> $ must be even as well . We prove the main result is proven . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:q> <var:h> <var:W> <var:j> <var:V> <var:y> <var:U> <var:I> <var:x> : nat , Nat . odd ( <nat:218> * <var:y> + <nat:370> * <var:U> + <nat:102> * <var:h> + <nat:220> * <var:V> + <nat:114> * <var:I> + <nat:72> * <var:j> + <nat:20> * <var:W> + <nat:364> * <var:q> + <nat:190> * <var:x> + <nat:209> ) = true . Proof . intros . rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . assert ( <genH> : Nat . even <nat:218> = true ) . { auto . } assert ( <genH> : Nat . even <nat:370> = true ) . { auto . } assert ( <genH> : Nat . even <nat:102> = true ) . { auto . } assert ( <genH> : Nat . even <nat:220> = true ) . { auto . } assert ( <genH> : Nat . even <nat:114> = true ) . { auto . } assert ( <genH> : Nat . even <nat:72> = true ) . { auto . } assert ( <genH> : Nat . even <nat:20> = true ) . { auto . } assert ( <genH> : Nat . even <nat:364> = true ) . { auto . } assert ( <genH> : Nat . even <nat:190> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:218> * <var:y> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:370> * <var:U> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:102> * <var:h> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:220> * <var:V> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:114> * <var:I> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:72> * <var:j> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:20> * <var:W> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:364> * <var:q> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:190> * <var:x> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 