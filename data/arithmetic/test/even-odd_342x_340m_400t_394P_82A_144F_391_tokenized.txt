\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:394> \times <var:P> + <nat:391> + <nat:342> \times <var:x> + <var:t> \times <nat:400> + <var:F> \times <nat:144> + <nat:340> \times <var:m> + <var:A> \times <nat:82> $ is guaranteed to be odd . \end{theorem} \begin{proof} It can be demonstrated that $ <var:x> * <nat:342> + <var:A> * <nat:82> + <var:F> * <nat:144> + <nat:391> + <nat:340> * <var:m> + <nat:394> * <var:P> + <nat:400> * <var:t> $ will be odd . We know the product $ <nat:144> * <var:F> $ is known to be an even natural number . This claim holds since the multiplication between an even number and some number in $ \mathbb{Z}^+ $ is even and also the positive integer $ <nat:144> $ is guaranteed to be by definition an even natural number . The whole numbers $ <nat:394> $ , $ <nat:82> $ , as well as $ <nat:342> $ are trivially even . Consequently , the terms $ <var:P> * <nat:394> $ , $ <var:A> * <nat:82> $ , and likewise $ <var:x> * <nat:342> $ will be even in addition . What's more , the natural number $ <nat:340> $ is trivially even . Accordingly , the pair $ <nat:340> * <var:m> $ is guaranteed to be even additionally . Likewise , the term $ <nat:400> * <var:t> $ is guaranteed to be an even number in $ \mathbb{N} $ because multiplying of an even integer and any natural will be even , and is true as a consequence that the leading term $ <nat:400> $ is obviously even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:P> <var:x> <var:t> <var:F> <var:m> <var:A> : nat , Nat . odd ( <nat:394> * <var:P> + <nat:342> * <var:x> + <nat:400> * <var:t> + <nat:144> * <var:F> + <nat:340> * <var:m> + <nat:82> * <var:A> + <nat:391> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:144> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:144> * <var:F> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:394> = true ) . { auto . } assert ( <genH> : Nat . even <nat:82> = true ) . { auto . } assert ( <genH> : Nat . even <nat:342> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:394> * <var:P> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:82> * <var:A> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:342> * <var:x> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:340> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:340> * <var:m> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:400> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:400> * <var:t> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 