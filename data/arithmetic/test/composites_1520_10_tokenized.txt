\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Given we have $ <var:v> \cdot <var:c> \cdot <var:w> \cdot <var:f> \cdot <var:R> \cdot <var:M> \cdot <var:O> \cdot <var:D> \cdot <var:h> \cdot <var:L> = <var:i> $ assuming $ <var:i> \in \mathbb{N} $ as well as satisfying the condition that $ <var:f> $ , $ <var:c> $ , $ <var:M> $ , $ <var:v> $ , $ <var:L> $ , $ <var:D> $ , $ <var:w> $ , $ <var:O> $ , $ <var:R> $ , $ <var:h> \geq <nat:2> $ , denote that $ <var:i> $ is a <def:ten-composite> integer with some natural numbers $ <var:c> $ , $ <var:f> $ , $ <var:D> $ , $ <var:w> $ , $ <var:R> $ , $ <var:v> $ , $ <var:L> $ , $ <var:h> $ , $ <var:M> $ , $ <var:O> $ . For this reason $ <nat:259459200> = <var:i> $ is <def:ten-composite> . \end{theorem} \begin{proof} Recollect that a <def:ten-composite> is the product between whole numbers $ <var:f> $ , $ <var:c> $ , $ <var:D> $ , $ <var:w> $ , $ <var:L> $ , $ <var:M> $ , $ <var:h> $ , $ <var:R> $ , $ <var:v> $ , and $ <var:O> $ more than or equivalent to <nat:2> . Note $ <nat:10> $ , $ <nat:12> $ , $ <nat:11> $ , $ <nat:2> $ , $ <nat:4> $ , $ <nat:13> $ , $ <nat:7> $ , $ <nat:9> $ , $ <nat:6> $ , and $ <nat:5> $ are larger than or equivalent to <nat:2> . In addition notice as well $ <var:O> \cdot <var:c> \cdot <var:D> \cdot <var:R> \cdot <var:M> \cdot <var:v> \cdot <var:h> \cdot <var:w> \cdot <var:L> \cdot <var:f> = <nat:259459200> $ shows $ <var:R> = <nat:11> $ , $ <var:O> = <nat:7> $ , $ <var:L> = <nat:10> $ , $ <var:M> = <nat:5> $ , $ <var:v> = <nat:6> $ , $ <var:f> = <nat:13> $ , $ <var:c> = <nat:2> $ , $ <var:w> = <nat:9> $ , $ <var:D> = <nat:4> $ , $ <var:h> = <nat:12> $ . Because of this , <nat:259459200> is a <def:ten-composite> whole number is verified . Thus , $ <var:w> * <var:R> * <var:h> * <var:L> * <var:M> * <var:O> * <var:c> * <var:D> * <var:v> * <var:f> = <nat:259459200> $ has been validated . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:ten-composite> ( <var:i> : nat ) := exists <var:c> <var:f> <var:D> <var:w> <var:R> <var:v> <var:L> <var:h> <var:M> <var:O> : nat , ( <var:v> * <var:c> * <var:w> * <var:f> * <var:R> * <var:M> * <var:O> * <var:D> * <var:h> * <var:L> = <var:i> ) /\ ( <var:f> >= <nat:2> ) /\ ( <var:c> >= <nat:2> ) /\ ( <var:M> >= <nat:2> ) /\ ( <var:v> >= <nat:2> ) /\ ( <var:L> >= <nat:2> ) /\ ( <var:D> >= <nat:2> ) /\ ( <var:w> >= <nat:2> ) /\ ( <var:O> >= <nat:2> ) /\ ( <var:R> >= <nat:2> ) /\ ( <var:h> >= <nat:2> ) . Theorem <genP:1> : <def:ten-composite> <nat:259459200> . Proof . unfold <def:ten-composite> . assert ( <genH> : <nat:10> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:12> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:11> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:2> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:4> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:13> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:7> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:9> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:6> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:5> >= <nat:2> ) . { lia . } exists <nat:2> . exists <nat:13> . exists <nat:4> . exists <nat:9> . exists <nat:11> . exists <nat:6> . exists <nat:10> . exists <nat:12> . exists <nat:5> . exists <nat:7> . repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 