\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:32> \cdot <var:j> + <nat:212> \cdot <var:Y> + <nat:350> \cdot <var:I> + <var:X> \cdot <nat:2> + <var:w> \cdot <nat:250> + <nat:495> + <var:V> \cdot <nat:278> + <var:B> \cdot <nat:222> + <nat:294> \cdot <var:L> + <var:r> \cdot <nat:44> + <var:o> \cdot <nat:334> + <var:K> \cdot <nat:136> $ is odd . \end{theorem} \begin{proof} The terms $ <nat:278> \cdot <var:V> $ , $ <var:B> \cdot <nat:222> $ , $ <nat:32> \cdot <var:j> $ , $ <var:X> \cdot <nat:2> $ , $ <var:K> \cdot <nat:136> $ , $ <var:o> \cdot <nat:334> $ , plus $ <nat:212> \cdot <var:Y> $ are known as even integers . This fact holds from the fact the multiplication between an even element of $ \mathbb{N} $ with any number must be even . Further , the pairs $ <var:w> \cdot <nat:250> $ additionally $ <var:I> \cdot <nat:350> $ are known as even . This claim must be true as a consequence that taking the product of an even number with any natural must be even . Further , see that the pair $ <nat:294> \cdot <var:L> $ is known to be even by reason that multiplying between an even whole number and a number will be trivially an even number in $ \mathbb{N} $ . See that the product $ <var:r> \cdot <nat:44> $ is an even natural number . Notice that the totaling between even naturals successively and an odd number is guaranteed to be odd . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:j> <var:Y> <var:I> <var:X> <var:w> <var:V> <var:B> <var:L> <var:r> <var:o> <var:K> : nat , Nat . odd ( <nat:32> * <var:j> + <nat:212> * <var:Y> + <nat:350> * <var:I> + <nat:2> * <var:X> + <nat:250> * <var:w> + <nat:278> * <var:V> + <nat:222> * <var:B> + <nat:294> * <var:L> + <nat:44> * <var:r> + <nat:334> * <var:o> + <nat:136> * <var:K> + <nat:495> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:278> * <var:V> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:222> * <var:B> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:32> * <var:j> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:2> * <var:X> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:136> * <var:K> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:334> * <var:o> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:212> * <var:Y> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:250> * <var:w> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:350> * <var:I> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:294> * <var:L> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:44> * <var:r> ) = true ) . { rewrite Nat . even_mul . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 