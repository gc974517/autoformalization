\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:Q> \cdot <nat:56> + <nat:22> \cdot <var:b> + <var:e> \cdot <nat:144> + <nat:214> \cdot <var:D> + <nat:72> + <var:y> \cdot <nat:106> + <nat:346> \cdot <var:f> + <var:L> \cdot <nat:12> + <nat:442> \cdot <var:j> + <var:A> \cdot <nat:462> + <nat:262> \cdot <var:Z> + <nat:282> \cdot <var:q> $ must be even using all whole numbers $ <var:Z> $ , $ <var:f> $ , $ <var:D> $ , $ <var:Q> $ , $ <var:L> $ , $ <var:A> $ , $ <var:y> $ , $ <var:e> $ , $ <var:q> $ , $ <var:j> $ , and $ <var:b> $ . \end{theorem} \begin{proof} In addition to this , the natural numbers $ <nat:56> $ , $ <nat:22> $ , $ <nat:144> $ , $ <nat:214> $ , $ <nat:106> $ , $ <nat:346> $ , $ <nat:12> $ , $ <nat:442> $ , $ <nat:462> $ , $ <nat:262> $ , in addition to $ <nat:282> $ are known to be even . In consequence , the products $ <nat:56> * <var:Q> $ , $ <nat:22> * <var:b> $ , $ <var:e> * <nat:144> $ , $ <var:D> * <nat:214> $ , $ <var:y> * <nat:106> $ , $ <var:f> * <nat:346> $ , $ <nat:12> * <var:L> $ , $ <nat:442> * <var:j> $ , $ <var:A> * <nat:462> $ , $ <var:Z> * <nat:262> $ , additionally $ <var:q> * <nat:282> $ is guaranteed to be even as well . We verify $ <var:D> \times <nat:214> + <var:Q> \times <nat:56> + <nat:442> \times <var:j> + <nat:144> \times <var:e> + <var:f> \times <nat:346> + <var:A> \times <nat:462> + <var:q> \times <nat:282> + <nat:262> \times <var:Z> + <nat:106> \times <var:y> + <nat:22> \times <var:b> + <nat:12> \times <var:L> + <nat:72> $ is even applying the fact the adding of even numbers in $ \mathbb{Z}^+ $ concurrently is even . Notice $ <nat:72> $ is obviously even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:Z> <var:f> <var:D> <var:Q> <var:L> <var:A> <var:y> <var:e> <var:q> <var:j> <var:b> : nat , Nat . even ( <nat:56> * <var:Q> + <nat:22> * <var:b> + <nat:144> * <var:e> + <nat:214> * <var:D> + <nat:106> * <var:y> + <nat:346> * <var:f> + <nat:12> * <var:L> + <nat:442> * <var:j> + <nat:462> * <var:A> + <nat:262> * <var:Z> + <nat:282> * <var:q> + <nat:72> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:56> = true ) . { auto . } assert ( <genH> : Nat . even <nat:22> = true ) . { auto . } assert ( <genH> : Nat . even <nat:144> = true ) . { auto . } assert ( <genH> : Nat . even <nat:214> = true ) . { auto . } assert ( <genH> : Nat . even <nat:106> = true ) . { auto . } assert ( <genH> : Nat . even <nat:346> = true ) . { auto . } assert ( <genH> : Nat . even <nat:12> = true ) . { auto . } assert ( <genH> : Nat . even <nat:442> = true ) . { auto . } assert ( <genH> : Nat . even <nat:462> = true ) . { auto . } assert ( <genH> : Nat . even <nat:262> = true ) . { auto . } assert ( <genH> : Nat . even <nat:282> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:56> * <var:Q> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:22> * <var:b> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:144> * <var:e> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:214> * <var:D> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:106> * <var:y> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:346> * <var:f> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:12> * <var:L> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:442> * <var:j> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:462> * <var:A> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:262> * <var:Z> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:282> * <var:q> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } repeat rewrite Nat . even_add . assert ( <genH> : Nat . even <nat:72> = true ) . { auto . } rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 