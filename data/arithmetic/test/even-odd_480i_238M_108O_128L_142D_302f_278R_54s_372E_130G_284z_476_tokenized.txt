\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:M> * <nat:238> + <var:O> * <nat:108> + <var:G> * <nat:130> + <nat:54> * <var:s> + <var:D> * <nat:142> + <nat:480> * <var:i> + <nat:284> * <var:z> + <var:L> * <nat:128> + <var:E> * <nat:372> + <nat:302> * <var:f> + <nat:278> * <var:R> + <nat:476> $ is guaranteed to be even with natural numbers $ <var:L> $ , $ <var:G> $ , $ <var:R> $ , $ <var:O> $ , $ <var:M> $ , $ <var:s> $ , $ <var:f> $ , $ <var:z> $ , $ <var:i> $ , $ <var:E> $ , and $ <var:D> $ . \end{theorem} \begin{proof} The claim holds because $ <nat:480> \cdot <var:i> + <var:R> \cdot <nat:278> + <var:E> \cdot <nat:372> + <var:O> \cdot <nat:108> + <nat:238> \cdot <var:M> + <nat:128> \cdot <var:L> + <nat:142> \cdot <var:D> + <var:s> \cdot <nat:54> + <var:G> \cdot <nat:130> + <nat:284> \cdot <var:z> + <var:f> \cdot <nat:302> $ is obviously even . The integers $ <nat:480> $ , $ <nat:278> $ , $ <nat:372> $ , $ <nat:108> $ , $ <nat:238> $ , $ <nat:128> $ , $ <nat:142> $ , $ <nat:54> $ , $ <nat:130> $ , $ <nat:284> $ , as well as $ <nat:302> $ are even . Then , the products $ <nat:480> * <var:i> $ , $ <nat:278> * <var:R> $ , $ <nat:372> * <var:E> $ , $ <nat:108> * <var:O> $ , $ <nat:238> * <var:M> $ , $ <nat:128> * <var:L> $ , $ <nat:142> * <var:D> $ , $ <nat:54> * <var:s> $ , $ <nat:130> * <var:G> $ , $ <var:z> * <nat:284> $ , and also $ <var:f> * <nat:302> $ must be even additionally . The expression $ <var:i> \times <nat:480> + <nat:238> \times <var:M> + <var:O> \times <nat:108> + <nat:128> \times <var:L> + <var:D> \times <nat:142> + <nat:302> \times <var:f> + <var:R> \times <nat:278> + <nat:54> \times <var:s> + <nat:372> \times <var:E> + <nat:130> \times <var:G> + <nat:284> \times <var:z> $ will be even since the multiplication of even naturals and a element of $ \mathbb{N} $ is an even natural . The summation of an even whole number with an even element of $ \mathbb{Z}^+ $ is guaranteed to be trivially an even element of $ \mathbb{N} $ . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:L> <var:G> <var:R> <var:O> <var:M> <var:s> <var:f> <var:z> <var:i> <var:E> <var:D> : nat , Nat . even ( <nat:238> * <var:M> + <nat:108> * <var:O> + <nat:130> * <var:G> + <nat:54> * <var:s> + <nat:142> * <var:D> + <nat:480> * <var:i> + <nat:284> * <var:z> + <nat:128> * <var:L> + <nat:372> * <var:E> + <nat:302> * <var:f> + <nat:278> * <var:R> + <nat:476> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:480> = true ) . { auto . } assert ( <genH> : Nat . even <nat:278> = true ) . { auto . } assert ( <genH> : Nat . even <nat:372> = true ) . { auto . } assert ( <genH> : Nat . even <nat:108> = true ) . { auto . } assert ( <genH> : Nat . even <nat:238> = true ) . { auto . } assert ( <genH> : Nat . even <nat:128> = true ) . { auto . } assert ( <genH> : Nat . even <nat:142> = true ) . { auto . } assert ( <genH> : Nat . even <nat:54> = true ) . { auto . } assert ( <genH> : Nat . even <nat:130> = true ) . { auto . } assert ( <genH> : Nat . even <nat:284> = true ) . { auto . } assert ( <genH> : Nat . even <nat:302> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:480> * <var:i> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:278> * <var:R> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:372> * <var:E> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:108> * <var:O> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:238> * <var:M> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:128> * <var:L> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:142> * <var:D> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:54> * <var:s> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:130> * <var:G> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:284> * <var:z> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:302> * <var:f> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:238> * <var:M> + <nat:108> * <var:O> + <nat:130> * <var:G> + <nat:54> * <var:s> + <nat:142> * <var:D> + <nat:480> * <var:i> + <nat:284> * <var:z> + <nat:128> * <var:L> + <nat:372> * <var:E> + <nat:302> * <var:f> + <nat:278> * <var:R> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . even_add . rewrite <genH> . auto . Qed . 