\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} With some positive terms $ <var:J> $ , $ <var:c> $ , $ <var:d> $ , $ <var:z> $ , and $ <var:q> $ the summation $ <var:z> <nat:184> + <var:c> <nat:180> + <var:q> <nat:266> + <var:d> <nat:452> + <nat:117> + <nat:162> <var:J> $ is guaranteed to be odd . \end{theorem} \begin{proof} Observe $ <nat:452> \cdot <var:d> + <nat:162> \cdot <var:J> + <var:z> \cdot <nat:184> + <nat:266> \cdot <var:q> + <nat:180> \cdot <var:c> + <nat:117> $ is clearly odd by reason that $ <var:d> * <nat:452> + <var:J> * <nat:162> + <var:c> * <nat:180> + <nat:266> * <var:q> + <nat:184> * <var:z> $ is guaranteed to be even . The leading term $ <nat:266> $ is trivially even . Hence , the term $ <nat:266> * <var:q> $ will be even also . The products $ <nat:452> * <var:d> $ and $ <var:z> * <nat:184> $ will be even . This is proven by reason that the coefficients $ <nat:452> $ and also $ <nat:184> $ are known to be instrinsically even positive integers . Further , notice that the term $ <nat:180> * <var:c> $ is even since the natural number $ <nat:180> $ is guaranteed to be even . The product $ <var:J> * <nat:162> $ is known as an even natural since taking the product between an even natural and some number must be an even natural number , which is true from the knowledge the coefficient $ <nat:162> $ is known to be even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:J> <var:c> <var:d> <var:z> <var:q> : nat , Nat . odd ( <nat:184> * <var:z> + <nat:180> * <var:c> + <nat:266> * <var:q> + <nat:452> * <var:d> + <nat:162> * <var:J> + <nat:117> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:266> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:266> * <var:q> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:452> = true ) . { auto . } assert ( <genH> : Nat . even <nat:184> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:452> * <var:d> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:184> * <var:z> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:180> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:180> * <var:c> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:162> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:162> * <var:J> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:184> * <var:z> + <nat:180> * <var:c> + <nat:266> * <var:q> + <nat:452> * <var:d> + <nat:162> * <var:J> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . auto . Qed . 