\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \newtheorem{definition}{Definition} \begin{document} \begin{definition} Take $ <var:s> $ , $ <var:U> $ , $ <var:a> $ , $ <var:V> $ , $ <var:p> $ , $ <var:N> $ , $ <var:r> \in \mathbb{Z}^+ $ . We claim that $ <var:P> \in \mathbb{N} $ will be named a <def:seven-composite> integer when $ <var:P> = <var:s> * <var:U> * <var:N> * <var:r> * <var:V> * <var:p> * <var:a> $ plus factors are more than <nat:1> . \end{definition} \begin{theorem} The positive integer <nat:246400> is a <def:seven-composite> whole number . \end{theorem} \begin{proof} Recall that a <def:seven-composite> natural number is the product of integers $ <var:r> $ , $ <var:p> $ , $ <var:V> $ , $ <var:s> $ , $ <var:a> $ , $ <var:U> $ , $ <var:N> $ more than <nat:1> . Take $ <var:N> = <nat:11> $ , $ <var:V> = <nat:2> $ , $ <var:a> = <nat:10> $ , $ <var:r> = <nat:4> $ , $ <var:p> = <nat:7> $ , $ <var:U> = <nat:5> $ , and $ <var:s> = <nat:8> $ . Note $ <nat:11> $ , $ <nat:5> $ , $ <nat:2> $ , $ <nat:7> $ , $ <nat:8> $ , $ <nat:10> $ , $ <nat:4> $ are greater than <nat:1> . This gives <nat:246400> is a <def:seven-composite> number . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:seven-composite> ( <var:P> : nat ) := exists <var:s> <var:U> <var:a> <var:V> <var:p> <var:N> <var:r> : nat , ( <var:P> = <var:s> * <var:U> * <var:N> * <var:r> * <var:V> * <var:p> * <var:a> ) /\ ( <var:s> > <nat:1> ) /\ ( <var:U> > <nat:1> ) /\ ( <var:a> > <nat:1> ) /\ ( <var:V> > <nat:1> ) /\ ( <var:p> > <nat:1> ) /\ ( <var:N> > <nat:1> ) /\ ( <var:r> > <nat:1> ) . Theorem <genP:1> : <def:seven-composite> <nat:246400> . Proof . unfold <def:seven-composite> . exists <nat:8> . exists <nat:5> . exists <nat:10> . exists <nat:2> . exists <nat:7> . exists <nat:11> . exists <nat:4> . assert ( <genH> : <nat:11> > <nat:1> ) . { lia . } assert ( <genH> : <nat:5> > <nat:1> ) . { lia . } assert ( <genH> : <nat:2> > <nat:1> ) . { lia . } assert ( <genH> : <nat:7> > <nat:1> ) . { lia . } assert ( <genH> : <nat:8> > <nat:1> ) . { lia . } assert ( <genH> : <nat:10> > <nat:1> ) . { lia . } assert ( <genH> : <nat:4> > <nat:1> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 