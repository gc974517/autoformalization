\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} For $ <var:X> $ , $ <var:z> $ , $ <var:y> $ , $ <var:f> $ , $ <var:E> $ , $ <var:s> $ , and $ <var:x> $ $ <var:s> <nat:168> + <var:X> <nat:178> + <nat:188> + <var:y> <nat:60> + <nat:348> <var:x> + <nat:66> <var:f> + <var:E> <nat:32> + <nat:106> <var:z> $ must be even . \end{theorem} \begin{proof} The main result is true from the knowledge $ <nat:348> <var:x> + <var:y> <nat:60> + <var:s> <nat:168> + <nat:32> <var:E> + <nat:178> <var:X> + <nat:66> <var:f> + <var:z> <nat:106> $ is even . Recall that the positive integers $ <nat:168> $ , $ <nat:32> $ , $ <nat:60> $ , $ <nat:66> $ , additionally $ <nat:106> $ are even Recall the integer $ <nat:178> $ is obviously an even element of $ \mathbb{N} $ Furthermore , the whole number $ <nat:348> $ is guaranteed to be even We know $ <nat:188> $ is even . It can be verified that $ <var:s> * <nat:168> + <nat:188> + <nat:106> * <var:z> + <nat:32> * <var:E> + <nat:348> * <var:x> + <nat:60> * <var:y> + <var:f> * <nat:66> + <var:X> * <nat:178> $ must be even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:X> <var:z> <var:y> <var:f> <var:E> <var:s> <var:x> : nat , Nat . even ( <nat:168> * <var:s> + <nat:178> * <var:X> + <nat:60> * <var:y> + <nat:348> * <var:x> + <nat:66> * <var:f> + <nat:32> * <var:E> + <nat:106> * <var:z> + <nat:188> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:168> = true ) . { auto . } assert ( <genH> : Nat . even <nat:32> = true ) . { auto . } assert ( <genH> : Nat . even <nat:60> = true ) . { auto . } assert ( <genH> : Nat . even <nat:66> = true ) . { auto . } assert ( <genH> : Nat . even <nat:106> = true ) . { auto . } assert ( <genH> : Nat . even <nat:178> = true ) . { auto . } assert ( <genH> : Nat . even <nat:348> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:168> * <var:s> + <nat:178> * <var:X> + <nat:60> * <var:y> + <nat:348> * <var:x> + <nat:66> * <var:f> + <nat:32> * <var:E> + <nat:106> * <var:z> ) = true ) . { repeat rewrite Nat . even_add . repeat rewrite Nat . even_mul . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:188> = true ) . { auto . } rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . auto . Qed . 