\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Assuming terms $ <var:o> $ , $ <var:S> $ , $ <var:e> $ , $ <var:Y> $ , $ <var:t> $ , and $ <var:O> $ the sum $ <var:t> \times <nat:276> + <var:O> \times <nat:374> + <nat:80> \times <var:o> + <var:e> \times <nat:92> + <nat:147> + <nat:88> \times <var:Y> + <var:S> \times <nat:260> $ is guaranteed to be odd . \end{theorem} \begin{proof} The theorem is true by reason that $ <nat:92> * <var:e> + <var:o> * <nat:80> + <var:Y> * <nat:88> + <nat:374> * <var:O> + <nat:276> * <var:t> + <var:S> * <nat:260> $ is known as even . Observe that taking the product of an even number in $ \mathbb{Z}^+ $ and any number in $ \mathbb{Z}^+ $ is even . See the natural numbers $ <nat:88> $ , $ <nat:276> $ , and $ <nat:80> $ are known as even The integer $ <nat:92> $ is an even element of $ \mathbb{Z}^+ $ Take note that the integer $ <nat:374> $ is guaranteed to be an even number Furthermore , we know that the natural number $ <nat:260> $ is clearly even See $ <nat:147> $ is obviously an odd number in $ \mathbb{Z}^+ $ . The addition of even integers successively with an odd positive integer is odd . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:o> <var:S> <var:e> <var:Y> <var:t> <var:O> : nat , Nat . odd ( <nat:276> * <var:t> + <nat:374> * <var:O> + <nat:80> * <var:o> + <nat:92> * <var:e> + <nat:88> * <var:Y> + <nat:260> * <var:S> + <nat:147> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:88> = true ) . { auto . } assert ( <genH> : Nat . even <nat:276> = true ) . { auto . } assert ( <genH> : Nat . even <nat:80> = true ) . { auto . } assert ( <genH> : Nat . even <nat:92> = true ) . { auto . } assert ( <genH> : Nat . even <nat:374> = true ) . { auto . } assert ( <genH> : Nat . even <nat:260> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:276> * <var:t> + <nat:374> * <var:O> + <nat:80> * <var:o> + <nat:92> * <var:e> + <nat:88> * <var:Y> + <nat:260> * <var:S> ) = true ) . { repeat rewrite Nat . even_add . repeat rewrite Nat . even_mul . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } assert ( <genH> : Nat . odd <nat:147> = true ) . { auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . rewrite <genH> . auto . Qed . 