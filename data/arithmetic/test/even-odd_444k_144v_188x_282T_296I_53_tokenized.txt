\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:53> + <var:v> <nat:144> + <nat:296> <var:I> + <var:k> <nat:444> + <var:T> <nat:282> + <var:x> <nat:188> $ will be odd . \end{theorem} \begin{proof} Recall the sum $ <var:x> * <nat:188> + <nat:53> + <nat:444> * <var:k> + <nat:144> * <var:v> + <nat:282> * <var:T> + <nat:296> * <var:I> $ is obviously odd because the expression $ <nat:296> \times <var:I> + <nat:144> \times <var:v> + <var:x> \times <nat:188> + <nat:282> \times <var:T> + <var:k> \times <nat:444> $ is even . Notice the whole number $ <nat:144> $ is known as even . Then , the term $ <var:v> * <nat:144> $ is guaranteed to be even at the same time . On top of this , recall the integer $ <nat:282> $ is obviously even . Hence , the pair $ <var:T> * <nat:282> $ is guaranteed to be even also . In addition , see the positive integer $ <nat:188> $ is an even number . Therefore , $ <var:x> * <nat:188> $ must be even too . The natural number $ <nat:444> $ is known as an even element of $ \mathbb{Z}^+ $ . In consequence , the term $ <var:k> * <nat:444> $ must be even as well . Take note $ <nat:296> * <var:I> $ is guaranteed to be an even natural from the knowledge the number $ <nat:296> $ is known as by itself an even number in $ \mathbb{Z}^+ $ . Since the product between even integers with an arbitrary positive integer is even the main result is proven . It can be verified that the formula $ <var:k> \times <nat:444> + <nat:53> + <nat:144> \times <var:v> + <var:x> \times <nat:188> + <nat:282> \times <var:T> + <nat:296> \times <var:I> $ is odd . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:v> <var:I> <var:k> <var:T> <var:x> : nat , Nat . odd ( <nat:144> * <var:v> + <nat:296> * <var:I> + <nat:444> * <var:k> + <nat:282> * <var:T> + <nat:188> * <var:x> + <nat:53> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:144> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:144> * <var:v> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:282> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:282> * <var:T> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:188> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:188> * <var:x> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:444> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:444> * <var:k> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:296> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:296> * <var:I> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:144> * <var:v> + <nat:296> * <var:I> + <nat:444> * <var:k> + <nat:282> * <var:T> + <nat:188> * <var:x> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . auto . Qed . 