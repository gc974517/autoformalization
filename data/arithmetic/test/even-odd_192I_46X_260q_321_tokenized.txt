\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:q> \times <nat:260> + <nat:46> \times <var:X> + <nat:321> + <var:I> \times <nat:192> $ is guaranteed to be odd . \end{theorem} \begin{proof} It can be checked that that $ <nat:192> * <var:I> + <nat:46> * <var:X> + <nat:260> * <var:q> $ is trivially even . We know the product $ <var:I> \times <nat:192> $ is known as even . This fact holds since the multiplication between an even positive integer and some natural number must be an even integer . This must be true since the leading term $ <nat:192> $ is even . See that $ <var:q> \times <nat:260> $ is known to be even . This must be true as a consequence that taking the product between an even positive integer and some natural is guaranteed to be even and the integer $ <nat:260> $ is even . Furthermore , the whole number $ <nat:46> $ is known to be an even positive integer . Accordingly , the pair $ <var:X> \times <nat:46> $ must be even as well . From the fact the product between even positive integers and any number in $ \mathbb{Z}^+ $ must be even $ <nat:192> \times <var:I> + <nat:46> \times <var:X> + <var:q> \times <nat:260> $ must be even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:q> <var:X> <var:I> : nat , Nat . odd ( <nat:260> * <var:q> + <nat:46> * <var:X> + <nat:192> * <var:I> + <nat:321> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:192> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:192> * <var:I> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:260> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:260> * <var:q> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:46> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:46> * <var:X> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:260> * <var:q> + <nat:46> * <var:X> + <nat:192> * <var:I> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . auto . Qed . 