\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Using every positive integers $ <var:i> $ , $ <var:a> $ , $ <var:F> $ , $ <var:E> $ , $ <var:c> $ , and $ <var:w> $ $ <nat:61> + <nat:184> \cdot <var:i> + <nat:460> \cdot <var:w> + <nat:62> \cdot <var:F> + <nat:50> \cdot <var:c> + <var:E> \cdot <nat:260> + <nat:360> \cdot <var:a> $ must be odd . \end{theorem} \begin{proof} We demonstrate the expression $ <var:i> * <nat:184> + <nat:260> * <var:E> + <nat:61> + <var:w> * <nat:460> + <var:a> * <nat:360> + <nat:62> * <var:F> + <var:c> * <nat:50> $ must be odd . We know the addition between even integers and an odd element of $ \mathbb{Z}^+ $ is guaranteed to be trivially an odd element of $ \mathbb{N} $ . See that $ <nat:61> $ is guaranteed to be an odd number . The summation $ <nat:50> * <var:c> + <var:i> * <nat:184> + <var:w> * <nat:460> + <var:a> * <nat:360> + <var:F> * <nat:62> + <nat:260> * <var:E> $ is guaranteed to be even . The positive integers $ <nat:62> $ , $ <nat:460> $ , $ <nat:50> $ , $ <nat:184> $ , additionally $ <nat:260> $ are known to be even In addition , the number $ <nat:360> $ is obviously even The formula $ <nat:62> <var:F> + <var:a> <nat:360> + <var:w> <nat:460> + <var:c> <nat:50> + <nat:260> <var:E> + <var:i> <nat:184> $ is even by reason that the addition of an even number in $ \mathbb{Z}^+ $ and even numbers in $ \mathbb{N} $ will be even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:i> <var:a> <var:F> <var:E> <var:c> <var:w> : nat , Nat . odd ( <nat:184> * <var:i> + <nat:460> * <var:w> + <nat:62> * <var:F> + <nat:50> * <var:c> + <nat:260> * <var:E> + <nat:360> * <var:a> + <nat:61> ) = true . Proof . intros . rewrite Nat . odd_add . assert ( <genH> : Nat . odd <nat:61> = true ) . { auto . } assert ( <genH> : Nat . even <nat:62> = true ) . { auto . } assert ( <genH> : Nat . even <nat:460> = true ) . { auto . } assert ( <genH> : Nat . even <nat:50> = true ) . { auto . } assert ( <genH> : Nat . even <nat:184> = true ) . { auto . } assert ( <genH> : Nat . even <nat:260> = true ) . { auto . } assert ( <genH> : Nat . even <nat:360> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:184> * <var:i> + <nat:460> * <var:w> + <nat:62> * <var:F> + <nat:50> * <var:c> + <nat:260> * <var:E> + <nat:360> * <var:a> ) = true ) . { repeat rewrite Nat . even_add . repeat rewrite Nat . even_mul . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite <- Nat . negb_even . rewrite <genH> . rewrite <genH> . auto . Qed . 