\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:386> <var:S> + <nat:421> + <nat:486> <var:B> + <var:j> <nat:86> + <var:O> <nat:214> + <nat:2> <var:A> $ is guaranteed to be odd using all integers $ <var:S> $ , $ <var:B> $ , $ <var:A> $ , $ <var:O> $ , and $ <var:j> $ . \end{theorem} \begin{proof} We work with the assumption the fact the summation $ <nat:86> * <var:j> + <nat:421> + <nat:486> * <var:B> + <var:A> * <nat:2> + <nat:214> * <var:O> + <var:S> * <nat:386> $ is known as odd since the summation $ <var:S> * <nat:386> + <nat:86> * <var:j> + <var:O> * <nat:214> + <nat:2> * <var:A> + <nat:486> * <var:B> $ is clearly even . What's more , the pairs $ <nat:386> \times <var:S> $ , $ <var:j> \times <nat:86> $ , $ <var:O> \times <nat:214> $ , $ <nat:2> \times <var:A> $ , in addition to $ <nat:486> \times <var:B> $ are known as even numbers . This must be true as a consequence that the natural numbers $ <nat:386> $ , $ <nat:86> $ , $ <nat:214> $ , $ <nat:2> $ , plus $ <nat:486> $ are even . Our result is proven from the knowledge the product of even elements of $ \mathbb{Z}^+ $ and an arbitrary number in $ \mathbb{N} $ must be an even positive integer . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:S> <var:B> <var:A> <var:O> <var:j> : nat , Nat . odd ( <nat:386> * <var:S> + <nat:486> * <var:B> + <nat:86> * <var:j> + <nat:214> * <var:O> + <nat:2> * <var:A> + <nat:421> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:386> = true ) . { auto . } assert ( <genH> : Nat . even <nat:86> = true ) . { auto . } assert ( <genH> : Nat . even <nat:214> = true ) . { auto . } assert ( <genH> : Nat . even <nat:2> = true ) . { auto . } assert ( <genH> : Nat . even <nat:486> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:386> * <var:S> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:86> * <var:j> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:214> * <var:O> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:2> * <var:A> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:486> * <var:B> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:386> * <var:S> + <nat:486> * <var:B> + <nat:86> * <var:j> + <nat:214> * <var:O> + <nat:2> * <var:A> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . auto . Qed . 