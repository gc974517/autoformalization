\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Assuming some $ <var:M> $ , $ <var:K> $ , $ <var:h> $ , $ <var:V> $ , $ <var:n> $ , $ <var:D> $ , $ <var:z> $ , $ <var:b> $ , $ <var:U> $ , and $ <var:i> $ the summation $ <nat:472> \times <var:i> + <nat:284> \times <var:z> + <var:U> \times <nat:358> + <var:V> \times <nat:450> + <nat:420> \times <var:b> + <nat:188> \times <var:K> + <var:M> \times <nat:268> + <nat:214> \times <var:D> + <var:n> \times <nat:296> + <nat:331> + <nat:58> \times <var:h> $ is guaranteed to be odd . \end{theorem} \begin{proof} The positive integers $ <nat:296> $ , $ <nat:268> $ , $ <nat:420> $ , $ <nat:284> $ , $ <nat:472> $ , additionally $ <nat:58> $ will be even positive integers Building on , we know the integers $ <nat:214> $ additionally $ <nat:188> $ are known to be even natural numbers On top of this , recall that the leading term $ <nat:358> $ is clearly an even integer What's more , observe that the positive integer $ <nat:450> $ is even Remember that the summing of even elements of $ \mathbb{Z}^+ $ concurrently and an odd natural number is in itself an odd integer . See $ <nat:331> $ is known to be odd . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:M> <var:K> <var:h> <var:V> <var:n> <var:D> <var:z> <var:b> <var:U> <var:i> : nat , Nat . odd ( <nat:472> * <var:i> + <nat:284> * <var:z> + <nat:358> * <var:U> + <nat:450> * <var:V> + <nat:420> * <var:b> + <nat:188> * <var:K> + <nat:268> * <var:M> + <nat:214> * <var:D> + <nat:296> * <var:n> + <nat:58> * <var:h> + <nat:331> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:296> = true ) . { auto . } assert ( <genH> : Nat . even <nat:268> = true ) . { auto . } assert ( <genH> : Nat . even <nat:420> = true ) . { auto . } assert ( <genH> : Nat . even <nat:284> = true ) . { auto . } assert ( <genH> : Nat . even <nat:472> = true ) . { auto . } assert ( <genH> : Nat . even <nat:58> = true ) . { auto . } assert ( <genH> : Nat . even <nat:214> = true ) . { auto . } assert ( <genH> : Nat . even <nat:188> = true ) . { auto . } assert ( <genH> : Nat . even <nat:358> = true ) . { auto . } assert ( <genH> : Nat . even <nat:450> = true ) . { auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . assert ( <genH> : Nat . odd <nat:331> = true ) . { auto . } repeat rewrite Nat . even_mul . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 