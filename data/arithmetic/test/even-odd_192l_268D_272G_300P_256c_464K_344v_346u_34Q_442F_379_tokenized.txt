\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:300> \cdot <var:P> + <var:Q> \cdot <nat:34> + <var:K> \cdot <nat:464> + <var:v> \cdot <nat:344> + <nat:442> \cdot <var:F> + <var:u> \cdot <nat:346> + <nat:256> \cdot <var:c> + <nat:268> \cdot <var:D> + <var:G> \cdot <nat:272> + <var:l> \cdot <nat:192> + <nat:379> $ is odd with some natural terms $ <var:G> $ , $ <var:D> $ , $ <var:c> $ , $ <var:v> $ , $ <var:u> $ , $ <var:K> $ , $ <var:P> $ , $ <var:F> $ , $ <var:Q> $ , and $ <var:l> $ . \end{theorem} \begin{proof} Our main result holds from the knowledge $ <nat:192> <var:l> + <var:D> <nat:268> + <var:G> <nat:272> + <nat:300> <var:P> + <var:c> <nat:256> + <var:K> <nat:464> + <var:v> <nat:344> + <nat:346> <var:u> + <nat:34> <var:Q> + <var:F> <nat:442> $ is clearly even . In addition to this , the leading terms $ <nat:192> $ , $ <nat:268> $ , $ <nat:272> $ , $ <nat:300> $ , $ <nat:256> $ , $ <nat:464> $ , $ <nat:344> $ , $ <nat:346> $ , $ <nat:34> $ , and likewise $ <nat:442> $ are guaranteed to be even natural numbers . Accordingly , the products $ <var:l> \cdot <nat:192> $ , $ <var:D> \cdot <nat:268> $ , $ <var:G> \cdot <nat:272> $ , $ <nat:300> \cdot <var:P> $ , $ <var:c> \cdot <nat:256> $ , $ <nat:464> \cdot <var:K> $ , $ <var:v> \cdot <nat:344> $ , $ <var:u> \cdot <nat:346> $ , $ <nat:34> \cdot <var:Q> $ , in addition to $ <var:F> \cdot <nat:442> $ must be even at the same time . The proposition holds since the totaling of an even number in $ \mathbb{Z}^+ $ with even naturals will be even . The summation of an even integer with an odd positive integer must be odd . As a consequence , our main result is true . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:G> <var:D> <var:c> <var:v> <var:u> <var:K> <var:P> <var:F> <var:Q> <var:l> : nat , Nat . odd ( <nat:300> * <var:P> + <nat:34> * <var:Q> + <nat:464> * <var:K> + <nat:344> * <var:v> + <nat:442> * <var:F> + <nat:346> * <var:u> + <nat:256> * <var:c> + <nat:268> * <var:D> + <nat:272> * <var:G> + <nat:192> * <var:l> + <nat:379> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:192> = true ) . { auto . } assert ( <genH> : Nat . even <nat:268> = true ) . { auto . } assert ( <genH> : Nat . even <nat:272> = true ) . { auto . } assert ( <genH> : Nat . even <nat:300> = true ) . { auto . } assert ( <genH> : Nat . even <nat:256> = true ) . { auto . } assert ( <genH> : Nat . even <nat:464> = true ) . { auto . } assert ( <genH> : Nat . even <nat:344> = true ) . { auto . } assert ( <genH> : Nat . even <nat:346> = true ) . { auto . } assert ( <genH> : Nat . even <nat:34> = true ) . { auto . } assert ( <genH> : Nat . even <nat:442> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:192> * <var:l> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:268> * <var:D> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:272> * <var:G> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:300> * <var:P> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:256> * <var:c> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:464> * <var:K> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:344> * <var:v> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:346> * <var:u> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:34> * <var:Q> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:442> * <var:F> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:300> * <var:P> + <nat:34> * <var:Q> + <nat:464> * <var:K> + <nat:344> * <var:v> + <nat:442> * <var:F> + <nat:346> * <var:u> + <nat:256> * <var:c> + <nat:268> * <var:D> + <nat:272> * <var:G> + <nat:192> * <var:l> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . auto . Qed . 