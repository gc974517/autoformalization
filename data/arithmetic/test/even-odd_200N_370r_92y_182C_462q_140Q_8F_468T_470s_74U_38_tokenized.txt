\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:200> <var:N> + <var:r> <nat:370> + <var:y> <nat:92> + <var:C> <nat:182> + <nat:38> + <nat:462> <var:q> + <var:Q> <nat:140> + <nat:8> <var:F> + <nat:468> <var:T> + <var:s> <nat:470> + <nat:74> <var:U> $ is even using all unknowns $ <var:N> $ , $ <var:C> $ , $ <var:q> $ , $ <var:Q> $ , $ <var:F> $ , $ <var:T> $ , $ <var:U> $ , $ <var:y> $ , $ <var:s> $ , and $ <var:r> $ . \end{theorem} \begin{proof} The whole numbers $ <nat:8> $ , $ <nat:462> $ , $ <nat:74> $ , $ <nat:140> $ , additionally $ <nat:92> $ will be even elements of $ \mathbb{N} $ The whole numbers $ <nat:200> $ , $ <nat:468> $ , and also $ <nat:182> $ must be even Likewise , observe the number $ <nat:470> $ is known as even Further , the coefficient $ <nat:370> $ is even See the multiplication of even numbers is guaranteed to be an even number in $ \mathbb{Z}^+ $ . Observe $ <nat:38> $ is clearly even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:N> <var:C> <var:q> <var:Q> <var:F> <var:T> <var:U> <var:y> <var:s> <var:r> : nat , Nat . even ( <nat:200> * <var:N> + <nat:370> * <var:r> + <nat:92> * <var:y> + <nat:182> * <var:C> + <nat:462> * <var:q> + <nat:140> * <var:Q> + <nat:8> * <var:F> + <nat:468> * <var:T> + <nat:470> * <var:s> + <nat:74> * <var:U> + <nat:38> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:8> = true ) . { auto . } assert ( <genH> : Nat . even <nat:462> = true ) . { auto . } assert ( <genH> : Nat . even <nat:74> = true ) . { auto . } assert ( <genH> : Nat . even <nat:140> = true ) . { auto . } assert ( <genH> : Nat . even <nat:92> = true ) . { auto . } assert ( <genH> : Nat . even <nat:200> = true ) . { auto . } assert ( <genH> : Nat . even <nat:468> = true ) . { auto . } assert ( <genH> : Nat . even <nat:182> = true ) . { auto . } assert ( <genH> : Nat . even <nat:470> = true ) . { auto . } assert ( <genH> : Nat . even <nat:370> = true ) . { auto . } repeat rewrite Nat . even_add . repeat rewrite Nat . even_mul . assert ( <genH> : Nat . even <nat:38> = true ) . { auto . } repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 