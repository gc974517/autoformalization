\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \newtheorem{definition}{Definition} \begin{document} \begin{definition} $ \exists <var:w> $ , $ <var:G> $ , $ <var:y> $ , $ <var:c> $ , $ <var:h> $ , $ <var:d> \in \mathbb{N} $ more than <nat:1> . We say that some integer $ <var:o> $ will be considered to be <def:six-composite> when $ <var:o> = <var:G> \cdot <var:c> \cdot <var:y> \cdot <var:w> \cdot <var:h> \cdot <var:d> $ . \end{definition} \begin{theorem} $ <var:o> = <nat:207900> $ is a <def:six-composite> positive integer . \end{theorem} \begin{proof} Remember that <nat:207900> is <def:six-composite> given <nat:207900> is the multiplication between $ <var:d> $ , $ <var:w> $ , $ <var:y> $ , $ <var:G> $ , $ <var:c> $ , $ <var:h> $ larger than <nat:1> . Take $ <var:d> = <nat:11> $ , $ <var:c> = <nat:5> $ , $ <var:G> = <nat:9> $ , $ <var:w> = <nat:7> $ , $ <var:h> = <nat:10> $ , and $ <var:y> = <nat:6> $ . Note that $ <nat:207900> = <var:w> * <var:d> * <var:G> * <var:y> * <var:h> * <var:c> $ . This indicates the statement holds . Consequently , <nat:207900> is a <def:six-composite> positive integer is verified . Because of this , $ <var:c> $ , $ <var:w> $ , $ <var:G> $ , $ <var:d> $ , $ <var:h> $ and $ <var:y> > <nat:1> $ plus <nat:207900> is the product of $ <var:c> $ , $ <var:h> $ , $ <var:d> $ , $ <var:y> $ , $ <var:w> $ , $ <var:G> \in \mathbb{Z}^+ $ is true has been proven . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:six-composite> ( <var:o> : nat ) := exists <var:w> <var:G> <var:y> <var:c> <var:h> <var:d> : nat , ( <var:w> > <nat:1> ) /\ ( <var:G> > <nat:1> ) /\ ( <var:y> > <nat:1> ) /\ ( <var:c> > <nat:1> ) /\ ( <var:h> > <nat:1> ) /\ ( <var:d> > <nat:1> ) /\ ( <var:o> = <var:G> * <var:c> * <var:y> * <var:w> * <var:h> * <var:d> ) . Theorem <genP:1> : <def:six-composite> <nat:207900> . Proof . unfold <def:six-composite> . exists <nat:7> . exists <nat:9> . exists <nat:6> . exists <nat:5> . exists <nat:10> . exists <nat:11> . repeat split . all : lia . Qed . 