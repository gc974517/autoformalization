\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:m> * <nat:86> + <nat:216> + <nat:192> * <var:Z> + <var:Q> * <nat:118> + <var:w> * <nat:52> $ is guaranteed to be even . \end{theorem} \begin{proof} It can be demonstrated that the formula $ <nat:192> * <var:Z> + <nat:118> * <var:Q> + <var:m> * <nat:86> + <nat:52> * <var:w> + <nat:216> $ is known as even as a consequence that $ <nat:118> \cdot <var:Q> + <var:m> \cdot <nat:86> + <var:Z> \cdot <nat:192> + <var:w> \cdot <nat:52> $ is even . Recall that the adding of even naturals collectively is instrinsically an even whole number . On top of this , notice the pairs $ <nat:118> \times <var:Q> $ , $ <nat:86> \times <var:m> $ , $ <var:Z> \times <nat:192> $ , and likewise $ <nat:52> \times <var:w> $ are trivially even naturals as a consequence that the whole numbers $ <nat:118> $ , $ <nat:86> $ , $ <nat:192> $ , and moreover $ <nat:52> $ are clearly trivially even numbers in $ \mathbb{N} $ . in addition to by reason that taking the product between even naturals with a positive integer is guaranteed to be instrinsically an even positive integer the sum $ <nat:118> * <var:Q> + <var:Z> * <nat:192> + <var:m> * <nat:86> + <var:w> * <nat:52> $ must be by definition even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:m> <var:Z> <var:Q> <var:w> : nat , Nat . even ( <nat:86> * <var:m> + <nat:192> * <var:Z> + <nat:118> * <var:Q> + <nat:52> * <var:w> + <nat:216> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:118> = true ) . { auto . } assert ( <genH> : Nat . even <nat:86> = true ) . { auto . } assert ( <genH> : Nat . even <nat:192> = true ) . { auto . } assert ( <genH> : Nat . even <nat:52> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:118> * <var:Q> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:86> * <var:m> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:192> * <var:Z> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:52> * <var:w> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:86> * <var:m> + <nat:192> * <var:Z> + <nat:118> * <var:Q> + <nat:52> * <var:w> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . even_add . rewrite <genH> . auto . Qed . 