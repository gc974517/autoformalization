\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} We define that granted there exist whole numbers $ <var:H> $ , $ <var:v> $ , $ <var:Q> $ , $ <var:k> $ , $ <var:n> $ , $ <var:G> $ , $ <var:E> $ , $ <var:D> $ , $ <var:h> $ , $ <var:V> $ , $ <var:y> $ , $ <var:p> $ we say that some number $ <var:i> $ is a <def:twelve-composite> number when $ <var:h> \times <var:G> \times <var:v> \times <var:k> \times <var:p> \times <var:H> \times <var:D> \times <var:Q> \times <var:n> \times <var:y> \times <var:V> \times <var:E> = <var:i> $ plus unique terms are larger than or equivalent to <nat:2> . Consequently $ <nat:6227020800> = <var:i> $ is a <def:twelve-composite> positive integer . \end{theorem} \begin{proof} We verify the proposition is valid in view of $ <nat:12> $ , $ <nat:5> $ , $ <nat:6> $ , $ <nat:13> $ , $ <nat:9> $ , $ <nat:3> $ , $ <nat:2> $ , $ <nat:8> $ , $ <nat:4> $ , $ <nat:7> $ , $ <nat:10> $ and $ <nat:11> \geq <nat:2> $ and for $ <nat:9> \cdot <nat:5> \cdot <nat:4> \cdot <nat:13> \cdot <nat:6> \cdot <nat:8> \cdot <nat:12> \cdot <nat:11> \cdot <nat:3> \cdot <nat:10> \cdot <nat:2> \cdot <nat:7> = <nat:6227020800> $ . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:twelve-composite> ( <var:i> : nat ) := exists <var:H> <var:v> <var:Q> <var:k> <var:n> <var:G> <var:E> <var:D> <var:h> <var:V> <var:y> <var:p> : nat , ( <var:h> * <var:G> * <var:v> * <var:k> * <var:p> * <var:H> * <var:D> * <var:Q> * <var:n> * <var:y> * <var:V> * <var:E> = <var:i> ) /\ ( <var:H> >= <nat:2> ) /\ ( <var:v> >= <nat:2> ) /\ ( <var:Q> >= <nat:2> ) /\ ( <var:k> >= <nat:2> ) /\ ( <var:n> >= <nat:2> ) /\ ( <var:G> >= <nat:2> ) /\ ( <var:E> >= <nat:2> ) /\ ( <var:D> >= <nat:2> ) /\ ( <var:h> >= <nat:2> ) /\ ( <var:V> >= <nat:2> ) /\ ( <var:y> >= <nat:2> ) /\ ( <var:p> >= <nat:2> ) . Theorem <genP:1> : <def:twelve-composite> <nat:6227020800> . Proof . unfold <def:twelve-composite> . assert ( <genH> : <nat:12> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:5> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:6> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:13> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:9> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:3> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:2> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:8> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:4> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:7> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:10> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:11> >= <nat:2> ) . { lia . } exists <nat:6> . exists <nat:12> . exists <nat:10> . exists <nat:9> . exists <nat:8> . exists <nat:13> . exists <nat:2> . exists <nat:3> . exists <nat:4> . exists <nat:11> . exists <nat:7> . exists <nat:5> . repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 