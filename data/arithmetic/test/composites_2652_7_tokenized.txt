\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Assume $ <var:u> $ , $ <var:P> $ , $ <var:R> $ , $ <var:w> $ , $ <var:f> $ , $ <var:V> $ , $ <var:a> $ are integers where $ <var:P> $ , $ <var:a> $ , $ <var:R> $ , $ <var:w> $ , $ <var:V> $ , $ <var:f> $ and $ <var:u> \geq <nat:2> $ . Say that some whole number $ <var:W> $ is named a <def:seven-composite> natural number given $ <var:u> * <var:P> * <var:R> * <var:w> * <var:V> * <var:a> * <var:f> = <var:W> $ . Consequently the natural number <nat:1081080> is a <def:seven-composite> whole number . \end{theorem} \begin{proof} Assume $ <var:u> = <nat:9> $ , $ <var:w> = <nat:7> $ , $ <var:V> = <nat:5> $ , $ <var:P> = <nat:13> $ , $ <var:R> = <nat:6> $ , $ <var:f> = <nat:4> $ , $ <var:a> = <nat:11> $ . We show <nat:1081080> is the product of some integers $ <var:f> $ , $ <var:w> $ , $ <var:R> $ , $ <var:P> $ , $ <var:a> $ , $ <var:u> $ , $ <var:V> $ . Note that $ <nat:1081080> = <var:R> \times <var:V> \times <var:u> \times <var:a> \times <var:P> \times <var:w> \times <var:f> $ . Moreover note $ <var:a> = <nat:11> $ , $ <var:R> = <nat:6> $ , $ <var:f> = <nat:4> $ , $ <var:V> = <nat:5> $ , $ <var:w> = <nat:7> $ , $ <var:P> = <nat:13> $ , and $ <var:u> = <nat:9> $ are more than or equal to <nat:2> . This implies our formula is true . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:seven-composite> ( <var:W> : nat ) := exists <var:u> <var:P> <var:R> <var:w> <var:f> <var:V> <var:a> : nat , ( <var:P> >= <nat:2> ) /\ ( <var:a> >= <nat:2> ) /\ ( <var:R> >= <nat:2> ) /\ ( <var:w> >= <nat:2> ) /\ ( <var:V> >= <nat:2> ) /\ ( <var:f> >= <nat:2> ) /\ ( <var:u> >= <nat:2> ) /\ ( <var:u> * <var:P> * <var:R> * <var:w> * <var:V> * <var:a> * <var:f> = <var:W> ) . Theorem <genP:1> : <def:seven-composite> <nat:1081080> . Proof . unfold <def:seven-composite> . exists <nat:9> . exists <nat:13> . exists <nat:6> . exists <nat:7> . exists <nat:4> . exists <nat:5> . exists <nat:11> . assert ( <genH> : <nat:11> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:6> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:4> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:5> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:7> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:13> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:9> >= <nat:2> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 