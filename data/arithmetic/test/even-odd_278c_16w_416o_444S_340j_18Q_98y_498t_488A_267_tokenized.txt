\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:416> \cdot <var:o> + <nat:98> \cdot <var:y> + <var:A> \cdot <nat:488> + <var:j> \cdot <nat:340> + <var:S> \cdot <nat:444> + <nat:267> + <var:Q> \cdot <nat:18> + <var:t> \cdot <nat:498> + <nat:16> \cdot <var:w> + <var:c> \cdot <nat:278> $ must be odd . \end{theorem} \begin{proof} The terms $ <nat:416> * <var:o> $ , $ <nat:98> * <var:y> $ , $ <nat:488> * <var:A> $ , $ <var:j> * <nat:340> $ , $ <var:S> * <nat:444> $ , $ <nat:18> * <var:Q> $ , $ <var:t> * <nat:498> $ , $ <nat:16> * <var:w> $ , and likewise $ <nat:278> * <var:c> $ are known as even . This claim is proven because the numbers $ <nat:416> $ , $ <nat:98> $ , $ <nat:488> $ , $ <nat:340> $ , $ <nat:444> $ , $ <nat:18> $ , $ <nat:498> $ , $ <nat:16> $ , additionally $ <nat:278> $ will be even elements of $ \mathbb{N} $ . We demonstrate the summation $ <nat:278> * <var:c> + <var:w> * <nat:16> + <nat:416> * <var:o> + <nat:444> * <var:S> + <nat:267> + <var:j> * <nat:340> + <var:Q> * <nat:18> + <nat:98> * <var:y> + <var:t> * <nat:498> + <nat:488> * <var:A> $ is odd . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:o> <var:y> <var:A> <var:j> <var:S> <var:Q> <var:t> <var:w> <var:c> : nat , Nat . odd ( <nat:416> * <var:o> + <nat:98> * <var:y> + <nat:488> * <var:A> + <nat:340> * <var:j> + <nat:444> * <var:S> + <nat:18> * <var:Q> + <nat:498> * <var:t> + <nat:16> * <var:w> + <nat:278> * <var:c> + <nat:267> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:416> = true ) . { auto . } assert ( <genH> : Nat . even <nat:98> = true ) . { auto . } assert ( <genH> : Nat . even <nat:488> = true ) . { auto . } assert ( <genH> : Nat . even <nat:340> = true ) . { auto . } assert ( <genH> : Nat . even <nat:444> = true ) . { auto . } assert ( <genH> : Nat . even <nat:18> = true ) . { auto . } assert ( <genH> : Nat . even <nat:498> = true ) . { auto . } assert ( <genH> : Nat . even <nat:16> = true ) . { auto . } assert ( <genH> : Nat . even <nat:278> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:416> * <var:o> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:98> * <var:y> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:488> * <var:A> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:340> * <var:j> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:444> * <var:S> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:18> * <var:Q> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:498> * <var:t> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:16> * <var:w> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:278> * <var:c> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 