\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Assuming unknowns $ <var:Y> $ , $ <var:v> $ , $ <var:u> $ , and $ <var:e> $ the summation $ <nat:83> + <var:e> <nat:472> + <var:Y> <nat:450> + <nat:140> <var:v> + <var:u> <nat:320> $ is guaranteed to be odd . \end{theorem} \begin{proof} The summing of an even natural number and an odd natural number is odd . It can be justified that that $ <nat:83> + <nat:140> \cdot <var:v> + <nat:320> \cdot <var:u> + <nat:450> \cdot <var:Y> + <var:e> \cdot <nat:472> $ is trivially odd from the fact the summation $ <var:Y> <nat:450> + <var:e> <nat:472> + <var:v> <nat:140> + <var:u> <nat:320> $ is guaranteed to be even , from the knowledge the addition between even numbers concurrently with an even natural is guaranteed to be instrinsically an even integer . $ <var:v> \times <nat:140> $ is obviously an even number from the fact taking the product between an even element of $ \mathbb{N} $ with a positive integer will be even . The terms $ <nat:320> \times <var:u> $ and likewise $ <var:Y> \times <nat:450> $ are guaranteed to be even numbers in $ \mathbb{N} $ from the fact the multiplication between an even natural number with an arbitrary element of $ \mathbb{Z}^+ $ will be even . Remember the product $ <var:e> \times <nat:472> $ is clearly even . and also by reason that the multiplication between even whole numbers and a whole number is by its very nature an even element of $ \mathbb{N} $ . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:Y> <var:v> <var:u> <var:e> : nat , Nat . odd ( <nat:472> * <var:e> + <nat:450> * <var:Y> + <nat:140> * <var:v> + <nat:320> * <var:u> + <nat:83> ) = true . Proof . intros . rewrite Nat . odd_add . assert ( <genH> : Nat . even ( <nat:140> * <var:v> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:320> * <var:u> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:450> * <var:Y> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:472> * <var:e> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:472> * <var:e> + <nat:450> * <var:Y> + <nat:140> * <var:v> + <nat:320> * <var:u> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite <- Nat . negb_even . rewrite <genH> . auto . Qed . 