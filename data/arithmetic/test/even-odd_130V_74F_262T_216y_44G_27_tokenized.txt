\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:V> \times <nat:130> + <nat:74> \times <var:F> + <nat:262> \times <var:T> + <var:y> \times <nat:216> + <nat:27> + <nat:44> \times <var:G> $ will be odd . \end{theorem} \begin{proof} It can be justified that that $ <nat:44> * <var:G> + <var:y> * <nat:216> + <var:T> * <nat:262> + <nat:27> + <nat:130> * <var:V> + <nat:74> * <var:F> $ is odd by reason that $ <var:V> \cdot <nat:130> + <nat:262> \cdot <var:T> + <nat:216> \cdot <var:y> + <nat:74> \cdot <var:F> + <var:G> \cdot <nat:44> $ is known to be even . The leading terms $ <nat:262> $ and likewise $ <nat:74> $ are clearly even See the whole number $ <nat:130> $ is known as an even number in $ \mathbb{N} $ The natural number $ <nat:216> $ is even The number $ <nat:44> $ is known as even The sum $ <nat:130> * <var:V> + <nat:74> * <var:F> + <var:T> * <nat:262> + <nat:216> * <var:y> + <var:G> * <nat:44> $ is even from the fact the multiplication of even numbers in $ \mathbb{Z}^+ $ and a number in $ \mathbb{Z}^+ $ must be clearly an even natural . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:V> <var:F> <var:T> <var:y> <var:G> : nat , Nat . odd ( <nat:130> * <var:V> + <nat:74> * <var:F> + <nat:262> * <var:T> + <nat:216> * <var:y> + <nat:44> * <var:G> + <nat:27> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:262> = true ) . { auto . } assert ( <genH> : Nat . even <nat:74> = true ) . { auto . } assert ( <genH> : Nat . even <nat:130> = true ) . { auto . } assert ( <genH> : Nat . even <nat:216> = true ) . { auto . } assert ( <genH> : Nat . even <nat:44> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:130> * <var:V> + <nat:74> * <var:F> + <nat:262> * <var:T> + <nat:216> * <var:y> + <nat:44> * <var:G> ) = true ) . { repeat rewrite Nat . even_add . repeat rewrite Nat . even_mul . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . auto . Qed . 