\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:412> \times <var:S> + <var:V> \times <nat:14> + <nat:146> \times <var:t> + <nat:426> \times <var:j> + <nat:2> \times <var:h> + <nat:318> \times <var:f> + <var:r> \times <nat:98> + <nat:410> \times <var:J> + <nat:154> $ will be even using all positive integers $ <var:j> $ , $ <var:S> $ , $ <var:t> $ , $ <var:V> $ , $ <var:r> $ , $ <var:h> $ , $ <var:f> $ , and $ <var:J> $ . \end{theorem} \begin{proof} See that the summation between even integers concurrently with an even element of $ \mathbb{Z}^+ $ is guaranteed to be an even whole number . We use the assumption the formula $ <nat:146> \times <var:t> + <var:V> \times <nat:14> + <nat:98> \times <var:r> + <var:f> \times <nat:318> + <var:S> \times <nat:412> + <var:J> \times <nat:410> + <nat:426> \times <var:j> + <nat:2> \times <var:h> $ is even . Likewise , observe that the coefficients $ <nat:146> $ , $ <nat:14> $ , $ <nat:98> $ , $ <nat:318> $ , $ <nat:412> $ , $ <nat:410> $ , $ <nat:426> $ , in addition to $ <nat:2> $ are trivially even . Hence , the products $ <var:t> <nat:146> $ , $ <nat:14> <var:V> $ , $ <var:r> <nat:98> $ , $ <var:f> <nat:318> $ , $ <var:S> <nat:412> $ , $ <var:J> <nat:410> $ , $ <var:j> <nat:426> $ , in addition to $ <var:h> <nat:2> $ must be even also . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:j> <var:S> <var:t> <var:V> <var:r> <var:h> <var:f> <var:J> : nat , Nat . even ( <nat:412> * <var:S> + <nat:14> * <var:V> + <nat:146> * <var:t> + <nat:426> * <var:j> + <nat:2> * <var:h> + <nat:318> * <var:f> + <nat:98> * <var:r> + <nat:410> * <var:J> + <nat:154> ) = true . Proof . intros . rewrite Nat . even_add . assert ( <genH> : Nat . even <nat:146> = true ) . { auto . } assert ( <genH> : Nat . even <nat:14> = true ) . { auto . } assert ( <genH> : Nat . even <nat:98> = true ) . { auto . } assert ( <genH> : Nat . even <nat:318> = true ) . { auto . } assert ( <genH> : Nat . even <nat:412> = true ) . { auto . } assert ( <genH> : Nat . even <nat:410> = true ) . { auto . } assert ( <genH> : Nat . even <nat:426> = true ) . { auto . } assert ( <genH> : Nat . even <nat:2> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:146> * <var:t> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:14> * <var:V> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:98> * <var:r> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:318> * <var:f> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:412> * <var:S> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:410> * <var:J> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:426> * <var:j> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:2> * <var:h> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:412> * <var:S> + <nat:14> * <var:V> + <nat:146> * <var:t> + <nat:426> * <var:j> + <nat:2> * <var:h> + <nat:318> * <var:f> + <nat:98> * <var:r> + <nat:410> * <var:J> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite <genH> . auto . Qed . 