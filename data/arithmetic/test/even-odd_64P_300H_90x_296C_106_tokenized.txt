\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:90> <var:x> + <nat:300> <var:H> + <nat:106> + <var:C> <nat:296> + <var:P> <nat:64> $ must be even for every unknowns $ <var:H> $ , $ <var:x> $ , $ <var:C> $ , and $ <var:P> $ . \end{theorem} \begin{proof} We work with the assumption that $ <var:H> <nat:300> + <var:C> <nat:296> + <nat:90> <var:x> + <nat:106> + <nat:64> <var:P> $ is trivially even by reason that the expression $ <nat:296> \times <var:C> + <var:P> \times <nat:64> + <var:x> \times <nat:90> + <nat:300> \times <var:H> $ is clearly even , from the fact the summation between an even number and an even element of $ \mathbb{Z}^+ $ is guaranteed to be even . The numbers $ <nat:64> $ , $ <nat:300> $ , and $ <nat:90> $ will be even . Thus , the terms $ <nat:64> * <var:P> $ , $ <var:H> * <nat:300> $ , and likewise $ <var:x> * <nat:90> $ will be even as well . The positive integer $ <nat:296> $ is known to be an even whole number . In consequence , the pair $ <var:C> * <nat:296> $ is guaranteed to be even also . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:H> <var:x> <var:C> <var:P> : nat , Nat . even ( <nat:90> * <var:x> + <nat:300> * <var:H> + <nat:296> * <var:C> + <nat:64> * <var:P> + <nat:106> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:64> = true ) . { auto . } assert ( <genH> : Nat . even <nat:300> = true ) . { auto . } assert ( <genH> : Nat . even <nat:90> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:64> * <var:P> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:300> * <var:H> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:90> * <var:x> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:296> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:296> * <var:C> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:90> * <var:x> + <nat:300> * <var:H> + <nat:296> * <var:C> + <nat:64> * <var:P> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . even_add . rewrite <genH> . auto . Qed . 