\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:L> \cdot <nat:382> + <nat:150> \cdot <var:o> + <var:k> \cdot <nat:230> + <nat:216> \cdot <var:E> + <nat:307> $ is odd using every variables $ <var:L> $ , $ <var:E> $ , $ <var:k> $ , and $ <var:o> $ . \end{theorem} \begin{proof} We work with the assumption the fact that the formula $ <nat:150> <var:o> + <nat:230> <var:k> + <nat:216> <var:E> + <nat:382> <var:L> $ is known as even . Recall that the natural numbers $ <nat:230> $ , $ <nat:150> $ , as well as $ <nat:216> $ are trivially even . Therefore , the products $ <nat:230> \times <var:k> $ , $ <var:o> \times <nat:150> $ , and moreover $ <nat:216> \times <var:E> $ is even in addition . The term $ <var:L> \times <nat:382> $ is known to be even from the knowledge the leading term $ <nat:382> $ is even . Because the addition between even numbers in $ \mathbb{N} $ and even numbers must be even , as well as from the fact the product of even integers and a number is guaranteed to be even . We know $ <nat:307> $ is obviously odd . The adding of an even number with an odd element of $ \mathbb{Z}^+ $ must be odd . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:L> <var:E> <var:k> <var:o> : nat , Nat . odd ( <nat:382> * <var:L> + <nat:150> * <var:o> + <nat:230> * <var:k> + <nat:216> * <var:E> + <nat:307> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:230> = true ) . { auto . } assert ( <genH> : Nat . even <nat:150> = true ) . { auto . } assert ( <genH> : Nat . even <nat:216> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:230> * <var:k> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:150> * <var:o> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:216> * <var:E> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:382> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:382> * <var:L> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:382> * <var:L> + <nat:150> * <var:o> + <nat:230> * <var:k> + <nat:216> * <var:E> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } assert ( <genH> : Nat . odd <nat:307> = true ) . { auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . rewrite <genH> . auto . Qed . 