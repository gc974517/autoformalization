\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:310> * <var:l> + <var:u> * <nat:450> + <var:M> * <nat:328> + <var:T> * <nat:284> + <nat:36> * <var:X> + <var:e> * <nat:196> + <var:U> * <nat:404> + <nat:300> + <nat:498> * <var:K> $ will be even using any $ <var:K> $ , $ <var:l> $ , $ <var:M> $ , $ <var:T> $ , $ <var:u> $ , $ <var:U> $ , $ <var:e> $ , and $ <var:X> \in \mathbb{Z}^+ $ . \end{theorem} \begin{proof} Notice that the addition of even naturals successively must be even . Further , the products $ <var:l> * <nat:310> $ , $ <var:u> * <nat:450> $ , $ <var:M> * <nat:328> $ , $ <nat:284> * <var:T> $ , $ <nat:36> * <var:X> $ , $ <nat:196> * <var:e> $ , $ <nat:404> * <var:U> $ , and likewise $ <var:K> * <nat:498> $ must be even whole numbers . This claim holds from the knowledge the leading terms $ <nat:310> $ , $ <nat:450> $ , $ <nat:328> $ , $ <nat:284> $ , $ <nat:36> $ , $ <nat:196> $ , $ <nat:404> $ , plus $ <nat:498> $ are guaranteed to be even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:K> <var:l> <var:M> <var:T> <var:u> <var:U> <var:e> <var:X> : nat , Nat . even ( <nat:310> * <var:l> + <nat:450> * <var:u> + <nat:328> * <var:M> + <nat:284> * <var:T> + <nat:36> * <var:X> + <nat:196> * <var:e> + <nat:404> * <var:U> + <nat:498> * <var:K> + <nat:300> ) = true . Proof . intros . repeat rewrite Nat . even_add . assert ( <genH> : Nat . even <nat:310> = true ) . { auto . } assert ( <genH> : Nat . even <nat:450> = true ) . { auto . } assert ( <genH> : Nat . even <nat:328> = true ) . { auto . } assert ( <genH> : Nat . even <nat:284> = true ) . { auto . } assert ( <genH> : Nat . even <nat:36> = true ) . { auto . } assert ( <genH> : Nat . even <nat:196> = true ) . { auto . } assert ( <genH> : Nat . even <nat:404> = true ) . { auto . } assert ( <genH> : Nat . even <nat:498> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:310> * <var:l> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:450> * <var:u> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:328> * <var:M> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:284> * <var:T> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:36> * <var:X> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:196> * <var:e> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:404> * <var:U> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:498> * <var:K> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 