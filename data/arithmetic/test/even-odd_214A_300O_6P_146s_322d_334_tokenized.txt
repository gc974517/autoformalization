\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:A> * <nat:214> + <nat:146> * <var:s> + <var:O> * <nat:300> + <nat:334> + <nat:322> * <var:d> + <var:P> * <nat:6> $ is guaranteed to be even given every terms $ <var:A> $ , $ <var:s> $ , $ <var:d> $ , $ <var:P> $ , and $ <var:O> $ . \end{theorem} \begin{proof} It can be demonstrated that that the sum $ <var:P> * <nat:6> + <nat:334> + <nat:146> * <var:s> + <nat:214> * <var:A> + <var:d> * <nat:322> + <var:O> * <nat:300> $ is obviously even from the fact the formula $ <nat:214> * <var:A> + <var:O> * <nat:300> + <var:P> * <nat:6> + <var:s> * <nat:146> + <nat:322> * <var:d> $ is known to be even . Additionally , remember the positive integers $ <nat:214> $ , $ <nat:300> $ , $ <nat:6> $ , $ <nat:146> $ , and likewise $ <nat:322> $ are even . For this reason , the pairs $ <var:A> * <nat:214> $ , $ <nat:300> * <var:O> $ , $ <var:P> * <nat:6> $ , $ <var:s> * <nat:146> $ , additionally $ <var:d> * <nat:322> $ must be even also . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:A> <var:s> <var:d> <var:P> <var:O> : nat , Nat . even ( <nat:214> * <var:A> + <nat:146> * <var:s> + <nat:300> * <var:O> + <nat:322> * <var:d> + <nat:6> * <var:P> + <nat:334> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:214> = true ) . { auto . } assert ( <genH> : Nat . even <nat:300> = true ) . { auto . } assert ( <genH> : Nat . even <nat:6> = true ) . { auto . } assert ( <genH> : Nat . even <nat:146> = true ) . { auto . } assert ( <genH> : Nat . even <nat:322> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:214> * <var:A> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:300> * <var:O> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:6> * <var:P> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:146> * <var:s> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:322> * <var:d> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:214> * <var:A> + <nat:146> * <var:s> + <nat:300> * <var:O> + <nat:322> * <var:d> + <nat:6> * <var:P> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . even_add . rewrite <genH> . auto . Qed . 