\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:l> \cdot <nat:308> + <nat:256> \cdot <var:f> + <var:q> \cdot <nat:270> + <var:o> \cdot <nat:58> + <nat:341> + <var:B> \cdot <nat:292> + <nat:396> \cdot <var:N> + <nat:406> \cdot <var:y> $ is guaranteed to be odd with every natural terms $ <var:o> $ , $ <var:N> $ , $ <var:y> $ , $ <var:l> $ , $ <var:B> $ , $ <var:q> $ , and $ <var:f> $ . \end{theorem} \begin{proof} Observe that $ <nat:341> $ is clearly an odd positive integer . From the fact the adding between even natural numbers successively and an odd natural number must be an odd natural , hence the theorem is proven . The leading term $ <nat:58> $ is even Remember that the coefficients $ <nat:256> $ , $ <nat:396> $ , $ <nat:270> $ , and also $ <nat:308> $ are even On top of this , take note that the number $ <nat:406> $ is guaranteed to be even We know the coefficient $ <nat:292> $ is even \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:o> <var:N> <var:y> <var:l> <var:B> <var:q> <var:f> : nat , Nat . odd ( <nat:308> * <var:l> + <nat:256> * <var:f> + <nat:270> * <var:q> + <nat:58> * <var:o> + <nat:292> * <var:B> + <nat:396> * <var:N> + <nat:406> * <var:y> + <nat:341> ) = true . Proof . intros . assert ( <genH> : Nat . odd <nat:341> = true ) . { auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . assert ( <genH> : Nat . even <nat:58> = true ) . { auto . } assert ( <genH> : Nat . even <nat:256> = true ) . { auto . } assert ( <genH> : Nat . even <nat:396> = true ) . { auto . } assert ( <genH> : Nat . even <nat:270> = true ) . { auto . } assert ( <genH> : Nat . even <nat:308> = true ) . { auto . } assert ( <genH> : Nat . even <nat:406> = true ) . { auto . } assert ( <genH> : Nat . even <nat:292> = true ) . { auto . } repeat rewrite Nat . even_mul . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 