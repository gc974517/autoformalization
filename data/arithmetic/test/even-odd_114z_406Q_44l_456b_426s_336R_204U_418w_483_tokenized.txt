\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:483> + <var:w> \times <nat:418> + <nat:426> \times <var:s> + <nat:44> \times <var:l> + <var:R> \times <nat:336> + <var:U> \times <nat:204> + <var:b> \times <nat:456> + <nat:114> \times <var:z> + <var:Q> \times <nat:406> $ will be odd . \end{theorem} \begin{proof} It can be demonstrated that our main result holds . Our theorem holds because $ <var:U> * <nat:204> + <var:z> * <nat:114> + <var:s> * <nat:426> + <var:b> * <nat:456> + <var:w> * <nat:418> + <nat:336> * <var:R> + <nat:44> * <var:l> + <nat:406> * <var:Q> $ is guaranteed to be even . Remember the products $ <var:w> \cdot <nat:418> $ , $ <nat:114> \cdot <var:z> $ , $ <nat:336> \cdot <var:R> $ , $ <nat:204> \cdot <var:U> $ , $ <nat:44> \cdot <var:l> $ , additionally $ <nat:406> \cdot <var:Q> $ are obviously even . Further , the pair $ <var:b> \cdot <nat:456> $ is guaranteed to be even . What's more , the term $ <nat:426> \cdot <var:s> $ is obviously an even positive integer . This holds by reason that the product of an even number in $ \mathbb{Z}^+ $ with a number in $ \mathbb{N} $ is guaranteed to be even . The summation $ <var:z> <nat:114> + <var:Q> <nat:406> + <var:l> <nat:44> + <var:b> <nat:456> + <nat:426> <var:s> + <nat:336> <var:R> + <var:U> <nat:204> + <nat:418> <var:w> $ must be trivially even because the adding of even whole numbers with an even number in $ \mathbb{N} $ is even and moreover from the fact the product of an even element of $ \mathbb{Z}^+ $ with some number in $ \mathbb{N} $ will be even . Notice that the summation of an even element of $ \mathbb{N} $ and an odd natural number is guaranteed to be odd . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:w> <var:s> <var:l> <var:R> <var:U> <var:b> <var:z> <var:Q> : nat , Nat . odd ( <nat:418> * <var:w> + <nat:426> * <var:s> + <nat:44> * <var:l> + <nat:336> * <var:R> + <nat:204> * <var:U> + <nat:456> * <var:b> + <nat:114> * <var:z> + <nat:406> * <var:Q> + <nat:483> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:418> * <var:w> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:114> * <var:z> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:336> * <var:R> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:204> * <var:U> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:44> * <var:l> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:406> * <var:Q> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:456> * <var:b> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:426> * <var:s> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:418> * <var:w> + <nat:426> * <var:s> + <nat:44> * <var:l> + <nat:336> * <var:R> + <nat:204> * <var:U> + <nat:456> * <var:b> + <nat:114> * <var:z> + <nat:406> * <var:Q> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . auto . Qed . 