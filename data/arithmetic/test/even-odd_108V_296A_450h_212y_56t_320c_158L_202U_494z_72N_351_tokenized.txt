\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:c> * <nat:320> + <nat:450> * <var:h> + <nat:72> * <var:N> + <nat:296> * <var:A> + <nat:158> * <var:L> + <nat:212> * <var:y> + <var:U> * <nat:202> + <nat:494> * <var:z> + <nat:351> + <var:V> * <nat:108> + <nat:56> * <var:t> $ will be odd assuming all natural terms $ <var:t> $ , $ <var:L> $ , $ <var:z> $ , $ <var:h> $ , $ <var:c> $ , $ <var:A> $ , $ <var:U> $ , $ <var:y> $ , $ <var:N> $ , and $ <var:V> $ . \end{theorem} \begin{proof} The totaling between even elements of $ \mathbb{N} $ successively and an odd whole number is odd . See that $ <nat:351> $ is known to be odd . Our result holds because $ <var:V> \times <nat:108> + <nat:296> \times <var:A> + <var:h> \times <nat:450> + <nat:212> \times <var:y> + <var:t> \times <nat:56> + <var:c> \times <nat:320> + <nat:158> \times <var:L> + <var:U> \times <nat:202> + <nat:494> \times <var:z> + <nat:72> \times <var:N> $ is trivially even . Recall taking the product between an even element of $ \mathbb{N} $ with some whole number is instrinsically an even integer . Recall the positive integers $ <nat:108> $ , $ <nat:202> $ , $ <nat:320> $ , $ <nat:212> $ , $ <nat:56> $ , $ <nat:158> $ , $ <nat:296> $ , in addition to $ <nat:494> $ are known to be even Notice that the natural number $ <nat:72> $ is an even positive integer Likewise , observe that the leading term $ <nat:450> $ is known as even \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:t> <var:L> <var:z> <var:h> <var:c> <var:A> <var:U> <var:y> <var:N> <var:V> : nat , Nat . odd ( <nat:320> * <var:c> + <nat:450> * <var:h> + <nat:72> * <var:N> + <nat:296> * <var:A> + <nat:158> * <var:L> + <nat:212> * <var:y> + <nat:202> * <var:U> + <nat:494> * <var:z> + <nat:108> * <var:V> + <nat:56> * <var:t> + <nat:351> ) = true . Proof . intros . rewrite Nat . odd_add . assert ( <genH> : Nat . odd <nat:351> = true ) . { auto . } assert ( <genH> : Nat . even <nat:108> = true ) . { auto . } assert ( <genH> : Nat . even <nat:202> = true ) . { auto . } assert ( <genH> : Nat . even <nat:320> = true ) . { auto . } assert ( <genH> : Nat . even <nat:212> = true ) . { auto . } assert ( <genH> : Nat . even <nat:56> = true ) . { auto . } assert ( <genH> : Nat . even <nat:158> = true ) . { auto . } assert ( <genH> : Nat . even <nat:296> = true ) . { auto . } assert ( <genH> : Nat . even <nat:494> = true ) . { auto . } assert ( <genH> : Nat . even <nat:72> = true ) . { auto . } assert ( <genH> : Nat . even <nat:450> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:320> * <var:c> + <nat:450> * <var:h> + <nat:72> * <var:N> + <nat:296> * <var:A> + <nat:158> * <var:L> + <nat:212> * <var:y> + <nat:202> * <var:U> + <nat:494> * <var:z> + <nat:108> * <var:V> + <nat:56> * <var:t> ) = true ) . { repeat rewrite Nat . even_add . repeat rewrite Nat . even_mul . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite <- Nat . negb_even . rewrite <genH> . rewrite <genH> . auto . Qed . 