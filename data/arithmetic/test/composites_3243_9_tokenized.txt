\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Wherever we have satisfying the condition that $ <var:p> $ , $ <var:c> $ , $ <var:Q> $ , $ <var:w> $ , $ <var:H> $ , $ <var:m> $ , $ <var:Y> $ , $ <var:R> $ , and $ <var:S> > <nat:1> $ so that taking some positive integer $ <var:r> $ , $ <var:r> = <var:S> * <var:Q> * <var:Y> * <var:c> * <var:m> * <var:R> * <var:w> * <var:p> * <var:H> $ assuming some $ <var:Y> $ , $ <var:S> $ , $ <var:Q> $ , $ <var:w> $ , $ <var:p> $ , $ <var:R> $ , $ <var:m> $ , $ <var:H> $ , $ <var:c> \in \mathbb{Z}^+ $ , we claim that $ <var:r> $ is <def:nine-composite> . For this reason $ <var:r> = <nat:5896800> $ is a <def:nine-composite> integer . \end{theorem} \begin{proof} We confirm $ <nat:5896800> = <var:c> * <var:Q> * <var:p> * <var:R> * <var:w> * <var:H> * <var:S> * <var:m> * <var:Y> $ . Observe $ <nat:5896800> = <var:Y> * <var:p> * <var:Q> * <var:m> * <var:w> * <var:S> * <var:c> * <var:H> * <var:R> $ suggests $ <var:Q> = <nat:3> $ , $ <var:S> = <nat:10> $ , $ <var:w> = <nat:4> $ , $ <var:R> = <nat:6> $ , $ <var:H> = <nat:9> $ , $ <var:Y> = <nat:2> $ , $ <var:c> = <nat:5> $ , $ <var:p> = <nat:13> $ , and $ <var:m> = <nat:7> $ . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:nine-composite> ( <var:r> : nat ) := exists <var:Y> <var:S> <var:Q> <var:w> <var:p> <var:R> <var:m> <var:H> <var:c> : nat , ( <var:p> > <nat:1> ) /\ ( <var:c> > <nat:1> ) /\ ( <var:Q> > <nat:1> ) /\ ( <var:w> > <nat:1> ) /\ ( <var:H> > <nat:1> ) /\ ( <var:m> > <nat:1> ) /\ ( <var:Y> > <nat:1> ) /\ ( <var:R> > <nat:1> ) /\ ( <var:S> > <nat:1> ) /\ ( <var:r> = <var:S> * <var:Q> * <var:Y> * <var:c> * <var:m> * <var:R> * <var:w> * <var:p> * <var:H> ) . Theorem <genP:1> : <def:nine-composite> <nat:5896800> . Proof . unfold <def:nine-composite> . exists <nat:2> . exists <nat:10> . exists <nat:3> . exists <nat:4> . exists <nat:13> . exists <nat:6> . exists <nat:7> . exists <nat:9> . exists <nat:5> . repeat split . all : lia . Qed . 