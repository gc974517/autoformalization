\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:212> \cdot <var:g> + <var:S> \cdot <nat:360> + <nat:140> \cdot <var:d> + <var:o> \cdot <nat:296> + <nat:42> \cdot <var:i> + <nat:462> \cdot <var:l> + <nat:290> \cdot <var:X> + <nat:18> $ is guaranteed to be even given every unknowns $ <var:S> $ , $ <var:g> $ , $ <var:o> $ , $ <var:l> $ , $ <var:i> $ , $ <var:X> $ , and $ <var:d> $ . \end{theorem} \begin{proof} Adding on , take note the leading terms $ <nat:212> $ , $ <nat:360> $ , $ <nat:140> $ , $ <nat:296> $ , $ <nat:42> $ , $ <nat:462> $ , $ <nat:290> $ , will be even . Consequently , the products $ <nat:212> * <var:g> $ , $ <var:S> * <nat:360> $ , $ <nat:140> * <var:d> $ , $ <nat:296> * <var:o> $ , $ <nat:42> * <var:i> $ , $ <nat:462> * <var:l> $ , $ <nat:290> * <var:X> $ , must be even also . Notice that $ <nat:18> $ is obviously even . It can be checked that the main result is true . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:S> <var:g> <var:o> <var:l> <var:i> <var:X> <var:d> : nat , Nat . even ( <nat:212> * <var:g> + <nat:360> * <var:S> + <nat:140> * <var:d> + <nat:296> * <var:o> + <nat:42> * <var:i> + <nat:462> * <var:l> + <nat:290> * <var:X> + <nat:18> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:212> = true ) . { auto . } assert ( <genH> : Nat . even <nat:360> = true ) . { auto . } assert ( <genH> : Nat . even <nat:140> = true ) . { auto . } assert ( <genH> : Nat . even <nat:296> = true ) . { auto . } assert ( <genH> : Nat . even <nat:42> = true ) . { auto . } assert ( <genH> : Nat . even <nat:462> = true ) . { auto . } assert ( <genH> : Nat . even <nat:290> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:212> * <var:g> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:360> * <var:S> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:140> * <var:d> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:296> * <var:o> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:42> * <var:i> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:462> * <var:l> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:290> * <var:X> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:18> = true ) . { auto . } repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 