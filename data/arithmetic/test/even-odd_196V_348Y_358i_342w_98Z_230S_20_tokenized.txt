\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Taking every $ <var:Z> $ , $ <var:i> $ , $ <var:Y> $ , $ <var:V> $ , $ <var:w> $ , and $ <var:S> \in \mathbb{Z}^+ $ the summation $ <nat:196> <var:V> + <nat:348> <var:Y> + <var:i> <nat:358> + <nat:20> + <nat:342> <var:w> + <var:Z> <nat:98> + <var:S> <nat:230> $ must be even . \end{theorem} \begin{proof} Furthermore , recall the terms $ <var:V> <nat:196> $ , $ <nat:348> <var:Y> $ , $ <var:i> <nat:358> $ , $ <var:w> <nat:342> $ , $ <var:Z> <nat:98> $ , plus $ <var:S> <nat:230> $ must be even . This claim is true from the fact the multiplication between an even number with some number is guaranteed to be even additionally the positive integers $ <nat:196> $ , $ <nat:348> $ , $ <nat:358> $ , $ <nat:342> $ , $ <nat:98> $ , plus $ <nat:230> $ are trivially by themselves even elements of $ \mathbb{N} $ . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:Z> <var:i> <var:Y> <var:V> <var:w> <var:S> : nat , Nat . even ( <nat:196> * <var:V> + <nat:348> * <var:Y> + <nat:358> * <var:i> + <nat:342> * <var:w> + <nat:98> * <var:Z> + <nat:230> * <var:S> + <nat:20> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:196> = true ) . { auto . } assert ( <genH> : Nat . even <nat:348> = true ) . { auto . } assert ( <genH> : Nat . even <nat:358> = true ) . { auto . } assert ( <genH> : Nat . even <nat:342> = true ) . { auto . } assert ( <genH> : Nat . even <nat:98> = true ) . { auto . } assert ( <genH> : Nat . even <nat:230> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:196> * <var:V> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:348> * <var:Y> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:358> * <var:i> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:342> * <var:w> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:98> * <var:Z> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:230> * <var:S> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 