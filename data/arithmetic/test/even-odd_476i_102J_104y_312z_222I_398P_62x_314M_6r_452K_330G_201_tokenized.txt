\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:M> \times <nat:314> + <var:r> \times <nat:6> + <var:y> \times <nat:104> + <var:J> \times <nat:102> + <nat:330> \times <var:G> + <nat:398> \times <var:P> + <nat:452> \times <var:K> + <var:I> \times <nat:222> + <nat:201> + <nat:312> \times <var:z> + <var:i> \times <nat:476> + <nat:62> \times <var:x> $ is odd . \end{theorem} \begin{proof} We work with the assumption that $ <var:z> \cdot <nat:312> + <nat:314> \cdot <var:M> + <var:i> \cdot <nat:476> + <nat:452> \cdot <var:K> + <var:y> \cdot <nat:104> + <nat:6> \cdot <var:r> + <nat:398> \cdot <var:P> + <var:x> \cdot <nat:62> + <nat:102> \cdot <var:J> + <var:G> \cdot <nat:330> + <nat:201> + <var:I> \cdot <nat:222> $ is trivially odd because the expression $ <nat:104> * <var:y> + <nat:398> * <var:P> + <nat:6> * <var:r> + <var:i> * <nat:476> + <var:K> * <nat:452> + <nat:222> * <var:I> + <var:G> * <nat:330> + <var:x> * <nat:62> + <nat:314> * <var:M> + <nat:312> * <var:z> + <nat:102> * <var:J> $ is even . Take note that the totaling between even numbers in $ \mathbb{Z}^+ $ collectively and an even natural number will be fundamentally an even number in $ \mathbb{Z}^+ $ . $ <var:M> <nat:314> $ is obviously even since multiplying between an even natural number and a natural number is guaranteed to be even . This fact is proven from the fact the leading term $ <nat:314> $ is obviously even . Observe that the term $ <var:r> <nat:6> $ is even . This is proven as a consequence that the number $ <nat:6> $ is trivially even . Likewise , the positive integer $ <nat:312> $ is trivially an even number in $ \mathbb{Z}^+ $ . Thus , the product $ <var:z> <nat:312> $ is even too . Building on , we know the coefficient $ <nat:62> $ is guaranteed to be even . Thus , $ <var:x> <nat:62> $ is guaranteed to be even also . Recall the whole number $ <nat:104> $ is known as even . Therefore , the product $ <nat:104> <var:y> $ is even additionally . Building on , take note that the term $ <nat:330> <var:G> $ is trivially even from the fact the integer $ <nat:330> $ is trivially trivially an even number in $ \mathbb{N} $ . The coefficient $ <nat:102> $ is known as an even number in $ \mathbb{N} $ . Thus , the term $ <var:J> <nat:102> $ must be even in addition . The leading term $ <nat:452> $ is even . Consequently , the product $ <var:K> <nat:452> $ is even in addition . Adding on , the number $ <nat:222> $ is trivially even . So , $ <var:I> <nat:222> $ is guaranteed to be even too . On top of this , the number $ <nat:398> $ is obviously even . Hence , the term $ <nat:398> <var:P> $ will be even also . Notice the product $ <nat:476> <var:i> $ is even . This must be true from the fact the multiplication of an even positive integer and a number in $ \mathbb{N} $ must be obviously an even element of $ \mathbb{Z}^+ $ . This claim must be true because the leading term $ <nat:476> $ is known as even . as well as from the knowledge taking the product between even naturals and any element of $ \mathbb{N} $ will be even this result is proven . It can be proven that the expression $ <nat:201> + <var:i> * <nat:476> + <nat:102> * <var:J> + <var:y> * <nat:104> + <var:z> * <nat:312> + <var:I> * <nat:222> + <var:P> * <nat:398> + <nat:62> * <var:x> + <var:M> * <nat:314> + <var:r> * <nat:6> + <var:K> * <nat:452> + <nat:330> * <var:G> $ must be odd . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:M> <var:r> <var:y> <var:J> <var:G> <var:P> <var:K> <var:I> <var:z> <var:i> <var:x> : nat , Nat . odd ( <nat:314> * <var:M> + <nat:6> * <var:r> + <nat:104> * <var:y> + <nat:102> * <var:J> + <nat:330> * <var:G> + <nat:398> * <var:P> + <nat:452> * <var:K> + <nat:222> * <var:I> + <nat:312> * <var:z> + <nat:476> * <var:i> + <nat:62> * <var:x> + <nat:201> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:314> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:314> * <var:M> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:6> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:6> * <var:r> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:312> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:312> * <var:z> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:62> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:62> * <var:x> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:104> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:104> * <var:y> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:330> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:330> * <var:G> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:102> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:102> * <var:J> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:452> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:452> * <var:K> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:222> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:222> * <var:I> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:398> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:398> * <var:P> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:476> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:476> * <var:i> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:314> * <var:M> + <nat:6> * <var:r> + <nat:104> * <var:y> + <nat:102> * <var:J> + <nat:330> * <var:G> + <nat:398> * <var:P> + <nat:452> * <var:K> + <nat:222> * <var:I> + <nat:312> * <var:z> + <nat:476> * <var:i> + <nat:62> * <var:x> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . auto . Qed . 