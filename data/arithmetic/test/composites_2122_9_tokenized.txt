\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} The positive integer <nat:46126080> is the product of $ <var:w> $ , $ <var:Y> $ , $ <var:h> $ , $ <var:x> $ , $ <var:p> $ , $ <var:U> $ , $ <var:L> $ , $ <var:R> $ , and $ <var:u> \in \mathbb{Z}^+ $ where $ <var:L> $ , $ <var:u> $ , $ <var:h> $ , $ <var:w> $ , $ <var:Y> $ , $ <var:x> $ , $ <var:R> $ , $ <var:U> $ and $ <var:p> $ more than or equivalent to <nat:2> . \end{theorem} \begin{proof} Allow $ <var:h> = <nat:12> $ , $ <var:w> = <nat:10> $ , $ <var:p> = <nat:4> $ , $ <var:U> = <nat:7> $ , $ <var:Y> = <nat:8> $ , $ <var:u> = <nat:6> $ , $ <var:x> = <nat:13> $ , $ <var:L> = <nat:11> $ , $ <var:R> = <nat:2> $ . We verify the claim holds in view of $ <var:p> \cdot <var:h> \cdot <var:L> \cdot <var:Y> \cdot <var:R> \cdot <var:U> \cdot <var:u> \cdot <var:x> \cdot <var:w> = <nat:46126080> $ and seeing that $ <nat:8> $ , $ <nat:13> $ , $ <nat:10> $ , $ <nat:4> $ , $ <nat:11> $ , $ <nat:12> $ , $ <nat:7> $ , $ <nat:2> $ , $ <nat:6> \geq <nat:2> $ . \end{proof} \end{document} 
~
Require Import Lia . Theorem <genP:1> : exists <var:w> <var:Y> <var:h> <var:x> <var:p> <var:U> <var:L> <var:R> <var:u> : nat , ( <nat:46126080> = <var:w> * <var:Y> * <var:h> * <var:x> * <var:p> * <var:U> * <var:L> * <var:R> * <var:u> ) /\ ( <var:L> >= <nat:2> ) /\ ( <var:u> >= <nat:2> ) /\ ( <var:h> >= <nat:2> ) /\ ( <var:w> >= <nat:2> ) /\ ( <var:Y> >= <nat:2> ) /\ ( <var:x> >= <nat:2> ) /\ ( <var:R> >= <nat:2> ) /\ ( <var:U> >= <nat:2> ) /\ ( <var:p> >= <nat:2> ) . Proof . exists <nat:10> . exists <nat:8> . exists <nat:12> . exists <nat:13> . exists <nat:4> . exists <nat:7> . exists <nat:11> . exists <nat:2> . exists <nat:6> . assert ( <genH> : <nat:8> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:13> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:10> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:4> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:11> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:12> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:7> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:2> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:6> >= <nat:2> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 