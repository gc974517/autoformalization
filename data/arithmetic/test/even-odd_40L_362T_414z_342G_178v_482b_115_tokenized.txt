\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:178> \cdot <var:v> + <var:z> \cdot <nat:414> + <nat:342> \cdot <var:G> + <var:L> \cdot <nat:40> + <nat:115> + <nat:482> \cdot <var:b> + <var:T> \cdot <nat:362> $ will be odd for some $ <var:L> $ , $ <var:T> $ , $ <var:z> $ , $ <var:G> $ , $ <var:v> $ , and $ <var:b> \in \mathbb{Z}^+ $ . \end{theorem} \begin{proof} Notice that the pairs $ <var:v> * <nat:178> $ , $ <var:G> * <nat:342> $ , and moreover $ <nat:40> * <var:L> $ are even . In addition to this , notice that the terms $ <var:T> * <nat:362> $ and likewise $ <var:b> * <nat:482> $ must be even . This is proven since taking the product between an even element of $ \mathbb{N} $ with a whole number will be even . Building on , the pair $ <nat:414> * <var:z> $ is guaranteed to be even . This must be true by reason that taking the product of an even natural number with some natural number is even . We show the formula $ <var:L> * <nat:40> + <nat:115> + <var:T> * <nat:362> + <nat:414> * <var:z> + <nat:342> * <var:G> + <var:v> * <nat:178> + <var:b> * <nat:482> $ is odd . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:L> <var:T> <var:z> <var:G> <var:v> <var:b> : nat , Nat . odd ( <nat:178> * <var:v> + <nat:414> * <var:z> + <nat:342> * <var:G> + <nat:40> * <var:L> + <nat:482> * <var:b> + <nat:362> * <var:T> + <nat:115> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:178> * <var:v> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:342> * <var:G> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:40> * <var:L> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:362> * <var:T> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:482> * <var:b> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:414> * <var:z> ) = true ) . { rewrite Nat . even_mul . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 