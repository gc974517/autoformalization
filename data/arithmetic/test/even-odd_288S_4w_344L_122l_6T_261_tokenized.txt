\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:w> \times <nat:4> + <nat:288> \times <var:S> + <var:T> \times <nat:6> + <nat:261> + <nat:344> \times <var:L> + <nat:122> \times <var:l> $ is guaranteed to be odd for every terms $ <var:L> $ , $ <var:S> $ , $ <var:w> $ , $ <var:T> $ , and $ <var:l> $ . \end{theorem} \begin{proof} Observe $ <nat:261> $ is guaranteed to be odd . The summing between an even positive integer with an odd whole number will be obviously an odd number . We utilize the knowledge that the summation $ <nat:288> * <var:S> + <var:w> * <nat:4> + <var:L> * <nat:344> + <nat:261> + <var:l> * <nat:122> + <nat:6> * <var:T> $ is guaranteed to be odd from the fact the sum $ <nat:288> \times <var:S> + <nat:4> \times <var:w> + <nat:344> \times <var:L> + <nat:122> \times <var:l> + <var:T> \times <nat:6> $ is guaranteed to be even . Remember that the number $ <nat:288> $ is clearly an even element of $ \mathbb{Z}^+ $ On top of this , see that the coefficient $ <nat:122> $ is known to be even Building on , notice the integers $ <nat:4> $ and likewise $ <nat:6> $ are even positive integers The number $ <nat:344> $ is an even natural The expression $ <var:S> \times <nat:288> + <var:w> \times <nat:4> + <nat:344> \times <var:L> + <nat:122> \times <var:l> + <var:T> \times <nat:6> $ is guaranteed to be fundamentally even from the fact the addition of even whole numbers and an even natural is an even number in $ \mathbb{N} $ . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:L> <var:S> <var:w> <var:T> <var:l> : nat , Nat . odd ( <nat:4> * <var:w> + <nat:288> * <var:S> + <nat:6> * <var:T> + <nat:344> * <var:L> + <nat:122> * <var:l> + <nat:261> ) = true . Proof . intros . assert ( <genH> : Nat . odd <nat:261> = true ) . { auto . } rewrite Nat . odd_add . assert ( <genH> : Nat . even <nat:288> = true ) . { auto . } assert ( <genH> : Nat . even <nat:122> = true ) . { auto . } assert ( <genH> : Nat . even <nat:4> = true ) . { auto . } assert ( <genH> : Nat . even <nat:6> = true ) . { auto . } assert ( <genH> : Nat . even <nat:344> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:4> * <var:w> + <nat:288> * <var:S> + <nat:6> * <var:T> + <nat:344> * <var:L> + <nat:122> * <var:l> ) = true ) . { repeat rewrite Nat . even_add . repeat rewrite Nat . even_mul . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite <- Nat . negb_even . rewrite <genH> . rewrite <genH> . auto . Qed . 