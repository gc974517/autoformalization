\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:X> * <nat:72> + <nat:294> * <var:p> + <nat:224> + <var:B> * <nat:498> + <nat:348> * <var:V> + <var:I> * <nat:128> + <var:W> * <nat:424> $ must be even . \end{theorem} \begin{proof} The terms $ <var:I> * <nat:128> $ , $ <var:B> * <nat:498> $ , $ <nat:72> * <var:X> $ , and $ <nat:348> * <var:V> $ are even from the knowledge multiplying between an even natural number with a natural number must be even . Remember the product $ <nat:294> * <var:p> $ is known as an even number in $ \mathbb{Z}^+ $ . Take note that $ <nat:424> * <var:W> $ is obviously an even number by reason that taking the product of an even number and a number will be in itself an even integer . Recall that the adding of even elements of $ \mathbb{Z}^+ $ must be even . We know that $ <nat:224> $ is known as an even integer . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:X> <var:p> <var:B> <var:V> <var:I> <var:W> : nat , Nat . even ( <nat:72> * <var:X> + <nat:294> * <var:p> + <nat:498> * <var:B> + <nat:348> * <var:V> + <nat:128> * <var:I> + <nat:424> * <var:W> + <nat:224> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:128> * <var:I> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:498> * <var:B> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:72> * <var:X> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:348> * <var:V> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:294> * <var:p> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:424> * <var:W> ) = true ) . { rewrite Nat . even_mul . auto . } repeat rewrite Nat . even_add . assert ( <genH> : Nat . even <nat:224> = true ) . { auto . } rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 