\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} <nat:950400> is the multiplication between numbers $ <var:w> $ , $ <var:c> $ , $ <var:k> $ , $ <var:P> $ , $ <var:D> $ , $ <var:j> $ , $ <var:O> $ so that $ <var:j> $ , $ <var:D> $ , $ <var:w> $ , $ <var:O> $ , $ <var:P> $ , $ <var:c> $ , $ <var:k> $ more than or equal to <nat:2> . \end{theorem} \begin{proof} Take $ <var:O> = <nat:3> $ , $ <var:j> = <nat:6> $ , $ <var:D> = <nat:8> $ , $ <var:k> = <nat:11> $ , $ <var:c> = <nat:5> $ , $ <var:w> = <nat:10> $ , and $ <var:P> = <nat:12> $ . We verify $ <var:O> \cdot <var:c> \cdot <var:P> \cdot <var:j> \cdot <var:w> \cdot <var:k> \cdot <var:D> = <nat:950400> $ . Notice $ <var:c> = <nat:5> $ , $ <var:w> = <nat:10> $ , $ <var:j> = <nat:6> $ , $ <var:P> = <nat:12> $ , $ <var:k> = <nat:11> $ , $ <var:D> = <nat:8> $ and $ <var:O> = <nat:3> $ are more than or equal to <nat:2> . \end{proof} \end{document} 
~
Require Import Lia . Theorem <genP:1> : exists <var:w> <var:c> <var:k> <var:P> <var:D> <var:j> <var:O> : nat , ( <nat:950400> = <var:w> * <var:c> * <var:k> * <var:P> * <var:D> * <var:j> * <var:O> ) /\ ( <var:j> >= <nat:2> ) /\ ( <var:D> >= <nat:2> ) /\ ( <var:w> >= <nat:2> ) /\ ( <var:O> >= <nat:2> ) /\ ( <var:P> >= <nat:2> ) /\ ( <var:c> >= <nat:2> ) /\ ( <var:k> >= <nat:2> ) . Proof . exists <nat:10> . exists <nat:5> . exists <nat:11> . exists <nat:12> . exists <nat:8> . exists <nat:6> . exists <nat:3> . assert ( <genH> : <nat:5> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:10> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:6> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:12> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:11> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:8> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:3> >= <nat:2> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 