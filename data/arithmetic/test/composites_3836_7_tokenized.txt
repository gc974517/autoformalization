\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Whenever we have $ <var:F> = <var:A> \times <var:P> \times <var:L> \times <var:w> \times <var:p> \times <var:l> \times <var:Y> $ for $ <var:F> \in \mathbb{N} $ plus such that $ <var:P> $ , $ <var:A> $ , $ <var:L> $ , $ <var:l> $ , $ <var:Y> $ , $ <var:p> $ , $ <var:w> \geq <nat:2> $ with some $ <var:w> $ , $ <var:A> $ , $ <var:l> $ , $ <var:L> $ , $ <var:Y> $ , $ <var:P> $ , $ <var:p> \in \mathbb{Z}^+ $ , denote that $ <var:F> $ is a <def:seven-composite> positive integer . Therefore $ <nat:576576> = <var:F> $ is <def:seven-composite> . \end{theorem} \begin{proof} Take $ <var:l> = <nat:7> $ , $ <var:P> = <nat:4> $ , $ <var:Y> = <nat:6> $ , $ <var:w> = <nat:11> $ , $ <var:L> = <nat:3> $ , $ <var:A> = <nat:8> $ and $ <var:p> = <nat:13> $ . In addition observe $ <var:A> = <nat:8> $ , $ <var:p> = <nat:13> $ , $ <var:Y> = <nat:6> $ , $ <var:L> = <nat:3> $ , $ <var:w> = <nat:11> $ , $ <var:P> = <nat:4> $ , and $ <var:l> = <nat:7> $ are larger than <nat:1> . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:seven-composite> ( <var:F> : nat ) := exists <var:w> <var:A> <var:l> <var:L> <var:Y> <var:P> <var:p> : nat , ( <var:F> = <var:A> * <var:P> * <var:L> * <var:w> * <var:p> * <var:l> * <var:Y> ) /\ ( <var:P> >= <nat:2> ) /\ ( <var:A> >= <nat:2> ) /\ ( <var:L> >= <nat:2> ) /\ ( <var:l> >= <nat:2> ) /\ ( <var:Y> >= <nat:2> ) /\ ( <var:p> >= <nat:2> ) /\ ( <var:w> >= <nat:2> ) . Theorem <genP:1> : <def:seven-composite> <nat:576576> . Proof . unfold <def:seven-composite> . exists <nat:11> . exists <nat:8> . exists <nat:7> . exists <nat:3> . exists <nat:6> . exists <nat:4> . exists <nat:13> . assert ( <genH> : <nat:8> > <nat:1> ) . { lia . } assert ( <genH> : <nat:13> > <nat:1> ) . { lia . } assert ( <genH> : <nat:6> > <nat:1> ) . { lia . } assert ( <genH> : <nat:3> > <nat:1> ) . { lia . } assert ( <genH> : <nat:11> > <nat:1> ) . { lia . } assert ( <genH> : <nat:4> > <nat:1> ) . { lia . } assert ( <genH> : <nat:7> > <nat:1> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 