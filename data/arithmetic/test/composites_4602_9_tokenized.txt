\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} When we get $ <var:L> \cdot <var:B> \cdot <var:x> \cdot <var:V> \cdot <var:o> \cdot <var:R> \cdot <var:F> \cdot <var:O> \cdot <var:W> = <var:l> $ given $ <var:l> \in \mathbb{Z}^+ $ , take as given that $ <var:l> $ is a <def:nine-composite> integer for some $ <var:W> $ , $ <var:V> $ , $ <var:F> $ , $ <var:B> $ , $ <var:o> $ , $ <var:L> $ , $ <var:R> $ , $ <var:O> $ , $ <var:x> \in \mathbb{Z}^+ $ . Consequently <nat:4717440> is a <def:nine-composite> integer . \end{theorem} \begin{proof} Recollect that a <def:nine-composite> integer is the product between positive integers $ <var:x> $ , $ <var:W> $ , $ <var:B> $ , $ <var:o> $ , $ <var:F> $ , $ <var:V> $ , $ <var:R> $ , $ <var:O> $ , and $ <var:L> $ where $ <var:B> $ , $ <var:L> $ , $ <var:x> $ , $ <var:V> $ , $ <var:o> $ , $ <var:W> $ , $ <var:R> $ , $ <var:F> $ , $ <var:O> > <nat:1> $ . Assume $ <var:L> = <nat:3> $ , $ <var:O> = <nat:5> $ , $ <var:o> = <nat:9> $ , $ <var:F> = <nat:8> $ , $ <var:x> = <nat:7> $ , $ <var:R> = <nat:4> $ , $ <var:B> = <nat:13> $ , $ <var:V> = <nat:6> $ , and $ <var:W> = <nat:2> $ . Hence , <nat:4717440> is a <def:nine-composite> whole number is validated . Hence , <nat:4717440> is the multiplication between $ <var:W> $ , $ <var:L> $ , $ <var:R> $ , $ <var:o> $ , $ <var:V> $ , $ <var:x> $ , $ <var:F> $ , $ <var:O> $ , and $ <var:B> \in \mathbb{Z}^+ $ is validated . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:nine-composite> ( <var:l> : nat ) := exists <var:W> <var:V> <var:F> <var:B> <var:o> <var:L> <var:R> <var:O> <var:x> : nat , ( <var:L> * <var:B> * <var:x> * <var:V> * <var:o> * <var:R> * <var:F> * <var:O> * <var:W> = <var:l> ) . Theorem <genP:1> : <def:nine-composite> <nat:4717440> . Proof . unfold <def:nine-composite> . exists <nat:2> . exists <nat:6> . exists <nat:8> . exists <nat:13> . exists <nat:9> . exists <nat:3> . exists <nat:4> . exists <nat:5> . exists <nat:7> . repeat split . all : lia . Qed . 