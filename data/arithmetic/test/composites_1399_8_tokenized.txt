\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ \exists <var:P> $ , $ <var:u> $ , $ <var:g> $ , $ <var:b> $ , $ <var:q> $ , $ <var:U> $ , $ <var:t> $ , $ <var:S> \in \mathbb{N} $ satisfying the condition that $ <var:g> $ , $ <var:S> $ , $ <var:P> $ , $ <var:q> $ , $ <var:t> $ , $ <var:b> $ , $ <var:U> $ , and $ <var:u> > <nat:1> $ plus such that $ <nat:2993760> $ is equal to $ <var:b> * <var:q> * <var:P> * <var:U> * <var:t> * <var:S> * <var:u> * <var:g> $ . \end{theorem} \begin{proof} Allow $ <var:U> = <nat:4> $ , $ <var:u> = <nat:9> $ , $ <var:b> = <nat:11> $ , $ <var:t> = <nat:6> $ , $ <var:q> = <nat:7> $ , $ <var:g> = <nat:5> $ , $ <var:S> = <nat:12> $ , and $ <var:P> = <nat:3> $ . We present $ <nat:2993760> = <var:t> \cdot <var:S> \cdot <var:b> \cdot <var:P> \cdot <var:g> \cdot <var:q> \cdot <var:U> \cdot <var:u> $ . Observe that $ <nat:2993760> = <var:S> \cdot <var:U> \cdot <var:P> \cdot <var:g> \cdot <var:q> \cdot <var:u> \cdot <var:b> \cdot <var:t> $ . Further notice $ <nat:5> $ , $ <nat:7> $ , $ <nat:4> $ , $ <nat:9> $ , $ <nat:6> $ , $ <nat:12> $ , $ <nat:3> $ , $ <nat:11> > <nat:1> $ . \end{proof} \end{document} 
~
Require Import Lia . Theorem <genP:1> : exists <var:P> <var:u> <var:g> <var:b> <var:q> <var:U> <var:t> <var:S> : nat , ( <var:g> > <nat:1> ) /\ ( <var:S> > <nat:1> ) /\ ( <var:P> > <nat:1> ) /\ ( <var:q> > <nat:1> ) /\ ( <var:t> > <nat:1> ) /\ ( <var:b> > <nat:1> ) /\ ( <var:U> > <nat:1> ) /\ ( <var:u> > <nat:1> ) /\ ( <nat:2993760> = <var:b> * <var:q> * <var:P> * <var:U> * <var:t> * <var:S> * <var:u> * <var:g> ) . Proof . exists <nat:3> . exists <nat:9> . exists <nat:5> . exists <nat:11> . exists <nat:7> . exists <nat:4> . exists <nat:6> . exists <nat:12> . assert ( <genH> : <nat:5> > <nat:1> ) . { lia . } assert ( <genH> : <nat:7> > <nat:1> ) . { lia . } assert ( <genH> : <nat:4> > <nat:1> ) . { lia . } assert ( <genH> : <nat:9> > <nat:1> ) . { lia . } assert ( <genH> : <nat:6> > <nat:1> ) . { lia . } assert ( <genH> : <nat:12> > <nat:1> ) . { lia . } assert ( <genH> : <nat:3> > <nat:1> ) . { lia . } assert ( <genH> : <nat:11> > <nat:1> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 