\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Given that there are $ <var:M> $ , $ <var:A> $ , $ <var:p> $ , $ <var:S> $ , $ <var:z> $ , $ <var:N> $ , $ <var:m> $ , $ <var:n> $ , $ <var:o> \in \mathbb{Z}^+ $ assume that some number $ <var:X> $ is defined to be a <def:nine-composite> number if $ <var:m> \times <var:A> \times <var:N> \times <var:o> \times <var:p> \times <var:S> \times <var:z> \times <var:n> \times <var:M> = <var:X> $ as well as unique terms are larger than <nat:1> . Consequently the positive integer <nat:14152320> is a <def:nine-composite> whole number . \end{theorem} \begin{proof} Recall that <nat:14152320> is a <def:nine-composite> positive integer when it is the product of numbers $ <var:p> $ , $ <var:N> $ , $ <var:M> $ , $ <var:S> $ , $ <var:m> $ , $ <var:n> $ , $ <var:A> $ , $ <var:o> $ , $ <var:z> $ greater than <nat:1> . Let $ <var:S> = <nat:6> $ , $ <var:m> = <nat:10> $ , $ <var:N> = <nat:3> $ , $ <var:z> = <nat:4> $ , $ <var:n> = <nat:9> $ , $ <var:M> = <nat:7> $ , $ <var:p> = <nat:12> $ , $ <var:o> = <nat:2> $ and $ <var:A> = <nat:13> $ . Notice $ <nat:14152320> = <var:M> * <var:o> * <var:z> * <var:p> * <var:S> * <var:m> * <var:N> * <var:n> * <var:A> $ . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:nine-composite> ( <var:X> : nat ) := exists <var:M> <var:A> <var:p> <var:S> <var:z> <var:N> <var:m> <var:n> <var:o> : nat , ( <var:m> * <var:A> * <var:N> * <var:o> * <var:p> * <var:S> * <var:z> * <var:n> * <var:M> = <var:X> ) /\ ( <var:M> > <nat:1> ) /\ ( <var:A> > <nat:1> ) /\ ( <var:p> > <nat:1> ) /\ ( <var:S> > <nat:1> ) /\ ( <var:z> > <nat:1> ) /\ ( <var:N> > <nat:1> ) /\ ( <var:m> > <nat:1> ) /\ ( <var:n> > <nat:1> ) /\ ( <var:o> > <nat:1> ) . Theorem <genP:1> : <def:nine-composite> <nat:14152320> . Proof . unfold <def:nine-composite> . exists <nat:7> . exists <nat:13> . exists <nat:12> . exists <nat:6> . exists <nat:4> . exists <nat:3> . exists <nat:10> . exists <nat:9> . exists <nat:2> . repeat split . all : lia . Qed . 