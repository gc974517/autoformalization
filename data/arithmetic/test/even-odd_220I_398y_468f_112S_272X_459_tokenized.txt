\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:468> * <var:f> + <nat:459> + <var:S> * <nat:112> + <nat:398> * <var:y> + <var:I> * <nat:220> + <var:X> * <nat:272> $ is odd for all natural numbers $ <var:I> $ , $ <var:f> $ , $ <var:S> $ , $ <var:y> $ , and $ <var:X> $ . \end{theorem} \begin{proof} We verify the summation $ <var:I> <nat:220> + <var:y> <nat:398> + <var:f> <nat:468> + <nat:459> + <nat:112> <var:S> + <var:X> <nat:272> $ is odd . See $ <nat:459> $ is odd . The terms $ <nat:112> \times <var:S> $ , $ <nat:398> \times <var:y> $ , $ <nat:468> \times <var:f> $ , and $ <nat:272> \times <var:X> $ are known as even . This fact is true since the product between an even element of $ \mathbb{Z}^+ $ and any natural is even . Take note that $ <nat:220> \times <var:I> $ is even . This claim holds from the knowledge taking the product of an even natural with an arbitrary whole number must be an even number . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:I> <var:f> <var:S> <var:y> <var:X> : nat , Nat . odd ( <nat:468> * <var:f> + <nat:112> * <var:S> + <nat:398> * <var:y> + <nat:220> * <var:I> + <nat:272> * <var:X> + <nat:459> ) = true . Proof . intros . assert ( <genH> : Nat . odd <nat:459> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:112> * <var:S> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:398> * <var:y> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:468> * <var:f> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:272> * <var:X> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:220> * <var:I> ) = true ) . { rewrite Nat . even_mul . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 