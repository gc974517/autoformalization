\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:102> \cdot <var:C> + <nat:122> \cdot <var:r> + <var:X> \cdot <nat:292> + <var:n> \cdot <nat:272> + <nat:138> \cdot <var:d> + <nat:52> \cdot <var:z> + <var:Z> \cdot <nat:254> + <nat:411> + <nat:230> \cdot <var:g> + <nat:190> \cdot <var:E> $ is guaranteed to be odd . \end{theorem} \begin{proof} We verify $ <nat:138> <var:d> + <var:X> <nat:292> + <nat:52> <var:z> + <nat:102> <var:C> + <var:Z> <nat:254> + <nat:411> + <nat:272> <var:n> + <var:g> <nat:230> + <var:r> <nat:122> + <nat:190> <var:E> $ will be odd employing the knowledge the adding between even elements of $ \mathbb{Z}^+ $ with an odd number in $ \mathbb{Z}^+ $ must be odd . Take note $ <nat:411> $ is clearly an odd whole number . Remember the products $ <nat:102> \cdot <var:C> $ , $ <var:E> \cdot <nat:190> $ , $ <var:n> \cdot <nat:272> $ , $ <nat:230> \cdot <var:g> $ , $ <nat:138> \cdot <var:d> $ , $ <nat:292> \cdot <var:X> $ , and moreover $ <nat:254> \cdot <var:Z> $ are known as even since taking the product of an even number in $ \mathbb{N} $ and an arbitrary number will be even additionally the natural numbers $ <nat:102> $ , $ <nat:190> $ , $ <nat:272> $ , $ <nat:230> $ , $ <nat:138> $ , $ <nat:292> $ , additionally $ <nat:254> $ are clearly even elements of $ \mathbb{N} $ . The term $ <var:r> \cdot <nat:122> $ is trivially an even integer . This fact is true from the knowledge the leading term $ <nat:122> $ is even . Remember the whole number $ <nat:52> $ is obviously even . In consequence , the product $ <nat:52> \cdot <var:z> $ must be even additionally . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:C> <var:r> <var:X> <var:n> <var:d> <var:z> <var:Z> <var:g> <var:E> : nat , Nat . odd ( <nat:102> * <var:C> + <nat:122> * <var:r> + <nat:292> * <var:X> + <nat:272> * <var:n> + <nat:138> * <var:d> + <nat:52> * <var:z> + <nat:254> * <var:Z> + <nat:230> * <var:g> + <nat:190> * <var:E> + <nat:411> ) = true . Proof . intros . rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . assert ( <genH> : Nat . odd <nat:411> = true ) . { auto . } assert ( <genH> : Nat . even <nat:102> = true ) . { auto . } assert ( <genH> : Nat . even <nat:190> = true ) . { auto . } assert ( <genH> : Nat . even <nat:272> = true ) . { auto . } assert ( <genH> : Nat . even <nat:230> = true ) . { auto . } assert ( <genH> : Nat . even <nat:138> = true ) . { auto . } assert ( <genH> : Nat . even <nat:292> = true ) . { auto . } assert ( <genH> : Nat . even <nat:254> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:102> * <var:C> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:190> * <var:E> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:272> * <var:n> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:230> * <var:g> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:138> * <var:d> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:292> * <var:X> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:254> * <var:Z> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:122> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:122> * <var:r> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:52> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:52> * <var:z> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 