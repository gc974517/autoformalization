\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} The integer <nat:3706560> is the product between integers $ <var:V> $ , $ <var:O> $ , $ <var:B> $ , $ <var:Q> $ , $ <var:d> $ , $ <var:e> $ , $ <var:W> $ and $ <var:K> $ so that $ <var:O> $ , $ <var:d> $ , $ <var:V> $ , $ <var:K> $ , $ <var:e> $ , $ <var:B> $ , $ <var:Q> $ , $ <var:W> $ more than or equivalent to <nat:2> . \end{theorem} \begin{proof} Take $ <var:d> = <nat:8> $ , $ <var:W> = <nat:10> $ , $ <var:V> = <nat:3> $ , $ <var:O> = <nat:9> $ , $ <var:Q> = <nat:2> $ , $ <var:e> = <nat:13> $ , $ <var:B> = <nat:6> $ and $ <var:K> = <nat:11> $ . Notice $ <nat:3706560> = <nat:10> \times <nat:11> \times <nat:13> \times <nat:9> \times <nat:3> \times <nat:2> \times <nat:8> \times <nat:6> $ . Similarly notice that $ <nat:9> $ , $ <nat:8> $ , $ <nat:6> $ , $ <nat:10> $ , $ <nat:2> $ , $ <nat:3> $ , $ <nat:11> $ and $ <nat:13> \geq <nat:2> $ . \end{proof} \end{document} 
~
Require Import Lia . Theorem <genP:1> : exists <var:V> <var:O> <var:B> <var:Q> <var:d> <var:e> <var:W> <var:K> : nat , ( <nat:3706560> = <var:V> * <var:O> * <var:B> * <var:Q> * <var:d> * <var:e> * <var:W> * <var:K> ) /\ ( <var:O> >= <nat:2> ) /\ ( <var:d> >= <nat:2> ) /\ ( <var:V> >= <nat:2> ) /\ ( <var:K> >= <nat:2> ) /\ ( <var:e> >= <nat:2> ) /\ ( <var:B> >= <nat:2> ) /\ ( <var:Q> >= <nat:2> ) /\ ( <var:W> >= <nat:2> ) . Proof . exists <nat:3> . exists <nat:9> . exists <nat:6> . exists <nat:2> . exists <nat:8> . exists <nat:13> . exists <nat:10> . exists <nat:11> . assert ( <genH> : <nat:9> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:8> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:6> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:10> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:2> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:3> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:11> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:13> >= <nat:2> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 