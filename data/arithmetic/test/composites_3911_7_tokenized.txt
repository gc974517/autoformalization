\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:2162160> = <var:g> \times <var:j> \times <var:P> \times <var:B> \times <var:U> \times <var:b> \times <var:Y> $ with $ <var:Y> $ , $ <var:g> $ , $ <var:U> $ , $ <var:j> $ , $ <var:B> $ , $ <var:P> $ and $ <var:b> $ satisfying the condition that $ <var:Y> $ , $ <var:g> $ , $ <var:B> $ , $ <var:U> $ , $ <var:b> $ , $ <var:j> $ , $ <var:P> $ larger than or equivalent to <nat:2> . \end{theorem} \begin{proof} Allow $ <var:U> = <nat:10> $ , $ <var:g> = <nat:6> $ , $ <var:P> = <nat:7> $ , $ <var:j> = <nat:11> $ , $ <var:b> = <nat:13> $ , $ <var:Y> = <nat:4> $ and $ <var:B> = <nat:9> $ . Notice that $ <var:B> = <nat:9> $ , $ <var:g> = <nat:6> $ , $ <var:U> = <nat:10> $ , $ <var:P> = <nat:7> $ , $ <var:j> = <nat:11> $ , $ <var:b> = <nat:13> $ and $ <var:Y> = <nat:4> \geq <nat:2> $ . Moreover note that as well $ <var:U> \times <var:j> \times <var:P> \times <var:B> \times <var:g> \times <var:Y> \times <var:b> = <nat:2162160> $ . Thus , $ <var:P> \cdot <var:B> \cdot <var:Y> \cdot <var:U> \cdot <var:g> \cdot <var:j> \cdot <var:b> = <nat:2162160> $ is true has been proven . \end{proof} \end{document} 
~
Require Import Lia . Theorem <genP:1> : exists <var:Y> <var:g> <var:U> <var:j> <var:B> <var:P> <var:b> : nat , ( <nat:2162160> = <var:g> * <var:j> * <var:P> * <var:B> * <var:U> * <var:b> * <var:Y> ) /\ ( <var:Y> >= <nat:2> ) /\ ( <var:g> >= <nat:2> ) /\ ( <var:B> >= <nat:2> ) /\ ( <var:U> >= <nat:2> ) /\ ( <var:b> >= <nat:2> ) /\ ( <var:j> >= <nat:2> ) /\ ( <var:P> >= <nat:2> ) . Proof . exists <nat:4> . exists <nat:6> . exists <nat:10> . exists <nat:11> . exists <nat:9> . exists <nat:7> . exists <nat:13> . assert ( <genH> : <nat:9> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:6> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:10> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:7> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:11> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:13> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:4> >= <nat:2> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 