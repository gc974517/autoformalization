\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:24> <var:M> + <nat:225> + <nat:476> <var:B> + <var:A> <nat:84> + <nat:38> <var:d> + <var:u> <nat:470> + <nat:376> <var:J> + <nat:160> <var:H> $ is odd for any variables $ <var:A> $ , $ <var:d> $ , $ <var:H> $ , $ <var:B> $ , $ <var:u> $ , $ <var:J> $ , and $ <var:M> $ . \end{theorem} \begin{proof} The leading terms $ <nat:376> $ , $ <nat:470> $ , $ <nat:84> $ , $ <nat:476> $ , in addition to $ <nat:160> $ are known to be even . For this reason , the products $ <var:J> \times <nat:376> $ , $ <nat:470> \times <var:u> $ , $ <nat:84> \times <var:A> $ , $ <nat:476> \times <var:B> $ , in addition to $ <nat:160> \times <var:H> $ is even in addition . Furthermore , we know the term $ <var:M> \times <nat:24> $ is guaranteed to be even . This claim is proven from the knowledge the whole number $ <nat:24> $ is an even integer . The term $ <var:d> \times <nat:38> $ is known to be even from the knowledge the multiplication between an even integer with any whole number is guaranteed to be itself an even element of $ \mathbb{N} $ and the positive integer $ <nat:38> $ is trivially an even natural . We know that the adding between even natural numbers with an odd element of $ \mathbb{Z}^+ $ is guaranteed to be odd . Recall that $ <nat:225> $ is trivially an odd natural . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:A> <var:d> <var:H> <var:B> <var:u> <var:J> <var:M> : nat , Nat . odd ( <nat:24> * <var:M> + <nat:476> * <var:B> + <nat:84> * <var:A> + <nat:38> * <var:d> + <nat:470> * <var:u> + <nat:376> * <var:J> + <nat:160> * <var:H> + <nat:225> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:376> = true ) . { auto . } assert ( <genH> : Nat . even <nat:470> = true ) . { auto . } assert ( <genH> : Nat . even <nat:84> = true ) . { auto . } assert ( <genH> : Nat . even <nat:476> = true ) . { auto . } assert ( <genH> : Nat . even <nat:160> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:376> * <var:J> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:470> * <var:u> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:84> * <var:A> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:476> * <var:B> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:160> * <var:H> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:24> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:24> * <var:M> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:38> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:38> * <var:d> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . assert ( <genH> : Nat . odd <nat:225> = true ) . { auto . } rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 