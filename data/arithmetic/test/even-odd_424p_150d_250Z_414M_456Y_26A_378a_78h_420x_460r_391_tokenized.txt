\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:p> * <nat:424> + <var:d> * <nat:150> + <nat:250> * <var:Z> + <var:M> * <nat:414> + <nat:456> * <var:Y> + <nat:391> + <nat:26> * <var:A> + <var:a> * <nat:378> + <var:h> * <nat:78> + <var:x> * <nat:420> + <nat:460> * <var:r> $ is odd using all $ <var:p> $ , $ <var:Z> $ , $ <var:d> $ , $ <var:Y> $ , $ <var:h> $ , $ <var:r> $ , $ <var:M> $ , $ <var:a> $ , $ <var:x> $ , and $ <var:A> \in \mathbb{Z}^+ $ . \end{theorem} \begin{proof} Notice that the products $ <var:Y> <nat:456> $ , $ <var:h> <nat:78> $ , $ <var:a> <nat:378> $ , $ <var:M> <nat:414> $ , and $ <var:d> <nat:150> $ are known to be even positive integers as a consequence that the multiplication of an even natural number and an arbitrary element of $ \mathbb{N} $ is even . Remember that the products $ <nat:460> <var:r> $ , $ <nat:424> <var:p> $ , and moreover $ <nat:250> <var:Z> $ are trivially even . This is true by reason that the product of an even number in $ \mathbb{N} $ with a natural number is guaranteed to be even . Additionally , the pair $ <nat:26> <var:A> $ is obviously an even whole number . This is proven by reason that multiplying of an even natural with a positive integer must be even . Adding on , recall the pair $ <var:x> <nat:420> $ is known as an even number in $ \mathbb{Z}^+ $ . Notice $ <nat:391> $ is known to be an odd element of $ \mathbb{Z}^+ $ . It can be proven that our theorem holds . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:p> <var:Z> <var:d> <var:Y> <var:h> <var:r> <var:M> <var:a> <var:x> <var:A> : nat , Nat . odd ( <nat:424> * <var:p> + <nat:150> * <var:d> + <nat:250> * <var:Z> + <nat:414> * <var:M> + <nat:456> * <var:Y> + <nat:26> * <var:A> + <nat:378> * <var:a> + <nat:78> * <var:h> + <nat:420> * <var:x> + <nat:460> * <var:r> + <nat:391> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:456> * <var:Y> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:78> * <var:h> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:378> * <var:a> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:414> * <var:M> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:150> * <var:d> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:460> * <var:r> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:424> * <var:p> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:250> * <var:Z> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:26> * <var:A> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:420> * <var:x> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . odd <nat:391> = true ) . { auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 