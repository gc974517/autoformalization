\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:Q> <nat:396> + <nat:141> + <var:S> <nat:306> + <nat:184> <var:Y> + <nat:224> <var:h> + <nat:380> <var:r> + <nat:474> <var:M> + <var:Z> <nat:116> + <var:V> <nat:6> + <nat:282> <var:X> + <nat:22> <var:w> $ must be odd . \end{theorem} \begin{proof} See that $ <nat:141> $ is guaranteed to be odd . See the product of even elements of $ \mathbb{Z}^+ $ must be even . We know that the whole numbers $ <nat:6> $ , $ <nat:116> $ , $ <nat:22> $ , $ <nat:184> $ , and moreover $ <nat:380> $ are known as even elements of $ \mathbb{N} $ On top of this , we know that the integers $ <nat:474> $ , $ <nat:282> $ , $ <nat:396> $ , in addition to $ <nat:224> $ are even natural numbers In addition to this , observe that the integer $ <nat:306> $ is guaranteed to be even \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:Q> <var:S> <var:Y> <var:h> <var:r> <var:M> <var:Z> <var:V> <var:X> <var:w> : nat , Nat . odd ( <nat:396> * <var:Q> + <nat:306> * <var:S> + <nat:184> * <var:Y> + <nat:224> * <var:h> + <nat:380> * <var:r> + <nat:474> * <var:M> + <nat:116> * <var:Z> + <nat:6> * <var:V> + <nat:282> * <var:X> + <nat:22> * <var:w> + <nat:141> ) = true . Proof . intros . assert ( <genH> : Nat . odd <nat:141> = true ) . { auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . repeat rewrite Nat . even_mul . assert ( <genH> : Nat . even <nat:6> = true ) . { auto . } assert ( <genH> : Nat . even <nat:116> = true ) . { auto . } assert ( <genH> : Nat . even <nat:22> = true ) . { auto . } assert ( <genH> : Nat . even <nat:184> = true ) . { auto . } assert ( <genH> : Nat . even <nat:380> = true ) . { auto . } assert ( <genH> : Nat . even <nat:474> = true ) . { auto . } assert ( <genH> : Nat . even <nat:282> = true ) . { auto . } assert ( <genH> : Nat . even <nat:396> = true ) . { auto . } assert ( <genH> : Nat . even <nat:224> = true ) . { auto . } assert ( <genH> : Nat . even <nat:306> = true ) . { auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 