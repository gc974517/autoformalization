\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Let that $ <var:l> $ is a <def:nine-composite> integer with the condition given some $ <var:a> $ , $ <var:E> $ , $ <var:h> $ , $ <var:V> $ , $ <var:d> $ , $ <var:P> $ , $ <var:Y> $ , $ <var:o> $ , $ <var:T> \in \mathbb{N} $ we get $ <var:h> $ , $ <var:a> $ , $ <var:T> $ , $ <var:E> $ , $ <var:V> $ , $ <var:Y> $ , $ <var:o> $ , $ <var:d> $ , and $ <var:P> \geq <nat:2> $ as well as assuming some natural number $ <var:l> $ , $ <var:l> = <var:E> \cdot <var:V> \cdot <var:o> \cdot <var:Y> \cdot <var:P> \cdot <var:d> \cdot <var:a> \cdot <var:T> \cdot <var:h> $ . Therefore the positive integer <nat:31933440> is a <def:nine-composite> whole number . \end{theorem} \begin{proof} Recollect that <nat:31933440> is a <def:nine-composite> natural number given it is the product between whole numbers $ <var:Y> $ , $ <var:V> $ , $ <var:P> $ , $ <var:T> $ , $ <var:a> $ , $ <var:h> $ , $ <var:o> $ , $ <var:d> $ , and $ <var:E> $ more than or equal to <nat:2> . Notice that $ <nat:31933440> = <var:P> \cdot <var:V> \cdot <var:d> \cdot <var:o> \cdot <var:h> \cdot <var:E> \cdot <var:Y> \cdot <var:a> \cdot <var:T> $ yields $ <var:a> = <nat:11> $ , $ <var:d> = <nat:12> $ , $ <var:o> = <nat:2> $ , $ <var:P> = <nat:6> $ , $ <var:h> = <nat:8> $ , $ <var:E> = <nat:9> $ , $ <var:T> = <nat:7> $ , $ <var:V> = <nat:4> $ , and $ <var:Y> = <nat:10> $ . Plus notice that $ <nat:8> $ , $ <nat:4> $ , $ <nat:6> $ , $ <nat:11> $ , $ <nat:9> $ , $ <nat:2> $ , $ <nat:12> $ , $ <nat:7> $ , and $ <nat:10> $ are larger than or equivalent to <nat:2> . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:nine-composite> ( <var:l> : nat ) := exists <var:a> <var:E> <var:h> <var:V> <var:d> <var:P> <var:Y> <var:o> <var:T> : nat , ( <var:h> >= <nat:2> ) /\ ( <var:a> >= <nat:2> ) /\ ( <var:T> >= <nat:2> ) /\ ( <var:E> >= <nat:2> ) /\ ( <var:V> >= <nat:2> ) /\ ( <var:Y> >= <nat:2> ) /\ ( <var:o> >= <nat:2> ) /\ ( <var:d> >= <nat:2> ) /\ ( <var:P> >= <nat:2> ) /\ ( <var:l> = <var:E> * <var:V> * <var:o> * <var:Y> * <var:P> * <var:d> * <var:a> * <var:T> * <var:h> ) . Theorem <genP:1> : <def:nine-composite> <nat:31933440> . Proof . unfold <def:nine-composite> . exists <nat:11> . exists <nat:9> . exists <nat:8> . exists <nat:4> . exists <nat:12> . exists <nat:6> . exists <nat:10> . exists <nat:2> . exists <nat:7> . assert ( <genH> : <nat:8> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:4> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:6> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:11> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:9> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:2> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:12> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:7> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:10> >= <nat:2> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 