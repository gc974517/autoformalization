\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} With the condition we get satisfying the condition that $ <var:w> $ , $ <var:c> $ , $ <var:K> $ , $ <var:d> $ , $ <var:n> $ , $ <var:D> $ , $ <var:V> $ , $ <var:Q> $ , and $ <var:B> > <nat:1> $ satisfying the condition that with some natural number $ <var:I> $ , $ <var:Q> \cdot <var:n> \cdot <var:V> \cdot <var:K> \cdot <var:B> \cdot <var:d> \cdot <var:w> \cdot <var:c> \cdot <var:D> = <var:I> $ using some positive integers $ <var:d> $ , $ <var:D> $ , $ <var:B> $ , $ <var:K> $ , $ <var:V> $ , $ <var:w> $ , $ <var:n> $ , $ <var:c> $ , $ <var:Q> $ , then take as given that $ <var:I> $ is a <def:nine-composite> whole number . Then $ <var:I> = <nat:31449600> $ is a <def:nine-composite> natural number . \end{theorem} \begin{proof} Remember that a <def:nine-composite> is the product of whole numbers $ <var:c> $ , $ <var:n> $ , $ <var:Q> $ , $ <var:d> $ , $ <var:V> $ , $ <var:D> $ , $ <var:w> $ , $ <var:B> $ and $ <var:K> $ such that $ <var:n> $ , $ <var:D> $ , $ <var:w> $ , $ <var:B> $ , $ <var:V> $ , $ <var:Q> $ , $ <var:c> $ , $ <var:K> $ , and $ <var:d> > <nat:1> $ . Assume $ <var:K> = <nat:12> $ , $ <var:d> = <nat:8> $ , $ <var:V> = <nat:5> $ , $ <var:w> = <nat:6> $ , $ <var:n> = <nat:7> $ , $ <var:c> = <nat:10> $ , $ <var:B> = <nat:4> $ , $ <var:D> = <nat:13> $ , $ <var:Q> = <nat:3> $ . We show <nat:31449600> is a <def:nine-composite> whole number . Note that $ <var:V> = <nat:5> $ , $ <var:w> = <nat:6> $ , $ <var:D> = <nat:13> $ , $ <var:n> = <nat:7> $ , $ <var:K> = <nat:12> $ , $ <var:c> = <nat:10> $ , $ <var:B> = <nat:4> $ , $ <var:d> = <nat:8> $ and $ <var:Q> = <nat:3> $ are larger than <nat:1> . Additionally note moreover $ <nat:31449600> = <var:V> \cdot <var:B> \cdot <var:c> \cdot <var:K> \cdot <var:w> \cdot <var:d> \cdot <var:D> \cdot <var:Q> \cdot <var:n> $ . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:nine-composite> ( <var:I> : nat ) := exists <var:d> <var:D> <var:B> <var:K> <var:V> <var:w> <var:n> <var:c> <var:Q> : nat , ( <var:w> > <nat:1> ) /\ ( <var:c> > <nat:1> ) /\ ( <var:K> > <nat:1> ) /\ ( <var:d> > <nat:1> ) /\ ( <var:n> > <nat:1> ) /\ ( <var:D> > <nat:1> ) /\ ( <var:V> > <nat:1> ) /\ ( <var:Q> > <nat:1> ) /\ ( <var:B> > <nat:1> ) /\ ( <var:Q> * <var:n> * <var:V> * <var:K> * <var:B> * <var:d> * <var:w> * <var:c> * <var:D> = <var:I> ) . Theorem <genP:1> : <def:nine-composite> <nat:31449600> . Proof . unfold <def:nine-composite> . exists <nat:8> . exists <nat:13> . exists <nat:4> . exists <nat:12> . exists <nat:5> . exists <nat:6> . exists <nat:7> . exists <nat:10> . exists <nat:3> . assert ( <genH> : <nat:5> > <nat:1> ) . { lia . } assert ( <genH> : <nat:6> > <nat:1> ) . { lia . } assert ( <genH> : <nat:13> > <nat:1> ) . { lia . } assert ( <genH> : <nat:7> > <nat:1> ) . { lia . } assert ( <genH> : <nat:12> > <nat:1> ) . { lia . } assert ( <genH> : <nat:10> > <nat:1> ) . { lia . } assert ( <genH> : <nat:4> > <nat:1> ) . { lia . } assert ( <genH> : <nat:8> > <nat:1> ) . { lia . } assert ( <genH> : <nat:3> > <nat:1> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 