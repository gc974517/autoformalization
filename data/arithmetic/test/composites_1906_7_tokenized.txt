\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \newtheorem{definition}{Definition} \begin{document} \begin{definition} If we get $ <var:a> $ , $ <var:j> $ , $ <var:k> $ , $ <var:w> $ , $ <var:R> $ , $ <var:b> $ , $ <var:d> \geq <nat:2> $ where using some natural number $ <var:V> $ , $ <var:j> \times <var:b> \times <var:w> \times <var:k> \times <var:d> \times <var:R> \times <var:a> = <var:V> $ assuming some $ <var:R> $ , $ <var:j> $ , $ <var:w> $ , $ <var:b> $ , $ <var:d> $ , $ <var:a> $ , $ <var:k> \in \mathbb{Z}^+ $ , then assume that $ <var:V> $ is a <def:seven-composite> whole number . \end{definition} \begin{theorem} The number <nat:411840> is <def:seven-composite> . \end{theorem} \begin{proof} Let $ <var:a> = <nat:13> $ , $ <var:w> = <nat:6> $ , $ <var:k> = <nat:2> $ , $ <var:R> = <nat:3> $ , $ <var:b> = <nat:11> $ , $ <var:j> = <nat:10> $ , and $ <var:d> = <nat:8> $ . We justify our statement is true considering Seeing that $ <nat:3> $ , $ <nat:11> $ , $ <nat:6> $ , $ <nat:13> $ , $ <nat:2> $ , $ <nat:10> $ and $ <nat:8> \geq <nat:2> $ . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:seven-composite> ( <var:V> : nat ) := exists <var:R> <var:j> <var:w> <var:b> <var:d> <var:a> <var:k> : nat , ( <var:a> >= <nat:2> ) /\ ( <var:j> >= <nat:2> ) /\ ( <var:k> >= <nat:2> ) /\ ( <var:w> >= <nat:2> ) /\ ( <var:R> >= <nat:2> ) /\ ( <var:b> >= <nat:2> ) /\ ( <var:d> >= <nat:2> ) /\ ( <var:j> * <var:b> * <var:w> * <var:k> * <var:d> * <var:R> * <var:a> = <var:V> ) . Theorem <genP:1> : <def:seven-composite> <nat:411840> . Proof . unfold <def:seven-composite> . exists <nat:3> . exists <nat:10> . exists <nat:6> . exists <nat:11> . exists <nat:8> . exists <nat:13> . exists <nat:2> . assert ( <genH> : <nat:3> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:11> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:6> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:13> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:2> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:10> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:8> >= <nat:2> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 