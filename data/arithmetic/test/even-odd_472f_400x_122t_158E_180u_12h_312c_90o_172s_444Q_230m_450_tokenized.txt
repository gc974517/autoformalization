\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:172> * <var:s> + <var:c> * <nat:312> + <var:E> * <nat:158> + <nat:444> * <var:Q> + <var:u> * <nat:180> + <nat:12> * <var:h> + <nat:450> + <nat:122> * <var:t> + <var:m> * <nat:230> + <var:x> * <nat:400> + <nat:472> * <var:f> + <var:o> * <nat:90> $ will be even taking some positive terms $ <var:o> $ , $ <var:E> $ , $ <var:c> $ , $ <var:f> $ , $ <var:h> $ , $ <var:Q> $ , $ <var:s> $ , $ <var:x> $ , $ <var:t> $ , $ <var:m> $ , and $ <var:u> $ . \end{theorem} \begin{proof} The pairs $ <var:t> <nat:122> $ , $ <var:u> <nat:180> $ , $ <nat:312> <var:c> $ , $ <nat:90> <var:o> $ , $ <nat:12> <var:h> $ , $ <nat:400> <var:x> $ , $ <nat:172> <var:s> $ , $ <var:f> <nat:472> $ , $ <nat:444> <var:Q> $ , and $ <nat:158> <var:E> $ must be even numbers in $ \mathbb{N} $ . The pair $ <var:m> <nat:230> $ is trivially even . This claim holds as a consequence that the product of an even natural number and an arbitrary whole number will be even . We show the summation $ <var:f> \cdot <nat:472> + <var:x> \cdot <nat:400> + <nat:122> \cdot <var:t> + <nat:158> \cdot <var:E> + <var:u> \cdot <nat:180> + <nat:12> \cdot <var:h> + <nat:450> + <nat:312> \cdot <var:c> + <var:o> \cdot <nat:90> + <nat:172> \cdot <var:s> + <var:Q> \cdot <nat:444> + <nat:230> \cdot <var:m> $ will be even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:o> <var:E> <var:c> <var:f> <var:h> <var:Q> <var:s> <var:x> <var:t> <var:m> <var:u> : nat , Nat . even ( <nat:172> * <var:s> + <nat:312> * <var:c> + <nat:158> * <var:E> + <nat:444> * <var:Q> + <nat:180> * <var:u> + <nat:12> * <var:h> + <nat:122> * <var:t> + <nat:230> * <var:m> + <nat:400> * <var:x> + <nat:472> * <var:f> + <nat:90> * <var:o> + <nat:450> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:122> * <var:t> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:180> * <var:u> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:312> * <var:c> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:90> * <var:o> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:12> * <var:h> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:400> * <var:x> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:172> * <var:s> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:472> * <var:f> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:444> * <var:Q> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:158> * <var:E> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:230> * <var:m> ) = true ) . { rewrite Nat . even_mul . auto . } repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 