\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \newtheorem{definition}{Definition} \begin{document} \begin{definition} Wherever we get $ <var:D> \times <var:i> \times <var:O> \times <var:C> \times <var:R> \times <var:K> \times <var:o> \times <var:b> = <var:M> $ for $ <var:M> \in \mathbb{Z}^+ $ as well as satisfying the condition that $ <var:D> $ , $ <var:i> $ , $ <var:b> $ , $ <var:K> $ , $ <var:O> $ , $ <var:C> $ , $ <var:R> $ , $ <var:o> \geq <nat:2> $ using some positive integers $ <var:R> $ , $ <var:o> $ , $ <var:b> $ , $ <var:C> $ , $ <var:D> $ , $ <var:i> $ , $ <var:K> $ , $ <var:O> $ , then we assume that $ <var:M> $ is <def:eight-composite> . \end{definition} \begin{theorem} The number <nat:1853280> is <def:eight-composite> . \end{theorem} \begin{proof} We demonstrate <nat:1853280> is the multiplication of some positive integers $ <var:i> $ , $ <var:K> $ , $ <var:R> $ , $ <var:b> $ , $ <var:o> $ , $ <var:C> $ , $ <var:O> $ , and $ <var:D> $ . Notice $ <nat:1853280> = <var:o> * <var:R> * <var:i> * <var:C> * <var:O> * <var:K> * <var:D> * <var:b> $ produces $ <var:i> = <nat:13> $ , $ <var:O> = <nat:3> $ , $ <var:o> = <nat:5> $ , $ <var:R> = <nat:11> $ , $ <var:K> = <nat:12> $ , $ <var:D> = <nat:4> $ , $ <var:b> = <nat:9> $ , $ <var:C> = <nat:2> $ . What's more observe $ <nat:3> $ , $ <nat:12> $ , $ <nat:13> $ , $ <nat:2> $ , $ <nat:4> $ , $ <nat:11> $ , $ <nat:9> $ and $ <nat:5> \geq <nat:2> $ . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:eight-composite> ( <var:M> : nat ) := exists <var:R> <var:o> <var:b> <var:C> <var:D> <var:i> <var:K> <var:O> : nat , ( <var:D> * <var:i> * <var:O> * <var:C> * <var:R> * <var:K> * <var:o> * <var:b> = <var:M> ) /\ ( <var:D> >= <nat:2> ) /\ ( <var:i> >= <nat:2> ) /\ ( <var:b> >= <nat:2> ) /\ ( <var:K> >= <nat:2> ) /\ ( <var:O> >= <nat:2> ) /\ ( <var:C> >= <nat:2> ) /\ ( <var:R> >= <nat:2> ) /\ ( <var:o> >= <nat:2> ) . Theorem <genP:1> : <def:eight-composite> <nat:1853280> . Proof . unfold <def:eight-composite> . exists <nat:11> . exists <nat:5> . exists <nat:9> . exists <nat:2> . exists <nat:4> . exists <nat:13> . exists <nat:12> . exists <nat:3> . assert ( <genH> : <nat:3> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:12> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:13> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:2> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:4> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:11> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:9> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:5> >= <nat:2> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 