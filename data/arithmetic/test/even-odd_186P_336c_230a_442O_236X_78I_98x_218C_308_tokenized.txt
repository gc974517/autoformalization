\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:186> * <var:P> + <nat:336> * <var:c> + <nat:308> + <var:a> * <nat:230> + <var:O> * <nat:442> + <var:X> * <nat:236> + <nat:78> * <var:I> + <var:x> * <nat:98> + <nat:218> * <var:C> $ will be even given every integers $ <var:P> $ , $ <var:O> $ , $ <var:I> $ , $ <var:X> $ , $ <var:a> $ , $ <var:c> $ , $ <var:C> $ , and $ <var:x> $ . \end{theorem} \begin{proof} Recall $ <nat:230> * <var:a> $ is guaranteed to be even . This is proven by reason that taking the product between an even number in $ \mathbb{Z}^+ $ and a element of $ \mathbb{N} $ must be clearly an even natural . In addition , the terms $ <var:x> * <nat:98> $ , $ <nat:442> * <var:O> $ , $ <nat:78> * <var:I> $ , $ <nat:186> * <var:P> $ , as well as $ <var:X> * <nat:236> $ are clearly even . This is proven from the fact taking the product of an even natural and some number is trivially an even number in $ \mathbb{Z}^+ $ . Observe that the term $ <nat:336> * <var:c> $ is obviously an even natural . Likewise , $ <var:C> * <nat:218> $ is guaranteed to be an even element of $ \mathbb{Z}^+ $ . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:P> <var:O> <var:I> <var:X> <var:a> <var:c> <var:C> <var:x> : nat , Nat . even ( <nat:186> * <var:P> + <nat:336> * <var:c> + <nat:230> * <var:a> + <nat:442> * <var:O> + <nat:236> * <var:X> + <nat:78> * <var:I> + <nat:98> * <var:x> + <nat:218> * <var:C> + <nat:308> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:230> * <var:a> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:98> * <var:x> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:442> * <var:O> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:78> * <var:I> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:186> * <var:P> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:236> * <var:X> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:336> * <var:c> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:218> * <var:C> ) = true ) . { rewrite Nat . even_mul . auto . } repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 