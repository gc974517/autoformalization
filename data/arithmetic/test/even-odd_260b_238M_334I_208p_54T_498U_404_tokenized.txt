\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Taking some unknowns $ <var:M> $ , $ <var:p> $ , $ <var:U> $ , $ <var:I> $ , $ <var:b> $ , and $ <var:T> $ the sum $ <var:p> \times <nat:208> + <nat:260> \times <var:b> + <nat:404> + <var:U> \times <nat:498> + <var:M> \times <nat:238> + <var:T> \times <nat:54> + <var:I> \times <nat:334> $ is even . \end{theorem} \begin{proof} Remember that $ <var:b> \cdot <nat:260> $ is known as even . This is true as a consequence that the coefficient $ <nat:260> $ is known to be even . The numbers $ <nat:238> $ , $ <nat:334> $ , and $ <nat:54> $ must be even elements of $ \mathbb{Z}^+ $ . In consequence , the pairs $ <nat:238> \cdot <var:M> $ , $ <var:I> \cdot <nat:334> $ , plus $ <nat:54> \cdot <var:T> $ will be even at the same time . Take note the positive integer $ <nat:208> $ is trivially an even integer . Thus , the product $ <var:p> \cdot <nat:208> $ must be even too . In addition to this , recall that the integer $ <nat:498> $ is even . Accordingly , the term $ <nat:498> \cdot <var:U> $ is guaranteed to be even at the same time . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:M> <var:p> <var:U> <var:I> <var:b> <var:T> : nat , Nat . even ( <nat:208> * <var:p> + <nat:260> * <var:b> + <nat:498> * <var:U> + <nat:238> * <var:M> + <nat:54> * <var:T> + <nat:334> * <var:I> + <nat:404> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:260> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:260> * <var:b> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:238> = true ) . { auto . } assert ( <genH> : Nat . even <nat:334> = true ) . { auto . } assert ( <genH> : Nat . even <nat:54> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:238> * <var:M> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:334> * <var:I> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:54> * <var:T> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:208> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:208> * <var:p> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:498> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:498> * <var:U> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 