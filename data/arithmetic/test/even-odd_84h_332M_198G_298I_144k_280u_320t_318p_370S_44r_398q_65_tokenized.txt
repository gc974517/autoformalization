\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:84> * <var:h> + <var:M> * <nat:332> + <var:G> * <nat:198> + <var:I> * <nat:298> + <nat:65> + <nat:144> * <var:k> + <var:u> * <nat:280> + <var:t> * <nat:320> + <nat:318> * <var:p> + <var:S> * <nat:370> + <nat:44> * <var:r> + <var:q> * <nat:398> $ will be odd given some $ <var:p> $ , $ <var:r> $ , $ <var:k> $ , $ <var:G> $ , $ <var:h> $ , $ <var:M> $ , $ <var:I> $ , $ <var:t> $ , $ <var:u> $ , $ <var:S> $ , and $ <var:q> $ . \end{theorem} \begin{proof} Recall that the numbers $ <nat:44> $ , $ <nat:398> $ , $ <nat:84> $ , $ <nat:298> $ , $ <nat:198> $ , $ <nat:370> $ , and likewise $ <nat:320> $ are clearly even whole numbers Further , the leading term $ <nat:280> $ is clearly an even natural Furthermore , remember that the coefficient $ <nat:318> $ is known as an even integer On top of this , the positive integer $ <nat:332> $ is trivially even What's more , we know that the natural number $ <nat:144> $ is guaranteed to be an even natural Remember $ <nat:65> $ is known to be an odd number in $ \mathbb{N} $ . The totaling of even numbers with an odd positive integer must be an odd integer . Consequently , the result must be true . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:p> <var:r> <var:k> <var:G> <var:h> <var:M> <var:I> <var:t> <var:u> <var:S> <var:q> : nat , Nat . odd ( <nat:84> * <var:h> + <nat:332> * <var:M> + <nat:198> * <var:G> + <nat:298> * <var:I> + <nat:144> * <var:k> + <nat:280> * <var:u> + <nat:320> * <var:t> + <nat:318> * <var:p> + <nat:370> * <var:S> + <nat:44> * <var:r> + <nat:398> * <var:q> + <nat:65> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:44> = true ) . { auto . } assert ( <genH> : Nat . even <nat:398> = true ) . { auto . } assert ( <genH> : Nat . even <nat:84> = true ) . { auto . } assert ( <genH> : Nat . even <nat:298> = true ) . { auto . } assert ( <genH> : Nat . even <nat:198> = true ) . { auto . } assert ( <genH> : Nat . even <nat:370> = true ) . { auto . } assert ( <genH> : Nat . even <nat:320> = true ) . { auto . } assert ( <genH> : Nat . even <nat:280> = true ) . { auto . } assert ( <genH> : Nat . even <nat:318> = true ) . { auto . } assert ( <genH> : Nat . even <nat:332> = true ) . { auto . } assert ( <genH> : Nat . even <nat:144> = true ) . { auto . } assert ( <genH> : Nat . odd <nat:65> = true ) . { auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . repeat rewrite Nat . even_mul . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 