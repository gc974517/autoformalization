\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} With all terms $ <var:p> $ , $ <var:W> $ , and $ <var:i> $ $ <var:p> \times <nat:418> + <nat:136> \times <var:i> + <nat:472> \times <var:W> + <nat:117> $ is guaranteed to be odd . \end{theorem} \begin{proof} Remember that $ <nat:117> $ is known as odd . The summing between an even whole number with an odd positive integer will be an odd natural . The formula $ <nat:136> * <var:i> + <nat:472> * <var:W> + <nat:117> + <var:p> * <nat:418> $ is obviously odd because the expression $ <nat:472> \cdot <var:W> + <nat:418> \cdot <var:p> + <var:i> \cdot <nat:136> $ is known to be even . The natural numbers $ <nat:472> $ , $ <nat:418> $ , additionally $ <nat:136> $ are guaranteed to be even . In consequence , the pairs $ <nat:472> \cdot <var:W> $ , $ <var:p> \cdot <nat:418> $ , additionally $ <nat:136> \cdot <var:i> $ is guaranteed to be even in addition . By reason that the totaling between even whole numbers with even integers is guaranteed to be an even element of $ \mathbb{Z}^+ $ , the formula $ <var:W> * <nat:472> + <var:i> * <nat:136> + <var:p> * <nat:418> $ will be obviously even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:p> <var:W> <var:i> : nat , Nat . odd ( <nat:418> * <var:p> + <nat:136> * <var:i> + <nat:472> * <var:W> + <nat:117> ) = true . Proof . intros . assert ( <genH> : Nat . odd <nat:117> = true ) . { auto . } rewrite Nat . odd_add . assert ( <genH> : Nat . even <nat:472> = true ) . { auto . } assert ( <genH> : Nat . even <nat:418> = true ) . { auto . } assert ( <genH> : Nat . even <nat:136> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:472> * <var:W> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:418> * <var:p> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:136> * <var:i> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:418> * <var:p> + <nat:136> * <var:i> + <nat:472> * <var:W> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite <- Nat . negb_even . rewrite <genH> . rewrite <genH> . auto . Qed . 