\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:g> \cdot <nat:234> + <nat:172> \cdot <var:L> + <nat:226> \cdot <var:r> + <nat:210> \cdot <var:v> + <nat:362> \cdot <var:t> + <var:h> \cdot <nat:388> + <nat:416> \cdot <var:k> + <nat:415> + <nat:132> \cdot <var:O> + <nat:306> \cdot <var:e> $ is odd . \end{theorem} \begin{proof} This lemma holds from the knowledge $ <nat:362> <var:t> + <var:O> <nat:132> + <nat:234> <var:g> + <nat:306> <var:e> + <nat:388> <var:h> + <var:r> <nat:226> + <nat:172> <var:L> + <nat:416> <var:k> + <nat:210> <var:v> $ is even , by reason that the product between even numbers is even . The numbers $ <nat:172> $ as well as $ <nat:388> $ will be even Additionally , the numbers $ <nat:132> $ , $ <nat:416> $ , additionally $ <nat:226> $ are known as even Further , the leading terms $ <nat:306> $ , $ <nat:210> $ , and likewise $ <nat:234> $ are even elements of $ \mathbb{N} $ Take note the coefficient $ <nat:362> $ is guaranteed to be even Notice $ <nat:415> $ is trivially odd . We check that the formula $ <var:r> * <nat:226> + <var:e> * <nat:306> + <nat:132> * <var:O> + <nat:172> * <var:L> + <nat:416> * <var:k> + <var:g> * <nat:234> + <nat:415> + <var:t> * <nat:362> + <nat:388> * <var:h> + <var:v> * <nat:210> $ will be odd . Remember the addition of an even natural and an odd element of $ \mathbb{N} $ is guaranteed to be odd . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:g> <var:L> <var:r> <var:v> <var:t> <var:h> <var:k> <var:O> <var:e> : nat , Nat . odd ( <nat:234> * <var:g> + <nat:172> * <var:L> + <nat:226> * <var:r> + <nat:210> * <var:v> + <nat:362> * <var:t> + <nat:388> * <var:h> + <nat:416> * <var:k> + <nat:132> * <var:O> + <nat:306> * <var:e> + <nat:415> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:172> = true ) . { auto . } assert ( <genH> : Nat . even <nat:388> = true ) . { auto . } assert ( <genH> : Nat . even <nat:132> = true ) . { auto . } assert ( <genH> : Nat . even <nat:416> = true ) . { auto . } assert ( <genH> : Nat . even <nat:226> = true ) . { auto . } assert ( <genH> : Nat . even <nat:306> = true ) . { auto . } assert ( <genH> : Nat . even <nat:210> = true ) . { auto . } assert ( <genH> : Nat . even <nat:234> = true ) . { auto . } assert ( <genH> : Nat . even <nat:362> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:234> * <var:g> + <nat:172> * <var:L> + <nat:226> * <var:r> + <nat:210> * <var:v> + <nat:362> * <var:t> + <nat:388> * <var:h> + <nat:416> * <var:k> + <nat:132> * <var:O> + <nat:306> * <var:e> ) = true ) . { repeat rewrite Nat . even_add . repeat rewrite Nat . even_mul . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } assert ( <genH> : Nat . odd <nat:415> = true ) . { auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . rewrite <genH> . auto . Qed . 