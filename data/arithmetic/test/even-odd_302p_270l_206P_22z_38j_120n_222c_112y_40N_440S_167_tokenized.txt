\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:167> + <var:p> \cdot <nat:302> + <var:l> \cdot <nat:270> + <var:P> \cdot <nat:206> + <var:z> \cdot <nat:22> + <nat:38> \cdot <var:j> + <var:n> \cdot <nat:120> + <var:c> \cdot <nat:222> + <nat:112> \cdot <var:y> + <nat:40> \cdot <var:N> + <nat:440> \cdot <var:S> $ must be odd . \end{theorem} \begin{proof} Remember that the coefficients $ <nat:206> $ plus $ <nat:440> $ must be even Furthermore , the natural numbers $ <nat:302> $ , $ <nat:40> $ , $ <nat:270> $ , plus $ <nat:22> $ are known to be even What's more , we know that the numbers $ <nat:38> $ and likewise $ <nat:120> $ will be even elements of $ \mathbb{N} $ See that the natural number $ <nat:222> $ is known to be an even element of $ \mathbb{N} $ Likewise , remember that the leading term $ <nat:112> $ is clearly even Take note $ <nat:167> $ is known to be an odd whole number . The totaling between an even natural with an odd whole number is guaranteed to be odd . As a consequence , our lemma must be true . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:p> <var:l> <var:P> <var:z> <var:j> <var:n> <var:c> <var:y> <var:N> <var:S> : nat , Nat . odd ( <nat:302> * <var:p> + <nat:270> * <var:l> + <nat:206> * <var:P> + <nat:22> * <var:z> + <nat:38> * <var:j> + <nat:120> * <var:n> + <nat:222> * <var:c> + <nat:112> * <var:y> + <nat:40> * <var:N> + <nat:440> * <var:S> + <nat:167> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:206> = true ) . { auto . } assert ( <genH> : Nat . even <nat:440> = true ) . { auto . } assert ( <genH> : Nat . even <nat:302> = true ) . { auto . } assert ( <genH> : Nat . even <nat:40> = true ) . { auto . } assert ( <genH> : Nat . even <nat:270> = true ) . { auto . } assert ( <genH> : Nat . even <nat:22> = true ) . { auto . } assert ( <genH> : Nat . even <nat:38> = true ) . { auto . } assert ( <genH> : Nat . even <nat:120> = true ) . { auto . } assert ( <genH> : Nat . even <nat:222> = true ) . { auto . } assert ( <genH> : Nat . even <nat:112> = true ) . { auto . } assert ( <genH> : Nat . odd <nat:167> = true ) . { auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . repeat rewrite Nat . even_mul . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 