\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Using some natural terms $ <var:b> $ , $ <var:V> $ , $ <var:O> $ , $ <var:R> $ , $ <var:v> $ , $ <var:t> $ , $ <var:B> $ , and $ <var:U> $ the expression $ <var:R> \times <nat:442> + <var:v> \times <nat:330> + <var:b> \times <nat:408> + <nat:49> + <var:t> \times <nat:396> + <nat:370> \times <var:V> + <nat:274> \times <var:U> + <var:O> \times <nat:492> + <var:B> \times <nat:204> $ must be odd . \end{theorem} \begin{proof} Adding on , see the terms $ <var:R> \cdot <nat:442> $ , $ <var:v> \cdot <nat:330> $ , $ <nat:408> \cdot <var:b> $ , $ <var:t> \cdot <nat:396> $ , $ <nat:370> \cdot <var:V> $ , $ <nat:274> \cdot <var:U> $ , $ <nat:492> \cdot <var:O> $ , and $ <nat:204> \cdot <var:B> $ are trivially even numbers from the knowledge the whole numbers $ <nat:442> $ , $ <nat:330> $ , $ <nat:408> $ , $ <nat:396> $ , $ <nat:370> $ , $ <nat:274> $ , $ <nat:492> $ , and also $ <nat:204> $ are guaranteed to be in themselves even natural numbers . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:b> <var:V> <var:O> <var:R> <var:v> <var:t> <var:B> <var:U> : nat , Nat . odd ( <nat:442> * <var:R> + <nat:330> * <var:v> + <nat:408> * <var:b> + <nat:396> * <var:t> + <nat:370> * <var:V> + <nat:274> * <var:U> + <nat:492> * <var:O> + <nat:204> * <var:B> + <nat:49> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:442> = true ) . { auto . } assert ( <genH> : Nat . even <nat:330> = true ) . { auto . } assert ( <genH> : Nat . even <nat:408> = true ) . { auto . } assert ( <genH> : Nat . even <nat:396> = true ) . { auto . } assert ( <genH> : Nat . even <nat:370> = true ) . { auto . } assert ( <genH> : Nat . even <nat:274> = true ) . { auto . } assert ( <genH> : Nat . even <nat:492> = true ) . { auto . } assert ( <genH> : Nat . even <nat:204> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:442> * <var:R> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:330> * <var:v> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:408> * <var:b> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:396> * <var:t> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:370> * <var:V> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:274> * <var:U> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:492> * <var:O> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:204> * <var:B> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 