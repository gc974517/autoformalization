\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:40> \cdot <var:i> + <var:p> \cdot <nat:410> + <nat:248> \cdot <var:S> + <nat:298> \cdot <var:w> + <nat:268> \cdot <var:y> + <var:R> \cdot <nat:412> + <var:Q> \cdot <nat:416> + <nat:338> \cdot <var:k> + <nat:58> \cdot <var:d> + <nat:246> + <nat:428> \cdot <var:I> $ will be even assuming some $ <var:d> $ , $ <var:S> $ , $ <var:y> $ , $ <var:i> $ , $ <var:Q> $ , $ <var:I> $ , $ <var:k> $ , $ <var:p> $ , $ <var:w> $ , and $ <var:R> $ . \end{theorem} \begin{proof} It can be verified that that the summation $ <nat:40> \cdot <var:i> + <var:y> \cdot <nat:268> + <nat:58> \cdot <var:d> + <nat:298> \cdot <var:w> + <nat:248> \cdot <var:S> + <var:Q> \cdot <nat:416> + <nat:412> \cdot <var:R> + <nat:428> \cdot <var:I> + <nat:338> \cdot <var:k> + <nat:410> \cdot <var:p> $ is trivially even . The coefficients $ <nat:40> $ , $ <nat:268> $ , $ <nat:58> $ , $ <nat:298> $ , $ <nat:248> $ , $ <nat:416> $ , $ <nat:412> $ , $ <nat:428> $ , $ <nat:338> $ , additionally $ <nat:410> $ are obviously even . Accordingly , the pairs $ <nat:40> <var:i> $ , $ <nat:268> <var:y> $ , $ <nat:58> <var:d> $ , $ <var:w> <nat:298> $ , $ <var:S> <nat:248> $ , $ <nat:416> <var:Q> $ , $ <nat:412> <var:R> $ , $ <nat:428> <var:I> $ , $ <nat:338> <var:k> $ , additionally $ <nat:410> <var:p> $ will be even in addition . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:d> <var:S> <var:y> <var:i> <var:Q> <var:I> <var:k> <var:p> <var:w> <var:R> : nat , Nat . even ( <nat:40> * <var:i> + <nat:410> * <var:p> + <nat:248> * <var:S> + <nat:298> * <var:w> + <nat:268> * <var:y> + <nat:412> * <var:R> + <nat:416> * <var:Q> + <nat:338> * <var:k> + <nat:58> * <var:d> + <nat:428> * <var:I> + <nat:246> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:40> = true ) . { auto . } assert ( <genH> : Nat . even <nat:268> = true ) . { auto . } assert ( <genH> : Nat . even <nat:58> = true ) . { auto . } assert ( <genH> : Nat . even <nat:298> = true ) . { auto . } assert ( <genH> : Nat . even <nat:248> = true ) . { auto . } assert ( <genH> : Nat . even <nat:416> = true ) . { auto . } assert ( <genH> : Nat . even <nat:412> = true ) . { auto . } assert ( <genH> : Nat . even <nat:428> = true ) . { auto . } assert ( <genH> : Nat . even <nat:338> = true ) . { auto . } assert ( <genH> : Nat . even <nat:410> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:40> * <var:i> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:268> * <var:y> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:58> * <var:d> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:298> * <var:w> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:248> * <var:S> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:416> * <var:Q> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:412> * <var:R> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:428> * <var:I> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:338> * <var:k> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:410> * <var:p> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:40> * <var:i> + <nat:410> * <var:p> + <nat:248> * <var:S> + <nat:298> * <var:w> + <nat:268> * <var:y> + <nat:412> * <var:R> + <nat:416> * <var:Q> + <nat:338> * <var:k> + <nat:58> * <var:d> + <nat:428> * <var:I> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . even_add . rewrite <genH> . auto . Qed . 