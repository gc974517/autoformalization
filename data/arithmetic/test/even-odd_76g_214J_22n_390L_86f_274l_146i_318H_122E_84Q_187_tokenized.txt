\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:L> \times <nat:390> + <nat:122> \times <var:E> + <nat:86> \times <var:f> + <var:n> \times <nat:22> + <var:Q> \times <nat:84> + <nat:274> \times <var:l> + <nat:76> \times <var:g> + <nat:187> + <nat:318> \times <var:H> + <var:J> \times <nat:214> + <nat:146> \times <var:i> $ is guaranteed to be odd . \end{theorem} \begin{proof} We know that the sum $ <var:L> * <nat:390> + <nat:76> * <var:g> + <nat:84> * <var:Q> + <var:J> * <nat:214> + <var:n> * <nat:22> + <var:E> * <nat:122> + <nat:318> * <var:H> + <var:f> * <nat:86> + <nat:146> * <var:i> + <nat:274> * <var:l> + <nat:187> $ is trivially odd as a consequence that the summation $ <nat:214> * <var:J> + <var:f> * <nat:86> + <nat:122> * <var:E> + <var:n> * <nat:22> + <nat:318> * <var:H> + <var:g> * <nat:76> + <nat:274> * <var:l> + <var:Q> * <nat:84> + <nat:146> * <var:i> + <nat:390> * <var:L> $ is guaranteed to be even . The products $ <var:J> \times <nat:214> $ , $ <var:f> \times <nat:86> $ , $ <nat:122> \times <var:E> $ , $ <var:n> \times <nat:22> $ , $ <var:H> \times <nat:318> $ , $ <var:g> \times <nat:76> $ , $ <nat:274> \times <var:l> $ , $ <var:Q> \times <nat:84> $ , $ <var:i> \times <nat:146> $ , in addition to $ <var:L> \times <nat:390> $ are guaranteed to be even by reason that the numbers $ <nat:214> $ , $ <nat:86> $ , $ <nat:122> $ , $ <nat:22> $ , $ <nat:318> $ , $ <nat:76> $ , $ <nat:274> $ , $ <nat:84> $ , $ <nat:146> $ , and also $ <nat:390> $ are trivially even whole numbers . As a consequence that multiplying of an even whole number and an arbitrary element of $ \mathbb{N} $ must be even the expression $ <var:g> * <nat:76> + <var:J> * <nat:214> + <nat:22> * <var:n> + <nat:390> * <var:L> + <var:f> * <nat:86> + <var:l> * <nat:274> + <var:i> * <nat:146> + <var:H> * <nat:318> + <nat:122> * <var:E> + <var:Q> * <nat:84> $ must be even . We know that the summing of an even number in $ \mathbb{Z}^+ $ with an odd positive integer is odd . Notice $ <nat:187> $ is known as an odd number in $ \mathbb{N} $ . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:L> <var:E> <var:f> <var:n> <var:Q> <var:l> <var:g> <var:H> <var:J> <var:i> : nat , Nat . odd ( <nat:390> * <var:L> + <nat:122> * <var:E> + <nat:86> * <var:f> + <nat:22> * <var:n> + <nat:84> * <var:Q> + <nat:274> * <var:l> + <nat:76> * <var:g> + <nat:318> * <var:H> + <nat:214> * <var:J> + <nat:146> * <var:i> + <nat:187> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:214> = true ) . { auto . } assert ( <genH> : Nat . even <nat:86> = true ) . { auto . } assert ( <genH> : Nat . even <nat:122> = true ) . { auto . } assert ( <genH> : Nat . even <nat:22> = true ) . { auto . } assert ( <genH> : Nat . even <nat:318> = true ) . { auto . } assert ( <genH> : Nat . even <nat:76> = true ) . { auto . } assert ( <genH> : Nat . even <nat:274> = true ) . { auto . } assert ( <genH> : Nat . even <nat:84> = true ) . { auto . } assert ( <genH> : Nat . even <nat:146> = true ) . { auto . } assert ( <genH> : Nat . even <nat:390> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:214> * <var:J> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:86> * <var:f> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:122> * <var:E> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:22> * <var:n> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:318> * <var:H> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:76> * <var:g> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:274> * <var:l> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:84> * <var:Q> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:146> * <var:i> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:390> * <var:L> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:390> * <var:L> + <nat:122> * <var:E> + <nat:86> * <var:f> + <nat:22> * <var:n> + <nat:84> * <var:Q> + <nat:274> * <var:l> + <nat:76> * <var:g> + <nat:318> * <var:H> + <nat:214> * <var:J> + <nat:146> * <var:i> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . assert ( <genH> : Nat . odd <nat:187> = true ) . { auto . } rewrite <- Nat . negb_even . rewrite <genH> . rewrite <genH> . auto . Qed . 