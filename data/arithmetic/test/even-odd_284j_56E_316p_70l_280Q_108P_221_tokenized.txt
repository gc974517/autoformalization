\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:E> <nat:56> + <nat:70> <var:l> + <var:Q> <nat:280> + <nat:221> + <nat:316> <var:p> + <nat:284> <var:j> + <nat:108> <var:P> $ is odd taking some $ <var:l> $ , $ <var:j> $ , $ <var:p> $ , $ <var:Q> $ , $ <var:E> $ , and $ <var:P> \in \mathbb{N} $ . \end{theorem} \begin{proof} The summing of an even element of $ \mathbb{N} $ with an odd whole number must be an odd element of $ \mathbb{Z}^+ $ . We use the formula $ <nat:284> <var:j> + <var:Q> <nat:280> + <var:l> <nat:70> + <var:p> <nat:316> + <nat:56> <var:E> + <var:P> <nat:108> $ is known as even . We know the positive integer $ <nat:316> $ is known as even In addition to this , the integers $ <nat:56> $ additionally $ <nat:70> $ are guaranteed to be even elements of $ \mathbb{Z}^+ $ Take note the whole numbers $ <nat:108> $ and moreover $ <nat:280> $ are known to be even On top of this , notice the integer $ <nat:284> $ is guaranteed to be an even number The sum $ <var:E> \times <nat:56> + <var:Q> \times <nat:280> + <nat:284> \times <var:j> + <nat:316> \times <var:p> + <var:l> \times <nat:70> + <var:P> \times <nat:108> $ is guaranteed to be obviously even because the multiplication between an even element of $ \mathbb{Z}^+ $ with any element of $ \mathbb{Z}^+ $ must be even . It can be verified that the summation $ <var:j> \cdot <nat:284> + <nat:56> \cdot <var:E> + <nat:221> + <nat:316> \cdot <var:p> + <var:l> \cdot <nat:70> + <var:Q> \cdot <nat:280> + <nat:108> \cdot <var:P> $ will be odd . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:l> <var:j> <var:p> <var:Q> <var:E> <var:P> : nat , Nat . odd ( <nat:56> * <var:E> + <nat:70> * <var:l> + <nat:280> * <var:Q> + <nat:316> * <var:p> + <nat:284> * <var:j> + <nat:108> * <var:P> + <nat:221> ) = true . Proof . intros . rewrite Nat . odd_add . assert ( <genH> : Nat . even <nat:316> = true ) . { auto . } assert ( <genH> : Nat . even <nat:56> = true ) . { auto . } assert ( <genH> : Nat . even <nat:70> = true ) . { auto . } assert ( <genH> : Nat . even <nat:108> = true ) . { auto . } assert ( <genH> : Nat . even <nat:280> = true ) . { auto . } assert ( <genH> : Nat . even <nat:284> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:56> * <var:E> + <nat:70> * <var:l> + <nat:280> * <var:Q> + <nat:316> * <var:p> + <nat:284> * <var:j> + <nat:108> * <var:P> ) = true ) . { repeat rewrite Nat . even_add . repeat rewrite Nat . even_mul . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite <- Nat . negb_even . rewrite <genH> . auto . Qed . 