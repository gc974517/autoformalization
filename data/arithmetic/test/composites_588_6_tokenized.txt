\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \newtheorem{definition}{Definition} \begin{document} \begin{definition} Take that $ <var:u> $ is a <def:six-composite> number under the condition there exist some natural numbers $ <var:P> $ , $ <var:v> $ , $ <var:X> $ , $ <var:S> $ , $ <var:N> $ , $ <var:O> $ where $ <var:u> = <var:v> * <var:S> * <var:N> * <var:O> * <var:P> * <var:X> $ given $ <var:u> \in \mathbb{N} $ and such that $ <var:v> $ , $ <var:X> $ , $ <var:N> $ , $ <var:O> $ , $ <var:P> $ and $ <var:S> \geq <nat:2> $ . \end{definition} \begin{theorem} $ <var:u> = <nat:147420> $ is a <def:six-composite> whole number . \end{theorem} \begin{proof} Remember <nat:147420> is a <def:six-composite> integer assuming <nat:147420> is the multiplication between integers $ <var:X> $ , $ <var:v> $ , $ <var:N> $ , $ <var:O> $ , $ <var:P> $ , $ <var:S> $ satisfying the condition that $ <var:N> $ , $ <var:S> $ , $ <var:O> $ , $ <var:P> $ , $ <var:X> $ and $ <var:v> > <nat:1> $ . Observe $ <nat:13> $ , $ <nat:6> $ , $ <nat:10> $ , $ <nat:7> $ , $ <nat:3> $ , $ <nat:9> > <nat:1> $ . Plus notice also $ <nat:147420> = <var:N> \times <var:P> \times <var:v> \times <var:S> \times <var:X> \times <var:O> $ suggests $ <var:X> = <nat:7> $ , $ <var:O> = <nat:3> $ , $ <var:v> = <nat:13> $ , $ <var:S> = <nat:6> $ , $ <var:N> = <nat:9> $ , and $ <var:P> = <nat:10> $ . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:six-composite> ( <var:u> : nat ) := exists <var:P> <var:v> <var:X> <var:S> <var:N> <var:O> : nat , ( <var:u> = <var:v> * <var:S> * <var:N> * <var:O> * <var:P> * <var:X> ) /\ ( <var:v> >= <nat:2> ) /\ ( <var:X> >= <nat:2> ) /\ ( <var:N> >= <nat:2> ) /\ ( <var:O> >= <nat:2> ) /\ ( <var:P> >= <nat:2> ) /\ ( <var:S> >= <nat:2> ) . Theorem <genP:1> : <def:six-composite> <nat:147420> . Proof . unfold <def:six-composite> . assert ( <genH> : <nat:13> > <nat:1> ) . { lia . } assert ( <genH> : <nat:6> > <nat:1> ) . { lia . } assert ( <genH> : <nat:10> > <nat:1> ) . { lia . } assert ( <genH> : <nat:7> > <nat:1> ) . { lia . } assert ( <genH> : <nat:3> > <nat:1> ) . { lia . } assert ( <genH> : <nat:9> > <nat:1> ) . { lia . } exists <nat:10> . exists <nat:13> . exists <nat:7> . exists <nat:6> . exists <nat:9> . exists <nat:3> . repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 