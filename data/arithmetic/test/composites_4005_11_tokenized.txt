\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Assume $ <var:V> $ , $ <var:b> $ , $ <var:o> $ , $ <var:M> $ , $ <var:X> $ , $ <var:i> $ , $ <var:q> $ , $ <var:x> $ , $ <var:U> $ , $ <var:m> $ , $ <var:I> $ are positive integers more than or equivalent to <nat:2> . Claim that some number $ <var:G> $ is considered a <def:eleven-composite> positive integer when $ <var:G> = <var:I> * <var:m> * <var:x> * <var:V> * <var:X> * <var:q> * <var:M> * <var:o> * <var:b> * <var:U> * <var:i> $ . Then $ <var:G> = <nat:622702080> $ is a <def:eleven-composite> natural number . \end{theorem} \begin{proof} Notice $ <var:x> \cdot <var:b> \cdot <var:U> \cdot <var:I> \cdot <var:X> \cdot <var:q> \cdot <var:V> \cdot <var:M> \cdot <var:m> \cdot <var:i> \cdot <var:o> = <nat:622702080> $ produces $ <var:o> = <nat:6> $ , $ <var:I> = <nat:9> $ , $ <var:x> = <nat:11> $ , $ <var:m> = <nat:13> $ , $ <var:i> = <nat:12> $ , $ <var:q> = <nat:5> $ , $ <var:b> = <nat:7> $ , $ <var:U> = <nat:4> $ , $ <var:V> = <nat:3> $ , $ <var:X> = <nat:2> $ and $ <var:M> = <nat:8> $ . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:eleven-composite> ( <var:G> : nat ) := exists <var:V> <var:b> <var:o> <var:M> <var:X> <var:i> <var:q> <var:x> <var:U> <var:m> <var:I> : nat , ( <var:V> >= <nat:2> ) /\ ( <var:b> >= <nat:2> ) /\ ( <var:o> >= <nat:2> ) /\ ( <var:M> >= <nat:2> ) /\ ( <var:X> >= <nat:2> ) /\ ( <var:i> >= <nat:2> ) /\ ( <var:q> >= <nat:2> ) /\ ( <var:x> >= <nat:2> ) /\ ( <var:U> >= <nat:2> ) /\ ( <var:m> >= <nat:2> ) /\ ( <var:I> >= <nat:2> ) /\ ( <var:G> = <var:I> * <var:m> * <var:x> * <var:V> * <var:X> * <var:q> * <var:M> * <var:o> * <var:b> * <var:U> * <var:i> ) . Theorem <genP:1> : <def:eleven-composite> <nat:622702080> . Proof . unfold <def:eleven-composite> . exists <nat:3> . exists <nat:7> . exists <nat:6> . exists <nat:8> . exists <nat:2> . exists <nat:12> . exists <nat:5> . exists <nat:11> . exists <nat:4> . exists <nat:13> . exists <nat:9> . repeat split . all : lia . Qed . 