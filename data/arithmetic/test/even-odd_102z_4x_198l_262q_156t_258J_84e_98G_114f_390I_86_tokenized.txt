\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} With any positive integers $ <var:x> $ , $ <var:G> $ , $ <var:z> $ , $ <var:q> $ , $ <var:t> $ , $ <var:e> $ , $ <var:J> $ , $ <var:I> $ , $ <var:f> $ , and $ <var:l> $ the formula $ <nat:198> \times <var:l> + <var:G> \times <nat:98> + <nat:84> \times <var:e> + <var:z> \times <nat:102> + <nat:390> \times <var:I> + <nat:4> \times <var:x> + <nat:86> + <nat:156> \times <var:t> + <var:J> \times <nat:258> + <nat:114> \times <var:f> + <nat:262> \times <var:q> $ is guaranteed to be even . \end{theorem} \begin{proof} It can be proven that the expression $ <var:I> \times <nat:390> + <nat:84> \times <var:e> + <nat:86> + <var:q> \times <nat:262> + <nat:102> \times <var:z> + <var:f> \times <nat:114> + <var:J> \times <nat:258> + <nat:98> \times <var:G> + <var:x> \times <nat:4> + <nat:156> \times <var:t> + <nat:198> \times <var:l> $ is even . We check the expression $ <var:z> \cdot <nat:102> + <var:x> \cdot <nat:4> + <var:l> \cdot <nat:198> + <nat:262> \cdot <var:q> + <var:t> \cdot <nat:156> + <nat:258> \cdot <var:J> + <var:e> \cdot <nat:84> + <var:G> \cdot <nat:98> + <var:f> \cdot <nat:114> + <nat:390> \cdot <var:I> $ is clearly even , since the adding of an even positive integer and an even positive integer will be an even element of $ \mathbb{N} $ . $ <var:G> \times <nat:98> $ is known to be even as a consequence that multiplying between an even positive integer with a number in $ \mathbb{N} $ is guaranteed to be even . Observe the products $ <var:J> \times <nat:258> $ , $ <var:x> \times <nat:4> $ , $ <var:q> \times <nat:262> $ , $ <nat:114> \times <var:f> $ , $ <nat:198> \times <var:l> $ , $ <var:I> \times <nat:390> $ , $ <var:e> \times <nat:84> $ , and likewise $ <var:z> \times <nat:102> $ are clearly even . Building on , we know that $ <nat:156> \times <var:t> $ is guaranteed to be an even natural number from the fact multiplying of an even element of $ \mathbb{Z}^+ $ and a number will be by itself an even positive integer . in addition to from the fact multiplying between an even number in $ \mathbb{N} $ with an arbitrary whole number must be even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:x> <var:G> <var:z> <var:q> <var:t> <var:e> <var:J> <var:I> <var:f> <var:l> : nat , Nat . even ( <nat:198> * <var:l> + <nat:98> * <var:G> + <nat:84> * <var:e> + <nat:102> * <var:z> + <nat:390> * <var:I> + <nat:4> * <var:x> + <nat:156> * <var:t> + <nat:258> * <var:J> + <nat:114> * <var:f> + <nat:262> * <var:q> + <nat:86> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:98> * <var:G> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:258> * <var:J> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:4> * <var:x> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:262> * <var:q> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:114> * <var:f> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:198> * <var:l> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:390> * <var:I> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:84> * <var:e> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:102> * <var:z> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:156> * <var:t> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:198> * <var:l> + <nat:98> * <var:G> + <nat:84> * <var:e> + <nat:102> * <var:z> + <nat:390> * <var:I> + <nat:4> * <var:x> + <nat:156> * <var:t> + <nat:258> * <var:J> + <nat:114> * <var:f> + <nat:262> * <var:q> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . even_add . rewrite <genH> . auto . Qed . 