\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Take $ <var:G> $ , $ <var:E> $ , $ <var:X> $ , $ <var:j> $ , $ <var:n> $ , $ <var:B> $ , $ <var:J> $ , $ <var:K> $ , $ <var:u> \in \mathbb{Z}^+ $ such that $ <var:u> $ , $ <var:B> $ , $ <var:E> $ , $ <var:K> $ , $ <var:n> $ , $ <var:X> $ , $ <var:G> $ , $ <var:j> $ , and $ <var:J> > <nat:1> $ as well as such that $ <var:E> \cdot <var:j> \cdot <var:u> \cdot <var:J> \cdot <var:K> \cdot <var:X> \cdot <var:B> \cdot <var:G> \cdot <var:n> $ equals $ <nat:29652480> $ . \end{theorem} \begin{proof} Notice that $ <nat:29652480> = <nat:8> * <nat:3> * <nat:10> * <nat:4> * <nat:2> * <nat:12> * <nat:13> * <nat:11> * <nat:9> $ . Plus note that $ <nat:2> $ , $ <nat:8> $ , $ <nat:12> $ , $ <nat:3> $ , $ <nat:9> $ , $ <nat:10> $ , $ <nat:11> $ , $ <nat:4> $ , $ <nat:13> $ are larger than <nat:1> . \end{proof} \end{document} 
~
Require Import Lia . Theorem <genP:1> : exists <var:G> <var:E> <var:X> <var:j> <var:n> <var:B> <var:J> <var:K> <var:u> : nat , ( <var:u> > <nat:1> ) /\ ( <var:B> > <nat:1> ) /\ ( <var:E> > <nat:1> ) /\ ( <var:K> > <nat:1> ) /\ ( <var:n> > <nat:1> ) /\ ( <var:X> > <nat:1> ) /\ ( <var:G> > <nat:1> ) /\ ( <var:j> > <nat:1> ) /\ ( <var:J> > <nat:1> ) /\ ( <var:E> * <var:j> * <var:u> * <var:J> * <var:K> * <var:X> * <var:B> * <var:G> * <var:n> = <nat:29652480> ) . Proof . exists <nat:9> . exists <nat:4> . exists <nat:11> . exists <nat:3> . exists <nat:8> . exists <nat:12> . exists <nat:10> . exists <nat:13> . exists <nat:2> . assert ( <genH> : <nat:2> > <nat:1> ) . { lia . } assert ( <genH> : <nat:8> > <nat:1> ) . { lia . } assert ( <genH> : <nat:12> > <nat:1> ) . { lia . } assert ( <genH> : <nat:3> > <nat:1> ) . { lia . } assert ( <genH> : <nat:9> > <nat:1> ) . { lia . } assert ( <genH> : <nat:10> > <nat:1> ) . { lia . } assert ( <genH> : <nat:11> > <nat:1> ) . { lia . } assert ( <genH> : <nat:4> > <nat:1> ) . { lia . } assert ( <genH> : <nat:13> > <nat:1> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 