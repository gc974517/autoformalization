\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:W> \times <nat:442> + <nat:390> \times <var:s> + <nat:284> \times <var:q> + <nat:450> \times <var:k> + <nat:132> \times <var:P> + <var:Y> \times <nat:138> + <var:w> \times <nat:46> + <var:r> \times <nat:412> + <nat:10> \times <var:z> + <var:Z> \times <nat:38> + <nat:221> $ is odd . \end{theorem} \begin{proof} The summation of even positive integers successively and an odd number will be odd . The terms $ <var:P> \cdot <nat:132> $ and moreover $ <nat:390> \cdot <var:s> $ will be even . Additionally , the terms $ <var:z> \cdot <nat:10> $ , $ <var:q> \cdot <nat:284> $ , $ <nat:46> \cdot <var:w> $ , $ <nat:442> \cdot <var:W> $ , $ <var:r> \cdot <nat:412> $ , $ <nat:450> \cdot <var:k> $ , in addition to $ <nat:38> \cdot <var:Z> $ are obviously even elements of $ \mathbb{N} $ as a consequence that the multiplication between an even element of $ \mathbb{Z}^+ $ and some natural number is guaranteed to be an even integer . We know that $ <nat:138> \cdot <var:Y> $ is even . This fact must be true because the product between an even integer with any integer is guaranteed to be even . We show the formula $ <var:r> * <nat:412> + <nat:221> + <var:Y> * <nat:138> + <nat:46> * <var:w> + <var:W> * <nat:442> + <nat:10> * <var:z> + <nat:284> * <var:q> + <var:P> * <nat:132> + <nat:450> * <var:k> + <var:Z> * <nat:38> + <var:s> * <nat:390> $ will be odd . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:W> <var:s> <var:q> <var:k> <var:P> <var:Y> <var:w> <var:r> <var:z> <var:Z> : nat , Nat . odd ( <nat:442> * <var:W> + <nat:390> * <var:s> + <nat:284> * <var:q> + <nat:450> * <var:k> + <nat:132> * <var:P> + <nat:138> * <var:Y> + <nat:46> * <var:w> + <nat:412> * <var:r> + <nat:10> * <var:z> + <nat:38> * <var:Z> + <nat:221> ) = true . Proof . intros . rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . assert ( <genH> : Nat . even ( <nat:132> * <var:P> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:390> * <var:s> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:10> * <var:z> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:284> * <var:q> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:46> * <var:w> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:442> * <var:W> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:412> * <var:r> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:450> * <var:k> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:38> * <var:Z> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:138> * <var:Y> ) = true ) . { rewrite Nat . even_mul . auto . } rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 