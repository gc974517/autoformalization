\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:264> <var:g> + <var:N> <nat:318> + <var:m> <nat:338> + <var:w> <nat:218> + <nat:377> + <var:q> <nat:476> + <var:T> <nat:232> $ is guaranteed to be odd with variables $ <var:w> $ , $ <var:g> $ , $ <var:T> $ , $ <var:q> $ , $ <var:m> $ , and $ <var:N> $ . \end{theorem} \begin{proof} The numbers $ <nat:264> $ , $ <nat:318> $ , $ <nat:338> $ , $ <nat:218> $ , $ <nat:476> $ , and $ <nat:232> $ are even . Thus , the pairs $ <nat:264> <var:g> $ , $ <var:N> <nat:318> $ , $ <var:m> <nat:338> $ , $ <nat:218> <var:w> $ , $ <var:q> <nat:476> $ , as well as $ <var:T> <nat:232> $ is guaranteed to be even additionally . See that the summing of even elements of $ \mathbb{N} $ with an odd natural number is an odd positive integer . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:w> <var:g> <var:T> <var:q> <var:m> <var:N> : nat , Nat . odd ( <nat:264> * <var:g> + <nat:318> * <var:N> + <nat:338> * <var:m> + <nat:218> * <var:w> + <nat:476> * <var:q> + <nat:232> * <var:T> + <nat:377> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:264> = true ) . { auto . } assert ( <genH> : Nat . even <nat:318> = true ) . { auto . } assert ( <genH> : Nat . even <nat:338> = true ) . { auto . } assert ( <genH> : Nat . even <nat:218> = true ) . { auto . } assert ( <genH> : Nat . even <nat:476> = true ) . { auto . } assert ( <genH> : Nat . even <nat:232> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:264> * <var:g> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:318> * <var:N> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:338> * <var:m> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:218> * <var:w> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:476> * <var:q> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:232> * <var:T> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 