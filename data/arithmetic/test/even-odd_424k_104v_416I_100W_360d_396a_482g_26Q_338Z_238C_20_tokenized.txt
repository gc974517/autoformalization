\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:g> \times <nat:482> + <nat:360> \times <var:d> + <var:W> \times <nat:100> + <var:k> \times <nat:424> + <var:C> \times <nat:238> + <var:Q> \times <nat:26> + <nat:20> + <nat:104> \times <var:v> + <var:I> \times <nat:416> + <var:a> \times <nat:396> + <var:Z> \times <nat:338> $ will be even assuming all $ <var:v> $ , $ <var:Q> $ , $ <var:g> $ , $ <var:Z> $ , $ <var:C> $ , $ <var:k> $ , $ <var:I> $ , $ <var:a> $ , $ <var:d> $ , and $ <var:W> $ . \end{theorem} \begin{proof} We know that the adding between an even whole number and an even number will be an even number . We know that $ <nat:20> $ is obviously even . What's more , the product $ <nat:424> \cdot <var:k> $ is trivially an even natural . This is proven from the fact the product between an even number in $ \mathbb{N} $ and some number in $ \mathbb{Z}^+ $ will be an even number in $ \mathbb{N} $ . This claim must be true by reason that the number $ <nat:424> $ is trivially an even number . Building on , $ <nat:104> \cdot <var:v> $ is obviously an even number in $ \mathbb{Z}^+ $ . This claim is true since multiplying between an even number in $ \mathbb{Z}^+ $ with an arbitrary number in $ \mathbb{N} $ is guaranteed to be an even natural number in addition to the positive integer $ <nat:104> $ is obviously an even whole number . In addition , take note that the term $ <nat:416> \cdot <var:I> $ is known as even as a consequence that the natural number $ <nat:416> $ is known as even . Recall the leading term $ <nat:100> $ is guaranteed to be an even natural number . Consequently , the pair $ <nat:100> \cdot <var:W> $ is even additionally . Furthermore , the coefficient $ <nat:360> $ is known to be an even positive integer . Then , the term $ <nat:360> \cdot <var:d> $ is guaranteed to be even at the same time . $ <var:a> \cdot <nat:396> $ is trivially an even element of $ \mathbb{N} $ . This holds by reason that the product of an even integer and some whole number is guaranteed to be even in addition to the leading term $ <nat:396> $ is obviously in itself an even element of $ \mathbb{Z}^+ $ . See the product $ <nat:482> \cdot <var:g> $ is clearly an even positive integer . This is proven from the knowledge the coefficient $ <nat:482> $ is even . The coefficient $ <nat:26> $ is guaranteed to be even . Thus , the product $ <var:Q> \cdot <nat:26> $ will be even as well . Take note the pair $ <var:Z> \cdot <nat:338> $ is guaranteed to be even because multiplying of an even integer with an arbitrary integer is guaranteed to be an even integer . This claim is true from the knowledge the leading term $ <nat:338> $ is clearly even . The natural number $ <nat:238> $ is trivially even . Hence , the pair $ <nat:238> \cdot <var:C> $ is even in addition . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:v> <var:Q> <var:g> <var:Z> <var:C> <var:k> <var:I> <var:a> <var:d> <var:W> : nat , Nat . even ( <nat:482> * <var:g> + <nat:360> * <var:d> + <nat:100> * <var:W> + <nat:424> * <var:k> + <nat:238> * <var:C> + <nat:26> * <var:Q> + <nat:104> * <var:v> + <nat:416> * <var:I> + <nat:396> * <var:a> + <nat:338> * <var:Z> + <nat:20> ) = true . Proof . intros . repeat rewrite Nat . even_add . assert ( <genH> : Nat . even <nat:20> = true ) . { auto . } assert ( <genH> : Nat . even <nat:424> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:424> * <var:k> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:104> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:104> * <var:v> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:416> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:416> * <var:I> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:100> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:100> * <var:W> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:360> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:360> * <var:d> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:396> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:396> * <var:a> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:482> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:482> * <var:g> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:26> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:26> * <var:Q> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:338> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:338> * <var:Z> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:238> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:238> * <var:C> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 