\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:p> * <nat:438> + <nat:124> * <var:G> + <var:J> * <nat:426> + <var:s> * <nat:376> + <nat:270> * <var:Y> + <nat:236> * <var:D> + <nat:220> * <var:L> + <nat:107> + <nat:12> * <var:m> + <nat:310> * <var:d> + <var:v> * <nat:452> $ must be odd given some positive terms $ <var:m> $ , $ <var:J> $ , $ <var:D> $ , $ <var:L> $ , $ <var:G> $ , $ <var:s> $ , $ <var:Y> $ , $ <var:d> $ , $ <var:v> $ , and $ <var:p> $ . \end{theorem} \begin{proof} The natural numbers $ <nat:12> $ , $ <nat:376> $ , $ <nat:124> $ , $ <nat:310> $ , as well as $ <nat:426> $ must be even numbers in $ \mathbb{N} $ Notice the integer $ <nat:236> $ is known as even Observe the positive integer $ <nat:452> $ is clearly even Recall that the integers $ <nat:438> $ and moreover $ <nat:270> $ are clearly even elements of $ \mathbb{Z}^+ $ Additionally , we know that the leading term $ <nat:220> $ is known to be even \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:m> <var:J> <var:D> <var:L> <var:G> <var:s> <var:Y> <var:d> <var:v> <var:p> : nat , Nat . odd ( <nat:438> * <var:p> + <nat:124> * <var:G> + <nat:426> * <var:J> + <nat:376> * <var:s> + <nat:270> * <var:Y> + <nat:236> * <var:D> + <nat:220> * <var:L> + <nat:12> * <var:m> + <nat:310> * <var:d> + <nat:452> * <var:v> + <nat:107> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:12> = true ) . { auto . } assert ( <genH> : Nat . even <nat:376> = true ) . { auto . } assert ( <genH> : Nat . even <nat:124> = true ) . { auto . } assert ( <genH> : Nat . even <nat:310> = true ) . { auto . } assert ( <genH> : Nat . even <nat:426> = true ) . { auto . } assert ( <genH> : Nat . even <nat:236> = true ) . { auto . } assert ( <genH> : Nat . even <nat:452> = true ) . { auto . } assert ( <genH> : Nat . even <nat:438> = true ) . { auto . } assert ( <genH> : Nat . even <nat:270> = true ) . { auto . } assert ( <genH> : Nat . even <nat:220> = true ) . { auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . repeat rewrite Nat . even_mul . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 