\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Assume $ <var:K> $ , $ <var:T> $ , $ <var:U> $ , $ <var:q> $ , $ <var:j> $ , $ <var:t> $ , $ <var:X> $ , $ <var:C> $ as natural numbers more than <nat:1> . Claim that $ <var:F> \in \mathbb{N} $ is considered to be a <def:eight-composite> integer assuming $ <var:q> \cdot <var:U> \cdot <var:C> \cdot <var:j> \cdot <var:T> \cdot <var:K> \cdot <var:X> \cdot <var:t> = <var:F> $ . Consequently the whole number <nat:1853280> is a <def:eight-composite> integer . \end{theorem} \begin{proof} Remember that a <def:eight-composite> positive integer is the product between numbers $ <var:j> $ , $ <var:q> $ , $ <var:t> $ , $ <var:X> $ , $ <var:U> $ , $ <var:C> $ , $ <var:T> $ , and $ <var:K> $ more than <nat:1> . Observe that $ <nat:9> $ , $ <nat:13> $ , $ <nat:12> $ , $ <nat:5> $ , $ <nat:2> $ , $ <nat:3> $ , $ <nat:11> $ and $ <nat:4> $ are greater than <nat:1> . Plus observe still $ <var:U> * <var:q> * <var:K> * <var:X> * <var:T> * <var:C> * <var:t> * <var:j> = <nat:1853280> = <nat:2> * <nat:4> * <nat:12> * <nat:13> * <nat:11> * <nat:5> * <nat:3> * <nat:9> $ . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:eight-composite> ( <var:F> : nat ) := exists <var:K> <var:T> <var:U> <var:q> <var:j> <var:t> <var:X> <var:C> : nat , ( <var:K> > <nat:1> ) /\ ( <var:T> > <nat:1> ) /\ ( <var:U> > <nat:1> ) /\ ( <var:q> > <nat:1> ) /\ ( <var:j> > <nat:1> ) /\ ( <var:t> > <nat:1> ) /\ ( <var:X> > <nat:1> ) /\ ( <var:C> > <nat:1> ) /\ ( <var:q> * <var:U> * <var:C> * <var:j> * <var:T> * <var:K> * <var:X> * <var:t> = <var:F> ) . Theorem <genP:1> : <def:eight-composite> <nat:1853280> . Proof . unfold <def:eight-composite> . assert ( <genH> : <nat:9> > <nat:1> ) . { lia . } assert ( <genH> : <nat:13> > <nat:1> ) . { lia . } assert ( <genH> : <nat:12> > <nat:1> ) . { lia . } assert ( <genH> : <nat:5> > <nat:1> ) . { lia . } assert ( <genH> : <nat:2> > <nat:1> ) . { lia . } assert ( <genH> : <nat:3> > <nat:1> ) . { lia . } assert ( <genH> : <nat:11> > <nat:1> ) . { lia . } assert ( <genH> : <nat:4> > <nat:1> ) . { lia . } exists <nat:12> . exists <nat:11> . exists <nat:2> . exists <nat:4> . exists <nat:9> . exists <nat:3> . exists <nat:13> . exists <nat:5> . repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 