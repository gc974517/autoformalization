\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \newtheorem{definition}{Definition} \begin{document} \begin{definition} Allow $ <var:l> $ , $ <var:b> $ , $ <var:g> $ , $ <var:D> $ , $ <var:Z> $ , $ <var:B> $ , $ <var:i> $ , $ <var:k> $ , $ <var:F> $ , $ <var:f> $ are natural numbers . We claim that some integer $ <var:z> $ is called a <def:ten-composite> whole number assuming $ <var:z> = <var:B> \cdot <var:Z> \cdot <var:b> \cdot <var:D> \cdot <var:l> \cdot <var:f> \cdot <var:k> \cdot <var:F> \cdot <var:i> \cdot <var:g> $ as well as unique terms are greater than <nat:1> . \end{definition} \begin{theorem} The number <nat:113218560> is a <def:ten-composite> number . \end{theorem} \begin{proof} Remember that <nat:113218560> is a <def:ten-composite> integer only if it is the product of positive integers $ <var:k> $ , $ <var:f> $ , $ <var:l> $ , $ <var:g> $ , $ <var:B> $ , $ <var:b> $ , $ <var:Z> $ , $ <var:F> $ , $ <var:i> $ , $ <var:D> $ so that $ <var:B> $ , $ <var:k> $ , $ <var:f> $ , $ <var:i> $ , $ <var:F> $ , $ <var:D> $ , $ <var:b> $ , $ <var:Z> $ , $ <var:l> $ , and $ <var:g> > <nat:1> $ . We confirm <nat:113218560> is a <def:ten-composite> positive integer . We justify our belief holds on account of $ <nat:3> $ , $ <nat:2> $ , $ <nat:7> $ , $ <nat:9> $ , $ <nat:10> $ , $ <nat:4> $ , $ <nat:6> $ , $ <nat:13> $ , $ <nat:12> $ , $ <nat:8> > <nat:1> $ plus $ <nat:113218560> = <var:D> \times <var:f> \times <var:l> \times <var:Z> \times <var:i> \times <var:F> \times <var:g> \times <var:k> \times <var:b> \times <var:B> $ hints $ <var:g> = <nat:10> $ , $ <var:D> = <nat:4> $ , $ <var:l> = <nat:12> $ , $ <var:i> = <nat:7> $ , $ <var:f> = <nat:6> $ , $ <var:B> = <nat:3> $ , $ <var:b> = <nat:8> $ , $ <var:Z> = <nat:13> $ , $ <var:F> = <nat:9> $ , and $ <var:k> = <nat:2> $ . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:ten-composite> ( <var:z> : nat ) := exists <var:l> <var:b> <var:g> <var:D> <var:Z> <var:B> <var:i> <var:k> <var:F> <var:f> : nat , ( <var:z> = <var:B> * <var:Z> * <var:b> * <var:D> * <var:l> * <var:f> * <var:k> * <var:F> * <var:i> * <var:g> ) /\ ( <var:l> > <nat:1> ) /\ ( <var:b> > <nat:1> ) /\ ( <var:g> > <nat:1> ) /\ ( <var:D> > <nat:1> ) /\ ( <var:Z> > <nat:1> ) /\ ( <var:B> > <nat:1> ) /\ ( <var:i> > <nat:1> ) /\ ( <var:k> > <nat:1> ) /\ ( <var:F> > <nat:1> ) /\ ( <var:f> > <nat:1> ) . Theorem <genP:1> : <def:ten-composite> <nat:113218560> . Proof . unfold <def:ten-composite> . assert ( <genH> : <nat:3> > <nat:1> ) . { lia . } assert ( <genH> : <nat:2> > <nat:1> ) . { lia . } assert ( <genH> : <nat:7> > <nat:1> ) . { lia . } assert ( <genH> : <nat:9> > <nat:1> ) . { lia . } assert ( <genH> : <nat:10> > <nat:1> ) . { lia . } assert ( <genH> : <nat:4> > <nat:1> ) . { lia . } assert ( <genH> : <nat:6> > <nat:1> ) . { lia . } assert ( <genH> : <nat:13> > <nat:1> ) . { lia . } assert ( <genH> : <nat:12> > <nat:1> ) . { lia . } assert ( <genH> : <nat:8> > <nat:1> ) . { lia . } exists <nat:12> . exists <nat:8> . exists <nat:10> . exists <nat:4> . exists <nat:13> . exists <nat:3> . exists <nat:7> . exists <nat:2> . exists <nat:9> . exists <nat:6> . repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 