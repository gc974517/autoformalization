\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Taking all integers $ <var:Q> $ , $ <var:R> $ , $ <var:D> $ , and $ <var:a> $ the expression $ <nat:22> * <var:a> + <nat:337> + <nat:306> * <var:R> + <var:D> * <nat:410> + <nat:414> * <var:Q> $ is odd . \end{theorem} \begin{proof} We demonstrate this result holds . Observe that $ <nat:337> $ is odd . It can be demonstrated that that $ <nat:414> \times <var:Q> + <nat:337> + <nat:22> \times <var:a> + <var:R> \times <nat:306> + <nat:410> \times <var:D> $ is clearly odd by reason that the expression $ <var:Q> * <nat:414> + <var:D> * <nat:410> + <nat:306> * <var:R> + <nat:22> * <var:a> $ is known as even . The term $ <var:Q> \cdot <nat:414> $ is guaranteed to be an even whole number . Recall $ <var:a> \cdot <nat:22> $ is an even natural number . What's more , observe that $ <nat:306> \cdot <var:R> $ is obviously an even natural . This claim must be true as a consequence that the multiplication between an even positive integer and an arbitrary integer is guaranteed to be an even natural number . Building on , recall the product $ <nat:410> \cdot <var:D> $ is known to be even . This fact must be true from the fact the multiplication of an even element of $ \mathbb{Z}^+ $ with a number in $ \mathbb{Z}^+ $ is guaranteed to be even . Because the totaling of even numbers and an even positive integer must be even , in addition to by reason that taking the product between even naturals and any natural number will be an even natural number . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:Q> <var:R> <var:D> <var:a> : nat , Nat . odd ( <nat:22> * <var:a> + <nat:306> * <var:R> + <nat:410> * <var:D> + <nat:414> * <var:Q> + <nat:337> ) = true . Proof . intros . assert ( <genH> : Nat . odd <nat:337> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:414> * <var:Q> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:22> * <var:a> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:306> * <var:R> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:410> * <var:D> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:22> * <var:a> + <nat:306> * <var:R> + <nat:410> * <var:D> + <nat:414> * <var:Q> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . rewrite <genH> . auto . Qed . 