\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Let $ <var:A> $ , $ <var:V> $ , $ <var:o> $ , $ <var:z> $ , $ <var:Y> $ , $ <var:m> $ , $ <var:D> $ , $ <var:j> $ , $ <var:U> $ , $ <var:G> $ , $ <var:C> \in \mathbb{N} $ where $ <var:Y> $ , $ <var:o> $ , $ <var:z> $ , $ <var:m> $ , $ <var:j> $ , $ <var:V> $ , $ <var:U> $ , $ <var:A> $ , $ <var:D> $ , $ <var:G> $ and $ <var:C> \geq <nat:2> $ . We define that $ <var:N> \in \mathbb{N} $ will be called <def:eleven-composite> assuming $ <var:Y> \cdot <var:j> \cdot <var:D> \cdot <var:V> \cdot <var:A> \cdot <var:C> \cdot <var:U> \cdot <var:m> \cdot <var:z> \cdot <var:G> \cdot <var:o> = <var:N> $ . Then the positive integer <nat:2075673600> is a <def:eleven-composite> positive integer . \end{theorem} \begin{proof} Let $ <var:Y> = <nat:2> $ , $ <var:U> = <nat:12> $ , $ <var:V> = <nat:5> $ , $ <var:o> = <nat:4> $ , $ <var:z> = <nat:9> $ , $ <var:A> = <nat:11> $ , $ <var:j> = <nat:6> $ , $ <var:m> = <nat:13> $ , $ <var:C> = <nat:8> $ , $ <var:D> = <nat:10> $ , and $ <var:G> = <nat:7> $ . We present $ <var:C> $ , $ <var:U> $ , $ <var:o> $ , $ <var:Y> $ , $ <var:V> $ , $ <var:D> $ , $ <var:z> $ , $ <var:m> $ , $ <var:j> $ , $ <var:G> $ and $ <var:A> \geq <nat:2> $ plus <nat:2075673600> is the product between $ <var:o> $ , $ <var:m> $ , $ <var:j> $ , $ <var:Y> $ , $ <var:G> $ , $ <var:A> $ , $ <var:D> $ , $ <var:C> $ , $ <var:z> $ , $ <var:V> $ , and $ <var:U> \in \mathbb{Z}^+ $ . Similarly note that $ <var:A> = <nat:11> $ , $ <var:G> = <nat:7> $ , $ <var:U> = <nat:12> $ , $ <var:m> = <nat:13> $ , $ <var:z> = <nat:9> $ , $ <var:Y> = <nat:2> $ , $ <var:j> = <nat:6> $ , $ <var:V> = <nat:5> $ , $ <var:D> = <nat:10> $ , $ <var:C> = <nat:8> $ and $ <var:o> = <nat:4> \geq <nat:2> $ . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:eleven-composite> ( <var:N> : nat ) := exists <var:A> <var:V> <var:o> <var:z> <var:Y> <var:m> <var:D> <var:j> <var:U> <var:G> <var:C> : nat , ( <var:Y> >= <nat:2> ) /\ ( <var:o> >= <nat:2> ) /\ ( <var:z> >= <nat:2> ) /\ ( <var:m> >= <nat:2> ) /\ ( <var:j> >= <nat:2> ) /\ ( <var:V> >= <nat:2> ) /\ ( <var:U> >= <nat:2> ) /\ ( <var:A> >= <nat:2> ) /\ ( <var:D> >= <nat:2> ) /\ ( <var:G> >= <nat:2> ) /\ ( <var:C> >= <nat:2> ) /\ ( <var:Y> * <var:j> * <var:D> * <var:V> * <var:A> * <var:C> * <var:U> * <var:m> * <var:z> * <var:G> * <var:o> = <var:N> ) . Theorem <genP:1> : <def:eleven-composite> <nat:2075673600> . Proof . unfold <def:eleven-composite> . exists <nat:11> . exists <nat:5> . exists <nat:4> . exists <nat:9> . exists <nat:2> . exists <nat:13> . exists <nat:10> . exists <nat:6> . exists <nat:12> . exists <nat:7> . exists <nat:8> . assert ( <genH> : <nat:11> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:7> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:12> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:13> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:9> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:2> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:6> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:5> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:10> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:8> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:4> >= <nat:2> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 