\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Take as given that $ <var:t> $ is <def:six-composite> with the condition that there are some positive integers $ <var:I> $ , $ <var:K> $ , $ <var:i> $ , $ <var:V> $ , $ <var:p> $ , $ <var:P> $ satisfying the condition that so that $ <var:i> $ , $ <var:V> $ , $ <var:P> $ , $ <var:I> $ , $ <var:p> $ , $ <var:K> > <nat:1> $ plus for $ <var:t> \in \mathbb{N} $ , $ <var:t> = <var:I> * <var:P> * <var:i> * <var:K> * <var:p> * <var:V> $ . For this reason the positive integer <nat:98280> is a <def:six-composite> positive integer . \end{theorem} \begin{proof} Recollect that a <def:six-composite> natural number is the product of integers $ <var:K> $ , $ <var:p> $ , $ <var:V> $ , $ <var:I> $ , $ <var:i> $ , $ <var:P> $ more than <nat:1> . Allow $ <var:V> = <nat:13> $ , $ <var:i> = <nat:9> $ , $ <var:K> = <nat:10> $ , $ <var:P> = <nat:2> $ , $ <var:p> = <nat:6> $ , and $ <var:I> = <nat:7> $ . Observe that $ <nat:9> $ , $ <nat:7> $ , $ <nat:2> $ , $ <nat:13> $ , $ <nat:10> $ and $ <nat:6> $ are greater than <nat:1> . Also note further $ <nat:98280> = <var:P> \cdot <var:V> \cdot <var:I> \cdot <var:K> \cdot <var:p> \cdot <var:i> = <nat:2> \cdot <nat:13> \cdot <nat:7> \cdot <nat:10> \cdot <nat:6> \cdot <nat:9> $ . As a consequence , <nat:98280> is a <def:six-composite> positive integer has been verified . Hence , <nat:98280> is the multiplication of $ <var:p> $ , $ <var:K> $ , $ <var:P> $ , $ <var:I> $ , $ <var:V> $ , and $ <var:i> \in \mathbb{N} $ is proven . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:six-composite> ( <var:t> : nat ) := exists <var:I> <var:K> <var:i> <var:V> <var:p> <var:P> : nat , ( <var:i> > <nat:1> ) /\ ( <var:V> > <nat:1> ) /\ ( <var:P> > <nat:1> ) /\ ( <var:I> > <nat:1> ) /\ ( <var:p> > <nat:1> ) /\ ( <var:K> > <nat:1> ) /\ ( <var:t> = <var:I> * <var:P> * <var:i> * <var:K> * <var:p> * <var:V> ) . Theorem <genP:1> : <def:six-composite> <nat:98280> . Proof . unfold <def:six-composite> . exists <nat:7> . exists <nat:10> . exists <nat:9> . exists <nat:13> . exists <nat:6> . exists <nat:2> . assert ( <genH> : <nat:9> > <nat:1> ) . { lia . } assert ( <genH> : <nat:7> > <nat:1> ) . { lia . } assert ( <genH> : <nat:2> > <nat:1> ) . { lia . } assert ( <genH> : <nat:13> > <nat:1> ) . { lia . } assert ( <genH> : <nat:10> > <nat:1> ) . { lia . } assert ( <genH> : <nat:6> > <nat:1> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 