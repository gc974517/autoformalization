\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \newtheorem{definition}{Definition} \begin{document} \begin{definition} We assume that $ <var:m> $ is a <def:six-composite> natural number iff using some $ <var:I> $ , $ <var:z> $ , $ <var:C> $ , $ <var:p> $ , $ <var:V> $ , $ <var:w> \in \mathbb{Z}^+ $ we have $ <var:m> = <var:I> \cdot <var:z> \cdot <var:p> \cdot <var:C> \cdot <var:w> \cdot <var:V> $ given $ <var:m> \in \mathbb{Z}^+ $ as well as where $ <var:p> $ , $ <var:I> $ , $ <var:z> $ , $ <var:V> $ , $ <var:C> $ and $ <var:w> \geq <nat:2> $ . \end{definition} \begin{theorem} $ <nat:110880> = <var:m> $ is <def:six-composite> . \end{theorem} \begin{proof} Remember <nat:110880> is a <def:six-composite> whole number only if it is the multiplication between positive integers $ <var:p> $ , $ <var:w> $ , $ <var:I> $ , $ <var:V> $ , $ <var:z> $ , and $ <var:C> $ more than <nat:1> . Allow $ <var:z> = <nat:7> $ , $ <var:w> = <nat:10> $ , $ <var:V> = <nat:8> $ , $ <var:p> = <nat:11> $ , $ <var:I> = <nat:6> $ , $ <var:C> = <nat:3> $ . Notice $ <nat:110880> = <nat:10> * <nat:3> * <nat:6> * <nat:11> * <nat:8> * <nat:7> $ . Additionally observe that $ <var:z> = <nat:7> $ , $ <var:I> = <nat:6> $ , $ <var:V> = <nat:8> $ , $ <var:C> = <nat:3> $ , $ <var:w> = <nat:10> $ and $ <var:p> = <nat:11> $ are more than <nat:1> . This hints the thesis holds . Therefore , <nat:110880> is a <def:six-composite> integer is validated . Because of this , $ <var:z> * <var:w> * <var:p> * <var:C> * <var:V> * <var:I> = <nat:110880> $ has been verified . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:six-composite> ( <var:m> : nat ) := exists <var:I> <var:z> <var:C> <var:p> <var:V> <var:w> : nat , ( <var:m> = <var:I> * <var:z> * <var:p> * <var:C> * <var:w> * <var:V> ) /\ ( <var:p> >= <nat:2> ) /\ ( <var:I> >= <nat:2> ) /\ ( <var:z> >= <nat:2> ) /\ ( <var:V> >= <nat:2> ) /\ ( <var:C> >= <nat:2> ) /\ ( <var:w> >= <nat:2> ) . Theorem <genP:1> : <def:six-composite> <nat:110880> . Proof . unfold <def:six-composite> . exists <nat:6> . exists <nat:7> . exists <nat:3> . exists <nat:11> . exists <nat:8> . exists <nat:10> . assert ( <genH> : <nat:7> > <nat:1> ) . { lia . } assert ( <genH> : <nat:6> > <nat:1> ) . { lia . } assert ( <genH> : <nat:8> > <nat:1> ) . { lia . } assert ( <genH> : <nat:3> > <nat:1> ) . { lia . } assert ( <genH> : <nat:10> > <nat:1> ) . { lia . } assert ( <genH> : <nat:11> > <nat:1> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 