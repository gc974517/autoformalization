\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:333> + <nat:160> <var:T> + <nat:370> <var:s> + <nat:198> <var:O> + <nat:68> <var:w> + <nat:322> <var:p> + <nat:100> <var:D> + <var:i> <nat:72> + <nat:422> <var:q> $ must be odd . \end{theorem} \begin{proof} See that $ <nat:333> $ is clearly an odd number in $ \mathbb{N} $ . By reason that the adding between an even positive integer and an odd positive integer is guaranteed to be odd , thus our result holds . $ <nat:100> \times <var:D> $ is known to be even by reason that the product between an even natural with some element of $ \mathbb{Z}^+ $ is by its very nature an even number . Take note that the products $ <nat:370> \times <var:s> $ , $ <var:O> \times <nat:198> $ , $ <var:q> \times <nat:422> $ , $ <var:w> \times <nat:68> $ , $ <var:p> \times <nat:322> $ , in addition to $ <var:i> \times <nat:72> $ are obviously even . The product $ <nat:160> \times <var:T> $ is known as an even natural . This fact holds as a consequence that the product between an even number in $ \mathbb{Z}^+ $ with any integer must be clearly an even positive integer . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:T> <var:s> <var:O> <var:w> <var:p> <var:D> <var:i> <var:q> : nat , Nat . odd ( <nat:160> * <var:T> + <nat:370> * <var:s> + <nat:198> * <var:O> + <nat:68> * <var:w> + <nat:322> * <var:p> + <nat:100> * <var:D> + <nat:72> * <var:i> + <nat:422> * <var:q> + <nat:333> ) = true . Proof . intros . assert ( <genH> : Nat . odd <nat:333> = true ) . { auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . assert ( <genH> : Nat . even ( <nat:100> * <var:D> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:370> * <var:s> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:198> * <var:O> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:422> * <var:q> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:68> * <var:w> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:322> * <var:p> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:72> * <var:i> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:160> * <var:T> ) = true ) . { rewrite Nat . even_mul . auto . } rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 