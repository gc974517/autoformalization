\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} For all positive terms $ <var:g> $ , $ <var:d> $ , $ <var:u> $ , $ <var:I> $ , $ <var:H> $ , $ <var:w> $ , $ <var:l> $ , $ <var:D> $ , $ <var:t> $ , and $ <var:C> $ the expression $ <var:u> <nat:232> + <nat:484> <var:H> + <nat:426> <var:D> + <nat:107> + <nat:184> <var:C> + <nat:210> <var:l> + <nat:270> <var:w> + <nat:124> <var:I> + <nat:378> <var:g> + <nat:52> <var:d> + <nat:260> <var:t> $ is odd . \end{theorem} \begin{proof} We know that $ <nat:107> $ is clearly an odd element of $ \mathbb{N} $ . The adding of even elements of $ \mathbb{Z}^+ $ successively with an odd number in $ \mathbb{N} $ must be odd . Take note that the summation $ <nat:426> <var:D> + <nat:184> <var:C> + <nat:270> <var:w> + <var:t> <nat:260> + <nat:52> <var:d> + <var:u> <nat:232> + <nat:484> <var:H> + <var:I> <nat:124> + <nat:107> + <nat:210> <var:l> + <var:g> <nat:378> $ is trivially odd from the knowledge $ <var:H> <nat:484> + <var:t> <nat:260> + <var:C> <nat:184> + <var:g> <nat:378> + <nat:124> <var:I> + <var:u> <nat:232> + <var:l> <nat:210> + <var:D> <nat:426> + <nat:52> <var:d> + <nat:270> <var:w> $ is known as even , from the knowledge the addition of an even number in $ \mathbb{N} $ and an even number in $ \mathbb{N} $ is guaranteed to be even . Remember the pairs $ <nat:184> \times <var:C> $ , $ <nat:232> \times <var:u> $ , $ <nat:270> \times <var:w> $ , $ <nat:210> \times <var:l> $ , $ <nat:260> \times <var:t> $ , $ <var:I> \times <nat:124> $ , $ <var:D> \times <nat:426> $ , as well as $ <var:H> \times <nat:484> $ are guaranteed to be even naturals . This fact is proven from the knowledge the product between an even whole number and a whole number must be an even element of $ \mathbb{Z}^+ $ . In addition to this , the product $ <nat:52> \times <var:d> $ is even as a consequence that multiplying between an even natural and any natural number must be clearly an even element of $ \mathbb{N} $ . Remember the pair $ <nat:378> \times <var:g> $ is even because taking the product of an even integer with any whole number will be even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:g> <var:d> <var:u> <var:I> <var:H> <var:w> <var:l> <var:D> <var:t> <var:C> : nat , Nat . odd ( <nat:232> * <var:u> + <nat:484> * <var:H> + <nat:426> * <var:D> + <nat:184> * <var:C> + <nat:210> * <var:l> + <nat:270> * <var:w> + <nat:124> * <var:I> + <nat:378> * <var:g> + <nat:52> * <var:d> + <nat:260> * <var:t> + <nat:107> ) = true . Proof . intros . assert ( <genH> : Nat . odd <nat:107> = true ) . { auto . } rewrite Nat . odd_add . assert ( <genH> : Nat . even ( <nat:184> * <var:C> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:232> * <var:u> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:270> * <var:w> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:210> * <var:l> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:260> * <var:t> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:124> * <var:I> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:426> * <var:D> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:484> * <var:H> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:52> * <var:d> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:378> * <var:g> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:232> * <var:u> + <nat:484> * <var:H> + <nat:426> * <var:D> + <nat:184> * <var:C> + <nat:210> * <var:l> + <nat:270> * <var:w> + <nat:124> * <var:I> + <nat:378> * <var:g> + <nat:52> * <var:d> + <nat:260> * <var:t> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite <- Nat . negb_even . rewrite <genH> . rewrite <genH> . auto . Qed . 