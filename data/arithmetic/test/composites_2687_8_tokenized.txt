\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} There are $ <var:r> $ , $ <var:R> $ , $ <var:c> $ , $ <var:l> $ , $ <var:e> $ , $ <var:J> $ , $ <var:k> $ , $ <var:L> \in \mathbb{Z}^+ $ satisfying the condition that $ <var:e> $ , $ <var:l> $ , $ <var:J> $ , $ <var:k> $ , $ <var:r> $ , $ <var:L> $ , $ <var:c> $ , and $ <var:R> $ larger than or equal to <nat:2> as well as such that the integer <nat:2096640> is the product of numbers $ <var:r> $ , $ <var:R> $ , $ <var:c> $ , $ <var:l> $ , $ <var:e> $ , $ <var:J> $ , $ <var:k> $ , $ <var:L> \in \mathbb{Z}^+ $ . \end{theorem} \begin{proof} Observe that $ <nat:13> * <nat:2> * <nat:7> * <nat:12> * <nat:8> * <nat:5> * <nat:4> * <nat:6> = <nat:2096640> $ . Moreover note that $ <nat:12> $ , $ <nat:13> $ , $ <nat:5> $ , $ <nat:2> $ , $ <nat:7> $ , $ <nat:6> $ , $ <nat:8> $ , $ <nat:4> $ are larger than or equal to <nat:2> . Hence , <nat:2096640> is the multiplication of $ <var:J> $ , $ <var:r> $ , $ <var:R> $ , $ <var:c> $ , $ <var:L> $ , $ <var:l> $ , $ <var:e> $ and $ <var:k> \in \mathbb{Z}^+ $ is verified . \end{proof} \end{document} 
~
Require Import Lia . Theorem <genP:1> : exists <var:r> <var:R> <var:c> <var:l> <var:e> <var:J> <var:k> <var:L> : nat , ( <var:e> >= <nat:2> ) /\ ( <var:l> >= <nat:2> ) /\ ( <var:J> >= <nat:2> ) /\ ( <var:k> >= <nat:2> ) /\ ( <var:r> >= <nat:2> ) /\ ( <var:L> >= <nat:2> ) /\ ( <var:c> >= <nat:2> ) /\ ( <var:R> >= <nat:2> ) /\ ( <nat:2096640> = <var:r> * <var:R> * <var:c> * <var:l> * <var:e> * <var:J> * <var:k> * <var:L> ) . Proof . exists <nat:13> . exists <nat:8> . exists <nat:4> . exists <nat:7> . exists <nat:5> . exists <nat:12> . exists <nat:2> . exists <nat:6> . assert ( <genH> : <nat:12> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:13> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:5> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:2> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:7> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:6> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:8> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:4> >= <nat:2> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 