\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Only if we have $ <var:M> = <var:d> \times <var:J> \times <var:R> \times <var:U> \times <var:B> \times <var:L> \times <var:T> \times <var:H> \times <var:b> $ with some natural number $ <var:M> $ as well as satisfying the condition that $ <var:R> $ , $ <var:U> $ , $ <var:J> $ , $ <var:B> $ , $ <var:T> $ , $ <var:b> $ , $ <var:H> $ , $ <var:L> $ and $ <var:d> \geq <nat:2> $ taking some natural numbers $ <var:L> $ , $ <var:R> $ , $ <var:b> $ , $ <var:U> $ , $ <var:B> $ , $ <var:d> $ , $ <var:J> $ , $ <var:H> $ , $ <var:T> $ , then we define that $ <var:M> $ is a <def:nine-composite> number . Then the positive integer <nat:14826240> is a <def:nine-composite> natural number . \end{theorem} \begin{proof} Remember that <nat:14826240> is <def:nine-composite> iff it is the multiplication between natural numbers $ <var:L> $ , $ <var:d> $ , $ <var:T> $ , $ <var:B> $ , $ <var:H> $ , $ <var:J> $ , $ <var:b> $ , $ <var:R> $ and $ <var:U> $ satisfying the condition that $ <var:R> $ , $ <var:b> $ , $ <var:H> $ , $ <var:T> $ , $ <var:L> $ , $ <var:d> $ , $ <var:U> $ , $ <var:B> $ , and $ <var:J> > <nat:1> $ . Note $ <nat:13> $ , $ <nat:2> $ , $ <nat:9> $ , $ <nat:12> $ , $ <nat:4> $ , $ <nat:8> $ , $ <nat:11> $ , $ <nat:3> $ and $ <nat:5> > <nat:1> $ . Additionally notice too $ <var:d> * <var:B> * <var:H> * <var:R> * <var:b> * <var:J> * <var:U> * <var:T> * <var:L> = <nat:14826240> $ shows $ <var:d> = <nat:9> $ , $ <var:B> = <nat:4> $ , $ <var:L> = <nat:12> $ , $ <var:b> = <nat:5> $ , $ <var:T> = <nat:13> $ , $ <var:R> = <nat:2> $ , $ <var:J> = <nat:8> $ , $ <var:H> = <nat:11> $ , and $ <var:U> = <nat:3> $ . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:nine-composite> ( <var:M> : nat ) := exists <var:L> <var:R> <var:b> <var:U> <var:B> <var:d> <var:J> <var:H> <var:T> : nat , ( <var:M> = <var:d> * <var:J> * <var:R> * <var:U> * <var:B> * <var:L> * <var:T> * <var:H> * <var:b> ) /\ ( <var:R> >= <nat:2> ) /\ ( <var:U> >= <nat:2> ) /\ ( <var:J> >= <nat:2> ) /\ ( <var:B> >= <nat:2> ) /\ ( <var:T> >= <nat:2> ) /\ ( <var:b> >= <nat:2> ) /\ ( <var:H> >= <nat:2> ) /\ ( <var:L> >= <nat:2> ) /\ ( <var:d> >= <nat:2> ) . Theorem <genP:1> : <def:nine-composite> <nat:14826240> . Proof . unfold <def:nine-composite> . assert ( <genH> : <nat:13> > <nat:1> ) . { lia . } assert ( <genH> : <nat:2> > <nat:1> ) . { lia . } assert ( <genH> : <nat:9> > <nat:1> ) . { lia . } assert ( <genH> : <nat:12> > <nat:1> ) . { lia . } assert ( <genH> : <nat:4> > <nat:1> ) . { lia . } assert ( <genH> : <nat:8> > <nat:1> ) . { lia . } assert ( <genH> : <nat:11> > <nat:1> ) . { lia . } assert ( <genH> : <nat:3> > <nat:1> ) . { lia . } assert ( <genH> : <nat:5> > <nat:1> ) . { lia . } exists <nat:12> . exists <nat:2> . exists <nat:5> . exists <nat:3> . exists <nat:4> . exists <nat:9> . exists <nat:8> . exists <nat:11> . exists <nat:13> . repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 