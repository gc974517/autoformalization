\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Given some positive terms $ <var:T> $ , $ <var:b> $ , $ <var:Y> $ , $ <var:e> $ , $ <var:q> $ , $ <var:S> $ , $ <var:l> $ , $ <var:z> $ , and $ <var:g> $ the summation $ <var:T> * <nat:226> + <var:e> * <nat:356> + <nat:345> + <nat:2> * <var:l> + <nat:248> * <var:Y> + <var:q> * <nat:348> + <nat:298> * <var:S> + <nat:210> * <var:z> + <nat:188> * <var:b> + <nat:452> * <var:g> $ is odd . \end{theorem} \begin{proof} See that the summing of even numbers together with an odd natural number is odd . This theorem is proven by reason that $ <var:q> <nat:348> + <nat:356> <var:e> + <nat:298> <var:S> + <nat:248> <var:Y> + <nat:210> <var:z> + <var:l> <nat:2> + <var:T> <nat:226> + <nat:188> <var:b> + <var:g> <nat:452> $ is clearly even . Take note the summation between an even positive integer and an even natural must be even . Building on , the products $ <var:q> \cdot <nat:348> $ , $ <var:e> \cdot <nat:356> $ , $ <var:S> \cdot <nat:298> $ , $ <nat:248> \cdot <var:Y> $ , $ <nat:210> \cdot <var:z> $ , $ <var:l> \cdot <nat:2> $ , $ <var:T> \cdot <nat:226> $ , $ <nat:188> \cdot <var:b> $ , and likewise $ <var:g> \cdot <nat:452> $ are guaranteed to be even natural numbers by reason that the coefficients $ <nat:348> $ , $ <nat:356> $ , $ <nat:298> $ , $ <nat:248> $ , $ <nat:210> $ , $ <nat:2> $ , $ <nat:226> $ , $ <nat:188> $ , additionally $ <nat:452> $ must be themselves even integers . It can be justified that $ <nat:226> * <var:T> + <var:z> * <nat:210> + <var:Y> * <nat:248> + <nat:348> * <var:q> + <var:S> * <nat:298> + <nat:345> + <nat:356> * <var:e> + <var:g> * <nat:452> + <nat:2> * <var:l> + <nat:188> * <var:b> $ is odd . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:T> <var:b> <var:Y> <var:e> <var:q> <var:S> <var:l> <var:z> <var:g> : nat , Nat . odd ( <nat:226> * <var:T> + <nat:356> * <var:e> + <nat:2> * <var:l> + <nat:248> * <var:Y> + <nat:348> * <var:q> + <nat:298> * <var:S> + <nat:210> * <var:z> + <nat:188> * <var:b> + <nat:452> * <var:g> + <nat:345> ) = true . Proof . intros . rewrite Nat . odd_add . assert ( <genH> : Nat . even <nat:348> = true ) . { auto . } assert ( <genH> : Nat . even <nat:356> = true ) . { auto . } assert ( <genH> : Nat . even <nat:298> = true ) . { auto . } assert ( <genH> : Nat . even <nat:248> = true ) . { auto . } assert ( <genH> : Nat . even <nat:210> = true ) . { auto . } assert ( <genH> : Nat . even <nat:2> = true ) . { auto . } assert ( <genH> : Nat . even <nat:226> = true ) . { auto . } assert ( <genH> : Nat . even <nat:188> = true ) . { auto . } assert ( <genH> : Nat . even <nat:452> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:348> * <var:q> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:356> * <var:e> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:298> * <var:S> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:248> * <var:Y> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:210> * <var:z> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:2> * <var:l> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:226> * <var:T> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:188> * <var:b> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:452> * <var:g> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:226> * <var:T> + <nat:356> * <var:e> + <nat:2> * <var:l> + <nat:248> * <var:Y> + <nat:348> * <var:q> + <nat:298> * <var:S> + <nat:210> * <var:z> + <nat:188> * <var:b> + <nat:452> * <var:g> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite <- Nat . negb_even . rewrite <genH> . auto . Qed . 