\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Take that $ <var:E> $ is a <def:ten-composite> integer iff there exist some positive integers $ <var:o> $ , $ <var:Z> $ , $ <var:R> $ , $ <var:O> $ , $ <var:e> $ , $ <var:X> $ , $ <var:k> $ , $ <var:s> $ , $ <var:r> $ , $ <var:m> $ where so that $ <var:r> $ , $ <var:Z> $ , $ <var:k> $ , $ <var:R> $ , $ <var:o> $ , $ <var:s> $ , $ <var:e> $ , $ <var:X> $ , $ <var:m> $ , and $ <var:O> > <nat:1> $ as well as taking some positive integer $ <var:E> $ , $ <var:o> * <var:X> * <var:r> * <var:s> * <var:e> * <var:R> * <var:Z> * <var:k> * <var:O> * <var:m> = <var:E> $ . Therefore $ <nat:345945600> = <var:E> $ is <def:ten-composite> . \end{theorem} \begin{proof} Remember that a <def:ten-composite> number is the multiplication between numbers $ <var:X> $ , $ <var:e> $ , $ <var:Z> $ , $ <var:r> $ , $ <var:O> $ , $ <var:s> $ , $ <var:o> $ , $ <var:k> $ , $ <var:m> $ and $ <var:R> $ where $ <var:s> $ , $ <var:k> $ , $ <var:e> $ , $ <var:R> $ , $ <var:X> $ , $ <var:r> $ , $ <var:Z> $ , $ <var:o> $ , $ <var:O> $ , and $ <var:m> > <nat:1> $ . Let $ <var:s> = <nat:13> $ , $ <var:m> = <nat:8> $ , $ <var:R> = <nat:10> $ , $ <var:r> = <nat:5> $ , $ <var:e> = <nat:7> $ , $ <var:X> = <nat:11> $ , $ <var:O> = <nat:6> $ , $ <var:k> = <nat:4> $ , $ <var:Z> = <nat:12> $ , and $ <var:o> = <nat:3> $ . Moreover observe $ <var:o> = <nat:3> $ , $ <var:e> = <nat:7> $ , $ <var:m> = <nat:8> $ , $ <var:k> = <nat:4> $ , $ <var:R> = <nat:10> $ , $ <var:X> = <nat:11> $ , $ <var:s> = <nat:13> $ , $ <var:Z> = <nat:12> $ , $ <var:O> = <nat:6> $ , and $ <var:r> = <nat:5> > <nat:1> $ . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:ten-composite> ( <var:E> : nat ) := exists <var:o> <var:Z> <var:R> <var:O> <var:e> <var:X> <var:k> <var:s> <var:r> <var:m> : nat , ( <var:r> > <nat:1> ) /\ ( <var:Z> > <nat:1> ) /\ ( <var:k> > <nat:1> ) /\ ( <var:R> > <nat:1> ) /\ ( <var:o> > <nat:1> ) /\ ( <var:s> > <nat:1> ) /\ ( <var:e> > <nat:1> ) /\ ( <var:X> > <nat:1> ) /\ ( <var:m> > <nat:1> ) /\ ( <var:O> > <nat:1> ) /\ ( <var:o> * <var:X> * <var:r> * <var:s> * <var:e> * <var:R> * <var:Z> * <var:k> * <var:O> * <var:m> = <var:E> ) . Theorem <genP:1> : <def:ten-composite> <nat:345945600> . Proof . unfold <def:ten-composite> . exists <nat:3> . exists <nat:12> . exists <nat:10> . exists <nat:6> . exists <nat:7> . exists <nat:11> . exists <nat:4> . exists <nat:13> . exists <nat:5> . exists <nat:8> . assert ( <genH> : <nat:3> > <nat:1> ) . { lia . } assert ( <genH> : <nat:7> > <nat:1> ) . { lia . } assert ( <genH> : <nat:8> > <nat:1> ) . { lia . } assert ( <genH> : <nat:4> > <nat:1> ) . { lia . } assert ( <genH> : <nat:10> > <nat:1> ) . { lia . } assert ( <genH> : <nat:11> > <nat:1> ) . { lia . } assert ( <genH> : <nat:13> > <nat:1> ) . { lia . } assert ( <genH> : <nat:12> > <nat:1> ) . { lia . } assert ( <genH> : <nat:6> > <nat:1> ) . { lia . } assert ( <genH> : <nat:5> > <nat:1> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 