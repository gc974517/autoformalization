\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:D> \times <nat:78> + <var:H> \times <nat:34> + <var:J> \times <nat:326> + <nat:250> \times <var:P> + <var:N> \times <nat:380> + <nat:216> \times <var:o> + <nat:260> \times <var:c> + <nat:125> $ must be odd using some positive numbers $ <var:o> $ , $ <var:N> $ , $ <var:P> $ , $ <var:c> $ , $ <var:J> $ , $ <var:D> $ , and $ <var:H> $ . \end{theorem} \begin{proof} The adding between an even whole number with an odd number in $ \mathbb{N} $ is guaranteed to be an odd number in $ \mathbb{N} $ . What's more , the products $ <nat:78> \cdot <var:D> $ , $ <nat:34> \cdot <var:H> $ , $ <var:J> \cdot <nat:326> $ , $ <nat:250> \cdot <var:P> $ , $ <var:N> \cdot <nat:380> $ , $ <var:o> \cdot <nat:216> $ , $ <var:c> \cdot <nat:260> $ , are clearly even . This fact is proven as a consequence that the coefficients $ <nat:78> $ , $ <nat:34> $ , $ <nat:326> $ , $ <nat:250> $ , $ <nat:380> $ , $ <nat:216> $ , $ <nat:260> $ , are known as by their very nature even elements of $ \mathbb{N} $ . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:o> <var:N> <var:P> <var:c> <var:J> <var:D> <var:H> : nat , Nat . odd ( <nat:78> * <var:D> + <nat:34> * <var:H> + <nat:326> * <var:J> + <nat:250> * <var:P> + <nat:380> * <var:N> + <nat:216> * <var:o> + <nat:260> * <var:c> + <nat:125> ) = true . Proof . intros . rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . assert ( <genH> : Nat . even <nat:78> = true ) . { auto . } assert ( <genH> : Nat . even <nat:34> = true ) . { auto . } assert ( <genH> : Nat . even <nat:326> = true ) . { auto . } assert ( <genH> : Nat . even <nat:250> = true ) . { auto . } assert ( <genH> : Nat . even <nat:380> = true ) . { auto . } assert ( <genH> : Nat . even <nat:216> = true ) . { auto . } assert ( <genH> : Nat . even <nat:260> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:78> * <var:D> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:34> * <var:H> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:326> * <var:J> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:250> * <var:P> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:380> * <var:N> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:216> * <var:o> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:260> * <var:c> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 