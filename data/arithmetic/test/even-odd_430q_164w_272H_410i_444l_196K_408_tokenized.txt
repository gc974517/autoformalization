\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:164> \cdot <var:w> + <nat:272> \cdot <var:H> + <nat:430> \cdot <var:q> + <nat:408> + <nat:444> \cdot <var:l> + <nat:410> \cdot <var:i> + <nat:196> \cdot <var:K> $ will be even . \end{theorem} \begin{proof} See that the adding between an even positive integer and an even natural is guaranteed to be an even whole number . Notice that $ <nat:408> $ is known to be an even whole number . The expression $ <var:w> \cdot <nat:164> + <nat:272> \cdot <var:H> + <nat:444> \cdot <var:l> + <var:K> \cdot <nat:196> + <nat:410> \cdot <var:i> + <nat:430> \cdot <var:q> $ is even . What's more , see the whole numbers $ <nat:164> $ , $ <nat:272> $ , $ <nat:444> $ , $ <nat:196> $ , $ <nat:410> $ , in addition to $ <nat:430> $ are trivially even . Consequently , the products $ <var:w> \cdot <nat:164> $ , $ <var:H> \cdot <nat:272> $ , $ <nat:444> \cdot <var:l> $ , $ <nat:196> \cdot <var:K> $ , $ <nat:410> \cdot <var:i> $ , plus $ <var:q> \cdot <nat:430> $ must be even also . By reason that the multiplication between an even positive integer with a element of $ \mathbb{N} $ is guaranteed to be even the sum $ <nat:430> \times <var:q> + <var:w> \times <nat:164> + <nat:272> \times <var:H> + <nat:410> \times <var:i> + <nat:444> \times <var:l> + <var:K> \times <nat:196> $ is even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:w> <var:H> <var:q> <var:l> <var:i> <var:K> : nat , Nat . even ( <nat:164> * <var:w> + <nat:272> * <var:H> + <nat:430> * <var:q> + <nat:444> * <var:l> + <nat:410> * <var:i> + <nat:196> * <var:K> + <nat:408> ) = true . Proof . intros . rewrite Nat . even_add . assert ( <genH> : Nat . even <nat:408> = true ) . { auto . } assert ( <genH> : Nat . even <nat:164> = true ) . { auto . } assert ( <genH> : Nat . even <nat:272> = true ) . { auto . } assert ( <genH> : Nat . even <nat:444> = true ) . { auto . } assert ( <genH> : Nat . even <nat:196> = true ) . { auto . } assert ( <genH> : Nat . even <nat:410> = true ) . { auto . } assert ( <genH> : Nat . even <nat:430> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:164> * <var:w> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:272> * <var:H> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:444> * <var:l> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:196> * <var:K> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:410> * <var:i> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:430> * <var:q> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:164> * <var:w> + <nat:272> * <var:H> + <nat:430> * <var:q> + <nat:444> * <var:l> + <nat:410> * <var:i> + <nat:196> * <var:K> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite <genH> . rewrite <genH> . auto . Qed . 