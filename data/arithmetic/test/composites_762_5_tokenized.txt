\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \newtheorem{definition}{Definition} \begin{document} \begin{definition} There exist $ <var:L> $ , $ <var:J> $ , $ <var:P> $ , $ <var:R> $ , $ <var:t> \in \mathbb{Z}^+ $ so that $ <var:P> $ , $ <var:R> $ , $ <var:L> $ , $ <var:J> $ and $ <var:t> \geq <nat:2> $ . We define that $ <var:B> \in \mathbb{Z}^+ $ is said to be a <def:five-composite> natural number if $ <var:R> \times <var:L> \times <var:P> \times <var:t> \times <var:J> = <var:B> $ . \end{definition} \begin{theorem} $ <nat:1680> = <var:B> $ is a <def:five-composite> whole number . \end{theorem} \begin{proof} Remember that <nat:1680> is a <def:five-composite> whole number given that it is the multiplication of integers $ <var:P> $ , $ <var:L> $ , $ <var:R> $ , $ <var:J> $ and $ <var:t> $ so that $ <var:J> $ , $ <var:P> $ , $ <var:t> $ , $ <var:R> $ , $ <var:L> \geq <nat:2> $ . Let $ <var:t> = <nat:6> $ , $ <var:R> = <nat:2> $ , $ <var:P> = <nat:4> $ , $ <var:L> = <nat:5> $ , and $ <var:J> = <nat:7> $ . Observe that $ <nat:1680> = <var:J> * <var:t> * <var:R> * <var:P> * <var:L> $ . Additionally observe that $ <var:R> = <nat:2> $ , $ <var:P> = <nat:4> $ , $ <var:t> = <nat:6> $ , $ <var:J> = <nat:7> $ , and $ <var:L> = <nat:5> \geq <nat:2> $ . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:five-composite> ( <var:B> : nat ) := exists <var:L> <var:J> <var:P> <var:R> <var:t> : nat , ( <var:P> >= <nat:2> ) /\ ( <var:R> >= <nat:2> ) /\ ( <var:L> >= <nat:2> ) /\ ( <var:J> >= <nat:2> ) /\ ( <var:t> >= <nat:2> ) /\ ( <var:R> * <var:L> * <var:P> * <var:t> * <var:J> = <var:B> ) . Theorem <genP:1> : <def:five-composite> <nat:1680> . Proof . unfold <def:five-composite> . exists <nat:5> . exists <nat:7> . exists <nat:4> . exists <nat:2> . exists <nat:6> . assert ( <genH> : <nat:2> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:4> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:6> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:7> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:5> >= <nat:2> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 