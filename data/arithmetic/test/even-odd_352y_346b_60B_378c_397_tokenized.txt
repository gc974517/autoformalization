\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:B> \times <nat:60> + <nat:352> \times <var:y> + <nat:397> + <nat:378> \times <var:c> + <var:b> \times <nat:346> $ will be odd . \end{theorem} \begin{proof} Recall $ <var:B> <nat:60> + <nat:346> <var:b> + <nat:352> <var:y> + <var:c> <nat:378> $ is known to be even . Observe the totaling of even natural numbers and an even positive integer is guaranteed to be an even element of $ \mathbb{Z}^+ $ . The products $ <var:b> \cdot <nat:346> $ , $ <var:c> \cdot <nat:378> $ , and moreover $ <var:y> \cdot <nat:352> $ are obviously even . Furthermore , take note that the product $ <var:B> \cdot <nat:60> $ is known to be even . as well as because the multiplication of even numbers in $ \mathbb{Z}^+ $ with an arbitrary whole number is even the expression $ <nat:352> \times <var:y> + <var:b> \times <nat:346> + <var:B> \times <nat:60> + <nat:378> \times <var:c> $ must be trivially even . Notice that the totaling between an even integer with an odd element of $ \mathbb{N} $ will be an odd element of $ \mathbb{N} $ . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:B> <var:y> <var:c> <var:b> : nat , Nat . odd ( <nat:60> * <var:B> + <nat:352> * <var:y> + <nat:378> * <var:c> + <nat:346> * <var:b> + <nat:397> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:346> * <var:b> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:378> * <var:c> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:352> * <var:y> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:60> * <var:B> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:60> * <var:B> + <nat:352> * <var:y> + <nat:378> * <var:c> + <nat:346> * <var:b> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . auto . Qed . 