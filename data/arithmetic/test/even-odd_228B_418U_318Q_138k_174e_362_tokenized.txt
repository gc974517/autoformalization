\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Assuming every integers $ <var:B> $ , $ <var:k> $ , $ <var:e> $ , $ <var:Q> $ , and $ <var:U> $ the summation $ <nat:228> * <var:B> + <var:e> * <nat:174> + <var:k> * <nat:138> + <var:Q> * <nat:318> + <nat:362> + <nat:418> * <var:U> $ will be even . \end{theorem} \begin{proof} See that the whole numbers $ <nat:174> $ and also $ <nat:318> $ are trivially even numbers . Therefore , the products $ <var:e> \times <nat:174> $ in addition to $ <nat:318> \times <var:Q> $ must be even also . The pairs $ <var:k> \times <nat:138> $ and moreover $ <nat:228> \times <var:B> $ must be even from the knowledge the leading terms $ <nat:138> $ as well as $ <nat:228> $ will be even . The integer $ <nat:418> $ is an even element of $ \mathbb{Z}^+ $ . In consequence , $ <nat:418> \times <var:U> $ must be even also . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:B> <var:k> <var:e> <var:Q> <var:U> : nat , Nat . even ( <nat:228> * <var:B> + <nat:174> * <var:e> + <nat:138> * <var:k> + <nat:318> * <var:Q> + <nat:418> * <var:U> + <nat:362> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:174> = true ) . { auto . } assert ( <genH> : Nat . even <nat:318> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:174> * <var:e> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:318> * <var:Q> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:138> = true ) . { auto . } assert ( <genH> : Nat . even <nat:228> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:138> * <var:k> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:228> * <var:B> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:418> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:418> * <var:U> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 