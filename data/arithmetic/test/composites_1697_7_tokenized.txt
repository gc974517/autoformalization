\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Whenever we get $ <var:q> * <var:C> * <var:n> * <var:v> * <var:N> * <var:H> * <var:k> = <var:O> $ given some whole number $ <var:O> $ plus where $ <var:n> $ , $ <var:q> $ , $ <var:v> $ , $ <var:N> $ , $ <var:C> $ , $ <var:H> $ , and $ <var:k> \geq <nat:2> $ , we claim that $ <var:O> $ is a <def:seven-composite> integer with some integers $ <var:v> $ , $ <var:N> $ , $ <var:C> $ , $ <var:n> $ , $ <var:H> $ , $ <var:q> $ , $ <var:k> $ . Therefore the whole number <nat:224640> is <def:seven-composite> . \end{theorem} \begin{proof} Allow $ <var:q> = <nat:8> $ , $ <var:k> = <nat:9> $ , $ <var:C> = <nat:13> $ , $ <var:n> = <nat:10> $ , $ <var:H> = <nat:3> $ , $ <var:v> = <nat:2> $ , and $ <var:N> = <nat:4> $ . We justify <nat:224640> is the product of $ <var:q> $ , $ <var:k> $ , $ <var:N> $ , $ <var:C> $ , $ <var:n> $ , $ <var:H> $ , and $ <var:v> \in \mathbb{N} $ as well as $ <var:k> $ , $ <var:C> $ , $ <var:H> $ , $ <var:v> $ , $ <var:n> $ , $ <var:N> $ , $ <var:q> \geq <nat:2> $ . Notice that $ <nat:224640> = <var:v> * <var:q> * <var:n> * <var:k> * <var:C> * <var:H> * <var:N> $ . Also notice $ <nat:8> $ , $ <nat:2> $ , $ <nat:3> $ , $ <nat:13> $ , $ <nat:4> $ , $ <nat:9> $ , $ <nat:10> \geq <nat:2> $ . This indicates our claim holds . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:seven-composite> ( <var:O> : nat ) := exists <var:v> <var:N> <var:C> <var:n> <var:H> <var:q> <var:k> : nat , ( <var:q> * <var:C> * <var:n> * <var:v> * <var:N> * <var:H> * <var:k> = <var:O> ) /\ ( <var:n> >= <nat:2> ) /\ ( <var:q> >= <nat:2> ) /\ ( <var:v> >= <nat:2> ) /\ ( <var:N> >= <nat:2> ) /\ ( <var:C> >= <nat:2> ) /\ ( <var:H> >= <nat:2> ) /\ ( <var:k> >= <nat:2> ) . Theorem <genP:1> : <def:seven-composite> <nat:224640> . Proof . unfold <def:seven-composite> . exists <nat:2> . exists <nat:4> . exists <nat:13> . exists <nat:10> . exists <nat:3> . exists <nat:8> . exists <nat:9> . assert ( <genH> : <nat:8> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:2> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:3> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:13> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:4> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:9> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:10> >= <nat:2> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 