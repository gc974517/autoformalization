\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:188> <var:H> + <var:J> <nat:150> + <nat:228> <var:a> + <nat:472> <var:f> + <var:v> <nat:146> + <var:h> <nat:398> + <var:p> <nat:32> + <nat:399> + <nat:258> <var:U> + <var:x> <nat:414> + <var:X> <nat:142> $ is guaranteed to be odd assuming any $ <var:f> $ , $ <var:h> $ , $ <var:H> $ , $ <var:X> $ , $ <var:p> $ , $ <var:J> $ , $ <var:v> $ , $ <var:a> $ , $ <var:U> $ , and $ <var:x> \in \mathbb{N} $ . \end{theorem} \begin{proof} The summing between an even natural number with an odd number must be clearly an odd number in $ \mathbb{N} $ . Then , the summation $ <var:f> <nat:472> + <nat:399> + <nat:228> <var:a> + <nat:142> <var:X> + <nat:146> <var:v> + <nat:414> <var:x> + <nat:398> <var:h> + <nat:188> <var:H> + <nat:32> <var:p> + <nat:150> <var:J> + <var:U> <nat:258> $ is guaranteed to be odd . Remember $ <nat:399> $ is known as an odd element of $ \mathbb{Z}^+ $ . The theorem holds because $ <var:X> \cdot <nat:142> + <var:J> \cdot <nat:150> + <nat:472> \cdot <var:f> + <nat:228> \cdot <var:a> + <var:p> \cdot <nat:32> + <nat:188> \cdot <var:H> + <nat:258> \cdot <var:U> + <var:h> \cdot <nat:398> + <nat:414> \cdot <var:x> + <var:v> \cdot <nat:146> $ is known as even . The coefficient $ <nat:150> $ is trivially an even natural number . As a consequence , the pair $ <var:J> * <nat:150> $ must be even too . Recall $ <nat:258> * <var:U> $ is an even number in $ \mathbb{N} $ since the integer $ <nat:258> $ is clearly even . On top of this , we know the natural number $ <nat:146> $ is even . As a consequence , the product $ <nat:146> * <var:v> $ must be even in addition . Furthermore , recall the positive integer $ <nat:472> $ is even . Consequently , the term $ <nat:472> * <var:f> $ is even additionally . Additionally , the number $ <nat:32> $ is known to be even . As a consequence , the pair $ <nat:32> * <var:p> $ is even also . Recall the product $ <var:H> * <nat:188> $ is known to be even since multiplying between an even number in $ \mathbb{N} $ and any natural must be trivially an even number in $ \mathbb{Z}^+ $ , and holds since the integer $ <nat:188> $ is known as an even natural number . Adding on , the pair $ <nat:228> * <var:a> $ is obviously an even element of $ \mathbb{N} $ . This is proven since taking the product of an even natural number with any number in $ \mathbb{N} $ must be even and the leading term $ <nat:228> $ is obviously even . See that the product $ <nat:414> * <var:x> $ is clearly an even natural number . This fact is proven because multiplying of an even natural with a natural must be an even number in $ \mathbb{Z}^+ $ plus the positive integer $ <nat:414> $ is an even natural number . On top of this , the pair $ <var:h> * <nat:398> $ is known to be even because the product of an even positive integer and any natural is an even number in $ \mathbb{Z}^+ $ as well as the whole number $ <nat:398> $ is even . Furthermore , remember that the leading term $ <nat:142> $ is clearly even . For this reason , the term $ <var:X> * <nat:142> $ must be even at the same time . Since the addition of even natural numbers and an even integer is guaranteed to be an even number in $ \mathbb{Z}^+ $ , and likewise from the knowledge the product between an even element of $ \mathbb{Z}^+ $ and some positive integer is guaranteed to be an even number . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:f> <var:h> <var:H> <var:X> <var:p> <var:J> <var:v> <var:a> <var:U> <var:x> : nat , Nat . odd ( <nat:188> * <var:H> + <nat:150> * <var:J> + <nat:228> * <var:a> + <nat:472> * <var:f> + <nat:146> * <var:v> + <nat:398> * <var:h> + <nat:32> * <var:p> + <nat:258> * <var:U> + <nat:414> * <var:x> + <nat:142> * <var:X> + <nat:399> ) = true . Proof . intros . rewrite Nat . odd_add . assert ( <genH> : Nat . odd <nat:399> = true ) . { auto . } assert ( <genH> : Nat . even <nat:150> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:150> * <var:J> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:258> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:258> * <var:U> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:146> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:146> * <var:v> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:472> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:472> * <var:f> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:32> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:32> * <var:p> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:188> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:188> * <var:H> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:228> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:228> * <var:a> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:414> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:414> * <var:x> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:398> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:398> * <var:h> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:142> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:142> * <var:X> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:188> * <var:H> + <nat:150> * <var:J> + <nat:228> * <var:a> + <nat:472> * <var:f> + <nat:146> * <var:v> + <nat:398> * <var:h> + <nat:32> * <var:p> + <nat:258> * <var:U> + <nat:414> * <var:x> + <nat:142> * <var:X> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite <- Nat . negb_even . rewrite <genH> . rewrite <genH> . auto . Qed . 