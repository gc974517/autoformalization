\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:458> * <var:a> + <nat:251> + <nat:410> * <var:K> + <var:f> * <nat:354> + <var:s> * <nat:262> + <nat:284> * <var:M> + <var:e> * <nat:204> + <nat:106> * <var:g> + <nat:250> * <var:d> + <var:i> * <nat:426> + <nat:268> * <var:b> + <nat:176> * <var:O> $ is odd . \end{theorem} \begin{proof} The positive integers $ <nat:284> $ , $ <nat:354> $ , $ <nat:106> $ , $ <nat:176> $ , and also $ <nat:204> $ are even In addition to this , notice the numbers $ <nat:250> $ , $ <nat:262> $ , in addition to $ <nat:458> $ are trivially even In addition , the whole numbers $ <nat:410> $ and moreover $ <nat:268> $ are even Take note the natural number $ <nat:426> $ is known as an even natural To begin with , recall that the summing between even whole numbers successively and an odd natural number will be trivially an odd natural . Recall that taking the product between an even number in $ \mathbb{N} $ and a integer is even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:a> <var:K> <var:f> <var:s> <var:M> <var:e> <var:g> <var:d> <var:i> <var:b> <var:O> : nat , Nat . odd ( <nat:458> * <var:a> + <nat:410> * <var:K> + <nat:354> * <var:f> + <nat:262> * <var:s> + <nat:284> * <var:M> + <nat:204> * <var:e> + <nat:106> * <var:g> + <nat:250> * <var:d> + <nat:426> * <var:i> + <nat:268> * <var:b> + <nat:176> * <var:O> + <nat:251> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:284> = true ) . { auto . } assert ( <genH> : Nat . even <nat:354> = true ) . { auto . } assert ( <genH> : Nat . even <nat:106> = true ) . { auto . } assert ( <genH> : Nat . even <nat:176> = true ) . { auto . } assert ( <genH> : Nat . even <nat:204> = true ) . { auto . } assert ( <genH> : Nat . even <nat:250> = true ) . { auto . } assert ( <genH> : Nat . even <nat:262> = true ) . { auto . } assert ( <genH> : Nat . even <nat:458> = true ) . { auto . } assert ( <genH> : Nat . even <nat:410> = true ) . { auto . } assert ( <genH> : Nat . even <nat:268> = true ) . { auto . } assert ( <genH> : Nat . even <nat:426> = true ) . { auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . repeat rewrite Nat . even_mul . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 