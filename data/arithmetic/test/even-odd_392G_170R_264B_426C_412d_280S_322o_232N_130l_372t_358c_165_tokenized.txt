\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Taking any natural numbers $ <var:C> $ , $ <var:l> $ , $ <var:S> $ , $ <var:o> $ , $ <var:G> $ , $ <var:B> $ , $ <var:c> $ , $ <var:R> $ , $ <var:d> $ , $ <var:N> $ , and $ <var:t> $ the expression $ <nat:165> + <var:l> * <nat:130> + <nat:264> * <var:B> + <nat:322> * <var:o> + <var:S> * <nat:280> + <var:G> * <nat:392> + <var:R> * <nat:170> + <nat:358> * <var:c> + <var:d> * <nat:412> + <nat:426> * <var:C> + <var:t> * <nat:372> + <var:N> * <nat:232> $ will be odd . \end{theorem} \begin{proof} The leading terms $ <nat:412> $ , $ <nat:372> $ , $ <nat:358> $ , additionally $ <nat:130> $ must be even numbers in $ \mathbb{Z}^+ $ . In consequence , the pairs $ <nat:412> * <var:d> $ , $ <var:t> * <nat:372> $ , $ <var:c> * <nat:358> $ , in addition to $ <var:l> * <nat:130> $ must be even too . Take note the integers $ <nat:322> $ , $ <nat:232> $ , $ <nat:392> $ , $ <nat:264> $ , and likewise $ <nat:426> $ are obviously even . Consequently , the pairs $ <var:o> * <nat:322> $ , $ <var:N> * <nat:232> $ , $ <var:G> * <nat:392> $ , $ <var:B> * <nat:264> $ , in addition to $ <var:C> * <nat:426> $ is even too . Adding on , see that the whole number $ <nat:280> $ is known to be even . Then , the pair $ <var:S> * <nat:280> $ is guaranteed to be even as well . Recall that the term $ <nat:170> * <var:R> $ is even . This claim holds as a consequence that the leading term $ <nat:170> $ is trivially even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:C> <var:l> <var:S> <var:o> <var:G> <var:B> <var:c> <var:R> <var:d> <var:N> <var:t> : nat , Nat . odd ( <nat:130> * <var:l> + <nat:264> * <var:B> + <nat:322> * <var:o> + <nat:280> * <var:S> + <nat:392> * <var:G> + <nat:170> * <var:R> + <nat:358> * <var:c> + <nat:412> * <var:d> + <nat:426> * <var:C> + <nat:372> * <var:t> + <nat:232> * <var:N> + <nat:165> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:412> = true ) . { auto . } assert ( <genH> : Nat . even <nat:372> = true ) . { auto . } assert ( <genH> : Nat . even <nat:358> = true ) . { auto . } assert ( <genH> : Nat . even <nat:130> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:412> * <var:d> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:372> * <var:t> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:358> * <var:c> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:130> * <var:l> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:322> = true ) . { auto . } assert ( <genH> : Nat . even <nat:232> = true ) . { auto . } assert ( <genH> : Nat . even <nat:392> = true ) . { auto . } assert ( <genH> : Nat . even <nat:264> = true ) . { auto . } assert ( <genH> : Nat . even <nat:426> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:322> * <var:o> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:232> * <var:N> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:392> * <var:G> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:264> * <var:B> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:426> * <var:C> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:280> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:280> * <var:S> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:170> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:170> * <var:R> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 