\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:e> \times <nat:34> + <var:O> \times <nat:434> + <nat:350> \times <var:p> + <nat:164> \times <var:q> + <nat:10> \times <var:K> + <var:H> \times <nat:114> + <var:g> \times <nat:416> + <nat:5> + <nat:276> \times <var:d> + <var:k> \times <nat:214> + <nat:490> \times <var:I> $ is odd . \end{theorem} \begin{proof} Take note the pairs $ <nat:434> \cdot <var:O> $ as well as $ <var:p> \cdot <nat:350> $ are trivially even . Further , the pairs $ <var:e> \cdot <nat:34> $ , $ <nat:164> \cdot <var:q> $ , $ <var:K> \cdot <nat:10> $ , $ <nat:114> \cdot <var:H> $ , $ <var:I> \cdot <nat:490> $ , and $ <nat:214> \cdot <var:k> $ are known as even whole numbers . This holds from the knowledge taking the product between an even number in $ \mathbb{N} $ with any number in $ \mathbb{Z}^+ $ will be an even natural number . What's more , the pair $ <var:d> \cdot <nat:276> $ is obviously an even positive integer . This claim is true since multiplying of an even element of $ \mathbb{N} $ with any number is even . See that the term $ <nat:416> \cdot <var:g> $ is known to be an even number in $ \mathbb{Z}^+ $ . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:e> <var:O> <var:p> <var:q> <var:K> <var:H> <var:g> <var:d> <var:k> <var:I> : nat , Nat . odd ( <nat:34> * <var:e> + <nat:434> * <var:O> + <nat:350> * <var:p> + <nat:164> * <var:q> + <nat:10> * <var:K> + <nat:114> * <var:H> + <nat:416> * <var:g> + <nat:276> * <var:d> + <nat:214> * <var:k> + <nat:490> * <var:I> + <nat:5> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:434> * <var:O> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:350> * <var:p> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:34> * <var:e> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:164> * <var:q> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:10> * <var:K> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:114> * <var:H> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:490> * <var:I> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:214> * <var:k> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:276> * <var:d> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:416> * <var:g> ) = true ) . { rewrite Nat . even_mul . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 