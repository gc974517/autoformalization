\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \newtheorem{definition}{Definition} \begin{document} \begin{definition} Define that $ <var:O> $ is a <def:twelve-composite> number with the condition given some $ <var:v> $ , $ <var:Q> $ , $ <var:i> $ , $ <var:x> $ , $ <var:k> $ , $ <var:F> $ , $ <var:R> $ , $ <var:M> $ , $ <var:A> $ , $ <var:a> $ , $ <var:S> $ , $ <var:q> $ we have $ <var:A> \times <var:a> \times <var:q> \times <var:v> \times <var:R> \times <var:M> \times <var:S> \times <var:x> \times <var:k> \times <var:F> \times <var:Q> \times <var:i> = <var:O> $ with $ <var:O> \in \mathbb{N} $ . \end{definition} \begin{theorem} $ <nat:6227020800> = <var:O> $ is a <def:twelve-composite> positive integer . \end{theorem} \begin{proof} Let $ <var:x> = <nat:11> $ , $ <var:q> = <nat:7> $ , $ <var:i> = <nat:9> $ , $ <var:F> = <nat:8> $ , $ <var:R> = <nat:6> $ , $ <var:S> = <nat:13> $ , $ <var:M> = <nat:3> $ , $ <var:Q> = <nat:10> $ , $ <var:a> = <nat:5> $ , $ <var:v> = <nat:4> $ , $ <var:k> = <nat:2> $ , and $ <var:A> = <nat:12> $ . We present <nat:6227020800> is a <def:twelve-composite> natural number seeing that $ <nat:13> \cdot <nat:5> \cdot <nat:10> \cdot <nat:12> \cdot <nat:8> \cdot <nat:2> \cdot <nat:7> \cdot <nat:4> \cdot <nat:9> \cdot <nat:6> \cdot <nat:11> \cdot <nat:3> = <nat:6227020800> $ . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:twelve-composite> ( <var:O> : nat ) := exists <var:v> <var:Q> <var:i> <var:x> <var:k> <var:F> <var:R> <var:M> <var:A> <var:a> <var:S> <var:q> : nat , ( <var:A> * <var:a> * <var:q> * <var:v> * <var:R> * <var:M> * <var:S> * <var:x> * <var:k> * <var:F> * <var:Q> * <var:i> = <var:O> ) . Theorem <genP:1> : <def:twelve-composite> <nat:6227020800> . Proof . unfold <def:twelve-composite> . exists <nat:4> . exists <nat:10> . exists <nat:9> . exists <nat:11> . exists <nat:2> . exists <nat:8> . exists <nat:6> . exists <nat:3> . exists <nat:12> . exists <nat:5> . exists <nat:13> . exists <nat:7> . repeat split . all : lia . Qed . 