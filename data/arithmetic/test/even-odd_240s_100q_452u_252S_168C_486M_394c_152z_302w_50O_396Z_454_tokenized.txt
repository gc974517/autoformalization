\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:S> \cdot <nat:252> + <nat:168> \cdot <var:C> + <nat:454> + <var:Z> \cdot <nat:396> + <var:s> \cdot <nat:240> + <nat:452> \cdot <var:u> + <nat:50> \cdot <var:O> + <var:c> \cdot <nat:394> + <var:q> \cdot <nat:100> + <var:M> \cdot <nat:486> + <nat:302> \cdot <var:w> + <nat:152> \cdot <var:z> $ is guaranteed to be even . \end{theorem} \begin{proof} It can be checked that the sum $ <var:w> * <nat:302> + <nat:100> * <var:q> + <nat:454> + <nat:394> * <var:c> + <nat:168> * <var:C> + <nat:396> * <var:Z> + <var:s> * <nat:240> + <nat:252> * <var:S> + <nat:452> * <var:u> + <nat:486> * <var:M> + <var:z> * <nat:152> + <nat:50> * <var:O> $ is even . This result must be true since $ <var:C> <nat:168> + <nat:252> <var:S> + <var:q> <nat:100> + <var:c> <nat:394> + <nat:452> <var:u> + <var:Z> <nat:396> + <nat:302> <var:w> + <nat:240> <var:s> + <nat:152> <var:z> + <var:O> <nat:50> + <var:M> <nat:486> $ is guaranteed to be even . Remember the terms $ <var:O> \times <nat:50> $ , $ <nat:486> \times <var:M> $ , $ <nat:240> \times <var:s> $ , $ <nat:152> \times <var:z> $ , $ <var:Z> \times <nat:396> $ , $ <var:C> \times <nat:168> $ , $ <var:c> \times <nat:394> $ , in addition to $ <nat:302> \times <var:w> $ are known to be even integers . This fact is proven since the positive integers $ <nat:50> $ , $ <nat:486> $ , $ <nat:240> $ , $ <nat:152> $ , $ <nat:396> $ , $ <nat:168> $ , $ <nat:394> $ , additionally $ <nat:302> $ are known to be even . The leading terms $ <nat:452> $ and moreover $ <nat:252> $ are obviously even . Thus , the terms $ <var:u> \times <nat:452> $ and likewise $ <nat:252> \times <var:S> $ is even in addition . Furthermore , notice the number $ <nat:100> $ is even . As a consequence , the term $ <nat:100> \times <var:q> $ will be even as well . Recall the summing between even numbers in $ \mathbb{N} $ together must be even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:S> <var:C> <var:Z> <var:s> <var:u> <var:O> <var:c> <var:q> <var:M> <var:w> <var:z> : nat , Nat . even ( <nat:252> * <var:S> + <nat:168> * <var:C> + <nat:396> * <var:Z> + <nat:240> * <var:s> + <nat:452> * <var:u> + <nat:50> * <var:O> + <nat:394> * <var:c> + <nat:100> * <var:q> + <nat:486> * <var:M> + <nat:302> * <var:w> + <nat:152> * <var:z> + <nat:454> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:50> = true ) . { auto . } assert ( <genH> : Nat . even <nat:486> = true ) . { auto . } assert ( <genH> : Nat . even <nat:240> = true ) . { auto . } assert ( <genH> : Nat . even <nat:152> = true ) . { auto . } assert ( <genH> : Nat . even <nat:396> = true ) . { auto . } assert ( <genH> : Nat . even <nat:168> = true ) . { auto . } assert ( <genH> : Nat . even <nat:394> = true ) . { auto . } assert ( <genH> : Nat . even <nat:302> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:50> * <var:O> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:486> * <var:M> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:240> * <var:s> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:152> * <var:z> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:396> * <var:Z> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:168> * <var:C> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:394> * <var:c> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:302> * <var:w> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:452> = true ) . { auto . } assert ( <genH> : Nat . even <nat:252> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:452> * <var:u> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:252> * <var:S> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:100> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:100> * <var:q> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:252> * <var:S> + <nat:168> * <var:C> + <nat:396> * <var:Z> + <nat:240> * <var:s> + <nat:452> * <var:u> + <nat:50> * <var:O> + <nat:394> * <var:c> + <nat:100> * <var:q> + <nat:486> * <var:M> + <nat:302> * <var:w> + <nat:152> * <var:z> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . even_add . rewrite <genH> . auto . Qed . 