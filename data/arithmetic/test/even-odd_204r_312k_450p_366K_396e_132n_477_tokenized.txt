\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} For any whole numbers $ <var:r> $ , $ <var:k> $ , $ <var:p> $ , $ <var:K> $ , $ <var:e> $ , and $ <var:n> $ the formula $ <var:K> <nat:366> + <var:e> <nat:396> + <nat:312> <var:k> + <var:r> <nat:204> + <nat:477> + <nat:450> <var:p> + <nat:132> <var:n> $ is guaranteed to be odd . \end{theorem} \begin{proof} We justify that the formula $ <nat:204> <var:r> + <var:k> <nat:312> + <var:p> <nat:450> + <var:K> <nat:366> + <var:e> <nat:396> + <nat:132> <var:n> $ is trivially even . Remember the totaling between even numbers in $ \mathbb{N} $ successively with an even element of $ \mathbb{N} $ will be an even positive integer . The terms $ <nat:204> * <var:r> $ , $ <var:k> * <nat:312> $ , $ <var:p> * <nat:450> $ , $ <nat:366> * <var:K> $ , $ <var:e> * <nat:396> $ , $ <var:n> * <nat:132> $ , are known to be even by reason that multiplying of an even number in $ \mathbb{Z}^+ $ with some number is even , and is true from the fact the coefficients $ <nat:204> $ , $ <nat:312> $ , $ <nat:450> $ , $ <nat:366> $ , $ <nat:396> $ , $ <nat:132> $ , are known to be even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:r> <var:k> <var:p> <var:K> <var:e> <var:n> : nat , Nat . odd ( <nat:366> * <var:K> + <nat:396> * <var:e> + <nat:312> * <var:k> + <nat:204> * <var:r> + <nat:450> * <var:p> + <nat:132> * <var:n> + <nat:477> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:204> = true ) . { auto . } assert ( <genH> : Nat . even <nat:312> = true ) . { auto . } assert ( <genH> : Nat . even <nat:450> = true ) . { auto . } assert ( <genH> : Nat . even <nat:366> = true ) . { auto . } assert ( <genH> : Nat . even <nat:396> = true ) . { auto . } assert ( <genH> : Nat . even <nat:132> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:204> * <var:r> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:312> * <var:k> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:450> * <var:p> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:366> * <var:K> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:396> * <var:e> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:132> * <var:n> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:366> * <var:K> + <nat:396> * <var:e> + <nat:312> * <var:k> + <nat:204> * <var:r> + <nat:450> * <var:p> + <nat:132> * <var:n> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . auto . Qed . 