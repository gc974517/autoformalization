\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:361> + <var:O> \times <nat:222> + <nat:66> \times <var:e> + <nat:484> \times <var:l> + <nat:278> \times <var:V> $ is odd . \end{theorem} \begin{proof} We utilize the understanding that $ <var:e> \cdot <nat:66> + <var:l> \cdot <nat:484> + <nat:278> \cdot <var:V> + <nat:222> \cdot <var:O> $ is guaranteed to be even . Recall that the summing between even numbers in $ \mathbb{N} $ concurrently and an even positive integer is an even natural number . The whole numbers $ <nat:66> $ , $ <nat:484> $ , $ <nat:278> $ , $ <nat:222> $ , are even . Then , the products $ <nat:66> \cdot <var:e> $ , $ <nat:484> \cdot <var:l> $ , $ <var:V> \cdot <nat:278> $ , $ <nat:222> \cdot <var:O> $ , is guaranteed to be even at the same time . as well as by reason that multiplying between an even whole number with some positive integer must be an even number in $ \mathbb{Z}^+ $ the expression $ <nat:278> <var:V> + <nat:484> <var:l> + <var:e> <nat:66> + <var:O> <nat:222> $ is guaranteed to be trivially even . We check the lemma is true . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:O> <var:e> <var:l> <var:V> : nat , Nat . odd ( <nat:222> * <var:O> + <nat:66> * <var:e> + <nat:484> * <var:l> + <nat:278> * <var:V> + <nat:361> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:66> = true ) . { auto . } assert ( <genH> : Nat . even <nat:484> = true ) . { auto . } assert ( <genH> : Nat . even <nat:278> = true ) . { auto . } assert ( <genH> : Nat . even <nat:222> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:66> * <var:e> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:484> * <var:l> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:278> * <var:V> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:222> * <var:O> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:222> * <var:O> + <nat:66> * <var:e> + <nat:484> * <var:l> + <nat:278> * <var:V> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . auto . Qed . 