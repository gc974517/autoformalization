\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Using every $ <var:K> $ , $ <var:j> $ , $ <var:n> $ , $ <var:Q> $ , $ <var:v> $ , $ <var:Y> $ , $ <var:g> $ , $ <var:V> $ , and $ <var:F> \in \mathbb{N} $ $ <nat:380> \times <var:V> + <nat:313> + <nat:184> \times <var:F> + <var:v> \times <nat:470> + <var:n> \times <nat:20> + <nat:186> \times <var:Q> + <var:j> \times <nat:228> + <nat:344> \times <var:Y> + <nat:496> \times <var:K> + <nat:374> \times <var:g> $ will be odd . \end{theorem} \begin{proof} We know $ <nat:313> $ is known to be an odd number . We verify this theorem is proven . The integers $ <nat:470> $ and $ <nat:184> $ are clearly even whole numbers We know that the natural numbers $ <nat:228> $ , $ <nat:186> $ , $ <nat:374> $ , $ <nat:344> $ , $ <nat:380> $ , and also $ <nat:20> $ are even Remember the integer $ <nat:496> $ is obviously even \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:K> <var:j> <var:n> <var:Q> <var:v> <var:Y> <var:g> <var:V> <var:F> : nat , Nat . odd ( <nat:380> * <var:V> + <nat:184> * <var:F> + <nat:470> * <var:v> + <nat:20> * <var:n> + <nat:186> * <var:Q> + <nat:228> * <var:j> + <nat:344> * <var:Y> + <nat:496> * <var:K> + <nat:374> * <var:g> + <nat:313> ) = true . Proof . intros . assert ( <genH> : Nat . odd <nat:313> = true ) . { auto . } assert ( <genH> : Nat . even <nat:470> = true ) . { auto . } assert ( <genH> : Nat . even <nat:184> = true ) . { auto . } assert ( <genH> : Nat . even <nat:228> = true ) . { auto . } assert ( <genH> : Nat . even <nat:186> = true ) . { auto . } assert ( <genH> : Nat . even <nat:374> = true ) . { auto . } assert ( <genH> : Nat . even <nat:344> = true ) . { auto . } assert ( <genH> : Nat . even <nat:380> = true ) . { auto . } assert ( <genH> : Nat . even <nat:20> = true ) . { auto . } assert ( <genH> : Nat . even <nat:496> = true ) . { auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . repeat rewrite Nat . even_mul . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 