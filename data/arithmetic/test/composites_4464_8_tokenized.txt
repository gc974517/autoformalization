\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \newtheorem{definition}{Definition} \begin{document} \begin{definition} Given we have where $ <var:d> $ , $ <var:P> $ , $ <var:Z> $ , $ <var:K> $ , $ <var:k> $ , $ <var:S> $ , $ <var:v> $ , and $ <var:n> > <nat:1> $ such that assuming some number $ <var:F> $ , $ <var:k> \times <var:n> \times <var:K> \times <var:d> \times <var:S> \times <var:Z> \times <var:P> \times <var:v> = <var:F> $ taking some numbers $ <var:Z> $ , $ <var:K> $ , $ <var:S> $ , $ <var:P> $ , $ <var:v> $ , $ <var:k> $ , $ <var:n> $ , $ <var:d> $ , then we claim that $ <var:F> $ is a <def:eight-composite> positive integer . \end{definition} \begin{theorem} $ <var:F> = <nat:6289920> $ is a <def:eight-composite> number . \end{theorem} \begin{proof} Allow $ <var:d> = <nat:7> $ , $ <var:k> = <nat:13> $ , $ <var:v> = <nat:12> $ , $ <var:Z> = <nat:2> $ , $ <var:P> = <nat:10> $ , $ <var:n> = <nat:4> $ , $ <var:S> = <nat:8> $ , $ <var:K> = <nat:9> $ . We show $ <nat:6289920> = <var:v> * <var:S> * <var:d> * <var:Z> * <var:K> * <var:k> * <var:P> * <var:n> $ . Observe that $ <var:k> = <nat:13> $ , $ <var:v> = <nat:12> $ , $ <var:K> = <nat:9> $ , $ <var:Z> = <nat:2> $ , $ <var:n> = <nat:4> $ , $ <var:d> = <nat:7> $ , $ <var:P> = <nat:10> $ , and $ <var:S> = <nat:8> > <nat:1> $ . Moreover notice as well $ <nat:6289920> = <nat:2> * <nat:13> * <nat:12> * <nat:4> * <nat:8> * <nat:10> * <nat:7> * <nat:9> $ . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:eight-composite> ( <var:F> : nat ) := exists <var:Z> <var:K> <var:S> <var:P> <var:v> <var:k> <var:n> <var:d> : nat , ( <var:d> > <nat:1> ) /\ ( <var:P> > <nat:1> ) /\ ( <var:Z> > <nat:1> ) /\ ( <var:K> > <nat:1> ) /\ ( <var:k> > <nat:1> ) /\ ( <var:S> > <nat:1> ) /\ ( <var:v> > <nat:1> ) /\ ( <var:n> > <nat:1> ) /\ ( <var:k> * <var:n> * <var:K> * <var:d> * <var:S> * <var:Z> * <var:P> * <var:v> = <var:F> ) . Theorem <genP:1> : <def:eight-composite> <nat:6289920> . Proof . unfold <def:eight-composite> . exists <nat:2> . exists <nat:9> . exists <nat:8> . exists <nat:10> . exists <nat:12> . exists <nat:13> . exists <nat:4> . exists <nat:7> . assert ( <genH> : <nat:13> > <nat:1> ) . { lia . } assert ( <genH> : <nat:12> > <nat:1> ) . { lia . } assert ( <genH> : <nat:9> > <nat:1> ) . { lia . } assert ( <genH> : <nat:2> > <nat:1> ) . { lia . } assert ( <genH> : <nat:4> > <nat:1> ) . { lia . } assert ( <genH> : <nat:7> > <nat:1> ) . { lia . } assert ( <genH> : <nat:10> > <nat:1> ) . { lia . } assert ( <genH> : <nat:8> > <nat:1> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 