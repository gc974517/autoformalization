\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} We assume that if and only if there are positive integers $ <var:Z> $ , $ <var:C> $ , $ <var:T> $ , $ <var:z> $ , $ <var:B> $ , $ <var:t> $ , $ <var:f> $ , $ <var:P> $ , $ <var:g> $ then claim that $ <var:b> \in \mathbb{Z}^+ $ will be considered a <def:nine-composite> integer given $ <var:C> \cdot <var:g> \cdot <var:t> \cdot <var:f> \cdot <var:B> \cdot <var:z> \cdot <var:P> \cdot <var:Z> \cdot <var:T> = <var:b> $ as well as satisfying the condition that $ <var:T> $ , $ <var:C> $ , $ <var:g> $ , $ <var:P> $ , $ <var:Z> $ , $ <var:B> $ , $ <var:z> $ , $ <var:f> $ , $ <var:t> \geq <nat:2> $ . Therefore $ <nat:19958400> = <var:b> $ is a <def:nine-composite> whole number . \end{theorem} \begin{proof} Remember a <def:nine-composite> natural number is the multiplication between natural numbers $ <var:f> $ , $ <var:g> $ , $ <var:T> $ , $ <var:P> $ , $ <var:Z> $ , $ <var:B> $ , $ <var:C> $ , $ <var:t> $ , and $ <var:z> $ such that $ <var:z> $ , $ <var:Z> $ , $ <var:T> $ , $ <var:B> $ , $ <var:f> $ , $ <var:g> $ , $ <var:P> $ , $ <var:C> $ , and $ <var:t> \geq <nat:2> $ . Assume $ <var:P> = <nat:10> $ , $ <var:T> = <nat:8> $ , $ <var:B> = <nat:6> $ , $ <var:t> = <nat:9> $ , $ <var:f> = <nat:4> $ , $ <var:Z> = <nat:5> $ , $ <var:z> = <nat:3> $ , $ <var:g> = <nat:7> $ , $ <var:C> = <nat:11> $ . Also notice that $ <nat:8> $ , $ <nat:11> $ , $ <nat:7> $ , $ <nat:3> $ , $ <nat:6> $ , $ <nat:9> $ , $ <nat:10> $ , $ <nat:5> $ , and $ <nat:4> $ are more than or equivalent to <nat:2> . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:nine-composite> ( <var:b> : nat ) := exists <var:Z> <var:C> <var:T> <var:z> <var:B> <var:t> <var:f> <var:P> <var:g> : nat , ( <var:C> * <var:g> * <var:t> * <var:f> * <var:B> * <var:z> * <var:P> * <var:Z> * <var:T> = <var:b> ) /\ ( <var:T> >= <nat:2> ) /\ ( <var:C> >= <nat:2> ) /\ ( <var:g> >= <nat:2> ) /\ ( <var:P> >= <nat:2> ) /\ ( <var:Z> >= <nat:2> ) /\ ( <var:B> >= <nat:2> ) /\ ( <var:z> >= <nat:2> ) /\ ( <var:f> >= <nat:2> ) /\ ( <var:t> >= <nat:2> ) . Theorem <genP:1> : <def:nine-composite> <nat:19958400> . Proof . unfold <def:nine-composite> . exists <nat:5> . exists <nat:11> . exists <nat:8> . exists <nat:3> . exists <nat:6> . exists <nat:9> . exists <nat:4> . exists <nat:10> . exists <nat:7> . assert ( <genH> : <nat:8> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:11> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:7> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:3> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:6> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:9> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:10> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:5> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:4> >= <nat:2> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 