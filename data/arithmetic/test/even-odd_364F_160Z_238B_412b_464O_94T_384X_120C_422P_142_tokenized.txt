\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:364> * <var:F> + <var:Z> * <nat:160> + <nat:238> * <var:B> + <nat:412> * <var:b> + <var:O> * <nat:464> + <var:T> * <nat:94> + <nat:142> + <nat:384> * <var:X> + <var:C> * <nat:120> + <nat:422> * <var:P> $ must be even assuming some variables $ <var:b> $ , $ <var:T> $ , $ <var:O> $ , $ <var:B> $ , $ <var:C> $ , $ <var:P> $ , $ <var:Z> $ , $ <var:F> $ , and $ <var:X> $ . \end{theorem} \begin{proof} Further , the terms $ <var:F> * <nat:364> $ , $ <var:Z> * <nat:160> $ , $ <var:B> * <nat:238> $ , $ <nat:412> * <var:b> $ , $ <var:O> * <nat:464> $ , $ <nat:94> * <var:T> $ , $ <var:X> * <nat:384> $ , $ <nat:120> * <var:C> $ , as well as $ <nat:422> * <var:P> $ are guaranteed to be even . This is proven from the fact the leading terms $ <nat:364> $ , $ <nat:160> $ , $ <nat:238> $ , $ <nat:412> $ , $ <nat:464> $ , $ <nat:94> $ , $ <nat:384> $ , $ <nat:120> $ , and likewise $ <nat:422> $ will be even elements of $ \mathbb{N} $ . Take note the totaling between even positive integers concurrently and an even number in $ \mathbb{Z}^+ $ is guaranteed to be in itself an even whole number . We know $ <nat:142> $ is clearly an even number . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:b> <var:T> <var:O> <var:B> <var:C> <var:P> <var:Z> <var:F> <var:X> : nat , Nat . even ( <nat:364> * <var:F> + <nat:160> * <var:Z> + <nat:238> * <var:B> + <nat:412> * <var:b> + <nat:464> * <var:O> + <nat:94> * <var:T> + <nat:384> * <var:X> + <nat:120> * <var:C> + <nat:422> * <var:P> + <nat:142> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:364> = true ) . { auto . } assert ( <genH> : Nat . even <nat:160> = true ) . { auto . } assert ( <genH> : Nat . even <nat:238> = true ) . { auto . } assert ( <genH> : Nat . even <nat:412> = true ) . { auto . } assert ( <genH> : Nat . even <nat:464> = true ) . { auto . } assert ( <genH> : Nat . even <nat:94> = true ) . { auto . } assert ( <genH> : Nat . even <nat:384> = true ) . { auto . } assert ( <genH> : Nat . even <nat:120> = true ) . { auto . } assert ( <genH> : Nat . even <nat:422> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:364> * <var:F> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:160> * <var:Z> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:238> * <var:B> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:412> * <var:b> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:464> * <var:O> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:94> * <var:T> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:384> * <var:X> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:120> * <var:C> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:422> * <var:P> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } repeat rewrite Nat . even_add . assert ( <genH> : Nat . even <nat:142> = true ) . { auto . } rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 