\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} For some positive numbers $ <var:T> $ , $ <var:t> $ , $ <var:J> $ , $ <var:S> $ , $ <var:s> $ , $ <var:e> $ , and $ <var:k> $ the expression $ <var:S> <nat:274> + <nat:108> + <var:T> <nat:462> + <nat:414> <var:e> + <nat:98> <var:k> + <nat:412> <var:s> + <var:J> <nat:182> + <var:t> <nat:240> $ must be even . \end{theorem} \begin{proof} It can be verified that the expression $ <nat:240> \cdot <var:t> + <nat:412> \cdot <var:s> + <nat:414> \cdot <var:e> + <nat:462> \cdot <var:T> + <var:J> \cdot <nat:182> + <var:S> \cdot <nat:274> + <var:k> \cdot <nat:98> $ is even . Remember the products $ <var:t> <nat:240> $ , $ <nat:412> <var:s> $ , $ <nat:414> <var:e> $ , $ <var:T> <nat:462> $ , $ <var:J> <nat:182> $ , $ <nat:274> <var:S> $ , in addition to $ <var:k> <nat:98> $ will be even since taking the product between an even natural number with a natural number must be even , and is true by reason that the coefficients $ <nat:240> $ , $ <nat:412> $ , $ <nat:414> $ , $ <nat:462> $ , $ <nat:182> $ , $ <nat:274> $ , plus $ <nat:98> $ are clearly by definition even positive integers . The expression $ <var:e> * <nat:414> + <nat:98> * <var:k> + <var:t> * <nat:240> + <var:S> * <nat:274> + <var:J> * <nat:182> + <nat:462> * <var:T> + <nat:412> * <var:s> $ will be even by reason that taking the product between even integers and any number must be even . Take note $ <nat:108> $ is obviously an even number . See the adding between even integers collectively is guaranteed to be even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:T> <var:t> <var:J> <var:S> <var:s> <var:e> <var:k> : nat , Nat . even ( <nat:274> * <var:S> + <nat:462> * <var:T> + <nat:414> * <var:e> + <nat:98> * <var:k> + <nat:412> * <var:s> + <nat:182> * <var:J> + <nat:240> * <var:t> + <nat:108> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:240> = true ) . { auto . } assert ( <genH> : Nat . even <nat:412> = true ) . { auto . } assert ( <genH> : Nat . even <nat:414> = true ) . { auto . } assert ( <genH> : Nat . even <nat:462> = true ) . { auto . } assert ( <genH> : Nat . even <nat:182> = true ) . { auto . } assert ( <genH> : Nat . even <nat:274> = true ) . { auto . } assert ( <genH> : Nat . even <nat:98> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:240> * <var:t> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:412> * <var:s> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:414> * <var:e> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:462> * <var:T> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:182> * <var:J> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:274> * <var:S> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:98> * <var:k> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:274> * <var:S> + <nat:462> * <var:T> + <nat:414> * <var:e> + <nat:98> * <var:k> + <nat:412> * <var:s> + <nat:182> * <var:J> + <nat:240> * <var:t> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:108> = true ) . { auto . } rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . auto . Qed . 