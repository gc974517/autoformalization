\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:22> \times <var:c> + <nat:52> \times <var:w> + <var:L> \times <nat:260> + <nat:453> + <var:U> \times <nat:344> $ is odd . \end{theorem} \begin{proof} This theorem must be true as a consequence that $ <var:c> <nat:22> + <nat:52> <var:w> + <var:U> <nat:344> + <var:L> <nat:260> $ is guaranteed to be even . The product $ <var:U> * <nat:344> $ is known as an even element of $ \mathbb{Z}^+ $ . This claim is proven from the fact the multiplication between an even positive integer and some number in $ \mathbb{Z}^+ $ must be even , and holds from the knowledge the number $ <nat:344> $ is clearly an even integer . The product $ <var:L> * <nat:260> $ is known as an even element of $ \mathbb{Z}^+ $ . This fact is true by reason that taking the product between an even element of $ \mathbb{N} $ with a number in $ \mathbb{Z}^+ $ is guaranteed to be even , and holds from the knowledge the number $ <nat:260> $ is guaranteed to be an even integer . The product $ <nat:22> * <var:c> $ is clearly even by reason that the positive integer $ <nat:22> $ is clearly trivially an even integer . The coefficient $ <nat:52> $ is an even whole number . Therefore , the term $ <var:w> * <nat:52> $ will be even in addition . It can be checked that the expression $ <nat:22> \times <var:c> + <var:L> \times <nat:260> + <nat:52> \times <var:w> + <nat:344> \times <var:U> + <nat:453> $ is guaranteed to be odd . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:c> <var:w> <var:L> <var:U> : nat , Nat . odd ( <nat:22> * <var:c> + <nat:52> * <var:w> + <nat:260> * <var:L> + <nat:344> * <var:U> + <nat:453> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:344> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:344> * <var:U> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:260> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:260> * <var:L> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:22> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:22> * <var:c> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:52> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:52> * <var:w> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:22> * <var:c> + <nat:52> * <var:w> + <nat:260> * <var:L> + <nat:344> * <var:U> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . auto . Qed . 