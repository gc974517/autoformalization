\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:s> <nat:290> + <var:a> <nat:426> + <var:X> <nat:208> + <var:m> <nat:440> + <nat:108> + <var:j> <nat:300> + <var:C> <nat:18> + <nat:114> <var:b> + <nat:246> <var:w> + <var:q> <nat:148> + <nat:318> <var:Q> + <nat:252> <var:N> $ is guaranteed to be even . \end{theorem} \begin{proof} The leading terms $ <nat:290> $ , $ <nat:426> $ , $ <nat:208> $ , $ <nat:440> $ , $ <nat:300> $ , $ <nat:18> $ , $ <nat:114> $ , $ <nat:246> $ , $ <nat:148> $ , $ <nat:318> $ , additionally $ <nat:252> $ are known as even . In consequence , the terms $ <nat:290> * <var:s> $ , $ <nat:426> * <var:a> $ , $ <var:X> * <nat:208> $ , $ <nat:440> * <var:m> $ , $ <var:j> * <nat:300> $ , $ <var:C> * <nat:18> $ , $ <var:b> * <nat:114> $ , $ <nat:246> * <var:w> $ , $ <var:q> * <nat:148> $ , $ <nat:318> * <var:Q> $ , as well as $ <var:N> * <nat:252> $ is even also . We check this result is proven . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:s> <var:a> <var:X> <var:m> <var:j> <var:C> <var:b> <var:w> <var:q> <var:Q> <var:N> : nat , Nat . even ( <nat:290> * <var:s> + <nat:426> * <var:a> + <nat:208> * <var:X> + <nat:440> * <var:m> + <nat:300> * <var:j> + <nat:18> * <var:C> + <nat:114> * <var:b> + <nat:246> * <var:w> + <nat:148> * <var:q> + <nat:318> * <var:Q> + <nat:252> * <var:N> + <nat:108> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:290> = true ) . { auto . } assert ( <genH> : Nat . even <nat:426> = true ) . { auto . } assert ( <genH> : Nat . even <nat:208> = true ) . { auto . } assert ( <genH> : Nat . even <nat:440> = true ) . { auto . } assert ( <genH> : Nat . even <nat:300> = true ) . { auto . } assert ( <genH> : Nat . even <nat:18> = true ) . { auto . } assert ( <genH> : Nat . even <nat:114> = true ) . { auto . } assert ( <genH> : Nat . even <nat:246> = true ) . { auto . } assert ( <genH> : Nat . even <nat:148> = true ) . { auto . } assert ( <genH> : Nat . even <nat:318> = true ) . { auto . } assert ( <genH> : Nat . even <nat:252> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:290> * <var:s> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:426> * <var:a> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:208> * <var:X> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:440> * <var:m> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:300> * <var:j> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:18> * <var:C> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:114> * <var:b> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:246> * <var:w> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:148> * <var:q> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:318> * <var:Q> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:252> * <var:N> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 