\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Allow $ <var:Q> $ , $ <var:P> $ , $ <var:B> $ , $ <var:N> $ , $ <var:a> $ , $ <var:z> $ , $ <var:T> $ , $ <var:U> \in \mathbb{N} $ where $ <var:Q> $ , $ <var:T> $ , $ <var:P> $ , $ <var:U> $ , $ <var:N> $ , $ <var:z> $ , $ <var:a> $ , and $ <var:B> $ more than or equivalent to <nat:2> plus satisfying the condition that <nat:2217600> is the multiplication between integers $ <var:Q> $ , $ <var:P> $ , $ <var:B> $ , $ <var:N> $ , $ <var:a> $ , $ <var:z> $ , $ <var:T> $ , $ <var:U> \in \mathbb{N} $ . \end{theorem} \begin{proof} We present our statement is valid on account of $ <nat:2217600> = <var:T> * <var:U> * <var:B> * <var:a> * <var:N> * <var:Q> * <var:P> * <var:z> $ indicates $ <var:U> = <nat:5> $ , $ <var:B> = <nat:11> $ , $ <var:T> = <nat:7> $ , $ <var:z> = <nat:2> $ , $ <var:P> = <nat:4> $ , $ <var:Q> = <nat:8> $ , $ <var:a> = <nat:10> $ and $ <var:N> = <nat:9> $ as well as because $ <nat:8> $ , $ <nat:9> $ , $ <nat:10> $ , $ <nat:5> $ , $ <nat:7> $ , $ <nat:4> $ , $ <nat:2> $ and $ <nat:11> \geq <nat:2> $ . \end{proof} \end{document} 
~
Require Import Lia . Theorem <genP:1> : exists <var:Q> <var:P> <var:B> <var:N> <var:a> <var:z> <var:T> <var:U> : nat , ( <var:Q> >= <nat:2> ) /\ ( <var:T> >= <nat:2> ) /\ ( <var:P> >= <nat:2> ) /\ ( <var:U> >= <nat:2> ) /\ ( <var:N> >= <nat:2> ) /\ ( <var:z> >= <nat:2> ) /\ ( <var:a> >= <nat:2> ) /\ ( <var:B> >= <nat:2> ) /\ ( <nat:2217600> = <var:Q> * <var:P> * <var:B> * <var:N> * <var:a> * <var:z> * <var:T> * <var:U> ) . Proof . exists <nat:8> . exists <nat:4> . exists <nat:11> . exists <nat:9> . exists <nat:10> . exists <nat:2> . exists <nat:7> . exists <nat:5> . assert ( <genH> : <nat:8> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:9> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:10> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:5> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:7> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:4> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:2> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:11> >= <nat:2> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 