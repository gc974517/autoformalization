\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:B> \cdot <nat:320> + <nat:306> \cdot <var:g> + <var:K> \cdot <nat:176> + <var:O> \cdot <nat:460> + <var:c> \cdot <nat:164> + <nat:247> $ will be odd . \end{theorem} \begin{proof} Take note $ <nat:247> $ is obviously an odd element of $ \mathbb{Z}^+ $ . Observe the summing of even numbers in $ \mathbb{Z}^+ $ and an odd element of $ \mathbb{N} $ is guaranteed to be an odd integer . We employ the understanding that the summation $ <nat:247> + <var:O> \times <nat:460> + <var:g> \times <nat:306> + <var:K> \times <nat:176> + <var:B> \times <nat:320> + <var:c> \times <nat:164> $ is odd by reason that $ <nat:164> \cdot <var:c> + <nat:176> \cdot <var:K> + <var:B> \cdot <nat:320> + <nat:460> \cdot <var:O> + <nat:306> \cdot <var:g> $ is clearly even . The products $ <nat:164> * <var:c> $ , $ <nat:176> * <var:K> $ , $ <nat:320> * <var:B> $ , $ <nat:460> * <var:O> $ , and $ <var:g> * <nat:306> $ must be even since the natural numbers $ <nat:164> $ , $ <nat:176> $ , $ <nat:320> $ , $ <nat:460> $ , in addition to $ <nat:306> $ are guaranteed to be even . As a consequence that the adding of even whole numbers and even natural numbers must be in itself an even element of $ \mathbb{N} $ , plus as a consequence that taking the product between an even element of $ \mathbb{Z}^+ $ with a whole number will be trivially an even element of $ \mathbb{N} $ . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:B> <var:g> <var:K> <var:O> <var:c> : nat , Nat . odd ( <nat:320> * <var:B> + <nat:306> * <var:g> + <nat:176> * <var:K> + <nat:460> * <var:O> + <nat:164> * <var:c> + <nat:247> ) = true . Proof . intros . assert ( <genH> : Nat . odd <nat:247> = true ) . { auto . } rewrite Nat . odd_add . assert ( <genH> : Nat . even <nat:164> = true ) . { auto . } assert ( <genH> : Nat . even <nat:176> = true ) . { auto . } assert ( <genH> : Nat . even <nat:320> = true ) . { auto . } assert ( <genH> : Nat . even <nat:460> = true ) . { auto . } assert ( <genH> : Nat . even <nat:306> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:164> * <var:c> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:176> * <var:K> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:320> * <var:B> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:460> * <var:O> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:306> * <var:g> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:320> * <var:B> + <nat:306> * <var:g> + <nat:176> * <var:K> + <nat:460> * <var:O> + <nat:164> * <var:c> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite <- Nat . negb_even . rewrite <genH> . rewrite <genH> . auto . Qed . 