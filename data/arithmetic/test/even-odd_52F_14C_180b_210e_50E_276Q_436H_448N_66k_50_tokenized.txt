\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:F> \times <nat:52> + <nat:50> + <nat:14> \times <var:C> + <nat:180> \times <var:b> + <nat:210> \times <var:e> + <var:E> \times <nat:50> + <nat:276> \times <var:Q> + <var:H> \times <nat:436> + <nat:448> \times <var:N> + <nat:66> \times <var:k> $ must be even taking some positive terms $ <var:F> $ , $ <var:H> $ , $ <var:b> $ , $ <var:Q> $ , $ <var:E> $ , $ <var:e> $ , $ <var:N> $ , $ <var:k> $ , and $ <var:C> $ . \end{theorem} \begin{proof} As a consequence that the summing between an even integer with an even natural number will be an even number in $ \mathbb{N} $ , thus the theorem is proven . See that the pairs $ <var:e> \times <nat:210> $ , $ <nat:66> \times <var:k> $ , $ <nat:436> \times <var:H> $ , $ <var:Q> \times <nat:276> $ , $ <nat:448> \times <var:N> $ , $ <var:E> \times <nat:50> $ , $ <var:F> \times <nat:52> $ , and also $ <nat:14> \times <var:C> $ must be even . Observe the term $ <var:b> \times <nat:180> $ is obviously an even natural . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:F> <var:H> <var:b> <var:Q> <var:E> <var:e> <var:N> <var:k> <var:C> : nat , Nat . even ( <nat:52> * <var:F> + <nat:14> * <var:C> + <nat:180> * <var:b> + <nat:210> * <var:e> + <nat:50> * <var:E> + <nat:276> * <var:Q> + <nat:436> * <var:H> + <nat:448> * <var:N> + <nat:66> * <var:k> + <nat:50> ) = true . Proof . intros . repeat rewrite Nat . even_add . assert ( <genH> : Nat . even ( <nat:210> * <var:e> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:66> * <var:k> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:436> * <var:H> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:276> * <var:Q> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:448> * <var:N> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:50> * <var:E> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:52> * <var:F> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:14> * <var:C> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:180> * <var:b> ) = true ) . { rewrite Nat . even_mul . auto . } rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 