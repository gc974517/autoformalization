\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Taking any positive integers $ <var:L> $ , $ <var:c> $ , $ <var:G> $ , $ <var:B> $ , $ <var:g> $ , $ <var:Z> $ , $ <var:m> $ , and $ <var:K> $ $ <nat:298> \cdot <var:Z> + <var:B> \cdot <nat:376> + <nat:360> \cdot <var:K> + <nat:30> \cdot <var:g> + <var:c> \cdot <nat:138> + <nat:444> \cdot <var:G> + <var:m> \cdot <nat:70> + <nat:165> + <nat:240> \cdot <var:L> $ is guaranteed to be odd . \end{theorem} \begin{proof} See that the totaling between even elements of $ \mathbb{Z}^+ $ and an odd whole number is guaranteed to be an odd number in $ \mathbb{N} $ . Recall the pair $ <var:Z> \times <nat:298> $ is known to be an even element of $ \mathbb{Z}^+ $ from the fact multiplying between an even number with some element of $ \mathbb{Z}^+ $ must be an even whole number . The pairs $ <nat:360> \times <var:K> $ , $ <nat:30> \times <var:g> $ , and $ <var:L> \times <nat:240> $ are obviously even numbers . $ <nat:70> \times <var:m> $ is known as an even number because the product of an even natural and an arbitrary number in $ \mathbb{Z}^+ $ is an even number . The terms $ <nat:376> \times <var:B> $ plus $ <var:G> \times <nat:444> $ will be even from the knowledge taking the product of an even natural number with a number is guaranteed to be even . In addition , remember that the term $ <nat:138> \times <var:c> $ is known to be an even positive integer . We justify $ <nat:138> \cdot <var:c> + <nat:70> \cdot <var:m> + <nat:240> \cdot <var:L> + <nat:376> \cdot <var:B> + <var:g> \cdot <nat:30> + <var:K> \cdot <nat:360> + <nat:165> + <var:G> \cdot <nat:444> + <nat:298> \cdot <var:Z> $ is guaranteed to be odd . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:L> <var:c> <var:G> <var:B> <var:g> <var:Z> <var:m> <var:K> : nat , Nat . odd ( <nat:298> * <var:Z> + <nat:376> * <var:B> + <nat:360> * <var:K> + <nat:30> * <var:g> + <nat:138> * <var:c> + <nat:444> * <var:G> + <nat:70> * <var:m> + <nat:240> * <var:L> + <nat:165> ) = true . Proof . intros . rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . assert ( <genH> : Nat . even ( <nat:298> * <var:Z> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:360> * <var:K> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:30> * <var:g> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:240> * <var:L> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:70> * <var:m> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:376> * <var:B> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:444> * <var:G> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:138> * <var:c> ) = true ) . { rewrite Nat . even_mul . auto . } rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 