\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \newtheorem{definition}{Definition} \begin{document} \begin{definition} There exist integers $ <var:F> $ , $ <var:L> $ , $ <var:t> $ , $ <var:i> $ , $ <var:r> $ , $ <var:d> $ , $ <var:R> $ , $ <var:b> $ , $ <var:v> $ greater than <nat:1> . We assume that $ <var:N> \in \mathbb{Z}^+ $ is named a <def:nine-composite> integer assuming $ <var:N> = <var:r> * <var:v> * <var:d> * <var:L> * <var:b> * <var:t> * <var:R> * <var:F> * <var:i> $ . \end{definition} \begin{theorem} $ <var:N> = <nat:5765760> $ is a <def:nine-composite> whole number . \end{theorem} \begin{proof} Notice $ <nat:5765760> = <var:i> * <var:F> * <var:v> * <var:t> * <var:r> * <var:d> * <var:L> * <var:b> * <var:R> $ indicates $ <var:F> = <nat:2> $ , $ <var:R> = <nat:6> $ , $ <var:d> = <nat:7> $ , $ <var:L> = <nat:11> $ , $ <var:i> = <nat:3> $ , $ <var:r> = <nat:13> $ , $ <var:t> = <nat:8> $ , $ <var:v> = <nat:4> $ , $ <var:b> = <nat:5> $ . Additionally observe that $ <nat:13> $ , $ <nat:3> $ , $ <nat:6> $ , $ <nat:2> $ , $ <nat:11> $ , $ <nat:5> $ , $ <nat:7> $ , $ <nat:4> $ and $ <nat:8> > <nat:1> $ . This yields <nat:5765760> is a <def:nine-composite> whole number . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:nine-composite> ( <var:N> : nat ) := exists <var:F> <var:L> <var:t> <var:i> <var:r> <var:d> <var:R> <var:b> <var:v> : nat , ( <var:F> > <nat:1> ) /\ ( <var:L> > <nat:1> ) /\ ( <var:t> > <nat:1> ) /\ ( <var:i> > <nat:1> ) /\ ( <var:r> > <nat:1> ) /\ ( <var:d> > <nat:1> ) /\ ( <var:R> > <nat:1> ) /\ ( <var:b> > <nat:1> ) /\ ( <var:v> > <nat:1> ) /\ ( <var:N> = <var:r> * <var:v> * <var:d> * <var:L> * <var:b> * <var:t> * <var:R> * <var:F> * <var:i> ) . Theorem <genP:1> : <def:nine-composite> <nat:5765760> . Proof . unfold <def:nine-composite> . exists <nat:2> . exists <nat:11> . exists <nat:8> . exists <nat:3> . exists <nat:13> . exists <nat:7> . exists <nat:6> . exists <nat:5> . exists <nat:4> . assert ( <genH> : <nat:13> > <nat:1> ) . { lia . } assert ( <genH> : <nat:3> > <nat:1> ) . { lia . } assert ( <genH> : <nat:6> > <nat:1> ) . { lia . } assert ( <genH> : <nat:2> > <nat:1> ) . { lia . } assert ( <genH> : <nat:11> > <nat:1> ) . { lia . } assert ( <genH> : <nat:5> > <nat:1> ) . { lia . } assert ( <genH> : <nat:7> > <nat:1> ) . { lia . } assert ( <genH> : <nat:4> > <nat:1> ) . { lia . } assert ( <genH> : <nat:8> > <nat:1> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 