\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:288> + <var:U> <nat:478> + <nat:290> <var:s> + <var:v> <nat:330> + <var:t> <nat:412> + <nat:354> <var:d> + <nat:428> <var:T> + <nat:252> <var:o> $ must be even taking some terms $ <var:v> $ , $ <var:t> $ , $ <var:T> $ , $ <var:s> $ , $ <var:o> $ , $ <var:d> $ , and $ <var:U> $ . \end{theorem} \begin{proof} We apply the understanding that the expression $ <nat:354> * <var:d> + <nat:330> * <var:v> + <var:t> * <nat:412> + <nat:252> * <var:o> + <var:s> * <nat:290> + <nat:478> * <var:U> + <nat:428> * <var:T> $ is even , since the addition of an even number in $ \mathbb{N} $ and an even integer will be even . Recall the products $ <var:o> <nat:252> $ , $ <nat:354> <var:d> $ , $ <var:T> <nat:428> $ , $ <nat:330> <var:v> $ , and $ <var:U> <nat:478> $ are even . Take note the pair $ <nat:290> <var:s> $ is obviously even . The product $ <nat:412> <var:t> $ is clearly even . This must be true since the product of an even natural number and any number in $ \mathbb{N} $ will be instrinsically an even integer . in addition to as a consequence that multiplying of even natural numbers with an arbitrary positive integer is guaranteed to be itself an even positive integer this theorem is true . The addition of even numbers in $ \mathbb{Z}^+ $ collectively is even . See $ <nat:288> $ is guaranteed to be even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:v> <var:t> <var:T> <var:s> <var:o> <var:d> <var:U> : nat , Nat . even ( <nat:478> * <var:U> + <nat:290> * <var:s> + <nat:330> * <var:v> + <nat:412> * <var:t> + <nat:354> * <var:d> + <nat:428> * <var:T> + <nat:252> * <var:o> + <nat:288> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:252> * <var:o> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:354> * <var:d> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:428> * <var:T> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:330> * <var:v> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:478> * <var:U> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:290> * <var:s> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:412> * <var:t> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:478> * <var:U> + <nat:290> * <var:s> + <nat:330> * <var:v> + <nat:412> * <var:t> + <nat:354> * <var:d> + <nat:428> * <var:T> + <nat:252> * <var:o> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . even_add . assert ( <genH> : Nat . even <nat:288> = true ) . { auto . } rewrite <genH> . rewrite <genH> . auto . Qed . 