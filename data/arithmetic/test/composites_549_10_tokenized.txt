\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} The number <nat:113218560> is the multiplication between natural numbers $ <var:R> $ , $ <var:e> $ , $ <var:P> $ , $ <var:b> $ , $ <var:G> $ , $ <var:A> $ , $ <var:E> $ , $ <var:V> $ , $ <var:z> $ , $ <var:o> \in \mathbb{N} $ such that $ <var:V> $ , $ <var:A> $ , $ <var:E> $ , $ <var:R> $ , $ <var:G> $ , $ <var:e> $ , $ <var:z> $ , $ <var:P> $ , $ <var:o> $ , and $ <var:b> $ more than or equal to <nat:2> . \end{theorem} \begin{proof} Notice that $ <nat:113218560> = <var:V> \times <var:A> \times <var:z> \times <var:G> \times <var:E> \times <var:R> \times <var:o> \times <var:e> \times <var:b> \times <var:P> = <nat:2> \times <nat:13> \times <nat:8> \times <nat:10> \times <nat:9> \times <nat:7> \times <nat:4> \times <nat:3> \times <nat:12> \times <nat:6> $ . Moreover note that $ <nat:8> $ , $ <nat:4> $ , $ <nat:7> $ , $ <nat:3> $ , $ <nat:12> $ , $ <nat:9> $ , $ <nat:10> $ , $ <nat:13> $ , $ <nat:2> $ , and $ <nat:6> \geq <nat:2> $ . So , <nat:113218560> is the multiplication of some whole numbers $ <var:e> $ , $ <var:b> $ , $ <var:A> $ , $ <var:P> $ , $ <var:z> $ , $ <var:o> $ , $ <var:G> $ , $ <var:V> $ , $ <var:R> $ and $ <var:E> $ is verified . \end{proof} \end{document} 
~
Require Import Lia . Theorem <genP:1> : exists <var:R> <var:e> <var:P> <var:b> <var:G> <var:A> <var:E> <var:V> <var:z> <var:o> : nat , ( <nat:113218560> = <var:R> * <var:e> * <var:P> * <var:b> * <var:G> * <var:A> * <var:E> * <var:V> * <var:z> * <var:o> ) /\ ( <var:V> >= <nat:2> ) /\ ( <var:A> >= <nat:2> ) /\ ( <var:E> >= <nat:2> ) /\ ( <var:R> >= <nat:2> ) /\ ( <var:G> >= <nat:2> ) /\ ( <var:e> >= <nat:2> ) /\ ( <var:z> >= <nat:2> ) /\ ( <var:P> >= <nat:2> ) /\ ( <var:o> >= <nat:2> ) /\ ( <var:b> >= <nat:2> ) . Proof . exists <nat:7> . exists <nat:3> . exists <nat:6> . exists <nat:12> . exists <nat:10> . exists <nat:13> . exists <nat:9> . exists <nat:2> . exists <nat:8> . exists <nat:4> . assert ( <genH> : <nat:8> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:4> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:7> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:3> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:12> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:9> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:10> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:13> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:2> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:6> >= <nat:2> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 