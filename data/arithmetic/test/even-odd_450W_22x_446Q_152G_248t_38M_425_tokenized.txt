\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:t> \times <nat:248> + <nat:152> \times <var:G> + <nat:425> + <nat:446> \times <var:Q> + <nat:22> \times <var:x> + <var:M> \times <nat:38> + <nat:450> \times <var:W> $ will be odd taking every unknowns $ <var:M> $ , $ <var:W> $ , $ <var:t> $ , $ <var:G> $ , $ <var:x> $ , and $ <var:Q> $ . \end{theorem} \begin{proof} It can be proven that that the formula $ <var:Q> * <nat:446> + <nat:152> * <var:G> + <var:W> * <nat:450> + <nat:38> * <var:M> + <var:t> * <nat:248> + <var:x> * <nat:22> $ is known to be even , since the addition between an even positive integer with an even integer is in itself an even number in $ \mathbb{N} $ . Recall that the positive integers $ <nat:450> $ , $ <nat:248> $ , $ <nat:446> $ , $ <nat:152> $ , plus $ <nat:22> $ must be even The number $ <nat:38> $ is known as even We know $ <nat:425> $ is odd . The summing between even whole numbers concurrently and an odd element of $ \mathbb{Z}^+ $ is odd . Thus , the sum $ <nat:450> <var:W> + <var:x> <nat:22> + <nat:425> + <nat:446> <var:Q> + <var:G> <nat:152> + <nat:248> <var:t> + <var:M> <nat:38> $ trivially is guaranteed to be odd . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:M> <var:W> <var:t> <var:G> <var:x> <var:Q> : nat , Nat . odd ( <nat:248> * <var:t> + <nat:152> * <var:G> + <nat:446> * <var:Q> + <nat:22> * <var:x> + <nat:38> * <var:M> + <nat:450> * <var:W> + <nat:425> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:450> = true ) . { auto . } assert ( <genH> : Nat . even <nat:248> = true ) . { auto . } assert ( <genH> : Nat . even <nat:446> = true ) . { auto . } assert ( <genH> : Nat . even <nat:152> = true ) . { auto . } assert ( <genH> : Nat . even <nat:22> = true ) . { auto . } assert ( <genH> : Nat . even <nat:38> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:248> * <var:t> + <nat:152> * <var:G> + <nat:446> * <var:Q> + <nat:22> * <var:x> + <nat:38> * <var:M> + <nat:450> * <var:W> ) = true ) . { repeat rewrite Nat . even_add . repeat rewrite Nat . even_mul . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } assert ( <genH> : Nat . odd <nat:425> = true ) . { auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . rewrite <genH> . auto . Qed . 