\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Given positive numbers $ <var:g> $ , $ <var:O> $ , $ <var:B> $ , $ <var:v> $ , $ <var:S> $ , and $ <var:o> $ the sum $ <var:O> <nat:148> + <nat:153> + <var:g> <nat:376> + <nat:236> <var:S> + <var:v> <nat:62> + <nat:440> <var:B> + <var:o> <nat:290> $ is odd . \end{theorem} \begin{proof} It can be checked that our theorem is true . Remember $ <nat:153> $ is an odd natural . The terms $ <nat:148> \cdot <var:O> $ , $ <var:v> \cdot <nat:62> $ , in addition to $ <nat:376> \cdot <var:g> $ must be even naturals from the knowledge the product between an even natural with an arbitrary number is even . Building on , remember the pairs $ <var:o> \cdot <nat:290> $ as well as $ <var:S> \cdot <nat:236> $ are clearly even . Additionally , remember that the pair $ <nat:440> \cdot <var:B> $ is obviously an even number . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:g> <var:O> <var:B> <var:v> <var:S> <var:o> : nat , Nat . odd ( <nat:148> * <var:O> + <nat:376> * <var:g> + <nat:236> * <var:S> + <nat:62> * <var:v> + <nat:440> * <var:B> + <nat:290> * <var:o> + <nat:153> ) = true . Proof . intros . assert ( <genH> : Nat . odd <nat:153> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:148> * <var:O> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:62> * <var:v> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:376> * <var:g> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:290> * <var:o> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:236> * <var:S> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:440> * <var:B> ) = true ) . { rewrite Nat . even_mul . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 