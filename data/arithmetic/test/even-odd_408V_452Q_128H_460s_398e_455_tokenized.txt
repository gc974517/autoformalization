\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:452> * <var:Q> + <nat:460> * <var:s> + <nat:128> * <var:H> + <var:V> * <nat:408> + <nat:455> + <nat:398> * <var:e> $ must be odd with some natural terms $ <var:H> $ , $ <var:e> $ , $ <var:Q> $ , $ <var:s> $ , and $ <var:V> $ . \end{theorem} \begin{proof} We make use the knowledge $ <nat:408> <var:V> + <var:Q> <nat:452> + <var:H> <nat:128> + <nat:460> <var:s> + <var:e> <nat:398> $ is guaranteed to be even . The numbers $ <nat:408> $ , $ <nat:128> $ , and also $ <nat:398> $ must be even In addition , see the number $ <nat:452> $ is guaranteed to be even The number $ <nat:460> $ is even Recall that $ <nat:455> $ is obviously an odd positive integer . Observe that the summation of even numbers in $ \mathbb{Z}^+ $ successively and an odd integer must be odd . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:H> <var:e> <var:Q> <var:s> <var:V> : nat , Nat . odd ( <nat:452> * <var:Q> + <nat:460> * <var:s> + <nat:128> * <var:H> + <nat:408> * <var:V> + <nat:398> * <var:e> + <nat:455> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:408> = true ) . { auto . } assert ( <genH> : Nat . even <nat:128> = true ) . { auto . } assert ( <genH> : Nat . even <nat:398> = true ) . { auto . } assert ( <genH> : Nat . even <nat:452> = true ) . { auto . } assert ( <genH> : Nat . even <nat:460> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:452> * <var:Q> + <nat:460> * <var:s> + <nat:128> * <var:H> + <nat:408> * <var:V> + <nat:398> * <var:e> ) = true ) . { repeat rewrite Nat . even_add . repeat rewrite Nat . even_mul . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } assert ( <genH> : Nat . odd <nat:455> = true ) . { auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . rewrite <genH> . auto . Qed . 