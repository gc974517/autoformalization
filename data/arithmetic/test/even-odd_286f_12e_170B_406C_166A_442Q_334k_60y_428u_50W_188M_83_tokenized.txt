\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Assuming every positive numbers $ <var:M> $ , $ <var:y> $ , $ <var:k> $ , $ <var:u> $ , $ <var:B> $ , $ <var:W> $ , $ <var:A> $ , $ <var:Q> $ , $ <var:C> $ , $ <var:e> $ , and $ <var:f> $ the formula $ <nat:170> \times <var:B> + <var:A> \times <nat:166> + <nat:286> \times <var:f> + <nat:442> \times <var:Q> + <var:W> \times <nat:50> + <var:k> \times <nat:334> + <nat:12> \times <var:e> + <nat:406> \times <var:C> + <nat:83> + <var:u> \times <nat:428> + <var:M> \times <nat:188> + <var:y> \times <nat:60> $ is guaranteed to be odd . \end{theorem} \begin{proof} We know that the adding of even numbers in $ \mathbb{N} $ concurrently and an odd natural number is guaranteed to be an odd natural number . Our theorem must be true as a consequence that $ <nat:286> <var:f> + <nat:12> <var:e> + <nat:170> <var:B> + <var:C> <nat:406> + <var:A> <nat:166> + <nat:442> <var:Q> + <var:k> <nat:334> + <nat:60> <var:y> + <var:u> <nat:428> + <var:W> <nat:50> + <var:M> <nat:188> $ is trivially even . Recall that the positive integers $ <nat:188> $ , $ <nat:406> $ , and also $ <nat:166> $ will be even elements of $ \mathbb{N} $ The whole numbers $ <nat:60> $ , $ <nat:12> $ , $ <nat:442> $ , $ <nat:170> $ , $ <nat:334> $ , and likewise $ <nat:428> $ are obviously even elements of $ \mathbb{Z}^+ $ Building on , remember the positive integer $ <nat:50> $ is obviously even In addition to this , take note that the coefficient $ <nat:286> $ is known to be an even element of $ \mathbb{Z}^+ $ \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:M> <var:y> <var:k> <var:u> <var:B> <var:W> <var:A> <var:Q> <var:C> <var:e> <var:f> : nat , Nat . odd ( <nat:170> * <var:B> + <nat:166> * <var:A> + <nat:286> * <var:f> + <nat:442> * <var:Q> + <nat:50> * <var:W> + <nat:334> * <var:k> + <nat:12> * <var:e> + <nat:406> * <var:C> + <nat:428> * <var:u> + <nat:188> * <var:M> + <nat:60> * <var:y> + <nat:83> ) = true . Proof . intros . rewrite Nat . odd_add . assert ( <genH> : Nat . even <nat:188> = true ) . { auto . } assert ( <genH> : Nat . even <nat:406> = true ) . { auto . } assert ( <genH> : Nat . even <nat:166> = true ) . { auto . } assert ( <genH> : Nat . even <nat:60> = true ) . { auto . } assert ( <genH> : Nat . even <nat:12> = true ) . { auto . } assert ( <genH> : Nat . even <nat:442> = true ) . { auto . } assert ( <genH> : Nat . even <nat:170> = true ) . { auto . } assert ( <genH> : Nat . even <nat:334> = true ) . { auto . } assert ( <genH> : Nat . even <nat:428> = true ) . { auto . } assert ( <genH> : Nat . even <nat:50> = true ) . { auto . } assert ( <genH> : Nat . even <nat:286> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:170> * <var:B> + <nat:166> * <var:A> + <nat:286> * <var:f> + <nat:442> * <var:Q> + <nat:50> * <var:W> + <nat:334> * <var:k> + <nat:12> * <var:e> + <nat:406> * <var:C> + <nat:428> * <var:u> + <nat:188> * <var:M> + <nat:60> * <var:y> ) = true ) . { repeat rewrite Nat . even_add . repeat rewrite Nat . even_mul . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite <- Nat . negb_even . rewrite <genH> . auto . Qed . 