\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:t> \cdot <nat:180> + <nat:486> \cdot <var:u> + <var:H> \cdot <nat:332> + <nat:376> \cdot <var:v> + <nat:325> $ is guaranteed to be odd using all $ <var:v> $ , $ <var:t> $ , $ <var:u> $ , and $ <var:H> $ . \end{theorem} \begin{proof} The claim holds by reason that $ <nat:180> \cdot <var:t> + <nat:376> \cdot <var:v> + <var:H> \cdot <nat:332> + <nat:486> \cdot <var:u> $ is obviously even . Remember that the pairs $ <var:H> <nat:332> $ plus $ <nat:180> <var:t> $ are even positive integers . This fact is true from the knowledge the product between an even number in $ \mathbb{Z}^+ $ and some number in $ \mathbb{Z}^+ $ is even . $ <var:u> <nat:486> $ is guaranteed to be even . Observe that the pair $ <var:v> <nat:376> $ is trivially an even positive integer from the knowledge the multiplication of an even number in $ \mathbb{N} $ and a element of $ \mathbb{Z}^+ $ will be in itself an even positive integer . From the fact the product of even numbers in $ \mathbb{Z}^+ $ with some natural number must be even this claim is proven . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:v> <var:t> <var:u> <var:H> : nat , Nat . odd ( <nat:180> * <var:t> + <nat:486> * <var:u> + <nat:332> * <var:H> + <nat:376> * <var:v> + <nat:325> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:332> * <var:H> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:180> * <var:t> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:486> * <var:u> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:376> * <var:v> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:180> * <var:t> + <nat:486> * <var:u> + <nat:332> * <var:H> + <nat:376> * <var:v> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . auto . Qed . 