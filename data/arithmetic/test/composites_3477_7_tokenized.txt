\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Take as given that under the condition there are $ <var:I> $ , $ <var:t> $ , $ <var:S> $ , $ <var:M> $ , $ <var:E> $ , $ <var:C> $ , $ <var:y> \in \mathbb{N} $ then say that $ <var:b> \in \mathbb{N} $ is defined as a <def:seven-composite> whole number if $ <var:M> \cdot <var:I> \cdot <var:y> \cdot <var:S> \cdot <var:t> \cdot <var:E> \cdot <var:C> = <var:b> $ and terms are more than or equivalent to <nat:2> . So the positive integer <nat:599040> is a <def:seven-composite> integer . \end{theorem} \begin{proof} Remember a <def:seven-composite> is the product between $ <var:I> $ , $ <var:y> $ , $ <var:E> $ , $ <var:C> $ , $ <var:t> $ , $ <var:M> $ , $ <var:S> $ so that $ <var:E> $ , $ <var:y> $ , $ <var:t> $ , $ <var:C> $ , $ <var:I> $ , $ <var:S> $ , and $ <var:M> \geq <nat:2> $ . Allow $ <var:y> = <nat:10> $ , $ <var:t> = <nat:6> $ , $ <var:I> = <nat:2> $ , $ <var:M> = <nat:4> $ , $ <var:S> = <nat:12> $ , $ <var:C> = <nat:13> $ and $ <var:E> = <nat:8> $ . We confirm our belief holds seeing that $ <nat:599040> = <nat:13> \cdot <nat:12> \cdot <nat:8> \cdot <nat:4> \cdot <nat:2> \cdot <nat:6> \cdot <nat:10> $ as well as because $ <var:y> = <nat:10> $ , $ <var:M> = <nat:4> $ , $ <var:I> = <nat:2> $ , $ <var:t> = <nat:6> $ , $ <var:C> = <nat:13> $ , $ <var:E> = <nat:8> $ and $ <var:S> = <nat:12> \geq <nat:2> $ . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:seven-composite> ( <var:b> : nat ) := exists <var:I> <var:t> <var:S> <var:M> <var:E> <var:C> <var:y> : nat , ( <var:M> * <var:I> * <var:y> * <var:S> * <var:t> * <var:E> * <var:C> = <var:b> ) /\ ( <var:I> >= <nat:2> ) /\ ( <var:t> >= <nat:2> ) /\ ( <var:S> >= <nat:2> ) /\ ( <var:M> >= <nat:2> ) /\ ( <var:E> >= <nat:2> ) /\ ( <var:C> >= <nat:2> ) /\ ( <var:y> >= <nat:2> ) . Theorem <genP:1> : <def:seven-composite> <nat:599040> . Proof . unfold <def:seven-composite> . exists <nat:2> . exists <nat:6> . exists <nat:12> . exists <nat:4> . exists <nat:8> . exists <nat:13> . exists <nat:10> . assert ( <genH> : <nat:10> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:4> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:2> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:6> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:13> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:8> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:12> >= <nat:2> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 