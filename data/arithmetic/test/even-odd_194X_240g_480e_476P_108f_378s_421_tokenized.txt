\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:g> * <nat:240> + <nat:194> * <var:X> + <nat:476> * <var:P> + <var:f> * <nat:108> + <nat:421> + <var:s> * <nat:378> + <nat:480> * <var:e> $ is odd given every $ <var:e> $ , $ <var:X> $ , $ <var:g> $ , $ <var:s> $ , $ <var:P> $ , and $ <var:f> $ . \end{theorem} \begin{proof} Take note that $ <nat:421> $ is obviously odd . The summation of even numbers concurrently with an odd number in $ \mathbb{Z}^+ $ is instrinsically an odd number in $ \mathbb{N} $ . It can be justified that that $ <var:X> * <nat:194> + <var:g> * <nat:240> + <var:e> * <nat:480> + <nat:476> * <var:P> + <var:f> * <nat:108> + <var:s> * <nat:378> $ is clearly even . The leading terms $ <nat:108> $ and moreover $ <nat:194> $ are guaranteed to be even In addition to this , see that the natural numbers $ <nat:476> $ in addition to $ <nat:378> $ are even On top of this , we know that the whole number $ <nat:480> $ is even Further , recall that the leading term $ <nat:240> $ is known as even \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:e> <var:X> <var:g> <var:s> <var:P> <var:f> : nat , Nat . odd ( <nat:240> * <var:g> + <nat:194> * <var:X> + <nat:476> * <var:P> + <nat:108> * <var:f> + <nat:378> * <var:s> + <nat:480> * <var:e> + <nat:421> ) = true . Proof . intros . assert ( <genH> : Nat . odd <nat:421> = true ) . { auto . } rewrite Nat . odd_add . assert ( <genH> : Nat . even <nat:108> = true ) . { auto . } assert ( <genH> : Nat . even <nat:194> = true ) . { auto . } assert ( <genH> : Nat . even <nat:476> = true ) . { auto . } assert ( <genH> : Nat . even <nat:378> = true ) . { auto . } assert ( <genH> : Nat . even <nat:480> = true ) . { auto . } assert ( <genH> : Nat . even <nat:240> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:240> * <var:g> + <nat:194> * <var:X> + <nat:476> * <var:P> + <nat:108> * <var:f> + <nat:378> * <var:s> + <nat:480> * <var:e> ) = true ) . { repeat rewrite Nat . even_add . repeat rewrite Nat . even_mul . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite <- Nat . negb_even . rewrite <genH> . rewrite <genH> . auto . Qed . 