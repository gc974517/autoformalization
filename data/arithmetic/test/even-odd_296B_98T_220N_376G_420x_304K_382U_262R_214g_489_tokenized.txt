\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:g> <nat:214> + <nat:382> <var:U> + <nat:304> <var:K> + <var:G> <nat:376> + <nat:489> + <var:N> <nat:220> + <nat:420> <var:x> + <nat:296> <var:B> + <nat:98> <var:T> + <var:R> <nat:262> $ must be odd . \end{theorem} \begin{proof} The coefficient $ <nat:296> $ is known as an even number in $ \mathbb{Z}^+ $ . Then , the product $ <nat:296> \cdot <var:B> $ must be even too . Notice that the natural number $ <nat:98> $ is known to be even . Thus , $ <nat:98> \cdot <var:T> $ will be even additionally . In addition , take note that $ <nat:220> \cdot <var:N> $ is known as even because the natural number $ <nat:220> $ is obviously clearly an even number . The pair $ <var:G> \cdot <nat:376> $ is obviously an even number in $ \mathbb{Z}^+ $ from the knowledge the multiplication between an even element of $ \mathbb{Z}^+ $ and any number will be even , and is proven from the knowledge the coefficient $ <nat:376> $ is clearly even . Building on , the product $ <nat:420> \cdot <var:x> $ is clearly even . This must be true because the leading term $ <nat:420> $ is guaranteed to be an even element of $ \mathbb{N} $ . We know the product $ <nat:304> \cdot <var:K> $ is trivially an even number in $ \mathbb{Z}^+ $ from the fact the product between an even positive integer and any whole number will be even , which is true because the whole number $ <nat:304> $ is clearly in itself an even integer . The natural number $ <nat:382> $ is trivially an even integer . For this reason , the term $ <nat:382> \cdot <var:U> $ is even at the same time . Notice the number $ <nat:262> $ is known to be even . So , the pair $ <var:R> \cdot <nat:262> $ is guaranteed to be even additionally . Remember the term $ <nat:214> \cdot <var:g> $ is guaranteed to be even . This is proven as a consequence that multiplying between an even number with a element of $ \mathbb{Z}^+ $ is guaranteed to be an even number in $ \mathbb{N} $ as well as the coefficient $ <nat:214> $ is clearly even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:g> <var:U> <var:K> <var:G> <var:N> <var:x> <var:B> <var:T> <var:R> : nat , Nat . odd ( <nat:214> * <var:g> + <nat:382> * <var:U> + <nat:304> * <var:K> + <nat:376> * <var:G> + <nat:220> * <var:N> + <nat:420> * <var:x> + <nat:296> * <var:B> + <nat:98> * <var:T> + <nat:262> * <var:R> + <nat:489> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:296> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:296> * <var:B> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:98> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:98> * <var:T> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:220> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:220> * <var:N> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:376> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:376> * <var:G> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:420> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:420> * <var:x> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:304> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:304> * <var:K> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:382> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:382> * <var:U> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:262> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:262> * <var:R> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:214> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:214> * <var:g> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 