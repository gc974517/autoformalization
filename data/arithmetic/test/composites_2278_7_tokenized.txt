\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \newtheorem{definition}{Definition} \begin{document} \begin{definition} We say that $ <var:V> $ is a <def:seven-composite> whole number with the condition that there exist some $ <var:e> $ , $ <var:G> $ , $ <var:N> $ , $ <var:k> $ , $ <var:p> $ , $ <var:q> $ , $ <var:P> $ so that $ <var:G> $ , $ <var:N> $ , $ <var:e> $ , $ <var:P> $ , $ <var:q> $ , $ <var:k> $ , and $ <var:p> \geq <nat:2> $ plus with some positive integer $ <var:V> $ , $ <var:N> \cdot <var:q> \cdot <var:p> \cdot <var:e> \cdot <var:G> \cdot <var:P> \cdot <var:k> = <var:V> $ . \end{definition} \begin{theorem} $ <var:V> = <nat:1663200> $ is a <def:seven-composite> integer . \end{theorem} \begin{proof} We justify $ <var:k> $ , $ <var:e> $ , $ <var:P> $ , $ <var:N> $ , $ <var:p> $ , $ <var:q> $ and $ <var:G> $ are greater than or equal to <nat:2> and $ <var:p> \cdot <var:N> \cdot <var:k> \cdot <var:e> \cdot <var:P> \cdot <var:q> \cdot <var:G> = <nat:1663200> $ . Observe that $ <nat:5> $ , $ <nat:6> $ , $ <nat:7> $ , $ <nat:11> $ , $ <nat:10> $ , $ <nat:8> $ , $ <nat:9> $ are larger than or equivalent to <nat:2> . Furthermore note that additionally $ <nat:1663200> = <var:q> * <var:k> * <var:p> * <var:N> * <var:P> * <var:G> * <var:e> $ implies $ <var:k> = <nat:5> $ , $ <var:q> = <nat:8> $ , $ <var:G> = <nat:9> $ , $ <var:N> = <nat:7> $ , $ <var:p> = <nat:10> $ , $ <var:P> = <nat:6> $ , $ <var:e> = <nat:11> $ . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:seven-composite> ( <var:V> : nat ) := exists <var:e> <var:G> <var:N> <var:k> <var:p> <var:q> <var:P> : nat , ( <var:G> >= <nat:2> ) /\ ( <var:N> >= <nat:2> ) /\ ( <var:e> >= <nat:2> ) /\ ( <var:P> >= <nat:2> ) /\ ( <var:q> >= <nat:2> ) /\ ( <var:k> >= <nat:2> ) /\ ( <var:p> >= <nat:2> ) /\ ( <var:N> * <var:q> * <var:p> * <var:e> * <var:G> * <var:P> * <var:k> = <var:V> ) . Theorem <genP:1> : <def:seven-composite> <nat:1663200> . Proof . unfold <def:seven-composite> . assert ( <genH> : <nat:5> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:6> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:7> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:11> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:10> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:8> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:9> >= <nat:2> ) . { lia . } exists <nat:11> . exists <nat:9> . exists <nat:7> . exists <nat:5> . exists <nat:10> . exists <nat:8> . exists <nat:6> . repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 