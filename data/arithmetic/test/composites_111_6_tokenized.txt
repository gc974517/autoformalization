\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Let $ <var:j> $ , $ <var:A> $ , $ <var:a> $ , $ <var:k> $ , $ <var:G> $ , $ <var:w> $ be positive integers . Claim that $ <var:K> \in \mathbb{Z}^+ $ will be named a <def:six-composite> natural number assuming $ <var:G> \times <var:w> \times <var:k> \times <var:a> \times <var:A> \times <var:j> = <var:K> $ and unique terms are more than <nat:1> . Accordingly $ <var:K> = <nat:43680> $ is a <def:six-composite> integer . \end{theorem} \begin{proof} Observe that $ <nat:8> $ , $ <nat:6> $ , $ <nat:7> $ , $ <nat:13> $ , $ <nat:5> $ , $ <nat:2> > <nat:1> $ . Plus observe that still $ <nat:43680> = <var:a> \cdot <var:A> \cdot <var:j> \cdot <var:w> \cdot <var:G> \cdot <var:k> $ suggests $ <var:G> = <nat:7> $ , $ <var:w> = <nat:8> $ , $ <var:j> = <nat:5> $ , $ <var:A> = <nat:13> $ , $ <var:a> = <nat:6> $ , $ <var:k> = <nat:2> $ . This shows <nat:43680> is a <def:six-composite> number . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:six-composite> ( <var:K> : nat ) := exists <var:j> <var:A> <var:a> <var:k> <var:G> <var:w> : nat , ( <var:G> * <var:w> * <var:k> * <var:a> * <var:A> * <var:j> = <var:K> ) /\ ( <var:j> > <nat:1> ) /\ ( <var:A> > <nat:1> ) /\ ( <var:a> > <nat:1> ) /\ ( <var:k> > <nat:1> ) /\ ( <var:G> > <nat:1> ) /\ ( <var:w> > <nat:1> ) . Theorem <genP:1> : <def:six-composite> <nat:43680> . Proof . unfold <def:six-composite> . assert ( <genH> : <nat:8> > <nat:1> ) . { lia . } assert ( <genH> : <nat:6> > <nat:1> ) . { lia . } assert ( <genH> : <nat:7> > <nat:1> ) . { lia . } assert ( <genH> : <nat:13> > <nat:1> ) . { lia . } assert ( <genH> : <nat:5> > <nat:1> ) . { lia . } assert ( <genH> : <nat:2> > <nat:1> ) . { lia . } exists <nat:5> . exists <nat:13> . exists <nat:6> . exists <nat:2> . exists <nat:7> . exists <nat:8> . repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 