\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \newtheorem{definition}{Definition} \begin{document} \begin{definition} There are $ <var:r> $ , $ <var:b> $ , $ <var:V> $ , $ <var:n> $ , $ <var:O> $ where $ <var:b> $ , $ <var:r> $ , $ <var:O> $ , $ <var:V> $ , and $ <var:n> > <nat:1> $ . We say that some number $ <var:u> $ will be a <def:five-composite> number assuming $ <var:r> \cdot <var:V> \cdot <var:n> \cdot <var:O> \cdot <var:b> = <var:u> $ . \end{definition} \begin{theorem} $ <nat:13440> = <var:u> $ is a <def:five-composite> integer . \end{theorem} \begin{proof} Remember that <nat:13440> is a <def:five-composite> whole number with the condition that it is the product between integers $ <var:b> $ , $ <var:n> $ , $ <var:O> $ , $ <var:r> $ and $ <var:V> $ such that $ <var:n> $ , $ <var:V> $ , $ <var:b> $ , $ <var:r> $ and $ <var:O> > <nat:1> $ . Let $ <var:r> = <nat:10> $ , $ <var:b> = <nat:2> $ , $ <var:O> = <nat:8> $ , $ <var:V> = <nat:12> $ , $ <var:n> = <nat:7> $ . Note that $ <nat:13440> = <var:O> * <var:n> * <var:r> * <var:V> * <var:b> $ . Furthermore observe that $ <nat:2> $ , $ <nat:7> $ , $ <nat:8> $ , $ <nat:12> $ , and $ <nat:10> > <nat:1> $ . This produces <nat:13440> is <def:five-composite> . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:five-composite> ( <var:u> : nat ) := exists <var:r> <var:b> <var:V> <var:n> <var:O> : nat , ( <var:b> > <nat:1> ) /\ ( <var:r> > <nat:1> ) /\ ( <var:O> > <nat:1> ) /\ ( <var:V> > <nat:1> ) /\ ( <var:n> > <nat:1> ) /\ ( <var:r> * <var:V> * <var:n> * <var:O> * <var:b> = <var:u> ) . Theorem <genP:1> : <def:five-composite> <nat:13440> . Proof . unfold <def:five-composite> . exists <nat:10> . exists <nat:2> . exists <nat:12> . exists <nat:7> . exists <nat:8> . assert ( <genH> : <nat:2> > <nat:1> ) . { lia . } assert ( <genH> : <nat:7> > <nat:1> ) . { lia . } assert ( <genH> : <nat:8> > <nat:1> ) . { lia . } assert ( <genH> : <nat:12> > <nat:1> ) . { lia . } assert ( <genH> : <nat:10> > <nat:1> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 