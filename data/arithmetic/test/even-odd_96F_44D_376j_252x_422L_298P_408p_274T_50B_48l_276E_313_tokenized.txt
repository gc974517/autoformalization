\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:F> * <nat:96> + <nat:44> * <var:D> + <nat:376> * <var:j> + <nat:252> * <var:x> + <nat:422> * <var:L> + <nat:298> * <var:P> + <nat:408> * <var:p> + <var:T> * <nat:274> + <var:B> * <nat:50> + <nat:313> + <var:l> * <nat:48> + <nat:276> * <var:E> $ is guaranteed to be odd assuming every positive numbers $ <var:l> $ , $ <var:x> $ , $ <var:p> $ , $ <var:F> $ , $ <var:P> $ , $ <var:D> $ , $ <var:L> $ , $ <var:j> $ , $ <var:B> $ , $ <var:E> $ , and $ <var:T> $ . \end{theorem} \begin{proof} Observe that the summing of even elements of $ \mathbb{Z}^+ $ and an odd number in $ \mathbb{Z}^+ $ must be an odd positive integer . We know $ <nat:313> $ is clearly an odd whole number . Recall that the pairs $ <nat:252> * <var:x> $ as well as $ <var:B> * <nat:50> $ are guaranteed to be even . This claim is proven because taking the product of an even number and some number in $ \mathbb{N} $ is guaranteed to be an even number in $ \mathbb{N} $ . Furthermore , remember the pairs $ <var:T> * <nat:274> $ , $ <nat:48> * <var:l> $ , $ <nat:96> * <var:F> $ , $ <var:L> * <nat:422> $ , $ <var:j> * <nat:376> $ , $ <nat:408> * <var:p> $ , $ <nat:298> * <var:P> $ , and also $ <nat:44> * <var:D> $ are known to be even from the fact taking the product of an even number in $ \mathbb{Z}^+ $ with any element of $ \mathbb{Z}^+ $ must be even . Additionally , the pair $ <nat:276> * <var:E> $ is trivially an even whole number . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:l> <var:x> <var:p> <var:F> <var:P> <var:D> <var:L> <var:j> <var:B> <var:E> <var:T> : nat , Nat . odd ( <nat:96> * <var:F> + <nat:44> * <var:D> + <nat:376> * <var:j> + <nat:252> * <var:x> + <nat:422> * <var:L> + <nat:298> * <var:P> + <nat:408> * <var:p> + <nat:274> * <var:T> + <nat:50> * <var:B> + <nat:48> * <var:l> + <nat:276> * <var:E> + <nat:313> ) = true . Proof . intros . rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . assert ( <genH> : Nat . odd <nat:313> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:252> * <var:x> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:50> * <var:B> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:274> * <var:T> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:48> * <var:l> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:96> * <var:F> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:422> * <var:L> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:376> * <var:j> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:408> * <var:p> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:298> * <var:P> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:44> * <var:D> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:276> * <var:E> ) = true ) . { rewrite Nat . even_mul . auto . } rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 