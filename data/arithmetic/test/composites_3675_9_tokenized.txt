\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Claim that $ <var:P> $ is a <def:nine-composite> number whenever there are some $ <var:y> $ , $ <var:w> $ , $ <var:V> $ , $ <var:d> $ , $ <var:o> $ , $ <var:M> $ , $ <var:I> $ , $ <var:X> $ , $ <var:J> $ such that $ <var:P> = <var:V> \times <var:o> \times <var:M> \times <var:X> \times <var:y> \times <var:I> \times <var:d> \times <var:J> \times <var:w> $ with $ <var:P> \in \mathbb{Z}^+ $ as well as satisfying the condition that $ <var:J> $ , $ <var:y> $ , $ <var:X> $ , $ <var:V> $ , $ <var:I> $ , $ <var:o> $ , $ <var:M> $ , $ <var:d> $ and $ <var:w> \geq <nat:2> $ . So $ <nat:27799200> = <var:P> $ is a <def:nine-composite> natural number . \end{theorem} \begin{proof} Note that $ <var:y> * <var:w> * <var:V> * <var:I> * <var:o> * <var:J> * <var:d> * <var:M> * <var:X> = <nat:27799200> $ suggests $ <var:I> = <nat:9> $ , $ <var:d> = <nat:11> $ , $ <var:J> = <nat:6> $ , $ <var:y> = <nat:13> $ , $ <var:X> = <nat:12> $ , $ <var:V> = <nat:3> $ , $ <var:M> = <nat:10> $ , $ <var:w> = <nat:5> $ , and $ <var:o> = <nat:2> $ . In addition notice that $ <nat:2> $ , $ <nat:3> $ , $ <nat:11> $ , $ <nat:6> $ , $ <nat:12> $ , $ <nat:5> $ , $ <nat:10> $ , $ <nat:9> $ and $ <nat:13> > <nat:1> $ . This hints our proposition is valid . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:nine-composite> ( <var:P> : nat ) := exists <var:y> <var:w> <var:V> <var:d> <var:o> <var:M> <var:I> <var:X> <var:J> : nat , ( <var:P> = <var:V> * <var:o> * <var:M> * <var:X> * <var:y> * <var:I> * <var:d> * <var:J> * <var:w> ) /\ ( <var:J> >= <nat:2> ) /\ ( <var:y> >= <nat:2> ) /\ ( <var:X> >= <nat:2> ) /\ ( <var:V> >= <nat:2> ) /\ ( <var:I> >= <nat:2> ) /\ ( <var:o> >= <nat:2> ) /\ ( <var:M> >= <nat:2> ) /\ ( <var:d> >= <nat:2> ) /\ ( <var:w> >= <nat:2> ) . Theorem <genP:1> : <def:nine-composite> <nat:27799200> . Proof . unfold <def:nine-composite> . exists <nat:13> . exists <nat:5> . exists <nat:3> . exists <nat:11> . exists <nat:2> . exists <nat:10> . exists <nat:9> . exists <nat:12> . exists <nat:6> . assert ( <genH> : <nat:2> > <nat:1> ) . { lia . } assert ( <genH> : <nat:3> > <nat:1> ) . { lia . } assert ( <genH> : <nat:11> > <nat:1> ) . { lia . } assert ( <genH> : <nat:6> > <nat:1> ) . { lia . } assert ( <genH> : <nat:12> > <nat:1> ) . { lia . } assert ( <genH> : <nat:5> > <nat:1> ) . { lia . } assert ( <genH> : <nat:10> > <nat:1> ) . { lia . } assert ( <genH> : <nat:9> > <nat:1> ) . { lia . } assert ( <genH> : <nat:13> > <nat:1> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 