\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:490> \cdot <var:I> + <nat:170> \cdot <var:X> + <nat:186> \cdot <var:x> + <nat:161> + <nat:196> \cdot <var:E> + <nat:342> \cdot <var:k> + <nat:428> \cdot <var:o> + <nat:2> \cdot <var:Y> $ is guaranteed to be odd with any positive numbers $ <var:Y> $ , $ <var:k> $ , $ <var:o> $ , $ <var:E> $ , $ <var:X> $ , $ <var:x> $ , and $ <var:I> $ . \end{theorem} \begin{proof} Observe that the products $ <nat:490> * <var:I> $ plus $ <var:k> * <nat:342> $ are trivially even because the product of an even element of $ \mathbb{N} $ with some element of $ \mathbb{N} $ is guaranteed to be even . Take note the pair $ <var:E> * <nat:196> $ is clearly an even natural . Further , the products $ <var:x> * <nat:186> $ , $ <var:X> * <nat:170> $ , plus $ <var:Y> * <nat:2> $ must be even since taking the product of an even positive integer with a element of $ \mathbb{N} $ is even . What's more , the product $ <var:o> * <nat:428> $ is obviously an even element of $ \mathbb{Z}^+ $ . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:Y> <var:k> <var:o> <var:E> <var:X> <var:x> <var:I> : nat , Nat . odd ( <nat:490> * <var:I> + <nat:170> * <var:X> + <nat:186> * <var:x> + <nat:196> * <var:E> + <nat:342> * <var:k> + <nat:428> * <var:o> + <nat:2> * <var:Y> + <nat:161> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:490> * <var:I> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:342> * <var:k> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:196> * <var:E> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:186> * <var:x> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:170> * <var:X> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:2> * <var:Y> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:428> * <var:o> ) = true ) . { rewrite Nat . even_mul . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 