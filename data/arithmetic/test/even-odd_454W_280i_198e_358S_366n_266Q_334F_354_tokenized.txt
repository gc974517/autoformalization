\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:S> * <nat:358> + <nat:354> + <nat:366> * <var:n> + <var:F> * <nat:334> + <nat:454> * <var:W> + <nat:266> * <var:Q> + <nat:198> * <var:e> + <nat:280> * <var:i> $ must be even . \end{theorem} \begin{proof} We show the sum $ <nat:454> * <var:W> + <nat:280> * <var:i> + <nat:354> + <var:e> * <nat:198> + <nat:358> * <var:S> + <var:n> * <nat:366> + <nat:266> * <var:Q> + <nat:334> * <var:F> $ is guaranteed to be even . Likewise , the coefficients $ <nat:454> $ , $ <nat:280> $ , $ <nat:198> $ , $ <nat:358> $ , $ <nat:366> $ , $ <nat:266> $ , and likewise $ <nat:334> $ are even . Accordingly , the terms $ <nat:454> * <var:W> $ , $ <nat:280> * <var:i> $ , $ <var:e> * <nat:198> $ , $ <nat:358> * <var:S> $ , $ <var:n> * <nat:366> $ , $ <var:Q> * <nat:266> $ , and moreover $ <var:F> * <nat:334> $ is even additionally . The summing of even elements of $ \mathbb{N} $ concurrently is guaranteed to be fundamentally an even element of $ \mathbb{N} $ . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:S> <var:n> <var:F> <var:W> <var:Q> <var:e> <var:i> : nat , Nat . even ( <nat:358> * <var:S> + <nat:366> * <var:n> + <nat:334> * <var:F> + <nat:454> * <var:W> + <nat:266> * <var:Q> + <nat:198> * <var:e> + <nat:280> * <var:i> + <nat:354> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:454> = true ) . { auto . } assert ( <genH> : Nat . even <nat:280> = true ) . { auto . } assert ( <genH> : Nat . even <nat:198> = true ) . { auto . } assert ( <genH> : Nat . even <nat:358> = true ) . { auto . } assert ( <genH> : Nat . even <nat:366> = true ) . { auto . } assert ( <genH> : Nat . even <nat:266> = true ) . { auto . } assert ( <genH> : Nat . even <nat:334> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:454> * <var:W> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:280> * <var:i> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:198> * <var:e> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:358> * <var:S> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:366> * <var:n> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:266> * <var:Q> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:334> * <var:F> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 