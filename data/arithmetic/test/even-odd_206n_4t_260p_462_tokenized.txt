\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:t> <nat:4> + <var:n> <nat:206> + <nat:260> <var:p> + <nat:462> $ is even . \end{theorem} \begin{proof} The adding of even elements of $ \mathbb{Z}^+ $ concurrently is guaranteed to be an even number in $ \mathbb{N} $ . Recall $ <nat:462> $ is clearly even . $ <var:n> * <nat:206> + <var:t> * <nat:4> + <var:p> * <nat:260> $ is even . The pairs $ <nat:206> \cdot <var:n> $ and $ <nat:260> \cdot <var:p> $ are known as even . This fact holds as a consequence that taking the product of an even whole number with any positive integer must be an even element of $ \mathbb{N} $ . This claim is true since the whole numbers $ <nat:206> $ and moreover $ <nat:260> $ are even integers . Furthermore , observe the number $ <nat:4> $ is an even element of $ \mathbb{Z}^+ $ . Hence , $ <nat:4> \cdot <var:t> $ is guaranteed to be even at the same time . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:t> <var:n> <var:p> : nat , Nat . even ( <nat:4> * <var:t> + <nat:206> * <var:n> + <nat:260> * <var:p> + <nat:462> ) = true . Proof . intros . rewrite Nat . even_add . assert ( <genH> : Nat . even <nat:462> = true ) . { auto . } assert ( <genH> : Nat . even <nat:206> = true ) . { auto . } assert ( <genH> : Nat . even <nat:260> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:206> * <var:n> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:260> * <var:p> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:4> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:4> * <var:t> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:4> * <var:t> + <nat:206> * <var:n> + <nat:260> * <var:p> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite <genH> . rewrite <genH> . auto . Qed . 