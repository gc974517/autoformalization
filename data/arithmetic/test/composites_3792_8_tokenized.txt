\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Denote that $ <var:x> $ is a <def:eight-composite> whole number granted that with some $ <var:k> $ , $ <var:c> $ , $ <var:e> $ , $ <var:F> $ , $ <var:Z> $ , $ <var:X> $ , $ <var:S> $ , $ <var:v> \in \mathbb{N} $ we get $ <var:v> $ , $ <var:k> $ , $ <var:S> $ , $ <var:Z> $ , $ <var:e> $ , $ <var:c> $ , $ <var:F> $ , $ <var:X> \geq <nat:2> $ as well as taking $ <var:x> \in \mathbb{N} $ , $ <var:x> = <var:k> \times <var:X> \times <var:S> \times <var:v> \times <var:c> \times <var:Z> \times <var:F> \times <var:e> $ . Accordingly the natural number <nat:2280960> is <def:eight-composite> . \end{theorem} \begin{proof} We verify <nat:2280960> is a <def:eight-composite> positive integer because $ <nat:11> $ , $ <nat:6> $ , $ <nat:9> $ , $ <nat:5> $ , $ <nat:2> $ , $ <nat:12> $ , $ <nat:4> $ , $ <nat:8> \geq <nat:2> $ and on account of $ <var:v> * <var:k> * <var:S> * <var:e> * <var:Z> * <var:X> * <var:F> * <var:c> = <nat:2280960> $ hints $ <var:c> = <nat:5> $ , $ <var:F> = <nat:4> $ , $ <var:v> = <nat:6> $ , $ <var:X> = <nat:9> $ , $ <var:Z> = <nat:2> $ , $ <var:e> = <nat:12> $ , $ <var:S> = <nat:8> $ , $ <var:k> = <nat:11> $ . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:eight-composite> ( <var:x> : nat ) := exists <var:k> <var:c> <var:e> <var:F> <var:Z> <var:X> <var:S> <var:v> : nat , ( <var:v> >= <nat:2> ) /\ ( <var:k> >= <nat:2> ) /\ ( <var:S> >= <nat:2> ) /\ ( <var:Z> >= <nat:2> ) /\ ( <var:e> >= <nat:2> ) /\ ( <var:c> >= <nat:2> ) /\ ( <var:F> >= <nat:2> ) /\ ( <var:X> >= <nat:2> ) /\ ( <var:x> = <var:k> * <var:X> * <var:S> * <var:v> * <var:c> * <var:Z> * <var:F> * <var:e> ) . Theorem <genP:1> : <def:eight-composite> <nat:2280960> . Proof . unfold <def:eight-composite> . assert ( <genH> : <nat:11> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:6> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:9> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:5> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:2> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:12> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:4> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:8> >= <nat:2> ) . { lia . } exists <nat:11> . exists <nat:5> . exists <nat:12> . exists <nat:4> . exists <nat:2> . exists <nat:9> . exists <nat:8> . exists <nat:6> . repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 