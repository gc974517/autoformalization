\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:294> <var:f> + <nat:192> <var:o> + <nat:467> + <nat:356> <var:i> + <nat:452> <var:g> $ is odd taking whole numbers $ <var:i> $ , $ <var:o> $ , $ <var:f> $ , and $ <var:g> $ . \end{theorem} \begin{proof} Notice that $ <nat:467> $ is clearly an odd whole number . The totaling between an even whole number and an odd number is guaranteed to be instrinsically an odd whole number . The claim must be true as a consequence that $ <nat:294> \cdot <var:f> + <var:g> \cdot <nat:452> + <var:i> \cdot <nat:356> + <var:o> \cdot <nat:192> $ is known as even . Notice that the natural numbers $ <nat:294> $ and moreover $ <nat:356> $ are obviously even integers In addition to this , remember that the integer $ <nat:192> $ is known to be an even integer Furthermore , take note that the whole number $ <nat:452> $ is guaranteed to be an even natural number From the knowledge the summing between an even natural number with even elements of $ \mathbb{Z}^+ $ is an even natural , and as a consequence that taking the product between even elements of $ \mathbb{N} $ and an arbitrary number in $ \mathbb{Z}^+ $ will be itself an even number in $ \mathbb{Z}^+ $ . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:i> <var:o> <var:f> <var:g> : nat , Nat . odd ( <nat:294> * <var:f> + <nat:192> * <var:o> + <nat:356> * <var:i> + <nat:452> * <var:g> + <nat:467> ) = true . Proof . intros . assert ( <genH> : Nat . odd <nat:467> = true ) . { auto . } rewrite Nat . odd_add . assert ( <genH> : Nat . even <nat:294> = true ) . { auto . } assert ( <genH> : Nat . even <nat:356> = true ) . { auto . } assert ( <genH> : Nat . even <nat:192> = true ) . { auto . } assert ( <genH> : Nat . even <nat:452> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:294> * <var:f> + <nat:192> * <var:o> + <nat:356> * <var:i> + <nat:452> * <var:g> ) = true ) . { repeat rewrite Nat . even_add . repeat rewrite Nat . even_mul . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite <- Nat . negb_even . rewrite <genH> . rewrite <genH> . auto . Qed . 