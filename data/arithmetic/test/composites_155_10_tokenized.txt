\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \newtheorem{definition}{Definition} \begin{document} \begin{definition} Iff we have $ <var:H> \times <var:T> \times <var:s> \times <var:V> \times <var:m> \times <var:o> \times <var:S> \times <var:Z> \times <var:A> \times <var:b> = <var:L> $ with $ <var:L> \in \mathbb{N} $ , claim that $ <var:L> $ is a <def:ten-composite> number given some numbers $ <var:H> $ , $ <var:o> $ , $ <var:b> $ , $ <var:Z> $ , $ <var:V> $ , $ <var:A> $ , $ <var:m> $ , $ <var:s> $ , $ <var:S> $ , $ <var:T> $ . \end{definition} \begin{theorem} $ <var:L> = <nat:59875200> $ is <def:ten-composite> . \end{theorem} \begin{proof} Recall that a <def:ten-composite> number is the multiplication between natural numbers $ <var:m> $ , $ <var:S> $ , $ <var:T> $ , $ <var:Z> $ , $ <var:V> $ , $ <var:H> $ , $ <var:o> $ , $ <var:A> $ , $ <var:s> $ , and $ <var:b> $ more than <nat:1> . Note that $ <nat:59875200> = <nat:7> * <nat:11> * <nat:5> * <nat:2> * <nat:12> * <nat:4> * <nat:9> * <nat:3> * <nat:10> * <nat:6> = <var:Z> * <var:s> * <var:V> * <var:T> * <var:A> * <var:H> * <var:S> * <var:b> * <var:m> * <var:o> $ . This implies our theorem is valid . Because of this , <nat:59875200> is <def:ten-composite> is true has been proven . Thus , $ <nat:59875200> = <var:H> \cdot <var:Z> \cdot <var:m> \cdot <var:S> \cdot <var:s> \cdot <var:o> \cdot <var:V> \cdot <var:A> \cdot <var:T> \cdot <var:b> $ is validated . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:ten-composite> ( <var:L> : nat ) := exists <var:H> <var:o> <var:b> <var:Z> <var:V> <var:A> <var:m> <var:s> <var:S> <var:T> : nat , ( <var:H> * <var:T> * <var:s> * <var:V> * <var:m> * <var:o> * <var:S> * <var:Z> * <var:A> * <var:b> = <var:L> ) . Theorem <genP:1> : <def:ten-composite> <nat:59875200> . Proof . unfold <def:ten-composite> . exists <nat:4> . exists <nat:6> . exists <nat:3> . exists <nat:7> . exists <nat:5> . exists <nat:12> . exists <nat:10> . exists <nat:11> . exists <nat:9> . exists <nat:2> . repeat split . all : lia . Qed . 