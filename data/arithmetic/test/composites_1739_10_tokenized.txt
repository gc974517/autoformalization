\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:79833600> = <var:N> * <var:O> * <var:p> * <var:S> * <var:Y> * <var:t> * <var:z> * <var:D> * <var:l> * <var:i> $ so that $ <var:N> $ , $ <var:D> $ , $ <var:t> $ , $ <var:z> $ , $ <var:p> $ , $ <var:Y> $ , $ <var:l> $ , $ <var:S> $ , $ <var:O> $ , and $ <var:i> \geq <nat:2> $ . \end{theorem} \begin{proof} Note that $ <nat:3> * <nat:7> * <nat:2> * <nat:8> * <nat:11> * <nat:12> * <nat:5> * <nat:4> * <nat:9> * <nat:10> = <nat:79833600> $ . Moreover note that $ <nat:8> $ , $ <nat:11> $ , $ <nat:12> $ , $ <nat:3> $ , $ <nat:10> $ , $ <nat:7> $ , $ <nat:4> $ , $ <nat:2> $ , $ <nat:9> $ and $ <nat:5> $ are greater than or equivalent to <nat:2> . This hints our result is true . \end{proof} \end{document} 
~
Require Import Lia . Theorem <genP:1> : exists <var:D> <var:S> <var:O> <var:l> <var:i> <var:t> <var:p> <var:z> <var:Y> <var:N> : nat , ( <nat:79833600> = <var:N> * <var:O> * <var:p> * <var:S> * <var:Y> * <var:t> * <var:z> * <var:D> * <var:l> * <var:i> ) /\ ( <var:N> >= <nat:2> ) /\ ( <var:D> >= <nat:2> ) /\ ( <var:t> >= <nat:2> ) /\ ( <var:z> >= <nat:2> ) /\ ( <var:p> >= <nat:2> ) /\ ( <var:Y> >= <nat:2> ) /\ ( <var:l> >= <nat:2> ) /\ ( <var:S> >= <nat:2> ) /\ ( <var:O> >= <nat:2> ) /\ ( <var:i> >= <nat:2> ) . Proof . exists <nat:11> . exists <nat:2> . exists <nat:8> . exists <nat:10> . exists <nat:7> . exists <nat:4> . exists <nat:12> . exists <nat:5> . exists <nat:3> . exists <nat:9> . assert ( <genH> : <nat:8> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:11> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:12> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:3> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:10> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:7> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:4> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:2> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:9> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:5> >= <nat:2> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 