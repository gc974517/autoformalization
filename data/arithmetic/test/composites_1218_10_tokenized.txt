\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \newtheorem{definition}{Definition} \begin{document} \begin{definition} Take $ <var:H> $ , $ <var:D> $ , $ <var:l> $ , $ <var:g> $ , $ <var:Y> $ , $ <var:N> $ , $ <var:F> $ , $ <var:S> $ , $ <var:i> $ , $ <var:T> \in \mathbb{Z}^+ $ larger than or equivalent to <nat:2> . We claim that $ <var:k> \in \mathbb{N} $ will be considered a <def:ten-composite> whole number given $ <var:i> \times <var:D> \times <var:l> \times <var:T> \times <var:H> \times <var:N> \times <var:g> \times <var:F> \times <var:Y> \times <var:S> = <var:k> $ . \end{definition} \begin{theorem} $ <nat:415134720> = <var:k> $ is a <def:ten-composite> integer . \end{theorem} \begin{proof} Remember <nat:415134720> is a <def:ten-composite> whole number under the condition <nat:415134720> is the product of positive integers $ <var:T> $ , $ <var:Y> $ , $ <var:g> $ , $ <var:F> $ , $ <var:N> $ , $ <var:l> $ , $ <var:D> $ , $ <var:S> $ , $ <var:i> $ , and $ <var:H> $ more than or equal to <nat:2> . Notice $ <nat:415134720> = <nat:13> * <nat:9> * <nat:4> * <nat:6> * <nat:7> * <nat:8> * <nat:11> * <nat:12> * <nat:2> * <nat:10> = <var:i> * <var:Y> * <var:F> * <var:D> * <var:l> * <var:T> * <var:N> * <var:g> * <var:S> * <var:H> $ . Furthermore notice $ <nat:6> $ , $ <nat:11> $ , $ <nat:4> $ , $ <nat:10> $ , $ <nat:8> $ , $ <nat:13> $ , $ <nat:12> $ , $ <nat:7> $ , $ <nat:9> $ , $ <nat:2> $ are greater than or equivalent to <nat:2> . This yields our result is true . As a consequence , <nat:415134720> is a <def:ten-composite> integer has been verified . So , $ <var:H> * <var:l> * <var:i> * <var:S> * <var:T> * <var:N> * <var:g> * <var:Y> * <var:F> * <var:D> = <nat:415134720> $ is true has been proven . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:ten-composite> ( <var:k> : nat ) := exists <var:H> <var:D> <var:l> <var:g> <var:Y> <var:N> <var:F> <var:S> <var:i> <var:T> : nat , ( <var:H> >= <nat:2> ) /\ ( <var:D> >= <nat:2> ) /\ ( <var:l> >= <nat:2> ) /\ ( <var:g> >= <nat:2> ) /\ ( <var:Y> >= <nat:2> ) /\ ( <var:N> >= <nat:2> ) /\ ( <var:F> >= <nat:2> ) /\ ( <var:S> >= <nat:2> ) /\ ( <var:i> >= <nat:2> ) /\ ( <var:T> >= <nat:2> ) /\ ( <var:i> * <var:D> * <var:l> * <var:T> * <var:H> * <var:N> * <var:g> * <var:F> * <var:Y> * <var:S> = <var:k> ) . Theorem <genP:1> : <def:ten-composite> <nat:415134720> . Proof . unfold <def:ten-composite> . exists <nat:10> . exists <nat:6> . exists <nat:7> . exists <nat:12> . exists <nat:9> . exists <nat:11> . exists <nat:4> . exists <nat:2> . exists <nat:13> . exists <nat:8> . assert ( <genH> : <nat:6> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:11> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:4> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:10> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:8> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:13> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:12> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:7> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:9> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:2> >= <nat:2> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 