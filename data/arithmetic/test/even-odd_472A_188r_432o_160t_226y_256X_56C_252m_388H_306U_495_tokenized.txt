\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} For $ <var:X> $ , $ <var:t> $ , $ <var:y> $ , $ <var:o> $ , $ <var:m> $ , $ <var:r> $ , $ <var:H> $ , $ <var:C> $ , $ <var:U> $ , and $ <var:A> $ the sum $ <var:A> * <nat:472> + <var:t> * <nat:160> + <nat:388> * <var:H> + <nat:256> * <var:X> + <var:U> * <nat:306> + <nat:226> * <var:y> + <nat:432> * <var:o> + <nat:495> + <var:r> * <nat:188> + <var:C> * <nat:56> + <var:m> * <nat:252> $ is odd . \end{theorem} \begin{proof} The summation of an even integer with an odd natural is an odd integer . What's more , remember that the terms $ <nat:472> \cdot <var:A> $ , $ <var:t> \cdot <nat:160> $ , $ <nat:388> \cdot <var:H> $ , $ <var:X> \cdot <nat:256> $ , $ <nat:306> \cdot <var:U> $ , $ <var:y> \cdot <nat:226> $ , $ <nat:432> \cdot <var:o> $ , $ <var:r> \cdot <nat:188> $ , $ <nat:56> \cdot <var:C> $ , and moreover $ <var:m> \cdot <nat:252> $ are known to be even whole numbers from the fact taking the product between an even natural with a positive integer must be an even element of $ \mathbb{Z}^+ $ , which is true since the leading terms $ <nat:472> $ , $ <nat:160> $ , $ <nat:388> $ , $ <nat:256> $ , $ <nat:306> $ , $ <nat:226> $ , $ <nat:432> $ , $ <nat:188> $ , $ <nat:56> $ , as well as $ <nat:252> $ are trivially even . We show the formula $ <var:A> \times <nat:472> + <var:r> \times <nat:188> + <nat:432> \times <var:o> + <var:t> \times <nat:160> + <nat:226> \times <var:y> + <nat:256> \times <var:X> + <nat:56> \times <var:C> + <var:m> \times <nat:252> + <nat:388> \times <var:H> + <nat:495> + <nat:306> \times <var:U> $ must be odd . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:X> <var:t> <var:y> <var:o> <var:m> <var:r> <var:H> <var:C> <var:U> <var:A> : nat , Nat . odd ( <nat:472> * <var:A> + <nat:160> * <var:t> + <nat:388> * <var:H> + <nat:256> * <var:X> + <nat:306> * <var:U> + <nat:226> * <var:y> + <nat:432> * <var:o> + <nat:188> * <var:r> + <nat:56> * <var:C> + <nat:252> * <var:m> + <nat:495> ) = true . Proof . intros . rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . assert ( <genH> : Nat . even <nat:472> = true ) . { auto . } assert ( <genH> : Nat . even <nat:160> = true ) . { auto . } assert ( <genH> : Nat . even <nat:388> = true ) . { auto . } assert ( <genH> : Nat . even <nat:256> = true ) . { auto . } assert ( <genH> : Nat . even <nat:306> = true ) . { auto . } assert ( <genH> : Nat . even <nat:226> = true ) . { auto . } assert ( <genH> : Nat . even <nat:432> = true ) . { auto . } assert ( <genH> : Nat . even <nat:188> = true ) . { auto . } assert ( <genH> : Nat . even <nat:56> = true ) . { auto . } assert ( <genH> : Nat . even <nat:252> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:472> * <var:A> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:160> * <var:t> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:388> * <var:H> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:256> * <var:X> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:306> * <var:U> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:226> * <var:y> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:432> * <var:o> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:188> * <var:r> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:56> * <var:C> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:252> * <var:m> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 