\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:p> \cdot <nat:486> + <nat:420> \cdot <var:K> + <nat:36> \cdot <var:t> + <nat:250> \cdot <var:i> + <nat:200> \cdot <var:G> + <var:q> \cdot <nat:60> + <nat:180> \cdot <var:u> + <nat:2> \cdot <var:A> + <nat:342> \cdot <var:D> + <nat:176> \cdot <var:B> + <nat:133> + <var:z> \cdot <nat:128> $ is guaranteed to be odd . \end{theorem} \begin{proof} The sum $ <nat:2> <var:A> + <nat:176> <var:B> + <nat:36> <var:t> + <nat:250> <var:i> + <nat:180> <var:u> + <nat:133> + <var:z> <nat:128> + <var:G> <nat:200> + <nat:342> <var:D> + <var:q> <nat:60> + <var:K> <nat:420> + <nat:486> <var:p> $ is clearly odd from the fact the sum $ <nat:180> \cdot <var:u> + <nat:486> \cdot <var:p> + <var:i> \cdot <nat:250> + <var:D> \cdot <nat:342> + <var:G> \cdot <nat:200> + <var:A> \cdot <nat:2> + <nat:60> \cdot <var:q> + <nat:176> \cdot <var:B> + <var:K> \cdot <nat:420> + <var:z> \cdot <nat:128> + <var:t> \cdot <nat:36> $ is known as even . The terms $ <nat:60> * <var:q> $ as well as $ <nat:2> * <var:A> $ are trivially even . In addition , the terms $ <nat:128> * <var:z> $ , $ <nat:36> * <var:t> $ , $ <nat:342> * <var:D> $ , $ <nat:176> * <var:B> $ , $ <var:p> * <nat:486> $ , $ <nat:250> * <var:i> $ , and also $ <var:G> * <nat:200> $ are obviously even . This claim must be true from the fact multiplying of an even integer with an arbitrary positive integer is in itself an even number in $ \mathbb{Z}^+ $ . On top of this , take note the product $ <nat:180> * <var:u> $ is guaranteed to be an even integer . See that the term $ <nat:420> * <var:K> $ is clearly even . Since the adding between an even element of $ \mathbb{Z}^+ $ with an even whole number is even , and likewise from the fact the product between even natural numbers and a element of $ \mathbb{Z}^+ $ is even . The totaling of even naturals together and an odd positive integer is guaranteed to be odd . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:p> <var:K> <var:t> <var:i> <var:G> <var:q> <var:u> <var:A> <var:D> <var:B> <var:z> : nat , Nat . odd ( <nat:486> * <var:p> + <nat:420> * <var:K> + <nat:36> * <var:t> + <nat:250> * <var:i> + <nat:200> * <var:G> + <nat:60> * <var:q> + <nat:180> * <var:u> + <nat:2> * <var:A> + <nat:342> * <var:D> + <nat:176> * <var:B> + <nat:128> * <var:z> + <nat:133> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:60> * <var:q> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:2> * <var:A> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:128> * <var:z> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:36> * <var:t> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:342> * <var:D> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:176> * <var:B> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:486> * <var:p> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:250> * <var:i> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:200> * <var:G> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:180> * <var:u> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:420> * <var:K> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:486> * <var:p> + <nat:420> * <var:K> + <nat:36> * <var:t> + <nat:250> * <var:i> + <nat:200> * <var:G> + <nat:60> * <var:q> + <nat:180> * <var:u> + <nat:2> * <var:A> + <nat:342> * <var:D> + <nat:176> * <var:B> + <nat:128> * <var:z> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . auto . Qed . 