\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \newtheorem{definition}{Definition} \begin{document} \begin{definition} Claim that $ <var:F> $ is <def:six-composite> given that with some numbers $ <var:z> $ , $ <var:X> $ , $ <var:T> $ , $ <var:G> $ , $ <var:B> $ , $ <var:K> $ we have $ <var:T> $ , $ <var:G> $ , $ <var:K> $ , $ <var:X> $ , $ <var:B> $ , and $ <var:z> \geq <nat:2> $ as well as with $ <var:F> \in \mathbb{Z}^+ $ , $ <var:F> = <var:B> \cdot <var:T> \cdot <var:X> \cdot <var:G> \cdot <var:K> \cdot <var:z> $ . \end{definition} \begin{theorem} The natural number <nat:13824> is a <def:six-composite> number . \end{theorem} \begin{proof} We verify our belief is true in consideration of $ <nat:8> $ , $ <nat:2> $ , $ <nat:12> $ , $ <nat:6> $ , $ <nat:4> $ , and $ <nat:3> $ are more than or equivalent to <nat:2> as well as in view of $ <nat:13824> = <nat:3> \times <nat:12> \times <nat:4> \times <nat:8> \times <nat:6> \times <nat:2> $ . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:six-composite> ( <var:F> : nat ) := exists <var:z> <var:X> <var:T> <var:G> <var:B> <var:K> : nat , ( <var:T> >= <nat:2> ) /\ ( <var:G> >= <nat:2> ) /\ ( <var:K> >= <nat:2> ) /\ ( <var:X> >= <nat:2> ) /\ ( <var:B> >= <nat:2> ) /\ ( <var:z> >= <nat:2> ) /\ ( <var:F> = <var:B> * <var:T> * <var:X> * <var:G> * <var:K> * <var:z> ) . Theorem <genP:1> : <def:six-composite> <nat:13824> . Proof . unfold <def:six-composite> . assert ( <genH> : <nat:8> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:2> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:12> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:6> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:4> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:3> >= <nat:2> ) . { lia . } exists <nat:3> . exists <nat:6> . exists <nat:4> . exists <nat:12> . exists <nat:2> . exists <nat:8> . repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 