\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} The integer <nat:5987520> is the product of $ <var:R> $ , $ <var:o> $ , $ <var:x> $ , $ <var:B> $ , $ <var:q> $ , $ <var:G> $ , $ <var:n> $ , $ <var:D> $ , and $ <var:A> $ satisfying the condition that $ <var:G> $ , $ <var:n> $ , $ <var:R> $ , $ <var:A> $ , $ <var:x> $ , $ <var:o> $ , $ <var:B> $ , $ <var:D> $ and $ <var:q> \geq <nat:2> $ . \end{theorem} \begin{proof} Assume $ <var:A> = <nat:4> $ , $ <var:G> = <nat:11> $ , $ <var:q> = <nat:5> $ , $ <var:B> = <nat:6> $ , $ <var:R> = <nat:3> $ , $ <var:n> = <nat:12> $ , $ <var:x> = <nat:2> $ , $ <var:o> = <nat:7> $ , $ <var:D> = <nat:9> $ . We show the result is true in view of As $ <nat:12> $ , $ <nat:4> $ , $ <nat:7> $ , $ <nat:5> $ , $ <nat:2> $ , $ <nat:6> $ , $ <nat:9> $ , $ <nat:3> $ , and $ <nat:11> $ are greater than or equal to <nat:2> . \end{proof} \end{document} 
~
Require Import Lia . Theorem <genP:1> : exists <var:R> <var:o> <var:x> <var:B> <var:q> <var:G> <var:n> <var:D> <var:A> : nat , ( <nat:5987520> = <var:R> * <var:o> * <var:x> * <var:B> * <var:q> * <var:G> * <var:n> * <var:D> * <var:A> ) /\ ( <var:G> >= <nat:2> ) /\ ( <var:n> >= <nat:2> ) /\ ( <var:R> >= <nat:2> ) /\ ( <var:A> >= <nat:2> ) /\ ( <var:x> >= <nat:2> ) /\ ( <var:o> >= <nat:2> ) /\ ( <var:B> >= <nat:2> ) /\ ( <var:D> >= <nat:2> ) /\ ( <var:q> >= <nat:2> ) . Proof . exists <nat:3> . exists <nat:7> . exists <nat:2> . exists <nat:6> . exists <nat:5> . exists <nat:11> . exists <nat:12> . exists <nat:9> . exists <nat:4> . assert ( <genH> : <nat:12> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:4> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:7> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:5> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:2> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:6> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:9> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:3> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:11> >= <nat:2> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 