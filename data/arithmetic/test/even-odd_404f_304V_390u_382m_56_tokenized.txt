\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:u> <nat:390> + <nat:304> <var:V> + <nat:404> <var:f> + <nat:382> <var:m> + <nat:56> $ must be even using any $ <var:f> $ , $ <var:m> $ , $ <var:V> $ , and $ <var:u> \in \mathbb{Z}^+ $ . \end{theorem} \begin{proof} We demonstrate the summation $ <nat:56> + <var:m> \cdot <nat:382> + <nat:304> \cdot <var:V> + <var:f> \cdot <nat:404> + <var:u> \cdot <nat:390> $ must be even . It can be proven that $ <var:m> \cdot <nat:382> + <nat:390> \cdot <var:u> + <var:f> \cdot <nat:404> + <nat:304> \cdot <var:V> $ is obviously even . Remember that the integers $ <nat:382> $ , $ <nat:390> $ , $ <nat:404> $ , and $ <nat:304> $ are guaranteed to be even . As a consequence , the terms $ <var:m> <nat:382> $ , $ <var:u> <nat:390> $ , $ <var:f> <nat:404> $ , and also $ <var:V> <nat:304> $ must be even additionally . $ <nat:404> \times <var:f> + <var:V> \times <nat:304> + <var:u> \times <nat:390> + <var:m> \times <nat:382> $ must be even from the knowledge taking the product between even elements of $ \mathbb{Z}^+ $ with an arbitrary element of $ \mathbb{N} $ must be even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:f> <var:m> <var:V> <var:u> : nat , Nat . even ( <nat:390> * <var:u> + <nat:304> * <var:V> + <nat:404> * <var:f> + <nat:382> * <var:m> + <nat:56> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:382> = true ) . { auto . } assert ( <genH> : Nat . even <nat:390> = true ) . { auto . } assert ( <genH> : Nat . even <nat:404> = true ) . { auto . } assert ( <genH> : Nat . even <nat:304> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:382> * <var:m> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:390> * <var:u> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:404> * <var:f> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:304> * <var:V> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:390> * <var:u> + <nat:304> * <var:V> + <nat:404> * <var:f> + <nat:382> * <var:m> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . even_add . rewrite <genH> . auto . Qed . 