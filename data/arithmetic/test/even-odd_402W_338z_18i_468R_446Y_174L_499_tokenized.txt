\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:338> * <var:z> + <nat:446> * <var:Y> + <var:W> * <nat:402> + <nat:499> + <nat:468> * <var:R> + <var:L> * <nat:174> + <nat:18> * <var:i> $ will be odd assuming every natural numbers $ <var:Y> $ , $ <var:z> $ , $ <var:i> $ , $ <var:R> $ , $ <var:W> $ , and $ <var:L> $ . \end{theorem} \begin{proof} The whole numbers $ <nat:446> $ , $ <nat:468> $ , $ <nat:402> $ , $ <nat:338> $ , and moreover $ <nat:18> $ are known as even . Accordingly , the products $ <var:Y> \cdot <nat:446> $ , $ <nat:468> \cdot <var:R> $ , $ <nat:402> \cdot <var:W> $ , $ <var:z> \cdot <nat:338> $ , and likewise $ <var:i> \cdot <nat:18> $ must be even as well . The product $ <nat:174> \cdot <var:L> $ is trivially an even element of $ \mathbb{N} $ . This holds as a consequence that the multiplication of an even integer and an arbitrary natural is an even natural number and the integer $ <nat:174> $ is obviously an even number . Recall that $ <nat:499> $ is an odd element of $ \mathbb{N} $ . We show $ <nat:402> * <var:W> + <nat:338> * <var:z> + <var:i> * <nat:18> + <var:R> * <nat:468> + <nat:446> * <var:Y> + <var:L> * <nat:174> + <nat:499> $ is odd . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:Y> <var:z> <var:i> <var:R> <var:W> <var:L> : nat , Nat . odd ( <nat:338> * <var:z> + <nat:446> * <var:Y> + <nat:402> * <var:W> + <nat:468> * <var:R> + <nat:174> * <var:L> + <nat:18> * <var:i> + <nat:499> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:446> = true ) . { auto . } assert ( <genH> : Nat . even <nat:468> = true ) . { auto . } assert ( <genH> : Nat . even <nat:402> = true ) . { auto . } assert ( <genH> : Nat . even <nat:338> = true ) . { auto . } assert ( <genH> : Nat . even <nat:18> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:446> * <var:Y> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:468> * <var:R> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:402> * <var:W> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:338> * <var:z> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:18> * <var:i> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:174> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:174> * <var:L> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . odd <nat:499> = true ) . { auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 