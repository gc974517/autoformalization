\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:110> \times <var:P> + <nat:254> \times <var:O> + <nat:78> \times <var:i> + <nat:40> \times <var:T> + <nat:492> \times <var:R> + <var:g> \times <nat:208> + <nat:411> + <var:x> \times <nat:306> + <nat:132> \times <var:m> + <var:h> \times <nat:174> + <var:z> \times <nat:322> + <var:s> \times <nat:294> $ is guaranteed to be odd with natural terms $ <var:O> $ , $ <var:z> $ , $ <var:g> $ , $ <var:T> $ , $ <var:i> $ , $ <var:h> $ , $ <var:R> $ , $ <var:m> $ , $ <var:s> $ , $ <var:x> $ , and $ <var:P> $ . \end{theorem} \begin{proof} Notice the adding between even numbers in $ \mathbb{N} $ concurrently and an odd positive integer is odd . The term $ <nat:492> \times <var:R> $ is known as an even element of $ \mathbb{Z}^+ $ . Recall the terms $ <var:h> \times <nat:174> $ , $ <nat:132> \times <var:m> $ , $ <nat:78> \times <var:i> $ , plus $ <nat:208> \times <var:g> $ are guaranteed to be even integers from the knowledge taking the product between an even natural with some positive integer will be by its very nature an even element of $ \mathbb{N} $ . Additionally , remember the term $ <nat:254> \times <var:O> $ is known as even . This claim must be true from the knowledge taking the product between an even natural with an arbitrary positive integer is guaranteed to be obviously an even element of $ \mathbb{Z}^+ $ . See the terms $ <var:P> \times <nat:110> $ , $ <nat:306> \times <var:x> $ , $ <var:s> \times <nat:294> $ , and likewise $ <nat:322> \times <var:z> $ will be even elements of $ \mathbb{Z}^+ $ . The pair $ <var:T> \times <nat:40> $ is trivially even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:O> <var:z> <var:g> <var:T> <var:i> <var:h> <var:R> <var:m> <var:s> <var:x> <var:P> : nat , Nat . odd ( <nat:110> * <var:P> + <nat:254> * <var:O> + <nat:78> * <var:i> + <nat:40> * <var:T> + <nat:492> * <var:R> + <nat:208> * <var:g> + <nat:306> * <var:x> + <nat:132> * <var:m> + <nat:174> * <var:h> + <nat:322> * <var:z> + <nat:294> * <var:s> + <nat:411> ) = true . Proof . intros . rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . assert ( <genH> : Nat . even ( <nat:492> * <var:R> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:174> * <var:h> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:132> * <var:m> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:78> * <var:i> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:208> * <var:g> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:254> * <var:O> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:110> * <var:P> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:306> * <var:x> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:294> * <var:s> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:322> * <var:z> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:40> * <var:T> ) = true ) . { rewrite Nat . even_mul . auto . } rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 