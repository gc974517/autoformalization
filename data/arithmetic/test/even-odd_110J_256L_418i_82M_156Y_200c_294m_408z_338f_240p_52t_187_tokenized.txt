\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:M> \cdot <nat:82> + <nat:338> \cdot <var:f> + <nat:110> \cdot <var:J> + <nat:187> + <nat:408> \cdot <var:z> + <var:p> \cdot <nat:240> + <var:c> \cdot <nat:200> + <nat:256> \cdot <var:L> + <var:m> \cdot <nat:294> + <nat:52> \cdot <var:t> + <nat:418> \cdot <var:i> + <nat:156> \cdot <var:Y> $ is guaranteed to be odd . \end{theorem} \begin{proof} We work with the assumption the formula $ <nat:110> \times <var:J> + <var:L> \times <nat:256> + <nat:418> \times <var:i> + <var:M> \times <nat:82> + <nat:156> \times <var:Y> + <nat:200> \times <var:c> + <var:m> \times <nat:294> + <var:z> \times <nat:408> + <var:f> \times <nat:338> + <var:p> \times <nat:240> + <nat:52> \times <var:t> $ is trivially even . By reason that the totaling between an even number in $ \mathbb{Z}^+ $ with even numbers in $ \mathbb{Z}^+ $ is guaranteed to be clearly an even element of $ \mathbb{Z}^+ $ , and likewise since multiplying between an even number in $ \mathbb{N} $ with an arbitrary positive integer is guaranteed to be even . The summation between even elements of $ \mathbb{N} $ and an odd number in $ \mathbb{N} $ is odd . Notice $ <nat:187> $ is odd . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:M> <var:f> <var:J> <var:z> <var:p> <var:c> <var:L> <var:m> <var:t> <var:i> <var:Y> : nat , Nat . odd ( <nat:82> * <var:M> + <nat:338> * <var:f> + <nat:110> * <var:J> + <nat:408> * <var:z> + <nat:240> * <var:p> + <nat:200> * <var:c> + <nat:256> * <var:L> + <nat:294> * <var:m> + <nat:52> * <var:t> + <nat:418> * <var:i> + <nat:156> * <var:Y> + <nat:187> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:82> * <var:M> + <nat:338> * <var:f> + <nat:110> * <var:J> + <nat:408> * <var:z> + <nat:240> * <var:p> + <nat:200> * <var:c> + <nat:256> * <var:L> + <nat:294> * <var:m> + <nat:52> * <var:t> + <nat:418> * <var:i> + <nat:156> * <var:Y> ) = true ) . { repeat rewrite Nat . even_add . repeat rewrite Nat . even_mul . auto . } rewrite Nat . odd_add . assert ( <genH> : Nat . odd <nat:187> = true ) . { auto . } rewrite <- Nat . negb_even . rewrite <genH> . rewrite <genH> . auto . Qed . 