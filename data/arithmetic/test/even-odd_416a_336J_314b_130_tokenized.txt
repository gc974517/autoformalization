\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:130> + <var:b> * <nat:314> + <var:J> * <nat:336> + <nat:416> * <var:a> $ is guaranteed to be even assuming any $ <var:a> $ , $ <var:b> $ , and $ <var:J> \in \mathbb{N} $ . \end{theorem} \begin{proof} The expression $ <nat:130> + <nat:416> \cdot <var:a> + <var:J> \cdot <nat:336> + <nat:314> \cdot <var:b> $ is known as even from the fact the sum $ <nat:314> * <var:b> + <nat:416> * <var:a> + <nat:336> * <var:J> $ is obviously even . Notice that the pairs $ <var:b> \times <nat:314> $ , $ <nat:416> \times <var:a> $ , as well as $ <nat:336> \times <var:J> $ are obviously even numbers . This claim is proven because the numbers $ <nat:314> $ , $ <nat:416> $ , and moreover $ <nat:336> $ are guaranteed to be even . Take note $ <nat:130> $ is guaranteed to be even . We check the expression $ <nat:416> * <var:a> + <nat:336> * <var:J> + <nat:314> * <var:b> + <nat:130> $ must be even . Recall that the summation between an even number in $ \mathbb{N} $ and an even positive integer will be even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:a> <var:b> <var:J> : nat , Nat . even ( <nat:314> * <var:b> + <nat:336> * <var:J> + <nat:416> * <var:a> + <nat:130> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:314> = true ) . { auto . } assert ( <genH> : Nat . even <nat:416> = true ) . { auto . } assert ( <genH> : Nat . even <nat:336> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:314> * <var:b> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:416> * <var:a> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:336> * <var:J> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:314> * <var:b> + <nat:336> * <var:J> + <nat:416> * <var:a> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:130> = true ) . { auto . } rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . auto . Qed . 