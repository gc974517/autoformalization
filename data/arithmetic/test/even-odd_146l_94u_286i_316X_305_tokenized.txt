\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:146> \cdot <var:l> + <nat:305> + <nat:286> \cdot <var:i> + <var:X> \cdot <nat:316> + <nat:94> \cdot <var:u> $ will be odd . \end{theorem} \begin{proof} We apply the assumption that $ <var:u> <nat:94> + <var:l> <nat:146> + <nat:286> <var:i> + <var:X> <nat:316> $ is clearly even . We know the products $ <var:u> <nat:94> $ , $ <nat:286> <var:i> $ , as well as $ <nat:316> <var:X> $ are known to be even whole numbers . This must be true from the fact multiplying of an even element of $ \mathbb{Z}^+ $ with an arbitrary number in $ \mathbb{Z}^+ $ will be even . Adding on , notice that the product $ <var:l> <nat:146> $ is known to be even . This fact is true from the fact multiplying of an even element of $ \mathbb{N} $ and a natural will be by its very nature an even whole number . Since multiplying of an even whole number and some element of $ \mathbb{N} $ must be even $ <nat:146> \cdot <var:l> + <nat:94> \cdot <var:u> + <var:i> \cdot <nat:286> + <var:X> \cdot <nat:316> $ is even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:l> <var:i> <var:X> <var:u> : nat , Nat . odd ( <nat:146> * <var:l> + <nat:286> * <var:i> + <nat:316> * <var:X> + <nat:94> * <var:u> + <nat:305> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:94> * <var:u> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:286> * <var:i> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:316> * <var:X> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:146> * <var:l> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:146> * <var:l> + <nat:286> * <var:i> + <nat:316> * <var:X> + <nat:94> * <var:u> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . auto . Qed . 