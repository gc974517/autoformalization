\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Assuming every $ <var:z> $ , $ <var:O> $ , $ <var:n> $ , $ <var:R> $ , $ <var:w> $ , and $ <var:v> \in \mathbb{Z}^+ $ $ <nat:488> * <var:R> + <nat:158> * <var:z> + <var:v> * <nat:472> + <var:O> * <nat:54> + <nat:4> * <var:n> + <nat:111> + <nat:448> * <var:w> $ is guaranteed to be odd . \end{theorem} \begin{proof} The adding between even positive integers successively and an odd number in $ \mathbb{Z}^+ $ is odd . Recall that the pairs $ <var:O> \cdot <nat:54> $ , $ <nat:472> \cdot <var:v> $ , $ <var:w> \cdot <nat:448> $ , and moreover $ <var:n> \cdot <nat:4> $ are trivially even numbers in $ \mathbb{N} $ . Adding on , see that the product $ <nat:488> \cdot <var:R> $ is clearly even . This must be true from the fact taking the product of an even element of $ \mathbb{Z}^+ $ and some positive integer must be even . The product $ <nat:158> \cdot <var:z> $ is known as even . This claim is proven because the multiplication between an even number in $ \mathbb{N} $ and an arbitrary element of $ \mathbb{N} $ will be trivially an even number in $ \mathbb{Z}^+ $ . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:z> <var:O> <var:n> <var:R> <var:w> <var:v> : nat , Nat . odd ( <nat:488> * <var:R> + <nat:158> * <var:z> + <nat:472> * <var:v> + <nat:54> * <var:O> + <nat:4> * <var:n> + <nat:448> * <var:w> + <nat:111> ) = true . Proof . intros . rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . assert ( <genH> : Nat . even ( <nat:54> * <var:O> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:472> * <var:v> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:448> * <var:w> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:4> * <var:n> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:488> * <var:R> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:158> * <var:z> ) = true ) . { rewrite Nat . even_mul . auto . } rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 