\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} For some whole numbers $ <var:p> $ , $ <var:U> $ , $ <var:V> $ , $ <var:O> $ , $ <var:v> $ , $ <var:K> $ , $ <var:i> $ , $ <var:t> $ , and $ <var:d> $ the summation $ <var:d> \times <nat:40> + <var:V> \times <nat:306> + <nat:446> \times <var:O> + <nat:50> \times <var:U> + <nat:440> \times <var:v> + <nat:82> \times <var:K> + <nat:160> \times <var:i> + <var:t> \times <nat:206> + <nat:25> + <nat:8> \times <var:p> $ is guaranteed to be odd . \end{theorem} \begin{proof} The terms $ <nat:440> \cdot <var:v> $ , $ <var:d> \cdot <nat:40> $ , $ <nat:160> \cdot <var:i> $ , and likewise $ <nat:50> \cdot <var:U> $ will be even from the fact the leading terms $ <nat:440> $ , $ <nat:40> $ , $ <nat:160> $ , and $ <nat:50> $ are trivially themselves even elements of $ \mathbb{Z}^+ $ . Furthermore , the products $ <nat:8> \cdot <var:p> $ , $ <var:K> \cdot <nat:82> $ , in addition to $ <nat:206> \cdot <var:t> $ are known as even whole numbers as a consequence that taking the product of an even natural number and a element of $ \mathbb{N} $ is even additionally the positive integers $ <nat:8> $ , $ <nat:82> $ , and likewise $ <nat:206> $ are guaranteed to be even . The leading term $ <nat:306> $ is clearly an even number . Accordingly , the product $ <var:V> \cdot <nat:306> $ must be even in addition . Observe that the product $ <nat:446> \cdot <var:O> $ is obviously even . This holds since the coefficient $ <nat:446> $ is an even element of $ \mathbb{Z}^+ $ . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:p> <var:U> <var:V> <var:O> <var:v> <var:K> <var:i> <var:t> <var:d> : nat , Nat . odd ( <nat:40> * <var:d> + <nat:306> * <var:V> + <nat:446> * <var:O> + <nat:50> * <var:U> + <nat:440> * <var:v> + <nat:82> * <var:K> + <nat:160> * <var:i> + <nat:206> * <var:t> + <nat:8> * <var:p> + <nat:25> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:440> = true ) . { auto . } assert ( <genH> : Nat . even <nat:40> = true ) . { auto . } assert ( <genH> : Nat . even <nat:160> = true ) . { auto . } assert ( <genH> : Nat . even <nat:50> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:440> * <var:v> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:40> * <var:d> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:160> * <var:i> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:50> * <var:U> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:8> = true ) . { auto . } assert ( <genH> : Nat . even <nat:82> = true ) . { auto . } assert ( <genH> : Nat . even <nat:206> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:8> * <var:p> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:82> * <var:K> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:206> * <var:t> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:306> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:306> * <var:V> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:446> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:446> * <var:O> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 