\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} With every $ <var:y> $ , $ <var:r> $ , $ <var:Y> $ , $ <var:Q> $ , and $ <var:N> \in \mathbb{Z}^+ $ the formula $ <nat:324> \cdot <var:y> + <var:Y> \cdot <nat:364> + <nat:24> \cdot <var:Q> + <nat:280> \cdot <var:N> + <var:r> \cdot <nat:208> + <nat:181> $ must be odd . \end{theorem} \begin{proof} It can be shown that this theorem is proven . Further , the coefficients $ <nat:324> $ , $ <nat:364> $ , $ <nat:24> $ , $ <nat:280> $ , $ <nat:208> $ , are even . So , the products $ <var:y> * <nat:324> $ , $ <nat:364> * <var:Y> $ , $ <var:Q> * <nat:24> $ , $ <var:N> * <nat:280> $ , $ <nat:208> * <var:r> $ , is even too . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:y> <var:r> <var:Y> <var:Q> <var:N> : nat , Nat . odd ( <nat:324> * <var:y> + <nat:364> * <var:Y> + <nat:24> * <var:Q> + <nat:280> * <var:N> + <nat:208> * <var:r> + <nat:181> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:324> = true ) . { auto . } assert ( <genH> : Nat . even <nat:364> = true ) . { auto . } assert ( <genH> : Nat . even <nat:24> = true ) . { auto . } assert ( <genH> : Nat . even <nat:280> = true ) . { auto . } assert ( <genH> : Nat . even <nat:208> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:324> * <var:y> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:364> * <var:Y> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:24> * <var:Q> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:280> * <var:N> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:208> * <var:r> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 