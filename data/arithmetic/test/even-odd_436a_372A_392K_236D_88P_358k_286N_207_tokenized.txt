\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:A> \times <nat:372> + <var:K> \times <nat:392> + <nat:88> \times <var:P> + <nat:236> \times <var:D> + <nat:286> \times <var:N> + <nat:358> \times <var:k> + <nat:207> + <var:a> \times <nat:436> $ must be odd . \end{theorem} \begin{proof} From the fact the summing between even elements of $ \mathbb{Z}^+ $ concurrently with an odd element of $ \mathbb{Z}^+ $ is odd , thus the formula $ <nat:436> * <var:a> + <nat:207> + <nat:372> * <var:A> + <nat:392> * <var:K> + <var:D> * <nat:236> + <var:P> * <nat:88> + <var:k> * <nat:358> + <var:N> * <nat:286> $ is odd . The natural numbers $ <nat:436> $ , $ <nat:372> $ , $ <nat:392> $ , $ <nat:236> $ , $ <nat:88> $ , $ <nat:358> $ , plus $ <nat:286> $ are even . Thus , the products $ <var:a> \times <nat:436> $ , $ <var:A> \times <nat:372> $ , $ <var:K> \times <nat:392> $ , $ <var:D> \times <nat:236> $ , $ <nat:88> \times <var:P> $ , $ <var:k> \times <nat:358> $ , and also $ <nat:286> \times <var:N> $ is guaranteed to be even additionally . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:A> <var:K> <var:P> <var:D> <var:N> <var:k> <var:a> : nat , Nat . odd ( <nat:372> * <var:A> + <nat:392> * <var:K> + <nat:88> * <var:P> + <nat:236> * <var:D> + <nat:286> * <var:N> + <nat:358> * <var:k> + <nat:436> * <var:a> + <nat:207> ) = true . Proof . intros . rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . assert ( <genH> : Nat . even <nat:436> = true ) . { auto . } assert ( <genH> : Nat . even <nat:372> = true ) . { auto . } assert ( <genH> : Nat . even <nat:392> = true ) . { auto . } assert ( <genH> : Nat . even <nat:236> = true ) . { auto . } assert ( <genH> : Nat . even <nat:88> = true ) . { auto . } assert ( <genH> : Nat . even <nat:358> = true ) . { auto . } assert ( <genH> : Nat . even <nat:286> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:436> * <var:a> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:372> * <var:A> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:392> * <var:K> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:236> * <var:D> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:88> * <var:P> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:358> * <var:k> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:286> * <var:N> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 