\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:M> * <nat:22> + <nat:218> * <var:O> + <var:s> * <nat:264> + <nat:176> * <var:N> + <var:z> * <nat:38> + <nat:253> + <nat:242> * <var:E> + <nat:234> * <var:n> $ will be odd for some positive integers $ <var:N> $ , $ <var:O> $ , $ <var:E> $ , $ <var:z> $ , $ <var:n> $ , $ <var:s> $ , and $ <var:M> $ . \end{theorem} \begin{proof} Observe that the terms $ <var:z> <nat:38> $ , $ <nat:176> <var:N> $ , and also $ <nat:218> <var:O> $ are clearly even natural numbers by reason that the multiplication between an even number and some number in $ \mathbb{Z}^+ $ will be an even number in $ \mathbb{Z}^+ $ . The pair $ <var:E> <nat:242> $ is even from the fact taking the product between an even positive integer and some number is guaranteed to be even . Further , take note $ <nat:22> <var:M> $ is obviously even . Observe that the pair $ <var:s> <nat:264> $ is even from the fact multiplying of an even natural with some element of $ \mathbb{N} $ is guaranteed to be even . Notice that the product $ <nat:234> <var:n> $ is trivially an even natural . This is proven from the knowledge the product between an even whole number with some number in $ \mathbb{N} $ is even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:N> <var:O> <var:E> <var:z> <var:n> <var:s> <var:M> : nat , Nat . odd ( <nat:22> * <var:M> + <nat:218> * <var:O> + <nat:264> * <var:s> + <nat:176> * <var:N> + <nat:38> * <var:z> + <nat:242> * <var:E> + <nat:234> * <var:n> + <nat:253> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:38> * <var:z> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:176> * <var:N> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:218> * <var:O> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:242> * <var:E> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:22> * <var:M> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:264> * <var:s> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:234> * <var:n> ) = true ) . { rewrite Nat . even_mul . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 