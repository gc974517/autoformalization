\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:44> * <var:W> + <nat:342> * <var:V> + <nat:376> * <var:F> + <nat:442> * <var:b> + <var:k> * <nat:6> + <var:X> * <nat:136> + <var:f> * <nat:478> + <nat:108> * <var:r> + <var:u> * <nat:430> + <nat:332> + <nat:338> * <var:G> + <var:s> * <nat:130> $ must be even assuming terms $ <var:s> $ , $ <var:b> $ , $ <var:r> $ , $ <var:u> $ , $ <var:G> $ , $ <var:k> $ , $ <var:f> $ , $ <var:X> $ , $ <var:W> $ , $ <var:F> $ , and $ <var:V> $ . \end{theorem} \begin{proof} The products $ <var:W> <nat:44> $ , $ <var:V> <nat:342> $ , $ <nat:376> <var:F> $ , $ <var:b> <nat:442> $ , $ <nat:6> <var:k> $ , $ <var:X> <nat:136> $ , $ <var:f> <nat:478> $ , $ <nat:108> <var:r> $ , $ <nat:430> <var:u> $ , $ <nat:338> <var:G> $ , and also $ <var:s> <nat:130> $ are even from the knowledge the product between an even natural and any element of $ \mathbb{N} $ is guaranteed to be an even natural and likewise the integers $ <nat:44> $ , $ <nat:342> $ , $ <nat:376> $ , $ <nat:442> $ , $ <nat:6> $ , $ <nat:136> $ , $ <nat:478> $ , $ <nat:108> $ , $ <nat:430> $ , $ <nat:338> $ , and moreover $ <nat:130> $ will be even . Remember $ <nat:332> $ is obviously even . The summation between even elements of $ \mathbb{Z}^+ $ together is trivially an even number in $ \mathbb{Z}^+ $ . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:s> <var:b> <var:r> <var:u> <var:G> <var:k> <var:f> <var:X> <var:W> <var:F> <var:V> : nat , Nat . even ( <nat:44> * <var:W> + <nat:342> * <var:V> + <nat:376> * <var:F> + <nat:442> * <var:b> + <nat:6> * <var:k> + <nat:136> * <var:X> + <nat:478> * <var:f> + <nat:108> * <var:r> + <nat:430> * <var:u> + <nat:338> * <var:G> + <nat:130> * <var:s> + <nat:332> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:44> = true ) . { auto . } assert ( <genH> : Nat . even <nat:342> = true ) . { auto . } assert ( <genH> : Nat . even <nat:376> = true ) . { auto . } assert ( <genH> : Nat . even <nat:442> = true ) . { auto . } assert ( <genH> : Nat . even <nat:6> = true ) . { auto . } assert ( <genH> : Nat . even <nat:136> = true ) . { auto . } assert ( <genH> : Nat . even <nat:478> = true ) . { auto . } assert ( <genH> : Nat . even <nat:108> = true ) . { auto . } assert ( <genH> : Nat . even <nat:430> = true ) . { auto . } assert ( <genH> : Nat . even <nat:338> = true ) . { auto . } assert ( <genH> : Nat . even <nat:130> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:44> * <var:W> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:342> * <var:V> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:376> * <var:F> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:442> * <var:b> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:6> * <var:k> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:136> * <var:X> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:478> * <var:f> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:108> * <var:r> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:430> * <var:u> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:338> * <var:G> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:130> * <var:s> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:332> = true ) . { auto . } repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 