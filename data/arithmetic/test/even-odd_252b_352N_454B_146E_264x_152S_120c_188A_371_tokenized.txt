\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:371> + <nat:252> \times <var:b> + <nat:352> \times <var:N> + <nat:454> \times <var:B> + <var:E> \times <nat:146> + <var:x> \times <nat:264> + <var:S> \times <nat:152> + <nat:120> \times <var:c> + <nat:188> \times <var:A> $ will be odd with all positive integers $ <var:N> $ , $ <var:b> $ , $ <var:E> $ , $ <var:S> $ , $ <var:B> $ , $ <var:A> $ , $ <var:x> $ , and $ <var:c> $ . \end{theorem} \begin{proof} It can be proven that the claim must be true . Recall $ <nat:371> $ is known to be an odd whole number . The terms $ <var:A> <nat:188> $ , $ <nat:120> <var:c> $ , $ <nat:352> <var:N> $ , $ <var:B> <nat:454> $ , $ <nat:152> <var:S> $ , and moreover $ <var:E> <nat:146> $ will be even . What's more , recall the pair $ <var:x> <nat:264> $ is known as even . We know that $ <nat:252> <var:b> $ is known to be an even element of $ \mathbb{Z}^+ $ . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:N> <var:b> <var:E> <var:S> <var:B> <var:A> <var:x> <var:c> : nat , Nat . odd ( <nat:252> * <var:b> + <nat:352> * <var:N> + <nat:454> * <var:B> + <nat:146> * <var:E> + <nat:264> * <var:x> + <nat:152> * <var:S> + <nat:120> * <var:c> + <nat:188> * <var:A> + <nat:371> ) = true . Proof . intros . assert ( <genH> : Nat . odd <nat:371> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:188> * <var:A> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:120> * <var:c> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:352> * <var:N> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:454> * <var:B> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:152> * <var:S> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:146> * <var:E> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:264> * <var:x> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:252> * <var:b> ) = true ) . { rewrite Nat . even_mul . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 