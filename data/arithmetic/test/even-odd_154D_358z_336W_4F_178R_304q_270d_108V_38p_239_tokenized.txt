\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:358> \cdot <var:z> + <var:F> \cdot <nat:4> + <nat:108> \cdot <var:V> + <nat:239> + <var:q> \cdot <nat:304> + <nat:336> \cdot <var:W> + <nat:38> \cdot <var:p> + <nat:270> \cdot <var:d> + <var:R> \cdot <nat:178> + <var:D> \cdot <nat:154> $ is odd . \end{theorem} \begin{proof} The addition of an even positive integer with an odd element of $ \mathbb{Z}^+ $ must be odd . Notice that $ <nat:239> $ is clearly an odd number . Take note that the product $ <var:D> * <nat:154> $ is trivially an even number by reason that the natural number $ <nat:154> $ is an even whole number . Recall that the whole number $ <nat:358> $ is clearly an even number . Accordingly , the term $ <nat:358> * <var:z> $ is guaranteed to be even also . Furthermore , remember the product $ <nat:336> * <var:W> $ is clearly an even element of $ \mathbb{N} $ . This holds since multiplying of an even number with an arbitrary number in $ \mathbb{N} $ must be even plus the leading term $ <nat:336> $ is guaranteed to be even . Likewise , remember that the term $ <nat:4> * <var:F> $ is even . This is true as a consequence that the product of an even element of $ \mathbb{Z}^+ $ and an arbitrary element of $ \mathbb{Z}^+ $ will be even and the whole number $ <nat:4> $ is guaranteed to be even . Notice that the coefficient $ <nat:178> $ is an even whole number . As a consequence , $ <var:R> * <nat:178> $ is even in addition . In addition , the integer $ <nat:304> $ is known as an even element of $ \mathbb{N} $ . Thus , the pair $ <nat:304> * <var:q> $ must be even in addition . Take note the product $ <var:d> * <nat:270> $ is known to be an even element of $ \mathbb{Z}^+ $ because the positive integer $ <nat:270> $ is trivially even . In addition to this , notice that the number $ <nat:108> $ is guaranteed to be even . Accordingly , the product $ <nat:108> * <var:V> $ must be even too . The term $ <nat:38> * <var:p> $ is obviously an even positive integer . This is proven from the fact the integer $ <nat:38> $ is trivially an even integer . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:z> <var:F> <var:V> <var:q> <var:W> <var:p> <var:d> <var:R> <var:D> : nat , Nat . odd ( <nat:358> * <var:z> + <nat:4> * <var:F> + <nat:108> * <var:V> + <nat:304> * <var:q> + <nat:336> * <var:W> + <nat:38> * <var:p> + <nat:270> * <var:d> + <nat:178> * <var:R> + <nat:154> * <var:D> + <nat:239> ) = true . Proof . intros . rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . assert ( <genH> : Nat . odd <nat:239> = true ) . { auto . } assert ( <genH> : Nat . even <nat:154> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:154> * <var:D> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:358> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:358> * <var:z> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:336> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:336> * <var:W> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:4> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:4> * <var:F> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:178> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:178> * <var:R> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:304> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:304> * <var:q> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:270> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:270> * <var:d> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:108> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:108> * <var:V> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:38> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:38> * <var:p> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 