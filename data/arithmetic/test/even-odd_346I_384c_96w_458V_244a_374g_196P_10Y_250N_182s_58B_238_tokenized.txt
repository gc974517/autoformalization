\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:96> <var:w> + <nat:250> <var:N> + <nat:238> + <nat:374> <var:g> + <nat:244> <var:a> + <nat:458> <var:V> + <var:B> <nat:58> + <nat:182> <var:s> + <nat:346> <var:I> + <nat:384> <var:c> + <nat:196> <var:P> + <nat:10> <var:Y> $ will be even . \end{theorem} \begin{proof} We prove the formula $ <nat:346> <var:I> + <nat:384> <var:c> + <var:w> <nat:96> + <nat:238> + <nat:458> <var:V> + <var:a> <nat:244> + <var:g> <nat:374> + <var:P> <nat:196> + <var:Y> <nat:10> + <nat:250> <var:N> + <var:s> <nat:182> + <nat:58> <var:B> $ must be even . In addition to this , take note the numbers $ <nat:346> $ , $ <nat:384> $ , $ <nat:96> $ , $ <nat:458> $ , $ <nat:244> $ , $ <nat:374> $ , $ <nat:196> $ , $ <nat:10> $ , $ <nat:250> $ , $ <nat:182> $ , and $ <nat:58> $ are guaranteed to be even integers . For this reason , the products $ <nat:346> <var:I> $ , $ <var:c> <nat:384> $ , $ <var:w> <nat:96> $ , $ <nat:458> <var:V> $ , $ <var:a> <nat:244> $ , $ <nat:374> <var:g> $ , $ <nat:196> <var:P> $ , $ <var:Y> <nat:10> $ , $ <var:N> <nat:250> $ , $ <var:s> <nat:182> $ , and moreover $ <var:B> <nat:58> $ must be even in addition . The summing of even whole numbers concurrently and an even positive integer must be even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:w> <var:N> <var:g> <var:a> <var:V> <var:B> <var:s> <var:I> <var:c> <var:P> <var:Y> : nat , Nat . even ( <nat:96> * <var:w> + <nat:250> * <var:N> + <nat:374> * <var:g> + <nat:244> * <var:a> + <nat:458> * <var:V> + <nat:58> * <var:B> + <nat:182> * <var:s> + <nat:346> * <var:I> + <nat:384> * <var:c> + <nat:196> * <var:P> + <nat:10> * <var:Y> + <nat:238> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:346> = true ) . { auto . } assert ( <genH> : Nat . even <nat:384> = true ) . { auto . } assert ( <genH> : Nat . even <nat:96> = true ) . { auto . } assert ( <genH> : Nat . even <nat:458> = true ) . { auto . } assert ( <genH> : Nat . even <nat:244> = true ) . { auto . } assert ( <genH> : Nat . even <nat:374> = true ) . { auto . } assert ( <genH> : Nat . even <nat:196> = true ) . { auto . } assert ( <genH> : Nat . even <nat:10> = true ) . { auto . } assert ( <genH> : Nat . even <nat:250> = true ) . { auto . } assert ( <genH> : Nat . even <nat:182> = true ) . { auto . } assert ( <genH> : Nat . even <nat:58> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:346> * <var:I> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:384> * <var:c> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:96> * <var:w> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:458> * <var:V> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:244> * <var:a> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:374> * <var:g> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:196> * <var:P> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:10> * <var:Y> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:250> * <var:N> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:182> * <var:s> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:58> * <var:B> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 