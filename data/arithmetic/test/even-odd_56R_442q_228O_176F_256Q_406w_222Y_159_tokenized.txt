\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Using every natural terms $ <var:R> $ , $ <var:O> $ , $ <var:F> $ , $ <var:q> $ , $ <var:Y> $ , $ <var:w> $ , and $ <var:Q> $ the expression $ <var:Q> * <nat:256> + <var:w> * <nat:406> + <nat:56> * <var:R> + <nat:176> * <var:F> + <var:O> * <nat:228> + <nat:159> + <nat:222> * <var:Y> + <var:q> * <nat:442> $ will be odd . \end{theorem} \begin{proof} See that the adding between even natural numbers successively and an odd positive integer is guaranteed to be an odd integer . It can be proven that $ <var:O> <nat:228> + <nat:56> <var:R> + <var:q> <nat:442> + <nat:222> <var:Y> + <nat:159> + <var:F> <nat:176> + <nat:406> <var:w> + <nat:256> <var:Q> $ is known to be odd from the knowledge the formula $ <nat:222> \cdot <var:Y> + <nat:228> \cdot <var:O> + <var:Q> \cdot <nat:256> + <nat:176> \cdot <var:F> + <nat:56> \cdot <var:R> + <var:q> \cdot <nat:442> + <var:w> \cdot <nat:406> $ is known to be even . Our result is proven from the knowledge the addition between an even natural number and even naturals must be even and moreover by reason that multiplying of an even whole number and any natural number must be even . We justify the formula $ <nat:56> \cdot <var:R> + <var:q> \cdot <nat:442> + <nat:228> \cdot <var:O> + <var:F> \cdot <nat:176> + <nat:159> + <var:Q> \cdot <nat:256> + <var:w> \cdot <nat:406> + <nat:222> \cdot <var:Y> $ will be odd . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:R> <var:O> <var:F> <var:q> <var:Y> <var:w> <var:Q> : nat , Nat . odd ( <nat:256> * <var:Q> + <nat:406> * <var:w> + <nat:56> * <var:R> + <nat:176> * <var:F> + <nat:228> * <var:O> + <nat:222> * <var:Y> + <nat:442> * <var:q> + <nat:159> ) = true . Proof . intros . rewrite Nat . odd_add . assert ( <genH> : Nat . even ( <nat:256> * <var:Q> + <nat:406> * <var:w> + <nat:56> * <var:R> + <nat:176> * <var:F> + <nat:228> * <var:O> + <nat:222> * <var:Y> + <nat:442> * <var:q> ) = true ) . { repeat rewrite Nat . even_add . repeat rewrite Nat . even_mul . auto . } rewrite <- Nat . negb_even . rewrite <genH> . auto . Qed . 