\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:84> \times <var:E> + <nat:204> \times <var:q> + <nat:235> + <nat:48> \times <var:X> + <nat:308> \times <var:D> + <nat:144> \times <var:Y> + <var:c> \times <nat:210> + <var:o> \times <nat:18> $ is guaranteed to be odd given every $ <var:o> $ , $ <var:X> $ , $ <var:E> $ , $ <var:Y> $ , $ <var:D> $ , $ <var:c> $ , and $ <var:q> \in \mathbb{N} $ . \end{theorem} \begin{proof} $ <nat:308> * <var:D> + <nat:48> * <var:X> + <nat:204> * <var:q> + <nat:84> * <var:E> + <var:c> * <nat:210> + <nat:18> * <var:o> + <var:Y> * <nat:144> $ is known as even . Remember the natural numbers $ <nat:210> $ , $ <nat:144> $ , $ <nat:204> $ , in addition to $ <nat:48> $ are clearly even Remember that the number $ <nat:308> $ is known as an even natural number Further , the coefficient $ <nat:84> $ is clearly even Notice that the integer $ <nat:18> $ is known as even From the fact the addition between an even whole number and an even number in $ \mathbb{N} $ is guaranteed to be an even number in $ \mathbb{N} $ , the expression $ <var:q> * <nat:204> + <var:D> * <nat:308> + <var:E> * <nat:84> + <var:Y> * <nat:144> + <nat:210> * <var:c> + <var:o> * <nat:18> + <var:X> * <nat:48> $ will be by definition even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:o> <var:X> <var:E> <var:Y> <var:D> <var:c> <var:q> : nat , Nat . odd ( <nat:84> * <var:E> + <nat:204> * <var:q> + <nat:48> * <var:X> + <nat:308> * <var:D> + <nat:144> * <var:Y> + <nat:210> * <var:c> + <nat:18> * <var:o> + <nat:235> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:210> = true ) . { auto . } assert ( <genH> : Nat . even <nat:144> = true ) . { auto . } assert ( <genH> : Nat . even <nat:204> = true ) . { auto . } assert ( <genH> : Nat . even <nat:48> = true ) . { auto . } assert ( <genH> : Nat . even <nat:308> = true ) . { auto . } assert ( <genH> : Nat . even <nat:84> = true ) . { auto . } assert ( <genH> : Nat . even <nat:18> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:84> * <var:E> + <nat:204> * <var:q> + <nat:48> * <var:X> + <nat:308> * <var:D> + <nat:144> * <var:Y> + <nat:210> * <var:c> + <nat:18> * <var:o> ) = true ) . { repeat rewrite Nat . even_add . repeat rewrite Nat . even_mul . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . auto . Qed . 