\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:f> \times <nat:340> + <var:a> \times <nat:226> + <nat:296> \times <var:m> + <var:i> \times <nat:326> + <nat:278> \times <var:R> + <nat:330> \times <var:J> + <nat:348> \times <var:S> + <nat:193> + <nat:70> \times <var:Q> + <nat:24> \times <var:e> $ must be odd given unknowns $ <var:S> $ , $ <var:R> $ , $ <var:a> $ , $ <var:Q> $ , $ <var:J> $ , $ <var:m> $ , $ <var:e> $ , $ <var:f> $ , and $ <var:i> $ . \end{theorem} \begin{proof} From the knowledge the summation between an even element of $ \mathbb{N} $ and an odd number is guaranteed to be trivially an odd integer , as a result $ <nat:24> <var:e> + <var:S> <nat:348> + <nat:226> <var:a> + <nat:278> <var:R> + <nat:296> <var:m> + <var:Q> <nat:70> + <var:J> <nat:330> + <nat:326> <var:i> + <nat:340> <var:f> + <nat:193> $ is odd . $ <nat:340> * <var:f> + <nat:70> * <var:Q> + <var:m> * <nat:296> + <var:i> * <nat:326> + <nat:24> * <var:e> + <nat:226> * <var:a> + <nat:193> + <var:S> * <nat:348> + <nat:278> * <var:R> + <nat:330> * <var:J> $ is clearly odd as a consequence that the expression $ <var:m> \cdot <nat:296> + <var:R> \cdot <nat:278> + <nat:326> \cdot <var:i> + <var:a> \cdot <nat:226> + <var:Q> \cdot <nat:70> + <nat:24> \cdot <var:e> + <var:f> \cdot <nat:340> + <nat:348> \cdot <var:S> + <nat:330> \cdot <var:J> $ is known to be even . We know that the products $ <var:i> \times <nat:326> $ , $ <var:R> \times <nat:278> $ , $ <nat:340> \times <var:f> $ , $ <nat:296> \times <var:m> $ , $ <nat:24> \times <var:e> $ , as well as $ <var:J> \times <nat:330> $ are trivially even . Additionally , take note that $ <nat:70> \times <var:Q> $ is an even whole number . See that the product $ <nat:348> \times <var:S> $ is known to be an even integer from the fact taking the product between an even natural with any element of $ \mathbb{N} $ will be even . In addition , the product $ <var:a> \times <nat:226> $ is obviously an even element of $ \mathbb{Z}^+ $ . The expression $ <nat:330> \times <var:J> + <var:e> \times <nat:24> + <nat:348> \times <var:S> + <nat:340> \times <var:f> + <nat:226> \times <var:a> + <nat:278> \times <var:R> + <nat:70> \times <var:Q> + <nat:296> \times <var:m> + <nat:326> \times <var:i> $ is guaranteed to be even since taking the product of an even integer and an arbitrary element of $ \mathbb{Z}^+ $ is even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:S> <var:R> <var:a> <var:Q> <var:J> <var:m> <var:e> <var:f> <var:i> : nat , Nat . odd ( <nat:340> * <var:f> + <nat:226> * <var:a> + <nat:296> * <var:m> + <nat:326> * <var:i> + <nat:278> * <var:R> + <nat:330> * <var:J> + <nat:348> * <var:S> + <nat:70> * <var:Q> + <nat:24> * <var:e> + <nat:193> ) = true . Proof . intros . rewrite Nat . odd_add . assert ( <genH> : Nat . even ( <nat:326> * <var:i> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:278> * <var:R> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:340> * <var:f> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:296> * <var:m> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:24> * <var:e> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:330> * <var:J> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:70> * <var:Q> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:348> * <var:S> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:226> * <var:a> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:340> * <var:f> + <nat:226> * <var:a> + <nat:296> * <var:m> + <nat:326> * <var:i> + <nat:278> * <var:R> + <nat:330> * <var:J> + <nat:348> * <var:S> + <nat:70> * <var:Q> + <nat:24> * <var:e> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite <- Nat . negb_even . rewrite <genH> . auto . Qed . 