\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:N> \cdot <nat:452> + <nat:376> \cdot <var:c> + <var:A> \cdot <nat:118> + <var:U> \cdot <nat:442> + <var:M> \cdot <nat:382> + <var:Q> \cdot <nat:82> + <var:n> \cdot <nat:352> + <nat:306> \cdot <var:h> + <nat:205> + <var:r> \cdot <nat:198> $ is odd . \end{theorem} \begin{proof} Recall that the summation of an even element of $ \mathbb{N} $ with an odd element of $ \mathbb{N} $ must be odd . The pairs $ <nat:198> \cdot <var:r> $ , $ <nat:382> \cdot <var:M> $ , and moreover $ <var:Q> \cdot <nat:82> $ must be even integers because multiplying between an even number in $ \mathbb{Z}^+ $ and any element of $ \mathbb{Z}^+ $ will be even . Notice the products $ <var:A> \cdot <nat:118> $ , $ <var:h> \cdot <nat:306> $ , $ <nat:442> \cdot <var:U> $ , $ <nat:352> \cdot <var:n> $ , and also $ <nat:452> \cdot <var:N> $ are trivially even . Adding on , the product $ <var:c> \cdot <nat:376> $ is known to be even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:N> <var:c> <var:A> <var:U> <var:M> <var:Q> <var:n> <var:h> <var:r> : nat , Nat . odd ( <nat:452> * <var:N> + <nat:376> * <var:c> + <nat:118> * <var:A> + <nat:442> * <var:U> + <nat:382> * <var:M> + <nat:82> * <var:Q> + <nat:352> * <var:n> + <nat:306> * <var:h> + <nat:198> * <var:r> + <nat:205> ) = true . Proof . intros . rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . assert ( <genH> : Nat . even ( <nat:198> * <var:r> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:382> * <var:M> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:82> * <var:Q> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:118> * <var:A> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:306> * <var:h> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:442> * <var:U> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:352> * <var:n> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:452> * <var:N> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:376> * <var:c> ) = true ) . { rewrite Nat . even_mul . auto . } rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 