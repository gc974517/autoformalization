\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Denote that wherever there are positive integers $ <var:c> $ , $ <var:t> $ , $ <var:h> $ , $ <var:s> $ , $ <var:K> $ , $ <var:j> $ , $ <var:m> $ denote that some integer $ <var:G> $ will be considered a <def:seven-composite> number if $ <var:h> * <var:t> * <var:s> * <var:m> * <var:K> * <var:j> * <var:c> = <var:G> $ as well as where $ <var:j> $ , $ <var:s> $ , $ <var:t> $ , $ <var:h> $ , $ <var:K> $ , $ <var:c> $ , $ <var:m> \geq <nat:2> $ . For this reason $ <var:G> = <nat:57600> $ is <def:seven-composite> . \end{theorem} \begin{proof} Recall a <def:seven-composite> whole number is the product between whole numbers $ <var:K> $ , $ <var:s> $ , $ <var:j> $ , $ <var:c> $ , $ <var:m> $ , $ <var:t> $ , and $ <var:h> $ such that $ <var:j> $ , $ <var:c> $ , $ <var:m> $ , $ <var:K> $ , $ <var:s> $ , $ <var:h> $ and $ <var:t> \geq <nat:2> $ . Note that $ <nat:4> $ , $ <nat:2> $ , $ <nat:6> $ , $ <nat:5> $ , $ <nat:3> $ , $ <nat:10> $ , $ <nat:8> $ are more than or equivalent to <nat:2> . Furthermore observe further $ <nat:57600> = <nat:6> \times <nat:10> \times <nat:8> \times <nat:4> \times <nat:5> \times <nat:3> \times <nat:2> $ . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:seven-composite> ( <var:G> : nat ) := exists <var:c> <var:t> <var:h> <var:s> <var:K> <var:j> <var:m> : nat , ( <var:h> * <var:t> * <var:s> * <var:m> * <var:K> * <var:j> * <var:c> = <var:G> ) /\ ( <var:j> >= <nat:2> ) /\ ( <var:s> >= <nat:2> ) /\ ( <var:t> >= <nat:2> ) /\ ( <var:h> >= <nat:2> ) /\ ( <var:K> >= <nat:2> ) /\ ( <var:c> >= <nat:2> ) /\ ( <var:m> >= <nat:2> ) . Theorem <genP:1> : <def:seven-composite> <nat:57600> . Proof . unfold <def:seven-composite> . assert ( <genH> : <nat:4> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:2> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:6> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:5> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:3> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:10> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:8> >= <nat:2> ) . { lia . } exists <nat:10> . exists <nat:5> . exists <nat:2> . exists <nat:8> . exists <nat:4> . exists <nat:6> . exists <nat:3> . repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 