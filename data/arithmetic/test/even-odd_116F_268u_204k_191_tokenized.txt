\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Given some $ <var:u> $ , $ <var:k> $ , and $ <var:F> \in \mathbb{Z}^+ $ $ <nat:116> * <var:F> + <nat:268> * <var:u> + <nat:191> + <nat:204> * <var:k> $ is guaranteed to be odd . \end{theorem} \begin{proof} Remember that the sum $ <nat:191> + <var:k> \cdot <nat:204> + <var:F> \cdot <nat:116> + <var:u> \cdot <nat:268> $ is known as odd from the fact the formula $ <var:k> * <nat:204> + <nat:268> * <var:u> + <var:F> * <nat:116> $ is trivially even . Remember that the pairs $ <nat:268> \cdot <var:u> $ additionally $ <var:k> \cdot <nat:204> $ are even . Observe $ <var:F> \cdot <nat:116> $ is obviously even . This fact must be true from the fact multiplying of an even positive integer and any number is guaranteed to be even . Because the product between an even number with any natural number must be obviously an even natural number the main result holds . Observe $ <nat:191> $ is obviously an odd positive integer . It can be verified that the formula $ <var:F> \times <nat:116> + <nat:268> \times <var:u> + <var:k> \times <nat:204> + <nat:191> $ is odd . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:u> <var:k> <var:F> : nat , Nat . odd ( <nat:116> * <var:F> + <nat:268> * <var:u> + <nat:204> * <var:k> + <nat:191> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:268> * <var:u> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:204> * <var:k> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:116> * <var:F> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:116> * <var:F> + <nat:268> * <var:u> + <nat:204> * <var:k> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } assert ( <genH> : Nat . odd <nat:191> = true ) . { auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . rewrite <genH> . auto . Qed . 