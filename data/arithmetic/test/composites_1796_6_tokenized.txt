\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \newtheorem{definition}{Definition} \begin{document} \begin{definition} Let $ <var:u> $ , $ <var:e> $ , $ <var:w> $ , $ <var:I> $ , $ <var:M> $ , $ <var:f> \in \mathbb{N} $ more than <nat:1> . We say that $ <var:y> \in \mathbb{Z}^+ $ is a <def:six-composite> whole number if $ <var:y> = <var:f> * <var:u> * <var:w> * <var:M> * <var:I> * <var:e> $ . \end{definition} \begin{theorem} The natural number <nat:16380> is a <def:six-composite> natural number . \end{theorem} \begin{proof} Assume $ <var:u> = <nat:6> $ , $ <var:w> = <nat:3> $ , $ <var:I> = <nat:13> $ , $ <var:M> = <nat:7> $ , $ <var:e> = <nat:5> $ , and $ <var:f> = <nat:2> $ . Note that $ <var:M> = <nat:7> $ , $ <var:f> = <nat:2> $ , $ <var:w> = <nat:3> $ , $ <var:e> = <nat:5> $ , $ <var:u> = <nat:6> $ and $ <var:I> = <nat:13> > <nat:1> $ . Also note that as well $ <nat:16380> = <var:I> \times <var:e> \times <var:M> \times <var:u> \times <var:f> \times <var:w> $ . Because of this , $ <var:f> \times <var:w> \times <var:u> \times <var:I> \times <var:e> \times <var:M> = <nat:16380> $ is validated . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:six-composite> ( <var:y> : nat ) := exists <var:u> <var:e> <var:w> <var:I> <var:M> <var:f> : nat , ( <var:u> > <nat:1> ) /\ ( <var:e> > <nat:1> ) /\ ( <var:w> > <nat:1> ) /\ ( <var:I> > <nat:1> ) /\ ( <var:M> > <nat:1> ) /\ ( <var:f> > <nat:1> ) /\ ( <var:y> = <var:f> * <var:u> * <var:w> * <var:M> * <var:I> * <var:e> ) . Theorem <genP:1> : <def:six-composite> <nat:16380> . Proof . unfold <def:six-composite> . exists <nat:6> . exists <nat:5> . exists <nat:3> . exists <nat:13> . exists <nat:7> . exists <nat:2> . assert ( <genH> : <nat:7> > <nat:1> ) . { lia . } assert ( <genH> : <nat:2> > <nat:1> ) . { lia . } assert ( <genH> : <nat:3> > <nat:1> ) . { lia . } assert ( <genH> : <nat:5> > <nat:1> ) . { lia . } assert ( <genH> : <nat:6> > <nat:1> ) . { lia . } assert ( <genH> : <nat:13> > <nat:1> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 