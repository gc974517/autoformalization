\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:q> \times <nat:344> + <nat:22> \times <var:G> + <nat:488> \times <var:t> + <nat:387> + <nat:28> \times <var:S> $ will be odd . \end{theorem} \begin{proof} Take note $ <var:G> * <nat:22> + <var:S> * <nat:28> + <nat:344> * <var:q> + <nat:488> * <var:t> $ is known as even . The pairs $ <var:q> * <nat:344> $ , $ <nat:22> * <var:G> $ , additionally $ <nat:488> * <var:t> $ are obviously even from the fact taking the product between an even number with any positive integer must be an even natural . This must be true as a consequence that the integers $ <nat:344> $ , $ <nat:22> $ , and moreover $ <nat:488> $ are trivially by their very nature even numbers in $ \mathbb{Z}^+ $ . In addition , take note the pair $ <var:S> * <nat:28> $ is guaranteed to be even . This claim must be true from the fact multiplying between an even number and a number will be an even number in $ \mathbb{N} $ . This fact holds by reason that the leading term $ <nat:28> $ is obviously an even element of $ \mathbb{N} $ . As a consequence that the addition between an even number in $ \mathbb{Z}^+ $ and even natural numbers must be an even number , and likewise as a consequence that the multiplication of an even integer and any number in $ \mathbb{N} $ is even . Because the summation of an even number in $ \mathbb{Z}^+ $ with an odd element of $ \mathbb{Z}^+ $ will be an odd number in $ \mathbb{N} $ , the proposition is true . Remember that $ <nat:387> $ is obviously odd . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:q> <var:G> <var:t> <var:S> : nat , Nat . odd ( <nat:344> * <var:q> + <nat:22> * <var:G> + <nat:488> * <var:t> + <nat:28> * <var:S> + <nat:387> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:344> = true ) . { auto . } assert ( <genH> : Nat . even <nat:22> = true ) . { auto . } assert ( <genH> : Nat . even <nat:488> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:344> * <var:q> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:22> * <var:G> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:488> * <var:t> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:28> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:28> * <var:S> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:344> * <var:q> + <nat:22> * <var:G> + <nat:488> * <var:t> + <nat:28> * <var:S> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . assert ( <genH> : Nat . odd <nat:387> = true ) . { auto . } rewrite <- Nat . negb_even . rewrite <genH> . rewrite <genH> . auto . Qed . 