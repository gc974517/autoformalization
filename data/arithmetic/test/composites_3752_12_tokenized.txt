\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \newtheorem{definition}{Definition} \begin{document} \begin{definition} Given there exist $ <var:F> $ , $ <var:M> $ , $ <var:s> $ , $ <var:t> $ , $ <var:O> $ , $ <var:I> $ , $ <var:z> $ , $ <var:j> $ , $ <var:D> $ , $ <var:v> $ , $ <var:K> $ , $ <var:B> \in \mathbb{N} $ then we define that some positive integer $ <var:J> $ is defined as a <def:twelve-composite> positive integer when $ <var:v> * <var:K> * <var:z> * <var:F> * <var:M> * <var:t> * <var:D> * <var:s> * <var:B> * <var:j> * <var:O> * <var:I> = <var:J> $ . \end{definition} \begin{theorem} The positive integer <nat:6227020800> is a <def:twelve-composite> positive integer . \end{theorem} \begin{proof} Recall <nat:6227020800> is a <def:twelve-composite> positive integer assuming that <nat:6227020800> is the multiplication of natural numbers $ <var:O> $ , $ <var:I> $ , $ <var:z> $ , $ <var:B> $ , $ <var:K> $ , $ <var:v> $ , $ <var:D> $ , $ <var:F> $ , $ <var:t> $ , $ <var:j> $ , $ <var:M> $ and $ <var:s> $ greater than <nat:1> . Let $ <var:s> = <nat:3> $ , $ <var:F> = <nat:2> $ , $ <var:v> = <nat:10> $ , $ <var:I> = <nat:13> $ , $ <var:D> = <nat:7> $ , $ <var:M> = <nat:8> $ , $ <var:t> = <nat:4> $ , $ <var:O> = <nat:9> $ , $ <var:z> = <nat:12> $ , $ <var:K> = <nat:11> $ , $ <var:j> = <nat:6> $ , $ <var:B> = <nat:5> $ . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:twelve-composite> ( <var:J> : nat ) := exists <var:F> <var:M> <var:s> <var:t> <var:O> <var:I> <var:z> <var:j> <var:D> <var:v> <var:K> <var:B> : nat , ( <var:v> * <var:K> * <var:z> * <var:F> * <var:M> * <var:t> * <var:D> * <var:s> * <var:B> * <var:j> * <var:O> * <var:I> = <var:J> ) . Theorem <genP:1> : <def:twelve-composite> <nat:6227020800> . Proof . unfold <def:twelve-composite> . exists <nat:2> . exists <nat:8> . exists <nat:3> . exists <nat:4> . exists <nat:9> . exists <nat:13> . exists <nat:12> . exists <nat:6> . exists <nat:7> . exists <nat:10> . exists <nat:11> . exists <nat:5> . repeat split . all : lia . Qed . 