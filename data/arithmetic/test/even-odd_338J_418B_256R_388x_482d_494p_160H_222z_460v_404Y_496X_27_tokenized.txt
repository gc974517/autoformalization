\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:404> \cdot <var:Y> + <var:B> \cdot <nat:418> + <var:X> \cdot <nat:496> + <var:x> \cdot <nat:388> + <nat:338> \cdot <var:J> + <var:v> \cdot <nat:460> + <var:H> \cdot <nat:160> + <var:d> \cdot <nat:482> + <var:z> \cdot <nat:222> + <var:p> \cdot <nat:494> + <nat:256> \cdot <var:R> + <nat:27> $ will be odd assuming all $ <var:R> $ , $ <var:p> $ , $ <var:x> $ , $ <var:v> $ , $ <var:B> $ , $ <var:z> $ , $ <var:J> $ , $ <var:X> $ , $ <var:d> $ , $ <var:H> $ , and $ <var:Y> \in \mathbb{N} $ . \end{theorem} \begin{proof} It can be demonstrated that the sum $ <nat:494> \cdot <var:p> + <nat:27> + <var:R> \cdot <nat:256> + <var:B> \cdot <nat:418> + <nat:388> \cdot <var:x> + <var:H> \cdot <nat:160> + <nat:496> \cdot <var:X> + <nat:482> \cdot <var:d> + <var:Y> \cdot <nat:404> + <nat:338> \cdot <var:J> + <nat:460> \cdot <var:v> + <nat:222> \cdot <var:z> $ is guaranteed to be odd . Remember $ <nat:27> $ is guaranteed to be an odd whole number . Take note the formula $ <nat:338> \cdot <var:J> + <nat:418> \cdot <var:B> + <var:R> \cdot <nat:256> + <var:x> \cdot <nat:388> + <nat:482> \cdot <var:d> + <nat:494> \cdot <var:p> + <nat:160> \cdot <var:H> + <nat:222> \cdot <var:z> + <var:v> \cdot <nat:460> + <var:Y> \cdot <nat:404> + <var:X> \cdot <nat:496> $ is clearly even . The numbers $ <nat:338> $ , $ <nat:418> $ , $ <nat:256> $ , $ <nat:388> $ , $ <nat:482> $ , $ <nat:494> $ , $ <nat:160> $ , $ <nat:222> $ , $ <nat:460> $ , $ <nat:404> $ , as well as $ <nat:496> $ are trivially even . For this reason , the terms $ <nat:338> * <var:J> $ , $ <nat:418> * <var:B> $ , $ <var:R> * <nat:256> $ , $ <nat:388> * <var:x> $ , $ <nat:482> * <var:d> $ , $ <nat:494> * <var:p> $ , $ <var:H> * <nat:160> $ , $ <var:z> * <nat:222> $ , $ <nat:460> * <var:v> $ , $ <nat:404> * <var:Y> $ , plus $ <var:X> * <nat:496> $ is guaranteed to be even at the same time . From the knowledge the totaling of even whole numbers with even elements of $ \mathbb{N} $ is guaranteed to be even , plus since taking the product between even positive integers with any positive integer is by its very nature an even whole number . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:R> <var:p> <var:x> <var:v> <var:B> <var:z> <var:J> <var:X> <var:d> <var:H> <var:Y> : nat , Nat . odd ( <nat:404> * <var:Y> + <nat:418> * <var:B> + <nat:496> * <var:X> + <nat:388> * <var:x> + <nat:338> * <var:J> + <nat:460> * <var:v> + <nat:160> * <var:H> + <nat:482> * <var:d> + <nat:222> * <var:z> + <nat:494> * <var:p> + <nat:256> * <var:R> + <nat:27> ) = true . Proof . intros . assert ( <genH> : Nat . odd <nat:27> = true ) . { auto . } assert ( <genH> : Nat . even <nat:338> = true ) . { auto . } assert ( <genH> : Nat . even <nat:418> = true ) . { auto . } assert ( <genH> : Nat . even <nat:256> = true ) . { auto . } assert ( <genH> : Nat . even <nat:388> = true ) . { auto . } assert ( <genH> : Nat . even <nat:482> = true ) . { auto . } assert ( <genH> : Nat . even <nat:494> = true ) . { auto . } assert ( <genH> : Nat . even <nat:160> = true ) . { auto . } assert ( <genH> : Nat . even <nat:222> = true ) . { auto . } assert ( <genH> : Nat . even <nat:460> = true ) . { auto . } assert ( <genH> : Nat . even <nat:404> = true ) . { auto . } assert ( <genH> : Nat . even <nat:496> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:338> * <var:J> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:418> * <var:B> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:256> * <var:R> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:388> * <var:x> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:482> * <var:d> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:494> * <var:p> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:160> * <var:H> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:222> * <var:z> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:460> * <var:v> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:404> * <var:Y> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:496> * <var:X> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:404> * <var:Y> + <nat:418> * <var:B> + <nat:496> * <var:X> + <nat:388> * <var:x> + <nat:338> * <var:J> + <nat:460> * <var:v> + <nat:160> * <var:H> + <nat:482> * <var:d> + <nat:222> * <var:z> + <nat:494> * <var:p> + <nat:256> * <var:R> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . rewrite <genH> . auto . Qed . 