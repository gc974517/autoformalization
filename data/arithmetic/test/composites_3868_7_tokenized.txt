\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \newtheorem{definition}{Definition} \begin{document} \begin{definition} Granted that we have $ <var:J> \cdot <var:L> \cdot <var:z> \cdot <var:y> \cdot <var:t> \cdot <var:j> \cdot <var:W> = <var:A> $ with $ <var:A> \in \mathbb{Z}^+ $ as well as such that $ <var:L> $ , $ <var:z> $ , $ <var:W> $ , $ <var:t> $ , $ <var:J> $ , $ <var:j> $ , $ <var:y> \geq <nat:2> $ given some $ <var:L> $ , $ <var:J> $ , $ <var:y> $ , $ <var:t> $ , $ <var:z> $ , $ <var:j> $ , $ <var:W> \in \mathbb{Z}^+ $ , then we denote that $ <var:A> $ is a <def:seven-composite> integer . \end{definition} \begin{theorem} The natural number <nat:712800> is a <def:seven-composite> positive integer . \end{theorem} \begin{proof} Recall that <nat:712800> is a <def:seven-composite> positive integer if it is the product between integers $ <var:J> $ , $ <var:j> $ , $ <var:z> $ , $ <var:W> $ , $ <var:L> $ , $ <var:t> $ and $ <var:y> $ greater than or equal to <nat:2> . We present <nat:712800> is a <def:seven-composite> natural number . Observe that $ <nat:10> $ , $ <nat:5> $ , $ <nat:11> $ , $ <nat:3> $ , $ <nat:12> $ , $ <nat:4> $ , $ <nat:9> \geq <nat:2> $ . What's more note that further $ <nat:11> \cdot <nat:12> \cdot <nat:9> \cdot <nat:5> \cdot <nat:3> \cdot <nat:4> \cdot <nat:10> = <nat:712800> $ . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:seven-composite> ( <var:A> : nat ) := exists <var:L> <var:J> <var:y> <var:t> <var:z> <var:j> <var:W> : nat , ( <var:J> * <var:L> * <var:z> * <var:y> * <var:t> * <var:j> * <var:W> = <var:A> ) /\ ( <var:L> >= <nat:2> ) /\ ( <var:z> >= <nat:2> ) /\ ( <var:W> >= <nat:2> ) /\ ( <var:t> >= <nat:2> ) /\ ( <var:J> >= <nat:2> ) /\ ( <var:j> >= <nat:2> ) /\ ( <var:y> >= <nat:2> ) . Theorem <genP:1> : <def:seven-composite> <nat:712800> . Proof . unfold <def:seven-composite> . assert ( <genH> : <nat:10> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:5> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:11> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:3> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:12> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:4> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:9> >= <nat:2> ) . { lia . } exists <nat:5> . exists <nat:10> . exists <nat:12> . exists <nat:3> . exists <nat:9> . exists <nat:11> . exists <nat:4> . repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 