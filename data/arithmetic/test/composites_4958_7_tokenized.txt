\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \newtheorem{definition}{Definition} \begin{document} \begin{definition} Take $ <var:x> $ , $ <var:X> $ , $ <var:K> $ , $ <var:b> $ , $ <var:C> $ , $ <var:d> $ , $ <var:m> \in \mathbb{Z}^+ $ . We say that some positive integer $ <var:H> $ is called a <def:seven-composite> whole number given $ <var:b> * <var:x> * <var:X> * <var:K> * <var:d> * <var:C> * <var:m> = <var:H> $ and unique terms are more than <nat:1> . \end{definition} \begin{theorem} $ <nat:93600> = <var:H> $ is a <def:seven-composite> number . \end{theorem} \begin{proof} Note $ <nat:10> $ , $ <nat:2> $ , $ <nat:4> $ , $ <nat:13> $ , $ <nat:6> $ , $ <nat:5> $ , and $ <nat:3> $ are more than <nat:1> . Furthermore observe that further $ <nat:93600> = <nat:13> \cdot <nat:6> \cdot <nat:2> \cdot <nat:3> \cdot <nat:5> \cdot <nat:10> \cdot <nat:4> $ . This hints our statement is valid . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:seven-composite> ( <var:H> : nat ) := exists <var:x> <var:X> <var:K> <var:b> <var:C> <var:d> <var:m> : nat , ( <var:b> * <var:x> * <var:X> * <var:K> * <var:d> * <var:C> * <var:m> = <var:H> ) /\ ( <var:x> > <nat:1> ) /\ ( <var:X> > <nat:1> ) /\ ( <var:K> > <nat:1> ) /\ ( <var:b> > <nat:1> ) /\ ( <var:C> > <nat:1> ) /\ ( <var:d> > <nat:1> ) /\ ( <var:m> > <nat:1> ) . Theorem <genP:1> : <def:seven-composite> <nat:93600> . Proof . unfold <def:seven-composite> . assert ( <genH> : <nat:10> > <nat:1> ) . { lia . } assert ( <genH> : <nat:2> > <nat:1> ) . { lia . } assert ( <genH> : <nat:4> > <nat:1> ) . { lia . } assert ( <genH> : <nat:13> > <nat:1> ) . { lia . } assert ( <genH> : <nat:6> > <nat:1> ) . { lia . } assert ( <genH> : <nat:5> > <nat:1> ) . { lia . } assert ( <genH> : <nat:3> > <nat:1> ) . { lia . } exists <nat:13> . exists <nat:4> . exists <nat:6> . exists <nat:10> . exists <nat:5> . exists <nat:2> . exists <nat:3> . repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 