\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:56> \cdot <var:T> + <var:A> \cdot <nat:74> + <var:w> \cdot <nat:246> + <nat:484> \cdot <var:S> + <nat:472> \cdot <var:s> + <var:c> \cdot <nat:480> + <var:G> \cdot <nat:190> + <nat:383> + <var:r> \cdot <nat:376> + <nat:178> \cdot <var:J> + <nat:132> \cdot <var:L> $ must be odd for all unknowns $ <var:w> $ , $ <var:L> $ , $ <var:r> $ , $ <var:s> $ , $ <var:J> $ , $ <var:A> $ , $ <var:G> $ , $ <var:S> $ , $ <var:T> $ , and $ <var:c> $ . \end{theorem} \begin{proof} The summation of even naturals together and an odd positive integer is odd . See $ <nat:383> $ is guaranteed to be odd . Notice the terms $ <var:s> \times <nat:472> $ , $ <var:r> \times <nat:376> $ , plus $ <nat:74> \times <var:A> $ are even integers . Recall the pairs $ <var:w> \times <nat:246> $ , $ <var:J> \times <nat:178> $ , $ <var:G> \times <nat:190> $ , $ <var:L> \times <nat:132> $ , in addition to $ <var:S> \times <nat:484> $ must be even . This claim is true from the fact multiplying between an even whole number and a whole number will be an even element of $ \mathbb{Z}^+ $ . Observe that the pair $ <nat:56> \times <var:T> $ is guaranteed to be an even positive integer . Furthermore , the product $ <var:c> \times <nat:480> $ is known as even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:w> <var:L> <var:r> <var:s> <var:J> <var:A> <var:G> <var:S> <var:T> <var:c> : nat , Nat . odd ( <nat:56> * <var:T> + <nat:74> * <var:A> + <nat:246> * <var:w> + <nat:484> * <var:S> + <nat:472> * <var:s> + <nat:480> * <var:c> + <nat:190> * <var:G> + <nat:376> * <var:r> + <nat:178> * <var:J> + <nat:132> * <var:L> + <nat:383> ) = true . Proof . intros . rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . assert ( <genH> : Nat . odd <nat:383> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:472> * <var:s> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:376> * <var:r> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:74> * <var:A> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:246> * <var:w> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:178> * <var:J> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:190> * <var:G> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:132> * <var:L> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:484> * <var:S> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:56> * <var:T> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:480> * <var:c> ) = true ) . { rewrite Nat . even_mul . auto . } rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 