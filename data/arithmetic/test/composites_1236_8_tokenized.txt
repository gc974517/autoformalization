\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \newtheorem{definition}{Definition} \begin{document} \begin{definition} There exist whole numbers $ <var:f> $ , $ <var:b> $ , $ <var:d> $ , $ <var:y> $ , $ <var:o> $ , $ <var:K> $ , $ <var:t> $ , $ <var:J> $ larger than or equal to <nat:2> . Let that some whole number $ <var:k> $ will be called a <def:eight-composite> natural number if $ <var:k> = <var:d> * <var:o> * <var:y> * <var:b> * <var:t> * <var:f> * <var:K> * <var:J> $ . \end{definition} \begin{theorem} The number <nat:6918912> is a <def:eight-composite> integer . \end{theorem} \begin{proof} Note $ <nat:6918912> = <var:t> \cdot <var:b> \cdot <var:K> \cdot <var:o> \cdot <var:J> \cdot <var:d> \cdot <var:y> \cdot <var:f> $ yields $ <var:b> = <nat:8> $ , $ <var:f> = <nat:13> $ , $ <var:o> = <nat:2> $ , $ <var:J> = <nat:9> $ , $ <var:K> = <nat:12> $ , $ <var:d> = <nat:7> $ , $ <var:t> = <nat:11> $ , $ <var:y> = <nat:4> $ . Plus observe $ <nat:7> $ , $ <nat:9> $ , $ <nat:2> $ , $ <nat:12> $ , $ <nat:4> $ , $ <nat:13> $ , $ <nat:11> $ , and $ <nat:8> $ are greater than or equal to <nat:2> . This gives <nat:6918912> is <def:eight-composite> . Thus , $ <nat:6918912> = <var:b> \cdot <var:t> \cdot <var:J> \cdot <var:y> \cdot <var:d> \cdot <var:f> \cdot <var:o> \cdot <var:K> $ is proven . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:eight-composite> ( <var:k> : nat ) := exists <var:f> <var:b> <var:d> <var:y> <var:o> <var:K> <var:t> <var:J> : nat , ( <var:f> >= <nat:2> ) /\ ( <var:b> >= <nat:2> ) /\ ( <var:d> >= <nat:2> ) /\ ( <var:y> >= <nat:2> ) /\ ( <var:o> >= <nat:2> ) /\ ( <var:K> >= <nat:2> ) /\ ( <var:t> >= <nat:2> ) /\ ( <var:J> >= <nat:2> ) /\ ( <var:k> = <var:d> * <var:o> * <var:y> * <var:b> * <var:t> * <var:f> * <var:K> * <var:J> ) . Theorem <genP:1> : <def:eight-composite> <nat:6918912> . Proof . unfold <def:eight-composite> . exists <nat:13> . exists <nat:8> . exists <nat:7> . exists <nat:4> . exists <nat:2> . exists <nat:12> . exists <nat:11> . exists <nat:9> . assert ( <genH> : <nat:7> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:9> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:2> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:12> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:4> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:13> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:11> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:8> >= <nat:2> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 