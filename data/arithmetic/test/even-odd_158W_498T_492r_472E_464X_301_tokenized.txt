\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:T> \times <nat:498> + <nat:464> \times <var:X> + <nat:301> + <var:E> \times <nat:472> + <var:W> \times <nat:158> + <nat:492> \times <var:r> $ is odd assuming any variables $ <var:E> $ , $ <var:r> $ , $ <var:W> $ , $ <var:T> $ , and $ <var:X> $ . \end{theorem} \begin{proof} The summing of even numbers in $ \mathbb{Z}^+ $ with an odd number in $ \mathbb{N} $ is odd . It can be checked that the sum $ <nat:301> + <nat:498> \times <var:T> + <nat:464> \times <var:X> + <nat:492> \times <var:r> + <var:W> \times <nat:158> + <var:E> \times <nat:472> $ is known as odd since $ <nat:158> \cdot <var:W> + <var:X> \cdot <nat:464> + <var:r> \cdot <nat:492> + <nat:498> \cdot <var:T> + <nat:472> \cdot <var:E> $ is clearly even . See that the term $ <var:r> \cdot <nat:492> $ is guaranteed to be even by reason that the leading term $ <nat:492> $ is obviously an even whole number . Additionally , the integer $ <nat:498> $ is clearly even . Thus , $ <var:T> \cdot <nat:498> $ is guaranteed to be even in addition . The positive integer $ <nat:472> $ is known to be even . Thus , $ <nat:472> \cdot <var:E> $ is guaranteed to be even in addition . Take note that $ <nat:464> \cdot <var:X> $ is known to be even since the whole number $ <nat:464> $ is known to be even . Building on , the pair $ <nat:158> \cdot <var:W> $ is known as even . This is true because the leading term $ <nat:158> $ is clearly even . We justify the sum $ <nat:158> \times <var:W> + <nat:498> \times <var:T> + <nat:492> \times <var:r> + <var:E> \times <nat:472> + <nat:464> \times <var:X> + <nat:301> $ is guaranteed to be odd . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:E> <var:r> <var:W> <var:T> <var:X> : nat , Nat . odd ( <nat:498> * <var:T> + <nat:464> * <var:X> + <nat:472> * <var:E> + <nat:158> * <var:W> + <nat:492> * <var:r> + <nat:301> ) = true . Proof . intros . rewrite Nat . odd_add . assert ( <genH> : Nat . even <nat:492> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:492> * <var:r> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:498> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:498> * <var:T> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:472> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:472> * <var:E> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:464> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:464> * <var:X> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:158> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:158> * <var:W> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:498> * <var:T> + <nat:464> * <var:X> + <nat:472> * <var:E> + <nat:158> * <var:W> + <nat:492> * <var:r> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite <- Nat . negb_even . rewrite <genH> . auto . Qed . 