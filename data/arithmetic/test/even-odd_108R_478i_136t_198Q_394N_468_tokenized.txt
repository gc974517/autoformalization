\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:N> <nat:394> + <nat:198> <var:Q> + <var:t> <nat:136> + <nat:468> + <var:i> <nat:478> + <nat:108> <var:R> $ is guaranteed to be even . \end{theorem} \begin{proof} See that $ <nat:108> * <var:R> + <nat:468> + <var:Q> * <nat:198> + <var:N> * <nat:394> + <nat:478> * <var:i> + <nat:136> * <var:t> $ is clearly even from the knowledge the summation $ <nat:108> * <var:R> + <var:i> * <nat:478> + <var:t> * <nat:136> + <nat:198> * <var:Q> + <nat:394> * <var:N> $ is known as even . Notice that the terms $ <nat:198> <var:Q> $ , $ <nat:394> <var:N> $ , plus $ <nat:136> <var:t> $ are known as even natural numbers by reason that taking the product of an even element of $ \mathbb{Z}^+ $ with an arbitrary element of $ \mathbb{Z}^+ $ must be even . Notice that $ <nat:108> <var:R> $ is known to be even by reason that taking the product between an even number with any integer will be an even element of $ \mathbb{Z}^+ $ . Further , the product $ <nat:478> <var:i> $ is even since the product between an even natural and an arbitrary element of $ \mathbb{Z}^+ $ is guaranteed to be even . This lemma is proven from the fact taking the product of an even element of $ \mathbb{N} $ and an arbitrary whole number is guaranteed to be even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:N> <var:Q> <var:t> <var:i> <var:R> : nat , Nat . even ( <nat:394> * <var:N> + <nat:198> * <var:Q> + <nat:136> * <var:t> + <nat:478> * <var:i> + <nat:108> * <var:R> + <nat:468> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:198> * <var:Q> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:394> * <var:N> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:136> * <var:t> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:108> * <var:R> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:478> * <var:i> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:394> * <var:N> + <nat:198> * <var:Q> + <nat:136> * <var:t> + <nat:478> * <var:i> + <nat:108> * <var:R> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . even_add . rewrite <genH> . auto . Qed . 