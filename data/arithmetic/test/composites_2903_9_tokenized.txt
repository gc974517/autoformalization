\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:17690400> $ equals $ <var:c> \times <var:e> \times <var:E> \times <var:G> \times <var:j> \times <var:X> \times <var:N> \times <var:R> \times <var:J> $ assuming $ <var:e> $ , $ <var:J> $ , $ <var:c> $ , $ <var:X> $ , $ <var:G> $ , $ <var:j> $ , $ <var:E> $ , $ <var:R> $ , $ <var:N> \in \mathbb{Z}^+ $ satisfying the condition that $ <var:N> $ , $ <var:R> $ , $ <var:G> $ , $ <var:X> $ , $ <var:j> $ , $ <var:c> $ , $ <var:E> $ , $ <var:J> $ , and $ <var:e> $ larger than or equivalent to <nat:2> . \end{theorem} \begin{proof} Note $ <var:e> \times <var:N> \times <var:R> \times <var:J> \times <var:j> \times <var:c> \times <var:E> \times <var:G> \times <var:X> = <nat:17690400> $ yields $ <var:E> = <nat:2> $ , $ <var:N> = <nat:13> $ , $ <var:R> = <nat:10> $ , $ <var:J> = <nat:5> $ , $ <var:e> = <nat:3> $ , $ <var:c> = <nat:9> $ , $ <var:X> = <nat:7> $ , $ <var:j> = <nat:12> $ and $ <var:G> = <nat:6> $ . Furthermore notice $ <nat:7> $ , $ <nat:6> $ , $ <nat:9> $ , $ <nat:13> $ , $ <nat:10> $ , $ <nat:2> $ , $ <nat:3> $ , $ <nat:12> $ , $ <nat:5> \geq <nat:2> $ . This gives our principle holds . So , $ <nat:17690400> = <var:c> * <var:G> * <var:J> * <var:j> * <var:X> * <var:E> * <var:N> * <var:e> * <var:R> $ has been validated . \end{proof} \end{document} 
~
Require Import Lia . Theorem <genP:1> : exists <var:e> <var:J> <var:c> <var:X> <var:G> <var:j> <var:E> <var:R> <var:N> : nat , ( <nat:17690400> = <var:c> * <var:e> * <var:E> * <var:G> * <var:j> * <var:X> * <var:N> * <var:R> * <var:J> ) /\ ( <var:N> >= <nat:2> ) /\ ( <var:R> >= <nat:2> ) /\ ( <var:G> >= <nat:2> ) /\ ( <var:X> >= <nat:2> ) /\ ( <var:j> >= <nat:2> ) /\ ( <var:c> >= <nat:2> ) /\ ( <var:E> >= <nat:2> ) /\ ( <var:J> >= <nat:2> ) /\ ( <var:e> >= <nat:2> ) . Proof . exists <nat:3> . exists <nat:5> . exists <nat:9> . exists <nat:7> . exists <nat:6> . exists <nat:12> . exists <nat:2> . exists <nat:10> . exists <nat:13> . assert ( <genH> : <nat:7> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:6> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:9> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:13> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:10> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:2> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:3> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:12> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:5> >= <nat:2> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 