\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:440> * <var:H> + <var:e> * <nat:12> + <nat:196> * <var:V> + <var:J> * <nat:298> + <nat:179> $ will be odd . \end{theorem} \begin{proof} It can be proven that the sum $ <var:V> <nat:196> + <nat:179> + <nat:12> <var:e> + <var:H> <nat:440> + <nat:298> <var:J> $ is guaranteed to be odd . It can be proven that that $ <var:e> \cdot <nat:12> + <var:H> \cdot <nat:440> + <nat:196> \cdot <var:V> + <nat:179> + <nat:298> \cdot <var:J> $ is guaranteed to be odd from the knowledge the summation $ <var:V> <nat:196> + <var:e> <nat:12> + <var:J> <nat:298> + <nat:440> <var:H> $ is known to be even . The whole numbers $ <nat:12> $ , $ <nat:440> $ , and likewise $ <nat:196> $ are guaranteed to be even numbers in $ \mathbb{N} $ . Accordingly , the products $ <nat:12> \cdot <var:e> $ , $ <nat:440> \cdot <var:H> $ , plus $ <var:V> \cdot <nat:196> $ will be even additionally . The product $ <nat:298> \cdot <var:J> $ is obviously an even element of $ \mathbb{N} $ . This fact is proven from the knowledge the positive integer $ <nat:298> $ is even . By reason that the summation of an even number and even elements of $ \mathbb{N} $ will be clearly an even element of $ \mathbb{N} $ , and likewise by reason that multiplying of even numbers in $ \mathbb{Z}^+ $ and a number will be an even positive integer . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:H> <var:e> <var:V> <var:J> : nat , Nat . odd ( <nat:440> * <var:H> + <nat:12> * <var:e> + <nat:196> * <var:V> + <nat:298> * <var:J> + <nat:179> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:12> = true ) . { auto . } assert ( <genH> : Nat . even <nat:440> = true ) . { auto . } assert ( <genH> : Nat . even <nat:196> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:12> * <var:e> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:440> * <var:H> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:196> * <var:V> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:298> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:298> * <var:J> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:440> * <var:H> + <nat:12> * <var:e> + <nat:196> * <var:V> + <nat:298> * <var:J> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . auto . Qed . 