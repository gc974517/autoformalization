\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Assuming unknowns $ <var:l> $ , $ <var:A> $ , $ <var:b> $ , $ <var:S> $ , $ <var:Y> $ , $ <var:Z> $ , $ <var:B> $ , $ <var:K> $ , $ <var:e> $ , and $ <var:O> $ the sum $ <var:l> \times <nat:324> + <var:A> \times <nat:420> + <nat:30> \times <var:B> + <var:e> \times <nat:142> + <nat:340> \times <var:O> + <var:b> \times <nat:168> + <nat:338> \times <var:S> + <var:K> \times <nat:174> + <nat:423> + <nat:280> \times <var:Z> + <var:Y> \times <nat:248> $ will be odd . \end{theorem} \begin{proof} $ <nat:338> \cdot <var:S> + <var:B> \cdot <nat:30> + <nat:280> \cdot <var:Z> + <var:l> \cdot <nat:324> + <var:A> \cdot <nat:420> + <var:e> \cdot <nat:142> + <var:K> \cdot <nat:174> + <var:b> \cdot <nat:168> + <var:O> \cdot <nat:340> + <nat:248> \cdot <var:Y> $ is guaranteed to be even . Recall the summing between an even element of $ \mathbb{N} $ and an even integer is even . We know that the numbers $ <nat:168> $ , $ <nat:248> $ , $ <nat:420> $ , $ <nat:280> $ , $ <nat:174> $ , $ <nat:338> $ , and also $ <nat:142> $ must be even Adding on , take note the positive integer $ <nat:340> $ is known as an even integer In addition to this , recall that the leading term $ <nat:30> $ is known as even Remember the leading term $ <nat:324> $ is trivially an even element of $ \mathbb{N} $ \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:l> <var:A> <var:b> <var:S> <var:Y> <var:Z> <var:B> <var:K> <var:e> <var:O> : nat , Nat . odd ( <nat:324> * <var:l> + <nat:420> * <var:A> + <nat:30> * <var:B> + <nat:142> * <var:e> + <nat:340> * <var:O> + <nat:168> * <var:b> + <nat:338> * <var:S> + <nat:174> * <var:K> + <nat:280> * <var:Z> + <nat:248> * <var:Y> + <nat:423> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:168> = true ) . { auto . } assert ( <genH> : Nat . even <nat:248> = true ) . { auto . } assert ( <genH> : Nat . even <nat:420> = true ) . { auto . } assert ( <genH> : Nat . even <nat:280> = true ) . { auto . } assert ( <genH> : Nat . even <nat:174> = true ) . { auto . } assert ( <genH> : Nat . even <nat:338> = true ) . { auto . } assert ( <genH> : Nat . even <nat:142> = true ) . { auto . } assert ( <genH> : Nat . even <nat:340> = true ) . { auto . } assert ( <genH> : Nat . even <nat:30> = true ) . { auto . } assert ( <genH> : Nat . even <nat:324> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:324> * <var:l> + <nat:420> * <var:A> + <nat:30> * <var:B> + <nat:142> * <var:e> + <nat:340> * <var:O> + <nat:168> * <var:b> + <nat:338> * <var:S> + <nat:174> * <var:K> + <nat:280> * <var:Z> + <nat:248> * <var:Y> ) = true ) . { repeat rewrite Nat . even_add . repeat rewrite Nat . even_mul . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . auto . Qed . 