\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \newtheorem{definition}{Definition} \begin{document} \begin{definition} Let that $ <var:j> $ is a <def:eight-composite> whole number under the condition given some $ <var:k> $ , $ <var:A> $ , $ <var:s> $ , $ <var:T> $ , $ <var:Z> $ , $ <var:h> $ , $ <var:c> $ , $ <var:e> $ we have $ <var:j> = <var:e> \times <var:k> \times <var:h> \times <var:s> \times <var:c> \times <var:A> \times <var:T> \times <var:Z> $ assuming some $ <var:j> $ plus so that $ <var:s> $ , $ <var:T> $ , $ <var:h> $ , $ <var:c> $ , $ <var:A> $ , $ <var:Z> $ , $ <var:e> $ , $ <var:k> \geq <nat:2> $ . \end{definition} \begin{theorem} $ <nat:3548160> = <var:j> $ is a <def:eight-composite> number . \end{theorem} \begin{proof} Recall that a <def:eight-composite> is the multiplication of whole numbers $ <var:A> $ , $ <var:Z> $ , $ <var:k> $ , $ <var:e> $ , $ <var:T> $ , $ <var:h> $ , $ <var:c> $ , $ <var:s> $ greater than <nat:1> . Take $ <var:h> = <nat:11> $ , $ <var:Z> = <nat:2> $ , $ <var:c> = <nat:12> $ , $ <var:e> = <nat:10> $ , $ <var:s> = <nat:8> $ , $ <var:A> = <nat:4> $ , $ <var:T> = <nat:7> $ , and $ <var:k> = <nat:6> $ . Notice $ <var:k> = <nat:6> $ , $ <var:h> = <nat:11> $ , $ <var:Z> = <nat:2> $ , $ <var:A> = <nat:4> $ , $ <var:s> = <nat:8> $ , $ <var:e> = <nat:10> $ , $ <var:T> = <nat:7> $ , and $ <var:c> = <nat:12> > <nat:1> $ . This produces the thesis is valid . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:eight-composite> ( <var:j> : nat ) := exists <var:k> <var:A> <var:s> <var:T> <var:Z> <var:h> <var:c> <var:e> : nat , ( <var:j> = <var:e> * <var:k> * <var:h> * <var:s> * <var:c> * <var:A> * <var:T> * <var:Z> ) /\ ( <var:s> >= <nat:2> ) /\ ( <var:T> >= <nat:2> ) /\ ( <var:h> >= <nat:2> ) /\ ( <var:c> >= <nat:2> ) /\ ( <var:A> >= <nat:2> ) /\ ( <var:Z> >= <nat:2> ) /\ ( <var:e> >= <nat:2> ) /\ ( <var:k> >= <nat:2> ) . Theorem <genP:1> : <def:eight-composite> <nat:3548160> . Proof . unfold <def:eight-composite> . exists <nat:6> . exists <nat:4> . exists <nat:8> . exists <nat:7> . exists <nat:2> . exists <nat:11> . exists <nat:12> . exists <nat:10> . assert ( <genH> : <nat:6> > <nat:1> ) . { lia . } assert ( <genH> : <nat:11> > <nat:1> ) . { lia . } assert ( <genH> : <nat:2> > <nat:1> ) . { lia . } assert ( <genH> : <nat:4> > <nat:1> ) . { lia . } assert ( <genH> : <nat:8> > <nat:1> ) . { lia . } assert ( <genH> : <nat:10> > <nat:1> ) . { lia . } assert ( <genH> : <nat:7> > <nat:1> ) . { lia . } assert ( <genH> : <nat:12> > <nat:1> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 