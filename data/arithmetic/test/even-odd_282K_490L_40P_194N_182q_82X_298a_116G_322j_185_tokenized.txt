\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:322> <var:j> + <nat:194> <var:N> + <var:P> <nat:40> + <nat:116> <var:G> + <nat:82> <var:X> + <nat:490> <var:L> + <nat:182> <var:q> + <var:a> <nat:298> + <nat:282> <var:K> + <nat:185> $ is guaranteed to be odd . \end{theorem} \begin{proof} From the knowledge the summation of an even element of $ \mathbb{Z}^+ $ and an odd positive integer is guaranteed to be odd , hence the summation $ <var:X> \cdot <nat:82> + <var:N> \cdot <nat:194> + <nat:116> \cdot <var:G> + <nat:322> \cdot <var:j> + <nat:298> \cdot <var:a> + <nat:282> \cdot <var:K> + <var:L> \cdot <nat:490> + <var:P> \cdot <nat:40> + <var:q> \cdot <nat:182> + <nat:185> $ in itself is guaranteed to be odd . The summation $ <nat:116> \cdot <var:G> + <nat:490> \cdot <var:L> + <var:N> \cdot <nat:194> + <nat:185> + <nat:322> \cdot <var:j> + <var:a> \cdot <nat:298> + <var:X> \cdot <nat:82> + <var:K> \cdot <nat:282> + <nat:182> \cdot <var:q> + <var:P> \cdot <nat:40> $ is obviously odd from the knowledge the expression $ <nat:282> \times <var:K> + <var:L> \times <nat:490> + <var:P> \times <nat:40> + <nat:194> \times <var:N> + <var:q> \times <nat:182> + <var:X> \times <nat:82> + <nat:298> \times <var:a> + <var:G> \times <nat:116> + <nat:322> \times <var:j> $ is guaranteed to be even . See multiplying between even numbers will be even . The leading terms $ <nat:322> $ and moreover $ <nat:182> $ are obviously even whole numbers Take note the coefficients $ <nat:298> $ , $ <nat:194> $ , $ <nat:282> $ , plus $ <nat:82> $ are trivially even Likewise , the positive integers $ <nat:40> $ plus $ <nat:116> $ are known to be even numbers The whole number $ <nat:490> $ is guaranteed to be even As a consequence that the addition between an even element of $ \mathbb{Z}^+ $ with even integers is even , \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:j> <var:N> <var:P> <var:G> <var:X> <var:L> <var:q> <var:a> <var:K> : nat , Nat . odd ( <nat:322> * <var:j> + <nat:194> * <var:N> + <nat:40> * <var:P> + <nat:116> * <var:G> + <nat:82> * <var:X> + <nat:490> * <var:L> + <nat:182> * <var:q> + <nat:298> * <var:a> + <nat:282> * <var:K> + <nat:185> ) = true . Proof . intros . rewrite Nat . odd_add . assert ( <genH> : Nat . even <nat:322> = true ) . { auto . } assert ( <genH> : Nat . even <nat:182> = true ) . { auto . } assert ( <genH> : Nat . even <nat:298> = true ) . { auto . } assert ( <genH> : Nat . even <nat:194> = true ) . { auto . } assert ( <genH> : Nat . even <nat:282> = true ) . { auto . } assert ( <genH> : Nat . even <nat:82> = true ) . { auto . } assert ( <genH> : Nat . even <nat:40> = true ) . { auto . } assert ( <genH> : Nat . even <nat:116> = true ) . { auto . } assert ( <genH> : Nat . even <nat:490> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:322> * <var:j> + <nat:194> * <var:N> + <nat:40> * <var:P> + <nat:116> * <var:G> + <nat:82> * <var:X> + <nat:490> * <var:L> + <nat:182> * <var:q> + <nat:298> * <var:a> + <nat:282> * <var:K> ) = true ) . { repeat rewrite Nat . even_add . repeat rewrite Nat . even_mul . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite <- Nat . negb_even . rewrite <genH> . auto . Qed . 