\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Assuming every $ <var:z> $ , $ <var:p> $ , $ <var:l> $ , $ <var:C> $ , and $ <var:T> \in \mathbb{N} $ the sum $ <nat:212> * <var:T> + <nat:206> * <var:p> + <var:l> * <nat:222> + <nat:188> * <var:z> + <nat:4> * <var:C> + <nat:335> $ must be odd . \end{theorem} \begin{proof} The lemma holds from the fact $ <var:z> <nat:188> + <var:C> <nat:4> + <var:T> <nat:212> + <nat:206> <var:p> + <var:l> <nat:222> $ is clearly even , because the addition between even numbers in $ \mathbb{Z}^+ $ collectively with an even natural will be even . $ <nat:222> * <var:l> $ is even by reason that multiplying of an even positive integer with a element of $ \mathbb{Z}^+ $ is even . Adding on , observe the term $ <nat:4> * <var:C> $ is guaranteed to be an even integer . Notice that the products $ <var:T> * <nat:212> $ in addition to $ <var:z> * <nat:188> $ are clearly even positive integers . This fact is proven from the fact the multiplication between an even whole number with an arbitrary number in $ \mathbb{Z}^+ $ is guaranteed to be clearly an even number in $ \mathbb{Z}^+ $ . See the product $ <var:p> * <nat:206> $ is guaranteed to be even . additionally from the knowledge the product between even elements of $ \mathbb{N} $ and a whole number must be an even whole number our main result must be true . The summing between even elements of $ \mathbb{N} $ successively with an odd whole number is guaranteed to be odd . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:z> <var:p> <var:l> <var:C> <var:T> : nat , Nat . odd ( <nat:212> * <var:T> + <nat:206> * <var:p> + <nat:222> * <var:l> + <nat:188> * <var:z> + <nat:4> * <var:C> + <nat:335> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:222> * <var:l> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:4> * <var:C> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:212> * <var:T> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:188> * <var:z> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:206> * <var:p> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:212> * <var:T> + <nat:206> * <var:p> + <nat:222> * <var:l> + <nat:188> * <var:z> + <nat:4> * <var:C> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . auto . Qed . 