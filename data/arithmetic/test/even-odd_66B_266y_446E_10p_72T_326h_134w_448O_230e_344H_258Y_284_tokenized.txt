\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:448> <var:O> + <nat:284> + <var:e> <nat:230> + <var:y> <nat:266> + <var:E> <nat:446> + <var:h> <nat:326> + <nat:10> <var:p> + <var:w> <nat:134> + <var:B> <nat:66> + <var:Y> <nat:258> + <var:T> <nat:72> + <nat:344> <var:H> $ is guaranteed to be even . \end{theorem} \begin{proof} Notice that $ <nat:284> $ is trivially an even natural . It can be demonstrated that the expression $ <nat:344> <var:H> + <var:E> <nat:446> + <nat:284> + <var:T> <nat:72> + <var:B> <nat:66> + <var:w> <nat:134> + <nat:258> <var:Y> + <var:e> <nat:230> + <var:O> <nat:448> + <var:y> <nat:266> + <nat:10> <var:p> + <var:h> <nat:326> $ is even . The theorem must be true as a consequence that $ <var:B> * <nat:66> + <nat:266> * <var:y> + <nat:446> * <var:E> + <nat:10> * <var:p> + <var:T> * <nat:72> + <var:h> * <nat:326> + <nat:134> * <var:w> + <var:O> * <nat:448> + <var:e> * <nat:230> + <var:H> * <nat:344> + <nat:258> * <var:Y> $ is guaranteed to be even . The coefficients $ <nat:446> $ , $ <nat:72> $ , $ <nat:326> $ , $ <nat:134> $ , $ <nat:66> $ , and also $ <nat:448> $ are guaranteed to be even The numbers $ <nat:258> $ , $ <nat:266> $ , and also $ <nat:230> $ are known as even Likewise , the integer $ <nat:344> $ is even The number $ <nat:10> $ is known as even \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:O> <var:e> <var:y> <var:E> <var:h> <var:p> <var:w> <var:B> <var:Y> <var:T> <var:H> : nat , Nat . even ( <nat:448> * <var:O> + <nat:230> * <var:e> + <nat:266> * <var:y> + <nat:446> * <var:E> + <nat:326> * <var:h> + <nat:10> * <var:p> + <nat:134> * <var:w> + <nat:66> * <var:B> + <nat:258> * <var:Y> + <nat:72> * <var:T> + <nat:344> * <var:H> + <nat:284> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:284> = true ) . { auto . } assert ( <genH> : Nat . even <nat:446> = true ) . { auto . } assert ( <genH> : Nat . even <nat:72> = true ) . { auto . } assert ( <genH> : Nat . even <nat:326> = true ) . { auto . } assert ( <genH> : Nat . even <nat:134> = true ) . { auto . } assert ( <genH> : Nat . even <nat:66> = true ) . { auto . } assert ( <genH> : Nat . even <nat:448> = true ) . { auto . } assert ( <genH> : Nat . even <nat:258> = true ) . { auto . } assert ( <genH> : Nat . even <nat:266> = true ) . { auto . } assert ( <genH> : Nat . even <nat:230> = true ) . { auto . } assert ( <genH> : Nat . even <nat:344> = true ) . { auto . } assert ( <genH> : Nat . even <nat:10> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:448> * <var:O> + <nat:230> * <var:e> + <nat:266> * <var:y> + <nat:446> * <var:E> + <nat:326> * <var:h> + <nat:10> * <var:p> + <nat:134> * <var:w> + <nat:66> * <var:B> + <nat:258> * <var:Y> + <nat:72> * <var:T> + <nat:344> * <var:H> ) = true ) . { repeat rewrite Nat . even_add . repeat rewrite Nat . even_mul . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . auto . Qed . 