\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Take $ <var:g> $ , $ <var:J> $ , $ <var:W> $ , $ <var:b> $ , $ <var:K> $ , $ <var:R> $ , $ <var:O> $ as whole numbers such that $ <var:J> $ , $ <var:W> $ , $ <var:R> $ , $ <var:g> $ , $ <var:K> $ , $ <var:O> $ , and $ <var:b> \geq <nat:2> $ . Say that $ <var:f> \in \mathbb{N} $ will be a <def:seven-composite> integer when $ <var:g> \times <var:W> \times <var:J> \times <var:R> \times <var:O> \times <var:K> \times <var:b> = <var:f> $ . Consequently the number <nat:60480> is <def:seven-composite> . \end{theorem} \begin{proof} Assume $ <var:W> = <nat:4> $ , $ <var:K> = <nat:3> $ , $ <var:g> = <nat:7> $ , $ <var:O> = <nat:9> $ , $ <var:J> = <nat:2> $ , $ <var:R> = <nat:5> $ and $ <var:b> = <nat:8> $ . Note that $ <nat:4> $ , $ <nat:3> $ , $ <nat:2> $ , $ <nat:8> $ , $ <nat:5> $ , $ <nat:7> $ , and $ <nat:9> $ are more than or equivalent to <nat:2> . In addition observe that as well $ <nat:60480> = <var:W> \cdot <var:J> \cdot <var:O> \cdot <var:R> \cdot <var:K> \cdot <var:g> \cdot <var:b> $ . As a consequence , $ <nat:60480> = <var:b> \cdot <var:W> \cdot <var:O> \cdot <var:K> \cdot <var:J> \cdot <var:g> \cdot <var:R> $ is true has been proven . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:seven-composite> ( <var:f> : nat ) := exists <var:g> <var:J> <var:W> <var:b> <var:K> <var:R> <var:O> : nat , ( <var:J> >= <nat:2> ) /\ ( <var:W> >= <nat:2> ) /\ ( <var:R> >= <nat:2> ) /\ ( <var:g> >= <nat:2> ) /\ ( <var:K> >= <nat:2> ) /\ ( <var:O> >= <nat:2> ) /\ ( <var:b> >= <nat:2> ) /\ ( <var:g> * <var:W> * <var:J> * <var:R> * <var:O> * <var:K> * <var:b> = <var:f> ) . Theorem <genP:1> : <def:seven-composite> <nat:60480> . Proof . unfold <def:seven-composite> . exists <nat:7> . exists <nat:2> . exists <nat:4> . exists <nat:8> . exists <nat:3> . exists <nat:5> . exists <nat:9> . assert ( <genH> : <nat:4> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:3> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:2> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:8> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:5> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:7> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:9> >= <nat:2> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 