\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:n> * <nat:282> + <nat:405> + <nat:224> * <var:L> + <nat:432> * <var:p> + <nat:182> * <var:C> + <nat:250> * <var:Y> + <nat:364> * <var:I> $ is odd taking all variables $ <var:I> $ , $ <var:n> $ , $ <var:p> $ , $ <var:C> $ , $ <var:Y> $ , and $ <var:L> $ . \end{theorem} \begin{proof} We justify the expression $ <var:I> * <nat:364> + <var:p> * <nat:432> + <nat:405> + <nat:282> * <var:n> + <nat:224> * <var:L> + <var:C> * <nat:182> + <var:Y> * <nat:250> $ must be odd . The coefficients $ <nat:364> $ , $ <nat:432> $ , $ <nat:282> $ , $ <nat:224> $ , $ <nat:182> $ , and moreover $ <nat:250> $ are clearly even . For this reason , the pairs $ <nat:364> \times <var:I> $ , $ <nat:432> \times <var:p> $ , $ <nat:282> \times <var:n> $ , $ <nat:224> \times <var:L> $ , $ <nat:182> \times <var:C> $ , and moreover $ <nat:250> \times <var:Y> $ is even too . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:I> <var:n> <var:p> <var:C> <var:Y> <var:L> : nat , Nat . odd ( <nat:282> * <var:n> + <nat:224> * <var:L> + <nat:432> * <var:p> + <nat:182> * <var:C> + <nat:250> * <var:Y> + <nat:364> * <var:I> + <nat:405> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:364> = true ) . { auto . } assert ( <genH> : Nat . even <nat:432> = true ) . { auto . } assert ( <genH> : Nat . even <nat:282> = true ) . { auto . } assert ( <genH> : Nat . even <nat:224> = true ) . { auto . } assert ( <genH> : Nat . even <nat:182> = true ) . { auto . } assert ( <genH> : Nat . even <nat:250> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:364> * <var:I> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:432> * <var:p> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:282> * <var:n> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:224> * <var:L> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:182> * <var:C> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:250> * <var:Y> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 