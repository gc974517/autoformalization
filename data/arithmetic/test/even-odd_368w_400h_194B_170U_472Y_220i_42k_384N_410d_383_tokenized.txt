\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:383> + <var:B> \cdot <nat:194> + <var:d> \cdot <nat:410> + <var:N> \cdot <nat:384> + <nat:368> \cdot <var:w> + <nat:170> \cdot <var:U> + <nat:220> \cdot <var:i> + <nat:472> \cdot <var:Y> + <var:h> \cdot <nat:400> + <nat:42> \cdot <var:k> $ will be odd . \end{theorem} \begin{proof} The terms $ <nat:384> \cdot <var:N> $ , $ <nat:410> \cdot <var:d> $ , $ <var:h> \cdot <nat:400> $ , $ <nat:368> \cdot <var:w> $ , $ <var:i> \cdot <nat:220> $ , additionally $ <nat:170> \cdot <var:U> $ are clearly even natural numbers . The terms $ <var:k> \cdot <nat:42> $ and also $ <nat:194> \cdot <var:B> $ will be even elements of $ \mathbb{N} $ . This holds as a consequence that multiplying between an even number in $ \mathbb{N} $ and some integer is guaranteed to be an even integer . Further , the product $ <nat:472> \cdot <var:Y> $ is obviously even because taking the product between an even element of $ \mathbb{N} $ with any number in $ \mathbb{Z}^+ $ will be even . Recall $ <nat:383> $ is known as an odd whole number . It can be shown that the formula $ <nat:368> * <var:w> + <nat:400> * <var:h> + <var:B> * <nat:194> + <nat:170> * <var:U> + <nat:383> + <nat:472> * <var:Y> + <var:i> * <nat:220> + <nat:42> * <var:k> + <var:N> * <nat:384> + <nat:410> * <var:d> $ must be odd . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:B> <var:d> <var:N> <var:w> <var:U> <var:i> <var:Y> <var:h> <var:k> : nat , Nat . odd ( <nat:194> * <var:B> + <nat:410> * <var:d> + <nat:384> * <var:N> + <nat:368> * <var:w> + <nat:170> * <var:U> + <nat:220> * <var:i> + <nat:472> * <var:Y> + <nat:400> * <var:h> + <nat:42> * <var:k> + <nat:383> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:384> * <var:N> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:410> * <var:d> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:400> * <var:h> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:368> * <var:w> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:220> * <var:i> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:170> * <var:U> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:42> * <var:k> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:194> * <var:B> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:472> * <var:Y> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . odd <nat:383> = true ) . { auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 