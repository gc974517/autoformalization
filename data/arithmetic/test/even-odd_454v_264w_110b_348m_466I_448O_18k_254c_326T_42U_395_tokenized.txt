\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} With every positive terms $ <var:k> $ , $ <var:I> $ , $ <var:c> $ , $ <var:m> $ , $ <var:U> $ , $ <var:b> $ , $ <var:w> $ , $ <var:T> $ , $ <var:v> $ , and $ <var:O> $ the expression $ <var:U> \times <nat:42> + <var:O> \times <nat:448> + <nat:254> \times <var:c> + <nat:326> \times <var:T> + <nat:454> \times <var:v> + <nat:466> \times <var:I> + <var:m> \times <nat:348> + <nat:110> \times <var:b> + <nat:18> \times <var:k> + <nat:395> + <var:w> \times <nat:264> $ is odd . \end{theorem} \begin{proof} It can be shown that $ <var:v> * <nat:454> + <nat:264> * <var:w> + <nat:110> * <var:b> + <var:m> * <nat:348> + <nat:466> * <var:I> + <nat:448> * <var:O> + <nat:18> * <var:k> + <var:c> * <nat:254> + <nat:395> + <nat:326> * <var:T> + <nat:42> * <var:U> $ is guaranteed to be odd . Remember that the terms $ <var:v> \times <nat:454> $ , $ <var:w> \times <nat:264> $ , $ <nat:254> \times <var:c> $ , $ <nat:448> \times <var:O> $ , $ <nat:348> \times <var:m> $ , $ <var:b> \times <nat:110> $ , $ <var:k> \times <nat:18> $ , and $ <var:T> \times <nat:326> $ are obviously even integers since the multiplication of an even whole number and a element of $ \mathbb{N} $ is guaranteed to be by definition an even natural . The product $ <nat:466> \times <var:I> $ is obviously even from the fact the product of an even element of $ \mathbb{N} $ and any element of $ \mathbb{Z}^+ $ is even . What's more , take note the pair $ <nat:42> \times <var:U> $ is guaranteed to be an even number in $ \mathbb{Z}^+ $ . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:k> <var:I> <var:c> <var:m> <var:U> <var:b> <var:w> <var:T> <var:v> <var:O> : nat , Nat . odd ( <nat:42> * <var:U> + <nat:448> * <var:O> + <nat:254> * <var:c> + <nat:326> * <var:T> + <nat:454> * <var:v> + <nat:466> * <var:I> + <nat:348> * <var:m> + <nat:110> * <var:b> + <nat:18> * <var:k> + <nat:264> * <var:w> + <nat:395> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:454> * <var:v> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:264> * <var:w> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:254> * <var:c> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:448> * <var:O> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:348> * <var:m> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:110> * <var:b> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:18> * <var:k> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:326> * <var:T> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:466> * <var:I> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:42> * <var:U> ) = true ) . { rewrite Nat . even_mul . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 