\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} When we get $ <var:q> = <var:C> * <var:U> * <var:k> * <var:c> * <var:g> * <var:Q> * <var:K> * <var:F> * <var:E> * <var:p> $ assuming $ <var:q> \in \mathbb{N} $ and where $ <var:p> $ , $ <var:F> $ , $ <var:g> $ , $ <var:U> $ , $ <var:c> $ , $ <var:Q> $ , $ <var:k> $ , $ <var:E> $ , $ <var:C> $ , and $ <var:K> \geq <nat:2> $ with some $ <var:Q> $ , $ <var:K> $ , $ <var:E> $ , $ <var:k> $ , $ <var:C> $ , $ <var:U> $ , $ <var:c> $ , $ <var:p> $ , $ <var:F> $ , $ <var:g> \in \mathbb{Z}^+ $ , then we claim that $ <var:q> $ is a <def:ten-composite> integer . Hence $ <nat:129729600> = <var:q> $ is a <def:ten-composite> integer . \end{theorem} \begin{proof} We demonstrate <nat:129729600> is the multiplication of some numbers $ <var:Q> $ , $ <var:U> $ , $ <var:p> $ , $ <var:g> $ , $ <var:K> $ , $ <var:C> $ , $ <var:E> $ , $ <var:F> $ , $ <var:c> $ , and $ <var:k> $ plus $ <var:U> $ , $ <var:k> $ , $ <var:p> $ , $ <var:E> $ , $ <var:K> $ , $ <var:F> $ , $ <var:g> $ , $ <var:c> $ , $ <var:C> $ and $ <var:Q> $ are greater than or equal to <nat:2> . We show <nat:129729600> is a <def:ten-composite> integer considering $ <var:C> \times <var:p> \times <var:E> \times <var:g> \times <var:c> \times <var:U> \times <var:Q> \times <var:F> \times <var:k> \times <var:K> = <nat:129729600> $ indicates $ <var:E> = <nat:5> $ , $ <var:U> = <nat:9> $ , $ <var:Q> = <nat:6> $ , $ <var:F> = <nat:7> $ , $ <var:c> = <nat:8> $ , $ <var:g> = <nat:11> $ , $ <var:K> = <nat:2> $ , $ <var:k> = <nat:10> $ , $ <var:C> = <nat:13> $ , and $ <var:p> = <nat:3> $ plus because $ <nat:10> $ , $ <nat:5> $ , $ <nat:8> $ , $ <nat:3> $ , $ <nat:7> $ , $ <nat:2> $ , $ <nat:13> $ , $ <nat:9> $ , $ <nat:11> $ , and $ <nat:6> \geq <nat:2> $ . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:ten-composite> ( <var:q> : nat ) := exists <var:Q> <var:K> <var:E> <var:k> <var:C> <var:U> <var:c> <var:p> <var:F> <var:g> : nat , ( <var:q> = <var:C> * <var:U> * <var:k> * <var:c> * <var:g> * <var:Q> * <var:K> * <var:F> * <var:E> * <var:p> ) /\ ( <var:p> >= <nat:2> ) /\ ( <var:F> >= <nat:2> ) /\ ( <var:g> >= <nat:2> ) /\ ( <var:U> >= <nat:2> ) /\ ( <var:c> >= <nat:2> ) /\ ( <var:Q> >= <nat:2> ) /\ ( <var:k> >= <nat:2> ) /\ ( <var:E> >= <nat:2> ) /\ ( <var:C> >= <nat:2> ) /\ ( <var:K> >= <nat:2> ) . Theorem <genP:1> : <def:ten-composite> <nat:129729600> . Proof . unfold <def:ten-composite> . exists <nat:6> . exists <nat:2> . exists <nat:5> . exists <nat:10> . exists <nat:13> . exists <nat:9> . exists <nat:8> . exists <nat:3> . exists <nat:7> . exists <nat:11> . assert ( <genH> : <nat:10> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:5> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:8> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:3> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:7> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:2> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:13> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:9> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:11> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:6> >= <nat:2> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 