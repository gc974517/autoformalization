\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Assuming positive numbers $ <var:Y> $ , $ <var:I> $ , $ <var:P> $ , $ <var:w> $ , $ <var:g> $ , $ <var:O> $ , and $ <var:o> $ $ <nat:100> \cdot <var:O> + <nat:230> \cdot <var:g> + <nat:66> \cdot <var:w> + <nat:496> \cdot <var:I> + <var:o> \cdot <nat:256> + <nat:489> + <nat:154> \cdot <var:Y> + <nat:420> \cdot <var:P> $ is odd . \end{theorem} \begin{proof} Take note that $ <nat:489> $ is obviously an odd number in $ \mathbb{N} $ . Taking the product between even natural numbers is even . Recall that the integers $ <nat:256> $ and $ <nat:230> $ are guaranteed to be even numbers in $ \mathbb{Z}^+ $ What's more , the numbers $ <nat:154> $ , $ <nat:496> $ , in addition to $ <nat:420> $ are trivially even The natural number $ <nat:66> $ is known as an even element of $ \mathbb{N} $ Take note the coefficient $ <nat:100> $ is clearly an even element of $ \mathbb{N} $ \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:Y> <var:I> <var:P> <var:w> <var:g> <var:O> <var:o> : nat , Nat . odd ( <nat:100> * <var:O> + <nat:230> * <var:g> + <nat:66> * <var:w> + <nat:496> * <var:I> + <nat:256> * <var:o> + <nat:154> * <var:Y> + <nat:420> * <var:P> + <nat:489> ) = true . Proof . intros . assert ( <genH> : Nat . odd <nat:489> = true ) . { auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . repeat rewrite Nat . even_mul . assert ( <genH> : Nat . even <nat:256> = true ) . { auto . } assert ( <genH> : Nat . even <nat:230> = true ) . { auto . } assert ( <genH> : Nat . even <nat:154> = true ) . { auto . } assert ( <genH> : Nat . even <nat:496> = true ) . { auto . } assert ( <genH> : Nat . even <nat:420> = true ) . { auto . } assert ( <genH> : Nat . even <nat:66> = true ) . { auto . } assert ( <genH> : Nat . even <nat:100> = true ) . { auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 