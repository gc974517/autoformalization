\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Whenever we get $ <var:Z> $ , $ <var:m> $ , $ <var:z> $ , $ <var:A> $ , $ <var:s> $ , $ <var:a> $ , $ <var:R> $ , $ <var:Q> $ , $ <var:J> \geq <nat:2> $ such that for $ <var:g> \in \mathbb{N} $ , $ <var:g> = <var:J> \times <var:a> \times <var:z> \times <var:A> \times <var:m> \times <var:Z> \times <var:s> \times <var:R> \times <var:Q> $ given some positive integers $ <var:R> $ , $ <var:A> $ , $ <var:Q> $ , $ <var:z> $ , $ <var:Z> $ , $ <var:a> $ , $ <var:m> $ , $ <var:J> $ , $ <var:s> $ , take as given that $ <var:g> $ is a <def:nine-composite> whole number . For this reason the integer <nat:11321856> is a <def:nine-composite> positive integer . \end{theorem} \begin{proof} Allow $ <var:z> = <nat:8> $ , $ <var:J> = <nat:3> $ , $ <var:m> = <nat:4> $ , $ <var:s> = <nat:13> $ , $ <var:Q> = <nat:2> $ , $ <var:A> = <nat:9> $ , $ <var:R> = <nat:12> $ , $ <var:a> = <nat:6> $ , $ <var:Z> = <nat:7> $ . We prove the thesis is true in consideration of $ <var:J> * <var:A> * <var:z> * <var:Z> * <var:s> * <var:Q> * <var:R> * <var:a> * <var:m> = <nat:11321856> $ plus for $ <var:m> = <nat:4> $ , $ <var:s> = <nat:13> $ , $ <var:J> = <nat:3> $ , $ <var:z> = <nat:8> $ , $ <var:R> = <nat:12> $ , $ <var:Z> = <nat:7> $ , $ <var:A> = <nat:9> $ , $ <var:Q> = <nat:2> $ , and $ <var:a> = <nat:6> \geq <nat:2> $ . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:nine-composite> ( <var:g> : nat ) := exists <var:R> <var:A> <var:Q> <var:z> <var:Z> <var:a> <var:m> <var:J> <var:s> : nat , ( <var:Z> >= <nat:2> ) /\ ( <var:m> >= <nat:2> ) /\ ( <var:z> >= <nat:2> ) /\ ( <var:A> >= <nat:2> ) /\ ( <var:s> >= <nat:2> ) /\ ( <var:a> >= <nat:2> ) /\ ( <var:R> >= <nat:2> ) /\ ( <var:Q> >= <nat:2> ) /\ ( <var:J> >= <nat:2> ) /\ ( <var:g> = <var:J> * <var:a> * <var:z> * <var:A> * <var:m> * <var:Z> * <var:s> * <var:R> * <var:Q> ) . Theorem <genP:1> : <def:nine-composite> <nat:11321856> . Proof . unfold <def:nine-composite> . exists <nat:12> . exists <nat:9> . exists <nat:2> . exists <nat:8> . exists <nat:7> . exists <nat:6> . exists <nat:4> . exists <nat:3> . exists <nat:13> . assert ( <genH> : <nat:4> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:13> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:3> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:8> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:12> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:7> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:9> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:2> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:6> >= <nat:2> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 