\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Assuming all positive terms $ <var:d> $ , $ <var:Y> $ , $ <var:P> $ , $ <var:w> $ , $ <var:G> $ , $ <var:C> $ , $ <var:m> $ , and $ <var:O> $ the expression $ <nat:14> + <var:m> \times <nat:188> + <var:d> \times <nat:162> + <var:w> \times <nat:124> + <nat:22> \times <var:P> + <var:Y> \times <nat:178> + <var:O> \times <nat:456> + <var:G> \times <nat:120> + <nat:174> \times <var:C> $ is guaranteed to be even . \end{theorem} \begin{proof} The summation $ <nat:178> \cdot <var:Y> + <nat:14> + <nat:120> \cdot <var:G> + <var:C> \cdot <nat:174> + <nat:188> \cdot <var:m> + <nat:162> \cdot <var:d> + <nat:456> \cdot <var:O> + <nat:22> \cdot <var:P> + <var:w> \cdot <nat:124> $ is known as even since the expression $ <nat:162> <var:d> + <var:G> <nat:120> + <nat:178> <var:Y> + <var:C> <nat:174> + <var:w> <nat:124> + <nat:456> <var:O> + <var:m> <nat:188> + <var:P> <nat:22> $ is known to be even . The terms $ <nat:188> * <var:m> $ , $ <var:G> * <nat:120> $ , $ <var:P> * <nat:22> $ , $ <var:C> * <nat:174> $ , $ <nat:162> * <var:d> $ , and likewise $ <nat:124> * <var:w> $ must be even . This holds from the fact the positive integers $ <nat:188> $ , $ <nat:120> $ , $ <nat:22> $ , $ <nat:174> $ , $ <nat:162> $ , and also $ <nat:124> $ will be even . The term $ <nat:456> * <var:O> $ is guaranteed to be an even positive integer because the integer $ <nat:456> $ is known as even . Remember the product $ <var:Y> * <nat:178> $ is obviously an even natural number . This fact must be true as a consequence that the integer $ <nat:178> $ is clearly an even natural number . We show that the expression $ <nat:188> \cdot <var:m> + <var:Y> \cdot <nat:178> + <var:P> \cdot <nat:22> + <var:d> \cdot <nat:162> + <var:O> \cdot <nat:456> + <var:C> \cdot <nat:174> + <var:w> \cdot <nat:124> + <nat:14> + <nat:120> \cdot <var:G> $ will be even . See the summing of an even positive integer with an even positive integer must be even . See $ <nat:14> $ is obviously even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:d> <var:Y> <var:P> <var:w> <var:G> <var:C> <var:m> <var:O> : nat , Nat . even ( <nat:188> * <var:m> + <nat:162> * <var:d> + <nat:124> * <var:w> + <nat:22> * <var:P> + <nat:178> * <var:Y> + <nat:456> * <var:O> + <nat:120> * <var:G> + <nat:174> * <var:C> + <nat:14> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:188> = true ) . { auto . } assert ( <genH> : Nat . even <nat:120> = true ) . { auto . } assert ( <genH> : Nat . even <nat:22> = true ) . { auto . } assert ( <genH> : Nat . even <nat:174> = true ) . { auto . } assert ( <genH> : Nat . even <nat:162> = true ) . { auto . } assert ( <genH> : Nat . even <nat:124> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:188> * <var:m> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:120> * <var:G> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:22> * <var:P> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:174> * <var:C> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:162> * <var:d> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:124> * <var:w> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:456> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:456> * <var:O> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:178> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:178> * <var:Y> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:188> * <var:m> + <nat:162> * <var:d> + <nat:124> * <var:w> + <nat:22> * <var:P> + <nat:178> * <var:Y> + <nat:456> * <var:O> + <nat:120> * <var:G> + <nat:174> * <var:C> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . even_add . assert ( <genH> : Nat . even <nat:14> = true ) . { auto . } rewrite <genH> . rewrite <genH> . auto . Qed . 