\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:99> + <var:K> * <nat:474> + <nat:44> * <var:h> + <var:t> * <nat:322> + <var:o> * <nat:256> $ is odd . \end{theorem} \begin{proof} This proposition is true since $ <nat:322> \cdot <var:t> + <var:K> \cdot <nat:474> + <var:h> \cdot <nat:44> + <var:o> \cdot <nat:256> $ is trivially even . Remember that the totaling between even numbers in $ \mathbb{Z}^+ $ collectively with an even whole number is guaranteed to be even . In addition , the numbers $ <nat:322> $ , $ <nat:474> $ , $ <nat:44> $ , and $ <nat:256> $ are even whole numbers . Accordingly , the products $ <var:t> \cdot <nat:322> $ , $ <nat:474> \cdot <var:K> $ , $ <nat:44> \cdot <var:h> $ , and likewise $ <var:o> \cdot <nat:256> $ is guaranteed to be even additionally . It can be shown that that the summation $ <var:t> \times <nat:322> + <var:K> \times <nat:474> + <nat:99> + <var:h> \times <nat:44> + <var:o> \times <nat:256> $ is guaranteed to be odd . We know the addition of even elements of $ \mathbb{Z}^+ $ successively and an odd element of $ \mathbb{N} $ is guaranteed to be obviously an odd integer . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:K> <var:h> <var:t> <var:o> : nat , Nat . odd ( <nat:474> * <var:K> + <nat:44> * <var:h> + <nat:322> * <var:t> + <nat:256> * <var:o> + <nat:99> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:322> = true ) . { auto . } assert ( <genH> : Nat . even <nat:474> = true ) . { auto . } assert ( <genH> : Nat . even <nat:44> = true ) . { auto . } assert ( <genH> : Nat . even <nat:256> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:322> * <var:t> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:474> * <var:K> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:44> * <var:h> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:256> * <var:o> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:474> * <var:K> + <nat:44> * <var:h> + <nat:322> * <var:t> + <nat:256> * <var:o> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . auto . Qed . 