\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:482> + <var:O> <nat:474> + <var:L> <nat:308> + <nat:70> <var:M> + <var:g> <nat:388> + <var:v> <nat:362> + <nat:406> <var:r> + <nat:28> <var:V> + <var:i> <nat:234> + <var:c> <nat:408> + <var:y> <nat:310> $ is guaranteed to be even . \end{theorem} \begin{proof} The terms $ <var:O> <nat:474> $ , $ <nat:70> <var:M> $ , $ <nat:406> <var:r> $ , $ <nat:388> <var:g> $ , $ <nat:308> <var:L> $ , $ <nat:310> <var:y> $ , $ <nat:234> <var:i> $ , and likewise $ <var:V> <nat:28> $ are guaranteed to be even integers . This is proven by reason that taking the product between an even whole number and some number is an even integer . The term $ <var:c> <nat:408> $ is trivially an even element of $ \mathbb{N} $ . In addition to this , the pair $ <nat:362> <var:v> $ is guaranteed to be even . This claim is true since taking the product of an even positive integer and a integer will be even . We justify the expression $ <var:r> \cdot <nat:406> + <var:O> \cdot <nat:474> + <var:L> \cdot <nat:308> + <nat:408> \cdot <var:c> + <nat:28> \cdot <var:V> + <var:i> \cdot <nat:234> + <nat:70> \cdot <var:M> + <var:v> \cdot <nat:362> + <var:g> \cdot <nat:388> + <nat:482> + <nat:310> \cdot <var:y> $ will be even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:O> <var:L> <var:M> <var:g> <var:v> <var:r> <var:V> <var:i> <var:c> <var:y> : nat , Nat . even ( <nat:474> * <var:O> + <nat:308> * <var:L> + <nat:70> * <var:M> + <nat:388> * <var:g> + <nat:362> * <var:v> + <nat:406> * <var:r> + <nat:28> * <var:V> + <nat:234> * <var:i> + <nat:408> * <var:c> + <nat:310> * <var:y> + <nat:482> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:474> * <var:O> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:70> * <var:M> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:406> * <var:r> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:388> * <var:g> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:308> * <var:L> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:310> * <var:y> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:234> * <var:i> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:28> * <var:V> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:408> * <var:c> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:362> * <var:v> ) = true ) . { rewrite Nat . even_mul . auto . } repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 