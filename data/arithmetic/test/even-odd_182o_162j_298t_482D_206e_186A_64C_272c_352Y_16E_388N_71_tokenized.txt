\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:t> \cdot <nat:298> + <var:D> \cdot <nat:482> + <nat:352> \cdot <var:Y> + <nat:182> \cdot <var:o> + <var:j> \cdot <nat:162> + <nat:64> \cdot <var:C> + <nat:206> \cdot <var:e> + <var:c> \cdot <nat:272> + <nat:71> + <var:N> \cdot <nat:388> + <var:A> \cdot <nat:186> + <nat:16> \cdot <var:E> $ will be odd . \end{theorem} \begin{proof} Recall that the addition between an even element of $ \mathbb{Z}^+ $ with an odd number must be in itself an odd whole number . It can be checked that that the formula $ <nat:272> \cdot <var:c> + <nat:182> \cdot <var:o> + <var:j> \cdot <nat:162> + <nat:352> \cdot <var:Y> + <var:D> \cdot <nat:482> + <nat:388> \cdot <var:N> + <nat:16> \cdot <var:E> + <nat:206> \cdot <var:e> + <var:C> \cdot <nat:64> + <nat:186> \cdot <var:A> + <var:t> \cdot <nat:298> $ is even . As a consequence that multiplying of even numbers in $ \mathbb{N} $ and an arbitrary number must be an even positive integer $ <var:o> <nat:182> + <nat:162> <var:j> + <nat:298> <var:t> + <nat:482> <var:D> + <var:e> <nat:206> + <var:A> <nat:186> + <var:C> <nat:64> + <var:c> <nat:272> + <var:Y> <nat:352> + <nat:16> <var:E> + <var:N> <nat:388> $ will be even . It can be checked that this claim must be true . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:t> <var:D> <var:Y> <var:o> <var:j> <var:C> <var:e> <var:c> <var:N> <var:A> <var:E> : nat , Nat . odd ( <nat:298> * <var:t> + <nat:482> * <var:D> + <nat:352> * <var:Y> + <nat:182> * <var:o> + <nat:162> * <var:j> + <nat:64> * <var:C> + <nat:206> * <var:e> + <nat:272> * <var:c> + <nat:388> * <var:N> + <nat:186> * <var:A> + <nat:16> * <var:E> + <nat:71> ) = true . Proof . intros . rewrite Nat . odd_add . assert ( <genH> : Nat . even ( <nat:298> * <var:t> + <nat:482> * <var:D> + <nat:352> * <var:Y> + <nat:182> * <var:o> + <nat:162> * <var:j> + <nat:64> * <var:C> + <nat:206> * <var:e> + <nat:272> * <var:c> + <nat:388> * <var:N> + <nat:186> * <var:A> + <nat:16> * <var:E> ) = true ) . { repeat rewrite Nat . even_add . repeat rewrite Nat . even_mul . auto . } rewrite <- Nat . negb_even . rewrite <genH> . auto . Qed . 