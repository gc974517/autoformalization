\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:386> \cdot <var:K> + <nat:402> \cdot <var:q> + <var:M> \cdot <nat:292> + <nat:330> \cdot <var:A> + <nat:147> + <nat:14> \cdot <var:a> $ is guaranteed to be odd . \end{theorem} \begin{proof} The pairs $ <var:A> \times <nat:330> $ in addition to $ <var:a> \times <nat:14> $ must be even . This claim is true because taking the product between an even number in $ \mathbb{Z}^+ $ and an arbitrary natural must be an even element of $ \mathbb{N} $ . Building on , notice that the terms $ <nat:292> \times <var:M> $ and also $ <nat:402> \times <var:q> $ are clearly even numbers in $ \mathbb{N} $ . This claim is proven as a consequence that the product of an even positive integer with any integer must be even . Recall that $ <nat:386> \times <var:K> $ is known to be an even positive integer . See that $ <nat:147> $ is guaranteed to be an odd integer . We check the result must be true . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:K> <var:q> <var:M> <var:A> <var:a> : nat , Nat . odd ( <nat:386> * <var:K> + <nat:402> * <var:q> + <nat:292> * <var:M> + <nat:330> * <var:A> + <nat:14> * <var:a> + <nat:147> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:330> * <var:A> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:14> * <var:a> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:292> * <var:M> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:402> * <var:q> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:386> * <var:K> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . odd <nat:147> = true ) . { auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 