\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Assuming every positive terms $ <var:W> $ , $ <var:x> $ , $ <var:M> $ , $ <var:F> $ , $ <var:t> $ , $ <var:Q> $ , and $ <var:U> $ the formula $ <var:M> <nat:288> + <var:F> <nat:284> + <nat:218> <var:t> + <nat:280> <var:W> + <nat:150> <var:Q> + <var:x> <nat:2> + <var:U> <nat:200> + <nat:316> $ must be even . \end{theorem} \begin{proof} Adding on , take note that the positive integers $ <nat:288> $ , $ <nat:284> $ , $ <nat:218> $ , $ <nat:280> $ , $ <nat:150> $ , $ <nat:2> $ , $ <nat:200> $ , are trivially even numbers . Then , the pairs $ <nat:288> * <var:M> $ , $ <var:F> * <nat:284> $ , $ <nat:218> * <var:t> $ , $ <nat:280> * <var:W> $ , $ <nat:150> * <var:Q> $ , $ <var:x> * <nat:2> $ , $ <var:U> * <nat:200> $ , will be even additionally . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:W> <var:x> <var:M> <var:F> <var:t> <var:Q> <var:U> : nat , Nat . even ( <nat:288> * <var:M> + <nat:284> * <var:F> + <nat:218> * <var:t> + <nat:280> * <var:W> + <nat:150> * <var:Q> + <nat:2> * <var:x> + <nat:200> * <var:U> + <nat:316> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:288> = true ) . { auto . } assert ( <genH> : Nat . even <nat:284> = true ) . { auto . } assert ( <genH> : Nat . even <nat:218> = true ) . { auto . } assert ( <genH> : Nat . even <nat:280> = true ) . { auto . } assert ( <genH> : Nat . even <nat:150> = true ) . { auto . } assert ( <genH> : Nat . even <nat:2> = true ) . { auto . } assert ( <genH> : Nat . even <nat:200> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:288> * <var:M> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:284> * <var:F> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:218> * <var:t> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:280> * <var:W> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:150> * <var:Q> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:2> * <var:x> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:200> * <var:U> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 