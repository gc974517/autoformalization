\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} For some terms $ <var:F> $ , $ <var:a> $ , $ <var:f> $ , $ <var:X> $ , $ <var:U> $ , $ <var:i> $ , $ <var:n> $ , $ <var:K> $ , and $ <var:W> $ the summation $ <var:K> \cdot <nat:98> + <var:n> \cdot <nat:78> + <var:U> \cdot <nat:76> + <var:i> \cdot <nat:2> + <nat:182> \cdot <var:F> + <nat:44> \cdot <var:X> + <var:a> \cdot <nat:106> + <var:f> \cdot <nat:156> + <nat:66> \cdot <var:W> + <nat:317> $ must be odd . \end{theorem} \begin{proof} Take note the summing of an even natural number with an odd positive integer is an odd number in $ \mathbb{N} $ . Observe that the term $ <nat:66> * <var:W> $ is clearly even as a consequence that taking the product between an even natural with any number in $ \mathbb{N} $ must be an even positive integer . This is true since the whole number $ <nat:66> $ is guaranteed to be by itself an even positive integer . We know that the positive integer $ <nat:182> $ is obviously even . Hence , the pair $ <nat:182> * <var:F> $ must be even also . On top of this , remember the number $ <nat:156> $ is obviously an even number in $ \mathbb{Z}^+ $ . Therefore , the product $ <nat:156> * <var:f> $ must be even in addition . The pair $ <nat:2> * <var:i> $ is known as even by reason that taking the product between an even number in $ \mathbb{N} $ with an arbitrary whole number must be an even number in $ \mathbb{N} $ . This claim must be true from the knowledge the leading term $ <nat:2> $ is clearly even . Adding on , remember that the term $ <var:K> * <nat:98> $ is obviously an even integer by reason that the integer $ <nat:98> $ is even . On top of this , the whole number $ <nat:44> $ is known to be an even number . For this reason , $ <var:X> * <nat:44> $ will be even too . Further , see $ <nat:78> * <var:n> $ is clearly even . This holds from the fact the number $ <nat:78> $ is guaranteed to be even . The integer $ <nat:106> $ is even . Then , the product $ <var:a> * <nat:106> $ will be even at the same time . See that the whole number $ <nat:76> $ is trivially even . Consequently , the pair $ <var:U> * <nat:76> $ is guaranteed to be even also . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:F> <var:a> <var:f> <var:X> <var:U> <var:i> <var:n> <var:K> <var:W> : nat , Nat . odd ( <nat:98> * <var:K> + <nat:78> * <var:n> + <nat:76> * <var:U> + <nat:2> * <var:i> + <nat:182> * <var:F> + <nat:44> * <var:X> + <nat:106> * <var:a> + <nat:156> * <var:f> + <nat:66> * <var:W> + <nat:317> ) = true . Proof . intros . rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . assert ( <genH> : Nat . even <nat:66> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:66> * <var:W> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:182> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:182> * <var:F> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:156> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:156> * <var:f> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:2> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:2> * <var:i> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:98> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:98> * <var:K> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:44> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:44> * <var:X> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:78> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:78> * <var:n> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:106> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:106> * <var:a> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:76> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:76> * <var:U> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 