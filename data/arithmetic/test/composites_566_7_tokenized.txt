\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \newtheorem{definition}{Definition} \begin{document} \begin{definition} With the condition that we have $ <var:H> \times <var:e> \times <var:o> \times <var:O> \times <var:K> \times <var:M> \times <var:F> = <var:T> $ for some $ <var:T> $ as well as satisfying the condition that $ <var:K> $ , $ <var:H> $ , $ <var:M> $ , $ <var:e> $ , $ <var:o> $ , $ <var:O> $ , $ <var:F> \geq <nat:2> $ , then we denote that $ <var:T> $ is a <def:seven-composite> positive integer with some $ <var:o> $ , $ <var:O> $ , $ <var:M> $ , $ <var:e> $ , $ <var:F> $ , $ <var:K> $ , $ <var:H> \in \mathbb{N} $ . \end{definition} \begin{theorem} The integer <nat:1297296> is a <def:seven-composite> whole number . \end{theorem} \begin{proof} Recall <nat:1297296> is a <def:seven-composite> whole number assuming it is the product of integers $ <var:M> $ , $ <var:F> $ , $ <var:o> $ , $ <var:K> $ , $ <var:O> $ , $ <var:H> $ and $ <var:e> $ greater than <nat:1> . Let $ <var:e> = <nat:4> $ , $ <var:o> = <nat:3> $ , $ <var:M> = <nat:7> $ , $ <var:K> = <nat:11> $ , $ <var:H> = <nat:12> $ , $ <var:F> = <nat:13> $ and $ <var:O> = <nat:9> $ . Moreover observe that $ <nat:12> $ , $ <nat:13> $ , $ <nat:11> $ , $ <nat:3> $ , $ <nat:9> $ , $ <nat:7> $ , $ <nat:4> > <nat:1> $ . This suggests <nat:1297296> is a <def:seven-composite> number . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:seven-composite> ( <var:T> : nat ) := exists <var:o> <var:O> <var:M> <var:e> <var:F> <var:K> <var:H> : nat , ( <var:H> * <var:e> * <var:o> * <var:O> * <var:K> * <var:M> * <var:F> = <var:T> ) /\ ( <var:K> >= <nat:2> ) /\ ( <var:H> >= <nat:2> ) /\ ( <var:M> >= <nat:2> ) /\ ( <var:e> >= <nat:2> ) /\ ( <var:o> >= <nat:2> ) /\ ( <var:O> >= <nat:2> ) /\ ( <var:F> >= <nat:2> ) . Theorem <genP:1> : <def:seven-composite> <nat:1297296> . Proof . unfold <def:seven-composite> . exists <nat:3> . exists <nat:9> . exists <nat:7> . exists <nat:4> . exists <nat:13> . exists <nat:11> . exists <nat:12> . assert ( <genH> : <nat:12> > <nat:1> ) . { lia . } assert ( <genH> : <nat:13> > <nat:1> ) . { lia . } assert ( <genH> : <nat:11> > <nat:1> ) . { lia . } assert ( <genH> : <nat:3> > <nat:1> ) . { lia . } assert ( <genH> : <nat:9> > <nat:1> ) . { lia . } assert ( <genH> : <nat:7> > <nat:1> ) . { lia . } assert ( <genH> : <nat:4> > <nat:1> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 