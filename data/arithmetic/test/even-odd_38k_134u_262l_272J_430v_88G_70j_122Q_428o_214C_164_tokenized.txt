\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:j> * <nat:70> + <nat:262> * <var:l> + <var:o> * <nat:428> + <var:G> * <nat:88> + <nat:38> * <var:k> + <nat:272> * <var:J> + <nat:134> * <var:u> + <nat:430> * <var:v> + <nat:122> * <var:Q> + <nat:164> + <var:C> * <nat:214> $ will be even taking every integers $ <var:l> $ , $ <var:G> $ , $ <var:v> $ , $ <var:J> $ , $ <var:o> $ , $ <var:C> $ , $ <var:k> $ , $ <var:Q> $ , $ <var:j> $ , and $ <var:u> $ . \end{theorem} \begin{proof} We verify the formula $ <var:v> <nat:430> + <nat:38> <var:k> + <nat:122> <var:Q> + <nat:164> + <var:u> <nat:134> + <nat:88> <var:G> + <var:o> <nat:428> + <var:J> <nat:272> + <var:C> <nat:214> + <var:l> <nat:262> + <nat:70> <var:j> $ is even . See the summing of even numbers in $ \mathbb{N} $ together with an even natural number must be an even element of $ \mathbb{Z}^+ $ . The summation $ <var:C> * <nat:214> + <var:j> * <nat:70> + <var:l> * <nat:262> + <var:G> * <nat:88> + <nat:134> * <var:u> + <var:v> * <nat:430> + <nat:122> * <var:Q> + <nat:164> + <nat:428> * <var:o> + <var:k> * <nat:38> + <nat:272> * <var:J> $ is known as even as a consequence that $ <nat:38> <var:k> + <nat:134> <var:u> + <nat:262> <var:l> + <nat:272> <var:J> + <nat:430> <var:v> + <nat:88> <var:G> + <nat:70> <var:j> + <var:Q> <nat:122> + <nat:428> <var:o> + <var:C> <nat:214> $ is even . Further , recall that the positive integers $ <nat:38> $ , $ <nat:134> $ , $ <nat:262> $ , $ <nat:272> $ , $ <nat:430> $ , $ <nat:88> $ , $ <nat:70> $ , $ <nat:122> $ , $ <nat:428> $ , and also $ <nat:214> $ must be even naturals . Then , the terms $ <nat:38> * <var:k> $ , $ <nat:134> * <var:u> $ , $ <var:l> * <nat:262> $ , $ <var:J> * <nat:272> $ , $ <nat:430> * <var:v> $ , $ <var:G> * <nat:88> $ , $ <var:j> * <nat:70> $ , $ <var:Q> * <nat:122> $ , $ <var:o> * <nat:428> $ , and also $ <nat:214> * <var:C> $ is even too . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:l> <var:G> <var:v> <var:J> <var:o> <var:C> <var:k> <var:Q> <var:j> <var:u> : nat , Nat . even ( <nat:70> * <var:j> + <nat:262> * <var:l> + <nat:428> * <var:o> + <nat:88> * <var:G> + <nat:38> * <var:k> + <nat:272> * <var:J> + <nat:134> * <var:u> + <nat:430> * <var:v> + <nat:122> * <var:Q> + <nat:214> * <var:C> + <nat:164> ) = true . Proof . intros . rewrite Nat . even_add . assert ( <genH> : Nat . even <nat:38> = true ) . { auto . } assert ( <genH> : Nat . even <nat:134> = true ) . { auto . } assert ( <genH> : Nat . even <nat:262> = true ) . { auto . } assert ( <genH> : Nat . even <nat:272> = true ) . { auto . } assert ( <genH> : Nat . even <nat:430> = true ) . { auto . } assert ( <genH> : Nat . even <nat:88> = true ) . { auto . } assert ( <genH> : Nat . even <nat:70> = true ) . { auto . } assert ( <genH> : Nat . even <nat:122> = true ) . { auto . } assert ( <genH> : Nat . even <nat:428> = true ) . { auto . } assert ( <genH> : Nat . even <nat:214> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:38> * <var:k> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:134> * <var:u> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:262> * <var:l> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:272> * <var:J> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:430> * <var:v> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:88> * <var:G> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:70> * <var:j> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:122> * <var:Q> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:428> * <var:o> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:214> * <var:C> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:70> * <var:j> + <nat:262> * <var:l> + <nat:428> * <var:o> + <nat:88> * <var:G> + <nat:38> * <var:k> + <nat:272> * <var:J> + <nat:134> * <var:u> + <nat:430> * <var:v> + <nat:122> * <var:Q> + <nat:214> * <var:C> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite <genH> . auto . Qed . 