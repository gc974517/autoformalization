\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Taking all unknowns $ <var:l> $ , $ <var:V> $ , $ <var:C> $ , $ <var:Q> $ , $ <var:g> $ , $ <var:r> $ , $ <var:S> $ , $ <var:H> $ , $ <var:n> $ , and $ <var:u> $ the formula $ <var:S> * <nat:460> + <nat:114> * <var:u> + <nat:332> * <var:H> + <var:g> * <nat:262> + <var:n> * <nat:316> + <nat:66> * <var:Q> + <var:V> * <nat:244> + <var:C> * <nat:286> + <var:l> * <nat:498> + <nat:282> + <var:r> * <nat:198> $ must be even . \end{theorem} \begin{proof} Remember that the positive integers $ <nat:460> $ , $ <nat:114> $ , $ <nat:332> $ , $ <nat:262> $ , $ <nat:316> $ , $ <nat:66> $ , $ <nat:244> $ , $ <nat:286> $ , $ <nat:498> $ , and $ <nat:198> $ are guaranteed to be even . Consequently , the terms $ <var:S> * <nat:460> $ , $ <nat:114> * <var:u> $ , $ <var:H> * <nat:332> $ , $ <var:g> * <nat:262> $ , $ <nat:316> * <var:n> $ , $ <nat:66> * <var:Q> $ , $ <var:V> * <nat:244> $ , $ <nat:286> * <var:C> $ , $ <nat:498> * <var:l> $ , and also $ <var:r> * <nat:198> $ is even at the same time . It can be checked that the formula $ <nat:316> \cdot <var:n> + <var:Q> \cdot <nat:66> + <nat:244> \cdot <var:V> + <nat:286> \cdot <var:C> + <nat:262> \cdot <var:g> + <nat:282> + <var:u> \cdot <nat:114> + <var:l> \cdot <nat:498> + <var:H> \cdot <nat:332> + <nat:460> \cdot <var:S> + <nat:198> \cdot <var:r> $ is even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:l> <var:V> <var:C> <var:Q> <var:g> <var:r> <var:S> <var:H> <var:n> <var:u> : nat , Nat . even ( <nat:460> * <var:S> + <nat:114> * <var:u> + <nat:332> * <var:H> + <nat:262> * <var:g> + <nat:316> * <var:n> + <nat:66> * <var:Q> + <nat:244> * <var:V> + <nat:286> * <var:C> + <nat:498> * <var:l> + <nat:198> * <var:r> + <nat:282> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:460> = true ) . { auto . } assert ( <genH> : Nat . even <nat:114> = true ) . { auto . } assert ( <genH> : Nat . even <nat:332> = true ) . { auto . } assert ( <genH> : Nat . even <nat:262> = true ) . { auto . } assert ( <genH> : Nat . even <nat:316> = true ) . { auto . } assert ( <genH> : Nat . even <nat:66> = true ) . { auto . } assert ( <genH> : Nat . even <nat:244> = true ) . { auto . } assert ( <genH> : Nat . even <nat:286> = true ) . { auto . } assert ( <genH> : Nat . even <nat:498> = true ) . { auto . } assert ( <genH> : Nat . even <nat:198> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:460> * <var:S> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:114> * <var:u> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:332> * <var:H> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:262> * <var:g> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:316> * <var:n> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:66> * <var:Q> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:244> * <var:V> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:286> * <var:C> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:498> * <var:l> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:198> * <var:r> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 