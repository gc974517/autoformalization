\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:j> \cdot <nat:370> + <var:q> \cdot <nat:454> + <var:V> \cdot <nat:358> + <nat:70> \cdot <var:T> + <nat:378> \cdot <var:M> + <nat:99> + <var:O> \cdot <nat:40> $ is odd . \end{theorem} \begin{proof} The adding of an even whole number with an odd positive integer is guaranteed to be odd . We know that the product $ <nat:40> \times <var:O> $ is guaranteed to be even . This fact is proven because taking the product of an even whole number and some element of $ \mathbb{Z}^+ $ will be even . This is proven because the integer $ <nat:40> $ is guaranteed to be even . Observe that the terms $ <nat:358> \times <var:V> $ and likewise $ <nat:378> \times <var:M> $ are even as a consequence that multiplying between an even number in $ \mathbb{Z}^+ $ with a element of $ \mathbb{Z}^+ $ will be an even integer , and must be true from the knowledge the numbers $ <nat:358> $ and moreover $ <nat:378> $ are known to be even elements of $ \mathbb{Z}^+ $ . Likewise , the term $ <nat:454> \times <var:q> $ is even as a consequence that the integer $ <nat:454> $ is known as an even element of $ \mathbb{Z}^+ $ . Likewise , remember the positive integer $ <nat:370> $ is known to be even . So , the pair $ <nat:370> \times <var:j> $ will be even as well . The integer $ <nat:70> $ is clearly an even element of $ \mathbb{N} $ . As a consequence , the product $ <var:T> \times <nat:70> $ will be even in addition . It can be shown that our proposition must be true . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:j> <var:q> <var:V> <var:T> <var:M> <var:O> : nat , Nat . odd ( <nat:370> * <var:j> + <nat:454> * <var:q> + <nat:358> * <var:V> + <nat:70> * <var:T> + <nat:378> * <var:M> + <nat:40> * <var:O> + <nat:99> ) = true . Proof . intros . rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . assert ( <genH> : Nat . even <nat:40> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:40> * <var:O> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:358> = true ) . { auto . } assert ( <genH> : Nat . even <nat:378> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:358> * <var:V> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:378> * <var:M> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:454> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:454> * <var:q> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:370> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:370> * <var:j> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:70> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:70> * <var:T> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 