\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:103783680> $ is the same as $ <var:F> \times <var:G> \times <var:N> \times <var:b> \times <var:D> \times <var:P> \times <var:S> \times <var:n> \times <var:T> \times <var:u> $ with $ <var:u> $ , $ <var:S> $ , $ <var:b> $ , $ <var:T> $ , $ <var:N> $ , $ <var:F> $ , $ <var:D> $ , $ <var:n> $ , $ <var:G> $ and $ <var:P> \in \mathbb{Z}^+ $ satisfying the condition that $ <var:u> $ , $ <var:S> $ , $ <var:F> $ , $ <var:b> $ , $ <var:D> $ , $ <var:P> $ , $ <var:G> $ , $ <var:T> $ , $ <var:N> $ , $ <var:n> \geq <nat:2> $ . \end{theorem} \begin{proof} Assume $ <var:n> = <nat:8> $ , $ <var:T> = <nat:2> $ , $ <var:D> = <nat:7> $ , $ <var:N> = <nat:13> $ , $ <var:u> = <nat:6> $ , $ <var:P> = <nat:4> $ , $ <var:b> = <nat:11> $ , $ <var:G> = <nat:10> $ , $ <var:F> = <nat:3> $ , and $ <var:S> = <nat:9> $ . We prove $ <var:G> * <var:P> * <var:u> * <var:T> * <var:F> * <var:b> * <var:N> * <var:S> * <var:n> * <var:D> = <nat:103783680> $ . Observe that $ <nat:4> $ , $ <nat:8> $ , $ <nat:7> $ , $ <nat:3> $ , $ <nat:9> $ , $ <nat:11> $ , $ <nat:2> $ , $ <nat:13> $ , $ <nat:6> $ , and $ <nat:10> \geq <nat:2> $ . \end{proof} \end{document} 
~
Require Import Lia . Theorem <genP:1> : exists <var:u> <var:S> <var:b> <var:T> <var:N> <var:F> <var:D> <var:n> <var:G> <var:P> : nat , ( <nat:103783680> = <var:F> * <var:G> * <var:N> * <var:b> * <var:D> * <var:P> * <var:S> * <var:n> * <var:T> * <var:u> ) /\ ( <var:u> >= <nat:2> ) /\ ( <var:S> >= <nat:2> ) /\ ( <var:F> >= <nat:2> ) /\ ( <var:b> >= <nat:2> ) /\ ( <var:D> >= <nat:2> ) /\ ( <var:P> >= <nat:2> ) /\ ( <var:G> >= <nat:2> ) /\ ( <var:T> >= <nat:2> ) /\ ( <var:N> >= <nat:2> ) /\ ( <var:n> >= <nat:2> ) . Proof . exists <nat:6> . exists <nat:9> . exists <nat:11> . exists <nat:2> . exists <nat:13> . exists <nat:3> . exists <nat:7> . exists <nat:8> . exists <nat:10> . exists <nat:4> . assert ( <genH> : <nat:4> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:8> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:7> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:3> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:9> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:11> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:2> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:13> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:6> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:10> >= <nat:2> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 