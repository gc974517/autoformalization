\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} We denote that $ <var:s> $ is a <def:ten-composite> number iff there are some whole numbers $ <var:L> $ , $ <var:N> $ , $ <var:T> $ , $ <var:f> $ , $ <var:q> $ , $ <var:m> $ , $ <var:V> $ , $ <var:Z> $ , $ <var:E> $ , $ <var:t> $ such that $ <var:N> $ , $ <var:V> $ , $ <var:L> $ , $ <var:f> $ , $ <var:t> $ , $ <var:Z> $ , $ <var:m> $ , $ <var:E> $ , $ <var:q> $ , and $ <var:T> \geq <nat:2> $ as well as with some positive integer $ <var:s> $ , $ <var:s> = <var:L> \cdot <var:E> \cdot <var:t> \cdot <var:q> \cdot <var:N> \cdot <var:m> \cdot <var:V> \cdot <var:Z> \cdot <var:f> \cdot <var:T> $ . For this reason $ <nat:74131200> = <var:s> $ is a <def:ten-composite> integer . \end{theorem} \begin{proof} Remember that <nat:74131200> is a <def:ten-composite> whole number with the condition that it is the multiplication of $ <var:E> $ , $ <var:V> $ , $ <var:m> $ , $ <var:q> $ , $ <var:N> $ , $ <var:Z> $ , $ <var:f> $ , $ <var:T> $ , $ <var:t> $ and $ <var:L> $ where $ <var:t> $ , $ <var:m> $ , $ <var:q> $ , $ <var:V> $ , $ <var:N> $ , $ <var:E> $ , $ <var:T> $ , $ <var:L> $ , $ <var:Z> $ and $ <var:f> \geq <nat:2> $ . Allow $ <var:L> = <nat:5> $ , $ <var:N> = <nat:13> $ , $ <var:V> = <nat:9> $ , $ <var:E> = <nat:4> $ , $ <var:f> = <nat:11> $ , $ <var:q> = <nat:6> $ , $ <var:t> = <nat:2> $ , $ <var:T> = <nat:8> $ , $ <var:m> = <nat:10> $ , $ <var:Z> = <nat:3> $ . Additionally observe $ <nat:9> $ , $ <nat:2> $ , $ <nat:6> $ , $ <nat:8> $ , $ <nat:13> $ , $ <nat:4> $ , $ <nat:11> $ , $ <nat:10> $ , $ <nat:3> $ , and $ <nat:5> \geq <nat:2> $ . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:ten-composite> ( <var:s> : nat ) := exists <var:L> <var:N> <var:T> <var:f> <var:q> <var:m> <var:V> <var:Z> <var:E> <var:t> : nat , ( <var:N> >= <nat:2> ) /\ ( <var:V> >= <nat:2> ) /\ ( <var:L> >= <nat:2> ) /\ ( <var:f> >= <nat:2> ) /\ ( <var:t> >= <nat:2> ) /\ ( <var:Z> >= <nat:2> ) /\ ( <var:m> >= <nat:2> ) /\ ( <var:E> >= <nat:2> ) /\ ( <var:q> >= <nat:2> ) /\ ( <var:T> >= <nat:2> ) /\ ( <var:s> = <var:L> * <var:E> * <var:t> * <var:q> * <var:N> * <var:m> * <var:V> * <var:Z> * <var:f> * <var:T> ) . Theorem <genP:1> : <def:ten-composite> <nat:74131200> . Proof . unfold <def:ten-composite> . exists <nat:5> . exists <nat:13> . exists <nat:8> . exists <nat:11> . exists <nat:6> . exists <nat:10> . exists <nat:9> . exists <nat:3> . exists <nat:4> . exists <nat:2> . assert ( <genH> : <nat:9> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:2> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:6> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:8> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:13> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:4> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:11> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:10> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:3> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:5> >= <nat:2> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 