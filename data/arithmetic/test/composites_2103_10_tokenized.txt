\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \newtheorem{definition}{Definition} \begin{document} \begin{definition} Let that $ <var:f> $ is <def:ten-composite> wherever using some $ <var:L> $ , $ <var:S> $ , $ <var:G> $ , $ <var:h> $ , $ <var:O> $ , $ <var:s> $ , $ <var:D> $ , $ <var:n> $ , $ <var:t> $ , $ <var:V> $ we get such that $ <var:h> $ , $ <var:S> $ , $ <var:s> $ , $ <var:t> $ , $ <var:O> $ , $ <var:L> $ , $ <var:D> $ , $ <var:V> $ , $ <var:G> $ , $ <var:n> > <nat:1> $ plus with some positive integer $ <var:f> $ , $ <var:G> \times <var:V> \times <var:L> \times <var:O> \times <var:D> \times <var:t> \times <var:h> \times <var:n> \times <var:S> \times <var:s> = <var:f> $ . \end{definition} \begin{theorem} $ <var:f> = <nat:119750400> $ is a <def:ten-composite> natural number . \end{theorem} \begin{proof} Take $ <var:G> = <nat:12> $ , $ <var:s> = <nat:7> $ , $ <var:D> = <nat:2> $ , $ <var:n> = <nat:5> $ , $ <var:O> = <nat:9> $ , $ <var:h> = <nat:11> $ , $ <var:t> = <nat:8> $ , $ <var:S> = <nat:3> $ , $ <var:L> = <nat:6> $ and $ <var:V> = <nat:10> $ . We justify <nat:119750400> is a <def:ten-composite> positive integer seeing that $ <var:V> \times <var:D> \times <var:s> \times <var:L> \times <var:t> \times <var:S> \times <var:O> \times <var:G> \times <var:h> \times <var:n> = <nat:119750400> $ plus seeing that $ <nat:3> $ , $ <nat:9> $ , $ <nat:2> $ , $ <nat:12> $ , $ <nat:7> $ , $ <nat:10> $ , $ <nat:11> $ , $ <nat:6> $ , $ <nat:8> $ and $ <nat:5> > <nat:1> $ . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:ten-composite> ( <var:f> : nat ) := exists <var:L> <var:S> <var:G> <var:h> <var:O> <var:s> <var:D> <var:n> <var:t> <var:V> : nat , ( <var:h> > <nat:1> ) /\ ( <var:S> > <nat:1> ) /\ ( <var:s> > <nat:1> ) /\ ( <var:t> > <nat:1> ) /\ ( <var:O> > <nat:1> ) /\ ( <var:L> > <nat:1> ) /\ ( <var:D> > <nat:1> ) /\ ( <var:V> > <nat:1> ) /\ ( <var:G> > <nat:1> ) /\ ( <var:n> > <nat:1> ) /\ ( <var:G> * <var:V> * <var:L> * <var:O> * <var:D> * <var:t> * <var:h> * <var:n> * <var:S> * <var:s> = <var:f> ) . Theorem <genP:1> : <def:ten-composite> <nat:119750400> . Proof . unfold <def:ten-composite> . exists <nat:6> . exists <nat:3> . exists <nat:12> . exists <nat:11> . exists <nat:9> . exists <nat:7> . exists <nat:2> . exists <nat:5> . exists <nat:8> . exists <nat:10> . assert ( <genH> : <nat:3> > <nat:1> ) . { lia . } assert ( <genH> : <nat:9> > <nat:1> ) . { lia . } assert ( <genH> : <nat:2> > <nat:1> ) . { lia . } assert ( <genH> : <nat:12> > <nat:1> ) . { lia . } assert ( <genH> : <nat:7> > <nat:1> ) . { lia . } assert ( <genH> : <nat:10> > <nat:1> ) . { lia . } assert ( <genH> : <nat:11> > <nat:1> ) . { lia . } assert ( <genH> : <nat:6> > <nat:1> ) . { lia . } assert ( <genH> : <nat:8> > <nat:1> ) . { lia . } assert ( <genH> : <nat:5> > <nat:1> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 