\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:172> * <var:P> + <var:h> * <nat:450> + <nat:224> * <var:Y> + <nat:402> * <var:i> + <var:o> * <nat:290> + <nat:58> * <var:M> + <var:R> * <nat:102> + <nat:458> * <var:C> + <nat:235> + <var:S> * <nat:270> + <var:D> * <nat:302> + <var:q> * <nat:444> $ will be odd . \end{theorem} \begin{proof} See the summing of an even whole number and an odd natural must be clearly an odd whole number . Adding on , take note that the natural numbers $ <nat:172> $ , $ <nat:450> $ , $ <nat:224> $ , $ <nat:402> $ , $ <nat:290> $ , $ <nat:58> $ , $ <nat:102> $ , $ <nat:458> $ , $ <nat:270> $ , $ <nat:302> $ , and $ <nat:444> $ are obviously even positive integers . For this reason , the terms $ <var:P> * <nat:172> $ , $ <var:h> * <nat:450> $ , $ <nat:224> * <var:Y> $ , $ <var:i> * <nat:402> $ , $ <nat:290> * <var:o> $ , $ <nat:58> * <var:M> $ , $ <nat:102> * <var:R> $ , $ <nat:458> * <var:C> $ , $ <nat:270> * <var:S> $ , $ <nat:302> * <var:D> $ , as well as $ <var:q> * <nat:444> $ must be even additionally . We verify $ <nat:444> \cdot <var:q> + <var:h> \cdot <nat:450> + <var:D> \cdot <nat:302> + <nat:172> \cdot <var:P> + <nat:235> + <var:i> \cdot <nat:402> + <nat:58> \cdot <var:M> + <nat:102> \cdot <var:R> + <var:C> \cdot <nat:458> + <nat:270> \cdot <var:S> + <nat:290> \cdot <var:o> + <nat:224> \cdot <var:Y> $ will be odd . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:P> <var:h> <var:Y> <var:i> <var:o> <var:M> <var:R> <var:C> <var:S> <var:D> <var:q> : nat , Nat . odd ( <nat:172> * <var:P> + <nat:450> * <var:h> + <nat:224> * <var:Y> + <nat:402> * <var:i> + <nat:290> * <var:o> + <nat:58> * <var:M> + <nat:102> * <var:R> + <nat:458> * <var:C> + <nat:270> * <var:S> + <nat:302> * <var:D> + <nat:444> * <var:q> + <nat:235> ) = true . Proof . intros . rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . assert ( <genH> : Nat . even <nat:172> = true ) . { auto . } assert ( <genH> : Nat . even <nat:450> = true ) . { auto . } assert ( <genH> : Nat . even <nat:224> = true ) . { auto . } assert ( <genH> : Nat . even <nat:402> = true ) . { auto . } assert ( <genH> : Nat . even <nat:290> = true ) . { auto . } assert ( <genH> : Nat . even <nat:58> = true ) . { auto . } assert ( <genH> : Nat . even <nat:102> = true ) . { auto . } assert ( <genH> : Nat . even <nat:458> = true ) . { auto . } assert ( <genH> : Nat . even <nat:270> = true ) . { auto . } assert ( <genH> : Nat . even <nat:302> = true ) . { auto . } assert ( <genH> : Nat . even <nat:444> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:172> * <var:P> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:450> * <var:h> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:224> * <var:Y> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:402> * <var:i> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:290> * <var:o> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:58> * <var:M> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:102> * <var:R> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:458> * <var:C> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:270> * <var:S> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:302> * <var:D> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:444> * <var:q> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 