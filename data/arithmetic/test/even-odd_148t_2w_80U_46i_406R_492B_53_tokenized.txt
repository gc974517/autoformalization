\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:w> \times <nat:2> + <nat:492> \times <var:B> + <var:i> \times <nat:46> + <nat:80> \times <var:U> + <nat:406> \times <var:R> + <var:t> \times <nat:148> + <nat:53> $ must be odd . \end{theorem} \begin{proof} See that $ <nat:53> $ is odd . The addition between even natural numbers and an odd number in $ \mathbb{N} $ must be an odd element of $ \mathbb{N} $ . So , this claim is true . This proposition is proven by reason that $ <var:t> \cdot <nat:148> + <var:w> \cdot <nat:2> + <var:U> \cdot <nat:80> + <nat:46> \cdot <var:i> + <nat:406> \cdot <var:R> + <var:B> \cdot <nat:492> $ is obviously even . The positive integers $ <nat:80> $ , $ <nat:148> $ , in addition to $ <nat:492> $ are clearly even The numbers $ <nat:2> $ plus $ <nat:406> $ will be even Notice that the positive integer $ <nat:46> $ is obviously even \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:w> <var:B> <var:i> <var:U> <var:R> <var:t> : nat , Nat . odd ( <nat:2> * <var:w> + <nat:492> * <var:B> + <nat:46> * <var:i> + <nat:80> * <var:U> + <nat:406> * <var:R> + <nat:148> * <var:t> + <nat:53> ) = true . Proof . intros . assert ( <genH> : Nat . odd <nat:53> = true ) . { auto . } rewrite Nat . odd_add . assert ( <genH> : Nat . even <nat:80> = true ) . { auto . } assert ( <genH> : Nat . even <nat:148> = true ) . { auto . } assert ( <genH> : Nat . even <nat:492> = true ) . { auto . } assert ( <genH> : Nat . even <nat:2> = true ) . { auto . } assert ( <genH> : Nat . even <nat:406> = true ) . { auto . } assert ( <genH> : Nat . even <nat:46> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:2> * <var:w> + <nat:492> * <var:B> + <nat:46> * <var:i> + <nat:80> * <var:U> + <nat:406> * <var:R> + <nat:148> * <var:t> ) = true ) . { repeat rewrite Nat . even_add . repeat rewrite Nat . even_mul . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite <- Nat . negb_even . rewrite <genH> . rewrite <genH> . auto . Qed . 