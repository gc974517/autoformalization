\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:D> <nat:142> + <nat:400> <var:p> + <nat:82> <var:u> + <var:b> <nat:152> + <var:T> <nat:160> + <var:J> <nat:238> + <var:i> <nat:396> + <nat:223> + <var:z> <nat:56> + <nat:204> <var:L> + <nat:44> <var:P> + <nat:306> <var:Y> $ will be odd . \end{theorem} \begin{proof} The products $ <nat:204> <var:L> $ , $ <nat:306> <var:Y> $ , $ <var:p> <nat:400> $ , and also $ <nat:56> <var:z> $ are known as even . What's more , the pairs $ <nat:238> <var:J> $ , $ <nat:160> <var:T> $ , $ <var:b> <nat:152> $ , in addition to $ <nat:44> <var:P> $ are even naturals . Take note that the products $ <var:u> <nat:82> $ additionally $ <var:i> <nat:396> $ are even from the knowledge the multiplication of an even number in $ \mathbb{Z}^+ $ with any number is even . What's more , the pair $ <nat:142> <var:D> $ is known as an even element of $ \mathbb{Z}^+ $ . It can be demonstrated that $ <nat:306> \cdot <var:Y> + <nat:82> \cdot <var:u> + <nat:142> \cdot <var:D> + <nat:56> \cdot <var:z> + <var:T> \cdot <nat:160> + <var:b> \cdot <nat:152> + <nat:44> \cdot <var:P> + <var:J> \cdot <nat:238> + <var:i> \cdot <nat:396> + <nat:223> + <nat:400> \cdot <var:p> + <var:L> \cdot <nat:204> $ will be odd . Observe $ <nat:223> $ is guaranteed to be an odd number . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:D> <var:p> <var:u> <var:b> <var:T> <var:J> <var:i> <var:z> <var:L> <var:P> <var:Y> : nat , Nat . odd ( <nat:142> * <var:D> + <nat:400> * <var:p> + <nat:82> * <var:u> + <nat:152> * <var:b> + <nat:160> * <var:T> + <nat:238> * <var:J> + <nat:396> * <var:i> + <nat:56> * <var:z> + <nat:204> * <var:L> + <nat:44> * <var:P> + <nat:306> * <var:Y> + <nat:223> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:204> * <var:L> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:306> * <var:Y> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:400> * <var:p> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:56> * <var:z> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:238> * <var:J> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:160> * <var:T> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:152> * <var:b> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:44> * <var:P> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:82> * <var:u> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:396> * <var:i> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:142> * <var:D> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . odd <nat:223> = true ) . { auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 