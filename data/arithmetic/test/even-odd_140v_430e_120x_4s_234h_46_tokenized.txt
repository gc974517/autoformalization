\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:430> \cdot <var:e> + <nat:46> + <var:h> \cdot <nat:234> + <var:x> \cdot <nat:120> + <nat:4> \cdot <var:s> + <var:v> \cdot <nat:140> $ must be even . \end{theorem} \begin{proof} We use the understanding that $ <var:v> \times <nat:140> + <var:e> \times <nat:430> + <var:x> \times <nat:120> + <var:s> \times <nat:4> + <var:h> \times <nat:234> $ is trivially even . The terms $ <var:e> * <nat:430> $ as well as $ <nat:234> * <var:h> $ are clearly even numbers in $ \mathbb{Z}^+ $ . The term $ <var:x> * <nat:120> $ is trivially even . Remember that the product $ <var:s> * <nat:4> $ is guaranteed to be even . Likewise , $ <nat:140> * <var:v> $ is obviously even . By reason that the addition between even elements of $ \mathbb{Z}^+ $ and even natural numbers is guaranteed to be clearly an even number , the lemma is true . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:e> <var:h> <var:x> <var:s> <var:v> : nat , Nat . even ( <nat:430> * <var:e> + <nat:234> * <var:h> + <nat:120> * <var:x> + <nat:4> * <var:s> + <nat:140> * <var:v> + <nat:46> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:430> * <var:e> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:234> * <var:h> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:120> * <var:x> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:4> * <var:s> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:140> * <var:v> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:430> * <var:e> + <nat:234> * <var:h> + <nat:120> * <var:x> + <nat:4> * <var:s> + <nat:140> * <var:v> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . even_add . rewrite <genH> . auto . Qed . 