\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:365> + <var:b> \times <nat:492> + <var:p> \times <nat:406> + <nat:448> \times <var:U> + <var:I> \times <nat:26> + <nat:384> \times <var:T> + <var:z> \times <nat:424> + <nat:232> \times <var:n> $ will be odd . \end{theorem} \begin{proof} The term $ <var:I> \cdot <nat:26> $ is known as an even natural number . This is proven because taking the product of an even natural number with some whole number must be an even natural number . The terms $ <var:p> \cdot <nat:406> $ , $ <nat:492> \cdot <var:b> $ , $ <var:T> \cdot <nat:384> $ , additionally $ <nat:232> \cdot <var:n> $ are obviously even numbers . This fact is proven since taking the product between an even number in $ \mathbb{N} $ and some number in $ \mathbb{N} $ will be even . Building on , notice the product $ <var:z> \cdot <nat:424> $ is guaranteed to be even from the fact taking the product between an even number with some number is guaranteed to be even . The term $ <nat:448> \cdot <var:U> $ is trivially an even positive integer . It can be checked that the sum $ <nat:406> * <var:p> + <var:z> * <nat:424> + <var:U> * <nat:448> + <var:b> * <nat:492> + <var:n> * <nat:232> + <var:T> * <nat:384> + <nat:26> * <var:I> + <nat:365> $ will be odd . See $ <nat:365> $ is guaranteed to be odd . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:b> <var:p> <var:U> <var:I> <var:T> <var:z> <var:n> : nat , Nat . odd ( <nat:492> * <var:b> + <nat:406> * <var:p> + <nat:448> * <var:U> + <nat:26> * <var:I> + <nat:384> * <var:T> + <nat:424> * <var:z> + <nat:232> * <var:n> + <nat:365> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:26> * <var:I> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:406> * <var:p> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:492> * <var:b> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:384> * <var:T> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:232> * <var:n> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:424> * <var:z> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:448> * <var:U> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . odd <nat:365> = true ) . { auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 