\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} With $ <var:o> $ , $ <var:k> $ , $ <var:D> $ , $ <var:Y> $ , $ <var:j> $ , $ <var:u> $ , $ <var:M> $ , $ <var:a> $ , $ <var:F> $ , and $ <var:V> \in \mathbb{Z}^+ $ $ <nat:148> * <var:M> + <var:V> * <nat:136> + <nat:379> + <nat:472> * <var:a> + <nat:46> * <var:F> + <var:u> * <nat:218> + <var:D> * <nat:214> + <var:k> * <nat:426> + <nat:272> * <var:Y> + <nat:22> * <var:o> + <var:j> * <nat:150> $ will be odd . \end{theorem} \begin{proof} The coefficients $ <nat:426> $ , $ <nat:148> $ , $ <nat:136> $ , $ <nat:272> $ , $ <nat:150> $ , additionally $ <nat:46> $ must be even integers The leading terms $ <nat:472> $ and moreover $ <nat:218> $ are even What's more , take note that the whole number $ <nat:22> $ is even Notice that the positive integer $ <nat:214> $ is known to be even See $ <nat:379> $ is guaranteed to be odd . By reason that taking the product of an even number in $ \mathbb{N} $ and any number is an even integer , this theorem must be true . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:o> <var:k> <var:D> <var:Y> <var:j> <var:u> <var:M> <var:a> <var:F> <var:V> : nat , Nat . odd ( <nat:148> * <var:M> + <nat:136> * <var:V> + <nat:472> * <var:a> + <nat:46> * <var:F> + <nat:218> * <var:u> + <nat:214> * <var:D> + <nat:426> * <var:k> + <nat:272> * <var:Y> + <nat:22> * <var:o> + <nat:150> * <var:j> + <nat:379> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:426> = true ) . { auto . } assert ( <genH> : Nat . even <nat:148> = true ) . { auto . } assert ( <genH> : Nat . even <nat:136> = true ) . { auto . } assert ( <genH> : Nat . even <nat:272> = true ) . { auto . } assert ( <genH> : Nat . even <nat:150> = true ) . { auto . } assert ( <genH> : Nat . even <nat:46> = true ) . { auto . } assert ( <genH> : Nat . even <nat:472> = true ) . { auto . } assert ( <genH> : Nat . even <nat:218> = true ) . { auto . } assert ( <genH> : Nat . even <nat:22> = true ) . { auto . } assert ( <genH> : Nat . even <nat:214> = true ) . { auto . } assert ( <genH> : Nat . odd <nat:379> = true ) . { auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . repeat rewrite Nat . even_mul . rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 