\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Denote that $ <var:A> $ is a <def:four-composite> whole number only if there exist some numbers $ <var:x> $ , $ <var:n> $ , $ <var:i> $ , $ <var:K> $ where $ <var:n> $ , $ <var:i> $ , $ <var:x> $ and $ <var:K> \geq <nat:2> $ as well as taking $ <var:A> \in \mathbb{N} $ , $ <var:A> = <var:K> \cdot <var:x> \cdot <var:n> \cdot <var:i> $ . Thus $ <nat:4550> = <var:A> $ is a <def:four-composite> number . \end{theorem} \begin{proof} Recall <nat:4550> is a <def:four-composite> integer under the condition that <nat:4550> is the product between integers $ <var:n> $ , $ <var:i> $ , $ <var:x> $ , $ <var:K> $ where $ <var:K> $ , $ <var:n> $ , $ <var:x> $ , $ <var:i> \geq <nat:2> $ . Note $ <nat:4550> = <var:n> \cdot <var:i> \cdot <var:x> \cdot <var:K> $ produces $ <var:K> = <nat:5> $ , $ <var:x> = <nat:10> $ , $ <var:n> = <nat:7> $ , $ <var:i> = <nat:13> $ . Further observe that $ <nat:13> $ , $ <nat:7> $ , $ <nat:10> $ , $ <nat:5> \geq <nat:2> $ . Because of this , <nat:4550> is a <def:four-composite> number has been validated . Hence , $ <var:x> $ , $ <var:n> $ , $ <var:i> $ , and $ <var:K> $ are greater than or equivalent to <nat:2> and $ <var:i> \cdot <var:K> \cdot <var:n> \cdot <var:x> = <nat:4550> $ has been validated . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:four-composite> ( <var:A> : nat ) := exists <var:x> <var:n> <var:i> <var:K> : nat , ( <var:n> >= <nat:2> ) /\ ( <var:i> >= <nat:2> ) /\ ( <var:x> >= <nat:2> ) /\ ( <var:K> >= <nat:2> ) /\ ( <var:A> = <var:K> * <var:x> * <var:n> * <var:i> ) . Theorem <genP:1> : <def:four-composite> <nat:4550> . Proof . unfold <def:four-composite> . exists <nat:10> . exists <nat:7> . exists <nat:13> . exists <nat:5> . assert ( <genH> : <nat:13> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:7> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:10> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:5> >= <nat:2> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 