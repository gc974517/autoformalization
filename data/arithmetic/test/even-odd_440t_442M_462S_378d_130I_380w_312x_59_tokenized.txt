\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Given natural terms $ <var:M> $ , $ <var:d> $ , $ <var:w> $ , $ <var:I> $ , $ <var:S> $ , $ <var:x> $ , and $ <var:t> $ the summation $ <nat:440> * <var:t> + <var:M> * <nat:442> + <var:S> * <nat:462> + <nat:378> * <var:d> + <var:I> * <nat:130> + <nat:59> + <var:w> * <nat:380> + <var:x> * <nat:312> $ is guaranteed to be odd . \end{theorem} \begin{proof} The adding of even naturals collectively with an odd integer is guaranteed to be odd . We know $ <nat:59> $ is obviously odd . The products $ <var:I> \cdot <nat:130> $ , $ <nat:462> \cdot <var:S> $ , $ <var:x> \cdot <nat:312> $ , $ <var:w> \cdot <nat:380> $ , $ <nat:378> \cdot <var:d> $ , as well as $ <var:M> \cdot <nat:442> $ are known to be even naturals . The term $ <var:t> \cdot <nat:440> $ is guaranteed to be even . This fact must be true since the multiplication between an even element of $ \mathbb{N} $ and any element of $ \mathbb{N} $ will be an even element of $ \mathbb{Z}^+ $ . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:M> <var:d> <var:w> <var:I> <var:S> <var:x> <var:t> : nat , Nat . odd ( <nat:440> * <var:t> + <nat:442> * <var:M> + <nat:462> * <var:S> + <nat:378> * <var:d> + <nat:130> * <var:I> + <nat:380> * <var:w> + <nat:312> * <var:x> + <nat:59> ) = true . Proof . intros . rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . assert ( <genH> : Nat . odd <nat:59> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:130> * <var:I> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:462> * <var:S> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:312> * <var:x> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:380> * <var:w> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:378> * <var:d> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:442> * <var:M> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:440> * <var:t> ) = true ) . { rewrite Nat . even_mul . auto . } rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 