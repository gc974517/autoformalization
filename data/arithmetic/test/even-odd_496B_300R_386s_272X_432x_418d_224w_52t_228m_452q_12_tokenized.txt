\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:B> * <nat:496> + <var:R> * <nat:300> + <nat:386> * <var:s> + <nat:272> * <var:X> + <var:x> * <nat:432> + <nat:418> * <var:d> + <nat:224> * <var:w> + <nat:52> * <var:t> + <var:m> * <nat:228> + <nat:12> + <nat:452> * <var:q> $ will be even . \end{theorem} \begin{proof} The adding between even numbers in $ \mathbb{N} $ successively is guaranteed to be even . We know $ <nat:12> $ is clearly an even integer . Remember the pairs $ <var:t> * <nat:52> $ , $ <var:x> * <nat:432> $ , $ <nat:272> * <var:X> $ , $ <var:R> * <nat:300> $ , $ <var:q> * <nat:452> $ , $ <nat:228> * <var:m> $ , $ <var:d> * <nat:418> $ , $ <var:w> * <nat:224> $ , and $ <var:s> * <nat:386> $ are clearly even elements of $ \mathbb{N} $ by reason that taking the product of an even element of $ \mathbb{Z}^+ $ and a positive integer will be by itself an even whole number . Building on , see the term $ <var:B> * <nat:496> $ is clearly even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:B> <var:R> <var:s> <var:X> <var:x> <var:d> <var:w> <var:t> <var:m> <var:q> : nat , Nat . even ( <nat:496> * <var:B> + <nat:300> * <var:R> + <nat:386> * <var:s> + <nat:272> * <var:X> + <nat:432> * <var:x> + <nat:418> * <var:d> + <nat:224> * <var:w> + <nat:52> * <var:t> + <nat:228> * <var:m> + <nat:452> * <var:q> + <nat:12> ) = true . Proof . intros . repeat rewrite Nat . even_add . assert ( <genH> : Nat . even <nat:12> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:52> * <var:t> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:432> * <var:x> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:272> * <var:X> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:300> * <var:R> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:452> * <var:q> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:228> * <var:m> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:418> * <var:d> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:224> * <var:w> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:386> * <var:s> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:496> * <var:B> ) = true ) . { rewrite Nat . even_mul . auto . } rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 