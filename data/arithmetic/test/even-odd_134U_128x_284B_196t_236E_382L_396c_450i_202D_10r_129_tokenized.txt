\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:134> \times <var:U> + <nat:128> \times <var:x> + <var:B> \times <nat:284> + <nat:196> \times <var:t> + <nat:236> \times <var:E> + <nat:129> + <var:L> \times <nat:382> + <var:c> \times <nat:396> + <nat:450> \times <var:i> + <nat:202> \times <var:D> + <var:r> \times <nat:10> $ is odd with any positive numbers $ <var:x> $ , $ <var:c> $ , $ <var:r> $ , $ <var:i> $ , $ <var:t> $ , $ <var:B> $ , $ <var:U> $ , $ <var:L> $ , $ <var:D> $ , and $ <var:E> $ . \end{theorem} \begin{proof} Notice the products $ <nat:10> * <var:r> $ , $ <var:B> * <nat:284> $ , $ <nat:236> * <var:E> $ , $ <var:c> * <nat:396> $ , $ <nat:450> * <var:i> $ , $ <nat:196> * <var:t> $ , additionally $ <var:U> * <nat:134> $ are known to be even . Remember the pairs $ <nat:202> * <var:D> $ and also $ <nat:382> * <var:L> $ are known to be even naturals . This claim is proven since the multiplication of an even natural and a positive integer must be even . In addition to this , $ <var:x> * <nat:128> $ is known to be an even number in $ \mathbb{Z}^+ $ . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:x> <var:c> <var:r> <var:i> <var:t> <var:B> <var:U> <var:L> <var:D> <var:E> : nat , Nat . odd ( <nat:134> * <var:U> + <nat:128> * <var:x> + <nat:284> * <var:B> + <nat:196> * <var:t> + <nat:236> * <var:E> + <nat:382> * <var:L> + <nat:396> * <var:c> + <nat:450> * <var:i> + <nat:202> * <var:D> + <nat:10> * <var:r> + <nat:129> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:10> * <var:r> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:284> * <var:B> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:236> * <var:E> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:396> * <var:c> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:450> * <var:i> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:196> * <var:t> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:134> * <var:U> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:202> * <var:D> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:382> * <var:L> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:128> * <var:x> ) = true ) . { rewrite Nat . even_mul . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 