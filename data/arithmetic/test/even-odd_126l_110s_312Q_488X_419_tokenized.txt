\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:Q> * <nat:312> + <nat:419> + <nat:488> * <var:X> + <var:s> * <nat:110> + <nat:126> * <var:l> $ must be odd . \end{theorem} \begin{proof} We make use the understanding that the sum $ <nat:126> * <var:l> + <var:Q> * <nat:312> + <nat:488> * <var:X> + <var:s> * <nat:110> $ is clearly even . The pair $ <nat:126> * <var:l> $ is clearly an even integer . This fact is proven from the knowledge the coefficient $ <nat:126> $ is guaranteed to be an even positive integer . What's more , the term $ <nat:110> * <var:s> $ is trivially an even number in $ \mathbb{Z}^+ $ . This must be true as a consequence that the number $ <nat:110> $ is obviously even . Building on , the pair $ <var:Q> * <nat:312> $ is obviously even because the whole number $ <nat:312> $ is known as by itself an even natural number . In addition , see $ <nat:488> * <var:X> $ is known as even as a consequence that taking the product of an even number in $ \mathbb{Z}^+ $ and any integer must be even . This is proven by reason that the integer $ <nat:488> $ is trivially even . See $ <nat:419> $ is clearly an odd natural number . It can be proven that our result is true . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:Q> <var:X> <var:s> <var:l> : nat , Nat . odd ( <nat:312> * <var:Q> + <nat:488> * <var:X> + <nat:110> * <var:s> + <nat:126> * <var:l> + <nat:419> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:126> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:126> * <var:l> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:110> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:110> * <var:s> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:312> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:312> * <var:Q> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:488> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:488> * <var:X> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:312> * <var:Q> + <nat:488> * <var:X> + <nat:110> * <var:s> + <nat:126> * <var:l> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } assert ( <genH> : Nat . odd <nat:419> = true ) . { auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . rewrite <genH> . auto . Qed . 