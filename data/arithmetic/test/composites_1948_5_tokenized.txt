\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \newtheorem{definition}{Definition} \begin{document} \begin{definition} Allow $ <var:Q> $ , $ <var:N> $ , $ <var:z> $ , $ <var:D> $ , $ <var:Z> $ as natural numbers . Take that $ <var:T> \in \mathbb{Z}^+ $ will be considered a <def:five-composite> natural number when $ <var:T> = <var:D> * <var:z> * <var:Z> * <var:N> * <var:Q> $ plus such that $ <var:z> $ , $ <var:N> $ , $ <var:Z> $ , $ <var:D> $ and $ <var:Q> \geq <nat:2> $ . \end{definition} \begin{theorem} The natural number <nat:2310> is a <def:five-composite> number . \end{theorem} \begin{proof} Recollect that <nat:2310> is a <def:five-composite> positive integer granted <nat:2310> is the product between natural numbers $ <var:D> $ , $ <var:Q> $ , $ <var:Z> $ , $ <var:z> $ , $ <var:N> $ so that $ <var:Z> $ , $ <var:N> $ , $ <var:D> $ , $ <var:z> $ , $ <var:Q> \geq <nat:2> $ . Notice that $ <nat:7> * <nat:5> * <nat:2> * <nat:3> * <nat:11> = <nat:2310> $ . What's more observe that $ <nat:3> $ , $ <nat:7> $ , $ <nat:5> $ , $ <nat:2> $ and $ <nat:11> $ are greater than or equal to <nat:2> . This indicates <nat:2310> is a <def:five-composite> number . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:five-composite> ( <var:T> : nat ) := exists <var:Q> <var:N> <var:z> <var:D> <var:Z> : nat , ( <var:T> = <var:D> * <var:z> * <var:Z> * <var:N> * <var:Q> ) /\ ( <var:z> >= <nat:2> ) /\ ( <var:N> >= <nat:2> ) /\ ( <var:Z> >= <nat:2> ) /\ ( <var:D> >= <nat:2> ) /\ ( <var:Q> >= <nat:2> ) . Theorem <genP:1> : <def:five-composite> <nat:2310> . Proof . unfold <def:five-composite> . exists <nat:7> . exists <nat:11> . exists <nat:5> . exists <nat:2> . exists <nat:3> . assert ( <genH> : <nat:3> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:7> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:5> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:2> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:11> >= <nat:2> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 