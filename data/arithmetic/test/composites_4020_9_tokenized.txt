\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Let $ <var:O> $ , $ <var:D> $ , $ <var:P> $ , $ <var:R> $ , $ <var:V> $ , $ <var:J> $ , $ <var:C> $ , $ <var:K> $ , and $ <var:u> $ be integers such that $ <var:J> $ , $ <var:O> $ , $ <var:D> $ , $ <var:V> $ , $ <var:C> $ , $ <var:K> $ , $ <var:P> $ , $ <var:u> $ , $ <var:R> \geq <nat:2> $ and so that the integer <nat:17690400> is the multiplication between numbers $ <var:O> $ , $ <var:D> $ , $ <var:P> $ , $ <var:R> $ , $ <var:V> $ , $ <var:J> $ , $ <var:C> $ , $ <var:K> $ , $ <var:u> $ . \end{theorem} \begin{proof} We verify our formula holds for $ <nat:17690400> = <var:u> * <var:K> * <var:J> * <var:V> * <var:O> * <var:D> * <var:R> * <var:C> * <var:P> = <nat:2> * <nat:6> * <nat:10> * <nat:5> * <nat:3> * <nat:13> * <nat:7> * <nat:12> * <nat:9> $ as well as considering $ <nat:3> $ , $ <nat:12> $ , $ <nat:2> $ , $ <nat:10> $ , $ <nat:6> $ , $ <nat:7> $ , $ <nat:13> $ , $ <nat:9> $ , and $ <nat:5> $ are more than or equivalent to <nat:2> . \end{proof} \end{document} 
~
Require Import Lia . Theorem <genP:1> : exists <var:O> <var:D> <var:P> <var:R> <var:V> <var:J> <var:C> <var:K> <var:u> : nat , ( <var:J> >= <nat:2> ) /\ ( <var:O> >= <nat:2> ) /\ ( <var:D> >= <nat:2> ) /\ ( <var:V> >= <nat:2> ) /\ ( <var:C> >= <nat:2> ) /\ ( <var:K> >= <nat:2> ) /\ ( <var:P> >= <nat:2> ) /\ ( <var:u> >= <nat:2> ) /\ ( <var:R> >= <nat:2> ) /\ ( <nat:17690400> = <var:O> * <var:D> * <var:P> * <var:R> * <var:V> * <var:J> * <var:C> * <var:K> * <var:u> ) . Proof . exists <nat:3> . exists <nat:13> . exists <nat:9> . exists <nat:7> . exists <nat:5> . exists <nat:10> . exists <nat:12> . exists <nat:6> . exists <nat:2> . assert ( <genH> : <nat:3> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:12> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:2> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:10> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:6> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:7> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:13> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:9> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:5> >= <nat:2> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 