\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Taking all positive integers $ <var:W> $ , $ <var:V> $ , $ <var:m> $ , $ <var:r> $ , $ <var:X> $ , $ <var:t> $ , $ <var:y> $ , $ <var:M> $ , $ <var:p> $ , $ <var:A> $ , and $ <var:D> $ the expression $ <nat:392> \times <var:t> + <nat:326> \times <var:W> + <nat:332> \times <var:M> + <nat:10> \times <var:m> + <var:A> \times <nat:350> + <nat:296> \times <var:X> + <var:D> \times <nat:318> + <var:p> \times <nat:46> + <var:y> \times <nat:154> + <var:r> \times <nat:150> + <nat:21> + <var:V> \times <nat:404> $ will be odd . \end{theorem} \begin{proof} Remember the integers $ <nat:326> $ , $ <nat:350> $ , and likewise $ <nat:154> $ will be even The coefficients $ <nat:404> $ plus $ <nat:392> $ are even elements of $ \mathbb{N} $ The positive integers $ <nat:318> $ , $ <nat:46> $ , $ <nat:296> $ , $ <nat:10> $ , and $ <nat:150> $ must be even Additionally , the coefficient $ <nat:332> $ is obviously even Notice the totaling between an even whole number and an odd number in $ \mathbb{N} $ must be in itself an odd natural number . Recall that $ <nat:21> $ is known as an odd integer . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:W> <var:V> <var:m> <var:r> <var:X> <var:t> <var:y> <var:M> <var:p> <var:A> <var:D> : nat , Nat . odd ( <nat:392> * <var:t> + <nat:326> * <var:W> + <nat:332> * <var:M> + <nat:10> * <var:m> + <nat:350> * <var:A> + <nat:296> * <var:X> + <nat:318> * <var:D> + <nat:46> * <var:p> + <nat:154> * <var:y> + <nat:150> * <var:r> + <nat:404> * <var:V> + <nat:21> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:326> = true ) . { auto . } assert ( <genH> : Nat . even <nat:350> = true ) . { auto . } assert ( <genH> : Nat . even <nat:154> = true ) . { auto . } assert ( <genH> : Nat . even <nat:404> = true ) . { auto . } assert ( <genH> : Nat . even <nat:392> = true ) . { auto . } assert ( <genH> : Nat . even <nat:318> = true ) . { auto . } assert ( <genH> : Nat . even <nat:46> = true ) . { auto . } assert ( <genH> : Nat . even <nat:296> = true ) . { auto . } assert ( <genH> : Nat . even <nat:10> = true ) . { auto . } assert ( <genH> : Nat . even <nat:150> = true ) . { auto . } assert ( <genH> : Nat . even <nat:332> = true ) . { auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . assert ( <genH> : Nat . odd <nat:21> = true ) . { auto . } repeat rewrite Nat . even_mul . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 