\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:M> <nat:366> + <nat:346> <var:v> + <var:R> <nat:82> + <nat:388> <var:p> + <nat:55> + <var:V> <nat:26> $ is odd . \end{theorem} \begin{proof} We check that the formula $ <var:p> \cdot <nat:388> + <nat:82> \cdot <var:R> + <var:M> \cdot <nat:366> + <nat:26> \cdot <var:V> + <nat:346> \cdot <var:v> + <nat:55> $ is known to be odd from the fact the sum $ <nat:82> * <var:R> + <nat:366> * <var:M> + <nat:346> * <var:v> + <nat:388> * <var:p> + <var:V> * <nat:26> $ is guaranteed to be even . Observe the products $ <nat:82> \times <var:R> $ , $ <var:M> \times <nat:366> $ , $ <var:v> \times <nat:346> $ , $ <nat:388> \times <var:p> $ , additionally $ <nat:26> \times <var:V> $ are even numbers . This must be true because taking the product between an even natural with some natural number is even in addition to the leading terms $ <nat:82> $ , $ <nat:366> $ , $ <nat:346> $ , $ <nat:388> $ , additionally $ <nat:26> $ are by their very nature even numbers in $ \mathbb{N} $ . Our claim is true from the knowledge the multiplication between an even natural number with an arbitrary whole number is guaranteed to be even . We check the summation $ <nat:26> * <var:V> + <var:R> * <nat:82> + <nat:388> * <var:p> + <nat:55> + <var:v> * <nat:346> + <nat:366> * <var:M> $ is odd . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:M> <var:v> <var:R> <var:p> <var:V> : nat , Nat . odd ( <nat:366> * <var:M> + <nat:346> * <var:v> + <nat:82> * <var:R> + <nat:388> * <var:p> + <nat:26> * <var:V> + <nat:55> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:82> = true ) . { auto . } assert ( <genH> : Nat . even <nat:366> = true ) . { auto . } assert ( <genH> : Nat . even <nat:346> = true ) . { auto . } assert ( <genH> : Nat . even <nat:388> = true ) . { auto . } assert ( <genH> : Nat . even <nat:26> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:82> * <var:R> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:366> * <var:M> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:346> * <var:v> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:388> * <var:p> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:26> * <var:V> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:366> * <var:M> + <nat:346> * <var:v> + <nat:82> * <var:R> + <nat:388> * <var:p> + <nat:26> * <var:V> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . auto . Qed . 