\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Taking $ <var:q> $ , $ <var:v> $ , $ <var:g> $ , and $ <var:U> \in \mathbb{N} $ the formula $ <var:v> <nat:338> + <nat:451> + <nat:174> <var:U> + <var:g> <nat:152> + <nat:394> <var:q> $ will be odd . \end{theorem} \begin{proof} See the pairs $ <var:v> \times <nat:338> $ , $ <var:U> \times <nat:174> $ , $ <nat:152> \times <var:g> $ , and $ <nat:394> \times <var:q> $ are trivially even . This holds from the knowledge taking the product of an even element of $ \mathbb{Z}^+ $ and an arbitrary natural is guaranteed to be even , which is proven from the fact the leading terms $ <nat:338> $ , $ <nat:174> $ , $ <nat:152> $ , additionally $ <nat:394> $ are guaranteed to be obviously even natural numbers . Remember that the adding between even natural numbers collectively and an odd natural number will be odd . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:q> <var:v> <var:g> <var:U> : nat , Nat . odd ( <nat:338> * <var:v> + <nat:174> * <var:U> + <nat:152> * <var:g> + <nat:394> * <var:q> + <nat:451> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:338> = true ) . { auto . } assert ( <genH> : Nat . even <nat:174> = true ) . { auto . } assert ( <genH> : Nat . even <nat:152> = true ) . { auto . } assert ( <genH> : Nat . even <nat:394> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:338> * <var:v> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:174> * <var:U> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:152> * <var:g> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:394> * <var:q> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 