\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:t> * <nat:52> + <nat:372> * <var:v> + <nat:214> * <var:R> + <nat:314> * <var:C> + <var:J> * <nat:196> + <var:j> * <nat:58> + <nat:247> + <nat:36> * <var:B> $ will be odd assuming all $ <var:J> $ , $ <var:t> $ , $ <var:j> $ , $ <var:B> $ , $ <var:v> $ , $ <var:R> $ , and $ <var:C> \in \mathbb{Z}^+ $ . \end{theorem} \begin{proof} See that the sum $ <var:B> \cdot <nat:36> + <nat:58> \cdot <var:j> + <nat:372> \cdot <var:v> + <var:J> \cdot <nat:196> + <var:t> \cdot <nat:52> + <nat:214> \cdot <var:R> + <var:C> \cdot <nat:314> $ is guaranteed to be even , as a consequence that the summing of an even element of $ \mathbb{Z}^+ $ with an even whole number is even . The products $ <nat:36> * <var:B> $ , $ <var:C> * <nat:314> $ , $ <nat:214> * <var:R> $ , $ <nat:52> * <var:t> $ , $ <var:j> * <nat:58> $ , and moreover $ <nat:372> * <var:v> $ must be even . Adding on , remember that the pair $ <var:J> * <nat:196> $ is clearly even from the fact the product of an even positive integer and a number in $ \mathbb{Z}^+ $ is guaranteed to be even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:J> <var:t> <var:j> <var:B> <var:v> <var:R> <var:C> : nat , Nat . odd ( <nat:52> * <var:t> + <nat:372> * <var:v> + <nat:214> * <var:R> + <nat:314> * <var:C> + <nat:196> * <var:J> + <nat:58> * <var:j> + <nat:36> * <var:B> + <nat:247> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:36> * <var:B> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:314> * <var:C> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:214> * <var:R> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:52> * <var:t> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:58> * <var:j> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:372> * <var:v> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:196> * <var:J> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:52> * <var:t> + <nat:372> * <var:v> + <nat:214> * <var:R> + <nat:314> * <var:C> + <nat:196> * <var:J> + <nat:58> * <var:j> + <nat:36> * <var:B> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . auto . Qed . 