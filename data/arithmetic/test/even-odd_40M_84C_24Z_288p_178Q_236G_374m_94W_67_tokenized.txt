\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Given $ <var:C> $ , $ <var:G> $ , $ <var:Z> $ , $ <var:p> $ , $ <var:Q> $ , $ <var:m> $ , $ <var:M> $ , and $ <var:W> \in \mathbb{N} $ the formula $ <nat:67> + <nat:94> \cdot <var:W> + <var:Q> \cdot <nat:178> + <nat:84> \cdot <var:C> + <var:Z> \cdot <nat:24> + <nat:288> \cdot <var:p> + <nat:40> \cdot <var:M> + <nat:374> \cdot <var:m> + <var:G> \cdot <nat:236> $ must be odd . \end{theorem} \begin{proof} The summation $ <nat:236> <var:G> + <nat:40> <var:M> + <var:W> <nat:94> + <var:Q> <nat:178> + <nat:67> + <var:C> <nat:84> + <var:m> <nat:374> + <var:Z> <nat:24> + <nat:288> <var:p> $ is obviously odd as a consequence that the sum $ <nat:94> \cdot <var:W> + <nat:236> \cdot <var:G> + <var:m> \cdot <nat:374> + <nat:24> \cdot <var:Z> + <nat:84> \cdot <var:C> + <nat:178> \cdot <var:Q> + <var:M> \cdot <nat:40> + <var:p> \cdot <nat:288> $ is known as even . $ <nat:40> * <var:M> + <nat:84> * <var:C> + <var:Z> * <nat:24> + <nat:288> * <var:p> + <nat:178> * <var:Q> + <var:G> * <nat:236> + <var:m> * <nat:374> + <var:W> * <nat:94> $ must be even by reason that the summation between even numbers in $ \mathbb{N} $ and even positive integers is in itself an even natural . It can be checked that this claim holds . Remember $ <nat:67> $ is guaranteed to be an odd number in $ \mathbb{N} $ . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:C> <var:G> <var:Z> <var:p> <var:Q> <var:m> <var:M> <var:W> : nat , Nat . odd ( <nat:94> * <var:W> + <nat:178> * <var:Q> + <nat:84> * <var:C> + <nat:24> * <var:Z> + <nat:288> * <var:p> + <nat:40> * <var:M> + <nat:374> * <var:m> + <nat:236> * <var:G> + <nat:67> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:94> * <var:W> + <nat:178> * <var:Q> + <nat:84> * <var:C> + <nat:24> * <var:Z> + <nat:288> * <var:p> + <nat:40> * <var:M> + <nat:374> * <var:m> + <nat:236> * <var:G> ) = true ) . { repeat rewrite Nat . even_add . repeat rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . odd <nat:67> = true ) . { auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . rewrite <genH> . auto . Qed . 