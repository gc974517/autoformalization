\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:468> * <var:b> + <nat:330> * <var:g> + <nat:204> * <var:M> + <var:W> * <nat:48> + <nat:150> * <var:x> + <nat:275> + <nat:102> * <var:B> + <nat:14> * <var:X> + <var:K> * <nat:336> + <nat:214> * <var:c> + <var:T> * <nat:200> $ will be odd with every positive terms $ <var:X> $ , $ <var:b> $ , $ <var:x> $ , $ <var:W> $ , $ <var:T> $ , $ <var:g> $ , $ <var:c> $ , $ <var:K> $ , $ <var:M> $ , and $ <var:B> $ . \end{theorem} \begin{proof} By reason that the summation of an even natural and an odd element of $ \mathbb{N} $ is odd , thus $ <nat:214> \cdot <var:c> + <nat:275> + <nat:48> \cdot <var:W> + <var:B> \cdot <nat:102> + <nat:150> \cdot <var:x> + <nat:204> \cdot <var:M> + <var:K> \cdot <nat:336> + <var:X> \cdot <nat:14> + <var:T> \cdot <nat:200> + <var:b> \cdot <nat:468> + <var:g> \cdot <nat:330> $ by its very nature is odd . See $ <nat:275> $ is known to be odd . We know the expression $ <var:x> \times <nat:150> + <var:g> \times <nat:330> + <var:M> \times <nat:204> + <var:W> \times <nat:48> + <nat:336> \times <var:K> + <nat:468> \times <var:b> + <nat:214> \times <var:c> + <nat:200> \times <var:T> + <var:X> \times <nat:14> + <var:B> \times <nat:102> $ is guaranteed to be even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:X> <var:b> <var:x> <var:W> <var:T> <var:g> <var:c> <var:K> <var:M> <var:B> : nat , Nat . odd ( <nat:468> * <var:b> + <nat:330> * <var:g> + <nat:204> * <var:M> + <nat:48> * <var:W> + <nat:150> * <var:x> + <nat:102> * <var:B> + <nat:14> * <var:X> + <nat:336> * <var:K> + <nat:214> * <var:c> + <nat:200> * <var:T> + <nat:275> ) = true . Proof . intros . rewrite Nat . odd_add . assert ( <genH> : Nat . odd <nat:275> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:468> * <var:b> + <nat:330> * <var:g> + <nat:204> * <var:M> + <nat:48> * <var:W> + <nat:150> * <var:x> + <nat:102> * <var:B> + <nat:14> * <var:X> + <nat:336> * <var:K> + <nat:214> * <var:c> + <nat:200> * <var:T> ) = true ) . { repeat rewrite Nat . even_add . repeat rewrite Nat . even_mul . auto . } rewrite <- Nat . negb_even . rewrite <genH> . rewrite <genH> . auto . Qed . 