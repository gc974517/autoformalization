\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Allow $ <var:F> $ , $ <var:k> $ , $ <var:s> $ , $ <var:g> $ , $ <var:P> $ , $ <var:t> $ , $ <var:G> $ and $ <var:e> \in \mathbb{Z}^+ $ so that $ <var:G> $ , $ <var:e> $ , $ <var:t> $ , $ <var:F> $ , $ <var:k> $ , $ <var:g> $ , $ <var:s> $ and $ <var:P> \geq <nat:2> $ . $ <nat:3603600> $ is equal to $ <var:s> \cdot <var:k> \cdot <var:F> \cdot <var:t> \cdot <var:e> \cdot <var:g> \cdot <var:P> \cdot <var:G> $ . \end{theorem} \begin{proof} We prove <nat:3603600> is the multiplication between $ <var:s> $ , $ <var:g> $ , $ <var:e> $ , $ <var:P> $ , $ <var:G> $ , $ <var:F> $ , $ <var:t> $ , $ <var:k> \in \mathbb{N} $ . Note that $ <nat:5> $ , $ <nat:4> $ , $ <nat:11> $ , $ <nat:3> $ , $ <nat:6> $ , $ <nat:7> $ , $ <nat:13> $ , $ <nat:10> $ are greater than or equivalent to <nat:2> . Moreover note additionally $ <var:s> \times <var:t> \times <var:k> \times <var:F> \times <var:g> \times <var:e> \times <var:G> \times <var:P> = <nat:3603600> $ produces $ <var:P> = <nat:5> $ , $ <var:t> = <nat:13> $ , $ <var:s> = <nat:7> $ , $ <var:e> = <nat:6> $ , $ <var:g> = <nat:4> $ , $ <var:F> = <nat:11> $ , $ <var:G> = <nat:3> $ , and $ <var:k> = <nat:10> $ . This shows the claim is true . \end{proof} \end{document} 
~
Require Import Lia . Theorem <genP:1> : exists <var:F> <var:k> <var:s> <var:g> <var:P> <var:t> <var:G> <var:e> : nat , ( <var:G> >= <nat:2> ) /\ ( <var:e> >= <nat:2> ) /\ ( <var:t> >= <nat:2> ) /\ ( <var:F> >= <nat:2> ) /\ ( <var:k> >= <nat:2> ) /\ ( <var:g> >= <nat:2> ) /\ ( <var:s> >= <nat:2> ) /\ ( <var:P> >= <nat:2> ) /\ ( <nat:3603600> = <var:s> * <var:k> * <var:F> * <var:t> * <var:e> * <var:g> * <var:P> * <var:G> ) . Proof . assert ( <genH> : <nat:5> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:4> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:11> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:3> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:6> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:7> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:13> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:10> >= <nat:2> ) . { lia . } exists <nat:11> . exists <nat:10> . exists <nat:7> . exists <nat:4> . exists <nat:5> . exists <nat:13> . exists <nat:3> . exists <nat:6> . repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 