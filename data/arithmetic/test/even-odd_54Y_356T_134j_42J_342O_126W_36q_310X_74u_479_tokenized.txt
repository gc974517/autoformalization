\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:j> \cdot <nat:134> + <var:X> \cdot <nat:310> + <var:O> \cdot <nat:342> + <nat:54> \cdot <var:Y> + <var:T> \cdot <nat:356> + <var:W> \cdot <nat:126> + <var:q> \cdot <nat:36> + <var:u> \cdot <nat:74> + <nat:479> + <nat:42> \cdot <var:J> $ will be odd . \end{theorem} \begin{proof} The multiplication of even numbers in $ \mathbb{N} $ must be even . Notice that the numbers $ <nat:74> $ , $ <nat:134> $ , $ <nat:310> $ , in addition to $ <nat:36> $ are clearly even Adding on , the numbers $ <nat:42> $ , $ <nat:356> $ , $ <nat:54> $ , additionally $ <nat:126> $ will be even The number $ <nat:342> $ is known to be an even natural The adding of an even element of $ \mathbb{Z}^+ $ with an odd natural number will be odd . So , $ <var:Y> * <nat:54> + <var:T> * <nat:356> + <var:j> * <nat:134> + <nat:479> + <nat:42> * <var:J> + <nat:342> * <var:O> + <nat:126> * <var:W> + <nat:36> * <var:q> + <var:X> * <nat:310> + <nat:74> * <var:u> $ by itself will be odd . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:j> <var:X> <var:O> <var:Y> <var:T> <var:W> <var:q> <var:u> <var:J> : nat , Nat . odd ( <nat:134> * <var:j> + <nat:310> * <var:X> + <nat:342> * <var:O> + <nat:54> * <var:Y> + <nat:356> * <var:T> + <nat:126> * <var:W> + <nat:36> * <var:q> + <nat:74> * <var:u> + <nat:42> * <var:J> + <nat:479> ) = true . Proof . intros . rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . repeat rewrite Nat . even_mul . assert ( <genH> : Nat . even <nat:74> = true ) . { auto . } assert ( <genH> : Nat . even <nat:134> = true ) . { auto . } assert ( <genH> : Nat . even <nat:310> = true ) . { auto . } assert ( <genH> : Nat . even <nat:36> = true ) . { auto . } assert ( <genH> : Nat . even <nat:42> = true ) . { auto . } assert ( <genH> : Nat . even <nat:356> = true ) . { auto . } assert ( <genH> : Nat . even <nat:54> = true ) . { auto . } assert ( <genH> : Nat . even <nat:126> = true ) . { auto . } assert ( <genH> : Nat . even <nat:342> = true ) . { auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 