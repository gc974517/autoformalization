\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Using every positive integers $ <var:S> $ , $ <var:V> $ , $ <var:P> $ , $ <var:v> $ , $ <var:w> $ , $ <var:k> $ , $ <var:Z> $ , $ <var:R> $ , and $ <var:W> $ $ <var:w> <nat:180> + <var:v> <nat:350> + <nat:268> <var:P> + <nat:63> + <nat:428> <var:V> + <nat:402> <var:Z> + <nat:378> <var:W> + <nat:430> <var:S> + <var:k> <nat:184> + <var:R> <nat:44> $ must be odd . \end{theorem} \begin{proof} Remember the summation between an even natural and an odd number in $ \mathbb{Z}^+ $ will be odd . Our theorem is true from the fact $ <nat:180> \cdot <var:w> + <var:S> \cdot <nat:430> + <nat:350> \cdot <var:v> + <var:W> \cdot <nat:378> + <var:R> \cdot <nat:44> + <var:V> \cdot <nat:428> + <nat:268> \cdot <var:P> + <nat:402> \cdot <var:Z> + <var:k> \cdot <nat:184> $ is guaranteed to be even , because the summation of even whole numbers collectively and an even natural number must be even . See also the multiplication of an even number and a number in $ \mathbb{N} $ must be even . The leading terms $ <nat:44> $ , $ <nat:378> $ , $ <nat:428> $ , $ <nat:180> $ , $ <nat:350> $ , $ <nat:430> $ , $ <nat:184> $ , and also $ <nat:268> $ are even Furthermore , remember that the whole number $ <nat:402> $ is trivially even It can be verified that this main result must be true . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:S> <var:V> <var:P> <var:v> <var:w> <var:k> <var:Z> <var:R> <var:W> : nat , Nat . odd ( <nat:180> * <var:w> + <nat:350> * <var:v> + <nat:268> * <var:P> + <nat:428> * <var:V> + <nat:402> * <var:Z> + <nat:378> * <var:W> + <nat:430> * <var:S> + <nat:184> * <var:k> + <nat:44> * <var:R> + <nat:63> ) = true . Proof . intros . rewrite Nat . odd_add . assert ( <genH> : Nat . even <nat:44> = true ) . { auto . } assert ( <genH> : Nat . even <nat:378> = true ) . { auto . } assert ( <genH> : Nat . even <nat:428> = true ) . { auto . } assert ( <genH> : Nat . even <nat:180> = true ) . { auto . } assert ( <genH> : Nat . even <nat:350> = true ) . { auto . } assert ( <genH> : Nat . even <nat:430> = true ) . { auto . } assert ( <genH> : Nat . even <nat:184> = true ) . { auto . } assert ( <genH> : Nat . even <nat:268> = true ) . { auto . } assert ( <genH> : Nat . even <nat:402> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:180> * <var:w> + <nat:350> * <var:v> + <nat:268> * <var:P> + <nat:428> * <var:V> + <nat:402> * <var:Z> + <nat:378> * <var:W> + <nat:430> * <var:S> + <nat:184> * <var:k> + <nat:44> * <var:R> ) = true ) . { repeat rewrite Nat . even_add . repeat rewrite Nat . even_mul . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite <- Nat . negb_even . rewrite <genH> . auto . Qed . 