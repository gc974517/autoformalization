\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:317> + <var:a> * <nat:434> + <var:g> * <nat:372> + <var:R> * <nat:148> + <var:t> * <nat:240> + <var:N> * <nat:198> + <var:b> * <nat:334> + <nat:432> * <var:H> + <nat:278> * <var:s> $ must be odd with any terms $ <var:H> $ , $ <var:s> $ , $ <var:a> $ , $ <var:g> $ , $ <var:N> $ , $ <var:b> $ , $ <var:R> $ , and $ <var:t> $ . \end{theorem} \begin{proof} The products $ <var:s> \times <nat:278> $ , $ <nat:432> \times <var:H> $ , $ <nat:434> \times <var:a> $ , $ <nat:148> \times <var:R> $ , $ <nat:372> \times <var:g> $ , $ <nat:240> \times <var:t> $ , additionally $ <nat:334> \times <var:b> $ must be even . This fact holds because the multiplication of an even positive integer and some integer is guaranteed to be even . The pair $ <nat:198> \times <var:N> $ is clearly even . We show $ <nat:372> \times <var:g> + <nat:240> \times <var:t> + <var:R> \times <nat:148> + <var:s> \times <nat:278> + <var:N> \times <nat:198> + <nat:434> \times <var:a> + <nat:317> + <var:b> \times <nat:334> + <nat:432> \times <var:H> $ must be odd . We know that $ <nat:317> $ is trivially odd . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:H> <var:s> <var:a> <var:g> <var:N> <var:b> <var:R> <var:t> : nat , Nat . odd ( <nat:434> * <var:a> + <nat:372> * <var:g> + <nat:148> * <var:R> + <nat:240> * <var:t> + <nat:198> * <var:N> + <nat:334> * <var:b> + <nat:432> * <var:H> + <nat:278> * <var:s> + <nat:317> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:278> * <var:s> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:432> * <var:H> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:434> * <var:a> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:148> * <var:R> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:372> * <var:g> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:240> * <var:t> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:334> * <var:b> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:198> * <var:N> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . odd <nat:317> = true ) . { auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 