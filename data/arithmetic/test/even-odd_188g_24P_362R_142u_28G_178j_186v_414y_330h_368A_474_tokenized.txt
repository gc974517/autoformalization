\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} For every integers $ <var:v> $ , $ <var:g> $ , $ <var:G> $ , $ <var:h> $ , $ <var:u> $ , $ <var:A> $ , $ <var:P> $ , $ <var:y> $ , $ <var:j> $ , and $ <var:R> $ $ <var:G> \cdot <nat:28> + <nat:414> \cdot <var:y> + <var:A> \cdot <nat:368> + <nat:186> \cdot <var:v> + <var:g> \cdot <nat:188> + <var:j> \cdot <nat:178> + <var:P> \cdot <nat:24> + <nat:474> + <var:h> \cdot <nat:330> + <var:R> \cdot <nat:362> + <var:u> \cdot <nat:142> $ will be even . \end{theorem} \begin{proof} The claim is true as a consequence that $ <var:v> \cdot <nat:186> + <var:G> \cdot <nat:28> + <var:A> \cdot <nat:368> + <var:y> \cdot <nat:414> + <nat:330> \cdot <var:h> + <var:g> \cdot <nat:188> + <var:P> \cdot <nat:24> + <nat:142> \cdot <var:u> + <nat:362> \cdot <var:R> + <var:j> \cdot <nat:178> $ is obviously even . The product $ <var:g> \cdot <nat:188> $ is clearly an even number from the fact the product between an even element of $ \mathbb{Z}^+ $ with any element of $ \mathbb{N} $ will be in itself an even positive integer . This claim holds by reason that the integer $ <nat:188> $ is known to be an even number in $ \mathbb{Z}^+ $ . $ <var:P> \cdot <nat:24> $ is guaranteed to be an even element of $ \mathbb{Z}^+ $ . This claim is proven because the product of an even element of $ \mathbb{N} $ and any element of $ \mathbb{Z}^+ $ will be even , which must be true as a consequence that the natural number $ <nat:24> $ is obviously even . Building on , the leading term $ <nat:362> $ is known as an even natural . Thus , the term $ <var:R> \cdot <nat:362> $ is guaranteed to be even as well . Further , the coefficient $ <nat:142> $ is known as even . Accordingly , $ <var:u> \cdot <nat:142> $ is even at the same time . $ <var:G> \cdot <nat:28> $ is guaranteed to be even from the knowledge taking the product between an even element of $ \mathbb{N} $ and a number in $ \mathbb{Z}^+ $ will be instrinsically an even number , and is proven from the knowledge the whole number $ <nat:28> $ is obviously even . Adding on , $ <var:j> \cdot <nat:178> $ is obviously an even whole number . This claim is proven since the leading term $ <nat:178> $ is trivially even . Remember that the pair $ <var:v> \cdot <nat:186> $ is guaranteed to be even because multiplying between an even integer and an arbitrary integer is guaranteed to be even and the integer $ <nat:186> $ is clearly trivially an even positive integer . What's more , remember that the positive integer $ <nat:414> $ is known as an even element of $ \mathbb{N} $ . Hence , the term $ <nat:414> \cdot <var:y> $ will be even in addition . Further , take note that the integer $ <nat:330> $ is trivially an even number in $ \mathbb{Z}^+ $ . For this reason , $ <nat:330> \cdot <var:h> $ is even as well . Likewise , see the pair $ <var:A> \cdot <nat:368> $ is trivially even . This fact holds from the knowledge the coefficient $ <nat:368> $ is known as an even number in $ \mathbb{N} $ . By reason that the adding of even numbers in $ \mathbb{Z}^+ $ with even natural numbers will be an even number in $ \mathbb{N} $ , and moreover from the fact multiplying between even natural numbers with any number must be an even element of $ \mathbb{Z}^+ $ . Take note that $ <nat:474> $ is obviously an even number . The totaling between an even whole number with an even integer is an even element of $ \mathbb{N} $ . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:v> <var:g> <var:G> <var:h> <var:u> <var:A> <var:P> <var:y> <var:j> <var:R> : nat , Nat . even ( <nat:28> * <var:G> + <nat:414> * <var:y> + <nat:368> * <var:A> + <nat:186> * <var:v> + <nat:188> * <var:g> + <nat:178> * <var:j> + <nat:24> * <var:P> + <nat:330> * <var:h> + <nat:362> * <var:R> + <nat:142> * <var:u> + <nat:474> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:188> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:188> * <var:g> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:24> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:24> * <var:P> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:362> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:362> * <var:R> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:142> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:142> * <var:u> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:28> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:28> * <var:G> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:178> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:178> * <var:j> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:186> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:186> * <var:v> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:414> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:414> * <var:y> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:330> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:330> * <var:h> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:368> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:368> * <var:A> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:28> * <var:G> + <nat:414> * <var:y> + <nat:368> * <var:A> + <nat:186> * <var:v> + <nat:188> * <var:g> + <nat:178> * <var:j> + <nat:24> * <var:P> + <nat:330> * <var:h> + <nat:362> * <var:R> + <nat:142> * <var:u> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:474> = true ) . { auto . } rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . auto . Qed . 