\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:316> \times <var:k> + <nat:211> + <var:h> \times <nat:498> + <nat:202> \times <var:c> + <nat:308> \times <var:W> + <nat:452> \times <var:L> $ must be odd assuming any $ <var:c> $ , $ <var:L> $ , $ <var:k> $ , $ <var:h> $ , and $ <var:W> $ . \end{theorem} \begin{proof} Take note $ <nat:211> $ is obviously odd . From the fact the summing between an even element of $ \mathbb{N} $ and an odd element of $ \mathbb{Z}^+ $ must be odd and likewise by reason that taking the product between an even element of $ \mathbb{Z}^+ $ with an arbitrary number in $ \mathbb{Z}^+ $ is an even natural , then the summation $ <var:W> \cdot <nat:308> + <var:h> \cdot <nat:498> + <nat:316> \cdot <var:k> + <nat:452> \cdot <var:L> + <nat:202> \cdot <var:c> + <nat:211> $ is guaranteed to be odd . The integer $ <nat:498> $ is trivially even The natural number $ <nat:452> $ is obviously an even whole number In addition to this , see that the coefficients $ <nat:316> $ and also $ <nat:202> $ are even Additionally , the natural number $ <nat:308> $ is guaranteed to be even \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:c> <var:L> <var:k> <var:h> <var:W> : nat , Nat . odd ( <nat:316> * <var:k> + <nat:498> * <var:h> + <nat:202> * <var:c> + <nat:308> * <var:W> + <nat:452> * <var:L> + <nat:211> ) = true . Proof . intros . assert ( <genH> : Nat . odd <nat:211> = true ) . { auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . repeat rewrite Nat . even_mul . assert ( <genH> : Nat . even <nat:498> = true ) . { auto . } assert ( <genH> : Nat . even <nat:452> = true ) . { auto . } assert ( <genH> : Nat . even <nat:316> = true ) . { auto . } assert ( <genH> : Nat . even <nat:202> = true ) . { auto . } assert ( <genH> : Nat . even <nat:308> = true ) . { auto . } rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 