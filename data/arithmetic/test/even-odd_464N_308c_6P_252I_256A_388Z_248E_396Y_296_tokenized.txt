\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:N> \times <nat:464> + <var:c> \times <nat:308> + <nat:6> \times <var:P> + <var:I> \times <nat:252> + <nat:296> + <var:A> \times <nat:256> + <var:Z> \times <nat:388> + <var:E> \times <nat:248> + <nat:396> \times <var:Y> $ is guaranteed to be even . \end{theorem} \begin{proof} On top of this , we know that the numbers $ <nat:464> $ , $ <nat:308> $ , $ <nat:6> $ , $ <nat:252> $ , $ <nat:256> $ , $ <nat:388> $ , $ <nat:248> $ , additionally $ <nat:396> $ are known to be even . Thus , the products $ <var:N> \times <nat:464> $ , $ <nat:308> \times <var:c> $ , $ <var:P> \times <nat:6> $ , $ <nat:252> \times <var:I> $ , $ <var:A> \times <nat:256> $ , $ <var:Z> \times <nat:388> $ , $ <nat:248> \times <var:E> $ , and likewise $ <nat:396> \times <var:Y> $ is guaranteed to be even as well . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:N> <var:c> <var:P> <var:I> <var:A> <var:Z> <var:E> <var:Y> : nat , Nat . even ( <nat:464> * <var:N> + <nat:308> * <var:c> + <nat:6> * <var:P> + <nat:252> * <var:I> + <nat:256> * <var:A> + <nat:388> * <var:Z> + <nat:248> * <var:E> + <nat:396> * <var:Y> + <nat:296> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:464> = true ) . { auto . } assert ( <genH> : Nat . even <nat:308> = true ) . { auto . } assert ( <genH> : Nat . even <nat:6> = true ) . { auto . } assert ( <genH> : Nat . even <nat:252> = true ) . { auto . } assert ( <genH> : Nat . even <nat:256> = true ) . { auto . } assert ( <genH> : Nat . even <nat:388> = true ) . { auto . } assert ( <genH> : Nat . even <nat:248> = true ) . { auto . } assert ( <genH> : Nat . even <nat:396> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:464> * <var:N> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:308> * <var:c> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:6> * <var:P> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:252> * <var:I> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:256> * <var:A> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:388> * <var:Z> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:248> * <var:E> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:396> * <var:Y> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 