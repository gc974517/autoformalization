\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Allow $ <var:A> $ , $ <var:K> $ , $ <var:G> $ , $ <var:k> $ , $ <var:t> $ , $ <var:X> $ , $ <var:L> $ , $ <var:w> $ as whole numbers such that $ <var:X> $ , $ <var:w> $ , $ <var:K> $ , $ <var:L> $ , $ <var:t> $ , $ <var:k> $ , $ <var:G> $ , and $ <var:A> \geq <nat:2> $ and so that $ <nat:13305600> $ is the same as $ <var:k> \times <var:L> \times <var:w> \times <var:X> \times <var:t> \times <var:A> \times <var:K> \times <var:G> $ . \end{theorem} \begin{proof} Take $ <var:k> = <nat:9> $ , $ <var:A> = <nat:10> $ , $ <var:w> = <nat:11> $ , $ <var:t> = <nat:5> $ , $ <var:X> = <nat:12> $ , $ <var:K> = <nat:8> $ , $ <var:L> = <nat:7> $ , $ <var:G> = <nat:4> $ . We prove <nat:13305600> is the product between $ <var:L> $ , $ <var:K> $ , $ <var:k> $ , $ <var:G> $ , $ <var:t> $ , $ <var:w> $ , $ <var:A> $ and $ <var:X> \in \mathbb{Z}^+ $ . We verify our proposition is true seeing that $ <nat:10> $ , $ <nat:7> $ , $ <nat:8> $ , $ <nat:11> $ , $ <nat:9> $ , $ <nat:12> $ , $ <nat:5> $ , and $ <nat:4> \geq <nat:2> $ . \end{proof} \end{document} 
~
Require Import Lia . Theorem <genP:1> : exists <var:A> <var:K> <var:G> <var:k> <var:t> <var:X> <var:L> <var:w> : nat , ( <var:X> >= <nat:2> ) /\ ( <var:w> >= <nat:2> ) /\ ( <var:K> >= <nat:2> ) /\ ( <var:L> >= <nat:2> ) /\ ( <var:t> >= <nat:2> ) /\ ( <var:k> >= <nat:2> ) /\ ( <var:G> >= <nat:2> ) /\ ( <var:A> >= <nat:2> ) /\ ( <nat:13305600> = <var:k> * <var:L> * <var:w> * <var:X> * <var:t> * <var:A> * <var:K> * <var:G> ) . Proof . exists <nat:10> . exists <nat:8> . exists <nat:4> . exists <nat:9> . exists <nat:5> . exists <nat:12> . exists <nat:7> . exists <nat:11> . assert ( <genH> : <nat:10> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:7> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:8> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:11> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:9> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:12> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:5> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:4> >= <nat:2> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 