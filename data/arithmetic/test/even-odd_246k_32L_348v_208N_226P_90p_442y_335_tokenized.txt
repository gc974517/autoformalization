\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:k> \times <nat:246> + <nat:32> \times <var:L> + <var:v> \times <nat:348> + <nat:335> + <var:N> \times <nat:208> + <nat:226> \times <var:P> + <var:p> \times <nat:90> + <nat:442> \times <var:y> $ will be odd . \end{theorem} \begin{proof} The term $ <var:p> * <nat:90> $ is known as an even number in $ \mathbb{Z}^+ $ . This fact holds because multiplying of an even whole number with a positive integer must be an even natural . Likewise , observe the products $ <nat:442> * <var:y> $ , $ <var:v> * <nat:348> $ , $ <nat:208> * <var:N> $ , additionally $ <nat:246> * <var:k> $ are even natural numbers . Additionally , the term $ <var:P> * <nat:226> $ is obviously even . This fact must be true from the fact taking the product between an even element of $ \mathbb{N} $ and an arbitrary natural is guaranteed to be an even natural . Take note that the term $ <var:L> * <nat:32> $ is known as an even natural number . This is proven by reason that taking the product between an even number in $ \mathbb{Z}^+ $ with an arbitrary natural must be even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:k> <var:L> <var:v> <var:N> <var:P> <var:p> <var:y> : nat , Nat . odd ( <nat:246> * <var:k> + <nat:32> * <var:L> + <nat:348> * <var:v> + <nat:208> * <var:N> + <nat:226> * <var:P> + <nat:90> * <var:p> + <nat:442> * <var:y> + <nat:335> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:90> * <var:p> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:442> * <var:y> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:348> * <var:v> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:208> * <var:N> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:246> * <var:k> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:226> * <var:P> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:32> * <var:L> ) = true ) . { rewrite Nat . even_mul . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 