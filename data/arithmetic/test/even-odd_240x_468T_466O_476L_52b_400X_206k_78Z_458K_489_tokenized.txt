\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Given any positive numbers $ <var:L> $ , $ <var:K> $ , $ <var:b> $ , $ <var:Z> $ , $ <var:x> $ , $ <var:k> $ , $ <var:T> $ , $ <var:X> $ , and $ <var:O> $ the formula $ <var:b> \times <nat:52> + <var:T> \times <nat:468> + <nat:489> + <var:k> \times <nat:206> + <nat:458> \times <var:K> + <var:O> \times <nat:466> + <nat:78> \times <var:Z> + <var:x> \times <nat:240> + <var:L> \times <nat:476> + <var:X> \times <nat:400> $ is guaranteed to be odd . \end{theorem} \begin{proof} We know that the summation $ <nat:206> \cdot <var:k> + <nat:489> + <var:T> \cdot <nat:468> + <var:Z> \cdot <nat:78> + <var:x> \cdot <nat:240> + <nat:400> \cdot <var:X> + <nat:52> \cdot <var:b> + <nat:466> \cdot <var:O> + <var:L> \cdot <nat:476> + <nat:458> \cdot <var:K> $ is guaranteed to be odd because the expression $ <nat:240> \cdot <var:x> + <var:T> \cdot <nat:468> + <var:O> \cdot <nat:466> + <var:L> \cdot <nat:476> + <var:b> \cdot <nat:52> + <nat:400> \cdot <var:X> + <var:k> \cdot <nat:206> + <nat:78> \cdot <var:Z> + <var:K> \cdot <nat:458> $ is clearly even . Furthermore , we know the numbers $ <nat:240> $ , $ <nat:468> $ , $ <nat:466> $ , $ <nat:476> $ , $ <nat:52> $ , $ <nat:400> $ , $ <nat:206> $ , $ <nat:78> $ , plus $ <nat:458> $ are obviously even elements of $ \mathbb{Z}^+ $ . Thus , the terms $ <nat:240> * <var:x> $ , $ <var:T> * <nat:468> $ , $ <var:O> * <nat:466> $ , $ <nat:476> * <var:L> $ , $ <var:b> * <nat:52> $ , $ <nat:400> * <var:X> $ , $ <var:k> * <nat:206> $ , $ <var:Z> * <nat:78> $ , in addition to $ <nat:458> * <var:K> $ must be even in addition . From the fact the summing of an even number in $ \mathbb{N} $ with even integers will be an even number in $ \mathbb{N} $ , additionally as a consequence that taking the product of even numbers in $ \mathbb{Z}^+ $ with some element of $ \mathbb{Z}^+ $ must be even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:L> <var:K> <var:b> <var:Z> <var:x> <var:k> <var:T> <var:X> <var:O> : nat , Nat . odd ( <nat:52> * <var:b> + <nat:468> * <var:T> + <nat:206> * <var:k> + <nat:458> * <var:K> + <nat:466> * <var:O> + <nat:78> * <var:Z> + <nat:240> * <var:x> + <nat:476> * <var:L> + <nat:400> * <var:X> + <nat:489> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:240> = true ) . { auto . } assert ( <genH> : Nat . even <nat:468> = true ) . { auto . } assert ( <genH> : Nat . even <nat:466> = true ) . { auto . } assert ( <genH> : Nat . even <nat:476> = true ) . { auto . } assert ( <genH> : Nat . even <nat:52> = true ) . { auto . } assert ( <genH> : Nat . even <nat:400> = true ) . { auto . } assert ( <genH> : Nat . even <nat:206> = true ) . { auto . } assert ( <genH> : Nat . even <nat:78> = true ) . { auto . } assert ( <genH> : Nat . even <nat:458> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:240> * <var:x> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:468> * <var:T> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:466> * <var:O> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:476> * <var:L> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:52> * <var:b> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:400> * <var:X> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:206> * <var:k> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:78> * <var:Z> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:458> * <var:K> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:52> * <var:b> + <nat:468> * <var:T> + <nat:206> * <var:k> + <nat:458> * <var:K> + <nat:466> * <var:O> + <nat:78> * <var:Z> + <nat:240> * <var:x> + <nat:476> * <var:L> + <nat:400> * <var:X> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . auto . Qed . 