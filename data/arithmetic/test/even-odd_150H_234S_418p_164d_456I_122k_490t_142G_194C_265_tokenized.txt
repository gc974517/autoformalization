\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:265> + <nat:194> * <var:C> + <nat:456> * <var:I> + <var:t> * <nat:490> + <nat:150> * <var:H> + <var:S> * <nat:234> + <var:p> * <nat:418> + <nat:142> * <var:G> + <var:d> * <nat:164> + <nat:122> * <var:k> $ is odd . \end{theorem} \begin{proof} Observe $ <nat:150> <var:H> + <nat:234> <var:S> + <var:t> <nat:490> + <nat:122> <var:k> + <nat:194> <var:C> + <var:p> <nat:418> + <nat:142> <var:G> + <var:I> <nat:456> + <var:d> <nat:164> $ is trivially even . The summation $ <nat:142> * <var:G> + <nat:194> * <var:C> + <nat:150> * <var:H> + <var:t> * <nat:490> + <var:I> * <nat:456> + <var:k> * <nat:122> + <var:d> * <nat:164> + <var:p> * <nat:418> + <nat:234> * <var:S> $ is guaranteed to be even by reason that taking the product of an even number and an arbitrary element of $ \mathbb{N} $ must be even . Remember that $ <nat:265> $ is trivially odd . We show the summation $ <nat:150> * <var:H> + <nat:265> + <nat:234> * <var:S> + <var:p> * <nat:418> + <var:d> * <nat:164> + <var:I> * <nat:456> + <var:k> * <nat:122> + <nat:490> * <var:t> + <var:G> * <nat:142> + <var:C> * <nat:194> $ must be odd . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:C> <var:I> <var:t> <var:H> <var:S> <var:p> <var:G> <var:d> <var:k> : nat , Nat . odd ( <nat:194> * <var:C> + <nat:456> * <var:I> + <nat:490> * <var:t> + <nat:150> * <var:H> + <nat:234> * <var:S> + <nat:418> * <var:p> + <nat:142> * <var:G> + <nat:164> * <var:d> + <nat:122> * <var:k> + <nat:265> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:194> * <var:C> + <nat:456> * <var:I> + <nat:490> * <var:t> + <nat:150> * <var:H> + <nat:234> * <var:S> + <nat:418> * <var:p> + <nat:142> * <var:G> + <nat:164> * <var:d> + <nat:122> * <var:k> ) = true ) . { repeat rewrite Nat . even_add . repeat rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . odd <nat:265> = true ) . { auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . rewrite <genH> . auto . Qed . 