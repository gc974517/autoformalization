\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:X> * <var:L> * <var:q> * <var:I> * <var:c> * <var:j> * <var:x> * <var:T> * <var:s> $ is $ <nat:103783680> $ such that $ <var:q> $ , $ <var:X> $ , $ <var:x> $ , $ <var:c> $ , $ <var:j> $ , $ <var:L> $ , $ <var:s> $ , $ <var:T> $ , and $ <var:I> \geq <nat:2> $ . \end{theorem} \begin{proof} Take $ <var:q> = <nat:13> $ , $ <var:T> = <nat:11> $ , $ <var:L> = <nat:9> $ , $ <var:X> = <nat:10> $ , $ <var:x> = <nat:12> $ , $ <var:c> = <nat:8> $ , $ <var:j> = <nat:7> $ , $ <var:s> = <nat:6> $ , $ <var:I> = <nat:2> $ . Note $ <nat:9> $ , $ <nat:10> $ , $ <nat:7> $ , $ <nat:12> $ , $ <nat:8> $ , $ <nat:13> $ , $ <nat:6> $ , $ <nat:2> $ and $ <nat:11> \geq <nat:2> $ . What's more note further $ <nat:103783680> = <var:q> \times <var:j> \times <var:s> \times <var:X> \times <var:T> \times <var:c> \times <var:I> \times <var:x> \times <var:L> $ . \end{proof} \end{document} 
~
Require Import Lia . Theorem <genP:1> : exists <var:I> <var:T> <var:j> <var:s> <var:L> <var:c> <var:X> <var:x> <var:q> : nat , ( <var:X> * <var:L> * <var:q> * <var:I> * <var:c> * <var:j> * <var:x> * <var:T> * <var:s> = <nat:103783680> ) /\ ( <var:q> >= <nat:2> ) /\ ( <var:X> >= <nat:2> ) /\ ( <var:x> >= <nat:2> ) /\ ( <var:c> >= <nat:2> ) /\ ( <var:j> >= <nat:2> ) /\ ( <var:L> >= <nat:2> ) /\ ( <var:s> >= <nat:2> ) /\ ( <var:T> >= <nat:2> ) /\ ( <var:I> >= <nat:2> ) . Proof . exists <nat:2> . exists <nat:11> . exists <nat:7> . exists <nat:6> . exists <nat:9> . exists <nat:8> . exists <nat:10> . exists <nat:12> . exists <nat:13> . assert ( <genH> : <nat:9> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:10> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:7> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:12> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:8> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:13> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:6> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:2> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:11> >= <nat:2> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 