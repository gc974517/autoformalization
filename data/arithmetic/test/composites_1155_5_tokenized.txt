\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \newtheorem{definition}{Definition} \begin{document} \begin{definition} Assume that $ <var:r> $ is a <def:five-composite> natural number iff $ \exists <var:e> $ , $ <var:f> $ , $ <var:J> $ , $ <var:n> $ , $ <var:h> \in \mathbb{N} $ so that $ <var:r> = <var:e> \times <var:J> \times <var:h> \times <var:f> \times <var:n> $ assuming $ <var:r> \in \mathbb{N} $ plus such that $ <var:J> $ , $ <var:h> $ , $ <var:f> $ , $ <var:n> $ , and $ <var:e> \geq <nat:2> $ . \end{definition} \begin{theorem} <nat:11200> is a <def:five-composite> positive integer . \end{theorem} \begin{proof} Remember that <nat:11200> is a <def:five-composite> natural number granted that it is the product between positive integers $ <var:J> $ , $ <var:n> $ , $ <var:h> $ , $ <var:f> $ , and $ <var:e> $ larger than or equivalent to <nat:2> . Let $ <var:e> = <nat:8> $ , $ <var:J> = <nat:4> $ , $ <var:h> = <nat:10> $ , $ <var:f> = <nat:5> $ , and $ <var:n> = <nat:7> $ . We confirm <nat:11200> is a <def:five-composite> natural number . Observe $ <nat:10> $ , $ <nat:4> $ , $ <nat:7> $ , $ <nat:8> $ , $ <nat:5> \geq <nat:2> $ . Further note too $ <var:J> * <var:h> * <var:n> * <var:e> * <var:f> = <nat:11200> $ . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:five-composite> ( <var:r> : nat ) := exists <var:e> <var:f> <var:J> <var:n> <var:h> : nat , ( <var:r> = <var:e> * <var:J> * <var:h> * <var:f> * <var:n> ) /\ ( <var:J> >= <nat:2> ) /\ ( <var:h> >= <nat:2> ) /\ ( <var:f> >= <nat:2> ) /\ ( <var:n> >= <nat:2> ) /\ ( <var:e> >= <nat:2> ) . Theorem <genP:1> : <def:five-composite> <nat:11200> . Proof . unfold <def:five-composite> . exists <nat:8> . exists <nat:5> . exists <nat:4> . exists <nat:7> . exists <nat:10> . assert ( <genH> : <nat:10> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:4> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:7> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:8> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:5> >= <nat:2> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 