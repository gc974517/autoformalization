\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Take $ <var:b> $ , $ <var:K> $ , $ <var:t> $ , $ <var:H> $ , $ <var:U> \in \mathbb{Z}^+ $ . Take as given that some integer $ <var:d> $ will be named <def:five-composite> assuming $ <var:t> \times <var:b> \times <var:H> \times <var:K> \times <var:U> = <var:d> $ as well as more than <nat:1> . For this reason the natural number <nat:960> is a <def:five-composite> positive integer . \end{theorem} \begin{proof} Assume $ <var:U> = <nat:8> $ , $ <var:K> = <nat:5> $ , $ <var:H> = <nat:2> $ , $ <var:b> = <nat:4> $ , and $ <var:t> = <nat:3> $ . We demonstrate <nat:960> is the product between some natural numbers $ <var:b> $ , $ <var:K> $ , $ <var:U> $ , $ <var:t> $ and $ <var:H> $ as well as $ <var:K> $ , $ <var:H> $ , $ <var:U> $ , $ <var:t> $ and $ <var:b> $ are more than <nat:1> . Notice $ <nat:5> $ , $ <nat:3> $ , $ <nat:8> $ , $ <nat:2> $ and $ <nat:4> $ are greater than <nat:1> . Also notice as well $ <nat:960> = <nat:8> \times <nat:2> \times <nat:4> \times <nat:3> \times <nat:5> = <var:U> \times <var:H> \times <var:b> \times <var:t> \times <var:K> $ . This indicates <nat:960> is a <def:five-composite> integer . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:five-composite> ( <var:d> : nat ) := exists <var:b> <var:K> <var:t> <var:H> <var:U> : nat , ( <var:t> * <var:b> * <var:H> * <var:K> * <var:U> = <var:d> ) /\ ( <var:b> > <nat:1> ) /\ ( <var:K> > <nat:1> ) /\ ( <var:t> > <nat:1> ) /\ ( <var:H> > <nat:1> ) /\ ( <var:U> > <nat:1> ) . Theorem <genP:1> : <def:five-composite> <nat:960> . Proof . unfold <def:five-composite> . exists <nat:4> . exists <nat:5> . exists <nat:3> . exists <nat:2> . exists <nat:8> . assert ( <genH> : <nat:5> > <nat:1> ) . { lia . } assert ( <genH> : <nat:3> > <nat:1> ) . { lia . } assert ( <genH> : <nat:8> > <nat:1> ) . { lia . } assert ( <genH> : <nat:2> > <nat:1> ) . { lia . } assert ( <genH> : <nat:4> > <nat:1> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 