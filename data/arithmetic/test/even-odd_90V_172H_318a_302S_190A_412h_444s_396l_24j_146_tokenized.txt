\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:412> * <var:h> + <nat:444> * <var:s> + <nat:396> * <var:l> + <nat:24> * <var:j> + <var:H> * <nat:172> + <var:S> * <nat:302> + <nat:318> * <var:a> + <nat:146> + <var:A> * <nat:190> + <var:V> * <nat:90> $ is even . \end{theorem} \begin{proof} The sum $ <var:h> \cdot <nat:412> + <var:V> \cdot <nat:90> + <nat:172> \cdot <var:H> + <nat:302> \cdot <var:S> + <var:j> \cdot <nat:24> + <var:l> \cdot <nat:396> + <nat:444> \cdot <var:s> + <nat:190> \cdot <var:A> + <var:a> \cdot <nat:318> + <nat:146> $ is obviously even from the fact the formula $ <var:H> * <nat:172> + <var:j> * <nat:24> + <nat:444> * <var:s> + <nat:412> * <var:h> + <nat:302> * <var:S> + <nat:396> * <var:l> + <nat:90> * <var:V> + <var:A> * <nat:190> + <nat:318> * <var:a> $ is known to be even . This claim is true because the adding between an even natural with an even natural is trivially an even number in $ \mathbb{N} $ as well as because the multiplication between even positive integers with any integer will be instrinsically an even integer . It can be proven that $ <var:V> * <nat:90> + <nat:172> * <var:H> + <var:a> * <nat:318> + <nat:302> * <var:S> + <nat:190> * <var:A> + <nat:412> * <var:h> + <nat:444> * <var:s> + <nat:146> + <nat:396> * <var:l> + <nat:24> * <var:j> $ will be even . Recall $ <nat:146> $ is even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:h> <var:s> <var:l> <var:j> <var:H> <var:S> <var:a> <var:A> <var:V> : nat , Nat . even ( <nat:412> * <var:h> + <nat:444> * <var:s> + <nat:396> * <var:l> + <nat:24> * <var:j> + <nat:172> * <var:H> + <nat:302> * <var:S> + <nat:318> * <var:a> + <nat:190> * <var:A> + <nat:90> * <var:V> + <nat:146> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:412> * <var:h> + <nat:444> * <var:s> + <nat:396> * <var:l> + <nat:24> * <var:j> + <nat:172> * <var:H> + <nat:302> * <var:S> + <nat:318> * <var:a> + <nat:190> * <var:A> + <nat:90> * <var:V> ) = true ) . { repeat rewrite Nat . even_add . repeat rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even <nat:146> = true ) . { auto . } rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . auto . Qed . 