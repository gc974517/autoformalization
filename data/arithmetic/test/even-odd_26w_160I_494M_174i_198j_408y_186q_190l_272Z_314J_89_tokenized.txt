\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:89> + <var:w> <nat:26> + <var:I> <nat:160> + <var:M> <nat:494> + <var:i> <nat:174> + <var:j> <nat:198> + <var:y> <nat:408> + <var:q> <nat:186> + <var:l> <nat:190> + <nat:272> <var:Z> + <var:J> <nat:314> $ is odd using any whole numbers $ <var:l> $ , $ <var:M> $ , $ <var:J> $ , $ <var:I> $ , $ <var:Z> $ , $ <var:w> $ , $ <var:j> $ , $ <var:q> $ , $ <var:i> $ , and $ <var:y> $ . \end{theorem} \begin{proof} In addition , observe the products $ <var:w> \cdot <nat:26> $ , $ <nat:160> \cdot <var:I> $ , $ <nat:494> \cdot <var:M> $ , $ <var:i> \cdot <nat:174> $ , $ <nat:198> \cdot <var:j> $ , $ <var:y> \cdot <nat:408> $ , $ <nat:186> \cdot <var:q> $ , $ <var:l> \cdot <nat:190> $ , $ <var:Z> \cdot <nat:272> $ , additionally $ <nat:314> \cdot <var:J> $ will be even since the integers $ <nat:26> $ , $ <nat:160> $ , $ <nat:494> $ , $ <nat:174> $ , $ <nat:198> $ , $ <nat:408> $ , $ <nat:186> $ , $ <nat:190> $ , $ <nat:272> $ , and likewise $ <nat:314> $ are clearly themselves even numbers . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:l> <var:M> <var:J> <var:I> <var:Z> <var:w> <var:j> <var:q> <var:i> <var:y> : nat , Nat . odd ( <nat:26> * <var:w> + <nat:160> * <var:I> + <nat:494> * <var:M> + <nat:174> * <var:i> + <nat:198> * <var:j> + <nat:408> * <var:y> + <nat:186> * <var:q> + <nat:190> * <var:l> + <nat:272> * <var:Z> + <nat:314> * <var:J> + <nat:89> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:26> = true ) . { auto . } assert ( <genH> : Nat . even <nat:160> = true ) . { auto . } assert ( <genH> : Nat . even <nat:494> = true ) . { auto . } assert ( <genH> : Nat . even <nat:174> = true ) . { auto . } assert ( <genH> : Nat . even <nat:198> = true ) . { auto . } assert ( <genH> : Nat . even <nat:408> = true ) . { auto . } assert ( <genH> : Nat . even <nat:186> = true ) . { auto . } assert ( <genH> : Nat . even <nat:190> = true ) . { auto . } assert ( <genH> : Nat . even <nat:272> = true ) . { auto . } assert ( <genH> : Nat . even <nat:314> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:26> * <var:w> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:160> * <var:I> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:494> * <var:M> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:174> * <var:i> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:198> * <var:j> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:408> * <var:y> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:186> * <var:q> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:190> * <var:l> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:272> * <var:Z> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:314> * <var:J> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 