\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} With some natural numbers $ <var:q> $ , $ <var:J> $ , $ <var:s> $ , $ <var:a> $ , $ <var:E> $ , $ <var:r> $ , and $ <var:c> $ $ <nat:72> \cdot <var:E> + <var:s> \cdot <nat:18> + <var:c> \cdot <nat:368> + <var:J> \cdot <nat:420> + <var:a> \cdot <nat:392> + <nat:47> + <nat:254> \cdot <var:r> + <var:q> \cdot <nat:494> $ is odd . \end{theorem} \begin{proof} Take note that $ <nat:47> $ is guaranteed to be an odd positive integer . It can be proven that the claim is true in accordance with the fact that the totaling of even elements of $ \mathbb{Z}^+ $ and an odd whole number is odd . Notice that the formula $ <var:J> * <nat:420> + <nat:254> * <var:r> + <nat:18> * <var:s> + <nat:494> * <var:q> + <var:a> * <nat:392> + <var:c> * <nat:368> + <var:E> * <nat:72> $ is even . Building on , notice the integers $ <nat:420> $ , $ <nat:254> $ , $ <nat:18> $ , $ <nat:494> $ , $ <nat:392> $ , $ <nat:368> $ , plus $ <nat:72> $ are even naturals . Thus , the terms $ <var:J> \cdot <nat:420> $ , $ <nat:254> \cdot <var:r> $ , $ <nat:18> \cdot <var:s> $ , $ <var:q> \cdot <nat:494> $ , $ <var:a> \cdot <nat:392> $ , $ <var:c> \cdot <nat:368> $ , as well as $ <var:E> \cdot <nat:72> $ must be even at the same time . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:q> <var:J> <var:s> <var:a> <var:E> <var:r> <var:c> : nat , Nat . odd ( <nat:72> * <var:E> + <nat:18> * <var:s> + <nat:368> * <var:c> + <nat:420> * <var:J> + <nat:392> * <var:a> + <nat:254> * <var:r> + <nat:494> * <var:q> + <nat:47> ) = true . Proof . intros . assert ( <genH> : Nat . odd <nat:47> = true ) . { auto . } rewrite Nat . odd_add . assert ( <genH> : Nat . even <nat:420> = true ) . { auto . } assert ( <genH> : Nat . even <nat:254> = true ) . { auto . } assert ( <genH> : Nat . even <nat:18> = true ) . { auto . } assert ( <genH> : Nat . even <nat:494> = true ) . { auto . } assert ( <genH> : Nat . even <nat:392> = true ) . { auto . } assert ( <genH> : Nat . even <nat:368> = true ) . { auto . } assert ( <genH> : Nat . even <nat:72> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:420> * <var:J> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:254> * <var:r> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:18> * <var:s> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:494> * <var:q> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:392> * <var:a> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:368> * <var:c> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:72> * <var:E> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:72> * <var:E> + <nat:18> * <var:s> + <nat:368> * <var:c> + <nat:420> * <var:J> + <nat:392> * <var:a> + <nat:254> * <var:r> + <nat:494> * <var:q> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite <- Nat . negb_even . rewrite <genH> . rewrite <genH> . auto . Qed . 