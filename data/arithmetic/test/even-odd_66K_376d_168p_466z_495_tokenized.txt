\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:66> \times <var:K> + <nat:376> \times <var:d> + <nat:168> \times <var:p> + <nat:466> \times <var:z> + <nat:495> $ will be odd . \end{theorem} \begin{proof} Take note that the whole numbers $ <nat:66> $ , $ <nat:376> $ , $ <nat:168> $ , $ <nat:466> $ , will be even . Thus , the terms $ <var:K> <nat:66> $ , $ <var:d> <nat:376> $ , $ <var:p> <nat:168> $ , $ <nat:466> <var:z> $ , is guaranteed to be even at the same time . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:K> <var:d> <var:p> <var:z> : nat , Nat . odd ( <nat:66> * <var:K> + <nat:376> * <var:d> + <nat:168> * <var:p> + <nat:466> * <var:z> + <nat:495> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:66> = true ) . { auto . } assert ( <genH> : Nat . even <nat:376> = true ) . { auto . } assert ( <genH> : Nat . even <nat:168> = true ) . { auto . } assert ( <genH> : Nat . even <nat:466> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:66> * <var:K> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:376> * <var:d> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:168> * <var:p> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:466> * <var:z> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 