\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:r> <nat:28> + <nat:82> <var:a> + <nat:290> <var:A> + <nat:330> <var:Z> + <var:B> <nat:226> + <var:w> <nat:170> + <var:O> <nat:16> + <var:m> <nat:58> + <nat:39> + <var:g> <nat:418> + <var:d> <nat:252> + <nat:186> <var:c> $ is guaranteed to be odd for some whole numbers $ <var:r> $ , $ <var:A> $ , $ <var:B> $ , $ <var:w> $ , $ <var:O> $ , $ <var:Z> $ , $ <var:m> $ , $ <var:g> $ , $ <var:a> $ , $ <var:c> $ , and $ <var:d> $ . \end{theorem} \begin{proof} The claim holds from the fact $ <nat:226> <var:B> + <nat:16> <var:O> + <nat:58> <var:m> + <var:c> <nat:186> + <var:Z> <nat:330> + <nat:82> <var:a> + <nat:170> <var:w> + <var:A> <nat:290> + <nat:28> <var:r> + <var:g> <nat:418> + <var:d> <nat:252> $ is known as even . The numbers $ <nat:186> $ , $ <nat:170> $ , $ <nat:28> $ , $ <nat:418> $ , $ <nat:58> $ , $ <nat:16> $ , $ <nat:330> $ , additionally $ <nat:252> $ are clearly even . Accordingly , the products $ <nat:186> * <var:c> $ , $ <nat:170> * <var:w> $ , $ <nat:28> * <var:r> $ , $ <nat:418> * <var:g> $ , $ <nat:58> * <var:m> $ , $ <nat:16> * <var:O> $ , $ <nat:330> * <var:Z> $ , and $ <var:d> * <nat:252> $ will be even at the same time . Likewise , the whole number $ <nat:82> $ is trivially an even number in $ \mathbb{N} $ . Then , the term $ <var:a> * <nat:82> $ is even in addition . Furthermore , see $ <nat:226> * <var:B> $ is known to be even . This is true since the product between an even number in $ \mathbb{N} $ and any element of $ \mathbb{N} $ is even and also the natural number $ <nat:226> $ is clearly even . In addition , notice the leading term $ <nat:290> $ is obviously an even number in $ \mathbb{Z}^+ $ . Accordingly , the product $ <nat:290> * <var:A> $ must be even also . The main result is true as a consequence that taking the product of even integers and some positive integer is guaranteed to be even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:r> <var:A> <var:B> <var:w> <var:O> <var:Z> <var:m> <var:g> <var:a> <var:c> <var:d> : nat , Nat . odd ( <nat:28> * <var:r> + <nat:82> * <var:a> + <nat:290> * <var:A> + <nat:330> * <var:Z> + <nat:226> * <var:B> + <nat:170> * <var:w> + <nat:16> * <var:O> + <nat:58> * <var:m> + <nat:418> * <var:g> + <nat:252> * <var:d> + <nat:186> * <var:c> + <nat:39> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:186> = true ) . { auto . } assert ( <genH> : Nat . even <nat:170> = true ) . { auto . } assert ( <genH> : Nat . even <nat:28> = true ) . { auto . } assert ( <genH> : Nat . even <nat:418> = true ) . { auto . } assert ( <genH> : Nat . even <nat:58> = true ) . { auto . } assert ( <genH> : Nat . even <nat:16> = true ) . { auto . } assert ( <genH> : Nat . even <nat:330> = true ) . { auto . } assert ( <genH> : Nat . even <nat:252> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:186> * <var:c> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:170> * <var:w> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:28> * <var:r> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:418> * <var:g> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:58> * <var:m> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:16> * <var:O> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:330> * <var:Z> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:252> * <var:d> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:82> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:82> * <var:a> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:226> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:226> * <var:B> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:290> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:290> * <var:A> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:28> * <var:r> + <nat:82> * <var:a> + <nat:290> * <var:A> + <nat:330> * <var:Z> + <nat:226> * <var:B> + <nat:170> * <var:w> + <nat:16> * <var:O> + <nat:58> * <var:m> + <nat:418> * <var:g> + <nat:252> * <var:d> + <nat:186> * <var:c> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . auto . Qed . 