\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:484> + <nat:400> \cdot <var:e> + <var:g> \cdot <nat:472> + <var:n> \cdot <nat:206> + <var:C> \cdot <nat:240> + <nat:386> \cdot <var:V> + <var:s> \cdot <nat:422> + <nat:458> \cdot <var:r> + <nat:480> \cdot <var:K> $ is even . \end{theorem} \begin{proof} It can be demonstrated that the formula $ <nat:240> \times <var:C> + <var:s> \times <nat:422> + <var:V> \times <nat:386> + <var:K> \times <nat:480> + <nat:484> + <nat:458> \times <var:r> + <nat:472> \times <var:g> + <nat:206> \times <var:n> + <nat:400> \times <var:e> $ will be even . Recall that $ <nat:484> $ is obviously an even element of $ \mathbb{N} $ . The summation $ <var:n> \cdot <nat:206> + <var:C> \cdot <nat:240> + <nat:484> + <var:e> \cdot <nat:400> + <nat:386> \cdot <var:V> + <nat:422> \cdot <var:s> + <nat:472> \cdot <var:g> + <nat:458> \cdot <var:r> + <var:K> \cdot <nat:480> $ is known to be even from the knowledge the expression $ <nat:386> * <var:V> + <var:s> * <nat:422> + <var:r> * <nat:458> + <nat:400> * <var:e> + <var:C> * <nat:240> + <nat:472> * <var:g> + <var:n> * <nat:206> + <var:K> * <nat:480> $ is trivially even . Likewise , the leading terms $ <nat:386> $ , $ <nat:422> $ , $ <nat:458> $ , $ <nat:400> $ , $ <nat:240> $ , $ <nat:472> $ , $ <nat:206> $ , as well as $ <nat:480> $ are obviously even numbers . Accordingly , the terms $ <var:V> * <nat:386> $ , $ <nat:422> * <var:s> $ , $ <var:r> * <nat:458> $ , $ <var:e> * <nat:400> $ , $ <var:C> * <nat:240> $ , $ <nat:472> * <var:g> $ , $ <var:n> * <nat:206> $ , and moreover $ <nat:480> * <var:K> $ will be even additionally . Since the adding of an even natural and even numbers in $ \mathbb{Z}^+ $ must be instrinsically an even number in $ \mathbb{N} $ , and from the knowledge the product of even elements of $ \mathbb{Z}^+ $ with an arbitrary number in $ \mathbb{N} $ must be even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:e> <var:g> <var:n> <var:C> <var:V> <var:s> <var:r> <var:K> : nat , Nat . even ( <nat:400> * <var:e> + <nat:472> * <var:g> + <nat:206> * <var:n> + <nat:240> * <var:C> + <nat:386> * <var:V> + <nat:422> * <var:s> + <nat:458> * <var:r> + <nat:480> * <var:K> + <nat:484> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:484> = true ) . { auto . } assert ( <genH> : Nat . even <nat:386> = true ) . { auto . } assert ( <genH> : Nat . even <nat:422> = true ) . { auto . } assert ( <genH> : Nat . even <nat:458> = true ) . { auto . } assert ( <genH> : Nat . even <nat:400> = true ) . { auto . } assert ( <genH> : Nat . even <nat:240> = true ) . { auto . } assert ( <genH> : Nat . even <nat:472> = true ) . { auto . } assert ( <genH> : Nat . even <nat:206> = true ) . { auto . } assert ( <genH> : Nat . even <nat:480> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:386> * <var:V> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:422> * <var:s> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:458> * <var:r> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:400> * <var:e> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:240> * <var:C> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:472> * <var:g> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:206> * <var:n> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:480> * <var:K> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:400> * <var:e> + <nat:472> * <var:g> + <nat:206> * <var:n> + <nat:240> * <var:C> + <nat:386> * <var:V> + <nat:422> * <var:s> + <nat:458> * <var:r> + <nat:480> * <var:K> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . auto . Qed . 