\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Allow $ <var:T> $ , $ <var:g> $ , $ <var:Q> $ , $ <var:b> $ , $ <var:d> $ , $ <var:f> $ are numbers where $ <var:Q> $ , $ <var:d> $ , $ <var:f> $ , $ <var:T> $ , $ <var:g> $ , $ <var:b> > <nat:1> $ . Claim that some integer $ <var:y> $ is named a <def:six-composite> natural number assuming $ <var:y> = <var:f> * <var:g> * <var:b> * <var:Q> * <var:d> * <var:T> $ . Thus $ <var:y> = <nat:26208> $ is a <def:six-composite> whole number . \end{theorem} \begin{proof} Let $ <var:f> = <nat:4> $ , $ <var:T> = <nat:2> $ , $ <var:b> = <nat:7> $ , $ <var:Q> = <nat:3> $ , $ <var:g> = <nat:12> $ , $ <var:d> = <nat:13> $ . We confirm <nat:26208> is a <def:six-composite> positive integer in consideration of By reason of $ <var:b> = <nat:7> $ , $ <var:g> = <nat:12> $ , $ <var:Q> = <nat:3> $ , $ <var:f> = <nat:4> $ , $ <var:T> = <nat:2> $ and $ <var:d> = <nat:13> $ are larger than <nat:1> . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:six-composite> ( <var:y> : nat ) := exists <var:T> <var:g> <var:Q> <var:b> <var:d> <var:f> : nat , ( <var:Q> > <nat:1> ) /\ ( <var:d> > <nat:1> ) /\ ( <var:f> > <nat:1> ) /\ ( <var:T> > <nat:1> ) /\ ( <var:g> > <nat:1> ) /\ ( <var:b> > <nat:1> ) /\ ( <var:y> = <var:f> * <var:g> * <var:b> * <var:Q> * <var:d> * <var:T> ) . Theorem <genP:1> : <def:six-composite> <nat:26208> . Proof . unfold <def:six-composite> . exists <nat:2> . exists <nat:12> . exists <nat:3> . exists <nat:7> . exists <nat:13> . exists <nat:4> . assert ( <genH> : <nat:7> > <nat:1> ) . { lia . } assert ( <genH> : <nat:12> > <nat:1> ) . { lia . } assert ( <genH> : <nat:3> > <nat:1> ) . { lia . } assert ( <genH> : <nat:4> > <nat:1> ) . { lia . } assert ( <genH> : <nat:2> > <nat:1> ) . { lia . } assert ( <genH> : <nat:13> > <nat:1> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 