\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \newtheorem{definition}{Definition} \begin{document} \begin{definition} Denote that $ <var:V> $ is a <def:nine-composite> positive integer when there exist $ <var:F> $ , $ <var:L> $ , $ <var:p> $ , $ <var:E> $ , $ <var:n> $ , $ <var:h> $ , $ <var:G> $ , $ <var:o> $ , $ <var:A> \in \mathbb{Z}^+ $ so that $ <var:V> = <var:n> \cdot <var:p> \cdot <var:G> \cdot <var:A> \cdot <var:L> \cdot <var:h> \cdot <var:F> \cdot <var:E> \cdot <var:o> $ assuming some $ <var:V> $ as well as such that $ <var:F> $ , $ <var:o> $ , $ <var:A> $ , $ <var:E> $ , $ <var:L> $ , $ <var:n> $ , $ <var:p> $ , $ <var:G> $ , $ <var:h> \geq <nat:2> $ . \end{definition} \begin{theorem} The positive integer <nat:7862400> is a <def:nine-composite> whole number . \end{theorem} \begin{proof} Remember a <def:nine-composite> whole number is the product between integers $ <var:G> $ , $ <var:F> $ , $ <var:n> $ , $ <var:p> $ , $ <var:L> $ , $ <var:E> $ , $ <var:A> $ , $ <var:o> $ , $ <var:h> $ where $ <var:p> $ , $ <var:h> $ , $ <var:G> $ , $ <var:n> $ , $ <var:A> $ , $ <var:F> $ , $ <var:L> $ , $ <var:o> $ and $ <var:E> \geq <nat:2> $ . Note $ <nat:3> $ , $ <nat:12> $ , $ <nat:2> $ , $ <nat:7> $ , $ <nat:5> $ , $ <nat:13> $ , $ <nat:4> $ , $ <nat:6> $ , $ <nat:10> $ are more than or equivalent to <nat:2> . Similarly observe that additionally $ <nat:12> \times <nat:5> \times <nat:10> \times <nat:3> \times <nat:2> \times <nat:13> \times <nat:7> \times <nat:6> \times <nat:4> = <var:A> \times <var:p> \times <var:F> \times <var:n> \times <var:E> \times <var:G> \times <var:o> \times <var:L> \times <var:h> = <nat:7862400> $ . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:nine-composite> ( <var:V> : nat ) := exists <var:F> <var:L> <var:p> <var:E> <var:n> <var:h> <var:G> <var:o> <var:A> : nat , ( <var:V> = <var:n> * <var:p> * <var:G> * <var:A> * <var:L> * <var:h> * <var:F> * <var:E> * <var:o> ) /\ ( <var:F> >= <nat:2> ) /\ ( <var:o> >= <nat:2> ) /\ ( <var:A> >= <nat:2> ) /\ ( <var:E> >= <nat:2> ) /\ ( <var:L> >= <nat:2> ) /\ ( <var:n> >= <nat:2> ) /\ ( <var:p> >= <nat:2> ) /\ ( <var:G> >= <nat:2> ) /\ ( <var:h> >= <nat:2> ) . Theorem <genP:1> : <def:nine-composite> <nat:7862400> . Proof . unfold <def:nine-composite> . assert ( <genH> : <nat:3> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:12> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:2> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:7> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:5> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:13> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:4> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:6> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:10> >= <nat:2> ) . { lia . } exists <nat:10> . exists <nat:6> . exists <nat:5> . exists <nat:2> . exists <nat:3> . exists <nat:4> . exists <nat:13> . exists <nat:7> . exists <nat:12> . repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 