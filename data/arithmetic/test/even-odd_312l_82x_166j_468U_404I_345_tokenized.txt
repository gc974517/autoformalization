\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:U> \cdot <nat:468> + <nat:404> \cdot <var:I> + <nat:166> \cdot <var:j> + <var:x> \cdot <nat:82> + <nat:345> + <nat:312> \cdot <var:l> $ will be odd taking all terms $ <var:I> $ , $ <var:U> $ , $ <var:x> $ , $ <var:j> $ , and $ <var:l> $ . \end{theorem} \begin{proof} In addition to this , recall that the positive integer $ <nat:312> $ is trivially even . As a consequence , the product $ <nat:312> \cdot <var:l> $ is guaranteed to be even too . Furthermore , observe the product $ <nat:82> \cdot <var:x> $ is trivially even . This claim must be true from the fact the product of an even number in $ \mathbb{N} $ and some whole number must be an even natural number . This is true from the fact the leading term $ <nat:82> $ is known as an even whole number . Furthermore , $ <var:j> \cdot <nat:166> $ is even . This claim is true from the knowledge the coefficient $ <nat:166> $ is instrinsically an even integer . Notice that the term $ <var:U> \cdot <nat:468> $ is known to be an even number in $ \mathbb{Z}^+ $ . This claim is true from the fact the natural number $ <nat:468> $ is known to be itself an even natural . Further , the leading term $ <nat:404> $ is known as even . So , the term $ <var:I> \cdot <nat:404> $ must be even also . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:I> <var:U> <var:x> <var:j> <var:l> : nat , Nat . odd ( <nat:468> * <var:U> + <nat:404> * <var:I> + <nat:166> * <var:j> + <nat:82> * <var:x> + <nat:312> * <var:l> + <nat:345> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:312> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:312> * <var:l> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:82> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:82> * <var:x> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:166> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:166> * <var:j> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:468> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:468> * <var:U> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:404> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:404> * <var:I> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 