\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \newtheorem{definition}{Definition} \begin{document} \begin{definition} Allow $ <var:q> $ , $ <var:Q> $ , $ <var:Z> $ , $ <var:x> $ , $ <var:V> $ , $ <var:U> $ , $ <var:r> $ , $ <var:y> $ , $ <var:A> $ are natural numbers such that $ <var:q> $ , $ <var:A> $ , $ <var:U> $ , $ <var:x> $ , $ <var:Q> $ , $ <var:V> $ , $ <var:Z> $ , $ <var:r> $ , and $ <var:y> > <nat:1> $ . Take as given that some number $ <var:w> $ is a <def:nine-composite> integer when $ <var:Q> \times <var:U> \times <var:x> \times <var:V> \times <var:q> \times <var:Z> \times <var:y> \times <var:r> \times <var:A> = <var:w> $ . \end{definition} \begin{theorem} $ <nat:8985600> = <var:w> $ is <def:nine-composite> . \end{theorem} \begin{proof} Assume $ <var:r> = <nat:13> $ , $ <var:x> = <nat:2> $ , $ <var:q> = <nat:10> $ , $ <var:y> = <nat:8> $ , $ <var:A> = <nat:5> $ , $ <var:Q> = <nat:6> $ , $ <var:V> = <nat:4> $ , $ <var:Z> = <nat:3> $ and $ <var:U> = <nat:12> $ . We verify the belief is true in view of In consideration of $ <nat:6> $ , $ <nat:2> $ , $ <nat:4> $ , $ <nat:10> $ , $ <nat:8> $ , $ <nat:3> $ , $ <nat:12> $ , $ <nat:13> $ and $ <nat:5> $ are greater than <nat:1> . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:nine-composite> ( <var:w> : nat ) := exists <var:q> <var:Q> <var:Z> <var:x> <var:V> <var:U> <var:r> <var:y> <var:A> : nat , ( <var:q> > <nat:1> ) /\ ( <var:A> > <nat:1> ) /\ ( <var:U> > <nat:1> ) /\ ( <var:x> > <nat:1> ) /\ ( <var:Q> > <nat:1> ) /\ ( <var:V> > <nat:1> ) /\ ( <var:Z> > <nat:1> ) /\ ( <var:r> > <nat:1> ) /\ ( <var:y> > <nat:1> ) /\ ( <var:Q> * <var:U> * <var:x> * <var:V> * <var:q> * <var:Z> * <var:y> * <var:r> * <var:A> = <var:w> ) . Theorem <genP:1> : <def:nine-composite> <nat:8985600> . Proof . unfold <def:nine-composite> . exists <nat:10> . exists <nat:6> . exists <nat:3> . exists <nat:2> . exists <nat:4> . exists <nat:12> . exists <nat:13> . exists <nat:8> . exists <nat:5> . assert ( <genH> : <nat:6> > <nat:1> ) . { lia . } assert ( <genH> : <nat:2> > <nat:1> ) . { lia . } assert ( <genH> : <nat:4> > <nat:1> ) . { lia . } assert ( <genH> : <nat:10> > <nat:1> ) . { lia . } assert ( <genH> : <nat:8> > <nat:1> ) . { lia . } assert ( <genH> : <nat:3> > <nat:1> ) . { lia . } assert ( <genH> : <nat:12> > <nat:1> ) . { lia . } assert ( <genH> : <nat:13> > <nat:1> ) . { lia . } assert ( <genH> : <nat:5> > <nat:1> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 