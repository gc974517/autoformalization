\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Given some $ <var:e> $ , $ <var:l> $ , $ <var:b> $ , $ <var:L> $ , $ <var:n> $ , $ <var:S> $ , $ <var:z> $ , and $ <var:G> \in \mathbb{N} $ $ <var:e> * <nat:128> + <nat:58> * <var:G> + <var:b> * <nat:326> + <var:z> * <nat:436> + <var:L> * <nat:78> + <nat:496> * <var:S> + <var:l> * <nat:396> + <var:n> * <nat:152> + <nat:177> $ must be odd . \end{theorem} \begin{proof} The adding of an even number and an odd whole number is odd . We demonstrate that $ <var:S> * <nat:496> + <nat:396> * <var:l> + <var:z> * <nat:436> + <nat:326> * <var:b> + <nat:58> * <var:G> + <nat:128> * <var:e> + <var:n> * <nat:152> + <var:L> * <nat:78> $ is guaranteed to be even , since the adding between an even natural number and an even number will be even . The number $ <nat:78> $ is known to be even In addition , see that the leading terms $ <nat:128> $ , $ <nat:58> $ , additionally $ <nat:152> $ are guaranteed to be even Remember the numbers $ <nat:396> $ , $ <nat:496> $ , and likewise $ <nat:436> $ are guaranteed to be even Furthermore , the positive integer $ <nat:326> $ is trivially an even natural It can be shown that the expression $ <nat:177> + <var:b> \cdot <nat:326> + <nat:78> \cdot <var:L> + <nat:152> \cdot <var:n> + <var:G> \cdot <nat:58> + <var:e> \cdot <nat:128> + <nat:436> \cdot <var:z> + <var:S> \cdot <nat:496> + <nat:396> \cdot <var:l> $ is guaranteed to be odd . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:e> <var:l> <var:b> <var:L> <var:n> <var:S> <var:z> <var:G> : nat , Nat . odd ( <nat:128> * <var:e> + <nat:58> * <var:G> + <nat:326> * <var:b> + <nat:436> * <var:z> + <nat:78> * <var:L> + <nat:496> * <var:S> + <nat:396> * <var:l> + <nat:152> * <var:n> + <nat:177> ) = true . Proof . intros . rewrite Nat . odd_add . assert ( <genH> : Nat . even <nat:78> = true ) . { auto . } assert ( <genH> : Nat . even <nat:128> = true ) . { auto . } assert ( <genH> : Nat . even <nat:58> = true ) . { auto . } assert ( <genH> : Nat . even <nat:152> = true ) . { auto . } assert ( <genH> : Nat . even <nat:396> = true ) . { auto . } assert ( <genH> : Nat . even <nat:496> = true ) . { auto . } assert ( <genH> : Nat . even <nat:436> = true ) . { auto . } assert ( <genH> : Nat . even <nat:326> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:128> * <var:e> + <nat:58> * <var:G> + <nat:326> * <var:b> + <nat:436> * <var:z> + <nat:78> * <var:L> + <nat:496> * <var:S> + <nat:396> * <var:l> + <nat:152> * <var:n> ) = true ) . { repeat rewrite Nat . even_add . repeat rewrite Nat . even_mul . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite <- Nat . negb_even . rewrite <genH> . auto . Qed . 