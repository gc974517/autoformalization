\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \newtheorem{definition}{Definition} \begin{document} \begin{definition} Only if $ \exists <var:Y> $ , $ <var:B> $ , $ <var:C> $ , $ <var:X> $ , $ <var:T> $ , $ <var:p> $ , $ <var:e> $ , $ <var:L> $ , $ <var:u> $ , $ <var:P> $ , $ <var:q> $ , $ <var:Z> \in \mathbb{Z}^+ $ then let that $ <var:c> \in \mathbb{N} $ will be named a <def:twelve-composite> integer when $ <var:c> = <var:L> * <var:Y> * <var:P> * <var:e> * <var:q> * <var:C> * <var:X> * <var:p> * <var:u> * <var:Z> * <var:T> * <var:B> $ as well as more than <nat:1> . \end{definition} \begin{theorem} <nat:6227020800> is a <def:twelve-composite> positive integer . \end{theorem} \begin{proof} Remember that <nat:6227020800> is a <def:twelve-composite> positive integer assuming it is the product between integers $ <var:X> $ , $ <var:B> $ , $ <var:q> $ , $ <var:p> $ , $ <var:u> $ , $ <var:P> $ , $ <var:C> $ , $ <var:Y> $ , $ <var:Z> $ , $ <var:e> $ , $ <var:T> $ and $ <var:L> $ more than <nat:1> . We prove <nat:6227020800> is a <def:twelve-composite> positive integer . We demonstrate the formula is valid for $ <nat:5> $ , $ <nat:7> $ , $ <nat:9> $ , $ <nat:11> $ , $ <nat:3> $ , $ <nat:4> $ , $ <nat:10> $ , $ <nat:2> $ , $ <nat:8> $ , $ <nat:12> $ , $ <nat:13> $ and $ <nat:6> > <nat:1> $ as well as in view of $ <nat:5> * <nat:12> * <nat:10> * <nat:3> * <nat:4> * <nat:9> * <nat:8> * <nat:13> * <nat:2> * <nat:11> * <nat:6> * <nat:7> = <nat:6227020800> $ . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:twelve-composite> ( <var:c> : nat ) := exists <var:Y> <var:B> <var:C> <var:X> <var:T> <var:p> <var:e> <var:L> <var:u> <var:P> <var:q> <var:Z> : nat , ( <var:c> = <var:L> * <var:Y> * <var:P> * <var:e> * <var:q> * <var:C> * <var:X> * <var:p> * <var:u> * <var:Z> * <var:T> * <var:B> ) /\ ( <var:Y> > <nat:1> ) /\ ( <var:B> > <nat:1> ) /\ ( <var:C> > <nat:1> ) /\ ( <var:X> > <nat:1> ) /\ ( <var:T> > <nat:1> ) /\ ( <var:p> > <nat:1> ) /\ ( <var:e> > <nat:1> ) /\ ( <var:L> > <nat:1> ) /\ ( <var:u> > <nat:1> ) /\ ( <var:P> > <nat:1> ) /\ ( <var:q> > <nat:1> ) /\ ( <var:Z> > <nat:1> ) . Theorem <genP:1> : <def:twelve-composite> <nat:6227020800> . Proof . unfold <def:twelve-composite> . assert ( <genH> : <nat:5> > <nat:1> ) . { lia . } assert ( <genH> : <nat:7> > <nat:1> ) . { lia . } assert ( <genH> : <nat:9> > <nat:1> ) . { lia . } assert ( <genH> : <nat:11> > <nat:1> ) . { lia . } assert ( <genH> : <nat:3> > <nat:1> ) . { lia . } assert ( <genH> : <nat:4> > <nat:1> ) . { lia . } assert ( <genH> : <nat:10> > <nat:1> ) . { lia . } assert ( <genH> : <nat:2> > <nat:1> ) . { lia . } assert ( <genH> : <nat:8> > <nat:1> ) . { lia . } assert ( <genH> : <nat:12> > <nat:1> ) . { lia . } assert ( <genH> : <nat:13> > <nat:1> ) . { lia . } assert ( <genH> : <nat:6> > <nat:1> ) . { lia . } exists <nat:12> . exists <nat:7> . exists <nat:11> . exists <nat:13> . exists <nat:3> . exists <nat:5> . exists <nat:6> . exists <nat:9> . exists <nat:8> . exists <nat:10> . exists <nat:4> . exists <nat:2> . repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 