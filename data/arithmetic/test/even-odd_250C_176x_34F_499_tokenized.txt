\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:C> \cdot <nat:250> + <nat:176> \cdot <var:x> + <nat:499> + <var:F> \cdot <nat:34> $ is guaranteed to be odd assuming all positive terms $ <var:C> $ , $ <var:F> $ , and $ <var:x> $ . \end{theorem} \begin{proof} Recall $ <var:C> <nat:250> + <var:x> <nat:176> + <nat:499> + <nat:34> <var:F> $ is clearly odd because the formula $ <nat:250> <var:C> + <nat:176> <var:x> + <var:F> <nat:34> $ is trivially even , since the adding between an even element of $ \mathbb{N} $ with an even natural is guaranteed to be even . We know the product $ <var:x> \times <nat:176> $ is trivially an even natural since the multiplication between an even natural number with any element of $ \mathbb{N} $ is an even element of $ \mathbb{N} $ . What's more , the product $ <var:C> \times <nat:250> $ is an even integer . Building on , observe that $ <var:F> \times <nat:34> $ is known to be even . This must be true since taking the product of an even positive integer and some number in $ \mathbb{Z}^+ $ will be even . additionally from the fact the multiplication between an even natural and any element of $ \mathbb{Z}^+ $ must be even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:C> <var:F> <var:x> : nat , Nat . odd ( <nat:250> * <var:C> + <nat:176> * <var:x> + <nat:34> * <var:F> + <nat:499> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:176> * <var:x> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:250> * <var:C> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:34> * <var:F> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:250> * <var:C> + <nat:176> * <var:x> + <nat:34> * <var:F> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . auto . Qed . 