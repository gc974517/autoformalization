\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:194> * <var:n> + <var:z> * <nat:370> + <nat:62> * <var:s> + <var:I> * <nat:160> + <nat:434> * <var:W> + <var:p> * <nat:80> + <nat:22> * <var:K> + <nat:252> + <var:V> * <nat:174> + <var:Y> * <nat:442> + <nat:36> * <var:G> $ is guaranteed to be even . \end{theorem} \begin{proof} The integers $ <nat:194> $ , $ <nat:370> $ , $ <nat:62> $ , $ <nat:160> $ , $ <nat:434> $ , $ <nat:80> $ , $ <nat:22> $ , $ <nat:174> $ , $ <nat:442> $ , and likewise $ <nat:36> $ are known to be even elements of $ \mathbb{N} $ . As a consequence , the products $ <var:n> \cdot <nat:194> $ , $ <nat:370> \cdot <var:z> $ , $ <var:s> \cdot <nat:62> $ , $ <var:I> \cdot <nat:160> $ , $ <var:W> \cdot <nat:434> $ , $ <nat:80> \cdot <var:p> $ , $ <var:K> \cdot <nat:22> $ , $ <var:V> \cdot <nat:174> $ , $ <nat:442> \cdot <var:Y> $ , additionally $ <var:G> \cdot <nat:36> $ is even at the same time . From the fact the totaling between an even number in $ \mathbb{N} $ and an even element of $ \mathbb{Z}^+ $ must be even , then $ <var:G> * <nat:36> + <nat:434> * <var:W> + <nat:252> + <nat:174> * <var:V> + <var:Y> * <nat:442> + <nat:160> * <var:I> + <var:z> * <nat:370> + <var:n> * <nat:194> + <var:p> * <nat:80> + <nat:62> * <var:s> + <var:K> * <nat:22> $ fundamentally is even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:n> <var:z> <var:s> <var:I> <var:W> <var:p> <var:K> <var:V> <var:Y> <var:G> : nat , Nat . even ( <nat:194> * <var:n> + <nat:370> * <var:z> + <nat:62> * <var:s> + <nat:160> * <var:I> + <nat:434> * <var:W> + <nat:80> * <var:p> + <nat:22> * <var:K> + <nat:174> * <var:V> + <nat:442> * <var:Y> + <nat:36> * <var:G> + <nat:252> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:194> = true ) . { auto . } assert ( <genH> : Nat . even <nat:370> = true ) . { auto . } assert ( <genH> : Nat . even <nat:62> = true ) . { auto . } assert ( <genH> : Nat . even <nat:160> = true ) . { auto . } assert ( <genH> : Nat . even <nat:434> = true ) . { auto . } assert ( <genH> : Nat . even <nat:80> = true ) . { auto . } assert ( <genH> : Nat . even <nat:22> = true ) . { auto . } assert ( <genH> : Nat . even <nat:174> = true ) . { auto . } assert ( <genH> : Nat . even <nat:442> = true ) . { auto . } assert ( <genH> : Nat . even <nat:36> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:194> * <var:n> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:370> * <var:z> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:62> * <var:s> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:160> * <var:I> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:434> * <var:W> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:80> * <var:p> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:22> * <var:K> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:174> * <var:V> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:442> * <var:Y> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:36> * <var:G> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 