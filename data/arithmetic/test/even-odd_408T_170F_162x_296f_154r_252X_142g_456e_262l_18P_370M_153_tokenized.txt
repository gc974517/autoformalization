\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:408> \times <var:T> + <nat:153> + <var:F> \times <nat:170> + <var:x> \times <nat:162> + <nat:296> \times <var:f> + <nat:154> \times <var:r> + <nat:252> \times <var:X> + <nat:142> \times <var:g> + <nat:456> \times <var:e> + <var:l> \times <nat:262> + <nat:18> \times <var:P> + <nat:370> \times <var:M> $ must be odd assuming variables $ <var:P> $ , $ <var:X> $ , $ <var:T> $ , $ <var:M> $ , $ <var:r> $ , $ <var:l> $ , $ <var:f> $ , $ <var:x> $ , $ <var:F> $ , $ <var:g> $ , and $ <var:e> $ . \end{theorem} \begin{proof} Take note $ <nat:153> $ is an odd number in $ \mathbb{Z}^+ $ . Since the totaling of an even number in $ \mathbb{N} $ with an odd number is guaranteed to be in itself an odd number in $ \mathbb{N} $ , as a consequence this claim holds . Further , we know that the positive integers $ <nat:408> $ , $ <nat:170> $ , $ <nat:162> $ , $ <nat:296> $ , $ <nat:154> $ , $ <nat:252> $ , $ <nat:142> $ , $ <nat:456> $ , $ <nat:262> $ , $ <nat:18> $ , additionally $ <nat:370> $ are obviously even natural numbers . Accordingly , the terms $ <nat:408> \cdot <var:T> $ , $ <var:F> \cdot <nat:170> $ , $ <var:x> \cdot <nat:162> $ , $ <nat:296> \cdot <var:f> $ , $ <nat:154> \cdot <var:r> $ , $ <nat:252> \cdot <var:X> $ , $ <nat:142> \cdot <var:g> $ , $ <nat:456> \cdot <var:e> $ , $ <var:l> \cdot <nat:262> $ , $ <var:P> \cdot <nat:18> $ , and moreover $ <nat:370> \cdot <var:M> $ will be even additionally . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:P> <var:X> <var:T> <var:M> <var:r> <var:l> <var:f> <var:x> <var:F> <var:g> <var:e> : nat , Nat . odd ( <nat:408> * <var:T> + <nat:170> * <var:F> + <nat:162> * <var:x> + <nat:296> * <var:f> + <nat:154> * <var:r> + <nat:252> * <var:X> + <nat:142> * <var:g> + <nat:456> * <var:e> + <nat:262> * <var:l> + <nat:18> * <var:P> + <nat:370> * <var:M> + <nat:153> ) = true . Proof . intros . assert ( <genH> : Nat . odd <nat:153> = true ) . { auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . assert ( <genH> : Nat . even <nat:408> = true ) . { auto . } assert ( <genH> : Nat . even <nat:170> = true ) . { auto . } assert ( <genH> : Nat . even <nat:162> = true ) . { auto . } assert ( <genH> : Nat . even <nat:296> = true ) . { auto . } assert ( <genH> : Nat . even <nat:154> = true ) . { auto . } assert ( <genH> : Nat . even <nat:252> = true ) . { auto . } assert ( <genH> : Nat . even <nat:142> = true ) . { auto . } assert ( <genH> : Nat . even <nat:456> = true ) . { auto . } assert ( <genH> : Nat . even <nat:262> = true ) . { auto . } assert ( <genH> : Nat . even <nat:18> = true ) . { auto . } assert ( <genH> : Nat . even <nat:370> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:408> * <var:T> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:170> * <var:F> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:162> * <var:x> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:296> * <var:f> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:154> * <var:r> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:252> * <var:X> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:142> * <var:g> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:456> * <var:e> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:262> * <var:l> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:18> * <var:P> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:370> * <var:M> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 