\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:292> \cdot <var:Q> + <var:J> \cdot <nat:402> + <var:A> \cdot <nat:22> + <var:a> \cdot <nat:264> + <nat:463> $ is guaranteed to be odd with natural numbers $ <var:J> $ , $ <var:a> $ , $ <var:A> $ , and $ <var:Q> $ . \end{theorem} \begin{proof} It can be demonstrated that $ <nat:292> * <var:Q> + <nat:402> * <var:J> + <var:a> * <nat:264> + <nat:463> + <var:A> * <nat:22> $ is odd . Notice that $ <nat:463> $ is guaranteed to be an odd number in $ \mathbb{N} $ . The theorem is proven as a consequence that $ <nat:402> \times <var:J> + <var:Q> \times <nat:292> + <nat:264> \times <var:a> + <var:A> \times <nat:22> $ is clearly even . Observe that the whole number $ <nat:292> $ is clearly an even positive integer What's more , the whole number $ <nat:402> $ is an even number in $ \mathbb{N} $ Further , take note that the number $ <nat:264> $ is trivially even We know that the number $ <nat:22> $ is trivially an even integer By reason that the summing of an even whole number with an even element of $ \mathbb{N} $ will be even , the sum $ <var:a> \cdot <nat:264> + <var:Q> \cdot <nat:292> + <nat:22> \cdot <var:A> + <nat:402> \cdot <var:J> $ will be by definition even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:J> <var:a> <var:A> <var:Q> : nat , Nat . odd ( <nat:292> * <var:Q> + <nat:402> * <var:J> + <nat:22> * <var:A> + <nat:264> * <var:a> + <nat:463> ) = true . Proof . intros . assert ( <genH> : Nat . odd <nat:463> = true ) . { auto . } assert ( <genH> : Nat . even <nat:292> = true ) . { auto . } assert ( <genH> : Nat . even <nat:402> = true ) . { auto . } assert ( <genH> : Nat . even <nat:264> = true ) . { auto . } assert ( <genH> : Nat . even <nat:22> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:292> * <var:Q> + <nat:402> * <var:J> + <nat:22> * <var:A> + <nat:264> * <var:a> ) = true ) . { repeat rewrite Nat . even_add . repeat rewrite Nat . even_mul . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . rewrite <genH> . auto . Qed . 