\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} For all positive numbers $ <var:J> $ , $ <var:D> $ , $ <var:Q> $ , $ <var:m> $ , $ <var:w> $ , and $ <var:X> $ the formula $ <nat:326> \cdot <var:X> + <nat:229> + <var:m> \cdot <nat:376> + <nat:92> \cdot <var:J> + <nat:214> \cdot <var:Q> + <nat:14> \cdot <var:w> + <var:D> \cdot <nat:228> $ is odd . \end{theorem} \begin{proof} Remember that the terms $ <nat:214> <var:Q> $ , $ <var:D> <nat:228> $ , $ <var:m> <nat:376> $ , and moreover $ <nat:326> <var:X> $ are known as even integers . This is proven from the fact the natural numbers $ <nat:214> $ , $ <nat:228> $ , $ <nat:376> $ , as well as $ <nat:326> $ are clearly in themselves even whole numbers . $ <var:J> <nat:92> $ is guaranteed to be even by reason that taking the product of an even positive integer with an arbitrary element of $ \mathbb{Z}^+ $ must be even . This fact holds from the fact the integer $ <nat:92> $ is known to be even . Likewise , the leading term $ <nat:14> $ is known to be an even natural number . For this reason , $ <nat:14> <var:w> $ will be even also . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:J> <var:D> <var:Q> <var:m> <var:w> <var:X> : nat , Nat . odd ( <nat:326> * <var:X> + <nat:376> * <var:m> + <nat:92> * <var:J> + <nat:214> * <var:Q> + <nat:14> * <var:w> + <nat:228> * <var:D> + <nat:229> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:214> = true ) . { auto . } assert ( <genH> : Nat . even <nat:228> = true ) . { auto . } assert ( <genH> : Nat . even <nat:376> = true ) . { auto . } assert ( <genH> : Nat . even <nat:326> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:214> * <var:Q> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:228> * <var:D> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:376> * <var:m> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:326> * <var:X> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:92> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:92> * <var:J> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:14> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:14> * <var:w> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 