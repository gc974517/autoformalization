\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:M> * <nat:130> + <nat:464> * <var:W> + <nat:462> * <var:s> + <nat:82> * <var:F> + <var:g> * <nat:292> + <nat:311> + <var:O> * <nat:430> + <var:z> * <nat:418> $ is guaranteed to be odd taking any variables $ <var:M> $ , $ <var:F> $ , $ <var:W> $ , $ <var:z> $ , $ <var:s> $ , $ <var:O> $ , and $ <var:g> $ . \end{theorem} \begin{proof} It can be justified that our result is true . The terms $ <nat:464> <var:W> $ as well as $ <var:z> <nat:418> $ are guaranteed to be even . We know that the product $ <nat:430> <var:O> $ is trivially even . This claim is true from the fact taking the product of an even integer with some number in $ \mathbb{Z}^+ $ is an even whole number . Further , the terms $ <nat:462> <var:s> $ , $ <var:g> <nat:292> $ , additionally $ <nat:82> <var:F> $ must be even integers since the product between an even natural and a integer is guaranteed to be an even whole number . The term $ <nat:130> <var:M> $ is trivially even because multiplying of an even natural and a number in $ \mathbb{N} $ will be even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:M> <var:F> <var:W> <var:z> <var:s> <var:O> <var:g> : nat , Nat . odd ( <nat:130> * <var:M> + <nat:464> * <var:W> + <nat:462> * <var:s> + <nat:82> * <var:F> + <nat:292> * <var:g> + <nat:430> * <var:O> + <nat:418> * <var:z> + <nat:311> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:464> * <var:W> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:418> * <var:z> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:430> * <var:O> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:462> * <var:s> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:292> * <var:g> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:82> * <var:F> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:130> * <var:M> ) = true ) . { rewrite Nat . even_mul . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 