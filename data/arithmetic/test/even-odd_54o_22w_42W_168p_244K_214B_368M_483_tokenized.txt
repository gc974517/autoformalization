\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:42> * <var:W> + <var:B> * <nat:214> + <var:p> * <nat:168> + <nat:483> + <var:w> * <nat:22> + <nat:368> * <var:M> + <nat:54> * <var:o> + <nat:244> * <var:K> $ must be odd with unknowns $ <var:K> $ , $ <var:W> $ , $ <var:B> $ , $ <var:p> $ , $ <var:w> $ , $ <var:o> $ , and $ <var:M> $ . \end{theorem} \begin{proof} Take note the sum $ <var:o> * <nat:54> + <nat:22> * <var:w> + <nat:42> * <var:W> + <var:p> * <nat:168> + <var:K> * <nat:244> + <nat:214> * <var:B> + <nat:368> * <var:M> $ is even . Notice that the addition of even numbers in $ \mathbb{N} $ collectively and an even number is an even whole number . Building on , see the integers $ <nat:54> $ , $ <nat:22> $ , $ <nat:42> $ , $ <nat:168> $ , $ <nat:244> $ , $ <nat:214> $ , plus $ <nat:368> $ are guaranteed to be even positive integers . For this reason , the pairs $ <nat:54> * <var:o> $ , $ <var:w> * <nat:22> $ , $ <var:W> * <nat:42> $ , $ <nat:168> * <var:p> $ , $ <var:K> * <nat:244> $ , $ <nat:214> * <var:B> $ , as well as $ <nat:368> * <var:M> $ must be even at the same time . Because the summing of even natural numbers successively and an odd number will be by itself an odd element of $ \mathbb{N} $ , as a consequence this lemma holds . Recall $ <nat:483> $ is trivially an odd natural . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:K> <var:W> <var:B> <var:p> <var:w> <var:o> <var:M> : nat , Nat . odd ( <nat:42> * <var:W> + <nat:214> * <var:B> + <nat:168> * <var:p> + <nat:22> * <var:w> + <nat:368> * <var:M> + <nat:54> * <var:o> + <nat:244> * <var:K> + <nat:483> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:54> = true ) . { auto . } assert ( <genH> : Nat . even <nat:22> = true ) . { auto . } assert ( <genH> : Nat . even <nat:42> = true ) . { auto . } assert ( <genH> : Nat . even <nat:168> = true ) . { auto . } assert ( <genH> : Nat . even <nat:244> = true ) . { auto . } assert ( <genH> : Nat . even <nat:214> = true ) . { auto . } assert ( <genH> : Nat . even <nat:368> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:54> * <var:o> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:22> * <var:w> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:42> * <var:W> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:168> * <var:p> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:244> * <var:K> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:214> * <var:B> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:368> * <var:M> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:42> * <var:W> + <nat:214> * <var:B> + <nat:168> * <var:p> + <nat:22> * <var:w> + <nat:368> * <var:M> + <nat:54> * <var:o> + <nat:244> * <var:K> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . assert ( <genH> : Nat . odd <nat:483> = true ) . { auto . } rewrite <- Nat . negb_even . rewrite <genH> . rewrite <genH> . auto . Qed . 