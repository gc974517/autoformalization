\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:O> * <nat:214> + <var:P> * <nat:406> + <nat:450> * <var:u> + <var:k> * <nat:180> + <var:f> * <nat:28> + <var:j> * <nat:100> + <var:M> * <nat:348> + <var:H> * <nat:404> + <var:L> * <nat:280> + <var:B> * <nat:6> + <nat:80> $ will be even given any whole numbers $ <var:B> $ , $ <var:f> $ , $ <var:j> $ , $ <var:H> $ , $ <var:k> $ , $ <var:P> $ , $ <var:O> $ , $ <var:M> $ , $ <var:L> $ , and $ <var:u> $ . \end{theorem} \begin{proof} Observe that the products $ <nat:280> \cdot <var:L> $ , $ <nat:28> \cdot <var:f> $ , $ <nat:450> \cdot <var:u> $ , $ <nat:6> \cdot <var:B> $ , and likewise $ <var:M> \cdot <nat:348> $ are guaranteed to be even positive integers . This fact is proven by reason that taking the product between an even natural with some number is guaranteed to be trivially an even element of $ \mathbb{N} $ , which holds by reason that the numbers $ <nat:280> $ , $ <nat:28> $ , $ <nat:450> $ , $ <nat:6> $ , in addition to $ <nat:348> $ are guaranteed to be trivially even natural numbers . Further , the integer $ <nat:100> $ is trivially even . So , the pair $ <var:j> \cdot <nat:100> $ is guaranteed to be even additionally . The numbers $ <nat:406> $ , $ <nat:214> $ , additionally $ <nat:404> $ are known as even numbers . Therefore , the terms $ <var:P> \cdot <nat:406> $ , $ <nat:214> \cdot <var:O> $ , additionally $ <nat:404> \cdot <var:H> $ will be even too . What's more , the pair $ <var:k> \cdot <nat:180> $ is known as even . This claim must be true because the product between an even number and an arbitrary integer will be an even number . This claim holds as a consequence that the coefficient $ <nat:180> $ is known to be even . We demonstrate the result is proven . Recall $ <nat:80> $ is obviously even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:B> <var:f> <var:j> <var:H> <var:k> <var:P> <var:O> <var:M> <var:L> <var:u> : nat , Nat . even ( <nat:214> * <var:O> + <nat:406> * <var:P> + <nat:450> * <var:u> + <nat:180> * <var:k> + <nat:28> * <var:f> + <nat:100> * <var:j> + <nat:348> * <var:M> + <nat:404> * <var:H> + <nat:280> * <var:L> + <nat:6> * <var:B> + <nat:80> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:280> = true ) . { auto . } assert ( <genH> : Nat . even <nat:28> = true ) . { auto . } assert ( <genH> : Nat . even <nat:450> = true ) . { auto . } assert ( <genH> : Nat . even <nat:6> = true ) . { auto . } assert ( <genH> : Nat . even <nat:348> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:280> * <var:L> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:28> * <var:f> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:450> * <var:u> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:6> * <var:B> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:348> * <var:M> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:100> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:100> * <var:j> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:406> = true ) . { auto . } assert ( <genH> : Nat . even <nat:214> = true ) . { auto . } assert ( <genH> : Nat . even <nat:404> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:406> * <var:P> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:214> * <var:O> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:404> * <var:H> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:180> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:180> * <var:k> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:80> = true ) . { auto . } repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 