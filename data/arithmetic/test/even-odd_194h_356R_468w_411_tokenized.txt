\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Using all $ <var:w> $ , $ <var:R> $ , and $ <var:h> $ the sum $ <var:h> \times <nat:194> + <nat:411> + <nat:356> \times <var:R> + <nat:468> \times <var:w> $ is odd . \end{theorem} \begin{proof} It can be shown that $ <nat:411> + <nat:194> * <var:h> + <var:w> * <nat:468> + <var:R> * <nat:356> $ must be odd . It can be justified that that the formula $ <nat:411> + <var:R> * <nat:356> + <var:h> * <nat:194> + <var:w> * <nat:468> $ is guaranteed to be odd from the fact $ <var:h> \times <nat:194> + <nat:356> \times <var:R> + <nat:468> \times <var:w> $ is guaranteed to be even . Remember that the addition of even integers together with an even natural is guaranteed to be an even number . See that $ <nat:194> \cdot <var:h> $ is clearly an even natural number . This claim holds because the multiplication between an even number in $ \mathbb{N} $ and any number in $ \mathbb{Z}^+ $ will be clearly an even natural number . On top of this , observe the pair $ <nat:356> \cdot <var:R> $ is obviously even because the product between an even natural and some number in $ \mathbb{Z}^+ $ must be even . Furthermore , $ <var:w> \cdot <nat:468> $ is obviously even . This fact is true by reason that multiplying between an even natural with a element of $ \mathbb{Z}^+ $ will be even . additionally from the knowledge multiplying of even numbers and some number must be an even whole number the result is proven . See the addition between even numbers successively and an odd number in $ \mathbb{N} $ is guaranteed to be instrinsically an odd element of $ \mathbb{N} $ . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:w> <var:R> <var:h> : nat , Nat . odd ( <nat:194> * <var:h> + <nat:356> * <var:R> + <nat:468> * <var:w> + <nat:411> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:194> * <var:h> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:356> * <var:R> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:468> * <var:w> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:194> * <var:h> + <nat:356> * <var:R> + <nat:468> * <var:w> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . auto . Qed . 