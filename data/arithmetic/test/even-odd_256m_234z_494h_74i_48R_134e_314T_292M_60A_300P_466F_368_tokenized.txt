\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} With some variables $ <var:R> $ , $ <var:P> $ , $ <var:e> $ , $ <var:F> $ , $ <var:i> $ , $ <var:z> $ , $ <var:T> $ , $ <var:A> $ , $ <var:M> $ , $ <var:h> $ , and $ <var:m> $ the expression $ <var:A> \times <nat:60> + <nat:314> \times <var:T> + <nat:368> + <nat:466> \times <var:F> + <var:h> \times <nat:494> + <var:R> \times <nat:48> + <var:m> \times <nat:256> + <var:z> \times <nat:234> + <var:P> \times <nat:300> + <nat:292> \times <var:M> + <var:i> \times <nat:74> + <nat:134> \times <var:e> $ must be even . \end{theorem} \begin{proof} Observe the expression $ <var:m> <nat:256> + <var:z> <nat:234> + <nat:494> <var:h> + <nat:74> <var:i> + <nat:48> <var:R> + <nat:134> <var:e> + <nat:314> <var:T> + <var:M> <nat:292> + <nat:60> <var:A> + <var:P> <nat:300> + <nat:466> <var:F> $ is trivially even . We know the numbers $ <nat:466> $ in addition to $ <nat:292> $ are known to be even whole numbers The positive integers $ <nat:48> $ in addition to $ <nat:494> $ will be even whole numbers The numbers $ <nat:74> $ , $ <nat:60> $ , $ <nat:300> $ , $ <nat:314> $ , $ <nat:234> $ , as well as $ <nat:256> $ are obviously even What's more , the whole number $ <nat:134> $ is guaranteed to be even \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:R> <var:P> <var:e> <var:F> <var:i> <var:z> <var:T> <var:A> <var:M> <var:h> <var:m> : nat , Nat . even ( <nat:60> * <var:A> + <nat:314> * <var:T> + <nat:466> * <var:F> + <nat:494> * <var:h> + <nat:48> * <var:R> + <nat:256> * <var:m> + <nat:234> * <var:z> + <nat:300> * <var:P> + <nat:292> * <var:M> + <nat:74> * <var:i> + <nat:134> * <var:e> + <nat:368> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:466> = true ) . { auto . } assert ( <genH> : Nat . even <nat:292> = true ) . { auto . } assert ( <genH> : Nat . even <nat:48> = true ) . { auto . } assert ( <genH> : Nat . even <nat:494> = true ) . { auto . } assert ( <genH> : Nat . even <nat:74> = true ) . { auto . } assert ( <genH> : Nat . even <nat:60> = true ) . { auto . } assert ( <genH> : Nat . even <nat:300> = true ) . { auto . } assert ( <genH> : Nat . even <nat:314> = true ) . { auto . } assert ( <genH> : Nat . even <nat:234> = true ) . { auto . } assert ( <genH> : Nat . even <nat:256> = true ) . { auto . } assert ( <genH> : Nat . even <nat:134> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:60> * <var:A> + <nat:314> * <var:T> + <nat:466> * <var:F> + <nat:494> * <var:h> + <nat:48> * <var:R> + <nat:256> * <var:m> + <nat:234> * <var:z> + <nat:300> * <var:P> + <nat:292> * <var:M> + <nat:74> * <var:i> + <nat:134> * <var:e> ) = true ) . { repeat rewrite Nat . even_add . repeat rewrite Nat . even_mul . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . even_add . rewrite <genH> . auto . Qed . 