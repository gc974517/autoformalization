\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Assuming $ <var:p> $ , $ <var:b> $ , $ <var:A> $ , $ <var:G> $ , $ <var:B> $ , $ <var:w> $ , $ <var:M> $ , $ <var:i> $ , $ <var:n> $ , $ <var:d> $ , and $ <var:X> \in \mathbb{Z}^+ $ the summation $ <nat:320> <var:A> + <nat:212> <var:G> + <nat:272> <var:w> + <var:p> <nat:148> + <var:B> <nat:238> + <nat:377> + <var:X> <nat:406> + <var:b> <nat:456> + <nat:182> <var:i> + <nat:8> <var:n> + <var:M> <nat:472> + <var:d> <nat:424> $ is guaranteed to be odd . \end{theorem} \begin{proof} Remember that the positive integers $ <nat:320> $ , $ <nat:272> $ , $ <nat:148> $ , $ <nat:212> $ , and likewise $ <nat:456> $ are known as even The integers $ <nat:472> $ , $ <nat:238> $ , $ <nat:424> $ , in addition to $ <nat:406> $ are obviously even What's more , the integer $ <nat:182> $ is guaranteed to be an even positive integer Furthermore , notice the coefficient $ <nat:8> $ is even \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:p> <var:b> <var:A> <var:G> <var:B> <var:w> <var:M> <var:i> <var:n> <var:d> <var:X> : nat , Nat . odd ( <nat:320> * <var:A> + <nat:212> * <var:G> + <nat:272> * <var:w> + <nat:148> * <var:p> + <nat:238> * <var:B> + <nat:406> * <var:X> + <nat:456> * <var:b> + <nat:182> * <var:i> + <nat:8> * <var:n> + <nat:472> * <var:M> + <nat:424> * <var:d> + <nat:377> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:320> = true ) . { auto . } assert ( <genH> : Nat . even <nat:272> = true ) . { auto . } assert ( <genH> : Nat . even <nat:148> = true ) . { auto . } assert ( <genH> : Nat . even <nat:212> = true ) . { auto . } assert ( <genH> : Nat . even <nat:456> = true ) . { auto . } assert ( <genH> : Nat . even <nat:472> = true ) . { auto . } assert ( <genH> : Nat . even <nat:238> = true ) . { auto . } assert ( <genH> : Nat . even <nat:424> = true ) . { auto . } assert ( <genH> : Nat . even <nat:406> = true ) . { auto . } assert ( <genH> : Nat . even <nat:182> = true ) . { auto . } assert ( <genH> : Nat . even <nat:8> = true ) . { auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . repeat rewrite Nat . even_mul . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 