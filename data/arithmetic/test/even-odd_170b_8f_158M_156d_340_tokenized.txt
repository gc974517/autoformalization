\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:M> \times <nat:158> + <nat:340> + <nat:170> \times <var:b> + <var:f> \times <nat:8> + <nat:156> \times <var:d> $ is even . \end{theorem} \begin{proof} We apply the fact the expression $ <var:M> \cdot <nat:158> + <nat:170> \cdot <var:b> + <nat:340> + <nat:156> \cdot <var:d> + <nat:8> \cdot <var:f> $ is obviously even as a consequence that the formula $ <nat:170> <var:b> + <var:f> <nat:8> + <nat:158> <var:M> + <nat:156> <var:d> $ is obviously even . We know that the products $ <var:b> \cdot <nat:170> $ , $ <var:f> \cdot <nat:8> $ , $ <nat:158> \cdot <var:M> $ , additionally $ <nat:156> \cdot <var:d> $ are guaranteed to be even naturals as a consequence that the leading terms $ <nat:170> $ , $ <nat:8> $ , $ <nat:158> $ , and also $ <nat:156> $ are known as even elements of $ \mathbb{Z}^+ $ . Since taking the product between an even whole number and a whole number must be an even element of $ \mathbb{Z}^+ $ our claim holds . We know the summing between an even whole number with an even whole number is by its very nature an even positive integer . Notice $ <nat:340> $ is guaranteed to be even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:M> <var:b> <var:f> <var:d> : nat , Nat . even ( <nat:158> * <var:M> + <nat:170> * <var:b> + <nat:8> * <var:f> + <nat:156> * <var:d> + <nat:340> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:170> = true ) . { auto . } assert ( <genH> : Nat . even <nat:8> = true ) . { auto . } assert ( <genH> : Nat . even <nat:158> = true ) . { auto . } assert ( <genH> : Nat . even <nat:156> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:170> * <var:b> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:8> * <var:f> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:158> * <var:M> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:156> * <var:d> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:158> * <var:M> + <nat:170> * <var:b> + <nat:8> * <var:f> + <nat:156> * <var:d> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . even_add . assert ( <genH> : Nat . even <nat:340> = true ) . { auto . } rewrite <genH> . rewrite <genH> . auto . Qed . 