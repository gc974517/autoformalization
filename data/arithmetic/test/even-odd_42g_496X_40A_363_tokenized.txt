\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} With some $ <var:A> $ , $ <var:g> $ , and $ <var:X> \in \mathbb{N} $ the formula $ <nat:42> * <var:g> + <nat:40> * <var:A> + <nat:363> + <nat:496> * <var:X> $ is guaranteed to be odd . \end{theorem} \begin{proof} See the summation between even elements of $ \mathbb{Z}^+ $ successively and an odd element of $ \mathbb{N} $ must be an odd natural number . Notice that $ <nat:363> $ is an odd number in $ \mathbb{N} $ . $ <nat:496> \times <var:X> + <var:A> \times <nat:40> + <nat:42> \times <var:g> $ is obviously even . Remember that the pair $ <var:g> * <nat:42> $ is guaranteed to be an even natural number since the whole number $ <nat:42> $ is guaranteed to be even . Likewise , notice the leading term $ <nat:496> $ is an even positive integer . Consequently , the term $ <nat:496> * <var:X> $ is guaranteed to be even as well . Take note that the product $ <nat:40> * <var:A> $ is known to be even . This fact is true by reason that the leading term $ <nat:40> $ is known as itself an even element of $ \mathbb{N} $ . From the fact multiplying of even numbers and any number must be an even whole number our main result must be true . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:A> <var:g> <var:X> : nat , Nat . odd ( <nat:42> * <var:g> + <nat:40> * <var:A> + <nat:496> * <var:X> + <nat:363> ) = true . Proof . intros . rewrite Nat . odd_add . assert ( <genH> : Nat . odd <nat:363> = true ) . { auto . } assert ( <genH> : Nat . even <nat:42> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:42> * <var:g> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:496> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:496> * <var:X> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:40> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:40> * <var:A> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:42> * <var:g> + <nat:40> * <var:A> + <nat:496> * <var:X> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite <- Nat . negb_even . rewrite <genH> . rewrite <genH> . auto . Qed . 