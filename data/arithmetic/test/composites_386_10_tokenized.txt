\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Take $ <var:b> $ , $ <var:H> $ , $ <var:m> $ , $ <var:x> $ , $ <var:n> $ , $ <var:E> $ , $ <var:O> $ , $ <var:L> $ , $ <var:Q> $ , $ <var:R> $ as positive integers larger than or equal to <nat:2> . We assume that $ <var:g> \in \mathbb{N} $ is named a <def:ten-composite> integer assuming $ <var:R> * <var:L> * <var:x> * <var:n> * <var:E> * <var:b> * <var:H> * <var:O> * <var:m> * <var:Q> = <var:g> $ . Consequently the number <nat:86486400> is a <def:ten-composite> integer . \end{theorem} \begin{proof} Remember <nat:86486400> is <def:ten-composite> supposing <nat:86486400> is the product between whole numbers $ <var:R> $ , $ <var:E> $ , $ <var:L> $ , $ <var:Q> $ , $ <var:b> $ , $ <var:H> $ , $ <var:n> $ , $ <var:O> $ , $ <var:m> $ , $ <var:x> $ satisfying the condition that $ <var:O> $ , $ <var:E> $ , $ <var:R> $ , $ <var:b> $ , $ <var:x> $ , $ <var:L> $ , $ <var:H> $ , $ <var:m> $ , $ <var:n> $ , $ <var:Q> \geq <nat:2> $ . Allow $ <var:O> = <nat:4> $ , $ <var:E> = <nat:11> $ , $ <var:L> = <nat:6> $ , $ <var:H> = <nat:3> $ , $ <var:m> = <nat:7> $ , $ <var:R> = <nat:2> $ , $ <var:Q> = <nat:12> $ , $ <var:x> = <nat:10> $ , $ <var:n> = <nat:13> $ , and $ <var:b> = <nat:5> $ . Note $ <var:E> = <nat:11> $ , $ <var:R> = <nat:2> $ , $ <var:H> = <nat:3> $ , $ <var:L> = <nat:6> $ , $ <var:m> = <nat:7> $ , $ <var:n> = <nat:13> $ , $ <var:O> = <nat:4> $ , $ <var:b> = <nat:5> $ , $ <var:Q> = <nat:12> $ , $ <var:x> = <nat:10> $ are more than or equal to <nat:2> . Furthermore note still $ <var:Q> \times <var:x> \times <var:n> \times <var:L> \times <var:b> \times <var:R> \times <var:E> \times <var:m> \times <var:O> \times <var:H> = <nat:86486400> = <nat:12> \times <nat:10> \times <nat:13> \times <nat:6> \times <nat:5> \times <nat:2> \times <nat:11> \times <nat:7> \times <nat:4> \times <nat:3> $ . This yields the result holds . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:ten-composite> ( <var:g> : nat ) := exists <var:b> <var:H> <var:m> <var:x> <var:n> <var:E> <var:O> <var:L> <var:Q> <var:R> : nat , ( <var:b> >= <nat:2> ) /\ ( <var:H> >= <nat:2> ) /\ ( <var:m> >= <nat:2> ) /\ ( <var:x> >= <nat:2> ) /\ ( <var:n> >= <nat:2> ) /\ ( <var:E> >= <nat:2> ) /\ ( <var:O> >= <nat:2> ) /\ ( <var:L> >= <nat:2> ) /\ ( <var:Q> >= <nat:2> ) /\ ( <var:R> >= <nat:2> ) /\ ( <var:R> * <var:L> * <var:x> * <var:n> * <var:E> * <var:b> * <var:H> * <var:O> * <var:m> * <var:Q> = <var:g> ) . Theorem <genP:1> : <def:ten-composite> <nat:86486400> . Proof . unfold <def:ten-composite> . exists <nat:5> . exists <nat:3> . exists <nat:7> . exists <nat:10> . exists <nat:13> . exists <nat:11> . exists <nat:4> . exists <nat:6> . exists <nat:12> . exists <nat:2> . assert ( <genH> : <nat:11> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:2> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:3> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:6> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:7> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:13> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:4> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:5> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:12> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:10> >= <nat:2> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 