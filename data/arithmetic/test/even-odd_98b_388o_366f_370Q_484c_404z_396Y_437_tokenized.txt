\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} With positive numbers $ <var:Q> $ , $ <var:b> $ , $ <var:c> $ , $ <var:f> $ , $ <var:o> $ , $ <var:Y> $ , and $ <var:z> $ the sum $ <var:f> \cdot <nat:366> + <nat:370> \cdot <var:Q> + <nat:484> \cdot <var:c> + <var:Y> \cdot <nat:396> + <var:z> \cdot <nat:404> + <nat:388> \cdot <var:o> + <nat:437> + <nat:98> \cdot <var:b> $ must be odd . \end{theorem} \begin{proof} See $ <nat:404> \cdot <var:z> + <var:b> \cdot <nat:98> + <var:Y> \cdot <nat:396> + <nat:366> \cdot <var:f> + <var:Q> \cdot <nat:370> + <nat:388> \cdot <var:o> + <var:c> \cdot <nat:484> $ is guaranteed to be even . Recall that the leading terms $ <nat:484> $ , $ <nat:366> $ , $ <nat:370> $ , $ <nat:396> $ , $ <nat:404> $ , as well as $ <nat:98> $ will be even . Thus , the products $ <var:c> \cdot <nat:484> $ , $ <nat:366> \cdot <var:f> $ , $ <nat:370> \cdot <var:Q> $ , $ <nat:396> \cdot <var:Y> $ , $ <nat:404> \cdot <var:z> $ , and moreover $ <var:b> \cdot <nat:98> $ is guaranteed to be even in addition . In addition to this , the product $ <nat:388> \cdot <var:o> $ is known as even since the product between an even number and some number is guaranteed to be trivially an even positive integer . This claim holds as a consequence that the whole number $ <nat:388> $ is obviously even . We show the lemma holds . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:Q> <var:b> <var:c> <var:f> <var:o> <var:Y> <var:z> : nat , Nat . odd ( <nat:366> * <var:f> + <nat:370> * <var:Q> + <nat:484> * <var:c> + <nat:396> * <var:Y> + <nat:404> * <var:z> + <nat:388> * <var:o> + <nat:98> * <var:b> + <nat:437> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:484> = true ) . { auto . } assert ( <genH> : Nat . even <nat:366> = true ) . { auto . } assert ( <genH> : Nat . even <nat:370> = true ) . { auto . } assert ( <genH> : Nat . even <nat:396> = true ) . { auto . } assert ( <genH> : Nat . even <nat:404> = true ) . { auto . } assert ( <genH> : Nat . even <nat:98> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:484> * <var:c> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:366> * <var:f> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:370> * <var:Q> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:396> * <var:Y> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:404> * <var:z> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:98> * <var:b> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:388> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:388> * <var:o> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:366> * <var:f> + <nat:370> * <var:Q> + <nat:484> * <var:c> + <nat:396> * <var:Y> + <nat:404> * <var:z> + <nat:388> * <var:o> + <nat:98> * <var:b> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . auto . Qed . 