\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:76> \cdot <var:Z> + <nat:14> \cdot <var:B> + <nat:143> + <var:U> \cdot <nat:452> + <nat:458> \cdot <var:i> + <nat:182> \cdot <var:A> + <var:r> \cdot <nat:100> + <var:g> \cdot <nat:216> + <nat:326> \cdot <var:z> + <nat:282> \cdot <var:S> + <nat:180> \cdot <var:f> + <var:J> \cdot <nat:214> $ must be odd . \end{theorem} \begin{proof} It can be proven that this claim is true . Remember that $ <nat:143> $ is known as odd . We work with the assumption the knowledge the formula $ <var:U> <nat:452> + <var:r> <nat:100> + <nat:282> <var:S> + <nat:76> <var:Z> + <var:f> <nat:180> + <nat:143> + <nat:326> <var:z> + <var:i> <nat:458> + <nat:182> <var:A> + <var:B> <nat:14> + <nat:216> <var:g> + <var:J> <nat:214> $ is clearly odd from the fact the expression $ <var:z> \cdot <nat:326> + <nat:458> \cdot <var:i> + <nat:452> \cdot <var:U> + <nat:182> \cdot <var:A> + <var:J> \cdot <nat:214> + <var:g> \cdot <nat:216> + <nat:14> \cdot <var:B> + <var:S> \cdot <nat:282> + <var:r> \cdot <nat:100> + <var:Z> \cdot <nat:76> + <var:f> \cdot <nat:180> $ is clearly even . What's more , the coefficients $ <nat:326> $ , $ <nat:458> $ , $ <nat:452> $ , $ <nat:182> $ , $ <nat:214> $ , $ <nat:216> $ , $ <nat:14> $ , $ <nat:282> $ , $ <nat:100> $ , $ <nat:76> $ , and moreover $ <nat:180> $ are trivially even . So , the pairs $ <nat:326> \cdot <var:z> $ , $ <nat:458> \cdot <var:i> $ , $ <var:U> \cdot <nat:452> $ , $ <var:A> \cdot <nat:182> $ , $ <var:J> \cdot <nat:214> $ , $ <nat:216> \cdot <var:g> $ , $ <nat:14> \cdot <var:B> $ , $ <nat:282> \cdot <var:S> $ , $ <var:r> \cdot <nat:100> $ , $ <nat:76> \cdot <var:Z> $ , as well as $ <var:f> \cdot <nat:180> $ will be even in addition . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:Z> <var:B> <var:U> <var:i> <var:A> <var:r> <var:g> <var:z> <var:S> <var:f> <var:J> : nat , Nat . odd ( <nat:76> * <var:Z> + <nat:14> * <var:B> + <nat:452> * <var:U> + <nat:458> * <var:i> + <nat:182> * <var:A> + <nat:100> * <var:r> + <nat:216> * <var:g> + <nat:326> * <var:z> + <nat:282> * <var:S> + <nat:180> * <var:f> + <nat:214> * <var:J> + <nat:143> ) = true . Proof . intros . assert ( <genH> : Nat . odd <nat:143> = true ) . { auto . } assert ( <genH> : Nat . even <nat:326> = true ) . { auto . } assert ( <genH> : Nat . even <nat:458> = true ) . { auto . } assert ( <genH> : Nat . even <nat:452> = true ) . { auto . } assert ( <genH> : Nat . even <nat:182> = true ) . { auto . } assert ( <genH> : Nat . even <nat:214> = true ) . { auto . } assert ( <genH> : Nat . even <nat:216> = true ) . { auto . } assert ( <genH> : Nat . even <nat:14> = true ) . { auto . } assert ( <genH> : Nat . even <nat:282> = true ) . { auto . } assert ( <genH> : Nat . even <nat:100> = true ) . { auto . } assert ( <genH> : Nat . even <nat:76> = true ) . { auto . } assert ( <genH> : Nat . even <nat:180> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:326> * <var:z> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:458> * <var:i> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:452> * <var:U> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:182> * <var:A> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:214> * <var:J> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:216> * <var:g> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:14> * <var:B> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:282> * <var:S> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:100> * <var:r> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:76> * <var:Z> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:180> * <var:f> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:76> * <var:Z> + <nat:14> * <var:B> + <nat:452> * <var:U> + <nat:458> * <var:i> + <nat:182> * <var:A> + <nat:100> * <var:r> + <nat:216> * <var:g> + <nat:326> * <var:z> + <nat:282> * <var:S> + <nat:180> * <var:f> + <nat:214> * <var:J> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . rewrite <genH> . auto . Qed . 