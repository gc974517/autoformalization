\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:l> \cdot <nat:174> + <nat:232> \cdot <var:Z> + <nat:158> \cdot <var:o> + <nat:213> + <nat:390> \cdot <var:z> + <var:u> \cdot <nat:126> + <var:E> \cdot <nat:38> + <nat:204> \cdot <var:C> $ will be odd taking all unknowns $ <var:C> $ , $ <var:l> $ , $ <var:z> $ , $ <var:u> $ , $ <var:E> $ , $ <var:o> $ , and $ <var:Z> $ . \end{theorem} \begin{proof} We work with the assumption the fact the formula $ <nat:204> \times <var:C> + <nat:158> \times <var:o> + <var:Z> \times <nat:232> + <var:u> \times <nat:126> + <nat:38> \times <var:E> + <nat:390> \times <var:z> + <nat:174> \times <var:l> $ is trivially even . Since the summation of even elements of $ \mathbb{N} $ with an even natural will be even , plus as a consequence that taking the product of even numbers in $ \mathbb{Z}^+ $ with a number will be itself an even whole number . See $ <nat:213> $ is trivially odd . Since the summing of even elements of $ \mathbb{N} $ successively with an odd whole number is guaranteed to be odd , thus the summation $ <nat:158> \times <var:o> + <nat:232> \times <var:Z> + <var:u> \times <nat:126> + <nat:213> + <var:E> \times <nat:38> + <var:l> \times <nat:174> + <var:z> \times <nat:390> + <var:C> \times <nat:204> $ in itself must be odd . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:C> <var:l> <var:z> <var:u> <var:E> <var:o> <var:Z> : nat , Nat . odd ( <nat:174> * <var:l> + <nat:232> * <var:Z> + <nat:158> * <var:o> + <nat:390> * <var:z> + <nat:126> * <var:u> + <nat:38> * <var:E> + <nat:204> * <var:C> + <nat:213> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:174> * <var:l> + <nat:232> * <var:Z> + <nat:158> * <var:o> + <nat:390> * <var:z> + <nat:126> * <var:u> + <nat:38> * <var:E> + <nat:204> * <var:C> ) = true ) . { repeat rewrite Nat . even_add . repeat rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . odd <nat:213> = true ) . { auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . rewrite <genH> . auto . Qed . 