\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Given any positive integers $ <var:a> $ , $ <var:C> $ , $ <var:l> $ , $ <var:q> $ , $ <var:V> $ , $ <var:c> $ , $ <var:x> $ , $ <var:X> $ , $ <var:H> $ , $ <var:v> $ , and $ <var:P> $ the formula $ <nat:8> \times <var:V> + <var:q> \times <nat:180> + <nat:174> \times <var:v> + <var:H> \times <nat:38> + <var:a> \times <nat:142> + <nat:70> \times <var:C> + <nat:260> \times <var:c> + <nat:194> \times <var:x> + <var:X> \times <nat:272> + <nat:308> + <nat:136> \times <var:l> + <var:P> \times <nat:2> $ is guaranteed to be even . \end{theorem} \begin{proof} The summation of even natural numbers is guaranteed to be even . Remember that $ <nat:308> $ is trivially even . The terms $ <var:q> <nat:180> $ , $ <var:x> <nat:194> $ , $ <var:v> <nat:174> $ , $ <var:V> <nat:8> $ , $ <nat:2> <var:P> $ , $ <nat:272> <var:X> $ , $ <nat:142> <var:a> $ , $ <nat:136> <var:l> $ , $ <nat:260> <var:c> $ , and moreover $ <nat:70> <var:C> $ are trivially even numbers in $ \mathbb{Z}^+ $ from the knowledge taking the product between an even number with any natural is guaranteed to be even . Furthermore , observe $ <nat:38> <var:H> $ is obviously an even element of $ \mathbb{Z}^+ $ . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:a> <var:C> <var:l> <var:q> <var:V> <var:c> <var:x> <var:X> <var:H> <var:v> <var:P> : nat , Nat . even ( <nat:8> * <var:V> + <nat:180> * <var:q> + <nat:174> * <var:v> + <nat:38> * <var:H> + <nat:142> * <var:a> + <nat:70> * <var:C> + <nat:260> * <var:c> + <nat:194> * <var:x> + <nat:272> * <var:X> + <nat:136> * <var:l> + <nat:2> * <var:P> + <nat:308> ) = true . Proof . intros . repeat rewrite Nat . even_add . assert ( <genH> : Nat . even <nat:308> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:180> * <var:q> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:194> * <var:x> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:174> * <var:v> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:8> * <var:V> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:2> * <var:P> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:272> * <var:X> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:142> * <var:a> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:136> * <var:l> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:260> * <var:c> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:70> * <var:C> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:38> * <var:H> ) = true ) . { rewrite Nat . even_mul . auto . } rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 