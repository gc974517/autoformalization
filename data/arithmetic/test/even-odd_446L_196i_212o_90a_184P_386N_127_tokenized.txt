\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Given any $ <var:i> $ , $ <var:L> $ , $ <var:P> $ , $ <var:a> $ , $ <var:o> $ , and $ <var:N> $ the summation $ <nat:212> \times <var:o> + <nat:90> \times <var:a> + <nat:386> \times <var:N> + <var:P> \times <nat:184> + <nat:127> + <var:i> \times <nat:196> + <nat:446> \times <var:L> $ will be odd . \end{theorem} \begin{proof} We employ the knowledge that $ <nat:446> <var:L> + <nat:184> <var:P> + <var:a> <nat:90> + <var:i> <nat:196> + <var:o> <nat:212> + <var:N> <nat:386> $ is even . The pairs $ <var:N> <nat:386> $ as well as $ <var:L> <nat:446> $ will be even . This fact holds since the product of an even positive integer with an arbitrary element of $ \mathbb{N} $ is guaranteed to be an even number in $ \mathbb{N} $ . $ <nat:212> <var:o> $ is obviously an even whole number . The pairs $ <var:P> <nat:184> $ and also $ <nat:196> <var:i> $ are trivially even integers . The product $ <nat:90> <var:a> $ is trivially an even whole number . $ <var:i> \cdot <nat:196> + <nat:446> \cdot <var:L> + <var:N> \cdot <nat:386> + <nat:90> \cdot <var:a> + <var:P> \cdot <nat:184> + <var:o> \cdot <nat:212> $ is guaranteed to be even from the fact the summation of even naturals and an even integer must be even . We prove that $ <var:L> * <nat:446> + <nat:127> + <nat:196> * <var:i> + <nat:212> * <var:o> + <nat:90> * <var:a> + <var:P> * <nat:184> + <nat:386> * <var:N> $ must be odd . Take note that the summation between even natural numbers collectively and an odd number in $ \mathbb{N} $ must be odd . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:i> <var:L> <var:P> <var:a> <var:o> <var:N> : nat , Nat . odd ( <nat:212> * <var:o> + <nat:90> * <var:a> + <nat:386> * <var:N> + <nat:184> * <var:P> + <nat:196> * <var:i> + <nat:446> * <var:L> + <nat:127> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:386> * <var:N> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:446> * <var:L> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:212> * <var:o> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:184> * <var:P> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:196> * <var:i> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:90> * <var:a> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:212> * <var:o> + <nat:90> * <var:a> + <nat:386> * <var:N> + <nat:184> * <var:P> + <nat:196> * <var:i> + <nat:446> * <var:L> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . auto . Qed . 