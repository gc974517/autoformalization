\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:E> <nat:200> + <nat:143> + <nat:326> <var:L> + <var:d> <nat:392> + <nat:64> <var:s> + <var:H> <nat:360> + <var:j> <nat:454> + <nat:58> <var:b> + <var:x> <nat:194> + <nat:214> <var:M> $ is guaranteed to be odd given every natural numbers $ <var:j> $ , $ <var:E> $ , $ <var:d> $ , $ <var:M> $ , $ <var:s> $ , $ <var:x> $ , $ <var:L> $ , $ <var:b> $ , and $ <var:H> $ . \end{theorem} \begin{proof} From the knowledge the summation between an even whole number with an odd number in $ \mathbb{N} $ will be odd , thus our proposition must be true . Our main result is true from the fact $ <var:j> \times <nat:454> + <var:d> \times <nat:392> + <nat:194> \times <var:x> + <var:L> \times <nat:326> + <nat:58> \times <var:b> + <nat:200> \times <var:E> + <var:M> \times <nat:214> + <var:s> \times <nat:64> + <nat:360> \times <var:H> $ is clearly even . The products $ <var:j> * <nat:454> $ , $ <var:d> * <nat:392> $ , $ <nat:194> * <var:x> $ , $ <nat:326> * <var:L> $ , $ <nat:58> * <var:b> $ , $ <nat:200> * <var:E> $ , $ <var:M> * <nat:214> $ , $ <var:s> * <nat:64> $ , plus $ <var:H> * <nat:360> $ are obviously even . This fact holds as a consequence that the whole numbers $ <nat:454> $ , $ <nat:392> $ , $ <nat:194> $ , $ <nat:326> $ , $ <nat:58> $ , $ <nat:200> $ , $ <nat:214> $ , $ <nat:64> $ , as well as $ <nat:360> $ are even elements of $ \mathbb{Z}^+ $ . The sum $ <var:E> * <nat:200> + <nat:360> * <var:H> + <nat:326> * <var:L> + <nat:392> * <var:d> + <var:x> * <nat:194> + <var:s> * <nat:64> + <var:M> * <nat:214> + <var:j> * <nat:454> + <nat:58> * <var:b> $ is guaranteed to be itself even as a consequence that taking the product of an even number in $ \mathbb{N} $ with an arbitrary natural number is guaranteed to be even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:j> <var:E> <var:d> <var:M> <var:s> <var:x> <var:L> <var:b> <var:H> : nat , Nat . odd ( <nat:200> * <var:E> + <nat:326> * <var:L> + <nat:392> * <var:d> + <nat:64> * <var:s> + <nat:360> * <var:H> + <nat:454> * <var:j> + <nat:58> * <var:b> + <nat:194> * <var:x> + <nat:214> * <var:M> + <nat:143> ) = true . Proof . intros . rewrite Nat . odd_add . assert ( <genH> : Nat . even <nat:454> = true ) . { auto . } assert ( <genH> : Nat . even <nat:392> = true ) . { auto . } assert ( <genH> : Nat . even <nat:194> = true ) . { auto . } assert ( <genH> : Nat . even <nat:326> = true ) . { auto . } assert ( <genH> : Nat . even <nat:58> = true ) . { auto . } assert ( <genH> : Nat . even <nat:200> = true ) . { auto . } assert ( <genH> : Nat . even <nat:214> = true ) . { auto . } assert ( <genH> : Nat . even <nat:64> = true ) . { auto . } assert ( <genH> : Nat . even <nat:360> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:454> * <var:j> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:392> * <var:d> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:194> * <var:x> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:326> * <var:L> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:58> * <var:b> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:200> * <var:E> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:214> * <var:M> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:64> * <var:s> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:360> * <var:H> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:200> * <var:E> + <nat:326> * <var:L> + <nat:392> * <var:d> + <nat:64> * <var:s> + <nat:360> * <var:H> + <nat:454> * <var:j> + <nat:58> * <var:b> + <nat:194> * <var:x> + <nat:214> * <var:M> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite <- Nat . negb_even . rewrite <genH> . auto . Qed . 