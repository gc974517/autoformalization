\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} With $ <var:d> $ , $ <var:t> $ , $ <var:f> $ , $ <var:S> $ , $ <var:u> $ , $ <var:J> $ , $ <var:C> $ , and $ <var:r> \in \mathbb{N} $ the expression $ <nat:297> + <var:d> \times <nat:224> + <var:J> \times <nat:66> + <nat:172> \times <var:f> + <nat:400> \times <var:C> + <var:S> \times <nat:406> + <nat:326> \times <var:u> + <nat:280> \times <var:t> + <nat:304> \times <var:r> $ is guaranteed to be odd . \end{theorem} \begin{proof} The pairs $ <var:d> \times <nat:224> $ , $ <var:J> \times <nat:66> $ , $ <var:f> \times <nat:172> $ , $ <nat:400> \times <var:C> $ , $ <var:S> \times <nat:406> $ , $ <var:u> \times <nat:326> $ , $ <nat:280> \times <var:t> $ , as well as $ <var:r> \times <nat:304> $ are known as even from the fact taking the product between an even positive integer and a number in $ \mathbb{N} $ will be even in addition to the coefficients $ <nat:224> $ , $ <nat:66> $ , $ <nat:172> $ , $ <nat:400> $ , $ <nat:406> $ , $ <nat:326> $ , $ <nat:280> $ , and moreover $ <nat:304> $ will be even . It can be verified that the summation $ <nat:304> * <var:r> + <nat:297> + <nat:66> * <var:J> + <nat:326> * <var:u> + <var:S> * <nat:406> + <var:t> * <nat:280> + <nat:400> * <var:C> + <var:f> * <nat:172> + <var:d> * <nat:224> $ is odd in connection with the fact the adding between an even natural and an odd element of $ \mathbb{N} $ must be obviously an odd natural number . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:d> <var:t> <var:f> <var:S> <var:u> <var:J> <var:C> <var:r> : nat , Nat . odd ( <nat:224> * <var:d> + <nat:66> * <var:J> + <nat:172> * <var:f> + <nat:400> * <var:C> + <nat:406> * <var:S> + <nat:326> * <var:u> + <nat:280> * <var:t> + <nat:304> * <var:r> + <nat:297> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:224> = true ) . { auto . } assert ( <genH> : Nat . even <nat:66> = true ) . { auto . } assert ( <genH> : Nat . even <nat:172> = true ) . { auto . } assert ( <genH> : Nat . even <nat:400> = true ) . { auto . } assert ( <genH> : Nat . even <nat:406> = true ) . { auto . } assert ( <genH> : Nat . even <nat:326> = true ) . { auto . } assert ( <genH> : Nat . even <nat:280> = true ) . { auto . } assert ( <genH> : Nat . even <nat:304> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:224> * <var:d> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:66> * <var:J> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:172> * <var:f> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:400> * <var:C> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:406> * <var:S> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:326> * <var:u> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:280> * <var:t> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:304> * <var:r> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 