\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:124> <var:w> + <var:V> <nat:490> + <var:f> <nat:180> + <nat:298> <var:k> + <nat:166> <var:D> + <nat:171> + <nat:220> <var:i> + <var:x> <nat:308> + <var:e> <nat:386> + <nat:160> <var:m> + <nat:484> <var:r> $ must be odd with $ <var:m> $ , $ <var:e> $ , $ <var:i> $ , $ <var:w> $ , $ <var:x> $ , $ <var:k> $ , $ <var:r> $ , $ <var:D> $ , $ <var:V> $ , and $ <var:f> \in \mathbb{N} $ . \end{theorem} \begin{proof} This claim must be true from the fact $ <nat:490> <var:V> + <nat:220> <var:i> + <var:k> <nat:298> + <nat:166> <var:D> + <var:f> <nat:180> + <nat:160> <var:m> + <var:e> <nat:386> + <nat:484> <var:r> + <nat:308> <var:x> + <var:w> <nat:124> $ is trivially even , from the fact the totaling of an even number in $ \mathbb{Z}^+ $ with an even natural is guaranteed to be even . The products $ <var:e> \cdot <nat:386> $ , $ <var:x> \cdot <nat:308> $ , $ <var:w> \cdot <nat:124> $ , and also $ <nat:180> \cdot <var:f> $ are even numbers . See that the products $ <nat:484> \cdot <var:r> $ , $ <var:m> \cdot <nat:160> $ , $ <nat:166> \cdot <var:D> $ , $ <nat:490> \cdot <var:V> $ , in addition to $ <var:k> \cdot <nat:298> $ are even whole numbers . Remember the term $ <nat:220> \cdot <var:i> $ is clearly an even element of $ \mathbb{N} $ from the fact multiplying of an even positive integer and any integer is guaranteed to be even . in addition to because the product of an even number in $ \mathbb{N} $ with an arbitrary element of $ \mathbb{Z}^+ $ will be in itself an even number the summation $ <var:f> \times <nat:180> + <nat:490> \times <var:V> + <var:D> \times <nat:166> + <nat:160> \times <var:m> + <nat:298> \times <var:k> + <nat:220> \times <var:i> + <nat:386> \times <var:e> + <nat:124> \times <var:w> + <nat:484> \times <var:r> + <var:x> \times <nat:308> $ is guaranteed to be itself even . Take note that the totaling between an even number in $ \mathbb{Z}^+ $ and an odd element of $ \mathbb{N} $ must be in itself an odd whole number . Observe $ <nat:171> $ is trivially an odd natural . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:m> <var:e> <var:i> <var:w> <var:x> <var:k> <var:r> <var:D> <var:V> <var:f> : nat , Nat . odd ( <nat:124> * <var:w> + <nat:490> * <var:V> + <nat:180> * <var:f> + <nat:298> * <var:k> + <nat:166> * <var:D> + <nat:220> * <var:i> + <nat:308> * <var:x> + <nat:386> * <var:e> + <nat:160> * <var:m> + <nat:484> * <var:r> + <nat:171> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:386> * <var:e> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:308> * <var:x> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:124> * <var:w> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:180> * <var:f> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:484> * <var:r> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:160> * <var:m> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:166> * <var:D> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:490> * <var:V> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:298> * <var:k> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:220> * <var:i> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:124> * <var:w> + <nat:490> * <var:V> + <nat:180> * <var:f> + <nat:298> * <var:k> + <nat:166> * <var:D> + <nat:220> * <var:i> + <nat:308> * <var:x> + <nat:386> * <var:e> + <nat:160> * <var:m> + <nat:484> * <var:r> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . assert ( <genH> : Nat . odd <nat:171> = true ) . { auto . } rewrite <- Nat . negb_even . rewrite <genH> . rewrite <genH> . auto . Qed . 