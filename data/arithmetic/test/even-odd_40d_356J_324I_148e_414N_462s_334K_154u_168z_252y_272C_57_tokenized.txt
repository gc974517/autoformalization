\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:154> * <var:u> + <nat:252> * <var:y> + <var:d> * <nat:40> + <nat:414> * <var:N> + <var:s> * <nat:462> + <var:K> * <nat:334> + <var:C> * <nat:272> + <var:e> * <nat:148> + <var:J> * <nat:356> + <nat:168> * <var:z> + <var:I> * <nat:324> + <nat:57> $ is odd . \end{theorem} \begin{proof} It can be proven that that $ <var:z> <nat:168> + <nat:40> <var:d> + <nat:356> <var:J> + <nat:462> <var:s> + <var:C> <nat:272> + <nat:252> <var:y> + <var:u> <nat:154> + <nat:334> <var:K> + <nat:57> + <nat:414> <var:N> + <var:I> <nat:324> + <var:e> <nat:148> $ is guaranteed to be odd because $ <nat:414> <var:N> + <var:u> <nat:154> + <nat:40> <var:d> + <nat:148> <var:e> + <var:C> <nat:272> + <nat:356> <var:J> + <var:s> <nat:462> + <var:z> <nat:168> + <var:y> <nat:252> + <var:I> <nat:324> + <var:K> <nat:334> $ is guaranteed to be even . The terms $ <var:I> \cdot <nat:324> $ , $ <var:C> \cdot <nat:272> $ , $ <var:N> \cdot <nat:414> $ , as well as $ <nat:334> \cdot <var:K> $ are even since multiplying of an even number with any natural is in itself an even whole number . This is true because the coefficients $ <nat:324> $ , $ <nat:272> $ , $ <nat:414> $ , in addition to $ <nat:334> $ are obviously . See that the integers $ <nat:462> $ , $ <nat:148> $ , $ <nat:168> $ , $ <nat:356> $ , $ <nat:252> $ , additionally $ <nat:40> $ are known as even numbers in $ \mathbb{N} $ . As a consequence , the products $ <nat:462> \cdot <var:s> $ , $ <nat:148> \cdot <var:e> $ , $ <nat:168> \cdot <var:z> $ , $ <var:J> \cdot <nat:356> $ , $ <var:y> \cdot <nat:252> $ , and moreover $ <nat:40> \cdot <var:d> $ is even in addition . The term $ <nat:154> \cdot <var:u> $ is known to be even . This claim holds by reason that the multiplication between an even element of $ \mathbb{Z}^+ $ with some number must be even . This claim must be true since the natural number $ <nat:154> $ is trivially an even number in $ \mathbb{N} $ . From the knowledge the product of an even positive integer with an arbitrary natural number will be even the main result is proven . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:u> <var:y> <var:d> <var:N> <var:s> <var:K> <var:C> <var:e> <var:J> <var:z> <var:I> : nat , Nat . odd ( <nat:154> * <var:u> + <nat:252> * <var:y> + <nat:40> * <var:d> + <nat:414> * <var:N> + <nat:462> * <var:s> + <nat:334> * <var:K> + <nat:272> * <var:C> + <nat:148> * <var:e> + <nat:356> * <var:J> + <nat:168> * <var:z> + <nat:324> * <var:I> + <nat:57> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:324> = true ) . { auto . } assert ( <genH> : Nat . even <nat:272> = true ) . { auto . } assert ( <genH> : Nat . even <nat:414> = true ) . { auto . } assert ( <genH> : Nat . even <nat:334> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:324> * <var:I> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:272> * <var:C> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:414> * <var:N> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:334> * <var:K> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:462> = true ) . { auto . } assert ( <genH> : Nat . even <nat:148> = true ) . { auto . } assert ( <genH> : Nat . even <nat:168> = true ) . { auto . } assert ( <genH> : Nat . even <nat:356> = true ) . { auto . } assert ( <genH> : Nat . even <nat:252> = true ) . { auto . } assert ( <genH> : Nat . even <nat:40> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:462> * <var:s> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:148> * <var:e> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:168> * <var:z> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:356> * <var:J> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:252> * <var:y> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:40> * <var:d> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:154> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:154> * <var:u> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:154> * <var:u> + <nat:252> * <var:y> + <nat:40> * <var:d> + <nat:414> * <var:N> + <nat:462> * <var:s> + <nat:334> * <var:K> + <nat:272> * <var:C> + <nat:148> * <var:e> + <nat:356> * <var:J> + <nat:168> * <var:z> + <nat:324> * <var:I> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . auto . Qed . 