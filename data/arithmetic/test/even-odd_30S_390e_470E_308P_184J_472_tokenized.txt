\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:308> <var:P> + <nat:184> <var:J> + <nat:470> <var:E> + <nat:390> <var:e> + <nat:472> + <var:S> <nat:30> $ is guaranteed to be even . \end{theorem} \begin{proof} Our theorem is proven from the fact $ <var:e> \cdot <nat:390> + <nat:308> \cdot <var:P> + <nat:30> \cdot <var:S> + <var:E> \cdot <nat:470> + <nat:184> \cdot <var:J> $ is guaranteed to be even . Take note $ <var:J> <nat:184> $ is obviously an even natural by reason that the whole number $ <nat:184> $ is even . The positive integer $ <nat:390> $ is known to be an even number . Thus , $ <nat:390> <var:e> $ is guaranteed to be even as well . The coefficient $ <nat:470> $ is an even whole number . As a consequence , $ <var:E> <nat:470> $ must be even in addition . In addition , the pair $ <nat:30> <var:S> $ is even from the knowledge the coefficient $ <nat:30> $ is clearly even . On top of this , recall the natural number $ <nat:308> $ is guaranteed to be even . Then , the pair $ <nat:308> <var:P> $ is even at the same time . The main result holds as a consequence that the multiplication of an even positive integer with some element of $ \mathbb{Z}^+ $ is even . Notice $ <nat:472> $ is clearly an even natural number . From the knowledge the totaling of even positive integers together and an even number must be even , hence $ <var:S> * <nat:30> + <nat:390> * <var:e> + <nat:470> * <var:E> + <var:P> * <nat:308> + <nat:184> * <var:J> + <nat:472> $ must be even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:P> <var:J> <var:E> <var:e> <var:S> : nat , Nat . even ( <nat:308> * <var:P> + <nat:184> * <var:J> + <nat:470> * <var:E> + <nat:390> * <var:e> + <nat:30> * <var:S> + <nat:472> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:184> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:184> * <var:J> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:390> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:390> * <var:e> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:470> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:470> * <var:E> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:30> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:30> * <var:S> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:308> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:308> * <var:P> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:308> * <var:P> + <nat:184> * <var:J> + <nat:470> * <var:E> + <nat:390> * <var:e> + <nat:30> * <var:S> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:472> = true ) . { auto . } rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . auto . Qed . 