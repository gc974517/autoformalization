\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:S> \times <nat:230> + <nat:372> \times <var:b> + <nat:2> \times <var:I> + <var:j> \times <nat:98> + <var:m> \times <nat:122> + <nat:58> \times <var:P> + <nat:9> + <nat:482> \times <var:O> + <var:i> \times <nat:188> + <nat:214> \times <var:n> + <nat:74> \times <var:G> + <nat:76> \times <var:R> $ must be odd using every natural numbers $ <var:j> $ , $ <var:S> $ , $ <var:m> $ , $ <var:R> $ , $ <var:P> $ , $ <var:n> $ , $ <var:b> $ , $ <var:G> $ , $ <var:O> $ , $ <var:I> $ , and $ <var:i> $ . \end{theorem} \begin{proof} It can be shown that the theorem is proven . The leading terms $ <nat:74> $ , $ <nat:230> $ , $ <nat:188> $ , $ <nat:2> $ , $ <nat:58> $ , $ <nat:482> $ , $ <nat:122> $ , $ <nat:372> $ , and $ <nat:98> $ are obviously even . Consequently , the terms $ <nat:74> <var:G> $ , $ <var:S> <nat:230> $ , $ <nat:188> <var:i> $ , $ <var:I> <nat:2> $ , $ <nat:58> <var:P> $ , $ <nat:482> <var:O> $ , $ <nat:122> <var:m> $ , $ <nat:372> <var:b> $ , and $ <var:j> <nat:98> $ is guaranteed to be even as well . Take note the pair $ <var:R> <nat:76> $ is obviously even from the fact taking the product between an even natural number and some number in $ \mathbb{Z}^+ $ is even . This fact must be true as a consequence that the integer $ <nat:76> $ is clearly an even element of $ \mathbb{Z}^+ $ . Likewise , $ <var:n> <nat:214> $ is obviously an even natural number . This holds as a consequence that taking the product of an even integer and an arbitrary whole number will be instrinsically an even number , and is true as a consequence that the number $ <nat:214> $ is trivially an even positive integer . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:j> <var:S> <var:m> <var:R> <var:P> <var:n> <var:b> <var:G> <var:O> <var:I> <var:i> : nat , Nat . odd ( <nat:230> * <var:S> + <nat:372> * <var:b> + <nat:2> * <var:I> + <nat:98> * <var:j> + <nat:122> * <var:m> + <nat:58> * <var:P> + <nat:482> * <var:O> + <nat:188> * <var:i> + <nat:214> * <var:n> + <nat:74> * <var:G> + <nat:76> * <var:R> + <nat:9> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:74> = true ) . { auto . } assert ( <genH> : Nat . even <nat:230> = true ) . { auto . } assert ( <genH> : Nat . even <nat:188> = true ) . { auto . } assert ( <genH> : Nat . even <nat:2> = true ) . { auto . } assert ( <genH> : Nat . even <nat:58> = true ) . { auto . } assert ( <genH> : Nat . even <nat:482> = true ) . { auto . } assert ( <genH> : Nat . even <nat:122> = true ) . { auto . } assert ( <genH> : Nat . even <nat:372> = true ) . { auto . } assert ( <genH> : Nat . even <nat:98> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:74> * <var:G> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:230> * <var:S> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:188> * <var:i> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:2> * <var:I> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:58> * <var:P> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:482> * <var:O> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:122> * <var:m> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:372> * <var:b> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:98> * <var:j> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:76> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:76> * <var:R> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:214> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:214> * <var:n> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 