\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:G> \times <var:u> \times <var:l> \times <var:C> \times <var:s> \times <var:R> \times <var:O> \times <var:e> $ is the same as $ <nat:720720> $ so that $ <var:G> $ , $ <var:e> $ , $ <var:s> $ , $ <var:C> $ , $ <var:u> $ , $ <var:l> $ , $ <var:R> $ , and $ <var:O> $ larger than <nat:1> . \end{theorem} \begin{proof} Take $ <var:e> = <nat:2> $ , $ <var:u> = <nat:3> $ , $ <var:s> = <nat:7> $ , $ <var:C> = <nat:4> $ , $ <var:O> = <nat:13> $ , $ <var:l> = <nat:6> $ , $ <var:R> = <nat:11> $ , $ <var:G> = <nat:5> $ . We prove <nat:720720> is the product between some $ <var:C> $ , $ <var:u> $ , $ <var:s> $ , $ <var:R> $ , $ <var:e> $ , $ <var:G> $ , $ <var:O> $ and $ <var:l> $ . Note that $ <var:l> = <nat:6> $ , $ <var:G> = <nat:5> $ , $ <var:C> = <nat:4> $ , $ <var:e> = <nat:2> $ , $ <var:s> = <nat:7> $ , $ <var:u> = <nat:3> $ , $ <var:R> = <nat:11> $ , $ <var:O> = <nat:13> > <nat:1> $ . \end{proof} \end{document} 
~
Require Import Lia . Theorem <genP:1> : exists <var:O> <var:e> <var:s> <var:G> <var:l> <var:u> <var:C> <var:R> : nat , ( <var:G> * <var:u> * <var:l> * <var:C> * <var:s> * <var:R> * <var:O> * <var:e> = <nat:720720> ) /\ ( <var:G> > <nat:1> ) /\ ( <var:e> > <nat:1> ) /\ ( <var:s> > <nat:1> ) /\ ( <var:C> > <nat:1> ) /\ ( <var:u> > <nat:1> ) /\ ( <var:l> > <nat:1> ) /\ ( <var:R> > <nat:1> ) /\ ( <var:O> > <nat:1> ) . Proof . exists <nat:13> . exists <nat:2> . exists <nat:7> . exists <nat:5> . exists <nat:6> . exists <nat:3> . exists <nat:4> . exists <nat:11> . assert ( <genH> : <nat:6> > <nat:1> ) . { lia . } assert ( <genH> : <nat:5> > <nat:1> ) . { lia . } assert ( <genH> : <nat:4> > <nat:1> ) . { lia . } assert ( <genH> : <nat:2> > <nat:1> ) . { lia . } assert ( <genH> : <nat:7> > <nat:1> ) . { lia . } assert ( <genH> : <nat:3> > <nat:1> ) . { lia . } assert ( <genH> : <nat:11> > <nat:1> ) . { lia . } assert ( <genH> : <nat:13> > <nat:1> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 