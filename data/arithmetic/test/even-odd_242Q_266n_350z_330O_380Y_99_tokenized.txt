\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Using $ <var:Q> $ , $ <var:n> $ , $ <var:O> $ , $ <var:Y> $ , and $ <var:z> \in \mathbb{N} $ the expression $ <var:n> <nat:266> + <nat:99> + <nat:242> <var:Q> + <nat:350> <var:z> + <var:O> <nat:330> + <nat:380> <var:Y> $ must be odd . \end{theorem} \begin{proof} We verify the summation $ <var:Q> \times <nat:242> + <nat:99> + <nat:266> \times <var:n> + <nat:350> \times <var:z> + <var:O> \times <nat:330> + <nat:380> \times <var:Y> $ will be odd . Take note the pair $ <nat:350> \cdot <var:z> $ is an even number in $ \mathbb{Z}^+ $ . This fact holds since taking the product of an even element of $ \mathbb{N} $ with some whole number will be even . Further , remember the pairs $ <var:Q> \cdot <nat:242> $ and also $ <nat:380> \cdot <var:Y> $ are even . Adding on , take note the term $ <var:n> \cdot <nat:266> $ is even . Building on , observe that $ <var:O> \cdot <nat:330> $ is even as a consequence that multiplying of an even element of $ \mathbb{Z}^+ $ with any element of $ \mathbb{Z}^+ $ will be even . Observe that the summing of an even positive integer with an odd integer will be odd . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:Q> <var:n> <var:O> <var:Y> <var:z> : nat , Nat . odd ( <nat:266> * <var:n> + <nat:242> * <var:Q> + <nat:350> * <var:z> + <nat:330> * <var:O> + <nat:380> * <var:Y> + <nat:99> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:350> * <var:z> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:242> * <var:Q> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:380> * <var:Y> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:266> * <var:n> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:330> * <var:O> ) = true ) . { rewrite Nat . even_mul . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 