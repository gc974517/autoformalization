\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Assuming some terms $ <var:E> $ , $ <var:t> $ , $ <var:R> $ , $ <var:Y> $ , $ <var:D> $ , $ <var:o> $ , $ <var:B> $ , $ <var:s> $ , and $ <var:L> $ the expression $ <nat:55> + <nat:360> * <var:R> + <nat:498> * <var:B> + <var:t> * <nat:124> + <var:s> * <nat:496> + <nat:322> * <var:E> + <nat:232> * <var:Y> + <nat:62> * <var:D> + <var:o> * <nat:122> + <nat:404> * <var:L> $ must be odd . \end{theorem} \begin{proof} We know the summing between an even positive integer with an odd number is guaranteed to be odd . See that $ <nat:55> $ is known as odd . In addition to this , the products $ <var:R> <nat:360> $ , $ <nat:498> <var:B> $ , $ <nat:124> <var:t> $ , $ <nat:496> <var:s> $ , $ <var:E> <nat:322> $ , $ <var:Y> <nat:232> $ , $ <nat:62> <var:D> $ , $ <var:o> <nat:122> $ , and also $ <var:L> <nat:404> $ are even positive integers from the knowledge the product between an even number with some positive integer is clearly an even element of $ \mathbb{N} $ and likewise the natural numbers $ <nat:360> $ , $ <nat:498> $ , $ <nat:124> $ , $ <nat:496> $ , $ <nat:322> $ , $ <nat:232> $ , $ <nat:62> $ , $ <nat:122> $ , additionally $ <nat:404> $ are clearly by definition even naturals . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:E> <var:t> <var:R> <var:Y> <var:D> <var:o> <var:B> <var:s> <var:L> : nat , Nat . odd ( <nat:360> * <var:R> + <nat:498> * <var:B> + <nat:124> * <var:t> + <nat:496> * <var:s> + <nat:322> * <var:E> + <nat:232> * <var:Y> + <nat:62> * <var:D> + <nat:122> * <var:o> + <nat:404> * <var:L> + <nat:55> ) = true . Proof . intros . rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . assert ( <genH> : Nat . odd <nat:55> = true ) . { auto . } assert ( <genH> : Nat . even <nat:360> = true ) . { auto . } assert ( <genH> : Nat . even <nat:498> = true ) . { auto . } assert ( <genH> : Nat . even <nat:124> = true ) . { auto . } assert ( <genH> : Nat . even <nat:496> = true ) . { auto . } assert ( <genH> : Nat . even <nat:322> = true ) . { auto . } assert ( <genH> : Nat . even <nat:232> = true ) . { auto . } assert ( <genH> : Nat . even <nat:62> = true ) . { auto . } assert ( <genH> : Nat . even <nat:122> = true ) . { auto . } assert ( <genH> : Nat . even <nat:404> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:360> * <var:R> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:498> * <var:B> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:124> * <var:t> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:496> * <var:s> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:322> * <var:E> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:232> * <var:Y> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:62> * <var:D> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:122> * <var:o> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:404> * <var:L> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 