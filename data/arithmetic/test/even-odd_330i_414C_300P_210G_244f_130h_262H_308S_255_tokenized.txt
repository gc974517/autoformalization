\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Assuming integers $ <var:G> $ , $ <var:f> $ , $ <var:P> $ , $ <var:h> $ , $ <var:H> $ , $ <var:S> $ , $ <var:C> $ , and $ <var:i> $ the formula $ <nat:244> <var:f> + <nat:262> <var:H> + <nat:255> + <var:S> <nat:308> + <var:C> <nat:414> + <var:P> <nat:300> + <nat:330> <var:i> + <var:G> <nat:210> + <var:h> <nat:130> $ is guaranteed to be odd . \end{theorem} \begin{proof} Notice the term $ <nat:330> \times <var:i> $ is known to be even because the positive integer $ <nat:330> $ is even . In addition to this , the positive integer $ <nat:414> $ is clearly even . Accordingly , $ <nat:414> \times <var:C> $ is guaranteed to be even at the same time . The leading term $ <nat:300> $ is an even natural . Then , the term $ <nat:300> \times <var:P> $ is guaranteed to be even too . Additionally , notice the coefficient $ <nat:210> $ is clearly even . In consequence , the term $ <var:G> \times <nat:210> $ will be even additionally . The term $ <var:f> \times <nat:244> $ is guaranteed to be even as a consequence that the leading term $ <nat:244> $ is clearly even . Recall that the natural number $ <nat:130> $ is clearly an even number in $ \mathbb{Z}^+ $ . Then , $ <nat:130> \times <var:h> $ is guaranteed to be even additionally . On top of this , the positive integer $ <nat:262> $ is even . Consequently , the term $ <nat:262> \times <var:H> $ is guaranteed to be even in addition . See that the integer $ <nat:308> $ is clearly an even integer . As a consequence , $ <nat:308> \times <var:S> $ must be even too . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:G> <var:f> <var:P> <var:h> <var:H> <var:S> <var:C> <var:i> : nat , Nat . odd ( <nat:244> * <var:f> + <nat:262> * <var:H> + <nat:308> * <var:S> + <nat:414> * <var:C> + <nat:300> * <var:P> + <nat:330> * <var:i> + <nat:210> * <var:G> + <nat:130> * <var:h> + <nat:255> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:330> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:330> * <var:i> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:414> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:414> * <var:C> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:300> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:300> * <var:P> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:210> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:210> * <var:G> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:244> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:244> * <var:f> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:130> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:130> * <var:h> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:262> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:262> * <var:H> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:308> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:308> * <var:S> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 