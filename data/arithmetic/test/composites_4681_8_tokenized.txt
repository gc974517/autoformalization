\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Under the condition there are whole numbers $ <var:M> $ , $ <var:U> $ , $ <var:m> $ , $ <var:t> $ , $ <var:O> $ , $ <var:C> $ , $ <var:n> $ , $ <var:G> $ such that $ <var:t> $ , $ <var:m> $ , $ <var:U> $ , $ <var:C> $ , $ <var:G> $ , $ <var:M> $ , $ <var:n> $ , $ <var:O> \geq <nat:2> $ . We claim that some $ <var:E> $ is defined as a <def:eight-composite> positive integer assuming $ <var:E> = <var:t> \times <var:G> \times <var:n> \times <var:O> \times <var:C> \times <var:M> \times <var:m> \times <var:U> $ . So $ <nat:2138400> = <var:E> $ is <def:eight-composite> . \end{theorem} \begin{proof} Remember a <def:eight-composite> natural number is the product between numbers $ <var:t> $ , $ <var:C> $ , $ <var:O> $ , $ <var:G> $ , $ <var:M> $ , $ <var:n> $ , $ <var:U> $ , and $ <var:m> $ such that $ <var:t> $ , $ <var:M> $ , $ <var:C> $ , $ <var:O> $ , $ <var:m> $ , $ <var:G> $ , $ <var:U> $ , $ <var:n> \geq <nat:2> $ . Note that $ <nat:2> \cdot <nat:10> \cdot <nat:6> \cdot <nat:5> \cdot <nat:12> \cdot <nat:11> \cdot <nat:9> \cdot <nat:3> = <var:G> \cdot <var:U> \cdot <var:M> \cdot <var:O> \cdot <var:m> \cdot <var:n> \cdot <var:C> \cdot <var:t> = <nat:2138400> $ . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:eight-composite> ( <var:E> : nat ) := exists <var:M> <var:U> <var:m> <var:t> <var:O> <var:C> <var:n> <var:G> : nat , ( <var:t> >= <nat:2> ) /\ ( <var:m> >= <nat:2> ) /\ ( <var:U> >= <nat:2> ) /\ ( <var:C> >= <nat:2> ) /\ ( <var:G> >= <nat:2> ) /\ ( <var:M> >= <nat:2> ) /\ ( <var:n> >= <nat:2> ) /\ ( <var:O> >= <nat:2> ) /\ ( <var:E> = <var:t> * <var:G> * <var:n> * <var:O> * <var:C> * <var:M> * <var:m> * <var:U> ) . Theorem <genP:1> : <def:eight-composite> <nat:2138400> . Proof . unfold <def:eight-composite> . exists <nat:6> . exists <nat:10> . exists <nat:12> . exists <nat:3> . exists <nat:5> . exists <nat:9> . exists <nat:11> . exists <nat:2> . repeat split . all : lia . Qed . 