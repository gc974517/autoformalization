\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Taking unknowns $ <var:n> $ , $ <var:q> $ , $ <var:f> $ , $ <var:S> $ , $ <var:F> $ , $ <var:t> $ , $ <var:s> $ , and $ <var:c> $ the formula $ <nat:178> \cdot <var:f> + <nat:212> \cdot <var:t> + <var:S> \cdot <nat:32> + <nat:206> + <var:n> \cdot <nat:96> + <nat:298> \cdot <var:F> + <var:s> \cdot <nat:430> + <nat:260> \cdot <var:c> + <var:q> \cdot <nat:170> $ must be even . \end{theorem} \begin{proof} Recall the summation $ <nat:96> \times <var:n> + <var:c> \times <nat:260> + <var:F> \times <nat:298> + <nat:178> \times <var:f> + <var:S> \times <nat:32> + <var:q> \times <nat:170> + <nat:430> \times <var:s> + <nat:212> \times <var:t> $ is obviously even . Notice the numbers $ <nat:96> $ , $ <nat:178> $ , $ <nat:32> $ , $ <nat:430> $ , $ <nat:212> $ , in addition to $ <nat:170> $ will be even . Hence , the products $ <var:n> * <nat:96> $ , $ <var:f> * <nat:178> $ , $ <nat:32> * <var:S> $ , $ <nat:430> * <var:s> $ , $ <var:t> * <nat:212> $ , in addition to $ <var:q> * <nat:170> $ must be even additionally . Building on , observe that the product $ <nat:260> * <var:c> $ is an even number in $ \mathbb{N} $ because multiplying between an even whole number and any number in $ \mathbb{Z}^+ $ will be an even natural number . This must be true from the fact the coefficient $ <nat:260> $ is known as even . Furthermore , recall that the number $ <nat:298> $ is trivially an even natural . Therefore , the product $ <nat:298> * <var:F> $ must be even additionally . $ <nat:96> \cdot <var:n> + <nat:32> \cdot <var:S> + <nat:298> \cdot <var:F> + <nat:212> \cdot <var:t> + <nat:178> \cdot <var:f> + <var:s> \cdot <nat:430> + <nat:170> \cdot <var:q> + <var:c> \cdot <nat:260> $ must be itself even by reason that the summation between even elements of $ \mathbb{N} $ and an even whole number will be even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:n> <var:q> <var:f> <var:S> <var:F> <var:t> <var:s> <var:c> : nat , Nat . even ( <nat:178> * <var:f> + <nat:212> * <var:t> + <nat:32> * <var:S> + <nat:96> * <var:n> + <nat:298> * <var:F> + <nat:430> * <var:s> + <nat:260> * <var:c> + <nat:170> * <var:q> + <nat:206> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:96> = true ) . { auto . } assert ( <genH> : Nat . even <nat:178> = true ) . { auto . } assert ( <genH> : Nat . even <nat:32> = true ) . { auto . } assert ( <genH> : Nat . even <nat:430> = true ) . { auto . } assert ( <genH> : Nat . even <nat:212> = true ) . { auto . } assert ( <genH> : Nat . even <nat:170> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:96> * <var:n> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:178> * <var:f> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:32> * <var:S> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:430> * <var:s> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:212> * <var:t> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:170> * <var:q> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:260> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:260> * <var:c> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:298> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:298> * <var:F> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:178> * <var:f> + <nat:212> * <var:t> + <nat:32> * <var:S> + <nat:96> * <var:n> + <nat:298> * <var:F> + <nat:430> * <var:s> + <nat:260> * <var:c> + <nat:170> * <var:q> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . even_add . rewrite <genH> . auto . Qed . 