\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:z> \cdot <nat:108> + <var:d> \cdot <nat:410> + <var:M> \cdot <nat:24> + <nat:356> \cdot <var:V> + <var:x> \cdot <nat:102> + <nat:16> \cdot <var:R> + <nat:228> + <nat:288> \cdot <var:g> + <nat:144> \cdot <var:r> + <nat:478> \cdot <var:H> + <nat:282> \cdot <var:K> $ is guaranteed to be even . \end{theorem} \begin{proof} We check the sum $ <var:H> \cdot <nat:478> + <var:V> \cdot <nat:356> + <var:R> \cdot <nat:16> + <nat:282> \cdot <var:K> + <var:M> \cdot <nat:24> + <var:r> \cdot <nat:144> + <nat:108> \cdot <var:z> + <nat:228> + <nat:288> \cdot <var:g> + <var:d> \cdot <nat:410> + <nat:102> \cdot <var:x> $ will be even . See that $ <nat:228> $ is obviously even . Remember the expression $ <nat:356> <var:V> + <nat:24> <var:M> + <var:r> <nat:144> + <var:R> <nat:16> + <var:d> <nat:410> + <var:g> <nat:288> + <var:x> <nat:102> + <nat:282> <var:K> + <var:z> <nat:108> + <var:H> <nat:478> $ is guaranteed to be even , since the multiplication between even integers will be even . Remember the numbers $ <nat:24> $ , $ <nat:102> $ , $ <nat:410> $ , $ <nat:16> $ , $ <nat:108> $ , $ <nat:282> $ , $ <nat:356> $ , as well as $ <nat:478> $ are known as even elements of $ \mathbb{Z}^+ $ Furthermore , see that the leading term $ <nat:288> $ is even Additionally , remember the whole number $ <nat:144> $ is guaranteed to be even \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:z> <var:d> <var:M> <var:V> <var:x> <var:R> <var:g> <var:r> <var:H> <var:K> : nat , Nat . even ( <nat:108> * <var:z> + <nat:410> * <var:d> + <nat:24> * <var:M> + <nat:356> * <var:V> + <nat:102> * <var:x> + <nat:16> * <var:R> + <nat:288> * <var:g> + <nat:144> * <var:r> + <nat:478> * <var:H> + <nat:282> * <var:K> + <nat:228> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:228> = true ) . { auto . } assert ( <genH> : Nat . even <nat:24> = true ) . { auto . } assert ( <genH> : Nat . even <nat:102> = true ) . { auto . } assert ( <genH> : Nat . even <nat:410> = true ) . { auto . } assert ( <genH> : Nat . even <nat:16> = true ) . { auto . } assert ( <genH> : Nat . even <nat:108> = true ) . { auto . } assert ( <genH> : Nat . even <nat:282> = true ) . { auto . } assert ( <genH> : Nat . even <nat:356> = true ) . { auto . } assert ( <genH> : Nat . even <nat:478> = true ) . { auto . } assert ( <genH> : Nat . even <nat:288> = true ) . { auto . } assert ( <genH> : Nat . even <nat:144> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:108> * <var:z> + <nat:410> * <var:d> + <nat:24> * <var:M> + <nat:356> * <var:V> + <nat:102> * <var:x> + <nat:16> * <var:R> + <nat:288> * <var:g> + <nat:144> * <var:r> + <nat:478> * <var:H> + <nat:282> * <var:K> ) = true ) . { repeat rewrite Nat . even_add . repeat rewrite Nat . even_mul . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . auto . Qed . 