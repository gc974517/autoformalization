\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Granted that we get where $ <var:K> $ , $ <var:z> $ , $ <var:u> $ , $ <var:O> $ , $ <var:c> $ , $ <var:f> $ , $ <var:Z> $ , $ <var:I> $ , $ <var:F> $ , $ <var:C> > <nat:1> $ such that using $ <var:l> \in \mathbb{N} $ , $ <var:l> = <var:c> \cdot <var:f> \cdot <var:I> \cdot <var:Z> \cdot <var:u> \cdot <var:O> \cdot <var:K> \cdot <var:F> \cdot <var:z> \cdot <var:C> $ , then say that $ <var:l> $ is a <def:ten-composite> positive integer taking some integers $ <var:Z> $ , $ <var:c> $ , $ <var:K> $ , $ <var:F> $ , $ <var:z> $ , $ <var:O> $ , $ <var:I> $ , $ <var:u> $ , $ <var:C> $ , $ <var:f> $ . So the number <nat:283046400> is a <def:ten-composite> integer . \end{theorem} \begin{proof} Let $ <var:F> = <nat:4> $ , $ <var:c> = <nat:5> $ , $ <var:K> = <nat:13> $ , $ <var:z> = <nat:6> $ , $ <var:Z> = <nat:9> $ , $ <var:u> = <nat:3> $ , $ <var:C> = <nat:8> $ , $ <var:I> = <nat:7> $ , $ <var:O> = <nat:10> $ and $ <var:f> = <nat:12> $ . We present $ <var:O> $ , $ <var:z> $ , $ <var:f> $ , $ <var:Z> $ , $ <var:C> $ , $ <var:u> $ , $ <var:c> $ , $ <var:K> $ , $ <var:I> $ , $ <var:F> > <nat:1> $ plus <nat:283046400> is the multiplication between $ <var:F> $ , $ <var:O> $ , $ <var:u> $ , $ <var:K> $ , $ <var:c> $ , $ <var:I> $ , $ <var:C> $ , $ <var:Z> $ , $ <var:f> $ , and $ <var:z> \in \mathbb{Z}^+ $ . Notice $ <nat:3> $ , $ <nat:8> $ , $ <nat:6> $ , $ <nat:12> $ , $ <nat:7> $ , $ <nat:4> $ , $ <nat:9> $ , $ <nat:13> $ , $ <nat:10> $ , and $ <nat:5> $ are larger than <nat:1> . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:ten-composite> ( <var:l> : nat ) := exists <var:Z> <var:c> <var:K> <var:F> <var:z> <var:O> <var:I> <var:u> <var:C> <var:f> : nat , ( <var:K> > <nat:1> ) /\ ( <var:z> > <nat:1> ) /\ ( <var:u> > <nat:1> ) /\ ( <var:O> > <nat:1> ) /\ ( <var:c> > <nat:1> ) /\ ( <var:f> > <nat:1> ) /\ ( <var:Z> > <nat:1> ) /\ ( <var:I> > <nat:1> ) /\ ( <var:F> > <nat:1> ) /\ ( <var:C> > <nat:1> ) /\ ( <var:l> = <var:c> * <var:f> * <var:I> * <var:Z> * <var:u> * <var:O> * <var:K> * <var:F> * <var:z> * <var:C> ) . Theorem <genP:1> : <def:ten-composite> <nat:283046400> . Proof . unfold <def:ten-composite> . exists <nat:9> . exists <nat:5> . exists <nat:13> . exists <nat:4> . exists <nat:6> . exists <nat:10> . exists <nat:7> . exists <nat:3> . exists <nat:8> . exists <nat:12> . assert ( <genH> : <nat:3> > <nat:1> ) . { lia . } assert ( <genH> : <nat:8> > <nat:1> ) . { lia . } assert ( <genH> : <nat:6> > <nat:1> ) . { lia . } assert ( <genH> : <nat:12> > <nat:1> ) . { lia . } assert ( <genH> : <nat:7> > <nat:1> ) . { lia . } assert ( <genH> : <nat:4> > <nat:1> ) . { lia . } assert ( <genH> : <nat:9> > <nat:1> ) . { lia . } assert ( <genH> : <nat:13> > <nat:1> ) . { lia . } assert ( <genH> : <nat:10> > <nat:1> ) . { lia . } assert ( <genH> : <nat:5> > <nat:1> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 