\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Supposing that there exist integers $ <var:J> $ , $ <var:Z> $ , $ <var:l> $ , $ <var:O> $ , $ <var:h> $ , $ <var:F> $ , $ <var:Y> $ so that $ <var:l> $ , $ <var:h> $ , $ <var:Z> $ , $ <var:J> $ , $ <var:Y> $ , $ <var:F> $ and $ <var:O> \geq <nat:2> $ . We define that $ <var:E> \in \mathbb{Z}^+ $ is defined as <def:seven-composite> when $ <var:E> = <var:O> * <var:Y> * <var:h> * <var:F> * <var:l> * <var:J> * <var:Z> $ . Accordingly the integer <nat:77760> is a <def:seven-composite> number . \end{theorem} \begin{proof} Let $ <var:Z> = <nat:6> $ , $ <var:l> = <nat:3> $ , $ <var:J> = <nat:2> $ , $ <var:h> = <nat:4> $ , $ <var:O> = <nat:12> $ , $ <var:Y> = <nat:5> $ and $ <var:F> = <nat:9> $ . We justify the claim holds seeing that $ <var:Z> = <nat:6> $ , $ <var:h> = <nat:4> $ , $ <var:F> = <nat:9> $ , $ <var:Y> = <nat:5> $ , $ <var:O> = <nat:12> $ , $ <var:l> = <nat:3> $ and $ <var:J> = <nat:2> \geq <nat:2> $ as well as in consideration of $ <nat:6> \cdot <nat:12> \cdot <nat:9> \cdot <nat:5> \cdot <nat:3> \cdot <nat:4> \cdot <nat:2> = <nat:77760> $ . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:seven-composite> ( <var:E> : nat ) := exists <var:J> <var:Z> <var:l> <var:O> <var:h> <var:F> <var:Y> : nat , ( <var:l> >= <nat:2> ) /\ ( <var:h> >= <nat:2> ) /\ ( <var:Z> >= <nat:2> ) /\ ( <var:J> >= <nat:2> ) /\ ( <var:Y> >= <nat:2> ) /\ ( <var:F> >= <nat:2> ) /\ ( <var:O> >= <nat:2> ) /\ ( <var:E> = <var:O> * <var:Y> * <var:h> * <var:F> * <var:l> * <var:J> * <var:Z> ) . Theorem <genP:1> : <def:seven-composite> <nat:77760> . Proof . unfold <def:seven-composite> . exists <nat:2> . exists <nat:6> . exists <nat:3> . exists <nat:12> . exists <nat:4> . exists <nat:9> . exists <nat:5> . assert ( <genH> : <nat:6> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:4> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:9> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:5> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:12> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:3> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:2> >= <nat:2> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 