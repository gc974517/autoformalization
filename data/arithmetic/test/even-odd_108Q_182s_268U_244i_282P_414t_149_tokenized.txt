\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Given all unknowns $ <var:U> $ , $ <var:t> $ , $ <var:s> $ , $ <var:i> $ , $ <var:P> $ , and $ <var:Q> $ $ <nat:108> <var:Q> + <nat:244> <var:i> + <nat:182> <var:s> + <var:P> <nat:282> + <nat:149> + <nat:268> <var:U> + <nat:414> <var:t> $ must be odd . \end{theorem} \begin{proof} We demonstrate our main result holds . Observe that $ <nat:149> $ is known as odd . We know that the products $ <var:s> \times <nat:182> $ , $ <nat:414> \times <var:t> $ , and moreover $ <var:Q> \times <nat:108> $ are even elements of $ \mathbb{N} $ by reason that taking the product between an even whole number with a element of $ \mathbb{N} $ is guaranteed to be even , which holds from the fact the numbers $ <nat:182> $ , $ <nat:414> $ , as well as $ <nat:108> $ are known as even . Additionally , the term $ <var:i> \times <nat:244> $ is known as even from the fact the multiplication of an even number and a natural is obviously an even integer . This fact must be true since the whole number $ <nat:244> $ is obviously an even integer . The positive integer $ <nat:282> $ is obviously even . Therefore , $ <nat:282> \times <var:P> $ is guaranteed to be even at the same time . Furthermore , notice the positive integer $ <nat:268> $ is trivially an even whole number . So , the pair $ <var:U> \times <nat:268> $ must be even additionally . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:U> <var:t> <var:s> <var:i> <var:P> <var:Q> : nat , Nat . odd ( <nat:108> * <var:Q> + <nat:244> * <var:i> + <nat:182> * <var:s> + <nat:282> * <var:P> + <nat:268> * <var:U> + <nat:414> * <var:t> + <nat:149> ) = true . Proof . intros . assert ( <genH> : Nat . odd <nat:149> = true ) . { auto . } assert ( <genH> : Nat . even <nat:182> = true ) . { auto . } assert ( <genH> : Nat . even <nat:414> = true ) . { auto . } assert ( <genH> : Nat . even <nat:108> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:182> * <var:s> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:414> * <var:t> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:108> * <var:Q> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:244> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:244> * <var:i> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:282> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:282> * <var:P> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:268> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:268> * <var:U> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 