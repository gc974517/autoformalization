\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} For some variables $ <var:B> $ , $ <var:t> $ , $ <var:A> $ , $ <var:K> $ , $ <var:j> $ , $ <var:D> $ , $ <var:L> $ , $ <var:g> $ , $ <var:v> $ , and $ <var:s> $ $ <nat:105> + <nat:150> <var:t> + <var:K> <nat:110> + <nat:352> <var:D> + <var:B> <nat:114> + <nat:96> <var:g> + <var:v> <nat:178> + <nat:116> <var:j> + <nat:496> <var:s> + <nat:14> <var:A> + <var:L> <nat:198> $ is guaranteed to be odd . \end{theorem} \begin{proof} Additionally , the terms $ <var:t> * <nat:150> $ , $ <var:K> * <nat:110> $ , $ <var:D> * <nat:352> $ , $ <var:B> * <nat:114> $ , $ <nat:96> * <var:g> $ , $ <nat:178> * <var:v> $ , $ <var:j> * <nat:116> $ , $ <var:s> * <nat:496> $ , $ <nat:14> * <var:A> $ , and $ <nat:198> * <var:L> $ are clearly even numbers in $ \mathbb{N} $ because multiplying between an even integer with any number in $ \mathbb{Z}^+ $ is guaranteed to be even . This claim is true as a consequence that the natural numbers $ <nat:150> $ , $ <nat:110> $ , $ <nat:352> $ , $ <nat:114> $ , $ <nat:96> $ , $ <nat:178> $ , $ <nat:116> $ , $ <nat:496> $ , $ <nat:14> $ , additionally $ <nat:198> $ must be even natural numbers . Because the summation of an even natural number with an odd positive integer must be fundamentally an odd natural , hence our main result holds . Observe that $ <nat:105> $ is trivially an odd natural number . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:B> <var:t> <var:A> <var:K> <var:j> <var:D> <var:L> <var:g> <var:v> <var:s> : nat , Nat . odd ( <nat:150> * <var:t> + <nat:110> * <var:K> + <nat:352> * <var:D> + <nat:114> * <var:B> + <nat:96> * <var:g> + <nat:178> * <var:v> + <nat:116> * <var:j> + <nat:496> * <var:s> + <nat:14> * <var:A> + <nat:198> * <var:L> + <nat:105> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:150> = true ) . { auto . } assert ( <genH> : Nat . even <nat:110> = true ) . { auto . } assert ( <genH> : Nat . even <nat:352> = true ) . { auto . } assert ( <genH> : Nat . even <nat:114> = true ) . { auto . } assert ( <genH> : Nat . even <nat:96> = true ) . { auto . } assert ( <genH> : Nat . even <nat:178> = true ) . { auto . } assert ( <genH> : Nat . even <nat:116> = true ) . { auto . } assert ( <genH> : Nat . even <nat:496> = true ) . { auto . } assert ( <genH> : Nat . even <nat:14> = true ) . { auto . } assert ( <genH> : Nat . even <nat:198> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:150> * <var:t> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:110> * <var:K> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:352> * <var:D> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:114> * <var:B> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:96> * <var:g> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:178> * <var:v> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:116> * <var:j> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:496> * <var:s> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:14> * <var:A> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:198> * <var:L> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . assert ( <genH> : Nat . odd <nat:105> = true ) . { auto . } rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 