\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:N> \cdot <nat:390> + <nat:408> \cdot <var:I> + <var:f> \cdot <nat:300> + <nat:356> \cdot <var:g> + <nat:295> $ must be odd using all $ <var:f> $ , $ <var:I> $ , $ <var:g> $ , and $ <var:N> \in \mathbb{N} $ . \end{theorem} \begin{proof} It can be verified that our proposition holds . We apply the assumption the knowledge that $ <nat:300> \cdot <var:f> + <var:N> \cdot <nat:390> + <nat:356> \cdot <var:g> + <nat:408> \cdot <var:I> $ is clearly even . Remember that the adding between even elements of $ \mathbb{Z}^+ $ successively and an even whole number will be even . The products $ <var:f> \times <nat:300> $ , $ <var:N> \times <nat:390> $ , $ <var:g> \times <nat:356> $ , $ <var:I> \times <nat:408> $ , are known to be even naturals as a consequence that the integers $ <nat:300> $ , $ <nat:390> $ , $ <nat:356> $ , $ <nat:408> $ , must be by definition even whole numbers . Observe that the totaling of an even element of $ \mathbb{Z}^+ $ with an odd whole number will be odd . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:f> <var:I> <var:g> <var:N> : nat , Nat . odd ( <nat:390> * <var:N> + <nat:408> * <var:I> + <nat:300> * <var:f> + <nat:356> * <var:g> + <nat:295> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:300> = true ) . { auto . } assert ( <genH> : Nat . even <nat:390> = true ) . { auto . } assert ( <genH> : Nat . even <nat:356> = true ) . { auto . } assert ( <genH> : Nat . even <nat:408> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:300> * <var:f> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:390> * <var:N> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:356> * <var:g> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:408> * <var:I> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:390> * <var:N> + <nat:408> * <var:I> + <nat:300> * <var:f> + <nat:356> * <var:g> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . auto . Qed . 