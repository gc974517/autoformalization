\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:s> <nat:336> + <nat:302> <var:t> + <nat:123> + <var:y> <nat:188> + <nat:402> <var:d> + <nat:464> <var:Y> + <nat:98> <var:l> + <var:M> <nat:122> $ must be odd with any $ <var:t> $ , $ <var:d> $ , $ <var:l> $ , $ <var:s> $ , $ <var:Y> $ , $ <var:M> $ , and $ <var:y> \in \mathbb{N} $ . \end{theorem} \begin{proof} We know that the leading term $ <nat:188> $ is clearly even . Accordingly , the term $ <var:y> <nat:188> $ will be even at the same time . Likewise , the terms $ <var:Y> <nat:464> $ and moreover $ <var:t> <nat:302> $ are clearly even elements of $ \mathbb{N} $ . This fact holds from the fact the leading terms $ <nat:464> $ in addition to $ <nat:302> $ are guaranteed to be themselves even numbers . Further , see the integers $ <nat:98> $ , $ <nat:402> $ , plus $ <nat:336> $ will be even . Hence , the pairs $ <nat:98> <var:l> $ , $ <nat:402> <var:d> $ , and $ <var:s> <nat:336> $ must be even at the same time . Take note the product $ <var:M> <nat:122> $ is known as even . This fact is proven by reason that the whole number $ <nat:122> $ is guaranteed to be itself an even number in $ \mathbb{N} $ . We show our theorem holds . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:t> <var:d> <var:l> <var:s> <var:Y> <var:M> <var:y> : nat , Nat . odd ( <nat:336> * <var:s> + <nat:302> * <var:t> + <nat:188> * <var:y> + <nat:402> * <var:d> + <nat:464> * <var:Y> + <nat:98> * <var:l> + <nat:122> * <var:M> + <nat:123> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:188> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:188> * <var:y> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:464> = true ) . { auto . } assert ( <genH> : Nat . even <nat:302> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:464> * <var:Y> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:302> * <var:t> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:98> = true ) . { auto . } assert ( <genH> : Nat . even <nat:402> = true ) . { auto . } assert ( <genH> : Nat . even <nat:336> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:98> * <var:l> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:402> * <var:d> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:336> * <var:s> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:122> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:122> * <var:M> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 