\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} With integers $ <var:P> $ , $ <var:t> $ , $ <var:R> $ , and $ <var:j> $ the sum $ <var:j> * <nat:40> + <var:R> * <nat:146> + <nat:27> + <nat:18> * <var:t> + <nat:348> * <var:P> $ is odd . \end{theorem} \begin{proof} We verify our claim is true . Our theorem holds by reason that $ <nat:40> \times <var:j> + <nat:18> \times <var:t> + <var:P> \times <nat:348> + <var:R> \times <nat:146> $ is known to be even . Remember that the term $ <var:j> * <nat:40> $ is clearly even from the fact the product of an even natural number and any integer is guaranteed to be itself an even number in $ \mathbb{Z}^+ $ . Take note that $ <var:t> * <nat:18> $ is obviously an even positive integer . Furthermore , remember that $ <var:P> * <nat:348> $ is known to be even . This must be true from the fact the product of an even number in $ \mathbb{N} $ with a element of $ \mathbb{N} $ must be even . The pair $ <nat:146> * <var:R> $ is known to be an even positive integer . Our main result is true by reason that the summation of an even whole number with even natural numbers must be even . The totaling between an even natural with an odd whole number is odd . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:P> <var:t> <var:R> <var:j> : nat , Nat . odd ( <nat:40> * <var:j> + <nat:146> * <var:R> + <nat:18> * <var:t> + <nat:348> * <var:P> + <nat:27> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:40> * <var:j> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:18> * <var:t> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:348> * <var:P> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:146> * <var:R> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:40> * <var:j> + <nat:146> * <var:R> + <nat:18> * <var:t> + <nat:348> * <var:P> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . auto . Qed . 