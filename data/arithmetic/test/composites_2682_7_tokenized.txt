\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \newtheorem{definition}{Definition} \begin{document} \begin{definition} Allow $ <var:g> $ , $ <var:D> $ , $ <var:H> $ , $ <var:p> $ , $ <var:B> $ , $ <var:d> $ , $ <var:k> \in \mathbb{Z}^+ $ . We assume that $ <var:j> \in \mathbb{N} $ will be named <def:seven-composite> given $ <var:d> * <var:k> * <var:H> * <var:B> * <var:g> * <var:p> * <var:D> = <var:j> $ as well as unique terms are larger than <nat:1> . \end{definition} \begin{theorem} $ <nat:190080> = <var:j> $ is a <def:seven-composite> positive integer . \end{theorem} \begin{proof} Let $ <var:B> = <nat:2> $ , $ <var:D> = <nat:11> $ , $ <var:H> = <nat:9> $ , $ <var:d> = <nat:6> $ , $ <var:p> = <nat:8> $ , $ <var:g> = <nat:5> $ , $ <var:k> = <nat:4> $ . We demonstrate <nat:190080> is the product of $ <var:k> $ , $ <var:D> $ , $ <var:d> $ , $ <var:g> $ , $ <var:H> $ , $ <var:p> $ and $ <var:B> \in \mathbb{N} $ as well as $ <var:k> $ , $ <var:B> $ , $ <var:H> $ , $ <var:d> $ , $ <var:g> $ , $ <var:p> $ and $ <var:D> $ are more than <nat:1> . Notice $ <var:k> = <nat:4> $ , $ <var:p> = <nat:8> $ , $ <var:g> = <nat:5> $ , $ <var:d> = <nat:6> $ , $ <var:B> = <nat:2> $ , $ <var:D> = <nat:11> $ and $ <var:H> = <nat:9> > <nat:1> $ . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:seven-composite> ( <var:j> : nat ) := exists <var:g> <var:D> <var:H> <var:p> <var:B> <var:d> <var:k> : nat , ( <var:d> * <var:k> * <var:H> * <var:B> * <var:g> * <var:p> * <var:D> = <var:j> ) /\ ( <var:g> > <nat:1> ) /\ ( <var:D> > <nat:1> ) /\ ( <var:H> > <nat:1> ) /\ ( <var:p> > <nat:1> ) /\ ( <var:B> > <nat:1> ) /\ ( <var:d> > <nat:1> ) /\ ( <var:k> > <nat:1> ) . Theorem <genP:1> : <def:seven-composite> <nat:190080> . Proof . unfold <def:seven-composite> . exists <nat:5> . exists <nat:11> . exists <nat:9> . exists <nat:8> . exists <nat:2> . exists <nat:6> . exists <nat:4> . assert ( <genH> : <nat:4> > <nat:1> ) . { lia . } assert ( <genH> : <nat:8> > <nat:1> ) . { lia . } assert ( <genH> : <nat:5> > <nat:1> ) . { lia . } assert ( <genH> : <nat:6> > <nat:1> ) . { lia . } assert ( <genH> : <nat:2> > <nat:1> ) . { lia . } assert ( <genH> : <nat:11> > <nat:1> ) . { lia . } assert ( <genH> : <nat:9> > <nat:1> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 