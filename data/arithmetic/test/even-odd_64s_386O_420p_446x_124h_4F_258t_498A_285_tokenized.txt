\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:446> \times <var:x> + <nat:285> + <var:s> \times <nat:64> + <nat:420> \times <var:p> + <nat:124> \times <var:h> + <nat:4> \times <var:F> + <nat:386> \times <var:O> + <var:t> \times <nat:258> + <nat:498> \times <var:A> $ is odd for all whole numbers $ <var:A> $ , $ <var:O> $ , $ <var:x> $ , $ <var:t> $ , $ <var:s> $ , $ <var:h> $ , $ <var:p> $ , and $ <var:F> $ . \end{theorem} \begin{proof} Notice the integers $ <nat:386> $ , $ <nat:446> $ , $ <nat:420> $ , plus $ <nat:64> $ are guaranteed to be even elements of $ \mathbb{N} $ Likewise , see that the leading terms $ <nat:124> $ , $ <nat:498> $ , additionally $ <nat:4> $ will be even numbers The number $ <nat:258> $ is clearly an even number in $ \mathbb{N} $ From the fact multiplying of an even natural with some positive integer is in itself an even positive integer , then the sum $ <var:s> <nat:64> + <var:O> <nat:386> + <var:p> <nat:420> + <nat:446> <var:x> + <nat:285> + <var:h> <nat:124> + <nat:4> <var:F> + <nat:258> <var:t> + <var:A> <nat:498> $ in itself will be odd . Take note that $ <nat:285> $ is known to be odd . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:A> <var:O> <var:x> <var:t> <var:s> <var:h> <var:p> <var:F> : nat , Nat . odd ( <nat:446> * <var:x> + <nat:64> * <var:s> + <nat:420> * <var:p> + <nat:124> * <var:h> + <nat:4> * <var:F> + <nat:386> * <var:O> + <nat:258> * <var:t> + <nat:498> * <var:A> + <nat:285> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:386> = true ) . { auto . } assert ( <genH> : Nat . even <nat:446> = true ) . { auto . } assert ( <genH> : Nat . even <nat:420> = true ) . { auto . } assert ( <genH> : Nat . even <nat:64> = true ) . { auto . } assert ( <genH> : Nat . even <nat:124> = true ) . { auto . } assert ( <genH> : Nat . even <nat:498> = true ) . { auto . } assert ( <genH> : Nat . even <nat:4> = true ) . { auto . } assert ( <genH> : Nat . even <nat:258> = true ) . { auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . repeat rewrite Nat . even_mul . assert ( <genH> : Nat . odd <nat:285> = true ) . { auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 