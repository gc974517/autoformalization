\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Allow $ <var:U> $ , $ <var:z> $ , $ <var:l> $ , $ <var:X> $ , $ <var:Q> $ , $ <var:G> $ , and $ <var:b> \in \mathbb{Z}^+ $ such that $ <var:X> $ , $ <var:z> $ , $ <var:U> $ , $ <var:b> $ , $ <var:G> $ , $ <var:l> $ , $ <var:Q> \geq <nat:2> $ and so that <nat:1197504> is the multiplication of whole numbers $ <var:U> $ , $ <var:z> $ , $ <var:l> $ , $ <var:X> $ , $ <var:Q> $ , $ <var:G> $ and $ <var:b> \in \mathbb{N} $ . \end{theorem} \begin{proof} Assume $ <var:U> = <nat:11> $ , $ <var:z> = <nat:6> $ , $ <var:X> = <nat:12> $ , $ <var:b> = <nat:8> $ , $ <var:Q> = <nat:7> $ , $ <var:l> = <nat:3> $ , $ <var:G> = <nat:9> $ . Observe that $ <var:z> \times <var:G> \times <var:U> \times <var:Q> \times <var:X> \times <var:l> \times <var:b> = <nat:6> \times <nat:9> \times <nat:11> \times <nat:7> \times <nat:12> \times <nat:3> \times <nat:8> = <nat:1197504> $ . What's more note $ <nat:12> $ , $ <nat:8> $ , $ <nat:7> $ , $ <nat:11> $ , $ <nat:6> $ , $ <nat:3> $ and $ <nat:9> \geq <nat:2> $ . This gives our result is valid . \end{proof} \end{document} 
~
Require Import Lia . Theorem <genP:1> : exists <var:U> <var:z> <var:l> <var:X> <var:Q> <var:G> <var:b> : nat , ( <var:X> >= <nat:2> ) /\ ( <var:z> >= <nat:2> ) /\ ( <var:U> >= <nat:2> ) /\ ( <var:b> >= <nat:2> ) /\ ( <var:G> >= <nat:2> ) /\ ( <var:l> >= <nat:2> ) /\ ( <var:Q> >= <nat:2> ) /\ ( <nat:1197504> = <var:U> * <var:z> * <var:l> * <var:X> * <var:Q> * <var:G> * <var:b> ) . Proof . exists <nat:11> . exists <nat:6> . exists <nat:3> . exists <nat:12> . exists <nat:7> . exists <nat:9> . exists <nat:8> . assert ( <genH> : <nat:12> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:8> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:7> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:11> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:6> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:3> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:9> >= <nat:2> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 