\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \newtheorem{definition}{Definition} \begin{document} \begin{definition} Let $ <var:t> $ , $ <var:J> $ , $ <var:W> $ , $ <var:K> $ , $ <var:u> $ , $ <var:U> $ , $ <var:H> $ , $ <var:A> $ , $ <var:l> $ be natural numbers larger than or equivalent to <nat:2> . Claim that some whole number $ <var:M> $ will be considered <def:nine-composite> when $ <var:J> \cdot <var:A> \cdot <var:l> \cdot <var:K> \cdot <var:H> \cdot <var:t> \cdot <var:u> \cdot <var:W> \cdot <var:U> = <var:M> $ . \end{definition} \begin{theorem} The number <nat:103783680> is a <def:nine-composite> whole number . \end{theorem} \begin{proof} Assume $ <var:u> = <nat:13> $ , $ <var:W> = <nat:4> $ , $ <var:t> = <nat:7> $ , $ <var:H> = <nat:9> $ , $ <var:K> = <nat:8> $ , $ <var:J> = <nat:11> $ , $ <var:l> = <nat:5> $ , $ <var:U> = <nat:6> $ , and $ <var:A> = <nat:12> $ . Notice $ <var:W> = <nat:4> $ , $ <var:U> = <nat:6> $ , $ <var:K> = <nat:8> $ , $ <var:H> = <nat:9> $ , $ <var:J> = <nat:11> $ , $ <var:t> = <nat:7> $ , $ <var:u> = <nat:13> $ , $ <var:l> = <nat:5> $ and $ <var:A> = <nat:12> \geq <nat:2> $ . Further notice likewise $ <var:W> \times <var:u> \times <var:A> \times <var:H> \times <var:K> \times <var:l> \times <var:U> \times <var:t> \times <var:J> = <nat:103783680> $ . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:nine-composite> ( <var:M> : nat ) := exists <var:t> <var:J> <var:W> <var:K> <var:u> <var:U> <var:H> <var:A> <var:l> : nat , ( <var:t> >= <nat:2> ) /\ ( <var:J> >= <nat:2> ) /\ ( <var:W> >= <nat:2> ) /\ ( <var:K> >= <nat:2> ) /\ ( <var:u> >= <nat:2> ) /\ ( <var:U> >= <nat:2> ) /\ ( <var:H> >= <nat:2> ) /\ ( <var:A> >= <nat:2> ) /\ ( <var:l> >= <nat:2> ) /\ ( <var:J> * <var:A> * <var:l> * <var:K> * <var:H> * <var:t> * <var:u> * <var:W> * <var:U> = <var:M> ) . Theorem <genP:1> : <def:nine-composite> <nat:103783680> . Proof . unfold <def:nine-composite> . exists <nat:7> . exists <nat:11> . exists <nat:4> . exists <nat:8> . exists <nat:13> . exists <nat:6> . exists <nat:9> . exists <nat:12> . exists <nat:5> . assert ( <genH> : <nat:4> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:6> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:8> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:9> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:11> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:7> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:13> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:5> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:12> >= <nat:2> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 