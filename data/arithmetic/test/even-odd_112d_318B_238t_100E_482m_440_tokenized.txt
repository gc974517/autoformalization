\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:440> + <var:B> <nat:318> + <nat:482> <var:m> + <var:d> <nat:112> + <nat:238> <var:t> + <nat:100> <var:E> $ must be even assuming every unknowns $ <var:d> $ , $ <var:B> $ , $ <var:m> $ , $ <var:t> $ , and $ <var:E> $ . \end{theorem} \begin{proof} It can be proven that $ <var:d> * <nat:112> + <var:B> * <nat:318> + <nat:238> * <var:t> + <nat:100> * <var:E> + <var:m> * <nat:482> + <nat:440> $ is guaranteed to be even . Recall that $ <nat:440> $ is guaranteed to be even . The terms $ <nat:112> \times <var:d> $ , $ <nat:318> \times <var:B> $ , $ <nat:238> \times <var:t> $ , $ <var:E> \times <nat:100> $ , $ <var:m> \times <nat:482> $ , must be even from the fact the multiplication between an even element of $ \mathbb{Z}^+ $ and some element of $ \mathbb{Z}^+ $ will be by itself an even number in $ \mathbb{Z}^+ $ additionally the leading terms $ <nat:112> $ , $ <nat:318> $ , $ <nat:238> $ , $ <nat:100> $ , $ <nat:482> $ , are guaranteed to be by themselves even naturals . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:d> <var:B> <var:m> <var:t> <var:E> : nat , Nat . even ( <nat:318> * <var:B> + <nat:482> * <var:m> + <nat:112> * <var:d> + <nat:238> * <var:t> + <nat:100> * <var:E> + <nat:440> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:440> = true ) . { auto . } assert ( <genH> : Nat . even <nat:112> = true ) . { auto . } assert ( <genH> : Nat . even <nat:318> = true ) . { auto . } assert ( <genH> : Nat . even <nat:238> = true ) . { auto . } assert ( <genH> : Nat . even <nat:100> = true ) . { auto . } assert ( <genH> : Nat . even <nat:482> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:112> * <var:d> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:318> * <var:B> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:238> * <var:t> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:100> * <var:E> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:482> * <var:m> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 