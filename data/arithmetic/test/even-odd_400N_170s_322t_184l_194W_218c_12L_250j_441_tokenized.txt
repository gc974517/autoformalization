\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:N> * <nat:400> + <nat:170> * <var:s> + <nat:322> * <var:t> + <nat:184> * <var:l> + <nat:194> * <var:W> + <nat:218> * <var:c> + <nat:12> * <var:L> + <nat:250> * <var:j> + <nat:441> $ is odd using all positive integers $ <var:W> $ , $ <var:L> $ , $ <var:s> $ , $ <var:N> $ , $ <var:j> $ , $ <var:l> $ , $ <var:t> $ , and $ <var:c> $ . \end{theorem} \begin{proof} Recall the product between even elements of $ \mathbb{Z}^+ $ must be even . The numbers $ <nat:322> $ , $ <nat:400> $ , $ <nat:250> $ , $ <nat:170> $ , and also $ <nat:218> $ are even elements of $ \mathbb{N} $ Recall the integers $ <nat:184> $ and likewise $ <nat:194> $ are even What's more , the coefficient $ <nat:12> $ is known to be even \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:W> <var:L> <var:s> <var:N> <var:j> <var:l> <var:t> <var:c> : nat , Nat . odd ( <nat:400> * <var:N> + <nat:170> * <var:s> + <nat:322> * <var:t> + <nat:184> * <var:l> + <nat:194> * <var:W> + <nat:218> * <var:c> + <nat:12> * <var:L> + <nat:250> * <var:j> + <nat:441> ) = true . Proof . intros . rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . repeat rewrite Nat . even_mul . assert ( <genH> : Nat . even <nat:322> = true ) . { auto . } assert ( <genH> : Nat . even <nat:400> = true ) . { auto . } assert ( <genH> : Nat . even <nat:250> = true ) . { auto . } assert ( <genH> : Nat . even <nat:170> = true ) . { auto . } assert ( <genH> : Nat . even <nat:218> = true ) . { auto . } assert ( <genH> : Nat . even <nat:184> = true ) . { auto . } assert ( <genH> : Nat . even <nat:194> = true ) . { auto . } assert ( <genH> : Nat . even <nat:12> = true ) . { auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 