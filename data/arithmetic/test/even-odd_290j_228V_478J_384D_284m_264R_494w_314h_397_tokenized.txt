\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:290> <var:j> + <nat:228> <var:V> + <nat:478> <var:J> + <nat:384> <var:D> + <nat:397> + <nat:284> <var:m> + <var:R> <nat:264> + <var:w> <nat:494> + <nat:314> <var:h> $ is odd . \end{theorem} \begin{proof} Likewise , the pairs $ <var:j> <nat:290> $ , $ <var:V> <nat:228> $ , $ <var:J> <nat:478> $ , $ <var:D> <nat:384> $ , $ <nat:284> <var:m> $ , $ <var:R> <nat:264> $ , $ <var:w> <nat:494> $ , and also $ <nat:314> <var:h> $ are trivially even by reason that the whole numbers $ <nat:290> $ , $ <nat:228> $ , $ <nat:478> $ , $ <nat:384> $ , $ <nat:284> $ , $ <nat:264> $ , $ <nat:494> $ , in addition to $ <nat:314> $ are guaranteed to be even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:j> <var:V> <var:J> <var:D> <var:m> <var:R> <var:w> <var:h> : nat , Nat . odd ( <nat:290> * <var:j> + <nat:228> * <var:V> + <nat:478> * <var:J> + <nat:384> * <var:D> + <nat:284> * <var:m> + <nat:264> * <var:R> + <nat:494> * <var:w> + <nat:314> * <var:h> + <nat:397> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:290> = true ) . { auto . } assert ( <genH> : Nat . even <nat:228> = true ) . { auto . } assert ( <genH> : Nat . even <nat:478> = true ) . { auto . } assert ( <genH> : Nat . even <nat:384> = true ) . { auto . } assert ( <genH> : Nat . even <nat:284> = true ) . { auto . } assert ( <genH> : Nat . even <nat:264> = true ) . { auto . } assert ( <genH> : Nat . even <nat:494> = true ) . { auto . } assert ( <genH> : Nat . even <nat:314> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:290> * <var:j> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:228> * <var:V> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:478> * <var:J> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:384> * <var:D> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:284> * <var:m> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:264> * <var:R> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:494> * <var:w> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:314> * <var:h> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 