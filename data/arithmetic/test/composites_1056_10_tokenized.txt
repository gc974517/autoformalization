\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \newtheorem{definition}{Definition} \begin{document} \begin{definition} Take that $ <var:T> $ is a <def:ten-composite> integer granted that given some whole numbers $ <var:p> $ , $ <var:h> $ , $ <var:V> $ , $ <var:q> $ , $ <var:i> $ , $ <var:w> $ , $ <var:Z> $ , $ <var:I> $ , $ <var:s> $ , $ <var:W> $ we get $ <var:T> = <var:I> * <var:W> * <var:s> * <var:Z> * <var:V> * <var:p> * <var:q> * <var:i> * <var:h> * <var:w> $ assuming some number $ <var:T> $ plus such that $ <var:Z> $ , $ <var:i> $ , $ <var:V> $ , $ <var:w> $ , $ <var:p> $ , $ <var:q> $ , $ <var:I> $ , $ <var:s> $ , $ <var:W> $ , $ <var:h> \geq <nat:2> $ . \end{definition} \begin{theorem} $ <nat:79833600> = <var:T> $ is a <def:ten-composite> positive integer . \end{theorem} \begin{proof} Remember <nat:79833600> is a <def:ten-composite> whole number iff <nat:79833600> is the product of numbers $ <var:Z> $ , $ <var:s> $ , $ <var:I> $ , $ <var:W> $ , $ <var:p> $ , $ <var:w> $ , $ <var:h> $ , $ <var:V> $ , $ <var:i> $ , and $ <var:q> $ greater than or equal to <nat:2> . We justify <nat:79833600> is a <def:ten-composite> whole number because $ <nat:12> $ , $ <nat:4> $ , $ <nat:7> $ , $ <nat:10> $ , $ <nat:9> $ , $ <nat:8> $ , $ <nat:5> $ , $ <nat:3> $ , $ <nat:11> $ , $ <nat:2> \geq <nat:2> $ plus as $ <nat:79833600> = <nat:4> * <nat:12> * <nat:5> * <nat:11> * <nat:2> * <nat:8> * <nat:10> * <nat:7> * <nat:9> * <nat:3> $ . So , <nat:79833600> is a <def:ten-composite> whole number is proven . Hence , $ <var:V> \times <var:i> \times <var:p> \times <var:s> \times <var:Z> \times <var:W> \times <var:I> \times <var:h> \times <var:q> \times <var:w> = <nat:79833600> $ plus $ <var:q> $ , $ <var:s> $ , $ <var:p> $ , $ <var:I> $ , $ <var:W> $ , $ <var:Z> $ , $ <var:V> $ , $ <var:i> $ , $ <var:w> $ and $ <var:h> $ are greater than or equal to <nat:2> is true has been proven . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:ten-composite> ( <var:T> : nat ) := exists <var:p> <var:h> <var:V> <var:q> <var:i> <var:w> <var:Z> <var:I> <var:s> <var:W> : nat , ( <var:T> = <var:I> * <var:W> * <var:s> * <var:Z> * <var:V> * <var:p> * <var:q> * <var:i> * <var:h> * <var:w> ) /\ ( <var:Z> >= <nat:2> ) /\ ( <var:i> >= <nat:2> ) /\ ( <var:V> >= <nat:2> ) /\ ( <var:w> >= <nat:2> ) /\ ( <var:p> >= <nat:2> ) /\ ( <var:q> >= <nat:2> ) /\ ( <var:I> >= <nat:2> ) /\ ( <var:s> >= <nat:2> ) /\ ( <var:W> >= <nat:2> ) /\ ( <var:h> >= <nat:2> ) . Theorem <genP:1> : <def:ten-composite> <nat:79833600> . Proof . unfold <def:ten-composite> . assert ( <genH> : <nat:12> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:4> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:7> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:10> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:9> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:8> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:5> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:3> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:11> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:2> >= <nat:2> ) . { lia . } exists <nat:4> . exists <nat:11> . exists <nat:10> . exists <nat:5> . exists <nat:8> . exists <nat:7> . exists <nat:9> . exists <nat:2> . exists <nat:12> . exists <nat:3> . repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 