\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:y> \cdot <nat:116> + <var:E> \cdot <nat:164> + <var:I> \cdot <nat:308> + <nat:192> \cdot <var:n> + <nat:32> \cdot <var:S> + <var:d> \cdot <nat:486> + <var:Z> \cdot <nat:28> + <nat:220> + <var:G> \cdot <nat:430> + <var:L> \cdot <nat:48> + <nat:296> \cdot <var:X> $ will be even given $ <var:L> $ , $ <var:I> $ , $ <var:n> $ , $ <var:E> $ , $ <var:X> $ , $ <var:Z> $ , $ <var:d> $ , $ <var:y> $ , $ <var:S> $ , and $ <var:G> $ . \end{theorem} \begin{proof} We justify the summation $ <nat:430> \cdot <var:G> + <nat:308> \cdot <var:I> + <var:n> \cdot <nat:192> + <var:d> \cdot <nat:486> + <nat:116> \cdot <var:y> + <var:X> \cdot <nat:296> + <nat:164> \cdot <var:E> + <var:L> \cdot <nat:48> + <nat:220> + <nat:32> \cdot <var:S> + <nat:28> \cdot <var:Z> $ is guaranteed to be even . We know that $ <nat:220> $ is known as an even number in $ \mathbb{N} $ . We use that $ <var:n> \times <nat:192> + <var:L> \times <nat:48> + <nat:32> \times <var:S> + <var:y> \times <nat:116> + <nat:308> \times <var:I> + <nat:296> \times <var:X> + <nat:486> \times <var:d> + <var:E> \times <nat:164> + <nat:430> \times <var:G> + <var:Z> \times <nat:28> $ is guaranteed to be even . On top of this , notice that the terms $ <var:n> <nat:192> $ , $ <nat:48> <var:L> $ , $ <nat:32> <var:S> $ , $ <var:y> <nat:116> $ , $ <var:I> <nat:308> $ , $ <var:X> <nat:296> $ , $ <var:d> <nat:486> $ , $ <nat:164> <var:E> $ , $ <var:G> <nat:430> $ , and $ <var:Z> <nat:28> $ are known as even positive integers since taking the product between an even positive integer and some element of $ \mathbb{Z}^+ $ is guaranteed to be even . This is true as a consequence that the coefficients $ <nat:192> $ , $ <nat:48> $ , $ <nat:32> $ , $ <nat:116> $ , $ <nat:308> $ , $ <nat:296> $ , $ <nat:486> $ , $ <nat:164> $ , $ <nat:430> $ , in addition to $ <nat:28> $ are guaranteed to be obviously even whole numbers . As a consequence that the summation between an even element of $ \mathbb{N} $ and even elements of $ \mathbb{N} $ is guaranteed to be even , plus from the fact the product between an even number and an arbitrary positive integer is guaranteed to be even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:L> <var:I> <var:n> <var:E> <var:X> <var:Z> <var:d> <var:y> <var:S> <var:G> : nat , Nat . even ( <nat:116> * <var:y> + <nat:164> * <var:E> + <nat:308> * <var:I> + <nat:192> * <var:n> + <nat:32> * <var:S> + <nat:486> * <var:d> + <nat:28> * <var:Z> + <nat:430> * <var:G> + <nat:48> * <var:L> + <nat:296> * <var:X> + <nat:220> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:220> = true ) . { auto . } assert ( <genH> : Nat . even <nat:192> = true ) . { auto . } assert ( <genH> : Nat . even <nat:48> = true ) . { auto . } assert ( <genH> : Nat . even <nat:32> = true ) . { auto . } assert ( <genH> : Nat . even <nat:116> = true ) . { auto . } assert ( <genH> : Nat . even <nat:308> = true ) . { auto . } assert ( <genH> : Nat . even <nat:296> = true ) . { auto . } assert ( <genH> : Nat . even <nat:486> = true ) . { auto . } assert ( <genH> : Nat . even <nat:164> = true ) . { auto . } assert ( <genH> : Nat . even <nat:430> = true ) . { auto . } assert ( <genH> : Nat . even <nat:28> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:192> * <var:n> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:48> * <var:L> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:32> * <var:S> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:116> * <var:y> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:308> * <var:I> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:296> * <var:X> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:486> * <var:d> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:164> * <var:E> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:430> * <var:G> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:28> * <var:Z> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:116> * <var:y> + <nat:164> * <var:E> + <nat:308> * <var:I> + <nat:192> * <var:n> + <nat:32> * <var:S> + <nat:486> * <var:d> + <nat:28> * <var:Z> + <nat:430> * <var:G> + <nat:48> * <var:L> + <nat:296> * <var:X> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . auto . Qed . 