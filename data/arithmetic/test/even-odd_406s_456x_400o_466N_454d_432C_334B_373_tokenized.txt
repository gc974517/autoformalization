\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:N> \times <nat:466> + <var:C> \times <nat:432> + <var:B> \times <nat:334> + <nat:400> \times <var:o> + <nat:373> + <var:x> \times <nat:456> + <nat:406> \times <var:s> + <var:d> \times <nat:454> $ must be odd . \end{theorem} \begin{proof} The integer $ <nat:406> $ is an even natural . For this reason , $ <nat:406> * <var:s> $ will be even at the same time . In addition , observe the integer $ <nat:456> $ is clearly even . Hence , $ <nat:456> * <var:x> $ is even also . The whole number $ <nat:400> $ is an even natural . Thus , the product $ <nat:400> * <var:o> $ must be even in addition . Further , the natural number $ <nat:466> $ is trivially even . Then , the pair $ <var:N> * <nat:466> $ is guaranteed to be even additionally . Notice that $ <var:d> * <nat:454> $ is clearly even . This claim must be true since the natural number $ <nat:454> $ is obviously even . On top of this , remember that the coefficient $ <nat:432> $ is obviously even . So , $ <var:C> * <nat:432> $ is even also . Building on , see that the term $ <nat:334> * <var:B> $ is clearly an even number in $ \mathbb{Z}^+ $ . This fact holds from the fact the leading term $ <nat:334> $ is guaranteed to be even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:N> <var:C> <var:B> <var:o> <var:x> <var:s> <var:d> : nat , Nat . odd ( <nat:466> * <var:N> + <nat:432> * <var:C> + <nat:334> * <var:B> + <nat:400> * <var:o> + <nat:456> * <var:x> + <nat:406> * <var:s> + <nat:454> * <var:d> + <nat:373> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:406> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:406> * <var:s> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:456> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:456> * <var:x> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:400> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:400> * <var:o> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:466> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:466> * <var:N> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:454> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:454> * <var:d> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:432> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:432> * <var:C> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:334> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:334> * <var:B> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 