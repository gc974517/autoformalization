\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:78> \cdot <var:y> + <nat:290> \cdot <var:R> + <nat:314> \cdot <var:h> + <nat:236> \cdot <var:p> + <nat:483> + <var:s> \cdot <nat:456> + <var:b> \cdot <nat:424> + <nat:388> \cdot <var:a> + <var:A> \cdot <nat:128> + <nat:306> \cdot <var:L> $ must be odd . \end{theorem} \begin{proof} The summing of an even integer and an odd natural number must be an odd positive integer . We employ the fact $ <nat:314> * <var:h> + <nat:236> * <var:p> + <nat:388> * <var:a> + <var:A> * <nat:128> + <var:L> * <nat:306> + <var:y> * <nat:78> + <nat:290> * <var:R> + <var:s> * <nat:456> + <var:b> * <nat:424> $ is even . The positive integers $ <nat:78> $ , $ <nat:290> $ , $ <nat:456> $ , $ <nat:236> $ , $ <nat:314> $ , $ <nat:388> $ , and $ <nat:424> $ will be even The whole number $ <nat:306> $ is known as an even natural number The whole number $ <nat:128> $ is trivially even The expression $ <var:R> <nat:290> + <var:p> <nat:236> + <var:a> <nat:388> + <var:A> <nat:128> + <var:L> <nat:306> + <nat:314> <var:h> + <var:y> <nat:78> + <nat:424> <var:b> + <var:s> <nat:456> $ will be even because the adding of even whole numbers with even numbers will be clearly an even positive integer . It can be shown that our proposition is true . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:y> <var:R> <var:h> <var:p> <var:s> <var:b> <var:a> <var:A> <var:L> : nat , Nat . odd ( <nat:78> * <var:y> + <nat:290> * <var:R> + <nat:314> * <var:h> + <nat:236> * <var:p> + <nat:456> * <var:s> + <nat:424> * <var:b> + <nat:388> * <var:a> + <nat:128> * <var:A> + <nat:306> * <var:L> + <nat:483> ) = true . Proof . intros . rewrite Nat . odd_add . assert ( <genH> : Nat . even <nat:78> = true ) . { auto . } assert ( <genH> : Nat . even <nat:290> = true ) . { auto . } assert ( <genH> : Nat . even <nat:456> = true ) . { auto . } assert ( <genH> : Nat . even <nat:236> = true ) . { auto . } assert ( <genH> : Nat . even <nat:314> = true ) . { auto . } assert ( <genH> : Nat . even <nat:388> = true ) . { auto . } assert ( <genH> : Nat . even <nat:424> = true ) . { auto . } assert ( <genH> : Nat . even <nat:306> = true ) . { auto . } assert ( <genH> : Nat . even <nat:128> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:78> * <var:y> + <nat:290> * <var:R> + <nat:314> * <var:h> + <nat:236> * <var:p> + <nat:456> * <var:s> + <nat:424> * <var:b> + <nat:388> * <var:a> + <nat:128> * <var:A> + <nat:306> * <var:L> ) = true ) . { repeat rewrite Nat . even_add . repeat rewrite Nat . even_mul . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite <- Nat . negb_even . rewrite <genH> . auto . Qed . 