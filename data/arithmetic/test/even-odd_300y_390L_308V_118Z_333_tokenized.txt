\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:V> \times <nat:308> + <nat:390> \times <var:L> + <nat:333> + <var:Z> \times <nat:118> + <var:y> \times <nat:300> $ will be odd for all positive terms $ <var:L> $ , $ <var:y> $ , $ <var:Z> $ , and $ <var:V> $ . \end{theorem} \begin{proof} This main result holds since $ <var:y> <nat:300> + <nat:390> <var:L> + <nat:308> <var:V> + <nat:118> <var:Z> $ is obviously even . Observe the terms $ <var:Z> \cdot <nat:118> $ and moreover $ <var:y> \cdot <nat:300> $ are known as even whole numbers . This fact holds from the knowledge multiplying of an even whole number and some number in $ \mathbb{Z}^+ $ must be an even element of $ \mathbb{Z}^+ $ . The term $ <var:L> \cdot <nat:390> $ is obviously even . What's more , take note the pair $ <nat:308> \cdot <var:V> $ is an even positive integer . See that $ <nat:333> $ is known to be odd . Notice the adding of even positive integers together and an odd natural is an odd natural number . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:L> <var:y> <var:Z> <var:V> : nat , Nat . odd ( <nat:308> * <var:V> + <nat:390> * <var:L> + <nat:118> * <var:Z> + <nat:300> * <var:y> + <nat:333> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:118> * <var:Z> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:300> * <var:y> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:390> * <var:L> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:308> * <var:V> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:308> * <var:V> + <nat:390> * <var:L> + <nat:118> * <var:Z> + <nat:300> * <var:y> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } assert ( <genH> : Nat . odd <nat:333> = true ) . { auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . rewrite <genH> . auto . Qed . 