\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:w> <nat:302> + <var:D> <nat:480> + <var:s> <nat:136> + <nat:383> + <var:J> <nat:498> + <nat:116> <var:b> + <var:t> <nat:276> + <nat:124> <var:A> + <nat:448> <var:p> + <var:j> <nat:420> + <var:u> <nat:200> + <nat:408> <var:x> $ will be odd using $ <var:p> $ , $ <var:A> $ , $ <var:s> $ , $ <var:w> $ , $ <var:D> $ , $ <var:j> $ , $ <var:J> $ , $ <var:b> $ , $ <var:t> $ , $ <var:u> $ , and $ <var:x> $ . \end{theorem} \begin{proof} It can be justified that the expression $ <var:w> \cdot <nat:302> + <nat:124> \cdot <var:A> + <nat:136> \cdot <var:s> + <var:b> \cdot <nat:116> + <var:j> \cdot <nat:420> + <nat:498> \cdot <var:J> + <var:p> \cdot <nat:448> + <var:x> \cdot <nat:408> + <var:D> \cdot <nat:480> + <var:u> \cdot <nat:200> + <var:t> \cdot <nat:276> $ is trivially even . Observe the coefficients $ <nat:302> $ , $ <nat:124> $ , $ <nat:136> $ , $ <nat:116> $ , $ <nat:420> $ , $ <nat:498> $ , $ <nat:448> $ , $ <nat:408> $ , $ <nat:480> $ , $ <nat:200> $ , $ <nat:276> $ , are even . Thus , the terms $ <nat:302> * <var:w> $ , $ <var:A> * <nat:124> $ , $ <var:s> * <nat:136> $ , $ <var:b> * <nat:116> $ , $ <var:j> * <nat:420> $ , $ <nat:498> * <var:J> $ , $ <nat:448> * <var:p> $ , $ <var:x> * <nat:408> $ , $ <nat:480> * <var:D> $ , $ <var:u> * <nat:200> $ , $ <var:t> * <nat:276> $ , must be even as well . Remember that $ <nat:383> $ is known as odd . We prove our lemma holds . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:p> <var:A> <var:s> <var:w> <var:D> <var:j> <var:J> <var:b> <var:t> <var:u> <var:x> : nat , Nat . odd ( <nat:302> * <var:w> + <nat:480> * <var:D> + <nat:136> * <var:s> + <nat:498> * <var:J> + <nat:116> * <var:b> + <nat:276> * <var:t> + <nat:124> * <var:A> + <nat:448> * <var:p> + <nat:420> * <var:j> + <nat:200> * <var:u> + <nat:408> * <var:x> + <nat:383> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:302> = true ) . { auto . } assert ( <genH> : Nat . even <nat:124> = true ) . { auto . } assert ( <genH> : Nat . even <nat:136> = true ) . { auto . } assert ( <genH> : Nat . even <nat:116> = true ) . { auto . } assert ( <genH> : Nat . even <nat:420> = true ) . { auto . } assert ( <genH> : Nat . even <nat:498> = true ) . { auto . } assert ( <genH> : Nat . even <nat:448> = true ) . { auto . } assert ( <genH> : Nat . even <nat:408> = true ) . { auto . } assert ( <genH> : Nat . even <nat:480> = true ) . { auto . } assert ( <genH> : Nat . even <nat:200> = true ) . { auto . } assert ( <genH> : Nat . even <nat:276> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:302> * <var:w> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:124> * <var:A> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:136> * <var:s> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:116> * <var:b> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:420> * <var:j> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:498> * <var:J> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:448> * <var:p> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:408> * <var:x> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:480> * <var:D> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:200> * <var:u> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:276> * <var:t> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:302> * <var:w> + <nat:480> * <var:D> + <nat:136> * <var:s> + <nat:498> * <var:J> + <nat:116> * <var:b> + <nat:276> * <var:t> + <nat:124> * <var:A> + <nat:448> * <var:p> + <nat:420> * <var:j> + <nat:200> * <var:u> + <nat:408> * <var:x> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } assert ( <genH> : Nat . odd <nat:383> = true ) . { auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . rewrite <genH> . auto . Qed . 