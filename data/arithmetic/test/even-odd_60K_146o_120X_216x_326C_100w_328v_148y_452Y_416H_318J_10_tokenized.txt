\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:10> + <var:K> \cdot <nat:60> + <var:o> \cdot <nat:146> + <nat:120> \cdot <var:X> + <var:x> \cdot <nat:216> + <var:C> \cdot <nat:326> + <var:w> \cdot <nat:100> + <nat:328> \cdot <var:v> + <var:y> \cdot <nat:148> + <nat:452> \cdot <var:Y> + <var:H> \cdot <nat:416> + <nat:318> \cdot <var:J> $ will be even . \end{theorem} \begin{proof} Recall the products $ <nat:146> * <var:o> $ , $ <nat:326> * <var:C> $ , $ <nat:120> * <var:X> $ , $ <var:J> * <nat:318> $ , $ <nat:452> * <var:Y> $ , $ <nat:60> * <var:K> $ , additionally $ <var:v> * <nat:328> $ will be even whole numbers . This holds because multiplying between an even integer and a natural must be itself an even whole number . Building on , recall the pairs $ <var:w> * <nat:100> $ and also $ <var:y> * <nat:148> $ are even integers . This claim must be true because the product between an even element of $ \mathbb{N} $ and a natural number is guaranteed to be an even number . Additionally , $ <var:H> * <nat:416> $ is obviously an even element of $ \mathbb{Z}^+ $ because the product of an even positive integer with any natural number must be even . The term $ <var:x> * <nat:216> $ is obviously an even positive integer since taking the product between an even element of $ \mathbb{N} $ and some natural will be even . We demonstrate the proposition must be true . Observe that $ <nat:10> $ is an even natural . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:K> <var:o> <var:X> <var:x> <var:C> <var:w> <var:v> <var:y> <var:Y> <var:H> <var:J> : nat , Nat . even ( <nat:60> * <var:K> + <nat:146> * <var:o> + <nat:120> * <var:X> + <nat:216> * <var:x> + <nat:326> * <var:C> + <nat:100> * <var:w> + <nat:328> * <var:v> + <nat:148> * <var:y> + <nat:452> * <var:Y> + <nat:416> * <var:H> + <nat:318> * <var:J> + <nat:10> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:146> * <var:o> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:326> * <var:C> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:120> * <var:X> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:318> * <var:J> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:452> * <var:Y> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:60> * <var:K> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:328> * <var:v> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:100> * <var:w> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:148> * <var:y> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:416> * <var:H> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:216> * <var:x> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even <nat:10> = true ) . { auto . } repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 