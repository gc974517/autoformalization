\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:119> + <nat:28> \times <var:F> + <nat:82> \times <var:a> + <var:w> \times <nat:34> + <var:r> \times <nat:56> + <var:K> \times <nat:290> + <nat:148> \times <var:t> + <var:y> \times <nat:364> + <var:P> \times <nat:70> + <nat:418> \times <var:p> + <var:S> \times <nat:96> + <nat:248> \times <var:f> $ will be odd with all $ <var:t> $ , $ <var:f> $ , $ <var:a> $ , $ <var:S> $ , $ <var:K> $ , $ <var:P> $ , $ <var:F> $ , $ <var:y> $ , $ <var:p> $ , $ <var:w> $ , and $ <var:r> \in \mathbb{N} $ . \end{theorem} \begin{proof} See the pairs $ <nat:364> \cdot <var:y> $ , $ <nat:56> \cdot <var:r> $ , $ <nat:34> \cdot <var:w> $ , $ <nat:82> \cdot <var:a> $ , $ <var:t> \cdot <nat:148> $ , $ <nat:28> \cdot <var:F> $ , additionally $ <var:S> \cdot <nat:96> $ are clearly even positive integers . This must be true by reason that the product of an even element of $ \mathbb{N} $ with an arbitrary number is guaranteed to be an even element of $ \mathbb{Z}^+ $ . Likewise , notice that the pair $ <nat:70> \cdot <var:P> $ is clearly an even positive integer . The product $ <nat:248> \cdot <var:f> $ is trivially even . What's more , $ <var:p> \cdot <nat:418> $ is clearly an even natural number . The pair $ <nat:290> \cdot <var:K> $ is trivially even . This fact holds from the fact multiplying of an even number and an arbitrary element of $ \mathbb{Z}^+ $ must be an even element of $ \mathbb{N} $ . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:t> <var:f> <var:a> <var:S> <var:K> <var:P> <var:F> <var:y> <var:p> <var:w> <var:r> : nat , Nat . odd ( <nat:28> * <var:F> + <nat:82> * <var:a> + <nat:34> * <var:w> + <nat:56> * <var:r> + <nat:290> * <var:K> + <nat:148> * <var:t> + <nat:364> * <var:y> + <nat:70> * <var:P> + <nat:418> * <var:p> + <nat:96> * <var:S> + <nat:248> * <var:f> + <nat:119> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:364> * <var:y> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:56> * <var:r> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:34> * <var:w> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:82> * <var:a> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:148> * <var:t> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:28> * <var:F> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:96> * <var:S> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:70> * <var:P> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:248> * <var:f> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:418> * <var:p> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:290> * <var:K> ) = true ) . { rewrite Nat . even_mul . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 