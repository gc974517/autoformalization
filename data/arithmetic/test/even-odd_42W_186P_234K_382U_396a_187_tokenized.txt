\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:U> \cdot <nat:382> + <var:K> \cdot <nat:234> + <var:P> \cdot <nat:186> + <nat:42> \cdot <var:W> + <nat:187> + <var:a> \cdot <nat:396> $ is guaranteed to be odd . \end{theorem} \begin{proof} Take note $ <var:W> \times <nat:42> + <var:P> \times <nat:186> + <var:K> \times <nat:234> + <nat:382> \times <var:U> + <var:a> \times <nat:396> $ is even . Notice that the pairs $ <var:W> \times <nat:42> $ , $ <var:U> \times <nat:382> $ , $ <var:a> \times <nat:396> $ , and moreover $ <var:K> \times <nat:234> $ are obviously even natural numbers . The pair $ <nat:186> \times <var:P> $ is known to be even since the multiplication of an even integer and some number in $ \mathbb{Z}^+ $ must be even . Since the totaling of even elements of $ \mathbb{N} $ with even elements of $ \mathbb{N} $ is even , our claim must be true . The summation between an even whole number and an odd natural number will be in itself an odd natural . Notice $ <nat:187> $ is an odd number in $ \mathbb{N} $ . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:U> <var:K> <var:P> <var:W> <var:a> : nat , Nat . odd ( <nat:382> * <var:U> + <nat:234> * <var:K> + <nat:186> * <var:P> + <nat:42> * <var:W> + <nat:396> * <var:a> + <nat:187> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:42> * <var:W> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:382> * <var:U> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:396> * <var:a> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:234> * <var:K> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:186> * <var:P> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:382> * <var:U> + <nat:234> * <var:K> + <nat:186> * <var:P> + <nat:42> * <var:W> + <nat:396> * <var:a> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . assert ( <genH> : Nat . odd <nat:187> = true ) . { auto . } rewrite <- Nat . negb_even . rewrite <genH> . rewrite <genH> . auto . Qed . 