\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Taking some variables $ <var:m> $ , $ <var:j> $ , $ <var:B> $ , $ <var:n> $ , $ <var:g> $ , $ <var:P> $ , $ <var:b> $ , and $ <var:Y> $ the summation $ <nat:268> \cdot <var:m> + <nat:364> \cdot <var:Y> + <nat:190> \cdot <var:n> + <var:b> \cdot <nat:168> + <var:j> \cdot <nat:270> + <var:P> \cdot <nat:60> + <nat:318> \cdot <var:g> + <var:B> \cdot <nat:36> + <nat:131> $ must be odd . \end{theorem} \begin{proof} We justify that the summation $ <nat:270> * <var:j> + <var:P> * <nat:60> + <nat:364> * <var:Y> + <nat:268> * <var:m> + <var:b> * <nat:168> + <var:g> * <nat:318> + <var:n> * <nat:190> + <nat:36> * <var:B> $ is known to be even . Remember that the addition of an even element of $ \mathbb{N} $ with an even integer must be an even integer . The terms $ <var:n> <nat:190> $ , $ <nat:36> <var:B> $ , $ <nat:60> <var:P> $ , $ <nat:364> <var:Y> $ , $ <nat:318> <var:g> $ , $ <nat:268> <var:m> $ , plus $ <nat:168> <var:b> $ are obviously even . The term $ <nat:270> <var:j> $ is trivially an even positive integer . The addition of even elements of $ \mathbb{N} $ concurrently with an odd number in $ \mathbb{Z}^+ $ is odd . As a consequence , our result holds . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:m> <var:j> <var:B> <var:n> <var:g> <var:P> <var:b> <var:Y> : nat , Nat . odd ( <nat:268> * <var:m> + <nat:364> * <var:Y> + <nat:190> * <var:n> + <nat:168> * <var:b> + <nat:270> * <var:j> + <nat:60> * <var:P> + <nat:318> * <var:g> + <nat:36> * <var:B> + <nat:131> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:190> * <var:n> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:36> * <var:B> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:60> * <var:P> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:364> * <var:Y> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:318> * <var:g> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:268> * <var:m> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:168> * <var:b> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:270> * <var:j> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:268> * <var:m> + <nat:364> * <var:Y> + <nat:190> * <var:n> + <nat:168> * <var:b> + <nat:270> * <var:j> + <nat:60> * <var:P> + <nat:318> * <var:g> + <nat:36> * <var:B> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . auto . Qed . 