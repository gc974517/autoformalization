\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:L> <nat:172> + <nat:80> <var:q> + <var:r> <nat:44> + <nat:292> <var:t> + <nat:365> $ is odd taking some whole numbers $ <var:t> $ , $ <var:q> $ , $ <var:L> $ , and $ <var:r> $ . \end{theorem} \begin{proof} We show that $ <nat:80> <var:q> + <var:t> <nat:292> + <var:L> <nat:172> + <nat:44> <var:r> + <nat:365> $ is guaranteed to be odd from the knowledge $ <var:t> <nat:292> + <var:L> <nat:172> + <nat:80> <var:q> + <var:r> <nat:44> $ is trivially even . The terms $ <nat:292> \times <var:t> $ , $ <nat:172> \times <var:L> $ , $ <nat:80> \times <var:q> $ , and moreover $ <nat:44> \times <var:r> $ must be even elements of $ \mathbb{N} $ . This is true from the knowledge the positive integers $ <nat:292> $ , $ <nat:172> $ , $ <nat:80> $ , and moreover $ <nat:44> $ are known to be even . The result must be true as a consequence that the summing between even numbers in $ \mathbb{N} $ and an even number in $ \mathbb{N} $ will be even and from the knowledge taking the product of an even natural with a natural must be even . We know that the addition between an even number in $ \mathbb{N} $ and an odd element of $ \mathbb{N} $ must be an odd natural number . Remember $ <nat:365> $ is known as an odd whole number . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:t> <var:q> <var:L> <var:r> : nat , Nat . odd ( <nat:172> * <var:L> + <nat:80> * <var:q> + <nat:44> * <var:r> + <nat:292> * <var:t> + <nat:365> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:292> = true ) . { auto . } assert ( <genH> : Nat . even <nat:172> = true ) . { auto . } assert ( <genH> : Nat . even <nat:80> = true ) . { auto . } assert ( <genH> : Nat . even <nat:44> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:292> * <var:t> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:172> * <var:L> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:80> * <var:q> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:44> * <var:r> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:172> * <var:L> + <nat:80> * <var:q> + <nat:44> * <var:r> + <nat:292> * <var:t> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . assert ( <genH> : Nat . odd <nat:365> = true ) . { auto . } rewrite <- Nat . negb_even . rewrite <genH> . rewrite <genH> . auto . Qed . 