\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:I> \cdot <nat:82> + <var:g> \cdot <nat:202> + <nat:198> \cdot <var:U> + <var:y> \cdot <nat:290> + <nat:480> \cdot <var:o> + <var:N> \cdot <nat:116> + <var:P> \cdot <nat:352> + <nat:467> + <var:i> \cdot <nat:304> + <var:t> \cdot <nat:2> + <nat:374> \cdot <var:X> $ is odd . \end{theorem} \begin{proof} The products $ <var:P> \times <nat:352> $ , $ <nat:2> \times <var:t> $ , $ <nat:290> \times <var:y> $ , additionally $ <nat:82> \times <var:I> $ are obviously even positive integers by reason that the multiplication of an even element of $ \mathbb{Z}^+ $ and an arbitrary number in $ \mathbb{Z}^+ $ will be even . In addition to this , see that the pairs $ <nat:304> \times <var:i> $ , $ <nat:374> \times <var:X> $ , $ <var:o> \times <nat:480> $ , $ <var:U> \times <nat:198> $ , and also $ <var:g> \times <nat:202> $ are guaranteed to be even numbers in $ \mathbb{Z}^+ $ . The product $ <var:N> \times <nat:116> $ is known as an even natural number . This fact is proven by reason that the multiplication of an even natural number with any element of $ \mathbb{N} $ will be even . The summation between an even number and an odd number in $ \mathbb{N} $ must be an odd natural . We know that $ <nat:467> $ is obviously odd . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:I> <var:g> <var:U> <var:y> <var:o> <var:N> <var:P> <var:i> <var:t> <var:X> : nat , Nat . odd ( <nat:82> * <var:I> + <nat:202> * <var:g> + <nat:198> * <var:U> + <nat:290> * <var:y> + <nat:480> * <var:o> + <nat:116> * <var:N> + <nat:352> * <var:P> + <nat:304> * <var:i> + <nat:2> * <var:t> + <nat:374> * <var:X> + <nat:467> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:352> * <var:P> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:2> * <var:t> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:290> * <var:y> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:82> * <var:I> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:304> * <var:i> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:374> * <var:X> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:480> * <var:o> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:198> * <var:U> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:202> * <var:g> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:116> * <var:N> ) = true ) . { rewrite Nat . even_mul . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . assert ( <genH> : Nat . odd <nat:467> = true ) . { auto . } rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 