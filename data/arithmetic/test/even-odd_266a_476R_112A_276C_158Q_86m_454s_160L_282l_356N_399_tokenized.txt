\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:a> * <nat:266> + <var:R> * <nat:476> + <nat:112> * <var:A> + <nat:399> + <var:C> * <nat:276> + <nat:158> * <var:Q> + <var:m> * <nat:86> + <var:s> * <nat:454> + <var:L> * <nat:160> + <var:l> * <nat:282> + <nat:356> * <var:N> $ is guaranteed to be odd using some positive terms $ <var:N> $ , $ <var:l> $ , $ <var:s> $ , $ <var:C> $ , $ <var:R> $ , $ <var:a> $ , $ <var:m> $ , $ <var:Q> $ , $ <var:A> $ , and $ <var:L> $ . \end{theorem} \begin{proof} Recall the terms $ <var:R> \times <nat:476> $ , $ <var:L> \times <nat:160> $ , $ <nat:282> \times <var:l> $ , $ <var:m> \times <nat:86> $ , $ <var:a> \times <nat:266> $ , $ <var:N> \times <nat:356> $ , and moreover $ <var:C> \times <nat:276> $ will be even . Additionally , notice that the products $ <nat:112> \times <var:A> $ additionally $ <nat:158> \times <var:Q> $ are clearly even . This fact is proven from the fact taking the product of an even integer with any natural is even . See that the term $ <nat:454> \times <var:s> $ is obviously an even number . Observe that $ <nat:399> $ is trivially odd . It can be justified that the result must be true . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:N> <var:l> <var:s> <var:C> <var:R> <var:a> <var:m> <var:Q> <var:A> <var:L> : nat , Nat . odd ( <nat:266> * <var:a> + <nat:476> * <var:R> + <nat:112> * <var:A> + <nat:276> * <var:C> + <nat:158> * <var:Q> + <nat:86> * <var:m> + <nat:454> * <var:s> + <nat:160> * <var:L> + <nat:282> * <var:l> + <nat:356> * <var:N> + <nat:399> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:476> * <var:R> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:160> * <var:L> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:282> * <var:l> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:86> * <var:m> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:266> * <var:a> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:356> * <var:N> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:276> * <var:C> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:112> * <var:A> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:158> * <var:Q> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:454> * <var:s> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . odd <nat:399> = true ) . { auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 