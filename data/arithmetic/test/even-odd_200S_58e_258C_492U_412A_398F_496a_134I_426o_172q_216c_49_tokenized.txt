\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:200> <var:S> + <nat:58> <var:e> + <nat:258> <var:C> + <nat:492> <var:U> + <nat:49> + <nat:412> <var:A> + <var:F> <nat:398> + <nat:496> <var:a> + <nat:134> <var:I> + <var:o> <nat:426> + <nat:172> <var:q> + <var:c> <nat:216> $ is guaranteed to be odd for positive numbers $ <var:F> $ , $ <var:o> $ , $ <var:A> $ , $ <var:q> $ , $ <var:C> $ , $ <var:U> $ , $ <var:S> $ , $ <var:I> $ , $ <var:a> $ , $ <var:c> $ , and $ <var:e> $ . \end{theorem} \begin{proof} The leading terms $ <nat:134> $ , $ <nat:496> $ , $ <nat:398> $ , $ <nat:412> $ , $ <nat:492> $ , $ <nat:426> $ , and likewise $ <nat:200> $ are obviously even Take note the whole numbers $ <nat:216> $ , $ <nat:258> $ , additionally $ <nat:58> $ are known to be even numbers Notice the positive integer $ <nat:172> $ is guaranteed to be even See that the summation of even elements of $ \mathbb{Z}^+ $ together with an odd element of $ \mathbb{N} $ will be odd . Observe multiplying of an even number in $ \mathbb{N} $ with an arbitrary integer is guaranteed to be itself an even number . We know that $ <nat:49> $ is an odd number in $ \mathbb{N} $ . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:F> <var:o> <var:A> <var:q> <var:C> <var:U> <var:S> <var:I> <var:a> <var:c> <var:e> : nat , Nat . odd ( <nat:200> * <var:S> + <nat:58> * <var:e> + <nat:258> * <var:C> + <nat:492> * <var:U> + <nat:412> * <var:A> + <nat:398> * <var:F> + <nat:496> * <var:a> + <nat:134> * <var:I> + <nat:426> * <var:o> + <nat:172> * <var:q> + <nat:216> * <var:c> + <nat:49> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:134> = true ) . { auto . } assert ( <genH> : Nat . even <nat:496> = true ) . { auto . } assert ( <genH> : Nat . even <nat:398> = true ) . { auto . } assert ( <genH> : Nat . even <nat:412> = true ) . { auto . } assert ( <genH> : Nat . even <nat:492> = true ) . { auto . } assert ( <genH> : Nat . even <nat:426> = true ) . { auto . } assert ( <genH> : Nat . even <nat:200> = true ) . { auto . } assert ( <genH> : Nat . even <nat:216> = true ) . { auto . } assert ( <genH> : Nat . even <nat:258> = true ) . { auto . } assert ( <genH> : Nat . even <nat:58> = true ) . { auto . } assert ( <genH> : Nat . even <nat:172> = true ) . { auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . repeat rewrite Nat . even_mul . assert ( <genH> : Nat . odd <nat:49> = true ) . { auto . } rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 