\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:492> * <var:m> + <nat:74> * <var:L> + <var:I> * <nat:398> + <var:u> * <nat:236> + <var:G> * <nat:464> + <nat:201> + <nat:62> * <var:i> $ is guaranteed to be odd . \end{theorem} \begin{proof} Remember the products $ <var:i> \cdot <nat:62> $ , $ <nat:464> \cdot <var:G> $ , and likewise $ <nat:492> \cdot <var:m> $ are clearly even elements of $ \mathbb{Z}^+ $ since the multiplication between an even number and a natural number is even . The pair $ <nat:236> \cdot <var:u> $ is known as even . Likewise , see the product $ <var:I> \cdot <nat:398> $ is known as an even element of $ \mathbb{N} $ . This claim is true since the product between an even natural number with a element of $ \mathbb{Z}^+ $ is guaranteed to be an even number in $ \mathbb{Z}^+ $ . Adding on , we know $ <nat:74> \cdot <var:L> $ is known as even since multiplying between an even number in $ \mathbb{Z}^+ $ with a whole number is clearly an even element of $ \mathbb{Z}^+ $ . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:m> <var:L> <var:I> <var:u> <var:G> <var:i> : nat , Nat . odd ( <nat:492> * <var:m> + <nat:74> * <var:L> + <nat:398> * <var:I> + <nat:236> * <var:u> + <nat:464> * <var:G> + <nat:62> * <var:i> + <nat:201> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:62> * <var:i> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:464> * <var:G> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:492> * <var:m> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:236> * <var:u> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:398> * <var:I> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:74> * <var:L> ) = true ) . { rewrite Nat . even_mul . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 