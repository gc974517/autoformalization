\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:216> * <var:b> + <var:D> * <nat:96> + <nat:392> * <var:Z> + <var:F> * <nat:386> + <nat:272> * <var:k> + <nat:260> * <var:p> + <var:j> * <nat:74> + <nat:342> * <var:e> + <var:m> * <nat:486> + <nat:235> + <nat:146> * <var:y> $ is odd . \end{theorem} \begin{proof} The pairs $ <nat:342> \times <var:e> $ , $ <nat:96> \times <var:D> $ , $ <nat:386> \times <var:F> $ , $ <var:b> \times <nat:216> $ , and also $ <var:y> \times <nat:146> $ are known as even integers . The pairs $ <nat:392> \times <var:Z> $ and $ <var:m> \times <nat:486> $ are even elements of $ \mathbb{N} $ . This is true because multiplying between an even whole number and some element of $ \mathbb{Z}^+ $ must be even . $ <var:p> \times <nat:260> $ is trivially an even whole number . The product $ <nat:74> \times <var:j> $ is known as an even number . Adding on , we know that $ <nat:272> \times <var:k> $ is known as even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:b> <var:D> <var:Z> <var:F> <var:k> <var:p> <var:j> <var:e> <var:m> <var:y> : nat , Nat . odd ( <nat:216> * <var:b> + <nat:96> * <var:D> + <nat:392> * <var:Z> + <nat:386> * <var:F> + <nat:272> * <var:k> + <nat:260> * <var:p> + <nat:74> * <var:j> + <nat:342> * <var:e> + <nat:486> * <var:m> + <nat:146> * <var:y> + <nat:235> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:342> * <var:e> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:96> * <var:D> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:386> * <var:F> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:216> * <var:b> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:146> * <var:y> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:392> * <var:Z> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:486> * <var:m> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:260> * <var:p> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:74> * <var:j> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:272> * <var:k> ) = true ) . { rewrite Nat . even_mul . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 