\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} With every positive terms $ <var:K> $ , $ <var:c> $ , $ <var:g> $ , $ <var:R> $ , $ <var:A> $ , $ <var:E> $ , $ <var:d> $ , $ <var:T> $ , and $ <var:y> $ the expression $ <var:d> <nat:308> + <var:c> <nat:376> + <nat:94> <var:R> + <var:K> <nat:172> + <var:g> <nat:336> + <var:A> <nat:382> + <var:y> <nat:226> + <nat:290> <var:E> + <nat:100> <var:T> + <nat:317> $ is odd . \end{theorem} \begin{proof} Remember the numbers $ <nat:94> $ , $ <nat:308> $ , $ <nat:336> $ , $ <nat:382> $ , additionally $ <nat:172> $ are known as even naturals Likewise , the whole numbers $ <nat:226> $ , $ <nat:376> $ , and also $ <nat:100> $ are known as even The leading term $ <nat:290> $ is clearly an even whole number \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:K> <var:c> <var:g> <var:R> <var:A> <var:E> <var:d> <var:T> <var:y> : nat , Nat . odd ( <nat:308> * <var:d> + <nat:376> * <var:c> + <nat:94> * <var:R> + <nat:172> * <var:K> + <nat:336> * <var:g> + <nat:382> * <var:A> + <nat:226> * <var:y> + <nat:290> * <var:E> + <nat:100> * <var:T> + <nat:317> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:94> = true ) . { auto . } assert ( <genH> : Nat . even <nat:308> = true ) . { auto . } assert ( <genH> : Nat . even <nat:336> = true ) . { auto . } assert ( <genH> : Nat . even <nat:382> = true ) . { auto . } assert ( <genH> : Nat . even <nat:172> = true ) . { auto . } assert ( <genH> : Nat . even <nat:226> = true ) . { auto . } assert ( <genH> : Nat . even <nat:376> = true ) . { auto . } assert ( <genH> : Nat . even <nat:100> = true ) . { auto . } assert ( <genH> : Nat . even <nat:290> = true ) . { auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . repeat rewrite Nat . even_mul . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 