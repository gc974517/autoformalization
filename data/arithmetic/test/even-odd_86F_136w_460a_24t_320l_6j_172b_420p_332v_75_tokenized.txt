\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:w> * <nat:136> + <var:t> * <nat:24> + <var:j> * <nat:6> + <nat:420> * <var:p> + <var:l> * <nat:320> + <nat:172> * <var:b> + <nat:460> * <var:a> + <nat:75> + <var:v> * <nat:332> + <var:F> * <nat:86> $ will be odd . \end{theorem} \begin{proof} We know that the summing between an even number and an odd natural must be an odd element of $ \mathbb{N} $ . The sum $ <nat:332> <var:v> + <nat:420> <var:p> + <var:w> <nat:136> + <nat:86> <var:F> + <var:l> <nat:320> + <nat:6> <var:j> + <var:t> <nat:24> + <var:a> <nat:460> + <nat:75> + <nat:172> <var:b> $ is trivially odd since the expression $ <nat:332> \times <var:v> + <var:j> \times <nat:6> + <nat:420> \times <var:p> + <nat:24> \times <var:t> + <var:l> \times <nat:320> + <nat:460> \times <var:a> + <nat:172> \times <var:b> + <nat:136> \times <var:w> + <nat:86> \times <var:F> $ is obviously even , from the fact the addition between an even integer and an even element of $ \mathbb{N} $ must be even . In addition , the pairs $ <nat:332> * <var:v> $ , $ <var:j> * <nat:6> $ , $ <nat:420> * <var:p> $ , $ <var:t> * <nat:24> $ , $ <var:l> * <nat:320> $ , $ <nat:460> * <var:a> $ , $ <nat:172> * <var:b> $ , $ <nat:136> * <var:w> $ , and $ <nat:86> * <var:F> $ are guaranteed to be even from the fact multiplying between an even positive integer and some number is even . This fact must be true as a consequence that the natural numbers $ <nat:332> $ , $ <nat:6> $ , $ <nat:420> $ , $ <nat:24> $ , $ <nat:320> $ , $ <nat:460> $ , $ <nat:172> $ , $ <nat:136> $ , plus $ <nat:86> $ are even . We demonstrate the sum $ <var:F> \cdot <nat:86> + <nat:136> \cdot <var:w> + <nat:460> \cdot <var:a> + <nat:24> \cdot <var:t> + <nat:320> \cdot <var:l> + <nat:6> \cdot <var:j> + <var:b> \cdot <nat:172> + <nat:75> + <nat:420> \cdot <var:p> + <var:v> \cdot <nat:332> $ is odd . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:w> <var:t> <var:j> <var:p> <var:l> <var:b> <var:a> <var:v> <var:F> : nat , Nat . odd ( <nat:136> * <var:w> + <nat:24> * <var:t> + <nat:6> * <var:j> + <nat:420> * <var:p> + <nat:320> * <var:l> + <nat:172> * <var:b> + <nat:460> * <var:a> + <nat:332> * <var:v> + <nat:86> * <var:F> + <nat:75> ) = true . Proof . intros . rewrite Nat . odd_add . assert ( <genH> : Nat . even <nat:332> = true ) . { auto . } assert ( <genH> : Nat . even <nat:6> = true ) . { auto . } assert ( <genH> : Nat . even <nat:420> = true ) . { auto . } assert ( <genH> : Nat . even <nat:24> = true ) . { auto . } assert ( <genH> : Nat . even <nat:320> = true ) . { auto . } assert ( <genH> : Nat . even <nat:460> = true ) . { auto . } assert ( <genH> : Nat . even <nat:172> = true ) . { auto . } assert ( <genH> : Nat . even <nat:136> = true ) . { auto . } assert ( <genH> : Nat . even <nat:86> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:332> * <var:v> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:6> * <var:j> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:420> * <var:p> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:24> * <var:t> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:320> * <var:l> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:460> * <var:a> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:172> * <var:b> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:136> * <var:w> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:86> * <var:F> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:136> * <var:w> + <nat:24> * <var:t> + <nat:6> * <var:j> + <nat:420> * <var:p> + <nat:320> * <var:l> + <nat:172> * <var:b> + <nat:460> * <var:a> + <nat:332> * <var:v> + <nat:86> * <var:F> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite <- Nat . negb_even . rewrite <genH> . auto . Qed . 