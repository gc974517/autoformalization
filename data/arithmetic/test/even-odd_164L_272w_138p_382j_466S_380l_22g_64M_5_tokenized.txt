\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Given every unknowns $ <var:L> $ , $ <var:j> $ , $ <var:p> $ , $ <var:l> $ , $ <var:g> $ , $ <var:S> $ , $ <var:w> $ , and $ <var:M> $ the sum $ <nat:5> + <nat:380> \times <var:l> + <nat:22> \times <var:g> + <nat:64> \times <var:M> + <var:j> \times <nat:382> + <nat:466> \times <var:S> + <var:p> \times <nat:138> + <var:L> \times <nat:164> + <nat:272> \times <var:w> $ will be odd . \end{theorem} \begin{proof} We know that $ <nat:5> $ is trivially an odd number in $ \mathbb{Z}^+ $ . The summation of even natural numbers successively and an odd number in $ \mathbb{N} $ is guaranteed to be an odd natural . Therefore , the summation $ <nat:164> \cdot <var:L> + <nat:272> \cdot <var:w> + <var:p> \cdot <nat:138> + <nat:382> \cdot <var:j> + <var:S> \cdot <nat:466> + <var:l> \cdot <nat:380> + <nat:5> + <var:g> \cdot <nat:22> + <nat:64> \cdot <var:M> $ is guaranteed to be odd . Likewise , the terms $ <nat:164> <var:L> $ , $ <nat:272> <var:w> $ , $ <nat:138> <var:p> $ , $ <var:j> <nat:382> $ , $ <var:S> <nat:466> $ , $ <nat:380> <var:l> $ , $ <var:g> <nat:22> $ , and also $ <nat:64> <var:M> $ are known to be even . This holds by reason that the integers $ <nat:164> $ , $ <nat:272> $ , $ <nat:138> $ , $ <nat:382> $ , $ <nat:466> $ , $ <nat:380> $ , $ <nat:22> $ , and $ <nat:64> $ are known as even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:L> <var:j> <var:p> <var:l> <var:g> <var:S> <var:w> <var:M> : nat , Nat . odd ( <nat:380> * <var:l> + <nat:22> * <var:g> + <nat:64> * <var:M> + <nat:382> * <var:j> + <nat:466> * <var:S> + <nat:138> * <var:p> + <nat:164> * <var:L> + <nat:272> * <var:w> + <nat:5> ) = true . Proof . intros . assert ( <genH> : Nat . odd <nat:5> = true ) . { auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . assert ( <genH> : Nat . even <nat:164> = true ) . { auto . } assert ( <genH> : Nat . even <nat:272> = true ) . { auto . } assert ( <genH> : Nat . even <nat:138> = true ) . { auto . } assert ( <genH> : Nat . even <nat:382> = true ) . { auto . } assert ( <genH> : Nat . even <nat:466> = true ) . { auto . } assert ( <genH> : Nat . even <nat:380> = true ) . { auto . } assert ( <genH> : Nat . even <nat:22> = true ) . { auto . } assert ( <genH> : Nat . even <nat:64> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:164> * <var:L> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:272> * <var:w> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:138> * <var:p> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:382> * <var:j> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:466> * <var:S> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:380> * <var:l> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:22> * <var:g> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:64> * <var:M> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 