\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Taking any natural numbers $ <var:C> $ , $ <var:B> $ , $ <var:n> $ , $ <var:O> $ , $ <var:a> $ , $ <var:g> $ , and $ <var:d> $ $ <var:a> \cdot <nat:236> + <nat:244> \cdot <var:n> + <var:g> \cdot <nat:150> + <nat:54> \cdot <var:B> + <nat:360> \cdot <var:d> + <nat:375> + <nat:86> \cdot <var:O> + <var:C> \cdot <nat:452> $ is guaranteed to be odd . \end{theorem} \begin{proof} $ <var:a> <nat:236> + <nat:360> <var:d> + <nat:452> <var:C> + <var:g> <nat:150> + <var:n> <nat:244> + <nat:86> <var:O> + <var:B> <nat:54> $ is known to be even , because the summing between even numbers in $ \mathbb{Z}^+ $ collectively with an even element of $ \mathbb{Z}^+ $ must be an even integer . Recall that the products $ <var:a> <nat:236> $ , $ <var:g> <nat:150> $ , $ <var:d> <nat:360> $ , in addition to $ <var:O> <nat:86> $ are known to be even natural numbers . In addition , remember the terms $ <nat:244> <var:n> $ and moreover $ <nat:54> <var:B> $ are clearly even . Further , the product $ <nat:452> <var:C> $ is even as a consequence that the product between an even natural number with an arbitrary integer is even . additionally since multiplying between an even positive integer and an arbitrary number in $ \mathbb{N} $ is even . Remember $ <nat:375> $ is obviously an odd number . See that the adding between even numbers in $ \mathbb{N} $ together and an odd integer will be odd . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:C> <var:B> <var:n> <var:O> <var:a> <var:g> <var:d> : nat , Nat . odd ( <nat:236> * <var:a> + <nat:244> * <var:n> + <nat:150> * <var:g> + <nat:54> * <var:B> + <nat:360> * <var:d> + <nat:86> * <var:O> + <nat:452> * <var:C> + <nat:375> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:236> * <var:a> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:150> * <var:g> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:360> * <var:d> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:86> * <var:O> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:244> * <var:n> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:54> * <var:B> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:452> * <var:C> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:236> * <var:a> + <nat:244> * <var:n> + <nat:150> * <var:g> + <nat:54> * <var:B> + <nat:360> * <var:d> + <nat:86> * <var:O> + <nat:452> * <var:C> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } assert ( <genH> : Nat . odd <nat:375> = true ) . { auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . rewrite <genH> . auto . Qed . 