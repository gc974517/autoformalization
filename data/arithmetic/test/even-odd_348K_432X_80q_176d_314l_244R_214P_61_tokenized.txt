\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:348> \times <var:K> + <nat:432> \times <var:X> + <var:q> \times <nat:80> + <var:d> \times <nat:176> + <nat:61> + <var:l> \times <nat:314> + <nat:244> \times <var:R> + <var:P> \times <nat:214> $ is odd . \end{theorem} \begin{proof} Notice that $ <nat:61> $ is trivially an odd number in $ \mathbb{N} $ . Notice that the product between an even number in $ \mathbb{Z}^+ $ with an arbitrary number in $ \mathbb{Z}^+ $ is even . The numbers $ <nat:432> $ and also $ <nat:176> $ are obviously even Likewise , the leading terms $ <nat:214> $ , $ <nat:80> $ , and moreover $ <nat:244> $ are guaranteed to be even numbers The whole number $ <nat:348> $ is obviously an even whole number Furthermore , the natural number $ <nat:314> $ is known to be even \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:K> <var:X> <var:q> <var:d> <var:l> <var:R> <var:P> : nat , Nat . odd ( <nat:348> * <var:K> + <nat:432> * <var:X> + <nat:80> * <var:q> + <nat:176> * <var:d> + <nat:314> * <var:l> + <nat:244> * <var:R> + <nat:214> * <var:P> + <nat:61> ) = true . Proof . intros . assert ( <genH> : Nat . odd <nat:61> = true ) . { auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . repeat rewrite Nat . even_mul . assert ( <genH> : Nat . even <nat:432> = true ) . { auto . } assert ( <genH> : Nat . even <nat:176> = true ) . { auto . } assert ( <genH> : Nat . even <nat:214> = true ) . { auto . } assert ( <genH> : Nat . even <nat:80> = true ) . { auto . } assert ( <genH> : Nat . even <nat:244> = true ) . { auto . } assert ( <genH> : Nat . even <nat:348> = true ) . { auto . } assert ( <genH> : Nat . even <nat:314> = true ) . { auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 