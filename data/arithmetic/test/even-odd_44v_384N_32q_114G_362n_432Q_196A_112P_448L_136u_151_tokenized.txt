\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:v> \times <nat:44> + <var:N> \times <nat:384> + <nat:32> \times <var:q> + <nat:151> + <nat:114> \times <var:G> + <var:n> \times <nat:362> + <nat:432> \times <var:Q> + <var:A> \times <nat:196> + <var:P> \times <nat:112> + <nat:448> \times <var:L> + <nat:136> \times <var:u> $ is odd taking terms $ <var:v> $ , $ <var:A> $ , $ <var:P> $ , $ <var:L> $ , $ <var:q> $ , $ <var:u> $ , $ <var:G> $ , $ <var:N> $ , $ <var:n> $ , and $ <var:Q> $ . \end{theorem} \begin{proof} The natural numbers $ <nat:196> $ , $ <nat:362> $ , $ <nat:432> $ , $ <nat:448> $ , $ <nat:384> $ , and likewise $ <nat:32> $ are known to be even The integers $ <nat:44> $ in addition to $ <nat:114> $ are guaranteed to be even The whole number $ <nat:136> $ is guaranteed to be an even natural The integer $ <nat:112> $ is an even number in $ \mathbb{Z}^+ $ Taking the product of even numbers in $ \mathbb{Z}^+ $ must be in itself an even positive integer . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:v> <var:A> <var:P> <var:L> <var:q> <var:u> <var:G> <var:N> <var:n> <var:Q> : nat , Nat . odd ( <nat:44> * <var:v> + <nat:384> * <var:N> + <nat:32> * <var:q> + <nat:114> * <var:G> + <nat:362> * <var:n> + <nat:432> * <var:Q> + <nat:196> * <var:A> + <nat:112> * <var:P> + <nat:448> * <var:L> + <nat:136> * <var:u> + <nat:151> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:196> = true ) . { auto . } assert ( <genH> : Nat . even <nat:362> = true ) . { auto . } assert ( <genH> : Nat . even <nat:432> = true ) . { auto . } assert ( <genH> : Nat . even <nat:448> = true ) . { auto . } assert ( <genH> : Nat . even <nat:384> = true ) . { auto . } assert ( <genH> : Nat . even <nat:32> = true ) . { auto . } assert ( <genH> : Nat . even <nat:44> = true ) . { auto . } assert ( <genH> : Nat . even <nat:114> = true ) . { auto . } assert ( <genH> : Nat . even <nat:136> = true ) . { auto . } assert ( <genH> : Nat . even <nat:112> = true ) . { auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . repeat rewrite Nat . even_mul . rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 