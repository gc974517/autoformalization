\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:378> \cdot <var:K> + <nat:36> \cdot <var:d> + <var:G> \cdot <nat:300> + <var:v> \cdot <nat:260> + <nat:126> \cdot <var:N> + <var:m> \cdot <nat:148> + <var:i> \cdot <nat:230> + <nat:293> $ will be odd . \end{theorem} \begin{proof} We know the summation of an even natural and an odd element of $ \mathbb{Z}^+ $ will be by its very nature an odd element of $ \mathbb{N} $ . The leading terms $ <nat:378> $ , $ <nat:36> $ , $ <nat:300> $ , $ <nat:260> $ , $ <nat:126> $ , $ <nat:148> $ , $ <nat:230> $ , are guaranteed to be even numbers in $ \mathbb{N} $ . Therefore , the terms $ <var:K> \cdot <nat:378> $ , $ <nat:36> \cdot <var:d> $ , $ <nat:300> \cdot <var:G> $ , $ <nat:260> \cdot <var:v> $ , $ <var:N> \cdot <nat:126> $ , $ <var:m> \cdot <nat:148> $ , $ <var:i> \cdot <nat:230> $ , is even at the same time . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:K> <var:d> <var:G> <var:v> <var:N> <var:m> <var:i> : nat , Nat . odd ( <nat:378> * <var:K> + <nat:36> * <var:d> + <nat:300> * <var:G> + <nat:260> * <var:v> + <nat:126> * <var:N> + <nat:148> * <var:m> + <nat:230> * <var:i> + <nat:293> ) = true . Proof . intros . rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . assert ( <genH> : Nat . even <nat:378> = true ) . { auto . } assert ( <genH> : Nat . even <nat:36> = true ) . { auto . } assert ( <genH> : Nat . even <nat:300> = true ) . { auto . } assert ( <genH> : Nat . even <nat:260> = true ) . { auto . } assert ( <genH> : Nat . even <nat:126> = true ) . { auto . } assert ( <genH> : Nat . even <nat:148> = true ) . { auto . } assert ( <genH> : Nat . even <nat:230> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:378> * <var:K> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:36> * <var:d> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:300> * <var:G> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:260> * <var:v> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:126> * <var:N> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:148> * <var:m> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:230> * <var:i> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 