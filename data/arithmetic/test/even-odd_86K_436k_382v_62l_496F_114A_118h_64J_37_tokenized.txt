\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:l> \cdot <nat:62> + <nat:64> \cdot <var:J> + <nat:37> + <var:A> \cdot <nat:114> + <nat:496> \cdot <var:F> + <var:k> \cdot <nat:436> + <var:h> \cdot <nat:118> + <nat:382> \cdot <var:v> + <var:K> \cdot <nat:86> $ is odd . \end{theorem} \begin{proof} See that the summing of even positive integers successively and an odd element of $ \mathbb{Z}^+ $ is guaranteed to be an odd element of $ \mathbb{Z}^+ $ . Notice the leading term $ <nat:86> $ is an even element of $ \mathbb{Z}^+ $ . Then , the pair $ <var:K> <nat:86> $ is guaranteed to be even at the same time . The integer $ <nat:436> $ is known as even . Hence , the term $ <nat:436> <var:k> $ is guaranteed to be even also . The whole number $ <nat:382> $ is even . Thus , the product $ <var:v> <nat:382> $ is guaranteed to be even additionally . The coefficient $ <nat:62> $ is even . Hence , $ <var:l> <nat:62> $ is even as well . The natural number $ <nat:496> $ is obviously an even positive integer . As a consequence , the term $ <var:F> <nat:496> $ is guaranteed to be even too . Remember the natural number $ <nat:114> $ is known to be even . Accordingly , the term $ <var:A> <nat:114> $ is guaranteed to be even additionally . Likewise , the natural number $ <nat:118> $ is trivially even . In consequence , the term $ <var:h> <nat:118> $ is even additionally . Further , recall that the pair $ <var:J> <nat:64> $ is known to be even . This fact holds because the product of an even whole number with any positive integer must be an even number in $ \mathbb{N} $ . This is true since the integer $ <nat:64> $ is guaranteed to be even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:l> <var:J> <var:A> <var:F> <var:k> <var:h> <var:v> <var:K> : nat , Nat . odd ( <nat:62> * <var:l> + <nat:64> * <var:J> + <nat:114> * <var:A> + <nat:496> * <var:F> + <nat:436> * <var:k> + <nat:118> * <var:h> + <nat:382> * <var:v> + <nat:86> * <var:K> + <nat:37> ) = true . Proof . intros . rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . assert ( <genH> : Nat . even <nat:86> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:86> * <var:K> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:436> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:436> * <var:k> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:382> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:382> * <var:v> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:62> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:62> * <var:l> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:496> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:496> * <var:F> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:114> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:114> * <var:A> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:118> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:118> * <var:h> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:64> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:64> * <var:J> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 