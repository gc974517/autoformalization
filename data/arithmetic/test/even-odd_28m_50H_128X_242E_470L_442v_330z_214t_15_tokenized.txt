\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Taking $ <var:L> $ , $ <var:X> $ , $ <var:v> $ , $ <var:m> $ , $ <var:z> $ , $ <var:t> $ , $ <var:H> $ , and $ <var:E> $ $ <var:m> <nat:28> + <nat:50> <var:H> + <nat:442> <var:v> + <var:t> <nat:214> + <var:L> <nat:470> + <var:X> <nat:128> + <nat:15> + <var:z> <nat:330> + <nat:242> <var:E> $ is odd . \end{theorem} \begin{proof} The summing between even integers concurrently and an odd number will be odd . $ <var:m> <nat:28> + <nat:50> <var:H> + <nat:128> <var:X> + <nat:242> <var:E> + <nat:470> <var:L> + <nat:442> <var:v> + <var:z> <nat:330> + <nat:214> <var:t> $ is known to be even . Take note the addition of even naturals successively and an even element of $ \mathbb{N} $ will be trivially an even number in $ \mathbb{N} $ . See that the terms $ <var:X> * <nat:128> $ , $ <var:t> * <nat:214> $ , $ <var:v> * <nat:442> $ , $ <var:L> * <nat:470> $ , $ <nat:330> * <var:z> $ , $ <var:m> * <nat:28> $ , and also $ <var:E> * <nat:242> $ are clearly even . This holds since the product between an even whole number and a positive integer will be an even number . Notice the pair $ <nat:50> * <var:H> $ is trivially an even number in $ \mathbb{N} $ . This claim is true since multiplying of an even element of $ \mathbb{Z}^+ $ and some number must be an even number in $ \mathbb{N} $ . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:L> <var:X> <var:v> <var:m> <var:z> <var:t> <var:H> <var:E> : nat , Nat . odd ( <nat:28> * <var:m> + <nat:50> * <var:H> + <nat:442> * <var:v> + <nat:214> * <var:t> + <nat:470> * <var:L> + <nat:128> * <var:X> + <nat:330> * <var:z> + <nat:242> * <var:E> + <nat:15> ) = true . Proof . intros . rewrite Nat . odd_add . assert ( <genH> : Nat . even ( <nat:128> * <var:X> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:214> * <var:t> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:442> * <var:v> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:470> * <var:L> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:330> * <var:z> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:28> * <var:m> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:242> * <var:E> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:50> * <var:H> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:28> * <var:m> + <nat:50> * <var:H> + <nat:442> * <var:v> + <nat:214> * <var:t> + <nat:470> * <var:L> + <nat:128> * <var:X> + <nat:330> * <var:z> + <nat:242> * <var:E> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite <- Nat . negb_even . rewrite <genH> . auto . Qed . 