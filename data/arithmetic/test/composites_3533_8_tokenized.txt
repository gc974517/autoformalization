\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \newtheorem{definition}{Definition} \begin{document} \begin{definition} Granted we get $ <var:V> = <var:d> \times <var:r> \times <var:v> \times <var:O> \times <var:m> \times <var:G> \times <var:C> \times <var:o> $ assuming $ <var:V> \in \mathbb{N} $ and where $ <var:o> $ , $ <var:C> $ , $ <var:G> $ , $ <var:O> $ , $ <var:r> $ , $ <var:d> $ , $ <var:m> $ , $ <var:v> \geq <nat:2> $ , then denote that $ <var:V> $ is a <def:eight-composite> number taking some $ <var:r> $ , $ <var:v> $ , $ <var:G> $ , $ <var:o> $ , $ <var:m> $ , $ <var:d> $ , $ <var:O> $ , $ <var:C> \in \mathbb{Z}^+ $ . \end{definition} \begin{theorem} $ <var:V> = <nat:1921920> $ is a <def:eight-composite> positive integer . \end{theorem} \begin{proof} Notice $ <var:d> \times <var:v> \times <var:O> \times <var:o> \times <var:G> \times <var:r> \times <var:m> \times <var:C> = <nat:7> \times <nat:10> \times <nat:8> \times <nat:4> \times <nat:13> \times <nat:11> \times <nat:3> \times <nat:2> = <nat:1921920> $ . What's more observe that $ <nat:3> $ , $ <nat:8> $ , $ <nat:10> $ , $ <nat:11> $ , $ <nat:4> $ , $ <nat:2> $ , $ <nat:7> $ , and $ <nat:13> $ are greater than <nat:1> . This gives <nat:1921920> is a <def:eight-composite> integer . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:eight-composite> ( <var:V> : nat ) := exists <var:r> <var:v> <var:G> <var:o> <var:m> <var:d> <var:O> <var:C> : nat , ( <var:V> = <var:d> * <var:r> * <var:v> * <var:O> * <var:m> * <var:G> * <var:C> * <var:o> ) /\ ( <var:o> >= <nat:2> ) /\ ( <var:C> >= <nat:2> ) /\ ( <var:G> >= <nat:2> ) /\ ( <var:O> >= <nat:2> ) /\ ( <var:r> >= <nat:2> ) /\ ( <var:d> >= <nat:2> ) /\ ( <var:m> >= <nat:2> ) /\ ( <var:v> >= <nat:2> ) . Theorem <genP:1> : <def:eight-composite> <nat:1921920> . Proof . unfold <def:eight-composite> . exists <nat:11> . exists <nat:10> . exists <nat:13> . exists <nat:4> . exists <nat:3> . exists <nat:7> . exists <nat:8> . exists <nat:2> . assert ( <genH> : <nat:3> > <nat:1> ) . { lia . } assert ( <genH> : <nat:8> > <nat:1> ) . { lia . } assert ( <genH> : <nat:10> > <nat:1> ) . { lia . } assert ( <genH> : <nat:11> > <nat:1> ) . { lia . } assert ( <genH> : <nat:4> > <nat:1> ) . { lia . } assert ( <genH> : <nat:2> > <nat:1> ) . { lia . } assert ( <genH> : <nat:7> > <nat:1> ) . { lia . } assert ( <genH> : <nat:13> > <nat:1> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 