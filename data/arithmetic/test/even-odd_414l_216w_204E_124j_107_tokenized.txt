\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:w> \cdot <nat:216> + <nat:204> \cdot <var:E> + <var:l> \cdot <nat:414> + <var:j> \cdot <nat:124> + <nat:107> $ is odd for any terms $ <var:l> $ , $ <var:w> $ , $ <var:j> $ , and $ <var:E> $ . \end{theorem} \begin{proof} $ <var:l> \cdot <nat:414> $ is an even integer . This fact must be true by reason that the multiplication between an even number with any natural number must be an even number . This is true since the number $ <nat:414> $ is trivially trivially an even integer . The positive integer $ <nat:216> $ is known as even . So , the term $ <nat:216> \cdot <var:w> $ must be even as well . Furthermore , the product $ <var:E> \cdot <nat:204> $ is trivially an even number in $ \mathbb{N} $ . This holds from the fact the multiplication between an even element of $ \mathbb{Z}^+ $ and some integer is guaranteed to be even . This fact must be true as a consequence that the integer $ <nat:204> $ is trivially even . Likewise , the positive integer $ <nat:124> $ is trivially an even number in $ \mathbb{N} $ . Consequently , the product $ <nat:124> \cdot <var:j> $ will be even at the same time . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:l> <var:w> <var:j> <var:E> : nat , Nat . odd ( <nat:216> * <var:w> + <nat:204> * <var:E> + <nat:414> * <var:l> + <nat:124> * <var:j> + <nat:107> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:414> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:414> * <var:l> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:216> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:216> * <var:w> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:204> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:204> * <var:E> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:124> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:124> * <var:j> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 