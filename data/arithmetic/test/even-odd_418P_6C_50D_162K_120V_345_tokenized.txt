\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Using every positive integers $ <var:V> $ , $ <var:K> $ , $ <var:D> $ , $ <var:P> $ , and $ <var:C> $ the formula $ <nat:345> + <var:V> \cdot <nat:120> + <nat:162> \cdot <var:K> + <nat:6> \cdot <var:C> + <var:D> \cdot <nat:50> + <nat:418> \cdot <var:P> $ is odd . \end{theorem} \begin{proof} We make use the knowledge the formula $ <var:K> <nat:162> + <nat:418> <var:P> + <nat:50> <var:D> + <var:C> <nat:6> + <nat:120> <var:V> $ is trivially even . The term $ <var:K> * <nat:162> $ is known to be an even element of $ \mathbb{N} $ . Building on , the pair $ <var:P> * <nat:418> $ is an even element of $ \mathbb{N} $ . In addition to this , the term $ <var:C> * <nat:6> $ is clearly even . Building on , the term $ <nat:120> * <var:V> $ is known as an even number in $ \mathbb{Z}^+ $ . Building on , the term $ <var:D> * <nat:50> $ is clearly even as a consequence that taking the product of an even natural number and any whole number is guaranteed to be even . The formula $ <nat:50> * <var:D> + <var:K> * <nat:162> + <var:C> * <nat:6> + <var:V> * <nat:120> + <nat:418> * <var:P> $ will be even by reason that the totaling between even naturals with even numbers is even as well as because the product of even numbers and any whole number will be an even element of $ \mathbb{Z}^+ $ . It can be proven that $ <var:P> <nat:418> + <nat:6> <var:C> + <nat:345> + <nat:50> <var:D> + <var:K> <nat:162> + <var:V> <nat:120> $ is odd . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:V> <var:K> <var:D> <var:P> <var:C> : nat , Nat . odd ( <nat:120> * <var:V> + <nat:162> * <var:K> + <nat:6> * <var:C> + <nat:50> * <var:D> + <nat:418> * <var:P> + <nat:345> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:162> * <var:K> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:418> * <var:P> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:6> * <var:C> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:120> * <var:V> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:50> * <var:D> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:120> * <var:V> + <nat:162> * <var:K> + <nat:6> * <var:C> + <nat:50> * <var:D> + <nat:418> * <var:P> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . auto . Qed . 