\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Given every $ <var:a> $ , $ <var:C> $ , $ <var:r> $ , $ <var:Z> $ , $ <var:k> $ , and $ <var:c> \in \mathbb{N} $ the summation $ <var:C> <nat:468> + <nat:472> <var:k> + <var:a> <nat:424> + <var:r> <nat:288> + <var:c> <nat:4> + <nat:295> + <var:Z> <nat:352> $ will be odd . \end{theorem} \begin{proof} The positive integer $ <nat:288> $ is an even positive integer . Thus , the term $ <nat:288> * <var:r> $ is guaranteed to be even also . The term $ <var:Z> * <nat:352> $ is known to be even from the knowledge the product of an even whole number with any natural number is even , and holds as a consequence that the natural number $ <nat:352> $ is guaranteed to be an even natural number . What's more , $ <nat:4> * <var:c> $ is obviously an even element of $ \mathbb{N} $ . This fact holds from the knowledge taking the product between an even whole number with a number in $ \mathbb{Z}^+ $ must be even . This is proven from the fact the coefficient $ <nat:4> $ is an even natural number . Notice the product $ <var:a> * <nat:424> $ is clearly even from the knowledge the multiplication between an even number in $ \mathbb{Z}^+ $ with an arbitrary natural is guaranteed to be an even number . This fact holds as a consequence that the integer $ <nat:424> $ is obviously even . The leading term $ <nat:472> $ is trivially an even number in $ \mathbb{Z}^+ $ . Hence , the product $ <var:k> * <nat:472> $ will be even additionally . We know that the pair $ <nat:468> * <var:C> $ is clearly an even number in $ \mathbb{N} $ since taking the product of an even natural number with a positive integer must be even . This fact must be true by reason that the integer $ <nat:468> $ is even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:a> <var:C> <var:r> <var:Z> <var:k> <var:c> : nat , Nat . odd ( <nat:468> * <var:C> + <nat:472> * <var:k> + <nat:424> * <var:a> + <nat:288> * <var:r> + <nat:4> * <var:c> + <nat:352> * <var:Z> + <nat:295> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:288> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:288> * <var:r> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:352> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:352> * <var:Z> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:4> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:4> * <var:c> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:424> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:424> * <var:a> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:472> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:472> * <var:k> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:468> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:468> * <var:C> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 