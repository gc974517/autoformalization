\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} For every positive numbers $ <var:i> $ , $ <var:N> $ , $ <var:D> $ , $ <var:g> $ , $ <var:w> $ , and $ <var:G> $ the summation $ <nat:107> + <var:G> \times <nat:186> + <nat:102> \times <var:N> + <var:D> \times <nat:424> + <var:i> \times <nat:294> + <var:g> \times <nat:364> + <nat:328> \times <var:w> $ must be odd . \end{theorem} \begin{proof} The coefficients $ <nat:186> $ , $ <nat:102> $ , $ <nat:424> $ , $ <nat:294> $ , $ <nat:364> $ , and also $ <nat:328> $ are guaranteed to be even elements of $ \mathbb{Z}^+ $ . Hence , the terms $ <nat:186> <var:G> $ , $ <var:N> <nat:102> $ , $ <nat:424> <var:D> $ , $ <nat:294> <var:i> $ , $ <nat:364> <var:g> $ , as well as $ <var:w> <nat:328> $ must be even as well . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:i> <var:N> <var:D> <var:g> <var:w> <var:G> : nat , Nat . odd ( <nat:186> * <var:G> + <nat:102> * <var:N> + <nat:424> * <var:D> + <nat:294> * <var:i> + <nat:364> * <var:g> + <nat:328> * <var:w> + <nat:107> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:186> = true ) . { auto . } assert ( <genH> : Nat . even <nat:102> = true ) . { auto . } assert ( <genH> : Nat . even <nat:424> = true ) . { auto . } assert ( <genH> : Nat . even <nat:294> = true ) . { auto . } assert ( <genH> : Nat . even <nat:364> = true ) . { auto . } assert ( <genH> : Nat . even <nat:328> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:186> * <var:G> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:102> * <var:N> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:424> * <var:D> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:294> * <var:i> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:364> * <var:g> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:328> * <var:w> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 