\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} For $ <var:j> $ , $ <var:g> $ , $ <var:N> $ , $ <var:I> $ , $ <var:c> $ , $ <var:q> $ , $ <var:D> $ , $ <var:s> $ , $ <var:V> $ , $ <var:T> $ , and $ <var:A> \in \mathbb{N} $ the formula $ <nat:499> + <nat:320> \cdot <var:T> + <var:j> \cdot <nat:124> + <var:s> \cdot <nat:58> + <var:A> \cdot <nat:180> + <var:N> \cdot <nat:252> + <nat:230> \cdot <var:V> + <var:D> \cdot <nat:384> + <nat:386> \cdot <var:g> + <nat:400> \cdot <var:I> + <var:c> \cdot <nat:172> + <var:q> \cdot <nat:94> $ is odd . \end{theorem} \begin{proof} The sum $ <var:q> \times <nat:94> + <var:V> \times <nat:230> + <nat:400> \times <var:I> + <nat:124> \times <var:j> + <nat:172> \times <var:c> + <nat:320> \times <var:T> + <var:A> \times <nat:180> + <var:g> \times <nat:386> + <var:D> \times <nat:384> + <var:s> \times <nat:58> + <nat:252> \times <var:N> $ is known as even . We know that the pairs $ <nat:58> * <var:s> $ , $ <nat:386> * <var:g> $ , $ <nat:384> * <var:D> $ , $ <var:I> * <nat:400> $ , $ <nat:94> * <var:q> $ , $ <nat:172> * <var:c> $ , $ <nat:320> * <var:T> $ , in addition to $ <var:j> * <nat:124> $ will be even . $ <nat:252> * <var:N> $ is clearly even . Adding on , the pair $ <var:A> * <nat:180> $ is obviously even from the knowledge the multiplication of an even number in $ \mathbb{Z}^+ $ with some element of $ \mathbb{N} $ is guaranteed to be even . The product $ <nat:230> * <var:V> $ is guaranteed to be an even positive integer as a consequence that multiplying between an even number with any number in $ \mathbb{N} $ must be even . The expression $ <var:g> \times <nat:386> + <var:j> \times <nat:124> + <var:c> \times <nat:172> + <nat:58> \times <var:s> + <var:D> \times <nat:384> + <nat:320> \times <var:T> + <nat:400> \times <var:I> + <var:V> \times <nat:230> + <nat:94> \times <var:q> + <nat:252> \times <var:N> + <nat:180> \times <var:A> $ will be even from the fact the product of even naturals and any whole number will be even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:j> <var:g> <var:N> <var:I> <var:c> <var:q> <var:D> <var:s> <var:V> <var:T> <var:A> : nat , Nat . odd ( <nat:320> * <var:T> + <nat:124> * <var:j> + <nat:58> * <var:s> + <nat:180> * <var:A> + <nat:252> * <var:N> + <nat:230> * <var:V> + <nat:384> * <var:D> + <nat:386> * <var:g> + <nat:400> * <var:I> + <nat:172> * <var:c> + <nat:94> * <var:q> + <nat:499> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:58> * <var:s> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:386> * <var:g> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:384> * <var:D> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:400> * <var:I> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:94> * <var:q> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:172> * <var:c> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:320> * <var:T> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:124> * <var:j> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:252> * <var:N> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:180> * <var:A> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:230> * <var:V> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:320> * <var:T> + <nat:124> * <var:j> + <nat:58> * <var:s> + <nat:180> * <var:A> + <nat:252> * <var:N> + <nat:230> * <var:V> + <nat:384> * <var:D> + <nat:386> * <var:g> + <nat:400> * <var:I> + <nat:172> * <var:c> + <nat:94> * <var:q> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . auto . Qed . 