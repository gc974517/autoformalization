\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \newtheorem{definition}{Definition} \begin{document} \begin{definition} Say that $ <var:s> $ is <def:nine-composite> iff there are $ <var:b> $ , $ <var:y> $ , $ <var:K> $ , $ <var:k> $ , $ <var:n> $ , $ <var:c> $ , $ <var:x> $ , $ <var:e> $ , $ <var:V> \in \mathbb{Z}^+ $ satisfying the condition that $ <var:s> = <var:K> * <var:k> * <var:y> * <var:c> * <var:x> * <var:V> * <var:b> * <var:e> * <var:n> $ for some number $ <var:s> $ as well as where $ <var:K> $ , $ <var:b> $ , $ <var:V> $ , $ <var:y> $ , $ <var:c> $ , $ <var:n> $ , $ <var:k> $ , $ <var:e> $ and $ <var:x> \geq <nat:2> $ . \end{definition} \begin{theorem} The positive integer <nat:34594560> is a <def:nine-composite> natural number . \end{theorem} \begin{proof} Assume $ <var:k> = <nat:13> $ , $ <var:c> = <nat:11> $ , $ <var:e> = <nat:2> $ , $ <var:y> = <nat:8> $ , $ <var:x> = <nat:7> $ , $ <var:b> = <nat:10> $ , $ <var:V> = <nat:6> $ , $ <var:K> = <nat:12> $ , and $ <var:n> = <nat:3> $ . Note $ <nat:34594560> = <nat:10> \cdot <nat:8> \cdot <nat:13> \cdot <nat:2> \cdot <nat:6> \cdot <nat:3> \cdot <nat:11> \cdot <nat:12> \cdot <nat:7> $ . Moreover note $ <nat:2> $ , $ <nat:8> $ , $ <nat:11> $ , $ <nat:10> $ , $ <nat:7> $ , $ <nat:12> $ , $ <nat:3> $ , $ <nat:13> $ , and $ <nat:6> > <nat:1> $ . This hints <nat:34594560> is a <def:nine-composite> positive integer . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:nine-composite> ( <var:s> : nat ) := exists <var:b> <var:y> <var:K> <var:k> <var:n> <var:c> <var:x> <var:e> <var:V> : nat , ( <var:s> = <var:K> * <var:k> * <var:y> * <var:c> * <var:x> * <var:V> * <var:b> * <var:e> * <var:n> ) /\ ( <var:K> >= <nat:2> ) /\ ( <var:b> >= <nat:2> ) /\ ( <var:V> >= <nat:2> ) /\ ( <var:y> >= <nat:2> ) /\ ( <var:c> >= <nat:2> ) /\ ( <var:n> >= <nat:2> ) /\ ( <var:k> >= <nat:2> ) /\ ( <var:e> >= <nat:2> ) /\ ( <var:x> >= <nat:2> ) . Theorem <genP:1> : <def:nine-composite> <nat:34594560> . Proof . unfold <def:nine-composite> . exists <nat:10> . exists <nat:8> . exists <nat:12> . exists <nat:13> . exists <nat:3> . exists <nat:11> . exists <nat:7> . exists <nat:2> . exists <nat:6> . assert ( <genH> : <nat:2> > <nat:1> ) . { lia . } assert ( <genH> : <nat:8> > <nat:1> ) . { lia . } assert ( <genH> : <nat:11> > <nat:1> ) . { lia . } assert ( <genH> : <nat:10> > <nat:1> ) . { lia . } assert ( <genH> : <nat:7> > <nat:1> ) . { lia . } assert ( <genH> : <nat:12> > <nat:1> ) . { lia . } assert ( <genH> : <nat:3> > <nat:1> ) . { lia . } assert ( <genH> : <nat:13> > <nat:1> ) . { lia . } assert ( <genH> : <nat:6> > <nat:1> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 