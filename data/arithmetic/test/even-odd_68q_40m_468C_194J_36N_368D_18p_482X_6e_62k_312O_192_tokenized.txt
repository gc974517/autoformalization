\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:p> \cdot <nat:18> + <nat:62> \cdot <var:k> + <var:X> \cdot <nat:482> + <nat:194> \cdot <var:J> + <nat:36> \cdot <var:N> + <nat:68> \cdot <var:q> + <nat:40> \cdot <var:m> + <nat:6> \cdot <var:e> + <nat:192> + <nat:368> \cdot <var:D> + <nat:468> \cdot <var:C> + <var:O> \cdot <nat:312> $ is even with every natural numbers $ <var:N> $ , $ <var:q> $ , $ <var:D> $ , $ <var:p> $ , $ <var:C> $ , $ <var:J> $ , $ <var:e> $ , $ <var:m> $ , $ <var:X> $ , $ <var:O> $ , and $ <var:k> $ . \end{theorem} \begin{proof} We know that the adding of an even element of $ \mathbb{Z}^+ $ and an even number is even . In addition to this , the leading terms $ <nat:18> $ , $ <nat:62> $ , $ <nat:482> $ , $ <nat:194> $ , $ <nat:36> $ , $ <nat:68> $ , $ <nat:40> $ , $ <nat:6> $ , $ <nat:368> $ , $ <nat:468> $ , in addition to $ <nat:312> $ must be even numbers in $ \mathbb{N} $ . So , the pairs $ <var:p> <nat:18> $ , $ <nat:62> <var:k> $ , $ <nat:482> <var:X> $ , $ <nat:194> <var:J> $ , $ <nat:36> <var:N> $ , $ <nat:68> <var:q> $ , $ <nat:40> <var:m> $ , $ <var:e> <nat:6> $ , $ <nat:368> <var:D> $ , $ <var:C> <nat:468> $ , plus $ <var:O> <nat:312> $ is guaranteed to be even in addition . We verify the expression $ <var:q> \times <nat:68> + <var:m> \times <nat:40> + <nat:192> + <var:C> \times <nat:468> + <var:J> \times <nat:194> + <nat:36> \times <var:N> + <nat:368> \times <var:D> + <nat:18> \times <var:p> + <nat:482> \times <var:X> + <var:e> \times <nat:6> + <nat:62> \times <var:k> + <var:O> \times <nat:312> $ must be even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:N> <var:q> <var:D> <var:p> <var:C> <var:J> <var:e> <var:m> <var:X> <var:O> <var:k> : nat , Nat . even ( <nat:18> * <var:p> + <nat:62> * <var:k> + <nat:482> * <var:X> + <nat:194> * <var:J> + <nat:36> * <var:N> + <nat:68> * <var:q> + <nat:40> * <var:m> + <nat:6> * <var:e> + <nat:368> * <var:D> + <nat:468> * <var:C> + <nat:312> * <var:O> + <nat:192> ) = true . Proof . intros . repeat rewrite Nat . even_add . assert ( <genH> : Nat . even <nat:18> = true ) . { auto . } assert ( <genH> : Nat . even <nat:62> = true ) . { auto . } assert ( <genH> : Nat . even <nat:482> = true ) . { auto . } assert ( <genH> : Nat . even <nat:194> = true ) . { auto . } assert ( <genH> : Nat . even <nat:36> = true ) . { auto . } assert ( <genH> : Nat . even <nat:68> = true ) . { auto . } assert ( <genH> : Nat . even <nat:40> = true ) . { auto . } assert ( <genH> : Nat . even <nat:6> = true ) . { auto . } assert ( <genH> : Nat . even <nat:368> = true ) . { auto . } assert ( <genH> : Nat . even <nat:468> = true ) . { auto . } assert ( <genH> : Nat . even <nat:312> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:18> * <var:p> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:62> * <var:k> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:482> * <var:X> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:194> * <var:J> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:36> * <var:N> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:68> * <var:q> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:40> * <var:m> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:6> * <var:e> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:368> * <var:D> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:468> * <var:C> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:312> * <var:O> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 