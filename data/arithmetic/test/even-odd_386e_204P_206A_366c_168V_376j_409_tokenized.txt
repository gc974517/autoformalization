\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:409> + <var:e> \times <nat:386> + <nat:168> \times <var:V> + <var:P> \times <nat:204> + <var:c> \times <nat:366> + <var:j> \times <nat:376> + <var:A> \times <nat:206> $ must be odd assuming some whole numbers $ <var:j> $ , $ <var:V> $ , $ <var:e> $ , $ <var:P> $ , $ <var:A> $ , and $ <var:c> $ . \end{theorem} \begin{proof} We know the terms $ <var:e> \cdot <nat:386> $ , $ <nat:168> \cdot <var:V> $ , $ <nat:204> \cdot <var:P> $ , $ <nat:366> \cdot <var:c> $ , $ <nat:376> \cdot <var:j> $ , and moreover $ <var:A> \cdot <nat:206> $ are known as even since the natural numbers $ <nat:386> $ , $ <nat:168> $ , $ <nat:204> $ , $ <nat:366> $ , $ <nat:376> $ , plus $ <nat:206> $ are known as even elements of $ \mathbb{Z}^+ $ . It can be proven that $ <nat:386> <var:e> + <nat:204> <var:P> + <nat:206> <var:A> + <var:c> <nat:366> + <nat:168> <var:V> + <nat:409> + <var:j> <nat:376> $ is odd . Remember that $ <nat:409> $ is guaranteed to be an odd positive integer . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:j> <var:V> <var:e> <var:P> <var:A> <var:c> : nat , Nat . odd ( <nat:386> * <var:e> + <nat:168> * <var:V> + <nat:204> * <var:P> + <nat:366> * <var:c> + <nat:376> * <var:j> + <nat:206> * <var:A> + <nat:409> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:386> = true ) . { auto . } assert ( <genH> : Nat . even <nat:168> = true ) . { auto . } assert ( <genH> : Nat . even <nat:204> = true ) . { auto . } assert ( <genH> : Nat . even <nat:366> = true ) . { auto . } assert ( <genH> : Nat . even <nat:376> = true ) . { auto . } assert ( <genH> : Nat . even <nat:206> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:386> * <var:e> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:168> * <var:V> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:204> * <var:P> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:366> * <var:c> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:376> * <var:j> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:206> * <var:A> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . odd <nat:409> = true ) . { auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 