\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \newtheorem{definition}{Definition} \begin{document} \begin{definition} Let $ <var:U> $ , $ <var:a> $ , $ <var:s> $ , $ <var:N> $ , $ <var:J> $ , $ <var:L> $ , $ <var:t> $ , $ <var:Y> $ , $ <var:x> $ , $ <var:n> $ , $ <var:c> $ be positive integers . We denote that $ <var:g> \in \mathbb{Z}^+ $ will be called a <def:eleven-composite> integer assuming $ <var:a> * <var:U> * <var:N> * <var:L> * <var:c> * <var:x> * <var:s> * <var:t> * <var:n> * <var:J> * <var:Y> = <var:g> $ . \end{definition} \begin{theorem} The number <nat:566092800> is a <def:eleven-composite> positive integer . \end{theorem} \begin{proof} Recall that <nat:566092800> is a <def:eleven-composite> natural number under the condition that <nat:566092800> is the product of whole numbers $ <var:U> $ , $ <var:J> $ , $ <var:s> $ , $ <var:Y> $ , $ <var:n> $ , $ <var:a> $ , $ <var:t> $ , $ <var:N> $ , $ <var:x> $ , $ <var:L> $ , and $ <var:c> $ greater than <nat:1> . We demonstrate our belief is valid for $ <var:n> \times <var:x> \times <var:c> \times <var:Y> \times <var:s> \times <var:J> \times <var:L> \times <var:N> \times <var:U> \times <var:t> \times <var:a> = <nat:566092800> = <nat:13> \times <nat:5> \times <nat:3> \times <nat:8> \times <nat:4> \times <nat:6> \times <nat:7> \times <nat:12> \times <nat:2> \times <nat:9> \times <nat:10> $ . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:eleven-composite> ( <var:g> : nat ) := exists <var:U> <var:a> <var:s> <var:N> <var:J> <var:L> <var:t> <var:Y> <var:x> <var:n> <var:c> : nat , ( <var:a> * <var:U> * <var:N> * <var:L> * <var:c> * <var:x> * <var:s> * <var:t> * <var:n> * <var:J> * <var:Y> = <var:g> ) . Theorem <genP:1> : <def:eleven-composite> <nat:566092800> . Proof . unfold <def:eleven-composite> . exists <nat:2> . exists <nat:10> . exists <nat:4> . exists <nat:12> . exists <nat:6> . exists <nat:7> . exists <nat:9> . exists <nat:8> . exists <nat:5> . exists <nat:13> . exists <nat:3> . repeat split . all : lia . Qed . 