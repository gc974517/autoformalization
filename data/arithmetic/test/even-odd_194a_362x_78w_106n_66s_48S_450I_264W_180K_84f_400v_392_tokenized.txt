\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:a> * <nat:194> + <var:x> * <nat:362> + <nat:392> + <nat:78> * <var:w> + <nat:106> * <var:n> + <nat:66> * <var:s> + <var:S> * <nat:48> + <nat:450> * <var:I> + <var:W> * <nat:264> + <var:K> * <nat:180> + <var:f> * <nat:84> + <var:v> * <nat:400> $ must be even with any variables $ <var:f> $ , $ <var:s> $ , $ <var:K> $ , $ <var:W> $ , $ <var:v> $ , $ <var:n> $ , $ <var:x> $ , $ <var:S> $ , $ <var:I> $ , $ <var:a> $ , and $ <var:w> $ . \end{theorem} \begin{proof} We know the positive integers $ <nat:194> $ , $ <nat:362> $ , $ <nat:78> $ , $ <nat:106> $ , $ <nat:66> $ , $ <nat:48> $ , $ <nat:450> $ , $ <nat:264> $ , $ <nat:180> $ , $ <nat:84> $ , and likewise $ <nat:400> $ are guaranteed to be even . In consequence , the products $ <nat:194> <var:a> $ , $ <var:x> <nat:362> $ , $ <nat:78> <var:w> $ , $ <var:n> <nat:106> $ , $ <nat:66> <var:s> $ , $ <nat:48> <var:S> $ , $ <var:I> <nat:450> $ , $ <nat:264> <var:W> $ , $ <nat:180> <var:K> $ , $ <var:f> <nat:84> $ , and moreover $ <nat:400> <var:v> $ must be even additionally . We check this lemma holds . Take note $ <nat:392> $ is clearly even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:f> <var:s> <var:K> <var:W> <var:v> <var:n> <var:x> <var:S> <var:I> <var:a> <var:w> : nat , Nat . even ( <nat:194> * <var:a> + <nat:362> * <var:x> + <nat:78> * <var:w> + <nat:106> * <var:n> + <nat:66> * <var:s> + <nat:48> * <var:S> + <nat:450> * <var:I> + <nat:264> * <var:W> + <nat:180> * <var:K> + <nat:84> * <var:f> + <nat:400> * <var:v> + <nat:392> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:194> = true ) . { auto . } assert ( <genH> : Nat . even <nat:362> = true ) . { auto . } assert ( <genH> : Nat . even <nat:78> = true ) . { auto . } assert ( <genH> : Nat . even <nat:106> = true ) . { auto . } assert ( <genH> : Nat . even <nat:66> = true ) . { auto . } assert ( <genH> : Nat . even <nat:48> = true ) . { auto . } assert ( <genH> : Nat . even <nat:450> = true ) . { auto . } assert ( <genH> : Nat . even <nat:264> = true ) . { auto . } assert ( <genH> : Nat . even <nat:180> = true ) . { auto . } assert ( <genH> : Nat . even <nat:84> = true ) . { auto . } assert ( <genH> : Nat . even <nat:400> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:194> * <var:a> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:362> * <var:x> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:78> * <var:w> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:106> * <var:n> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:66> * <var:s> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:48> * <var:S> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:450> * <var:I> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:264> * <var:W> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:180> * <var:K> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:84> * <var:f> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:400> * <var:v> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:392> = true ) . { auto . } repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 