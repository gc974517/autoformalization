\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Assuming all $ <var:p> $ , $ <var:F> $ , $ <var:v> $ , $ <var:c> $ , $ <var:K> $ , and $ <var:M> $ $ <var:p> \times <nat:36> + <nat:198> \times <var:M> + <nat:316> + <var:v> \times <nat:148> + <var:F> \times <nat:282> + <var:c> \times <nat:352> + <nat:490> \times <var:K> $ is guaranteed to be even . \end{theorem} \begin{proof} The products $ <nat:36> \cdot <var:p> $ , $ <nat:198> \cdot <var:M> $ , $ <var:v> \cdot <nat:148> $ , $ <var:F> \cdot <nat:282> $ , $ <nat:352> \cdot <var:c> $ , in addition to $ <nat:490> \cdot <var:K> $ must be even positive integers . This claim must be true since the positive integers $ <nat:36> $ , $ <nat:198> $ , $ <nat:148> $ , $ <nat:282> $ , $ <nat:352> $ , and moreover $ <nat:490> $ are guaranteed to be even whole numbers . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:p> <var:F> <var:v> <var:c> <var:K> <var:M> : nat , Nat . even ( <nat:36> * <var:p> + <nat:198> * <var:M> + <nat:148> * <var:v> + <nat:282> * <var:F> + <nat:352> * <var:c> + <nat:490> * <var:K> + <nat:316> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:36> = true ) . { auto . } assert ( <genH> : Nat . even <nat:198> = true ) . { auto . } assert ( <genH> : Nat . even <nat:148> = true ) . { auto . } assert ( <genH> : Nat . even <nat:282> = true ) . { auto . } assert ( <genH> : Nat . even <nat:352> = true ) . { auto . } assert ( <genH> : Nat . even <nat:490> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:36> * <var:p> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:198> * <var:M> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:148> * <var:v> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:282> * <var:F> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:352> * <var:c> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:490> * <var:K> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 