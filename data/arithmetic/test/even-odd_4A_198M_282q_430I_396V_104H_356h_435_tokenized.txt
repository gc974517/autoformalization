\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} For every integers $ <var:q> $ , $ <var:h> $ , $ <var:M> $ , $ <var:V> $ , $ <var:H> $ , $ <var:A> $ , and $ <var:I> $ the summation $ <nat:104> * <var:H> + <nat:356> * <var:h> + <var:M> * <nat:198> + <nat:396> * <var:V> + <var:A> * <nat:4> + <nat:435> + <var:I> * <nat:430> + <var:q> * <nat:282> $ will be odd . \end{theorem} \begin{proof} Take note $ <nat:435> $ is known to be odd . The totaling of an even number in $ \mathbb{N} $ with an odd number is an odd element of $ \mathbb{Z}^+ $ . We make use the understanding $ <var:h> * <nat:356> + <nat:4> * <var:A> + <var:V> * <nat:396> + <var:q> * <nat:282> + <var:H> * <nat:104> + <nat:198> * <var:M> + <var:I> * <nat:430> $ is clearly even . The term $ <var:A> \times <nat:4> $ is known to be even . This is true because the positive integer $ <nat:4> $ is guaranteed to be even . Furthermore , the whole number $ <nat:198> $ is an even integer . Consequently , the term $ <nat:198> \times <var:M> $ is even at the same time . Take note that $ <nat:282> \times <var:q> $ is guaranteed to be even from the fact the natural number $ <nat:282> $ is known as an even number in $ \mathbb{N} $ . Further , observe that the number $ <nat:430> $ is even . For this reason , the pair $ <var:I> \times <nat:430> $ is guaranteed to be even too . The integer $ <nat:396> $ is obviously an even number in $ \mathbb{N} $ . Thus , the product $ <nat:396> \times <var:V> $ is even also . The product $ <var:H> \times <nat:104> $ is known to be an even integer from the fact the product of an even element of $ \mathbb{N} $ with any integer must be clearly an even natural number . This fact is true as a consequence that the leading term $ <nat:104> $ is guaranteed to be trivially an even positive integer . Remember that the product $ <var:h> \times <nat:356> $ is known to be an even positive integer . This is proven because the multiplication of an even natural and an arbitrary whole number is even , which is true by reason that the number $ <nat:356> $ is trivially even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:q> <var:h> <var:M> <var:V> <var:H> <var:A> <var:I> : nat , Nat . odd ( <nat:104> * <var:H> + <nat:356> * <var:h> + <nat:198> * <var:M> + <nat:396> * <var:V> + <nat:4> * <var:A> + <nat:430> * <var:I> + <nat:282> * <var:q> + <nat:435> ) = true . Proof . intros . assert ( <genH> : Nat . odd <nat:435> = true ) . { auto . } rewrite Nat . odd_add . assert ( <genH> : Nat . even <nat:4> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:4> * <var:A> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:198> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:198> * <var:M> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:282> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:282> * <var:q> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:430> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:430> * <var:I> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:396> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:396> * <var:V> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:104> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:104> * <var:H> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:356> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:356> * <var:h> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:104> * <var:H> + <nat:356> * <var:h> + <nat:198> * <var:M> + <nat:396> * <var:V> + <nat:4> * <var:A> + <nat:430> * <var:I> + <nat:282> * <var:q> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite <- Nat . negb_even . rewrite <genH> . rewrite <genH> . auto . Qed . 