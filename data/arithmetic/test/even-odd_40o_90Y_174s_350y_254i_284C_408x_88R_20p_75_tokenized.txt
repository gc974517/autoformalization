\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:C> <nat:284> + <nat:88> <var:R> + <nat:90> <var:Y> + <nat:75> + <nat:20> <var:p> + <var:y> <nat:350> + <nat:174> <var:s> + <var:x> <nat:408> + <nat:254> <var:i> + <var:o> <nat:40> $ is guaranteed to be odd taking some integers $ <var:R> $ , $ <var:Y> $ , $ <var:p> $ , $ <var:y> $ , $ <var:o> $ , $ <var:i> $ , $ <var:s> $ , $ <var:x> $ , and $ <var:C> $ . \end{theorem} \begin{proof} We show the summation $ <var:o> \cdot <nat:40> + <var:Y> \cdot <nat:90> + <var:s> \cdot <nat:174> + <nat:350> \cdot <var:y> + <var:i> \cdot <nat:254> + <var:C> \cdot <nat:284> + <nat:75> + <var:x> \cdot <nat:408> + <var:R> \cdot <nat:88> + <var:p> \cdot <nat:20> $ is odd . In addition to this , observe the integers $ <nat:40> $ , $ <nat:90> $ , $ <nat:174> $ , $ <nat:350> $ , $ <nat:254> $ , $ <nat:284> $ , $ <nat:408> $ , $ <nat:88> $ , additionally $ <nat:20> $ are clearly even . Then , the terms $ <var:o> \cdot <nat:40> $ , $ <nat:90> \cdot <var:Y> $ , $ <var:s> \cdot <nat:174> $ , $ <nat:350> \cdot <var:y> $ , $ <var:i> \cdot <nat:254> $ , $ <nat:284> \cdot <var:C> $ , $ <var:x> \cdot <nat:408> $ , $ <var:R> \cdot <nat:88> $ , in addition to $ <var:p> \cdot <nat:20> $ will be even additionally . The totaling of an even whole number with an odd whole number will be odd . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:R> <var:Y> <var:p> <var:y> <var:o> <var:i> <var:s> <var:x> <var:C> : nat , Nat . odd ( <nat:284> * <var:C> + <nat:88> * <var:R> + <nat:90> * <var:Y> + <nat:20> * <var:p> + <nat:350> * <var:y> + <nat:174> * <var:s> + <nat:408> * <var:x> + <nat:254> * <var:i> + <nat:40> * <var:o> + <nat:75> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:40> = true ) . { auto . } assert ( <genH> : Nat . even <nat:90> = true ) . { auto . } assert ( <genH> : Nat . even <nat:174> = true ) . { auto . } assert ( <genH> : Nat . even <nat:350> = true ) . { auto . } assert ( <genH> : Nat . even <nat:254> = true ) . { auto . } assert ( <genH> : Nat . even <nat:284> = true ) . { auto . } assert ( <genH> : Nat . even <nat:408> = true ) . { auto . } assert ( <genH> : Nat . even <nat:88> = true ) . { auto . } assert ( <genH> : Nat . even <nat:20> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:40> * <var:o> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:90> * <var:Y> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:174> * <var:s> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:350> * <var:y> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:254> * <var:i> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:284> * <var:C> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:408> * <var:x> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:88> * <var:R> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:20> * <var:p> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 