\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} The natural number <nat:7603200> is the multiplication of positive integers $ <var:V> $ , $ <var:Q> $ , $ <var:E> $ , $ <var:U> $ , $ <var:K> $ , $ <var:W> $ , $ <var:P> $ , $ <var:S> $ , $ <var:D> $ such that $ <var:D> $ , $ <var:E> $ , $ <var:V> $ , $ <var:P> $ , $ <var:K> $ , $ <var:U> $ , $ <var:S> $ , $ <var:Q> $ , $ <var:W> > <nat:1> $ . \end{theorem} \begin{proof} Note that $ <var:K> \cdot <var:U> \cdot <var:S> \cdot <var:P> \cdot <var:Q> \cdot <var:E> \cdot <var:W> \cdot <var:V> \cdot <var:D> = <nat:8> \cdot <nat:10> \cdot <nat:6> \cdot <nat:11> \cdot <nat:3> \cdot <nat:2> \cdot <nat:4> \cdot <nat:5> \cdot <nat:12> = <nat:7603200> $ . Also observe $ <nat:11> $ , $ <nat:12> $ , $ <nat:10> $ , $ <nat:8> $ , $ <nat:6> $ , $ <nat:4> $ , $ <nat:3> $ , $ <nat:2> $ , $ <nat:5> > <nat:1> $ . \end{proof} \end{document} 
~
Require Import Lia . Theorem <genP:1> : exists <var:V> <var:Q> <var:E> <var:U> <var:K> <var:W> <var:P> <var:S> <var:D> : nat , ( <nat:7603200> = <var:V> * <var:Q> * <var:E> * <var:U> * <var:K> * <var:W> * <var:P> * <var:S> * <var:D> ) /\ ( <var:D> > <nat:1> ) /\ ( <var:E> > <nat:1> ) /\ ( <var:V> > <nat:1> ) /\ ( <var:P> > <nat:1> ) /\ ( <var:K> > <nat:1> ) /\ ( <var:U> > <nat:1> ) /\ ( <var:S> > <nat:1> ) /\ ( <var:Q> > <nat:1> ) /\ ( <var:W> > <nat:1> ) . Proof . exists <nat:5> . exists <nat:3> . exists <nat:2> . exists <nat:10> . exists <nat:8> . exists <nat:4> . exists <nat:11> . exists <nat:6> . exists <nat:12> . assert ( <genH> : <nat:11> > <nat:1> ) . { lia . } assert ( <genH> : <nat:12> > <nat:1> ) . { lia . } assert ( <genH> : <nat:10> > <nat:1> ) . { lia . } assert ( <genH> : <nat:8> > <nat:1> ) . { lia . } assert ( <genH> : <nat:6> > <nat:1> ) . { lia . } assert ( <genH> : <nat:4> > <nat:1> ) . { lia . } assert ( <genH> : <nat:3> > <nat:1> ) . { lia . } assert ( <genH> : <nat:2> > <nat:1> ) . { lia . } assert ( <genH> : <nat:5> > <nat:1> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 