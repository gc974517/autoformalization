\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Let $ <var:U> $ , $ <var:i> $ , $ <var:I> $ , $ <var:v> $ , $ <var:W> $ , $ <var:B> $ , $ <var:q> $ and $ <var:X> \in \mathbb{Z}^+ $ where $ <var:W> $ , $ <var:v> $ , $ <var:X> $ , $ <var:q> $ , $ <var:I> $ , $ <var:B> $ , $ <var:i> $ , and $ <var:U> \geq <nat:2> $ and where the whole number <nat:6918912> is the product of $ <var:U> $ , $ <var:i> $ , $ <var:I> $ , $ <var:v> $ , $ <var:W> $ , $ <var:B> $ , $ <var:q> $ and $ <var:X> \in \mathbb{Z}^+ $ . \end{theorem} \begin{proof} Assume $ <var:X> = <nat:4> $ , $ <var:v> = <nat:6> $ , $ <var:W> = <nat:11> $ , $ <var:i> = <nat:12> $ , $ <var:B> = <nat:13> $ , $ <var:q> = <nat:7> $ , $ <var:I> = <nat:8> $ , $ <var:U> = <nat:3> $ . Notice that $ <nat:8> \times <nat:12> \times <nat:13> \times <nat:6> \times <nat:3> \times <nat:7> \times <nat:4> \times <nat:11> = <nat:6918912> = <var:I> \times <var:i> \times <var:B> \times <var:v> \times <var:U> \times <var:q> \times <var:X> \times <var:W> $ . Further note that $ <nat:6> $ , $ <nat:4> $ , $ <nat:7> $ , $ <nat:12> $ , $ <nat:8> $ , $ <nat:13> $ , $ <nat:11> $ , and $ <nat:3> \geq <nat:2> $ . As a result , <nat:6918912> is the product of $ <var:X> $ , $ <var:I> $ , $ <var:U> $ , $ <var:B> $ , $ <var:q> $ , $ <var:v> $ , $ <var:W> $ , $ <var:i> \in \mathbb{N} $ is validated . \end{proof} \end{document} 
~
Require Import Lia . Theorem <genP:1> : exists <var:U> <var:i> <var:I> <var:v> <var:W> <var:B> <var:q> <var:X> : nat , ( <var:W> >= <nat:2> ) /\ ( <var:v> >= <nat:2> ) /\ ( <var:X> >= <nat:2> ) /\ ( <var:q> >= <nat:2> ) /\ ( <var:I> >= <nat:2> ) /\ ( <var:B> >= <nat:2> ) /\ ( <var:i> >= <nat:2> ) /\ ( <var:U> >= <nat:2> ) /\ ( <nat:6918912> = <var:U> * <var:i> * <var:I> * <var:v> * <var:W> * <var:B> * <var:q> * <var:X> ) . Proof . exists <nat:3> . exists <nat:12> . exists <nat:8> . exists <nat:6> . exists <nat:11> . exists <nat:13> . exists <nat:7> . exists <nat:4> . assert ( <genH> : <nat:6> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:4> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:7> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:12> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:8> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:13> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:11> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:3> >= <nat:2> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 