\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Taking some terms $ <var:Q> $ , $ <var:n> $ , $ <var:W> $ , $ <var:e> $ , $ <var:t> $ , $ <var:B> $ , $ <var:z> $ , and $ <var:v> $ $ <nat:232> \times <var:e> + <nat:177> + <var:B> \times <nat:398> + <var:Q> \times <nat:92> + <var:z> \times <nat:266> + <nat:466> \times <var:n> + <var:W> \times <nat:50> + <nat:400> \times <var:t> + <var:v> \times <nat:280> $ is guaranteed to be odd . \end{theorem} \begin{proof} See that the whole numbers $ <nat:232> $ , $ <nat:398> $ , $ <nat:92> $ , $ <nat:266> $ , $ <nat:466> $ , $ <nat:50> $ , $ <nat:400> $ , and $ <nat:280> $ are clearly even elements of $ \mathbb{Z}^+ $ . In consequence , the products $ <var:e> \cdot <nat:232> $ , $ <nat:398> \cdot <var:B> $ , $ <nat:92> \cdot <var:Q> $ , $ <nat:266> \cdot <var:z> $ , $ <var:n> \cdot <nat:466> $ , $ <nat:50> \cdot <var:W> $ , $ <var:t> \cdot <nat:400> $ , plus $ <var:v> \cdot <nat:280> $ is even additionally . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:Q> <var:n> <var:W> <var:e> <var:t> <var:B> <var:z> <var:v> : nat , Nat . odd ( <nat:232> * <var:e> + <nat:398> * <var:B> + <nat:92> * <var:Q> + <nat:266> * <var:z> + <nat:466> * <var:n> + <nat:50> * <var:W> + <nat:400> * <var:t> + <nat:280> * <var:v> + <nat:177> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:232> = true ) . { auto . } assert ( <genH> : Nat . even <nat:398> = true ) . { auto . } assert ( <genH> : Nat . even <nat:92> = true ) . { auto . } assert ( <genH> : Nat . even <nat:266> = true ) . { auto . } assert ( <genH> : Nat . even <nat:466> = true ) . { auto . } assert ( <genH> : Nat . even <nat:50> = true ) . { auto . } assert ( <genH> : Nat . even <nat:400> = true ) . { auto . } assert ( <genH> : Nat . even <nat:280> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:232> * <var:e> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:398> * <var:B> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:92> * <var:Q> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:266> * <var:z> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:466> * <var:n> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:50> * <var:W> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:400> * <var:t> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:280> * <var:v> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 