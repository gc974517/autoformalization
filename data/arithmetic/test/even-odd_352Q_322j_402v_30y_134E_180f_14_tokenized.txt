\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Given any positive terms $ <var:Q> $ , $ <var:v> $ , $ <var:y> $ , $ <var:E> $ , $ <var:f> $ , and $ <var:j> $ the summation $ <var:j> \cdot <nat:322> + <var:E> \cdot <nat:134> + <var:Q> \cdot <nat:352> + <nat:180> \cdot <var:f> + <nat:14> + <var:y> \cdot <nat:30> + <nat:402> \cdot <var:v> $ is even . \end{theorem} \begin{proof} The terms $ <var:j> \cdot <nat:322> $ , $ <nat:180> \cdot <var:f> $ , $ <nat:352> \cdot <var:Q> $ , and likewise $ <var:v> \cdot <nat:402> $ are guaranteed to be even numbers in $ \mathbb{Z}^+ $ by reason that the numbers $ <nat:322> $ , $ <nat:180> $ , $ <nat:352> $ , and also $ <nat:402> $ are by their very nature even whole numbers . Adding on , take note the pair $ <nat:134> \cdot <var:E> $ is guaranteed to be even . This fact holds as a consequence that the coefficient $ <nat:134> $ is trivially even . Furthermore , the product $ <nat:30> \cdot <var:y> $ is clearly even . This claim holds as a consequence that taking the product of an even whole number with any whole number will be itself an even number , which is proven by reason that the coefficient $ <nat:30> $ is guaranteed to be even . Observe that the summing between an even natural and an even positive integer is in itself an even number . Take note $ <nat:14> $ is clearly even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:Q> <var:v> <var:y> <var:E> <var:f> <var:j> : nat , Nat . even ( <nat:322> * <var:j> + <nat:134> * <var:E> + <nat:352> * <var:Q> + <nat:180> * <var:f> + <nat:30> * <var:y> + <nat:402> * <var:v> + <nat:14> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:322> = true ) . { auto . } assert ( <genH> : Nat . even <nat:180> = true ) . { auto . } assert ( <genH> : Nat . even <nat:352> = true ) . { auto . } assert ( <genH> : Nat . even <nat:402> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:322> * <var:j> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:180> * <var:f> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:352> * <var:Q> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:402> * <var:v> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:134> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:134> * <var:E> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:30> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:30> * <var:y> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } repeat rewrite Nat . even_add . assert ( <genH> : Nat . even <nat:14> = true ) . { auto . } rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 