\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:N> \cdot <nat:206> + <nat:31> + <nat:386> \cdot <var:Z> + <var:Y> \cdot <nat:186> + <nat:136> \cdot <var:h> + <nat:328> \cdot <var:e> + <var:g> \cdot <nat:378> + <var:w> \cdot <nat:368> + <var:b> \cdot <nat:102> + <var:T> \cdot <nat:46> $ must be odd assuming some positive numbers $ <var:Z> $ , $ <var:T> $ , $ <var:g> $ , $ <var:b> $ , $ <var:e> $ , $ <var:h> $ , $ <var:Y> $ , $ <var:N> $ , and $ <var:w> $ . \end{theorem} \begin{proof} It can be verified that $ <nat:368> \cdot <var:w> + <var:b> \cdot <nat:102> + <nat:378> \cdot <var:g> + <nat:31> + <var:T> \cdot <nat:46> + <nat:136> \cdot <var:h> + <var:Z> \cdot <nat:386> + <nat:206> \cdot <var:N> + <nat:328> \cdot <var:e> + <nat:186> \cdot <var:Y> $ must be odd . The numbers $ <nat:378> $ , $ <nat:328> $ , $ <nat:102> $ , and also $ <nat:386> $ are even elements of $ \mathbb{N} $ . Consequently , the products $ <var:g> * <nat:378> $ , $ <nat:328> * <var:e> $ , $ <var:b> * <nat:102> $ , and likewise $ <var:Z> * <nat:386> $ is even at the same time . We know the products $ <nat:46> * <var:T> $ and likewise $ <nat:368> * <var:w> $ are guaranteed to be even . This claim is proven since the multiplication between an even number in $ \mathbb{N} $ and any number in $ \mathbb{N} $ is guaranteed to be even , which is true because the whole numbers $ <nat:46> $ additionally $ <nat:368> $ are trivially even . Adding on , we know the product $ <nat:136> * <var:h> $ is known as an even number by reason that the whole number $ <nat:136> $ is even . On top of this , the natural number $ <nat:206> $ is trivially an even whole number . As a consequence , the product $ <nat:206> * <var:N> $ is guaranteed to be even in addition . Further , the coefficient $ <nat:186> $ is clearly even . Accordingly , the pair $ <var:Y> * <nat:186> $ is guaranteed to be even too . The summation between an even natural number with an odd number in $ \mathbb{Z}^+ $ will be odd . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:Z> <var:T> <var:g> <var:b> <var:e> <var:h> <var:Y> <var:N> <var:w> : nat , Nat . odd ( <nat:206> * <var:N> + <nat:386> * <var:Z> + <nat:186> * <var:Y> + <nat:136> * <var:h> + <nat:328> * <var:e> + <nat:378> * <var:g> + <nat:368> * <var:w> + <nat:102> * <var:b> + <nat:46> * <var:T> + <nat:31> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:378> = true ) . { auto . } assert ( <genH> : Nat . even <nat:328> = true ) . { auto . } assert ( <genH> : Nat . even <nat:102> = true ) . { auto . } assert ( <genH> : Nat . even <nat:386> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:378> * <var:g> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:328> * <var:e> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:102> * <var:b> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:386> * <var:Z> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:46> = true ) . { auto . } assert ( <genH> : Nat . even <nat:368> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:46> * <var:T> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:368> * <var:w> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:136> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:136> * <var:h> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:206> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:206> * <var:N> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:186> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:186> * <var:Y> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 