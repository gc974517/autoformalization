\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Given some $ <var:X> $ , $ <var:C> $ , $ <var:O> $ , and $ <var:i> $ the summation $ <nat:430> \cdot <var:C> + <var:i> \cdot <nat:54> + <nat:123> + <var:O> \cdot <nat:256> + <var:X> \cdot <nat:10> $ is odd . \end{theorem} \begin{proof} The summation of even numbers in $ \mathbb{N} $ and an odd natural number must be obviously an odd natural number . See the number $ <nat:256> $ is guaranteed to be even . Hence , the pair $ <var:O> * <nat:256> $ will be even additionally . Observe the whole number $ <nat:10> $ is known to be an even number in $ \mathbb{N} $ . Hence , the product $ <var:X> * <nat:10> $ must be even also . The number $ <nat:430> $ is known to be even . In consequence , the pair $ <var:C> * <nat:430> $ must be even also . The product $ <nat:54> * <var:i> $ is known to be an even number . This fact is proven by reason that the product of an even element of $ \mathbb{Z}^+ $ and any natural number is even , which is true from the knowledge the coefficient $ <nat:54> $ is known as even . We demonstrate the expression $ <nat:430> <var:C> + <nat:123> + <nat:10> <var:X> + <var:O> <nat:256> + <nat:54> <var:i> $ is odd . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:X> <var:C> <var:O> <var:i> : nat , Nat . odd ( <nat:430> * <var:C> + <nat:54> * <var:i> + <nat:256> * <var:O> + <nat:10> * <var:X> + <nat:123> ) = true . Proof . intros . rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . assert ( <genH> : Nat . even <nat:256> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:256> * <var:O> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:10> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:10> * <var:X> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:430> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:430> * <var:C> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:54> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:54> * <var:i> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 