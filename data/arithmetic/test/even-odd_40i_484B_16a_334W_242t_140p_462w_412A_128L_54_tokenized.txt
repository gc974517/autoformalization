\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:i> \cdot <nat:40> + <nat:484> \cdot <var:B> + <nat:16> \cdot <var:a> + <var:W> \cdot <nat:334> + <var:t> \cdot <nat:242> + <nat:140> \cdot <var:p> + <var:w> \cdot <nat:462> + <var:A> \cdot <nat:412> + <nat:54> + <nat:128> \cdot <var:L> $ must be even . \end{theorem} \begin{proof} The addition of an even number in $ \mathbb{Z}^+ $ with an even number will be by itself an even integer . Take note that $ <nat:54> $ is guaranteed to be even . The products $ <var:t> \times <nat:242> $ , $ <var:a> \times <nat:16> $ , $ <nat:484> \times <var:B> $ , $ <nat:128> \times <var:L> $ , $ <nat:462> \times <var:w> $ , $ <var:W> \times <nat:334> $ , $ <nat:140> \times <var:p> $ , and also $ <nat:412> \times <var:A> $ are obviously even naturals . $ <nat:40> \times <var:i> $ is trivially an even positive integer . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:i> <var:B> <var:a> <var:W> <var:t> <var:p> <var:w> <var:A> <var:L> : nat , Nat . even ( <nat:40> * <var:i> + <nat:484> * <var:B> + <nat:16> * <var:a> + <nat:334> * <var:W> + <nat:242> * <var:t> + <nat:140> * <var:p> + <nat:462> * <var:w> + <nat:412> * <var:A> + <nat:128> * <var:L> + <nat:54> ) = true . Proof . intros . repeat rewrite Nat . even_add . assert ( <genH> : Nat . even <nat:54> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:242> * <var:t> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:16> * <var:a> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:484> * <var:B> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:128> * <var:L> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:462> * <var:w> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:334> * <var:W> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:140> * <var:p> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:412> * <var:A> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:40> * <var:i> ) = true ) . { rewrite Nat . even_mul . auto . } rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 