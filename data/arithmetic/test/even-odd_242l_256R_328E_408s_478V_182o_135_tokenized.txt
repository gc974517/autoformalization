\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:242> * <var:l> + <nat:256> * <var:R> + <nat:328> * <var:E> + <var:s> * <nat:408> + <var:V> * <nat:478> + <nat:135> + <nat:182> * <var:o> $ is guaranteed to be odd with terms $ <var:o> $ , $ <var:E> $ , $ <var:V> $ , $ <var:s> $ , $ <var:R> $ , and $ <var:l> $ . \end{theorem} \begin{proof} We know that the addition between an even element of $ \mathbb{N} $ with an odd natural must be an odd number in $ \mathbb{N} $ . The pairs $ <var:s> <nat:408> $ , $ <nat:242> <var:l> $ , $ <nat:182> <var:o> $ , plus $ <var:R> <nat:256> $ are even elements of $ \mathbb{Z}^+ $ . The product $ <nat:328> <var:E> $ is even . This fact is proven from the knowledge the product of an even integer and any element of $ \mathbb{Z}^+ $ is guaranteed to be even . Building on , $ <var:V> <nat:478> $ is guaranteed to be an even element of $ \mathbb{N} $ . It can be shown that our claim is proven . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:o> <var:E> <var:V> <var:s> <var:R> <var:l> : nat , Nat . odd ( <nat:242> * <var:l> + <nat:256> * <var:R> + <nat:328> * <var:E> + <nat:408> * <var:s> + <nat:478> * <var:V> + <nat:182> * <var:o> + <nat:135> ) = true . Proof . intros . rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . assert ( <genH> : Nat . even ( <nat:408> * <var:s> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:242> * <var:l> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:182> * <var:o> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:256> * <var:R> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:328> * <var:E> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:478> * <var:V> ) = true ) . { rewrite Nat . even_mul . auto . } rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 