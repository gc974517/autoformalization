\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:198> <var:L> + <var:G> <nat:6> + <var:I> <nat:192> + <nat:376> <var:b> + <nat:464> <var:q> + <nat:298> <var:R> + <var:K> <nat:346> + <nat:335> $ is guaranteed to be odd using integers $ <var:R> $ , $ <var:I> $ , $ <var:L> $ , $ <var:b> $ , $ <var:q> $ , $ <var:G> $ , and $ <var:K> $ . \end{theorem} \begin{proof} It can be demonstrated that that $ <var:L> <nat:198> + <var:G> <nat:6> + <nat:464> <var:q> + <var:K> <nat:346> + <var:R> <nat:298> + <var:I> <nat:192> + <nat:376> <var:b> $ is obviously even , since the summation between an even number in $ \mathbb{Z}^+ $ with an even positive integer is an even number . Observe as well the multiplication of an even whole number with any natural number will be even . Take note that the integers $ <nat:198> $ and moreover $ <nat:346> $ are trivially even The whole numbers $ <nat:464> $ , $ <nat:6> $ , $ <nat:298> $ , in addition to $ <nat:376> $ will be even naturals Recall that the natural number $ <nat:192> $ is obviously an even element of $ \mathbb{Z}^+ $ We know that $ <nat:335> $ is odd . The addition of even whole numbers successively and an odd number in $ \mathbb{Z}^+ $ must be an odd natural number . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:R> <var:I> <var:L> <var:b> <var:q> <var:G> <var:K> : nat , Nat . odd ( <nat:198> * <var:L> + <nat:6> * <var:G> + <nat:192> * <var:I> + <nat:376> * <var:b> + <nat:464> * <var:q> + <nat:298> * <var:R> + <nat:346> * <var:K> + <nat:335> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:198> = true ) . { auto . } assert ( <genH> : Nat . even <nat:346> = true ) . { auto . } assert ( <genH> : Nat . even <nat:464> = true ) . { auto . } assert ( <genH> : Nat . even <nat:6> = true ) . { auto . } assert ( <genH> : Nat . even <nat:298> = true ) . { auto . } assert ( <genH> : Nat . even <nat:376> = true ) . { auto . } assert ( <genH> : Nat . even <nat:192> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:198> * <var:L> + <nat:6> * <var:G> + <nat:192> * <var:I> + <nat:376> * <var:b> + <nat:464> * <var:q> + <nat:298> * <var:R> + <nat:346> * <var:K> ) = true ) . { repeat rewrite Nat . even_add . repeat rewrite Nat . even_mul . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } assert ( <genH> : Nat . odd <nat:335> = true ) . { auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . rewrite <genH> . auto . Qed . 