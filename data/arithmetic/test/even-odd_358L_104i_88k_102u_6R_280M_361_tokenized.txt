\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:k> \cdot <nat:88> + <var:M> \cdot <nat:280> + <nat:104> \cdot <var:i> + <var:R> \cdot <nat:6> + <nat:361> + <nat:358> \cdot <var:L> + <var:u> \cdot <nat:102> $ is odd using some terms $ <var:L> $ , $ <var:M> $ , $ <var:u> $ , $ <var:i> $ , $ <var:k> $ , and $ <var:R> $ . \end{theorem} \begin{proof} Remember $ <var:L> * <nat:358> + <nat:104> * <var:i> + <nat:88> * <var:k> + <var:u> * <nat:102> + <nat:6> * <var:R> + <nat:280> * <var:M> $ is clearly even , by reason that the totaling of an even positive integer and an even positive integer is guaranteed to be even . Furthermore , the natural numbers $ <nat:358> $ , $ <nat:104> $ , $ <nat:88> $ , $ <nat:102> $ , $ <nat:6> $ , and moreover $ <nat:280> $ are trivially even numbers in $ \mathbb{Z}^+ $ . Therefore , the products $ <nat:358> \cdot <var:L> $ , $ <nat:104> \cdot <var:i> $ , $ <var:k> \cdot <nat:88> $ , $ <nat:102> \cdot <var:u> $ , $ <var:R> \cdot <nat:6> $ , additionally $ <nat:280> \cdot <var:M> $ will be even additionally . and likewise by reason that the product of an even natural with any natural must be by itself an even integer the theorem is true . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:L> <var:M> <var:u> <var:i> <var:k> <var:R> : nat , Nat . odd ( <nat:88> * <var:k> + <nat:280> * <var:M> + <nat:104> * <var:i> + <nat:6> * <var:R> + <nat:358> * <var:L> + <nat:102> * <var:u> + <nat:361> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:358> = true ) . { auto . } assert ( <genH> : Nat . even <nat:104> = true ) . { auto . } assert ( <genH> : Nat . even <nat:88> = true ) . { auto . } assert ( <genH> : Nat . even <nat:102> = true ) . { auto . } assert ( <genH> : Nat . even <nat:6> = true ) . { auto . } assert ( <genH> : Nat . even <nat:280> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:358> * <var:L> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:104> * <var:i> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:88> * <var:k> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:102> * <var:u> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:6> * <var:R> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:280> * <var:M> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:88> * <var:k> + <nat:280> * <var:M> + <nat:104> * <var:i> + <nat:6> * <var:R> + <nat:358> * <var:L> + <nat:102> * <var:u> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . auto . Qed . 