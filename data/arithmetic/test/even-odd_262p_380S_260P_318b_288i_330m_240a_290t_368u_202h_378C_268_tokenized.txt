\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} For natural terms $ <var:a> $ , $ <var:t> $ , $ <var:C> $ , $ <var:i> $ , $ <var:S> $ , $ <var:h> $ , $ <var:p> $ , $ <var:u> $ , $ <var:b> $ , $ <var:m> $ , and $ <var:P> $ the summation $ <nat:268> + <var:b> * <nat:318> + <var:t> * <nat:290> + <var:h> * <nat:202> + <nat:288> * <var:i> + <var:p> * <nat:262> + <nat:368> * <var:u> + <nat:330> * <var:m> + <var:P> * <nat:260> + <nat:240> * <var:a> + <nat:380> * <var:S> + <var:C> * <nat:378> $ is even . \end{theorem} \begin{proof} The formula $ <nat:318> \times <var:b> + <nat:268> + <nat:368> \times <var:u> + <var:h> \times <nat:202> + <nat:378> \times <var:C> + <var:p> \times <nat:262> + <var:S> \times <nat:380> + <var:m> \times <nat:330> + <nat:290> \times <var:t> + <var:a> \times <nat:240> + <nat:260> \times <var:P> + <var:i> \times <nat:288> $ is obviously even because the sum $ <var:p> <nat:262> + <var:S> <nat:380> + <var:P> <nat:260> + <nat:318> <var:b> + <nat:288> <var:i> + <nat:330> <var:m> + <var:a> <nat:240> + <var:t> <nat:290> + <nat:368> <var:u> + <var:h> <nat:202> + <nat:378> <var:C> $ is known to be even . The terms $ <var:P> \times <nat:260> $ , $ <var:m> \times <nat:330> $ , $ <nat:290> \times <var:t> $ , $ <nat:202> \times <var:h> $ , $ <nat:368> \times <var:u> $ , $ <var:i> \times <nat:288> $ , and $ <nat:378> \times <var:C> $ are trivially even . Building on , we know $ <var:a> \times <nat:240> $ is known to be an even natural . This fact holds since the product between an even natural and some number in $ \mathbb{Z}^+ $ will be even . Notice the terms $ <nat:380> \times <var:S> $ additionally $ <var:b> \times <nat:318> $ are known as even numbers . Further , take note the pair $ <var:p> \times <nat:262> $ is trivially even . The addition between an even integer and an even number in $ \mathbb{N} $ is guaranteed to be clearly an even number in $ \mathbb{Z}^+ $ . Notice $ <nat:268> $ is clearly an even natural . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:a> <var:t> <var:C> <var:i> <var:S> <var:h> <var:p> <var:u> <var:b> <var:m> <var:P> : nat , Nat . even ( <nat:318> * <var:b> + <nat:290> * <var:t> + <nat:202> * <var:h> + <nat:288> * <var:i> + <nat:262> * <var:p> + <nat:368> * <var:u> + <nat:330> * <var:m> + <nat:260> * <var:P> + <nat:240> * <var:a> + <nat:380> * <var:S> + <nat:378> * <var:C> + <nat:268> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:260> * <var:P> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:330> * <var:m> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:290> * <var:t> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:202> * <var:h> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:368> * <var:u> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:288> * <var:i> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:378> * <var:C> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:240> * <var:a> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:380> * <var:S> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:318> * <var:b> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:262> * <var:p> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:318> * <var:b> + <nat:290> * <var:t> + <nat:202> * <var:h> + <nat:288> * <var:i> + <nat:262> * <var:p> + <nat:368> * <var:u> + <nat:330> * <var:m> + <nat:260> * <var:P> + <nat:240> * <var:a> + <nat:380> * <var:S> + <nat:378> * <var:C> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . even_add . assert ( <genH> : Nat . even <nat:268> = true ) . { auto . } rewrite <genH> . rewrite <genH> . auto . Qed . 