\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \newtheorem{definition}{Definition} \begin{document} \begin{definition} Only if $ \exists <var:x> $ , $ <var:t> $ , $ <var:N> $ , $ <var:T> $ , $ <var:e> \in \mathbb{N} $ then take as given that $ <var:U> \in \mathbb{Z}^+ $ is defined to be a <def:five-composite> natural number if $ <var:U> = <var:T> \cdot <var:x> \cdot <var:N> \cdot <var:e> \cdot <var:t> $ plus terms are larger than or equivalent to <nat:2> . \end{definition} \begin{theorem} $ <nat:5040> = <var:U> $ is a <def:five-composite> number . \end{theorem} \begin{proof} Assume $ <var:T> = <nat:10> $ , $ <var:x> = <nat:3> $ , $ <var:t> = <nat:7> $ , $ <var:e> = <nat:4> $ and $ <var:N> = <nat:6> $ . Observe that $ <nat:6> \cdot <nat:10> \cdot <nat:7> \cdot <nat:4> \cdot <nat:3> = <nat:5040> = <var:N> \cdot <var:T> \cdot <var:t> \cdot <var:e> \cdot <var:x> $ . Similarly observe that $ <var:e> = <nat:4> $ , $ <var:T> = <nat:10> $ , $ <var:x> = <nat:3> $ , $ <var:t> = <nat:7> $ and $ <var:N> = <nat:6> \geq <nat:2> $ . This indicates our belief is valid . As a consequence , $ <nat:5040> = <var:N> \cdot <var:x> \cdot <var:T> \cdot <var:e> \cdot <var:t> $ and $ <var:N> $ , $ <var:T> $ , $ <var:x> $ , $ <var:t> $ and $ <var:e> $ are more than or equal to <nat:2> is true has been proven . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:five-composite> ( <var:U> : nat ) := exists <var:x> <var:t> <var:N> <var:T> <var:e> : nat , ( <var:U> = <var:T> * <var:x> * <var:N> * <var:e> * <var:t> ) /\ ( <var:x> >= <nat:2> ) /\ ( <var:t> >= <nat:2> ) /\ ( <var:N> >= <nat:2> ) /\ ( <var:T> >= <nat:2> ) /\ ( <var:e> >= <nat:2> ) . Theorem <genP:1> : <def:five-composite> <nat:5040> . Proof . unfold <def:five-composite> . exists <nat:3> . exists <nat:7> . exists <nat:6> . exists <nat:10> . exists <nat:4> . assert ( <genH> : <nat:4> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:10> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:3> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:7> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:6> >= <nat:2> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 