\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Claim that $ <var:d> $ is a <def:nine-composite> whole number iff there are some positive integers $ <var:A> $ , $ <var:w> $ , $ <var:n> $ , $ <var:C> $ , $ <var:e> $ , $ <var:r> $ , $ <var:E> $ , $ <var:Z> $ , $ <var:O> $ satisfying the condition that $ <var:r> $ , $ <var:Z> $ , $ <var:C> $ , $ <var:O> $ , $ <var:e> $ , $ <var:w> $ , $ <var:A> $ , $ <var:E> $ and $ <var:n> \geq <nat:2> $ plus taking $ <var:d> \in \mathbb{Z}^+ $ , $ <var:O> \cdot <var:e> \cdot <var:r> \cdot <var:E> \cdot <var:A> \cdot <var:Z> \cdot <var:w> \cdot <var:C> \cdot <var:n> = <var:d> $ . So $ <var:d> = <nat:28828800> $ is a <def:nine-composite> integer . \end{theorem} \begin{proof} Remember that a <def:nine-composite> number is the multiplication of positive integers $ <var:w> $ , $ <var:r> $ , $ <var:A> $ , $ <var:Z> $ , $ <var:e> $ , $ <var:C> $ , $ <var:O> $ , $ <var:E> $ and $ <var:n> $ more than or equivalent to <nat:2> . We show our statement is true by reason of $ <nat:28828800> = <var:O> \times <var:r> \times <var:Z> \times <var:A> \times <var:E> \times <var:n> \times <var:w> \times <var:C> \times <var:e> $ indicates $ <var:w> = <nat:7> $ , $ <var:Z> = <nat:9> $ , $ <var:A> = <nat:11> $ , $ <var:C> = <nat:13> $ , $ <var:O> = <nat:8> $ , $ <var:e> = <nat:4> $ , $ <var:E> = <nat:2> $ , $ <var:r> = <nat:10> $ and $ <var:n> = <nat:5> $ and for $ <nat:10> $ , $ <nat:13> $ , $ <nat:5> $ , $ <nat:11> $ , $ <nat:4> $ , $ <nat:8> $ , $ <nat:2> $ , $ <nat:9> $ and $ <nat:7> \geq <nat:2> $ . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:nine-composite> ( <var:d> : nat ) := exists <var:A> <var:w> <var:n> <var:C> <var:e> <var:r> <var:E> <var:Z> <var:O> : nat , ( <var:r> >= <nat:2> ) /\ ( <var:Z> >= <nat:2> ) /\ ( <var:C> >= <nat:2> ) /\ ( <var:O> >= <nat:2> ) /\ ( <var:e> >= <nat:2> ) /\ ( <var:w> >= <nat:2> ) /\ ( <var:A> >= <nat:2> ) /\ ( <var:E> >= <nat:2> ) /\ ( <var:n> >= <nat:2> ) /\ ( <var:O> * <var:e> * <var:r> * <var:E> * <var:A> * <var:Z> * <var:w> * <var:C> * <var:n> = <var:d> ) . Theorem <genP:1> : <def:nine-composite> <nat:28828800> . Proof . unfold <def:nine-composite> . exists <nat:11> . exists <nat:7> . exists <nat:5> . exists <nat:13> . exists <nat:4> . exists <nat:10> . exists <nat:2> . exists <nat:9> . exists <nat:8> . assert ( <genH> : <nat:10> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:13> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:5> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:11> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:4> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:8> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:2> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:9> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:7> >= <nat:2> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 