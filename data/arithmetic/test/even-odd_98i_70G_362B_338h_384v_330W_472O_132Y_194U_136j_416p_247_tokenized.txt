\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:v> \times <nat:384> + <var:j> \times <nat:136> + <nat:194> \times <var:U> + <nat:132> \times <var:Y> + <var:W> \times <nat:330> + <var:O> \times <nat:472> + <nat:70> \times <var:G> + <nat:338> \times <var:h> + <nat:98> \times <var:i> + <nat:247> + <nat:362> \times <var:B> + <var:p> \times <nat:416> $ must be odd given some unknowns $ <var:v> $ , $ <var:h> $ , $ <var:G> $ , $ <var:p> $ , $ <var:W> $ , $ <var:B> $ , $ <var:j> $ , $ <var:Y> $ , $ <var:O> $ , $ <var:U> $ , and $ <var:i> $ . \end{theorem} \begin{proof} The adding of even positive integers together and an odd element of $ \mathbb{Z}^+ $ is guaranteed to be odd . The expression $ <var:j> \cdot <nat:136> + <nat:194> \cdot <var:U> + <var:h> \cdot <nat:338> + <var:v> \cdot <nat:384> + <nat:472> \cdot <var:O> + <nat:330> \cdot <var:W> + <nat:416> \cdot <var:p> + <nat:132> \cdot <var:Y> + <nat:362> \cdot <var:B> + <var:i> \cdot <nat:98> + <var:G> \cdot <nat:70> $ is guaranteed to be even , from the fact the summation between an even positive integer with an even number is even . Notice the integers $ <nat:136> $ , $ <nat:194> $ , $ <nat:338> $ , $ <nat:384> $ , $ <nat:472> $ , $ <nat:330> $ , $ <nat:416> $ , $ <nat:132> $ , $ <nat:362> $ , $ <nat:98> $ , and moreover $ <nat:70> $ are guaranteed to be even whole numbers . Therefore , the terms $ <var:j> \cdot <nat:136> $ , $ <var:U> \cdot <nat:194> $ , $ <nat:338> \cdot <var:h> $ , $ <nat:384> \cdot <var:v> $ , $ <nat:472> \cdot <var:O> $ , $ <nat:330> \cdot <var:W> $ , $ <var:p> \cdot <nat:416> $ , $ <nat:132> \cdot <var:Y> $ , $ <nat:362> \cdot <var:B> $ , $ <var:i> \cdot <nat:98> $ , additionally $ <var:G> \cdot <nat:70> $ will be even as well . We prove the summation $ <nat:98> <var:i> + <var:G> <nat:70> + <nat:362> <var:B> + <nat:247> + <nat:338> <var:h> + <nat:384> <var:v> + <var:W> <nat:330> + <nat:472> <var:O> + <var:Y> <nat:132> + <var:U> <nat:194> + <var:j> <nat:136> + <nat:416> <var:p> $ will be odd . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:v> <var:h> <var:G> <var:p> <var:W> <var:B> <var:j> <var:Y> <var:O> <var:U> <var:i> : nat , Nat . odd ( <nat:384> * <var:v> + <nat:136> * <var:j> + <nat:194> * <var:U> + <nat:132> * <var:Y> + <nat:330> * <var:W> + <nat:472> * <var:O> + <nat:70> * <var:G> + <nat:338> * <var:h> + <nat:98> * <var:i> + <nat:362> * <var:B> + <nat:416> * <var:p> + <nat:247> ) = true . Proof . intros . rewrite Nat . odd_add . assert ( <genH> : Nat . even <nat:136> = true ) . { auto . } assert ( <genH> : Nat . even <nat:194> = true ) . { auto . } assert ( <genH> : Nat . even <nat:338> = true ) . { auto . } assert ( <genH> : Nat . even <nat:384> = true ) . { auto . } assert ( <genH> : Nat . even <nat:472> = true ) . { auto . } assert ( <genH> : Nat . even <nat:330> = true ) . { auto . } assert ( <genH> : Nat . even <nat:416> = true ) . { auto . } assert ( <genH> : Nat . even <nat:132> = true ) . { auto . } assert ( <genH> : Nat . even <nat:362> = true ) . { auto . } assert ( <genH> : Nat . even <nat:98> = true ) . { auto . } assert ( <genH> : Nat . even <nat:70> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:136> * <var:j> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:194> * <var:U> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:338> * <var:h> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:384> * <var:v> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:472> * <var:O> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:330> * <var:W> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:416> * <var:p> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:132> * <var:Y> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:362> * <var:B> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:98> * <var:i> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:70> * <var:G> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:384> * <var:v> + <nat:136> * <var:j> + <nat:194> * <var:U> + <nat:132> * <var:Y> + <nat:330> * <var:W> + <nat:472> * <var:O> + <nat:70> * <var:G> + <nat:338> * <var:h> + <nat:98> * <var:i> + <nat:362> * <var:B> + <nat:416> * <var:p> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite <- Nat . negb_even . rewrite <genH> . auto . Qed . 