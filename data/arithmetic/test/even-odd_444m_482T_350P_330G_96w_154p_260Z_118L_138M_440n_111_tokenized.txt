\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:444> * <var:m> + <var:T> * <nat:482> + <var:P> * <nat:350> + <var:G> * <nat:330> + <nat:96> * <var:w> + <nat:111> + <nat:154> * <var:p> + <var:Z> * <nat:260> + <nat:118> * <var:L> + <var:M> * <nat:138> + <nat:440> * <var:n> $ must be odd . \end{theorem} \begin{proof} Take note the products $ <var:Z> \times <nat:260> $ , $ <var:L> \times <nat:118> $ , $ <nat:138> \times <var:M> $ , $ <var:n> \times <nat:440> $ , $ <nat:350> \times <var:P> $ , $ <nat:482> \times <var:T> $ , and moreover $ <nat:330> \times <var:G> $ are trivially even . Further , we know the pair $ <var:p> \times <nat:154> $ is known to be even from the fact multiplying between an even integer with a number is guaranteed to be even . Building on , $ <var:w> \times <nat:96> $ is guaranteed to be an even element of $ \mathbb{N} $ from the fact multiplying of an even number in $ \mathbb{N} $ with an arbitrary number in $ \mathbb{Z}^+ $ is guaranteed to be even . Further , observe that $ <nat:444> \times <var:m> $ is guaranteed to be an even number in $ \mathbb{Z}^+ $ . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:m> <var:T> <var:P> <var:G> <var:w> <var:p> <var:Z> <var:L> <var:M> <var:n> : nat , Nat . odd ( <nat:444> * <var:m> + <nat:482> * <var:T> + <nat:350> * <var:P> + <nat:330> * <var:G> + <nat:96> * <var:w> + <nat:154> * <var:p> + <nat:260> * <var:Z> + <nat:118> * <var:L> + <nat:138> * <var:M> + <nat:440> * <var:n> + <nat:111> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:260> * <var:Z> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:118> * <var:L> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:138> * <var:M> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:440> * <var:n> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:350> * <var:P> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:482> * <var:T> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:330> * <var:G> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:154> * <var:p> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:96> * <var:w> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:444> * <var:m> ) = true ) . { rewrite Nat . even_mul . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 