\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:V> \times <nat:444> + <var:Z> \times <nat:298> + <nat:252> + <nat:434> \times <var:l> + <nat:210> \times <var:G> + <var:z> \times <nat:184> + <var:x> \times <nat:400> + <var:u> \times <nat:78> + <var:J> \times <nat:436> + <nat:54> \times <var:y> $ is guaranteed to be even for any integers $ <var:u> $ , $ <var:G> $ , $ <var:y> $ , $ <var:V> $ , $ <var:l> $ , $ <var:z> $ , $ <var:J> $ , $ <var:x> $ , and $ <var:Z> $ . \end{theorem} \begin{proof} We demonstrate the expression $ <nat:252> + <nat:444> * <var:V> + <nat:78> * <var:u> + <var:l> * <nat:434> + <var:G> * <nat:210> + <var:Z> * <nat:298> + <var:y> * <nat:54> + <nat:400> * <var:x> + <var:J> * <nat:436> + <nat:184> * <var:z> $ must be even . Notice $ <nat:252> $ is guaranteed to be even . This theorem is true from the knowledge $ <var:y> <nat:54> + <var:l> <nat:434> + <nat:436> <var:J> + <var:x> <nat:400> + <nat:210> <var:G> + <var:u> <nat:78> + <nat:298> <var:Z> + <var:z> <nat:184> + <var:V> <nat:444> $ is known to be even . The natural numbers $ <nat:54> $ , $ <nat:434> $ , $ <nat:436> $ , $ <nat:400> $ , $ <nat:210> $ , $ <nat:78> $ , $ <nat:298> $ , $ <nat:184> $ , plus $ <nat:444> $ will be even naturals . Consequently , the products $ <var:y> <nat:54> $ , $ <nat:434> <var:l> $ , $ <nat:436> <var:J> $ , $ <var:x> <nat:400> $ , $ <var:G> <nat:210> $ , $ <nat:78> <var:u> $ , $ <var:Z> <nat:298> $ , $ <var:z> <nat:184> $ , additionally $ <nat:444> <var:V> $ must be even also . Our claim is true from the knowledge the product of an even number with an arbitrary element of $ \mathbb{N} $ must be even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:u> <var:G> <var:y> <var:V> <var:l> <var:z> <var:J> <var:x> <var:Z> : nat , Nat . even ( <nat:444> * <var:V> + <nat:298> * <var:Z> + <nat:434> * <var:l> + <nat:210> * <var:G> + <nat:184> * <var:z> + <nat:400> * <var:x> + <nat:78> * <var:u> + <nat:436> * <var:J> + <nat:54> * <var:y> + <nat:252> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:252> = true ) . { auto . } assert ( <genH> : Nat . even <nat:54> = true ) . { auto . } assert ( <genH> : Nat . even <nat:434> = true ) . { auto . } assert ( <genH> : Nat . even <nat:436> = true ) . { auto . } assert ( <genH> : Nat . even <nat:400> = true ) . { auto . } assert ( <genH> : Nat . even <nat:210> = true ) . { auto . } assert ( <genH> : Nat . even <nat:78> = true ) . { auto . } assert ( <genH> : Nat . even <nat:298> = true ) . { auto . } assert ( <genH> : Nat . even <nat:184> = true ) . { auto . } assert ( <genH> : Nat . even <nat:444> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:54> * <var:y> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:434> * <var:l> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:436> * <var:J> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:400> * <var:x> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:210> * <var:G> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:78> * <var:u> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:298> * <var:Z> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:184> * <var:z> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:444> * <var:V> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:444> * <var:V> + <nat:298> * <var:Z> + <nat:434> * <var:l> + <nat:210> * <var:G> + <nat:184> * <var:z> + <nat:400> * <var:x> + <nat:78> * <var:u> + <nat:436> * <var:J> + <nat:54> * <var:y> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . auto . Qed . 