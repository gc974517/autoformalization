\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} The whole number <nat:21772800> is the multiplication of integers $ <var:X> $ , $ <var:T> $ , $ <var:e> $ , $ <var:J> $ , $ <var:g> $ , $ <var:d> $ , $ <var:W> $ , $ <var:o> $ , $ <var:p> $ satisfying the condition that $ <var:X> $ , $ <var:d> $ , $ <var:J> $ , $ <var:W> $ , $ <var:p> $ , $ <var:g> $ , $ <var:e> $ , $ <var:o> $ and $ <var:T> > <nat:1> $ . \end{theorem} \begin{proof} Allow $ <var:o> = <nat:10> $ , $ <var:g> = <nat:6> $ , $ <var:T> = <nat:5> $ , $ <var:e> = <nat:9> $ , $ <var:p> = <nat:7> $ , $ <var:X> = <nat:12> $ , $ <var:d> = <nat:3> $ , $ <var:W> = <nat:8> $ , $ <var:J> = <nat:4> $ . We prove $ <nat:21772800> = <var:X> \times <var:p> \times <var:d> \times <var:o> \times <var:T> \times <var:J> \times <var:g> \times <var:e> \times <var:W> $ plus $ <var:d> $ , $ <var:J> $ , $ <var:X> $ , $ <var:e> $ , $ <var:T> $ , $ <var:g> $ , $ <var:W> $ , $ <var:p> $ , and $ <var:o> > <nat:1> $ . Note $ <nat:9> $ , $ <nat:4> $ , $ <nat:10> $ , $ <nat:8> $ , $ <nat:12> $ , $ <nat:6> $ , $ <nat:7> $ , $ <nat:5> $ , $ <nat:3> > <nat:1> $ . \end{proof} \end{document} 
~
Require Import Lia . Theorem <genP:1> : exists <var:X> <var:T> <var:e> <var:J> <var:g> <var:d> <var:W> <var:o> <var:p> : nat , ( <nat:21772800> = <var:X> * <var:T> * <var:e> * <var:J> * <var:g> * <var:d> * <var:W> * <var:o> * <var:p> ) /\ ( <var:X> > <nat:1> ) /\ ( <var:d> > <nat:1> ) /\ ( <var:J> > <nat:1> ) /\ ( <var:W> > <nat:1> ) /\ ( <var:p> > <nat:1> ) /\ ( <var:g> > <nat:1> ) /\ ( <var:e> > <nat:1> ) /\ ( <var:o> > <nat:1> ) /\ ( <var:T> > <nat:1> ) . Proof . exists <nat:12> . exists <nat:5> . exists <nat:9> . exists <nat:4> . exists <nat:6> . exists <nat:3> . exists <nat:8> . exists <nat:10> . exists <nat:7> . assert ( <genH> : <nat:9> > <nat:1> ) . { lia . } assert ( <genH> : <nat:4> > <nat:1> ) . { lia . } assert ( <genH> : <nat:10> > <nat:1> ) . { lia . } assert ( <genH> : <nat:8> > <nat:1> ) . { lia . } assert ( <genH> : <nat:12> > <nat:1> ) . { lia . } assert ( <genH> : <nat:6> > <nat:1> ) . { lia . } assert ( <genH> : <nat:7> > <nat:1> ) . { lia . } assert ( <genH> : <nat:5> > <nat:1> ) . { lia . } assert ( <genH> : <nat:3> > <nat:1> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 