\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Let $ <var:t> $ , $ <var:m> $ , $ <var:A> $ , $ <var:F> $ , $ <var:P> $ , $ <var:D> $ , $ <var:L> $ , $ <var:x> $ , $ <var:o> $ , $ <var:h> \in \mathbb{N} $ . Define that some natural number $ <var:N> $ will be considered to be <def:ten-composite> when $ <var:h> * <var:x> * <var:D> * <var:o> * <var:L> * <var:m> * <var:F> * <var:t> * <var:P> * <var:A> = <var:N> $ as well as unique terms are more than or equal to <nat:2> . Then <nat:94348800> is a <def:ten-composite> whole number . \end{theorem} \begin{proof} Recall that a <def:ten-composite> natural number is the multiplication between $ <var:A> $ , $ <var:D> $ , $ <var:o> $ , $ <var:L> $ , $ <var:h> $ , $ <var:F> $ , $ <var:t> $ , $ <var:m> $ , $ <var:P> $ , and $ <var:x> $ such that $ <var:m> $ , $ <var:x> $ , $ <var:L> $ , $ <var:o> $ , $ <var:t> $ , $ <var:A> $ , $ <var:h> $ , $ <var:D> $ , $ <var:F> $ , $ <var:P> \geq <nat:2> $ . Note $ <var:D> * <var:P> * <var:L> * <var:A> * <var:h> * <var:t> * <var:F> * <var:x> * <var:o> * <var:m> = <nat:94348800> $ implies $ <var:o> = <nat:12> $ , $ <var:P> = <nat:8> $ , $ <var:m> = <nat:9> $ , $ <var:D> = <nat:3> $ , $ <var:h> = <nat:7> $ , $ <var:t> = <nat:13> $ , $ <var:A> = <nat:10> $ , $ <var:L> = <nat:2> $ , $ <var:F> = <nat:5> $ and $ <var:x> = <nat:4> $ . In addition observe that $ <nat:4> $ , $ <nat:12> $ , $ <nat:3> $ , $ <nat:13> $ , $ <nat:10> $ , $ <nat:9> $ , $ <nat:2> $ , $ <nat:7> $ , $ <nat:8> $ , and $ <nat:5> $ are larger than or equal to <nat:2> . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:ten-composite> ( <var:N> : nat ) := exists <var:t> <var:m> <var:A> <var:F> <var:P> <var:D> <var:L> <var:x> <var:o> <var:h> : nat , ( <var:h> * <var:x> * <var:D> * <var:o> * <var:L> * <var:m> * <var:F> * <var:t> * <var:P> * <var:A> = <var:N> ) /\ ( <var:t> >= <nat:2> ) /\ ( <var:m> >= <nat:2> ) /\ ( <var:A> >= <nat:2> ) /\ ( <var:F> >= <nat:2> ) /\ ( <var:P> >= <nat:2> ) /\ ( <var:D> >= <nat:2> ) /\ ( <var:L> >= <nat:2> ) /\ ( <var:x> >= <nat:2> ) /\ ( <var:o> >= <nat:2> ) /\ ( <var:h> >= <nat:2> ) . Theorem <genP:1> : <def:ten-composite> <nat:94348800> . Proof . unfold <def:ten-composite> . exists <nat:13> . exists <nat:9> . exists <nat:10> . exists <nat:5> . exists <nat:8> . exists <nat:3> . exists <nat:2> . exists <nat:4> . exists <nat:12> . exists <nat:7> . assert ( <genH> : <nat:4> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:12> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:3> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:13> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:10> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:9> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:2> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:7> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:8> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:5> >= <nat:2> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 