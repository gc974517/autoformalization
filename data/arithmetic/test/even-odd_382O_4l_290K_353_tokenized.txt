\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:K> \times <nat:290> + <nat:353> + <nat:4> \times <var:l> + <var:O> \times <nat:382> $ is guaranteed to be odd taking some natural numbers $ <var:l> $ , $ <var:O> $ , and $ <var:K> $ . \end{theorem} \begin{proof} Recall the summation between even natural numbers successively with an odd number in $ \mathbb{Z}^+ $ will be odd . Our result is true as a consequence that $ <var:l> \times <nat:4> + <var:O> \times <nat:382> + <var:K> \times <nat:290> $ is guaranteed to be even . On top of this , recall the pairs $ <nat:4> <var:l> $ , $ <nat:382> <var:O> $ , plus $ <var:K> <nat:290> $ are clearly even . This must be true by reason that the positive integers $ <nat:4> $ , $ <nat:382> $ , and moreover $ <nat:290> $ are known as instrinsically even naturals . The claim is proven from the fact the multiplication between even numbers in $ \mathbb{Z}^+ $ and a number will be an even number in $ \mathbb{Z}^+ $ . It can be justified that $ <nat:382> \cdot <var:O> + <var:l> \cdot <nat:4> + <nat:353> + <nat:290> \cdot <var:K> $ must be odd . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:l> <var:O> <var:K> : nat , Nat . odd ( <nat:290> * <var:K> + <nat:4> * <var:l> + <nat:382> * <var:O> + <nat:353> ) = true . Proof . intros . rewrite Nat . odd_add . assert ( <genH> : Nat . even <nat:4> = true ) . { auto . } assert ( <genH> : Nat . even <nat:382> = true ) . { auto . } assert ( <genH> : Nat . even <nat:290> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:4> * <var:l> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:382> * <var:O> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:290> * <var:K> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:290> * <var:K> + <nat:4> * <var:l> + <nat:382> * <var:O> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite <- Nat . negb_even . rewrite <genH> . auto . Qed . 