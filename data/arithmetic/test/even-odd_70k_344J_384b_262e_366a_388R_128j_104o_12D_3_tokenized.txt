\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:k> * <nat:70> + <var:J> * <nat:344> + <nat:384> * <var:b> + <nat:262> * <var:e> + <nat:366> * <var:a> + <nat:388> * <var:R> + <nat:3> + <var:j> * <nat:128> + <nat:104> * <var:o> + <nat:12> * <var:D> $ is guaranteed to be odd with every integers $ <var:o> $ , $ <var:e> $ , $ <var:a> $ , $ <var:j> $ , $ <var:R> $ , $ <var:k> $ , $ <var:D> $ , $ <var:J> $ , and $ <var:b> $ . \end{theorem} \begin{proof} Take note the multiplication between even elements of $ \mathbb{N} $ must be even . We know $ <nat:3> $ is guaranteed to be odd . The natural numbers $ <nat:344> $ , $ <nat:128> $ , $ <nat:366> $ , additionally $ <nat:384> $ are obviously even In addition to this , the whole number $ <nat:104> $ is even In addition to this , remember the positive integers $ <nat:12> $ in addition to $ <nat:262> $ will be even natural numbers Observe that the natural number $ <nat:70> $ is clearly an even number in $ \mathbb{N} $ The leading term $ <nat:388> $ is obviously an even whole number \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:o> <var:e> <var:a> <var:j> <var:R> <var:k> <var:D> <var:J> <var:b> : nat , Nat . odd ( <nat:70> * <var:k> + <nat:344> * <var:J> + <nat:384> * <var:b> + <nat:262> * <var:e> + <nat:366> * <var:a> + <nat:388> * <var:R> + <nat:128> * <var:j> + <nat:104> * <var:o> + <nat:12> * <var:D> + <nat:3> ) = true . Proof . intros . rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . repeat rewrite Nat . even_mul . assert ( <genH> : Nat . odd <nat:3> = true ) . { auto . } assert ( <genH> : Nat . even <nat:344> = true ) . { auto . } assert ( <genH> : Nat . even <nat:128> = true ) . { auto . } assert ( <genH> : Nat . even <nat:366> = true ) . { auto . } assert ( <genH> : Nat . even <nat:384> = true ) . { auto . } assert ( <genH> : Nat . even <nat:104> = true ) . { auto . } assert ( <genH> : Nat . even <nat:12> = true ) . { auto . } assert ( <genH> : Nat . even <nat:262> = true ) . { auto . } assert ( <genH> : Nat . even <nat:70> = true ) . { auto . } assert ( <genH> : Nat . even <nat:388> = true ) . { auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 