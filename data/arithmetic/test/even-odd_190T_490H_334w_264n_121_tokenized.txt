\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:190> <var:T> + <nat:121> + <var:w> <nat:334> + <var:n> <nat:264> + <var:H> <nat:490> $ will be odd given all unknowns $ <var:w> $ , $ <var:n> $ , $ <var:T> $ , and $ <var:H> $ . \end{theorem} \begin{proof} It can be verified that the sum $ <var:T> <nat:190> + <var:H> <nat:490> + <nat:121> + <var:n> <nat:264> + <nat:334> <var:w> $ will be odd . Recall that $ <nat:121> $ is obviously odd . Furthermore , notice that the positive integer $ <nat:190> $ is guaranteed to be even . Hence , the pair $ <var:T> \cdot <nat:190> $ will be even at the same time . On top of this , observe the coefficient $ <nat:490> $ is clearly an even element of $ \mathbb{Z}^+ $ . Hence , the pair $ <var:H> \cdot <nat:490> $ is even in addition . On top of this , we know the coefficient $ <nat:334> $ is even . Accordingly , the pair $ <nat:334> \cdot <var:w> $ will be even too . Additionally , the pair $ <var:n> \cdot <nat:264> $ is known as an even number as a consequence that the leading term $ <nat:264> $ is known as in itself an even whole number . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:w> <var:n> <var:T> <var:H> : nat , Nat . odd ( <nat:190> * <var:T> + <nat:334> * <var:w> + <nat:264> * <var:n> + <nat:490> * <var:H> + <nat:121> ) = true . Proof . intros . assert ( <genH> : Nat . odd <nat:121> = true ) . { auto . } assert ( <genH> : Nat . even <nat:190> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:190> * <var:T> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:490> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:490> * <var:H> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:334> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:334> * <var:w> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:264> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:264> * <var:n> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 