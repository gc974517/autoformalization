\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} With all natural terms $ <var:v> $ , $ <var:F> $ , $ <var:X> $ , $ <var:D> $ , $ <var:o> $ , $ <var:a> $ , $ <var:U> $ , $ <var:p> $ , $ <var:c> $ , $ <var:B> $ , and $ <var:i> $ the summation $ <var:F> * <nat:156> + <var:v> * <nat:468> + <nat:357> + <nat:354> * <var:c> + <nat:84> * <var:o> + <var:a> * <nat:162> + <var:i> * <nat:276> + <var:p> * <nat:124> + <nat:78> * <var:U> + <nat:348> * <var:X> + <nat:44> * <var:D> + <var:B> * <nat:346> $ is guaranteed to be odd . \end{theorem} \begin{proof} Observe that the totaling of even numbers in $ \mathbb{Z}^+ $ collectively with an odd positive integer must be odd . We work with the assumption the understanding that the formula $ <nat:124> \cdot <var:p> + <var:D> \cdot <nat:44> + <nat:354> \cdot <var:c> + <nat:276> \cdot <var:i> + <var:o> \cdot <nat:84> + <var:B> \cdot <nat:346> + <var:F> \cdot <nat:156> + <var:v> \cdot <nat:468> + <nat:78> \cdot <var:U> + <nat:357> + <var:X> \cdot <nat:348> + <nat:162> \cdot <var:a> $ is trivially odd by reason that the formula $ <var:i> <nat:276> + <nat:346> <var:B> + <var:D> <nat:44> + <nat:354> <var:c> + <var:X> <nat:348> + <var:U> <nat:78> + <var:o> <nat:84> + <nat:468> <var:v> + <var:p> <nat:124> + <nat:156> <var:F> + <var:a> <nat:162> $ is known as even . Take note that the product $ <nat:276> \cdot <var:i> $ is known as an even number in $ \mathbb{N} $ from the fact the positive integer $ <nat:276> $ is known as by its very nature an even element of $ \mathbb{Z}^+ $ . The product $ <nat:346> \cdot <var:B> $ is even from the knowledge the integer $ <nat:346> $ is clearly an even element of $ \mathbb{Z}^+ $ . See the term $ <var:o> \cdot <nat:84> $ is obviously an even integer . This claim must be true by reason that the whole number $ <nat:84> $ is known as even . $ <var:F> \cdot <nat:156> $ is an even integer as a consequence that the positive integer $ <nat:156> $ is clearly even . Take note the term $ <var:p> \cdot <nat:124> $ is trivially an even number in $ \mathbb{Z}^+ $ as a consequence that the integer $ <nat:124> $ is guaranteed to be even . Adding on , recall that the positive integer $ <nat:468> $ is trivially an even number in $ \mathbb{Z}^+ $ . For this reason , the term $ <nat:468> \cdot <var:v> $ is guaranteed to be even additionally . The leading term $ <nat:78> $ is known to be even . For this reason , $ <var:U> \cdot <nat:78> $ will be even also . The integer $ <nat:348> $ is guaranteed to be an even number in $ \mathbb{Z}^+ $ . As a consequence , the term $ <nat:348> \cdot <var:X> $ will be even in addition . The whole number $ <nat:162> $ is trivially an even whole number . Thus , the product $ <nat:162> \cdot <var:a> $ is guaranteed to be even as well . See the pair $ <nat:354> \cdot <var:c> $ is known to be even because the number $ <nat:354> $ is obviously even . Recall that the integer $ <nat:44> $ is clearly even . Thus , $ <var:D> \cdot <nat:44> $ is guaranteed to be even in addition . As a consequence that the totaling of an even natural with even numbers in $ \mathbb{N} $ is an even whole number , and likewise by reason that multiplying of an even natural with some number in $ \mathbb{Z}^+ $ will be even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:v> <var:F> <var:X> <var:D> <var:o> <var:a> <var:U> <var:p> <var:c> <var:B> <var:i> : nat , Nat . odd ( <nat:156> * <var:F> + <nat:468> * <var:v> + <nat:354> * <var:c> + <nat:84> * <var:o> + <nat:162> * <var:a> + <nat:276> * <var:i> + <nat:124> * <var:p> + <nat:78> * <var:U> + <nat:348> * <var:X> + <nat:44> * <var:D> + <nat:346> * <var:B> + <nat:357> ) = true . Proof . intros . rewrite Nat . odd_add . assert ( <genH> : Nat . even <nat:276> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:276> * <var:i> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:346> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:346> * <var:B> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:84> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:84> * <var:o> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:156> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:156> * <var:F> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:124> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:124> * <var:p> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:468> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:468> * <var:v> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:78> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:78> * <var:U> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:348> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:348> * <var:X> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:162> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:162> * <var:a> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:354> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:354> * <var:c> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:44> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:44> * <var:D> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:156> * <var:F> + <nat:468> * <var:v> + <nat:354> * <var:c> + <nat:84> * <var:o> + <nat:162> * <var:a> + <nat:276> * <var:i> + <nat:124> * <var:p> + <nat:78> * <var:U> + <nat:348> * <var:X> + <nat:44> * <var:D> + <nat:346> * <var:B> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite <- Nat . negb_even . rewrite <genH> . auto . Qed . 