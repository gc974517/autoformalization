\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Taking whole numbers $ <var:F> $ , $ <var:x> $ , $ <var:C> $ , $ <var:o> $ , and $ <var:s> $ $ <var:o> * <nat:494> + <var:s> * <nat:320> + <var:C> * <nat:90> + <nat:8> * <var:x> + <nat:397> + <nat:302> * <var:F> $ is odd . \end{theorem} \begin{proof} We utilize the knowledge that the summation $ <var:x> \times <nat:8> + <nat:494> \times <var:o> + <nat:320> \times <var:s> + <nat:90> \times <var:C> + <var:F> \times <nat:302> $ is clearly even . Notice that the natural numbers $ <nat:8> $ , $ <nat:494> $ , $ <nat:320> $ , $ <nat:90> $ , as well as $ <nat:302> $ will be even whole numbers . As a consequence , the pairs $ <nat:8> \cdot <var:x> $ , $ <var:o> \cdot <nat:494> $ , $ <var:s> \cdot <nat:320> $ , $ <nat:90> \cdot <var:C> $ , plus $ <var:F> \cdot <nat:302> $ is even also . This lemma is true from the knowledge taking the product of even whole numbers with some natural is even . We check that the formula $ <nat:8> \times <var:x> + <var:F> \times <nat:302> + <nat:397> + <nat:494> \times <var:o> + <nat:320> \times <var:s> + <var:C> \times <nat:90> $ is odd . Observe the totaling between an even number in $ \mathbb{N} $ with an odd natural number must be by its very nature an odd integer . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:F> <var:x> <var:C> <var:o> <var:s> : nat , Nat . odd ( <nat:494> * <var:o> + <nat:320> * <var:s> + <nat:90> * <var:C> + <nat:8> * <var:x> + <nat:302> * <var:F> + <nat:397> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:8> = true ) . { auto . } assert ( <genH> : Nat . even <nat:494> = true ) . { auto . } assert ( <genH> : Nat . even <nat:320> = true ) . { auto . } assert ( <genH> : Nat . even <nat:90> = true ) . { auto . } assert ( <genH> : Nat . even <nat:302> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:8> * <var:x> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:494> * <var:o> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:320> * <var:s> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:90> * <var:C> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:302> * <var:F> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:494> * <var:o> + <nat:320> * <var:s> + <nat:90> * <var:C> + <nat:8> * <var:x> + <nat:302> * <var:F> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . auto . Qed . 