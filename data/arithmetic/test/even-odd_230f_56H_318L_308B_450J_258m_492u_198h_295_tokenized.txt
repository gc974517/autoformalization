\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Taking some positive numbers $ <var:L> $ , $ <var:u> $ , $ <var:m> $ , $ <var:J> $ , $ <var:H> $ , $ <var:f> $ , $ <var:h> $ , and $ <var:B> $ $ <nat:230> <var:f> + <nat:56> <var:H> + <nat:318> <var:L> + <var:B> <nat:308> + <var:J> <nat:450> + <nat:258> <var:m> + <nat:492> <var:u> + <nat:295> + <var:h> <nat:198> $ is odd . \end{theorem} \begin{proof} Remember that the terms $ <var:m> \times <nat:258> $ , $ <nat:450> \times <var:J> $ , and likewise $ <nat:198> \times <var:h> $ are guaranteed to be even naturals . In addition , we know the products $ <var:H> \times <nat:56> $ , $ <var:L> \times <nat:318> $ , $ <nat:230> \times <var:f> $ , as well as $ <var:u> \times <nat:492> $ are known as even elements of $ \mathbb{N} $ . This is proven as a consequence that the multiplication of an even positive integer with a natural number must be an even element of $ \mathbb{Z}^+ $ . Building on , observe that the pair $ <var:B> \times <nat:308> $ is even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:L> <var:u> <var:m> <var:J> <var:H> <var:f> <var:h> <var:B> : nat , Nat . odd ( <nat:230> * <var:f> + <nat:56> * <var:H> + <nat:318> * <var:L> + <nat:308> * <var:B> + <nat:450> * <var:J> + <nat:258> * <var:m> + <nat:492> * <var:u> + <nat:198> * <var:h> + <nat:295> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:258> * <var:m> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:450> * <var:J> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:198> * <var:h> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:56> * <var:H> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:318> * <var:L> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:230> * <var:f> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:492> * <var:u> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:308> * <var:B> ) = true ) . { rewrite Nat . even_mul . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 