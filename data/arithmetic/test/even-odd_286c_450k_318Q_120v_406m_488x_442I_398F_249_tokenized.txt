\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:318> * <var:Q> + <nat:286> * <var:c> + <nat:249> + <nat:120> * <var:v> + <nat:442> * <var:I> + <nat:450> * <var:k> + <var:m> * <nat:406> + <nat:488> * <var:x> + <nat:398> * <var:F> $ is odd using some positive terms $ <var:v> $ , $ <var:m> $ , $ <var:Q> $ , $ <var:I> $ , $ <var:k> $ , $ <var:x> $ , $ <var:F> $ , and $ <var:c> $ . \end{theorem} \begin{proof} We check the summation $ <var:F> * <nat:398> + <nat:442> * <var:I> + <nat:318> * <var:Q> + <nat:120> * <var:v> + <nat:450> * <var:k> + <nat:249> + <nat:488> * <var:x> + <var:c> * <nat:286> + <nat:406> * <var:m> $ is odd . Notice $ <nat:249> $ is known as odd . We work with the assumption the fact that the expression $ <nat:286> <var:c> + <nat:450> <var:k> + <var:Q> <nat:318> + <var:v> <nat:120> + <nat:406> <var:m> + <nat:488> <var:x> + <var:I> <nat:442> + <nat:398> <var:F> $ is known to be even . The products $ <var:x> \cdot <nat:488> $ , $ <var:F> \cdot <nat:398> $ , $ <var:k> \cdot <nat:450> $ , $ <nat:318> \cdot <var:Q> $ , and also $ <nat:406> \cdot <var:m> $ are obviously even numbers in $ \mathbb{Z}^+ $ . Furthermore , the pairs $ <nat:442> \cdot <var:I> $ and also $ <nat:286> \cdot <var:c> $ are obviously even . The term $ <var:v> \cdot <nat:120> $ is known as even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:v> <var:m> <var:Q> <var:I> <var:k> <var:x> <var:F> <var:c> : nat , Nat . odd ( <nat:318> * <var:Q> + <nat:286> * <var:c> + <nat:120> * <var:v> + <nat:442> * <var:I> + <nat:450> * <var:k> + <nat:406> * <var:m> + <nat:488> * <var:x> + <nat:398> * <var:F> + <nat:249> ) = true . Proof . intros . assert ( <genH> : Nat . odd <nat:249> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:488> * <var:x> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:398> * <var:F> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:450> * <var:k> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:318> * <var:Q> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:406> * <var:m> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:442> * <var:I> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:286> * <var:c> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:120> * <var:v> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:318> * <var:Q> + <nat:286> * <var:c> + <nat:120> * <var:v> + <nat:442> * <var:I> + <nat:450> * <var:k> + <nat:406> * <var:m> + <nat:488> * <var:x> + <nat:398> * <var:F> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . rewrite <genH> . auto . Qed . 