\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} For all natural numbers $ <var:a> $ , $ <var:y> $ , $ <var:B> $ , $ <var:u> $ , and $ <var:x> $ the sum $ <var:u> \cdot <nat:486> + <nat:210> \cdot <var:x> + <nat:172> \cdot <var:a> + <nat:64> \cdot <var:B> + <nat:392> \cdot <var:y> + <nat:39> $ is guaranteed to be odd . \end{theorem} \begin{proof} Remember that the summing between even integers collectively with an odd whole number will be odd . See that the terms $ <var:y> \times <nat:392> $ , $ <nat:172> \times <var:a> $ , plus $ <var:x> \times <nat:210> $ are known to be even since the whole numbers $ <nat:392> $ , $ <nat:172> $ , and $ <nat:210> $ are known to be trivially even natural numbers . Further , the product $ <var:u> \times <nat:486> $ is guaranteed to be even from the knowledge the natural number $ <nat:486> $ is obviously even . The whole number $ <nat:64> $ is even . Consequently , the term $ <nat:64> \times <var:B> $ is even as well . It can be proven that the lemma holds . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:a> <var:y> <var:B> <var:u> <var:x> : nat , Nat . odd ( <nat:486> * <var:u> + <nat:210> * <var:x> + <nat:172> * <var:a> + <nat:64> * <var:B> + <nat:392> * <var:y> + <nat:39> ) = true . Proof . intros . rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . assert ( <genH> : Nat . even <nat:392> = true ) . { auto . } assert ( <genH> : Nat . even <nat:172> = true ) . { auto . } assert ( <genH> : Nat . even <nat:210> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:392> * <var:y> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:172> * <var:a> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:210> * <var:x> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:486> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:486> * <var:u> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:64> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:64> * <var:B> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 