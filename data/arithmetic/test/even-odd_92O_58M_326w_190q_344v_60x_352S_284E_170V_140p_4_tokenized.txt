\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:x> * <nat:60> + <nat:92> * <var:O> + <var:E> * <nat:284> + <var:w> * <nat:326> + <nat:4> + <nat:352> * <var:S> + <var:V> * <nat:170> + <nat:344> * <var:v> + <nat:190> * <var:q> + <nat:140> * <var:p> + <var:M> * <nat:58> $ is guaranteed to be even for positive integers $ <var:E> $ , $ <var:w> $ , $ <var:q> $ , $ <var:O> $ , $ <var:v> $ , $ <var:p> $ , $ <var:S> $ , $ <var:x> $ , $ <var:V> $ , and $ <var:M> $ . \end{theorem} \begin{proof} This claim is proven from the fact $ <nat:60> \times <var:x> + <nat:140> \times <var:p> + <nat:58> \times <var:M> + <var:q> \times <nat:190> + <nat:170> \times <var:V> + <var:S> \times <nat:352> + <var:w> \times <nat:326> + <var:E> \times <nat:284> + <var:v> \times <nat:344> + <var:O> \times <nat:92> $ is even . Remember that the coefficients $ <nat:60> $ , $ <nat:140> $ , $ <nat:58> $ , $ <nat:190> $ , $ <nat:170> $ , $ <nat:352> $ , $ <nat:326> $ , $ <nat:284> $ , $ <nat:344> $ , in addition to $ <nat:92> $ are guaranteed to be even . For this reason , the terms $ <var:x> * <nat:60> $ , $ <var:p> * <nat:140> $ , $ <nat:58> * <var:M> $ , $ <nat:190> * <var:q> $ , $ <var:V> * <nat:170> $ , $ <var:S> * <nat:352> $ , $ <var:w> * <nat:326> $ , $ <var:E> * <nat:284> $ , $ <nat:344> * <var:v> $ , and $ <var:O> * <nat:92> $ will be even also . By reason that the multiplication between even elements of $ \mathbb{Z}^+ $ and an arbitrary natural number must be even the sum $ <var:V> \times <nat:170> + <nat:190> \times <var:q> + <var:p> \times <nat:140> + <var:w> \times <nat:326> + <var:v> \times <nat:344> + <nat:58> \times <var:M> + <var:S> \times <nat:352> + <nat:284> \times <var:E> + <nat:92> \times <var:O> + <nat:60> \times <var:x> $ is guaranteed to be fundamentally even . Take note that $ <nat:4> $ is known as an even natural . It can be verified that $ <var:O> \cdot <nat:92> + <var:M> \cdot <nat:58> + <var:w> \cdot <nat:326> + <nat:190> \cdot <var:q> + <nat:344> \cdot <var:v> + <nat:4> + <var:x> \cdot <nat:60> + <nat:352> \cdot <var:S> + <var:E> \cdot <nat:284> + <nat:170> \cdot <var:V> + <var:p> \cdot <nat:140> $ is even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:E> <var:w> <var:q> <var:O> <var:v> <var:p> <var:S> <var:x> <var:V> <var:M> : nat , Nat . even ( <nat:60> * <var:x> + <nat:92> * <var:O> + <nat:284> * <var:E> + <nat:326> * <var:w> + <nat:352> * <var:S> + <nat:170> * <var:V> + <nat:344> * <var:v> + <nat:190> * <var:q> + <nat:140> * <var:p> + <nat:58> * <var:M> + <nat:4> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:60> = true ) . { auto . } assert ( <genH> : Nat . even <nat:140> = true ) . { auto . } assert ( <genH> : Nat . even <nat:58> = true ) . { auto . } assert ( <genH> : Nat . even <nat:190> = true ) . { auto . } assert ( <genH> : Nat . even <nat:170> = true ) . { auto . } assert ( <genH> : Nat . even <nat:352> = true ) . { auto . } assert ( <genH> : Nat . even <nat:326> = true ) . { auto . } assert ( <genH> : Nat . even <nat:284> = true ) . { auto . } assert ( <genH> : Nat . even <nat:344> = true ) . { auto . } assert ( <genH> : Nat . even <nat:92> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:60> * <var:x> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:140> * <var:p> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:58> * <var:M> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:190> * <var:q> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:170> * <var:V> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:352> * <var:S> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:326> * <var:w> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:284> * <var:E> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:344> * <var:v> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:92> * <var:O> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:60> * <var:x> + <nat:92> * <var:O> + <nat:284> * <var:E> + <nat:326> * <var:w> + <nat:352> * <var:S> + <nat:170> * <var:V> + <nat:344> * <var:v> + <nat:190> * <var:q> + <nat:140> * <var:p> + <nat:58> * <var:M> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:4> = true ) . { auto . } rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . auto . Qed . 