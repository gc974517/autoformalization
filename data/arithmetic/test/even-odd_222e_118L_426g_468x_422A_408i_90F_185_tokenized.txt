\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Taking natural numbers $ <var:x> $ , $ <var:A> $ , $ <var:F> $ , $ <var:g> $ , $ <var:e> $ , $ <var:L> $ , and $ <var:i> $ the formula $ <var:e> \times <nat:222> + <nat:118> \times <var:L> + <var:g> \times <nat:426> + <var:x> \times <nat:468> + <nat:422> \times <var:A> + <var:i> \times <nat:408> + <nat:90> \times <var:F> + <nat:185> $ is guaranteed to be odd . \end{theorem} \begin{proof} See that taking the product of even natural numbers is guaranteed to be an even number in $ \mathbb{N} $ . Remember the leading terms $ <nat:90> $ plus $ <nat:118> $ are guaranteed to be even Observe the leading term $ <nat:422> $ is obviously even On top of this , recall that the leading terms $ <nat:426> $ , $ <nat:408> $ , in addition to $ <nat:222> $ are known as even Remember the number $ <nat:468> $ is obviously even We justify our lemma is true . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:x> <var:A> <var:F> <var:g> <var:e> <var:L> <var:i> : nat , Nat . odd ( <nat:222> * <var:e> + <nat:118> * <var:L> + <nat:426> * <var:g> + <nat:468> * <var:x> + <nat:422> * <var:A> + <nat:408> * <var:i> + <nat:90> * <var:F> + <nat:185> ) = true . Proof . intros . rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . repeat rewrite Nat . even_mul . assert ( <genH> : Nat . even <nat:90> = true ) . { auto . } assert ( <genH> : Nat . even <nat:118> = true ) . { auto . } assert ( <genH> : Nat . even <nat:422> = true ) . { auto . } assert ( <genH> : Nat . even <nat:426> = true ) . { auto . } assert ( <genH> : Nat . even <nat:408> = true ) . { auto . } assert ( <genH> : Nat . even <nat:222> = true ) . { auto . } assert ( <genH> : Nat . even <nat:468> = true ) . { auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 