\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} With the condition that we have where $ <var:l> $ , $ <var:c> $ , $ <var:x> $ , $ <var:y> $ , and $ <var:Z> > <nat:1> $ where taking some natural number $ <var:A> $ , $ <var:A> = <var:c> \cdot <var:x> \cdot <var:l> \cdot <var:y> \cdot <var:Z> $ assuming some $ <var:l> $ , $ <var:y> $ , $ <var:x> $ , $ <var:Z> $ , $ <var:c> $ , claim that $ <var:A> $ is a <def:five-composite> number . Consequently the number <nat:83160> is a <def:five-composite> integer . \end{theorem} \begin{proof} Recollect that <nat:83160> is a <def:five-composite> whole number if <nat:83160> is the multiplication of whole numbers $ <var:c> $ , $ <var:Z> $ , $ <var:l> $ , $ <var:y> $ , and $ <var:x> $ satisfying the condition that $ <var:y> $ , $ <var:c> $ , $ <var:x> $ , $ <var:l> $ , and $ <var:Z> > <nat:1> $ . Notice $ <nat:9> $ , $ <nat:10> $ , $ <nat:12> $ , $ <nat:11> $ , $ <nat:7> $ are more than <nat:1> . Additionally note that moreover $ <nat:9> \cdot <nat:11> \cdot <nat:12> \cdot <nat:7> \cdot <nat:10> = <nat:83160> = <var:Z> \cdot <var:c> \cdot <var:l> \cdot <var:y> \cdot <var:x> $ . This yields <nat:83160> is a <def:five-composite> number . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:five-composite> ( <var:A> : nat ) := exists <var:l> <var:y> <var:x> <var:Z> <var:c> : nat , ( <var:l> > <nat:1> ) /\ ( <var:c> > <nat:1> ) /\ ( <var:x> > <nat:1> ) /\ ( <var:y> > <nat:1> ) /\ ( <var:Z> > <nat:1> ) /\ ( <var:A> = <var:c> * <var:x> * <var:l> * <var:y> * <var:Z> ) . Theorem <genP:1> : <def:five-composite> <nat:83160> . Proof . unfold <def:five-composite> . assert ( <genH> : <nat:9> > <nat:1> ) . { lia . } assert ( <genH> : <nat:10> > <nat:1> ) . { lia . } assert ( <genH> : <nat:12> > <nat:1> ) . { lia . } assert ( <genH> : <nat:11> > <nat:1> ) . { lia . } assert ( <genH> : <nat:7> > <nat:1> ) . { lia . } exists <nat:12> . exists <nat:7> . exists <nat:10> . exists <nat:9> . exists <nat:11> . repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 