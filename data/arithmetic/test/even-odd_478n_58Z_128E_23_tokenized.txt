\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:n> \times <nat:478> + <nat:23> + <var:Z> \times <nat:58> + <var:E> \times <nat:128> $ is guaranteed to be odd taking all positive terms $ <var:Z> $ , $ <var:n> $ , and $ <var:E> $ . \end{theorem} \begin{proof} We prove $ <nat:23> + <var:Z> \cdot <nat:58> + <var:E> \cdot <nat:128> + <var:n> \cdot <nat:478> $ must be odd . This main result holds as a consequence that $ <nat:58> \times <var:Z> + <nat:478> \times <var:n> + <nat:128> \times <var:E> $ is guaranteed to be even , by reason that the summing between an even whole number with an even element of $ \mathbb{Z}^+ $ is guaranteed to be instrinsically an even positive integer . The pair $ <nat:478> * <var:n> $ is known to be an even whole number from the fact the whole number $ <nat:478> $ is known to be even . The term $ <nat:58> * <var:Z> $ is clearly an even natural . This claim holds since the natural number $ <nat:58> $ is even . The product $ <nat:128> * <var:E> $ is trivially an even number from the fact the product between an even number in $ \mathbb{Z}^+ $ with a number must be even , which must be true because the coefficient $ <nat:128> $ is trivially even . We know the addition of even naturals together and an odd number in $ \mathbb{N} $ is odd . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:Z> <var:n> <var:E> : nat , Nat . odd ( <nat:478> * <var:n> + <nat:58> * <var:Z> + <nat:128> * <var:E> + <nat:23> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:478> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:478> * <var:n> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:58> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:58> * <var:Z> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:128> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:128> * <var:E> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:478> * <var:n> + <nat:58> * <var:Z> + <nat:128> * <var:E> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . auto . Qed . 