\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \newtheorem{definition}{Definition} \begin{document} \begin{definition} Say that $ <var:g> $ is a <def:eleven-composite> whole number wherever there exist some $ <var:s> $ , $ <var:A> $ , $ <var:W> $ , $ <var:M> $ , $ <var:H> $ , $ <var:S> $ , $ <var:o> $ , $ <var:D> $ , $ <var:n> $ , $ <var:b> $ , $ <var:q> $ such that $ <var:o> * <var:b> * <var:s> * <var:S> * <var:M> * <var:H> * <var:W> * <var:n> * <var:A> * <var:D> * <var:q> = <var:g> $ assuming $ <var:g> \in \mathbb{Z}^+ $ as well as satisfying the condition that $ <var:W> $ , $ <var:s> $ , $ <var:M> $ , $ <var:b> $ , $ <var:n> $ , $ <var:q> $ , $ <var:H> $ , $ <var:S> $ , $ <var:D> $ , $ <var:A> $ and $ <var:o> \geq <nat:2> $ . \end{definition} \begin{theorem} $ <var:g> = <nat:1037836800> $ is a <def:eleven-composite> positive integer . \end{theorem} \begin{proof} Recollect that <nat:1037836800> is <def:eleven-composite> assuming it is the product of integers $ <var:W> $ , $ <var:n> $ , $ <var:A> $ , $ <var:M> $ , $ <var:D> $ , $ <var:q> $ , $ <var:H> $ , $ <var:S> $ , $ <var:o> $ , $ <var:s> $ , and $ <var:b> $ so that $ <var:s> $ , $ <var:D> $ , $ <var:A> $ , $ <var:H> $ , $ <var:W> $ , $ <var:S> $ , $ <var:q> $ , $ <var:b> $ , $ <var:M> $ , $ <var:o> $ , and $ <var:n> \geq <nat:2> $ . Allow $ <var:n> = <nat:8> $ , $ <var:M> = <nat:2> $ , $ <var:H> = <nat:9> $ , $ <var:S> = <nat:10> $ , $ <var:A> = <nat:3> $ , $ <var:s> = <nat:12> $ , $ <var:o> = <nat:13> $ , $ <var:W> = <nat:11> $ , $ <var:b> = <nat:5> $ , $ <var:q> = <nat:4> $ , and $ <var:D> = <nat:7> $ . We show <nat:1037836800> is a <def:eleven-composite> integer . Notice that $ <var:A> \times <var:M> \times <var:b> \times <var:s> \times <var:D> \times <var:q> \times <var:W> \times <var:o> \times <var:n> \times <var:H> \times <var:S> = <nat:1037836800> = <nat:3> \times <nat:2> \times <nat:5> \times <nat:12> \times <nat:7> \times <nat:4> \times <nat:11> \times <nat:13> \times <nat:8> \times <nat:9> \times <nat:10> $ . In addition note $ <var:H> = <nat:9> $ , $ <var:s> = <nat:12> $ , $ <var:W> = <nat:11> $ , $ <var:q> = <nat:4> $ , $ <var:n> = <nat:8> $ , $ <var:S> = <nat:10> $ , $ <var:o> = <nat:13> $ , $ <var:M> = <nat:2> $ , $ <var:b> = <nat:5> $ , $ <var:A> = <nat:3> $ , and $ <var:D> = <nat:7> $ are larger than or equivalent to <nat:2> . This implies <nat:1037836800> is <def:eleven-composite> . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:eleven-composite> ( <var:g> : nat ) := exists <var:s> <var:A> <var:W> <var:M> <var:H> <var:S> <var:o> <var:D> <var:n> <var:b> <var:q> : nat , ( <var:o> * <var:b> * <var:s> * <var:S> * <var:M> * <var:H> * <var:W> * <var:n> * <var:A> * <var:D> * <var:q> = <var:g> ) /\ ( <var:W> >= <nat:2> ) /\ ( <var:s> >= <nat:2> ) /\ ( <var:M> >= <nat:2> ) /\ ( <var:b> >= <nat:2> ) /\ ( <var:n> >= <nat:2> ) /\ ( <var:q> >= <nat:2> ) /\ ( <var:H> >= <nat:2> ) /\ ( <var:S> >= <nat:2> ) /\ ( <var:D> >= <nat:2> ) /\ ( <var:A> >= <nat:2> ) /\ ( <var:o> >= <nat:2> ) . Theorem <genP:1> : <def:eleven-composite> <nat:1037836800> . Proof . unfold <def:eleven-composite> . exists <nat:12> . exists <nat:3> . exists <nat:11> . exists <nat:2> . exists <nat:9> . exists <nat:10> . exists <nat:13> . exists <nat:7> . exists <nat:8> . exists <nat:5> . exists <nat:4> . assert ( <genH> : <nat:9> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:12> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:11> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:4> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:8> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:10> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:13> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:2> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:5> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:3> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:7> >= <nat:2> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 