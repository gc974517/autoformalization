\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} With some natural numbers $ <var:p> $ , $ <var:W> $ , $ <var:o> $ , $ <var:v> $ , and $ <var:d> $ the summation $ <var:o> <nat:424> + <var:W> <nat:116> + <var:d> <nat:490> + <nat:319> + <var:p> <nat:400> + <var:v> <nat:226> $ is odd . \end{theorem} \begin{proof} Take note the whole numbers $ <nat:490> $ , $ <nat:226> $ , $ <nat:424> $ , and moreover $ <nat:400> $ are guaranteed to be even natural numbers . Thus , the products $ <nat:490> \times <var:d> $ , $ <nat:226> \times <var:v> $ , $ <nat:424> \times <var:o> $ , plus $ <var:p> \times <nat:400> $ will be even at the same time . The number $ <nat:116> $ is known to be even . Accordingly , $ <var:W> \times <nat:116> $ will be even in addition . See $ <nat:319> $ is known as an odd element of $ \mathbb{N} $ . The addition of an even number and an odd number in $ \mathbb{N} $ must be odd . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:p> <var:W> <var:o> <var:v> <var:d> : nat , Nat . odd ( <nat:424> * <var:o> + <nat:116> * <var:W> + <nat:490> * <var:d> + <nat:400> * <var:p> + <nat:226> * <var:v> + <nat:319> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:490> = true ) . { auto . } assert ( <genH> : Nat . even <nat:226> = true ) . { auto . } assert ( <genH> : Nat . even <nat:424> = true ) . { auto . } assert ( <genH> : Nat . even <nat:400> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:490> * <var:d> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:226> * <var:v> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:424> * <var:o> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:400> * <var:p> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:116> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:116> * <var:W> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . odd <nat:319> = true ) . { auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 