\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:R> \cdot <nat:20> + <var:h> \cdot <nat:128> + <var:H> \cdot <nat:390> + <var:o> \cdot <nat:366> + <nat:234> \cdot <var:q> + <nat:492> \cdot <var:j> + <nat:178> $ is even using every natural numbers $ <var:h> $ , $ <var:H> $ , $ <var:o> $ , $ <var:q> $ , $ <var:R> $ , and $ <var:j> $ . \end{theorem} \begin{proof} The numbers $ <nat:390> $ , $ <nat:234> $ , $ <nat:20> $ , $ <nat:492> $ , and moreover $ <nat:128> $ are trivially even . So , the terms $ <nat:390> \times <var:H> $ , $ <var:q> \times <nat:234> $ , $ <var:R> \times <nat:20> $ , $ <nat:492> \times <var:j> $ , in addition to $ <var:h> \times <nat:128> $ must be even additionally . Adding on , recall that the product $ <nat:366> \times <var:o> $ is an even whole number because taking the product between an even integer and an arbitrary whole number is even . This claim is true as a consequence that the positive integer $ <nat:366> $ is trivially even . We prove the expression $ <nat:20> <var:R> + <nat:492> <var:j> + <nat:178> + <nat:366> <var:o> + <nat:234> <var:q> + <nat:390> <var:H> + <nat:128> <var:h> $ is guaranteed to be even . Recall $ <nat:178> $ is guaranteed to be even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:h> <var:H> <var:o> <var:q> <var:R> <var:j> : nat , Nat . even ( <nat:20> * <var:R> + <nat:128> * <var:h> + <nat:390> * <var:H> + <nat:366> * <var:o> + <nat:234> * <var:q> + <nat:492> * <var:j> + <nat:178> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:390> = true ) . { auto . } assert ( <genH> : Nat . even <nat:234> = true ) . { auto . } assert ( <genH> : Nat . even <nat:20> = true ) . { auto . } assert ( <genH> : Nat . even <nat:492> = true ) . { auto . } assert ( <genH> : Nat . even <nat:128> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:390> * <var:H> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:234> * <var:q> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:20> * <var:R> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:492> * <var:j> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:128> * <var:h> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:366> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:366> * <var:o> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:178> = true ) . { auto . } repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 