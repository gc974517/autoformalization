\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:E> * <nat:142> + <nat:256> * <var:J> + <var:w> * <nat:32> + <nat:232> * <var:x> + <nat:448> * <var:l> + <nat:335> + <var:t> * <nat:326> + <nat:58> * <var:k> + <nat:36> * <var:W> $ is guaranteed to be odd . \end{theorem} \begin{proof} It can be demonstrated that the sum $ <nat:256> \times <var:J> + <nat:58> \times <var:k> + <nat:142> \times <var:E> + <nat:36> \times <var:W> + <var:l> \times <nat:448> + <nat:335> + <var:t> \times <nat:326> + <var:w> \times <nat:32> + <nat:232> \times <var:x> $ will be odd . The terms $ <var:l> * <nat:448> $ , $ <var:w> * <nat:32> $ , $ <nat:36> * <var:W> $ , $ <nat:256> * <var:J> $ , $ <var:E> * <nat:142> $ , as well as $ <var:x> * <nat:232> $ must be even naturals . This claim holds from the knowledge multiplying between an even positive integer and some number is even . Additionally , remember the term $ <nat:326> * <var:t> $ is an even number . This fact holds as a consequence that the multiplication of an even whole number and any natural is even . The product $ <var:k> * <nat:58> $ is obviously an even number since multiplying between an even number in $ \mathbb{N} $ and some number in $ \mathbb{Z}^+ $ will be an even natural number . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:E> <var:J> <var:w> <var:x> <var:l> <var:t> <var:k> <var:W> : nat , Nat . odd ( <nat:142> * <var:E> + <nat:256> * <var:J> + <nat:32> * <var:w> + <nat:232> * <var:x> + <nat:448> * <var:l> + <nat:326> * <var:t> + <nat:58> * <var:k> + <nat:36> * <var:W> + <nat:335> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:448> * <var:l> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:32> * <var:w> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:36> * <var:W> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:256> * <var:J> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:142> * <var:E> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:232> * <var:x> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:326> * <var:t> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:58> * <var:k> ) = true ) . { rewrite Nat . even_mul . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 