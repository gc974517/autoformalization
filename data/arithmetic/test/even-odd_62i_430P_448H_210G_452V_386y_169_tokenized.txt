\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:448> * <var:H> + <nat:210> * <var:G> + <var:i> * <nat:62> + <nat:386> * <var:y> + <nat:430> * <var:P> + <nat:452> * <var:V> + <nat:169> $ is odd with all integers $ <var:y> $ , $ <var:i> $ , $ <var:V> $ , $ <var:G> $ , $ <var:P> $ , and $ <var:H> $ . \end{theorem} \begin{proof} We demonstrate the main result is proven . We know $ <nat:169> $ is obviously an odd natural number . The formula $ <nat:430> * <var:P> + <var:V> * <nat:452> + <var:G> * <nat:210> + <nat:386> * <var:y> + <nat:62> * <var:i> + <var:H> * <nat:448> $ is even . Take note that the summing between even integers together with an even number in $ \mathbb{Z}^+ $ is an even integer . See the leading terms $ <nat:452> $ , $ <nat:386> $ , $ <nat:430> $ , and also $ <nat:210> $ are guaranteed to be even Remember the integer $ <nat:62> $ is clearly an even natural number Likewise , the integer $ <nat:448> $ is trivially even additionally from the fact the product of an even element of $ \mathbb{N} $ and some element of $ \mathbb{N} $ is even the expression $ <var:i> \times <nat:62> + <var:P> \times <nat:430> + <var:H> \times <nat:448> + <var:G> \times <nat:210> + <var:V> \times <nat:452> + <nat:386> \times <var:y> $ is by definition even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:y> <var:i> <var:V> <var:G> <var:P> <var:H> : nat , Nat . odd ( <nat:448> * <var:H> + <nat:210> * <var:G> + <nat:62> * <var:i> + <nat:386> * <var:y> + <nat:430> * <var:P> + <nat:452> * <var:V> + <nat:169> ) = true . Proof . intros . assert ( <genH> : Nat . odd <nat:169> = true ) . { auto . } assert ( <genH> : Nat . even <nat:452> = true ) . { auto . } assert ( <genH> : Nat . even <nat:386> = true ) . { auto . } assert ( <genH> : Nat . even <nat:430> = true ) . { auto . } assert ( <genH> : Nat . even <nat:210> = true ) . { auto . } assert ( <genH> : Nat . even <nat:62> = true ) . { auto . } assert ( <genH> : Nat . even <nat:448> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:448> * <var:H> + <nat:210> * <var:G> + <nat:62> * <var:i> + <nat:386> * <var:y> + <nat:430> * <var:P> + <nat:452> * <var:V> ) = true ) . { repeat rewrite Nat . even_add . repeat rewrite Nat . even_mul . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . rewrite <genH> . auto . Qed . 