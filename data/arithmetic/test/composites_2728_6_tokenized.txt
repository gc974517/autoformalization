\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \newtheorem{definition}{Definition} \begin{document} \begin{definition} Assume $ <var:C> $ , $ <var:M> $ , $ <var:z> $ , $ <var:F> $ , $ <var:h> $ , $ <var:Q> $ as numbers greater than or equal to <nat:2> . Take that $ <var:Y> \in \mathbb{N} $ is considered to be a <def:six-composite> whole number assuming $ <var:Q> * <var:F> * <var:M> * <var:h> * <var:z> * <var:C> = <var:Y> $ . \end{definition} \begin{theorem} $ <nat:120960> = <var:Y> $ is a <def:six-composite> whole number . \end{theorem} \begin{proof} Recollect that <nat:120960> is a <def:six-composite> number only if it is the multiplication between natural numbers $ <var:h> $ , $ <var:z> $ , $ <var:C> $ , $ <var:M> $ , $ <var:F> $ and $ <var:Q> $ greater than or equivalent to <nat:2> . Notice that $ <nat:6> $ , $ <nat:8> $ , $ <nat:10> $ , $ <nat:7> $ , $ <nat:12> $ and $ <nat:3> \geq <nat:2> $ . Furthermore notice that moreover $ <nat:120960> = <var:z> \times <var:C> \times <var:F> \times <var:M> \times <var:Q> \times <var:h> $ shows $ <var:F> = <nat:8> $ , $ <var:M> = <nat:12> $ , $ <var:z> = <nat:3> $ , $ <var:C> = <nat:7> $ , $ <var:Q> = <nat:6> $ , and $ <var:h> = <nat:10> $ . This hints our proposition holds . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:six-composite> ( <var:Y> : nat ) := exists <var:C> <var:M> <var:z> <var:F> <var:h> <var:Q> : nat , ( <var:C> >= <nat:2> ) /\ ( <var:M> >= <nat:2> ) /\ ( <var:z> >= <nat:2> ) /\ ( <var:F> >= <nat:2> ) /\ ( <var:h> >= <nat:2> ) /\ ( <var:Q> >= <nat:2> ) /\ ( <var:Q> * <var:F> * <var:M> * <var:h> * <var:z> * <var:C> = <var:Y> ) . Theorem <genP:1> : <def:six-composite> <nat:120960> . Proof . unfold <def:six-composite> . assert ( <genH> : <nat:6> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:8> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:10> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:7> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:12> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:3> >= <nat:2> ) . { lia . } exists <nat:7> . exists <nat:12> . exists <nat:3> . exists <nat:8> . exists <nat:10> . exists <nat:6> . repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 