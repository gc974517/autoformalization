\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:353> + <var:e> \times <nat:390> + <var:I> \times <nat:160> + <nat:476> \times <var:Q> + <nat:328> \times <var:k> + <var:q> \times <nat:248> $ is guaranteed to be odd taking all $ <var:q> $ , $ <var:k> $ , $ <var:Q> $ , $ <var:e> $ , and $ <var:I> $ . \end{theorem} \begin{proof} Observe that the natural numbers $ <nat:390> $ , $ <nat:160> $ , $ <nat:476> $ , $ <nat:328> $ , additionally $ <nat:248> $ are known as even integers . For this reason , the terms $ <nat:390> \cdot <var:e> $ , $ <var:I> \cdot <nat:160> $ , $ <var:Q> \cdot <nat:476> $ , $ <var:k> \cdot <nat:328> $ , plus $ <nat:248> \cdot <var:q> $ is even additionally . Remember $ <nat:353> $ is guaranteed to be an odd element of $ \mathbb{N} $ . As a consequence that the addition between even natural numbers collectively and an odd whole number is guaranteed to be odd , as a result our proposition holds . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:q> <var:k> <var:Q> <var:e> <var:I> : nat , Nat . odd ( <nat:390> * <var:e> + <nat:160> * <var:I> + <nat:476> * <var:Q> + <nat:328> * <var:k> + <nat:248> * <var:q> + <nat:353> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:390> = true ) . { auto . } assert ( <genH> : Nat . even <nat:160> = true ) . { auto . } assert ( <genH> : Nat . even <nat:476> = true ) . { auto . } assert ( <genH> : Nat . even <nat:328> = true ) . { auto . } assert ( <genH> : Nat . even <nat:248> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:390> * <var:e> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:160> * <var:I> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:476> * <var:Q> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:328> * <var:k> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:248> * <var:q> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . odd <nat:353> = true ) . { auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 