\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:K> * <nat:372> + <nat:332> * <var:C> + <nat:496> * <var:W> + <var:O> * <nat:334> + <nat:294> * <var:n> + <var:Z> * <nat:78> + <nat:90> * <var:U> + <var:B> * <nat:422> + <var:r> * <nat:148> + <var:L> * <nat:28> + <nat:216> + <nat:50> * <var:y> $ is even taking any terms $ <var:U> $ , $ <var:B> $ , $ <var:L> $ , $ <var:K> $ , $ <var:r> $ , $ <var:C> $ , $ <var:y> $ , $ <var:O> $ , $ <var:W> $ , $ <var:Z> $ , and $ <var:n> $ . \end{theorem} \begin{proof} We show that $ <nat:90> * <var:U> + <nat:50> * <var:y> + <var:Z> * <nat:78> + <nat:28> * <var:L> + <nat:372> * <var:K> + <var:O> * <nat:334> + <var:r> * <nat:148> + <nat:496> * <var:W> + <var:n> * <nat:294> + <nat:332> * <var:C> + <var:B> * <nat:422> $ is clearly even . Take note that the pairs $ <var:O> \times <nat:334> $ , $ <nat:496> \times <var:W> $ , additionally $ <var:B> \times <nat:422> $ are guaranteed to be even . Building on , the pairs $ <var:Z> \times <nat:78> $ , $ <var:U> \times <nat:90> $ , $ <nat:50> \times <var:y> $ , $ <var:n> \times <nat:294> $ , $ <var:r> \times <nat:148> $ , in addition to $ <var:C> \times <nat:332> $ are known as even integers . This fact holds because the multiplication of an even number with a number is guaranteed to be even . The term $ <var:L> \times <nat:28> $ is known to be even . In addition , the product $ <nat:372> \times <var:K> $ is even from the fact multiplying between an even number with a positive integer is even . $ <var:C> \times <nat:332> + <nat:90> \times <var:U> + <var:y> \times <nat:50> + <var:B> \times <nat:422> + <nat:78> \times <var:Z> + <var:L> \times <nat:28> + <var:W> \times <nat:496> + <var:K> \times <nat:372> + <nat:334> \times <var:O> + <var:n> \times <nat:294> + <nat:148> \times <var:r> $ is guaranteed to be even by reason that the product of an even integer and any integer is guaranteed to be even . The addition of an even number in $ \mathbb{Z}^+ $ with an even integer will be an even positive integer . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:U> <var:B> <var:L> <var:K> <var:r> <var:C> <var:y> <var:O> <var:W> <var:Z> <var:n> : nat , Nat . even ( <nat:372> * <var:K> + <nat:332> * <var:C> + <nat:496> * <var:W> + <nat:334> * <var:O> + <nat:294> * <var:n> + <nat:78> * <var:Z> + <nat:90> * <var:U> + <nat:422> * <var:B> + <nat:148> * <var:r> + <nat:28> * <var:L> + <nat:50> * <var:y> + <nat:216> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:334> * <var:O> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:496> * <var:W> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:422> * <var:B> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:78> * <var:Z> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:90> * <var:U> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:50> * <var:y> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:294> * <var:n> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:148> * <var:r> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:332> * <var:C> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:28> * <var:L> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:372> * <var:K> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:372> * <var:K> + <nat:332> * <var:C> + <nat:496> * <var:W> + <nat:334> * <var:O> + <nat:294> * <var:n> + <nat:78> * <var:Z> + <nat:90> * <var:U> + <nat:422> * <var:B> + <nat:148> * <var:r> + <nat:28> * <var:L> + <nat:50> * <var:y> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . even_add . rewrite <genH> . auto . Qed . 