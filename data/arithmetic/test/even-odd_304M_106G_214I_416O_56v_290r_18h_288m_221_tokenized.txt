\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:M> \times <nat:304> + <nat:106> \times <var:G> + <nat:214> \times <var:I> + <var:O> \times <nat:416> + <nat:56> \times <var:v> + <nat:221> + <var:r> \times <nat:290> + <nat:18> \times <var:h> + <var:m> \times <nat:288> $ is odd using any natural numbers $ <var:O> $ , $ <var:r> $ , $ <var:h> $ , $ <var:I> $ , $ <var:M> $ , $ <var:v> $ , $ <var:m> $ , and $ <var:G> $ . \end{theorem} \begin{proof} The pairs $ <var:r> \cdot <nat:290> $ plus $ <nat:214> \cdot <var:I> $ are known to be even . This must be true from the fact the multiplication between an even number in $ \mathbb{Z}^+ $ and any number will be an even natural . The terms $ <var:O> \cdot <nat:416> $ , $ <var:M> \cdot <nat:304> $ , $ <nat:106> \cdot <var:G> $ , $ <var:h> \cdot <nat:18> $ , additionally $ <nat:288> \cdot <var:m> $ are clearly even natural numbers . In addition to this , the product $ <var:v> \cdot <nat:56> $ is known as even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:O> <var:r> <var:h> <var:I> <var:M> <var:v> <var:m> <var:G> : nat , Nat . odd ( <nat:304> * <var:M> + <nat:106> * <var:G> + <nat:214> * <var:I> + <nat:416> * <var:O> + <nat:56> * <var:v> + <nat:290> * <var:r> + <nat:18> * <var:h> + <nat:288> * <var:m> + <nat:221> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:290> * <var:r> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:214> * <var:I> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:416> * <var:O> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:304> * <var:M> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:106> * <var:G> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:18> * <var:h> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:288> * <var:m> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:56> * <var:v> ) = true ) . { rewrite Nat . even_mul . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 