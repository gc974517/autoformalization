\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} The positive integer <nat:1663200> is the product between $ <var:V> $ , $ <var:d> $ , $ <var:s> $ , $ <var:B> $ , $ <var:z> $ , $ <var:e> $ , $ <var:G> $ , $ <var:Q> $ such that $ <var:z> $ , $ <var:Q> $ , $ <var:B> $ , $ <var:s> $ , $ <var:e> $ , $ <var:G> $ , $ <var:d> $ , $ <var:V> $ more than or equal to <nat:2> . \end{theorem} \begin{proof} Notice that $ <nat:11> \cdot <nat:10> \cdot <nat:2> \cdot <nat:7> \cdot <nat:12> \cdot <nat:3> \cdot <nat:6> \cdot <nat:5> = <nat:1663200> $ . Moreover note $ <nat:11> $ , $ <nat:5> $ , $ <nat:6> $ , $ <nat:3> $ , $ <nat:10> $ , $ <nat:12> $ , $ <nat:7> $ , and $ <nat:2> $ are larger than or equivalent to <nat:2> . This hints our theorem holds . \end{proof} \end{document} 
~
Require Import Lia . Theorem <genP:1> : exists <var:V> <var:d> <var:s> <var:B> <var:z> <var:e> <var:G> <var:Q> : nat , ( <nat:1663200> = <var:V> * <var:d> * <var:s> * <var:B> * <var:z> * <var:e> * <var:G> * <var:Q> ) /\ ( <var:z> >= <nat:2> ) /\ ( <var:Q> >= <nat:2> ) /\ ( <var:B> >= <nat:2> ) /\ ( <var:s> >= <nat:2> ) /\ ( <var:e> >= <nat:2> ) /\ ( <var:G> >= <nat:2> ) /\ ( <var:d> >= <nat:2> ) /\ ( <var:V> >= <nat:2> ) . Proof . exists <nat:12> . exists <nat:2> . exists <nat:5> . exists <nat:3> . exists <nat:7> . exists <nat:6> . exists <nat:11> . exists <nat:10> . assert ( <genH> : <nat:11> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:5> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:6> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:3> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:10> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:12> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:7> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:2> >= <nat:2> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 