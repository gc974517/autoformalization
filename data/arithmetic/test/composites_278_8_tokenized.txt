\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} The positive integer <nat:842400> is the multiplication of $ <var:h> $ , $ <var:e> $ , $ <var:S> $ , $ <var:E> $ , $ <var:G> $ , $ <var:V> $ , $ <var:X> $ and $ <var:m> \in \mathbb{Z}^+ $ such that $ <var:h> $ , $ <var:V> $ , $ <var:X> $ , $ <var:E> $ , $ <var:m> $ , $ <var:G> $ , $ <var:S> $ , $ <var:e> > <nat:1> $ . \end{theorem} \begin{proof} Observe that $ <nat:842400> = <var:m> \cdot <var:E> \cdot <var:V> \cdot <var:h> \cdot <var:G> \cdot <var:S> \cdot <var:e> \cdot <var:X> $ implies $ <var:m> = <nat:13> $ , $ <var:X> = <nat:10> $ , $ <var:h> = <nat:9> $ , $ <var:E> = <nat:2> $ , $ <var:e> = <nat:6> $ , $ <var:V> = <nat:3> $ , $ <var:G> = <nat:4> $ , $ <var:S> = <nat:5> $ . Further observe $ <nat:4> $ , $ <nat:5> $ , $ <nat:13> $ , $ <nat:6> $ , $ <nat:9> $ , $ <nat:10> $ , $ <nat:2> $ , and $ <nat:3> $ are more than <nat:1> . As a result , $ <var:E> $ , $ <var:m> $ , $ <var:e> $ , $ <var:S> $ , $ <var:G> $ , $ <var:X> $ , $ <var:h> $ , $ <var:V> > <nat:1> $ plus $ <var:m> \times <var:S> \times <var:X> \times <var:e> \times <var:h> \times <var:G> \times <var:E> \times <var:V> = <nat:842400> $ is verified . \end{proof} \end{document} 
~
Require Import Lia . Theorem <genP:1> : exists <var:h> <var:e> <var:S> <var:E> <var:G> <var:V> <var:X> <var:m> : nat , ( <nat:842400> = <var:h> * <var:e> * <var:S> * <var:E> * <var:G> * <var:V> * <var:X> * <var:m> ) /\ ( <var:h> > <nat:1> ) /\ ( <var:V> > <nat:1> ) /\ ( <var:X> > <nat:1> ) /\ ( <var:E> > <nat:1> ) /\ ( <var:m> > <nat:1> ) /\ ( <var:G> > <nat:1> ) /\ ( <var:S> > <nat:1> ) /\ ( <var:e> > <nat:1> ) . Proof . exists <nat:9> . exists <nat:6> . exists <nat:5> . exists <nat:2> . exists <nat:4> . exists <nat:3> . exists <nat:10> . exists <nat:13> . assert ( <genH> : <nat:4> > <nat:1> ) . { lia . } assert ( <genH> : <nat:5> > <nat:1> ) . { lia . } assert ( <genH> : <nat:13> > <nat:1> ) . { lia . } assert ( <genH> : <nat:6> > <nat:1> ) . { lia . } assert ( <genH> : <nat:9> > <nat:1> ) . { lia . } assert ( <genH> : <nat:10> > <nat:1> ) . { lia . } assert ( <genH> : <nat:2> > <nat:1> ) . { lia . } assert ( <genH> : <nat:3> > <nat:1> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 