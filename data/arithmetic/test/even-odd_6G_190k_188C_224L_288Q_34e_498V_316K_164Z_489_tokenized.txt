\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:K> * <nat:316> + <nat:224> * <var:L> + <nat:6> * <var:G> + <nat:188> * <var:C> + <var:V> * <nat:498> + <nat:288> * <var:Q> + <nat:190> * <var:k> + <nat:34> * <var:e> + <nat:489> + <var:Z> * <nat:164> $ is odd using variables $ <var:L> $ , $ <var:C> $ , $ <var:Q> $ , $ <var:G> $ , $ <var:e> $ , $ <var:k> $ , $ <var:V> $ , $ <var:Z> $ , and $ <var:K> $ . \end{theorem} \begin{proof} We demonstrate this result must be true . Take note $ <nat:489> $ is obviously an odd number in $ \mathbb{N} $ . We show $ <nat:6> <var:G> + <nat:190> <var:k> + <nat:188> <var:C> + <var:L> <nat:224> + <nat:288> <var:Q> + <nat:34> <var:e> + <nat:498> <var:V> + <nat:316> <var:K> + <nat:164> <var:Z> $ is obviously even . Recall that the coefficients $ <nat:6> $ , $ <nat:34> $ , $ <nat:164> $ , $ <nat:188> $ , $ <nat:316> $ , $ <nat:288> $ , $ <nat:224> $ , and $ <nat:498> $ must be even positive integers Adding on , the coefficient $ <nat:190> $ is guaranteed to be even This theorem is proven from the knowledge taking the product between an even whole number with some number in $ \mathbb{Z}^+ $ must be an even number . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:L> <var:C> <var:Q> <var:G> <var:e> <var:k> <var:V> <var:Z> <var:K> : nat , Nat . odd ( <nat:316> * <var:K> + <nat:224> * <var:L> + <nat:6> * <var:G> + <nat:188> * <var:C> + <nat:498> * <var:V> + <nat:288> * <var:Q> + <nat:190> * <var:k> + <nat:34> * <var:e> + <nat:164> * <var:Z> + <nat:489> ) = true . Proof . intros . assert ( <genH> : Nat . odd <nat:489> = true ) . { auto . } assert ( <genH> : Nat . even <nat:6> = true ) . { auto . } assert ( <genH> : Nat . even <nat:34> = true ) . { auto . } assert ( <genH> : Nat . even <nat:164> = true ) . { auto . } assert ( <genH> : Nat . even <nat:188> = true ) . { auto . } assert ( <genH> : Nat . even <nat:316> = true ) . { auto . } assert ( <genH> : Nat . even <nat:288> = true ) . { auto . } assert ( <genH> : Nat . even <nat:224> = true ) . { auto . } assert ( <genH> : Nat . even <nat:498> = true ) . { auto . } assert ( <genH> : Nat . even <nat:190> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:316> * <var:K> + <nat:224> * <var:L> + <nat:6> * <var:G> + <nat:188> * <var:C> + <nat:498> * <var:V> + <nat:288> * <var:Q> + <nat:190> * <var:k> + <nat:34> * <var:e> + <nat:164> * <var:Z> ) = true ) . { repeat rewrite Nat . even_add . repeat rewrite Nat . even_mul . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . rewrite <genH> . auto . Qed . 