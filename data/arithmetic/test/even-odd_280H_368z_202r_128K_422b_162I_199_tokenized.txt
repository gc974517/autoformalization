\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:199> + <nat:162> * <var:I> + <var:z> * <nat:368> + <nat:422> * <var:b> + <var:K> * <nat:128> + <var:H> * <nat:280> + <var:r> * <nat:202> $ is guaranteed to be odd . \end{theorem} \begin{proof} Remember the formula $ <nat:199> + <nat:202> * <var:r> + <nat:162> * <var:I> + <var:b> * <nat:422> + <nat:280> * <var:H> + <var:K> * <nat:128> + <nat:368> * <var:z> $ is guaranteed to be odd as a consequence that the summation $ <var:b> * <nat:422> + <var:H> * <nat:280> + <var:I> * <nat:162> + <var:K> * <nat:128> + <var:r> * <nat:202> + <nat:368> * <var:z> $ is guaranteed to be even , by reason that the totaling of an even whole number and an even whole number is guaranteed to be an even natural number . Observe the products $ <nat:422> \times <var:b> $ , $ <nat:280> \times <var:H> $ , $ <nat:368> \times <var:z> $ , and $ <nat:162> \times <var:I> $ must be even . We know that the pair $ <nat:202> \times <var:r> $ is known to be an even positive integer . This claim is true because multiplying between an even element of $ \mathbb{N} $ and some element of $ \mathbb{Z}^+ $ is even . We know the term $ <var:K> \times <nat:128> $ is known as even . and by reason that multiplying between even whole numbers with any natural number is guaranteed to be even $ <var:b> \times <nat:422> + <nat:162> \times <var:I> + <var:H> \times <nat:280> + <var:z> \times <nat:368> + <nat:128> \times <var:K> + <var:r> \times <nat:202> $ is even . It can be proven that the formula $ <nat:280> * <var:H> + <nat:199> + <var:z> * <nat:368> + <var:r> * <nat:202> + <nat:128> * <var:K> + <var:b> * <nat:422> + <var:I> * <nat:162> $ will be odd . We know $ <nat:199> $ is an odd positive integer . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:I> <var:z> <var:b> <var:K> <var:H> <var:r> : nat , Nat . odd ( <nat:162> * <var:I> + <nat:368> * <var:z> + <nat:422> * <var:b> + <nat:128> * <var:K> + <nat:280> * <var:H> + <nat:202> * <var:r> + <nat:199> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:422> * <var:b> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:280> * <var:H> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:368> * <var:z> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:162> * <var:I> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:202> * <var:r> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:128> * <var:K> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:162> * <var:I> + <nat:368> * <var:z> + <nat:422> * <var:b> + <nat:128> * <var:K> + <nat:280> * <var:H> + <nat:202> * <var:r> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } assert ( <genH> : Nat . odd <nat:199> = true ) . { auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . rewrite <genH> . auto . Qed . 