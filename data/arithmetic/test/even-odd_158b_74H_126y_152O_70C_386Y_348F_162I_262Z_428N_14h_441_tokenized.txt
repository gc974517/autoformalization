\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:b> <nat:158> + <nat:441> + <var:H> <nat:74> + <nat:126> <var:y> + <var:O> <nat:152> + <var:C> <nat:70> + <var:Y> <nat:386> + <nat:348> <var:F> + <var:I> <nat:162> + <var:Z> <nat:262> + <var:N> <nat:428> + <nat:14> <var:h> $ is guaranteed to be odd taking every $ <var:O> $ , $ <var:F> $ , $ <var:b> $ , $ <var:N> $ , $ <var:H> $ , $ <var:h> $ , $ <var:Y> $ , $ <var:Z> $ , $ <var:y> $ , $ <var:I> $ , and $ <var:C> \in \mathbb{N} $ . \end{theorem} \begin{proof} We know that the summation between an even element of $ \mathbb{N} $ and an odd positive integer will be trivially an odd natural . Recall that the products $ <var:h> * <nat:14> $ , $ <var:F> * <nat:348> $ , $ <var:O> * <nat:152> $ , $ <nat:70> * <var:C> $ , $ <nat:162> * <var:I> $ , $ <nat:386> * <var:Y> $ , $ <nat:74> * <var:H> $ , as well as $ <nat:428> * <var:N> $ are known to be even numbers in $ \mathbb{N} $ . This claim holds as a consequence that taking the product between an even number in $ \mathbb{Z}^+ $ with some natural is guaranteed to be an even number in $ \mathbb{Z}^+ $ . The product $ <nat:158> * <var:b> $ is even since the multiplication of an even natural and any integer must be even . Likewise , the product $ <var:y> * <nat:126> $ is clearly even . This claim is true as a consequence that multiplying of an even number and any number in $ \mathbb{N} $ is even . On top of this , the term $ <var:Z> * <nat:262> $ is known as an even positive integer . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:O> <var:F> <var:b> <var:N> <var:H> <var:h> <var:Y> <var:Z> <var:y> <var:I> <var:C> : nat , Nat . odd ( <nat:158> * <var:b> + <nat:74> * <var:H> + <nat:126> * <var:y> + <nat:152> * <var:O> + <nat:70> * <var:C> + <nat:386> * <var:Y> + <nat:348> * <var:F> + <nat:162> * <var:I> + <nat:262> * <var:Z> + <nat:428> * <var:N> + <nat:14> * <var:h> + <nat:441> ) = true . Proof . intros . rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . assert ( <genH> : Nat . even ( <nat:14> * <var:h> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:348> * <var:F> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:152> * <var:O> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:70> * <var:C> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:162> * <var:I> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:386> * <var:Y> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:74> * <var:H> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:428> * <var:N> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:158> * <var:b> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:126> * <var:y> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:262> * <var:Z> ) = true ) . { rewrite Nat . even_mul . auto . } rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 