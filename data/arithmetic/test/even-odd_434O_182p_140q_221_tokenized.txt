\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:O> \times <nat:434> + <nat:182> \times <var:p> + <nat:221> + <var:q> \times <nat:140> $ will be odd taking some unknowns $ <var:q> $ , $ <var:O> $ , and $ <var:p> $ . \end{theorem} \begin{proof} It can be proven that that the sum $ <nat:140> \cdot <var:q> + <nat:434> \cdot <var:O> + <nat:182> \cdot <var:p> $ is known to be even . The pair $ <nat:182> <var:p> $ is obviously an even integer . This claim holds from the fact the positive integer $ <nat:182> $ is an even natural number . We know $ <nat:434> <var:O> $ is known as an even element of $ \mathbb{N} $ from the fact the multiplication of an even number with some element of $ \mathbb{Z}^+ $ is guaranteed to be an even natural number plus the positive integer $ <nat:434> $ is known to be even . Further , notice the natural number $ <nat:140> $ is trivially an even integer . Hence , the product $ <var:q> <nat:140> $ will be even also . $ <var:O> * <nat:434> + <nat:182> * <var:p> + <nat:140> * <var:q> $ is guaranteed to be by itself even by reason that the addition between an even integer with even whole numbers is even additionally because the multiplication of an even element of $ \mathbb{N} $ and any element of $ \mathbb{N} $ is guaranteed to be by itself an even positive integer . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:q> <var:O> <var:p> : nat , Nat . odd ( <nat:434> * <var:O> + <nat:182> * <var:p> + <nat:140> * <var:q> + <nat:221> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:182> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:182> * <var:p> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:434> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:434> * <var:O> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:140> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:140> * <var:q> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:434> * <var:O> + <nat:182> * <var:p> + <nat:140> * <var:q> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . auto . Qed . 