\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:374> <var:W> + <var:a> <nat:172> + <nat:128> <var:c> + <var:P> <nat:50> + <var:p> <nat:312> + <var:D> <nat:382> + <var:G> <nat:226> + <nat:27> + <nat:60> <var:O> $ is guaranteed to be odd for any integers $ <var:W> $ , $ <var:p> $ , $ <var:P> $ , $ <var:G> $ , $ <var:a> $ , $ <var:c> $ , $ <var:O> $ , and $ <var:D> $ . \end{theorem} \begin{proof} The sum $ <nat:128> \times <var:c> + <nat:382> \times <var:D> + <var:P> \times <nat:50> + <nat:312> \times <var:p> + <var:a> \times <nat:172> + <nat:226> \times <var:G> + <nat:60> \times <var:O> + <var:W> \times <nat:374> $ is clearly even . The products $ <var:G> \cdot <nat:226> $ , $ <nat:312> \cdot <var:p> $ , and moreover $ <var:P> \cdot <nat:50> $ will be even . The terms $ <var:O> \cdot <nat:60> $ additionally $ <nat:374> \cdot <var:W> $ are obviously even integers . Observe that the pairs $ <var:a> \cdot <nat:172> $ and $ <var:D> \cdot <nat:382> $ are clearly even by reason that the product of an even number in $ \mathbb{N} $ with some positive integer must be even . In addition to this , recall that $ <nat:128> \cdot <var:c> $ is guaranteed to be even . This fact is true from the fact multiplying of an even number in $ \mathbb{N} $ with any integer must be an even integer . From the fact the adding of even positive integers and even numbers in $ \mathbb{Z}^+ $ must be fundamentally an even natural , in addition to as a consequence that the product between an even natural number with an arbitrary natural number is guaranteed to be even . We verify this proposition is true . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:W> <var:p> <var:P> <var:G> <var:a> <var:c> <var:O> <var:D> : nat , Nat . odd ( <nat:374> * <var:W> + <nat:172> * <var:a> + <nat:128> * <var:c> + <nat:50> * <var:P> + <nat:312> * <var:p> + <nat:382> * <var:D> + <nat:226> * <var:G> + <nat:60> * <var:O> + <nat:27> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:226> * <var:G> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:312> * <var:p> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:50> * <var:P> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:60> * <var:O> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:374> * <var:W> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:172> * <var:a> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:382> * <var:D> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:128> * <var:c> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:374> * <var:W> + <nat:172> * <var:a> + <nat:128> * <var:c> + <nat:50> * <var:P> + <nat:312> * <var:p> + <nat:382> * <var:D> + <nat:226> * <var:G> + <nat:60> * <var:O> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . auto . Qed . 