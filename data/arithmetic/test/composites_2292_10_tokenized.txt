\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \newtheorem{definition}{Definition} \begin{document} \begin{definition} Claim that $ <var:a> $ is a <def:ten-composite> integer iff taking some whole numbers $ <var:K> $ , $ <var:S> $ , $ <var:t> $ , $ <var:s> $ , $ <var:c> $ , $ <var:E> $ , $ <var:u> $ , $ <var:C> $ , $ <var:r> $ , $ <var:j> $ we have $ <var:s> \cdot <var:c> \cdot <var:u> \cdot <var:K> \cdot <var:r> \cdot <var:C> \cdot <var:t> \cdot <var:j> \cdot <var:E> \cdot <var:S> = <var:a> $ with $ <var:a> \in \mathbb{Z}^+ $ plus such that $ <var:s> $ , $ <var:S> $ , $ <var:r> $ , $ <var:K> $ , $ <var:j> $ , $ <var:C> $ , $ <var:E> $ , $ <var:u> $ , $ <var:t> $ , $ <var:c> \geq <nat:2> $ . \end{definition} \begin{theorem} The integer <nat:111196800> is a <def:ten-composite> whole number . \end{theorem} \begin{proof} Allow $ <var:K> = <nat:6> $ , $ <var:S> = <nat:11> $ , $ <var:r> = <nat:4> $ , $ <var:c> = <nat:2> $ , $ <var:j> = <nat:9> $ , $ <var:u> = <nat:10> $ , $ <var:t> = <nat:13> $ , $ <var:s> = <nat:3> $ , $ <var:E> = <nat:12> $ and $ <var:C> = <nat:5> $ . We show our result holds for For $ <nat:9> $ , $ <nat:3> $ , $ <nat:4> $ , $ <nat:6> $ , $ <nat:13> $ , $ <nat:11> $ , $ <nat:5> $ , $ <nat:12> $ , $ <nat:2> $ and $ <nat:10> \geq <nat:2> $ . Because of this , $ <nat:111196800> = <var:u> \times <var:K> \times <var:E> \times <var:C> \times <var:c> \times <var:s> \times <var:S> \times <var:j> \times <var:t> \times <var:r> $ has been validated . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:ten-composite> ( <var:a> : nat ) := exists <var:K> <var:S> <var:t> <var:s> <var:c> <var:E> <var:u> <var:C> <var:r> <var:j> : nat , ( <var:s> * <var:c> * <var:u> * <var:K> * <var:r> * <var:C> * <var:t> * <var:j> * <var:E> * <var:S> = <var:a> ) /\ ( <var:s> >= <nat:2> ) /\ ( <var:S> >= <nat:2> ) /\ ( <var:r> >= <nat:2> ) /\ ( <var:K> >= <nat:2> ) /\ ( <var:j> >= <nat:2> ) /\ ( <var:C> >= <nat:2> ) /\ ( <var:E> >= <nat:2> ) /\ ( <var:u> >= <nat:2> ) /\ ( <var:t> >= <nat:2> ) /\ ( <var:c> >= <nat:2> ) . Theorem <genP:1> : <def:ten-composite> <nat:111196800> . Proof . unfold <def:ten-composite> . exists <nat:6> . exists <nat:11> . exists <nat:13> . exists <nat:3> . exists <nat:2> . exists <nat:12> . exists <nat:10> . exists <nat:5> . exists <nat:4> . exists <nat:9> . assert ( <genH> : <nat:9> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:3> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:4> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:6> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:13> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:11> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:5> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:12> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:2> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:10> >= <nat:2> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 