\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Let $ <var:S> $ , $ <var:x> $ , $ <var:A> $ , $ <var:D> $ , $ <var:R> $ , $ <var:T> $ , $ <var:v> $ , $ <var:P> $ , $ <var:E> $ , $ <var:o> $ be integers . Assume that $ <var:J> \in \mathbb{Z}^+ $ is a <def:ten-composite> number if $ <var:J> = <var:P> * <var:T> * <var:x> * <var:D> * <var:R> * <var:v> * <var:A> * <var:o> * <var:E> * <var:S> $ and greater than or equal to <nat:2> . Accordingly $ <nat:283046400> = <var:J> $ is a <def:ten-composite> number . \end{theorem} \begin{proof} Recall a <def:ten-composite> positive integer is the product of natural numbers $ <var:R> $ , $ <var:E> $ , $ <var:v> $ , $ <var:x> $ , $ <var:S> $ , $ <var:P> $ , $ <var:T> $ , $ <var:D> $ , $ <var:o> $ , and $ <var:A> $ larger than or equivalent to <nat:2> . We confirm <nat:283046400> is <def:ten-composite> . Note $ <nat:283046400> = <nat:9> \cdot <nat:12> \cdot <nat:8> \cdot <nat:3> \cdot <nat:6> \cdot <nat:13> \cdot <nat:7> \cdot <nat:4> \cdot <nat:10> \cdot <nat:5> $ . Additionally notice that $ <nat:9> $ , $ <nat:6> $ , $ <nat:4> $ , $ <nat:12> $ , $ <nat:10> $ , $ <nat:3> $ , $ <nat:13> $ , $ <nat:7> $ , $ <nat:8> $ , $ <nat:5> \geq <nat:2> $ . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:ten-composite> ( <var:J> : nat ) := exists <var:S> <var:x> <var:A> <var:D> <var:R> <var:T> <var:v> <var:P> <var:E> <var:o> : nat , ( <var:J> = <var:P> * <var:T> * <var:x> * <var:D> * <var:R> * <var:v> * <var:A> * <var:o> * <var:E> * <var:S> ) /\ ( <var:S> >= <nat:2> ) /\ ( <var:x> >= <nat:2> ) /\ ( <var:A> >= <nat:2> ) /\ ( <var:D> >= <nat:2> ) /\ ( <var:R> >= <nat:2> ) /\ ( <var:T> >= <nat:2> ) /\ ( <var:v> >= <nat:2> ) /\ ( <var:P> >= <nat:2> ) /\ ( <var:E> >= <nat:2> ) /\ ( <var:o> >= <nat:2> ) . Theorem <genP:1> : <def:ten-composite> <nat:283046400> . Proof . unfold <def:ten-composite> . exists <nat:6> . exists <nat:8> . exists <nat:9> . exists <nat:10> . exists <nat:4> . exists <nat:12> . exists <nat:7> . exists <nat:3> . exists <nat:5> . exists <nat:13> . assert ( <genH> : <nat:9> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:6> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:4> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:12> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:10> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:3> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:13> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:7> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:8> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:5> >= <nat:2> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 