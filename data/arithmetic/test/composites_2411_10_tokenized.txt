\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:s> * <var:G> * <var:t> * <var:C> * <var:f> * <var:c> * <var:M> * <var:E> * <var:y> * <var:Z> $ is $ <nat:43545600> $ where $ <var:M> $ , $ <var:Z> $ , $ <var:t> $ , $ <var:E> $ , $ <var:s> $ , $ <var:C> $ , $ <var:f> $ , $ <var:G> $ , $ <var:c> $ and $ <var:y> \geq <nat:2> $ . \end{theorem} \begin{proof} We verify $ <var:t> * <var:c> * <var:Z> * <var:G> * <var:s> * <var:y> * <var:E> * <var:C> * <var:f> * <var:M> = <nat:43545600> $ . Notice $ <nat:43545600> = <var:s> * <var:y> * <var:c> * <var:f> * <var:C> * <var:E> * <var:M> * <var:t> * <var:Z> * <var:G> $ shows $ <var:s> = <nat:5> $ , $ <var:f> = <nat:2> $ , $ <var:E> = <nat:12> $ , $ <var:c> = <nat:3> $ , $ <var:y> = <nat:10> $ , $ <var:C> = <nat:4> $ , $ <var:t> = <nat:9> $ , $ <var:Z> = <nat:7> $ , $ <var:G> = <nat:6> $ , and $ <var:M> = <nat:8> $ . Plus notice that $ <nat:12> $ , $ <nat:4> $ , $ <nat:5> $ , $ <nat:6> $ , $ <nat:2> $ , $ <nat:9> $ , $ <nat:10> $ , $ <nat:3> $ , $ <nat:8> $ , and $ <nat:7> \geq <nat:2> $ . \end{proof} \end{document} 
~
Require Import Lia . Theorem <genP:1> : exists <var:c> <var:Z> <var:f> <var:s> <var:G> <var:M> <var:t> <var:C> <var:E> <var:y> : nat , ( <var:s> * <var:G> * <var:t> * <var:C> * <var:f> * <var:c> * <var:M> * <var:E> * <var:y> * <var:Z> = <nat:43545600> ) /\ ( <var:M> >= <nat:2> ) /\ ( <var:Z> >= <nat:2> ) /\ ( <var:t> >= <nat:2> ) /\ ( <var:E> >= <nat:2> ) /\ ( <var:s> >= <nat:2> ) /\ ( <var:C> >= <nat:2> ) /\ ( <var:f> >= <nat:2> ) /\ ( <var:G> >= <nat:2> ) /\ ( <var:c> >= <nat:2> ) /\ ( <var:y> >= <nat:2> ) . Proof . exists <nat:3> . exists <nat:7> . exists <nat:2> . exists <nat:5> . exists <nat:6> . exists <nat:8> . exists <nat:9> . exists <nat:4> . exists <nat:12> . exists <nat:10> . assert ( <genH> : <nat:12> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:4> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:5> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:6> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:2> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:9> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:10> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:3> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:8> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:7> >= <nat:2> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 