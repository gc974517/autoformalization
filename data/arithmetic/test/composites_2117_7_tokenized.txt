\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \newtheorem{definition}{Definition} \begin{document} \begin{definition} When we get where $ <var:q> $ , $ <var:l> $ , $ <var:k> $ , $ <var:C> $ , $ <var:M> $ , $ <var:Y> $ , $ <var:W> > <nat:1> $ such that given some integer $ <var:D> $ , $ <var:C> * <var:M> * <var:k> * <var:l> * <var:q> * <var:W> * <var:Y> = <var:D> $ , assume that $ <var:D> $ is a <def:seven-composite> whole number for some integers $ <var:W> $ , $ <var:l> $ , $ <var:M> $ , $ <var:k> $ , $ <var:C> $ , $ <var:Y> $ , $ <var:q> $ . \end{definition} \begin{theorem} The positive integer <nat:369600> is <def:seven-composite> . \end{theorem} \begin{proof} Recall a <def:seven-composite> natural number is the product between integers $ <var:l> $ , $ <var:M> $ , $ <var:C> $ , $ <var:Y> $ , $ <var:k> $ , $ <var:W> $ , and $ <var:q> $ more than <nat:1> . Notice $ <nat:369600> = <nat:5> * <nat:10> * <nat:4> * <nat:7> * <nat:11> * <nat:12> * <nat:2> $ . Also note that $ <nat:4> $ , $ <nat:7> $ , $ <nat:12> $ , $ <nat:2> $ , $ <nat:10> $ , $ <nat:5> $ , and $ <nat:11> > <nat:1> $ . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:seven-composite> ( <var:D> : nat ) := exists <var:W> <var:l> <var:M> <var:k> <var:C> <var:Y> <var:q> : nat , ( <var:q> > <nat:1> ) /\ ( <var:l> > <nat:1> ) /\ ( <var:k> > <nat:1> ) /\ ( <var:C> > <nat:1> ) /\ ( <var:M> > <nat:1> ) /\ ( <var:Y> > <nat:1> ) /\ ( <var:W> > <nat:1> ) /\ ( <var:C> * <var:M> * <var:k> * <var:l> * <var:q> * <var:W> * <var:Y> = <var:D> ) . Theorem <genP:1> : <def:seven-composite> <nat:369600> . Proof . unfold <def:seven-composite> . exists <nat:4> . exists <nat:7> . exists <nat:12> . exists <nat:5> . exists <nat:11> . exists <nat:2> . exists <nat:10> . assert ( <genH> : <nat:4> > <nat:1> ) . { lia . } assert ( <genH> : <nat:7> > <nat:1> ) . { lia . } assert ( <genH> : <nat:12> > <nat:1> ) . { lia . } assert ( <genH> : <nat:2> > <nat:1> ) . { lia . } assert ( <genH> : <nat:10> > <nat:1> ) . { lia . } assert ( <genH> : <nat:5> > <nat:1> ) . { lia . } assert ( <genH> : <nat:11> > <nat:1> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 