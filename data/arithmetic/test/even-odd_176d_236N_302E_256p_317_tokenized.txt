\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:317> + <var:d> \times <nat:176> + <nat:256> \times <var:p> + <nat:236> \times <var:N> + <nat:302> \times <var:E> $ will be odd taking some positive numbers $ <var:p> $ , $ <var:E> $ , $ <var:N> $ , and $ <var:d> $ . \end{theorem} \begin{proof} This claim holds since $ <var:d> * <nat:176> + <nat:236> * <var:N> + <nat:302> * <var:E> + <nat:256> * <var:p> $ is clearly even . See the adding of even elements of $ \mathbb{Z}^+ $ concurrently and an even number in $ \mathbb{Z}^+ $ is in itself an even number in $ \mathbb{Z}^+ $ . Notice that the products $ <var:d> <nat:176> $ , $ <nat:236> <var:N> $ , $ <var:E> <nat:302> $ , and $ <nat:256> <var:p> $ are guaranteed to be even elements of $ \mathbb{Z}^+ $ . This claim is true from the fact the multiplication between an even number in $ \mathbb{Z}^+ $ with a element of $ \mathbb{N} $ must be an even whole number in addition to the coefficients $ <nat:176> $ , $ <nat:236> $ , $ <nat:302> $ , additionally $ <nat:256> $ are known to be even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:p> <var:E> <var:N> <var:d> : nat , Nat . odd ( <nat:176> * <var:d> + <nat:256> * <var:p> + <nat:236> * <var:N> + <nat:302> * <var:E> + <nat:317> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:176> = true ) . { auto . } assert ( <genH> : Nat . even <nat:236> = true ) . { auto . } assert ( <genH> : Nat . even <nat:302> = true ) . { auto . } assert ( <genH> : Nat . even <nat:256> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:176> * <var:d> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:236> * <var:N> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:302> * <var:E> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:256> * <var:p> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:176> * <var:d> + <nat:256> * <var:p> + <nat:236> * <var:N> + <nat:302> * <var:E> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . auto . Qed . 