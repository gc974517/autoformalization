\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \newtheorem{definition}{Definition} \begin{document} \begin{definition} Define that $ <var:A> $ is a <def:seven-composite> whole number when there exist some numbers $ <var:N> $ , $ <var:T> $ , $ <var:e> $ , $ <var:Z> $ , $ <var:K> $ , $ <var:J> $ , $ <var:h> $ so that $ <var:N> $ , $ <var:h> $ , $ <var:e> $ , $ <var:T> $ , $ <var:Z> $ , $ <var:J> $ and $ <var:K> \geq <nat:2> $ as well as assuming some $ <var:A> $ , $ <var:e> * <var:Z> * <var:h> * <var:N> * <var:T> * <var:K> * <var:J> = <var:A> $ . \end{definition} \begin{theorem} $ <var:A> = <nat:600600> $ is a <def:seven-composite> integer . \end{theorem} \begin{proof} Notice that $ <nat:600600> = <var:N> * <var:K> * <var:Z> * <var:h> * <var:e> * <var:T> * <var:J> = <nat:13> * <nat:7> * <nat:6> * <nat:11> * <nat:10> * <nat:2> * <nat:5> $ . Furthermore note that $ <nat:5> $ , $ <nat:10> $ , $ <nat:6> $ , $ <nat:7> $ , $ <nat:11> $ , $ <nat:2> $ , $ <nat:13> \geq <nat:2> $ . This yields <nat:600600> is a <def:seven-composite> natural number . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:seven-composite> ( <var:A> : nat ) := exists <var:N> <var:T> <var:e> <var:Z> <var:K> <var:J> <var:h> : nat , ( <var:N> >= <nat:2> ) /\ ( <var:h> >= <nat:2> ) /\ ( <var:e> >= <nat:2> ) /\ ( <var:T> >= <nat:2> ) /\ ( <var:Z> >= <nat:2> ) /\ ( <var:J> >= <nat:2> ) /\ ( <var:K> >= <nat:2> ) /\ ( <var:e> * <var:Z> * <var:h> * <var:N> * <var:T> * <var:K> * <var:J> = <var:A> ) . Theorem <genP:1> : <def:seven-composite> <nat:600600> . Proof . unfold <def:seven-composite> . exists <nat:13> . exists <nat:2> . exists <nat:10> . exists <nat:6> . exists <nat:7> . exists <nat:5> . exists <nat:11> . assert ( <genH> : <nat:5> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:10> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:6> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:7> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:11> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:2> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:13> >= <nat:2> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 