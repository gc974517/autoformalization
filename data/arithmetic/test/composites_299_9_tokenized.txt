\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:x> \times <var:a> \times <var:j> \times <var:E> \times <var:B> \times <var:q> \times <var:u> \times <var:t> \times <var:o> $ is the same as $ <nat:26956800> $ with $ <var:o> $ , $ <var:t> $ , $ <var:E> $ , $ <var:u> $ , $ <var:j> $ , $ <var:B> $ , $ <var:q> $ , $ <var:a> $ and $ <var:x> $ so that $ <var:E> $ , $ <var:j> $ , $ <var:u> $ , $ <var:x> $ , $ <var:t> $ , $ <var:a> $ , $ <var:o> $ , $ <var:B> $ and $ <var:q> \geq <nat:2> $ . \end{theorem} \begin{proof} Note $ <var:t> * <var:u> * <var:E> * <var:a> * <var:o> * <var:j> * <var:B> * <var:x> * <var:q> = <nat:26956800> $ produces $ <var:o> = <nat:13> $ , $ <var:u> = <nat:4> $ , $ <var:B> = <nat:2> $ , $ <var:E> = <nat:5> $ , $ <var:q> = <nat:9> $ , $ <var:x> = <nat:8> $ , $ <var:t> = <nat:10> $ , $ <var:j> = <nat:6> $ and $ <var:a> = <nat:12> $ . Also observe that $ <nat:6> $ , $ <nat:12> $ , $ <nat:8> $ , $ <nat:5> $ , $ <nat:2> $ , $ <nat:10> $ , $ <nat:9> $ , $ <nat:13> $ , $ <nat:4> \geq <nat:2> $ . This produces our thesis holds . \end{proof} \end{document} 
~
Require Import Lia . Theorem <genP:1> : exists <var:o> <var:t> <var:E> <var:u> <var:j> <var:B> <var:q> <var:a> <var:x> : nat , ( <var:x> * <var:a> * <var:j> * <var:E> * <var:B> * <var:q> * <var:u> * <var:t> * <var:o> = <nat:26956800> ) /\ ( <var:E> >= <nat:2> ) /\ ( <var:j> >= <nat:2> ) /\ ( <var:u> >= <nat:2> ) /\ ( <var:x> >= <nat:2> ) /\ ( <var:t> >= <nat:2> ) /\ ( <var:a> >= <nat:2> ) /\ ( <var:o> >= <nat:2> ) /\ ( <var:B> >= <nat:2> ) /\ ( <var:q> >= <nat:2> ) . Proof . exists <nat:13> . exists <nat:10> . exists <nat:5> . exists <nat:4> . exists <nat:6> . exists <nat:2> . exists <nat:9> . exists <nat:12> . exists <nat:8> . assert ( <genH> : <nat:6> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:12> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:8> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:5> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:2> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:10> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:9> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:13> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:4> >= <nat:2> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 