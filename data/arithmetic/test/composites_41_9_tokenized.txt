\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} The number <nat:11793600> is the multiplication of positive integers $ <var:y> $ , $ <var:B> $ , $ <var:i> $ , $ <var:M> $ , $ <var:e> $ , $ <var:w> $ , $ <var:E> $ , $ <var:g> $ , $ <var:a> \in \mathbb{Z}^+ $ where $ <var:i> $ , $ <var:g> $ , $ <var:e> $ , $ <var:B> $ , $ <var:a> $ , $ <var:y> $ , $ <var:w> $ , $ <var:E> $ , and $ <var:M> $ larger than <nat:1> . \end{theorem} \begin{proof} Observe that $ <nat:11793600> = <var:B> \times <var:y> \times <var:a> \times <var:E> \times <var:g> \times <var:e> \times <var:M> \times <var:i> \times <var:w> $ yields $ <var:w> = <nat:5> $ , $ <var:a> = <nat:3> $ , $ <var:y> = <nat:8> $ , $ <var:e> = <nat:10> $ , $ <var:g> = <nat:2> $ , $ <var:i> = <nat:7> $ , $ <var:M> = <nat:9> $ , $ <var:B> = <nat:6> $ and $ <var:E> = <nat:13> $ . Further observe that $ <nat:9> $ , $ <nat:13> $ , $ <nat:5> $ , $ <nat:10> $ , $ <nat:8> $ , $ <nat:2> $ , $ <nat:7> $ , $ <nat:3> $ , and $ <nat:6> > <nat:1> $ . This yields the theory is valid . \end{proof} \end{document} 
~
Require Import Lia . Theorem <genP:1> : exists <var:y> <var:B> <var:i> <var:M> <var:e> <var:w> <var:E> <var:g> <var:a> : nat , ( <nat:11793600> = <var:y> * <var:B> * <var:i> * <var:M> * <var:e> * <var:w> * <var:E> * <var:g> * <var:a> ) /\ ( <var:i> > <nat:1> ) /\ ( <var:g> > <nat:1> ) /\ ( <var:e> > <nat:1> ) /\ ( <var:B> > <nat:1> ) /\ ( <var:a> > <nat:1> ) /\ ( <var:y> > <nat:1> ) /\ ( <var:w> > <nat:1> ) /\ ( <var:E> > <nat:1> ) /\ ( <var:M> > <nat:1> ) . Proof . exists <nat:8> . exists <nat:6> . exists <nat:7> . exists <nat:9> . exists <nat:10> . exists <nat:5> . exists <nat:13> . exists <nat:2> . exists <nat:3> . assert ( <genH> : <nat:9> > <nat:1> ) . { lia . } assert ( <genH> : <nat:13> > <nat:1> ) . { lia . } assert ( <genH> : <nat:5> > <nat:1> ) . { lia . } assert ( <genH> : <nat:10> > <nat:1> ) . { lia . } assert ( <genH> : <nat:8> > <nat:1> ) . { lia . } assert ( <genH> : <nat:2> > <nat:1> ) . { lia . } assert ( <genH> : <nat:7> > <nat:1> ) . { lia . } assert ( <genH> : <nat:3> > <nat:1> ) . { lia . } assert ( <genH> : <nat:6> > <nat:1> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 