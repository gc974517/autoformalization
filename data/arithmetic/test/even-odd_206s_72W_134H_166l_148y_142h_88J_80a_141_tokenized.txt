\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:y> \times <nat:148> + <var:s> \times <nat:206> + <nat:141> + <var:W> \times <nat:72> + <nat:142> \times <var:h> + <nat:88> \times <var:J> + <nat:166> \times <var:l> + <var:H> \times <nat:134> + <var:a> \times <nat:80> $ must be odd with $ <var:s> $ , $ <var:y> $ , $ <var:W> $ , $ <var:l> $ , $ <var:a> $ , $ <var:H> $ , $ <var:J> $ , and $ <var:h> $ . \end{theorem} \begin{proof} We demonstrate $ <nat:206> * <var:s> + <nat:72> * <var:W> + <var:H> * <nat:134> + <nat:141> + <var:l> * <nat:166> + <var:y> * <nat:148> + <var:h> * <nat:142> + <var:J> * <nat:88> + <nat:80> * <var:a> $ will be odd . The pairs $ <nat:80> <var:a> $ , $ <var:s> <nat:206> $ , $ <nat:72> <var:W> $ , $ <nat:88> <var:J> $ , $ <var:l> <nat:166> $ , $ <var:h> <nat:142> $ , and moreover $ <nat:134> <var:H> $ must be even numbers in $ \mathbb{Z}^+ $ . This must be true from the fact the product between an even integer with any number in $ \mathbb{N} $ is guaranteed to be by definition an even number in $ \mathbb{Z}^+ $ . The pair $ <var:y> <nat:148> $ is known to be even from the knowledge the multiplication of an even number in $ \mathbb{Z}^+ $ and an arbitrary whole number is even . Notice the summation of even whole numbers successively and an odd natural is guaranteed to be an odd integer . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:s> <var:y> <var:W> <var:l> <var:a> <var:H> <var:J> <var:h> : nat , Nat . odd ( <nat:148> * <var:y> + <nat:206> * <var:s> + <nat:72> * <var:W> + <nat:142> * <var:h> + <nat:88> * <var:J> + <nat:166> * <var:l> + <nat:134> * <var:H> + <nat:80> * <var:a> + <nat:141> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:80> * <var:a> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:206> * <var:s> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:72> * <var:W> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:88> * <var:J> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:166> * <var:l> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:142> * <var:h> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:134> * <var:H> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:148> * <var:y> ) = true ) . { rewrite Nat . even_mul . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 