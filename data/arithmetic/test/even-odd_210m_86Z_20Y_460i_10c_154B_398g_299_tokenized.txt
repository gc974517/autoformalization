\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:210> <var:m> + <nat:20> <var:Y> + <nat:10> <var:c> + <nat:299> + <var:i> <nat:460> + <nat:154> <var:B> + <nat:86> <var:Z> + <nat:398> <var:g> $ must be odd assuming any $ <var:g> $ , $ <var:Y> $ , $ <var:i> $ , $ <var:B> $ , $ <var:m> $ , $ <var:c> $ , and $ <var:Z> \in \mathbb{Z}^+ $ . \end{theorem} \begin{proof} We justify the expression $ <var:i> \times <nat:460> + <var:c> \times <nat:10> + <var:Y> \times <nat:20> + <var:B> \times <nat:154> + <nat:299> + <var:g> \times <nat:398> + <var:Z> \times <nat:86> + <var:m> \times <nat:210> $ must be odd . See that the expression $ <var:m> <nat:210> + <nat:86> <var:Z> + <var:Y> <nat:20> + <var:i> <nat:460> + <var:c> <nat:10> + <var:B> <nat:154> + <nat:398> <var:g> $ is even . See that the adding of even numbers collectively and an even positive integer is even . The products $ <nat:210> * <var:m> $ , $ <var:B> * <nat:154> $ , plus $ <nat:10> * <var:c> $ are known to be even . The products $ <nat:20> * <var:Y> $ , $ <nat:86> * <var:Z> $ , plus $ <var:i> * <nat:460> $ are known to be even . This fact is proven since taking the product of an even positive integer and an arbitrary whole number is in itself an even number in $ \mathbb{N} $ . The pair $ <var:g> * <nat:398> $ is clearly even . and moreover from the fact taking the product of even positive integers and some element of $ \mathbb{N} $ is guaranteed to be an even positive integer . Notice the totaling between an even number in $ \mathbb{Z}^+ $ with an odd whole number must be an odd number in $ \mathbb{N} $ . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:g> <var:Y> <var:i> <var:B> <var:m> <var:c> <var:Z> : nat , Nat . odd ( <nat:210> * <var:m> + <nat:20> * <var:Y> + <nat:10> * <var:c> + <nat:460> * <var:i> + <nat:154> * <var:B> + <nat:86> * <var:Z> + <nat:398> * <var:g> + <nat:299> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:210> * <var:m> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:154> * <var:B> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:10> * <var:c> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:20> * <var:Y> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:86> * <var:Z> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:460> * <var:i> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:398> * <var:g> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:210> * <var:m> + <nat:20> * <var:Y> + <nat:10> * <var:c> + <nat:460> * <var:i> + <nat:154> * <var:B> + <nat:86> * <var:Z> + <nat:398> * <var:g> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . auto . Qed . 