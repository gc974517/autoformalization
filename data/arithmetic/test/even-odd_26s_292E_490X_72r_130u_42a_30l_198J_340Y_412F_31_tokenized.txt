\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:412> \times <var:F> + <nat:31> + <var:X> \times <nat:490> + <nat:72> \times <var:r> + <var:l> \times <nat:30> + <nat:42> \times <var:a> + <var:u> \times <nat:130> + <var:Y> \times <nat:340> + <var:J> \times <nat:198> + <var:s> \times <nat:26> + <nat:292> \times <var:E> $ is guaranteed to be odd given any terms $ <var:l> $ , $ <var:u> $ , $ <var:X> $ , $ <var:r> $ , $ <var:Y> $ , $ <var:E> $ , $ <var:s> $ , $ <var:F> $ , $ <var:J> $ , and $ <var:a> $ . \end{theorem} \begin{proof} We apply the knowledge the sum $ <nat:490> \cdot <var:X> + <nat:30> \cdot <var:l> + <var:F> \cdot <nat:412> + <nat:72> \cdot <var:r> + <var:u> \cdot <nat:130> + <var:J> \cdot <nat:198> + <var:a> \cdot <nat:42> + <nat:26> \cdot <var:s> + <nat:340> \cdot <var:Y> + <nat:292> \cdot <var:E> $ is known as even . See that the summing between even natural numbers collectively with an even natural is by definition an even whole number . The terms $ <nat:30> \cdot <var:l> $ , $ <var:s> \cdot <nat:26> $ , $ <var:X> \cdot <nat:490> $ , in addition to $ <var:Y> \cdot <nat:340> $ will be even numbers in $ \mathbb{N} $ because the coefficients $ <nat:30> $ , $ <nat:26> $ , $ <nat:490> $ , and likewise $ <nat:340> $ are clearly even numbers in $ \mathbb{N} $ . Additionally , notice the pairs $ <nat:130> \cdot <var:u> $ , $ <var:E> \cdot <nat:292> $ , $ <nat:412> \cdot <var:F> $ , and likewise $ <nat:198> \cdot <var:J> $ are known to be even since the positive integers $ <nat:130> $ , $ <nat:292> $ , $ <nat:412> $ , additionally $ <nat:198> $ are known as even . In addition , the coefficient $ <nat:72> $ is guaranteed to be an even whole number . As a consequence , $ <nat:72> \cdot <var:r> $ is guaranteed to be even in addition . See the integer $ <nat:42> $ is known to be even . Therefore , the pair $ <nat:42> \cdot <var:a> $ will be even at the same time . additionally since the multiplication of an even element of $ \mathbb{N} $ with an arbitrary integer must be an even natural this main result must be true . It can be justified that our main result is proven . Take note that $ <nat:31> $ is known to be an odd natural number . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:l> <var:u> <var:X> <var:r> <var:Y> <var:E> <var:s> <var:F> <var:J> <var:a> : nat , Nat . odd ( <nat:412> * <var:F> + <nat:490> * <var:X> + <nat:72> * <var:r> + <nat:30> * <var:l> + <nat:42> * <var:a> + <nat:130> * <var:u> + <nat:340> * <var:Y> + <nat:198> * <var:J> + <nat:26> * <var:s> + <nat:292> * <var:E> + <nat:31> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:30> = true ) . { auto . } assert ( <genH> : Nat . even <nat:26> = true ) . { auto . } assert ( <genH> : Nat . even <nat:490> = true ) . { auto . } assert ( <genH> : Nat . even <nat:340> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:30> * <var:l> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:26> * <var:s> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:490> * <var:X> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:340> * <var:Y> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:130> = true ) . { auto . } assert ( <genH> : Nat . even <nat:292> = true ) . { auto . } assert ( <genH> : Nat . even <nat:412> = true ) . { auto . } assert ( <genH> : Nat . even <nat:198> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:130> * <var:u> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:292> * <var:E> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:412> * <var:F> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:198> * <var:J> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:72> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:72> * <var:r> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:42> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:42> * <var:a> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:412> * <var:F> + <nat:490> * <var:X> + <nat:72> * <var:r> + <nat:30> * <var:l> + <nat:42> * <var:a> + <nat:130> * <var:u> + <nat:340> * <var:Y> + <nat:198> * <var:J> + <nat:26> * <var:s> + <nat:292> * <var:E> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } assert ( <genH> : Nat . odd <nat:31> = true ) . { auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . rewrite <genH> . auto . Qed . 