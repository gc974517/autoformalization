\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} With any $ <var:U> $ , $ <var:f> $ , $ <var:e> $ , $ <var:H> $ , $ <var:d> $ , $ <var:n> $ , and $ <var:Y> \in \mathbb{N} $ $ <var:e> * <nat:208> + <var:d> * <nat:150> + <var:n> * <nat:156> + <var:f> * <nat:374> + <var:U> * <nat:84> + <nat:54> * <var:H> + <nat:74> * <var:Y> + <nat:177> $ must be odd . \end{theorem} \begin{proof} It can be checked that the formula $ <var:f> \times <nat:374> + <nat:84> \times <var:U> + <var:n> \times <nat:156> + <var:e> \times <nat:208> + <nat:177> + <var:H> \times <nat:54> + <var:d> \times <nat:150> + <var:Y> \times <nat:74> $ is guaranteed to be odd making use of the adding between even naturals and an odd integer must be odd . Notice $ <nat:177> $ is known as odd . The expression $ <var:e> \cdot <nat:208> + <nat:177> + <var:Y> \cdot <nat:74> + <var:d> \cdot <nat:150> + <nat:84> \cdot <var:U> + <nat:374> \cdot <var:f> + <nat:156> \cdot <var:n> + <var:H> \cdot <nat:54> $ is clearly odd from the knowledge $ <var:n> \cdot <nat:156> + <nat:374> \cdot <var:f> + <nat:84> \cdot <var:U> + <var:Y> \cdot <nat:74> + <nat:150> \cdot <var:d> + <nat:208> \cdot <var:e> + <nat:54> \cdot <var:H> $ is trivially even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:U> <var:f> <var:e> <var:H> <var:d> <var:n> <var:Y> : nat , Nat . odd ( <nat:208> * <var:e> + <nat:150> * <var:d> + <nat:156> * <var:n> + <nat:374> * <var:f> + <nat:84> * <var:U> + <nat:54> * <var:H> + <nat:74> * <var:Y> + <nat:177> ) = true . Proof . intros . rewrite Nat . odd_add . assert ( <genH> : Nat . odd <nat:177> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:208> * <var:e> + <nat:150> * <var:d> + <nat:156> * <var:n> + <nat:374> * <var:f> + <nat:84> * <var:U> + <nat:54> * <var:H> + <nat:74> * <var:Y> ) = true ) . { repeat rewrite Nat . even_add . repeat rewrite Nat . even_mul . auto . } rewrite <- Nat . negb_even . rewrite <genH> . rewrite <genH> . auto . Qed . 