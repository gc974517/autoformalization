\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:386> * <var:B> + <nat:99> + <var:i> * <nat:220> + <var:N> * <nat:494> + <var:Y> * <nat:46> + <nat:146> * <var:q> $ will be odd with whole numbers $ <var:Y> $ , $ <var:q> $ , $ <var:B> $ , $ <var:i> $ , and $ <var:N> $ . \end{theorem} \begin{proof} The addition of even numbers in $ \mathbb{Z}^+ $ collectively with an odd positive integer is by definition an odd number in $ \mathbb{Z}^+ $ . See $ <nat:99> $ is known to be odd . Our main result must be true from the knowledge $ <nat:46> <var:Y> + <nat:386> <var:B> + <nat:220> <var:i> + <var:N> <nat:494> + <nat:146> <var:q> $ is even . In addition , the pairs $ <nat:46> \times <var:Y> $ , $ <nat:386> \times <var:B> $ , $ <var:i> \times <nat:220> $ , $ <nat:494> \times <var:N> $ , and $ <var:q> \times <nat:146> $ must be even . This is proven as a consequence that the coefficients $ <nat:46> $ , $ <nat:386> $ , $ <nat:220> $ , $ <nat:494> $ , plus $ <nat:146> $ are even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:Y> <var:q> <var:B> <var:i> <var:N> : nat , Nat . odd ( <nat:386> * <var:B> + <nat:220> * <var:i> + <nat:494> * <var:N> + <nat:46> * <var:Y> + <nat:146> * <var:q> + <nat:99> ) = true . Proof . intros . rewrite Nat . odd_add . assert ( <genH> : Nat . odd <nat:99> = true ) . { auto . } assert ( <genH> : Nat . even <nat:46> = true ) . { auto . } assert ( <genH> : Nat . even <nat:386> = true ) . { auto . } assert ( <genH> : Nat . even <nat:220> = true ) . { auto . } assert ( <genH> : Nat . even <nat:494> = true ) . { auto . } assert ( <genH> : Nat . even <nat:146> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:46> * <var:Y> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:386> * <var:B> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:220> * <var:i> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:494> * <var:N> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:146> * <var:q> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:386> * <var:B> + <nat:220> * <var:i> + <nat:494> * <var:N> + <nat:46> * <var:Y> + <nat:146> * <var:q> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite <- Nat . negb_even . rewrite <genH> . rewrite <genH> . auto . Qed . 