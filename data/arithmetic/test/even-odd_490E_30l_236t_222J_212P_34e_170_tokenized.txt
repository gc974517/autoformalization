\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Given all unknowns $ <var:P> $ , $ <var:J> $ , $ <var:l> $ , $ <var:E> $ , $ <var:t> $ , and $ <var:e> $ the summation $ <var:P> \cdot <nat:212> + <nat:236> \cdot <var:t> + <var:l> \cdot <nat:30> + <nat:34> \cdot <var:e> + <nat:222> \cdot <var:J> + <var:E> \cdot <nat:490> + <nat:170> $ is even . \end{theorem} \begin{proof} It can be justified that $ <nat:236> \cdot <var:t> + <var:E> \cdot <nat:490> + <nat:212> \cdot <var:P> + <nat:170> + <var:l> \cdot <nat:30> + <nat:34> \cdot <var:e> + <var:J> \cdot <nat:222> $ is known to be even by reason that the sum $ <var:E> \cdot <nat:490> + <var:l> \cdot <nat:30> + <var:t> \cdot <nat:236> + <nat:222> \cdot <var:J> + <var:P> \cdot <nat:212> + <nat:34> \cdot <var:e> $ is obviously even . Take note the numbers $ <nat:490> $ , $ <nat:30> $ , $ <nat:236> $ , $ <nat:222> $ , $ <nat:212> $ , and $ <nat:34> $ are even . As a consequence , the products $ <var:E> <nat:490> $ , $ <nat:30> <var:l> $ , $ <var:t> <nat:236> $ , $ <var:J> <nat:222> $ , $ <var:P> <nat:212> $ , in addition to $ <nat:34> <var:e> $ must be even at the same time . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:P> <var:J> <var:l> <var:E> <var:t> <var:e> : nat , Nat . even ( <nat:212> * <var:P> + <nat:236> * <var:t> + <nat:30> * <var:l> + <nat:34> * <var:e> + <nat:222> * <var:J> + <nat:490> * <var:E> + <nat:170> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:490> = true ) . { auto . } assert ( <genH> : Nat . even <nat:30> = true ) . { auto . } assert ( <genH> : Nat . even <nat:236> = true ) . { auto . } assert ( <genH> : Nat . even <nat:222> = true ) . { auto . } assert ( <genH> : Nat . even <nat:212> = true ) . { auto . } assert ( <genH> : Nat . even <nat:34> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:490> * <var:E> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:30> * <var:l> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:236> * <var:t> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:222> * <var:J> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:212> * <var:P> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:34> * <var:e> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:212> * <var:P> + <nat:236> * <var:t> + <nat:30> * <var:l> + <nat:34> * <var:e> + <nat:222> * <var:J> + <nat:490> * <var:E> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . even_add . rewrite <genH> . auto . Qed . 