\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:S> \cdot <nat:38> + <nat:308> \cdot <var:e> + <var:M> \cdot <nat:48> + <nat:317> + <nat:230> \cdot <var:Q> + <nat:362> \cdot <var:O> + <nat:480> \cdot <var:B> $ is odd . \end{theorem} \begin{proof} Take note the totaling of even integers together with an odd positive integer must be an odd element of $ \mathbb{N} $ . It can be checked that that the summation $ <var:O> \times <nat:362> + <var:B> \times <nat:480> + <var:M> \times <nat:48> + <var:e> \times <nat:308> + <nat:317> + <var:Q> \times <nat:230> + <nat:38> \times <var:S> $ is known to be odd from the knowledge $ <nat:308> \cdot <var:e> + <var:B> \cdot <nat:480> + <nat:362> \cdot <var:O> + <nat:230> \cdot <var:Q> + <nat:38> \cdot <var:S> + <nat:48> \cdot <var:M> $ is even . Take note that the products $ <var:O> * <nat:362> $ , $ <var:B> * <nat:480> $ , $ <var:Q> * <nat:230> $ , $ <var:e> * <nat:308> $ , and likewise $ <var:S> * <nat:38> $ are known as even . The pair $ <var:M> * <nat:48> $ is obviously even . This fact holds from the knowledge the product of an even whole number with an arbitrary positive integer must be even . It can be checked that the formula $ <nat:48> \times <var:M> + <nat:38> \times <var:S> + <var:e> \times <nat:308> + <nat:317> + <var:B> \times <nat:480> + <var:O> \times <nat:362> + <nat:230> \times <var:Q> $ must be odd . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:S> <var:e> <var:M> <var:Q> <var:O> <var:B> : nat , Nat . odd ( <nat:38> * <var:S> + <nat:308> * <var:e> + <nat:48> * <var:M> + <nat:230> * <var:Q> + <nat:362> * <var:O> + <nat:480> * <var:B> + <nat:317> ) = true . Proof . intros . rewrite Nat . odd_add . assert ( <genH> : Nat . even ( <nat:362> * <var:O> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:480> * <var:B> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:230> * <var:Q> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:308> * <var:e> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:38> * <var:S> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:48> * <var:M> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:38> * <var:S> + <nat:308> * <var:e> + <nat:48> * <var:M> + <nat:230> * <var:Q> + <nat:362> * <var:O> + <nat:480> * <var:B> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite <- Nat . negb_even . rewrite <genH> . auto . Qed . 