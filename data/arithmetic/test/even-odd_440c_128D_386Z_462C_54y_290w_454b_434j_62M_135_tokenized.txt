\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:Z> \cdot <nat:386> + <nat:462> \cdot <var:C> + <var:c> \cdot <nat:440> + <nat:290> \cdot <var:w> + <var:D> \cdot <nat:128> + <nat:54> \cdot <var:y> + <nat:434> \cdot <var:j> + <nat:62> \cdot <var:M> + <nat:454> \cdot <var:b> + <nat:135> $ must be odd taking any positive numbers $ <var:y> $ , $ <var:c> $ , $ <var:b> $ , $ <var:M> $ , $ <var:C> $ , $ <var:D> $ , $ <var:w> $ , $ <var:j> $ , and $ <var:Z> $ . \end{theorem} \begin{proof} We use the fact that $ <nat:290> * <var:w> + <var:D> * <nat:128> + <nat:135> + <nat:434> * <var:j> + <var:b> * <nat:454> + <var:y> * <nat:54> + <var:C> * <nat:462> + <nat:440> * <var:c> + <var:Z> * <nat:386> + <nat:62> * <var:M> $ is odd by reason that the formula $ <nat:440> * <var:c> + <var:D> * <nat:128> + <nat:386> * <var:Z> + <nat:462> * <var:C> + <nat:54> * <var:y> + <nat:290> * <var:w> + <var:b> * <nat:454> + <nat:434> * <var:j> + <nat:62> * <var:M> $ is obviously even . Observe that the pairs $ <nat:440> \cdot <var:c> $ , $ <nat:128> \cdot <var:D> $ , $ <nat:386> \cdot <var:Z> $ , $ <nat:462> \cdot <var:C> $ , $ <nat:54> \cdot <var:y> $ , $ <nat:290> \cdot <var:w> $ , $ <nat:454> \cdot <var:b> $ , $ <var:j> \cdot <nat:434> $ , and likewise $ <nat:62> \cdot <var:M> $ are known as even . This claim holds from the knowledge the integers $ <nat:440> $ , $ <nat:128> $ , $ <nat:386> $ , $ <nat:462> $ , $ <nat:54> $ , $ <nat:290> $ , $ <nat:454> $ , $ <nat:434> $ , and also $ <nat:62> $ are guaranteed to be obviously even naturals . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:y> <var:c> <var:b> <var:M> <var:C> <var:D> <var:w> <var:j> <var:Z> : nat , Nat . odd ( <nat:386> * <var:Z> + <nat:462> * <var:C> + <nat:440> * <var:c> + <nat:290> * <var:w> + <nat:128> * <var:D> + <nat:54> * <var:y> + <nat:434> * <var:j> + <nat:62> * <var:M> + <nat:454> * <var:b> + <nat:135> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:440> = true ) . { auto . } assert ( <genH> : Nat . even <nat:128> = true ) . { auto . } assert ( <genH> : Nat . even <nat:386> = true ) . { auto . } assert ( <genH> : Nat . even <nat:462> = true ) . { auto . } assert ( <genH> : Nat . even <nat:54> = true ) . { auto . } assert ( <genH> : Nat . even <nat:290> = true ) . { auto . } assert ( <genH> : Nat . even <nat:454> = true ) . { auto . } assert ( <genH> : Nat . even <nat:434> = true ) . { auto . } assert ( <genH> : Nat . even <nat:62> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:440> * <var:c> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:128> * <var:D> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:386> * <var:Z> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:462> * <var:C> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:54> * <var:y> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:290> * <var:w> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:454> * <var:b> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:434> * <var:j> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:62> * <var:M> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:386> * <var:Z> + <nat:462> * <var:C> + <nat:440> * <var:c> + <nat:290> * <var:w> + <nat:128> * <var:D> + <nat:54> * <var:y> + <nat:434> * <var:j> + <nat:62> * <var:M> + <nat:454> * <var:b> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . auto . Qed . 