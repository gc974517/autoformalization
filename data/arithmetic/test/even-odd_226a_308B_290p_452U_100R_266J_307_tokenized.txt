\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Assuming all positive numbers $ <var:U> $ , $ <var:R> $ , $ <var:a> $ , $ <var:B> $ , $ <var:J> $ , and $ <var:p> $ the sum $ <var:p> \cdot <nat:290> + <var:B> \cdot <nat:308> + <var:R> \cdot <nat:100> + <nat:226> \cdot <var:a> + <nat:452> \cdot <var:U> + <nat:307> + <nat:266> \cdot <var:J> $ is odd . \end{theorem} \begin{proof} We verify the formula $ <var:B> * <nat:308> + <nat:452> * <var:U> + <var:R> * <nat:100> + <var:J> * <nat:266> + <var:p> * <nat:290> + <nat:307> + <nat:226> * <var:a> $ is obviously odd as a consequence that the summation $ <var:a> \cdot <nat:226> + <var:B> \cdot <nat:308> + <var:p> \cdot <nat:290> + <nat:452> \cdot <var:U> + <nat:100> \cdot <var:R> + <var:J> \cdot <nat:266> $ is known as even . We know that the term $ <var:B> \cdot <nat:308> $ is obviously an even element of $ \mathbb{N} $ . The products $ <var:U> \cdot <nat:452> $ , $ <var:R> \cdot <nat:100> $ , $ <nat:290> \cdot <var:p> $ , and likewise $ <var:a> \cdot <nat:226> $ are obviously even . We know that the term $ <nat:266> \cdot <var:J> $ is known to be even . As a consequence that the totaling between an even natural number and an even number in $ \mathbb{Z}^+ $ must be an even integer , additionally by reason that multiplying between even naturals with some number is an even whole number . The adding between an even positive integer and an odd integer will be odd . Notice $ <nat:307> $ is guaranteed to be odd . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:U> <var:R> <var:a> <var:B> <var:J> <var:p> : nat , Nat . odd ( <nat:290> * <var:p> + <nat:308> * <var:B> + <nat:100> * <var:R> + <nat:226> * <var:a> + <nat:452> * <var:U> + <nat:266> * <var:J> + <nat:307> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:308> * <var:B> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:452> * <var:U> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:100> * <var:R> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:290> * <var:p> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:226> * <var:a> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:266> * <var:J> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:290> * <var:p> + <nat:308> * <var:B> + <nat:100> * <var:R> + <nat:226> * <var:a> + <nat:452> * <var:U> + <nat:266> * <var:J> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . assert ( <genH> : Nat . odd <nat:307> = true ) . { auto . } rewrite <- Nat . negb_even . rewrite <genH> . rewrite <genH> . auto . Qed . 