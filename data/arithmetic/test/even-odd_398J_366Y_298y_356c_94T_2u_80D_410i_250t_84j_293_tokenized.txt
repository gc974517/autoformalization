\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:398> \times <var:J> + <var:Y> \times <nat:366> + <nat:298> \times <var:y> + <nat:356> \times <var:c> + <var:T> \times <nat:94> + <nat:2> \times <var:u> + <nat:80> \times <var:D> + <nat:410> \times <var:i> + <var:t> \times <nat:250> + <nat:84> \times <var:j> + <nat:293> $ will be odd with positive integers $ <var:c> $ , $ <var:i> $ , $ <var:j> $ , $ <var:J> $ , $ <var:t> $ , $ <var:Y> $ , $ <var:y> $ , $ <var:T> $ , $ <var:u> $ , and $ <var:D> $ . \end{theorem} \begin{proof} The multiplication of even integers is by its very nature an even element of $ \mathbb{N} $ . The whole numbers $ <nat:410> $ additionally $ <nat:94> $ are known as even Adding on , the integer $ <nat:356> $ is an even natural number Likewise , the leading terms $ <nat:84> $ , $ <nat:398> $ , $ <nat:80> $ , and $ <nat:2> $ are trivially even Observe that the natural numbers $ <nat:366> $ and $ <nat:298> $ are clearly even Observe the integer $ <nat:250> $ is obviously an even natural Take note that the addition between an even natural number with an odd whole number is an odd number in $ \mathbb{N} $ . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:c> <var:i> <var:j> <var:J> <var:t> <var:Y> <var:y> <var:T> <var:u> <var:D> : nat , Nat . odd ( <nat:398> * <var:J> + <nat:366> * <var:Y> + <nat:298> * <var:y> + <nat:356> * <var:c> + <nat:94> * <var:T> + <nat:2> * <var:u> + <nat:80> * <var:D> + <nat:410> * <var:i> + <nat:250> * <var:t> + <nat:84> * <var:j> + <nat:293> ) = true . Proof . intros . rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . repeat rewrite Nat . even_mul . assert ( <genH> : Nat . even <nat:410> = true ) . { auto . } assert ( <genH> : Nat . even <nat:94> = true ) . { auto . } assert ( <genH> : Nat . even <nat:356> = true ) . { auto . } assert ( <genH> : Nat . even <nat:84> = true ) . { auto . } assert ( <genH> : Nat . even <nat:398> = true ) . { auto . } assert ( <genH> : Nat . even <nat:80> = true ) . { auto . } assert ( <genH> : Nat . even <nat:2> = true ) . { auto . } assert ( <genH> : Nat . even <nat:366> = true ) . { auto . } assert ( <genH> : Nat . even <nat:298> = true ) . { auto . } assert ( <genH> : Nat . even <nat:250> = true ) . { auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 