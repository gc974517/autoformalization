\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} We denote that $ <var:p> $ is a <def:six-composite> number under the condition that there are some whole numbers $ <var:L> $ , $ <var:s> $ , $ <var:K> $ , $ <var:N> $ , $ <var:T> $ , $ <var:E> $ so that $ <var:p> = <var:T> \cdot <var:L> \cdot <var:N> \cdot <var:K> \cdot <var:E> \cdot <var:s> $ with some positive integer $ <var:p> $ as well as satisfying the condition that $ <var:T> $ , $ <var:E> $ , $ <var:N> $ , $ <var:L> $ , $ <var:K> $ , and $ <var:s> \geq <nat:2> $ . Thus $ <var:p> = <nat:45360> $ is <def:six-composite> . \end{theorem} \begin{proof} Recollect that a <def:six-composite> integer is the multiplication of positive integers $ <var:L> $ , $ <var:T> $ , $ <var:s> $ , $ <var:K> $ , $ <var:N> $ and $ <var:E> $ larger than <nat:1> . Let $ <var:L> = <nat:2> $ , $ <var:T> = <nat:6> $ , $ <var:s> = <nat:9> $ , $ <var:E> = <nat:12> $ , $ <var:K> = <nat:5> $ , and $ <var:N> = <nat:7> $ . We demonstrate the proposition is valid in consideration of $ <var:s> \cdot <var:N> \cdot <var:K> \cdot <var:L> \cdot <var:T> \cdot <var:E> = <nat:45360> $ and in consideration of $ <nat:6> $ , $ <nat:9> $ , $ <nat:12> $ , $ <nat:7> $ , $ <nat:2> $ , and $ <nat:5> > <nat:1> $ . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:six-composite> ( <var:p> : nat ) := exists <var:L> <var:s> <var:K> <var:N> <var:T> <var:E> : nat , ( <var:p> = <var:T> * <var:L> * <var:N> * <var:K> * <var:E> * <var:s> ) /\ ( <var:T> >= <nat:2> ) /\ ( <var:E> >= <nat:2> ) /\ ( <var:N> >= <nat:2> ) /\ ( <var:L> >= <nat:2> ) /\ ( <var:K> >= <nat:2> ) /\ ( <var:s> >= <nat:2> ) . Theorem <genP:1> : <def:six-composite> <nat:45360> . Proof . unfold <def:six-composite> . exists <nat:2> . exists <nat:9> . exists <nat:5> . exists <nat:7> . exists <nat:6> . exists <nat:12> . assert ( <genH> : <nat:6> > <nat:1> ) . { lia . } assert ( <genH> : <nat:9> > <nat:1> ) . { lia . } assert ( <genH> : <nat:12> > <nat:1> ) . { lia . } assert ( <genH> : <nat:7> > <nat:1> ) . { lia . } assert ( <genH> : <nat:2> > <nat:1> ) . { lia . } assert ( <genH> : <nat:5> > <nat:1> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 