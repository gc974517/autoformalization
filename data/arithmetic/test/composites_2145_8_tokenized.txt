\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \newtheorem{definition}{Definition} \begin{document} \begin{definition} We denote that $ <var:F> $ is <def:eight-composite> whenever $ \exists <var:A> $ , $ <var:Z> $ , $ <var:I> $ , $ <var:L> $ , $ <var:v> $ , $ <var:H> $ , $ <var:a> $ , $ <var:U> \in \mathbb{Z}^+ $ so that $ <var:Z> $ , $ <var:U> $ , $ <var:H> $ , $ <var:L> $ , $ <var:v> $ , $ <var:a> $ , $ <var:A> $ and $ <var:I> \geq <nat:2> $ plus given some number $ <var:F> $ , $ <var:F> = <var:L> \times <var:I> \times <var:U> \times <var:H> \times <var:a> \times <var:A> \times <var:v> \times <var:Z> $ . \end{definition} \begin{theorem} <nat:4942080> is a <def:eight-composite> natural number . \end{theorem} \begin{proof} We verify the statement holds in view of $ <nat:4942080> = <nat:13> * <nat:8> * <nat:5> * <nat:6> * <nat:4> * <nat:3> * <nat:12> * <nat:11> = <var:I> * <var:U> * <var:Z> * <var:A> * <var:H> * <var:v> * <var:L> * <var:a> $ plus for $ <nat:3> $ , $ <nat:11> $ , $ <nat:5> $ , $ <nat:4> $ , $ <nat:8> $ , $ <nat:12> $ , $ <nat:6> $ and $ <nat:13> $ are greater than or equivalent to <nat:2> . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:eight-composite> ( <var:F> : nat ) := exists <var:A> <var:Z> <var:I> <var:L> <var:v> <var:H> <var:a> <var:U> : nat , ( <var:Z> >= <nat:2> ) /\ ( <var:U> >= <nat:2> ) /\ ( <var:H> >= <nat:2> ) /\ ( <var:L> >= <nat:2> ) /\ ( <var:v> >= <nat:2> ) /\ ( <var:a> >= <nat:2> ) /\ ( <var:A> >= <nat:2> ) /\ ( <var:I> >= <nat:2> ) /\ ( <var:F> = <var:L> * <var:I> * <var:U> * <var:H> * <var:a> * <var:A> * <var:v> * <var:Z> ) . Theorem <genP:1> : <def:eight-composite> <nat:4942080> . Proof . unfold <def:eight-composite> . exists <nat:6> . exists <nat:5> . exists <nat:13> . exists <nat:12> . exists <nat:3> . exists <nat:4> . exists <nat:11> . exists <nat:8> . assert ( <genH> : <nat:3> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:11> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:5> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:4> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:8> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:12> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:6> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:13> >= <nat:2> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 