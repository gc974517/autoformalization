\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:84> \times <var:p> + <var:W> \times <nat:180> + <var:D> \times <nat:258> + <nat:196> \times <var:F> + <var:U> \times <nat:474> + <var:q> \times <nat:476> + <nat:28> \times <var:Y> + <nat:245> + <var:f> \times <nat:362> + <var:h> \times <nat:118> $ will be odd for any natural numbers $ <var:W> $ , $ <var:U> $ , $ <var:h> $ , $ <var:Y> $ , $ <var:F> $ , $ <var:D> $ , $ <var:p> $ , $ <var:f> $ , and $ <var:q> $ . \end{theorem} \begin{proof} We verify the claim is proven . The summation $ <nat:245> + <nat:362> \cdot <var:f> + <nat:258> \cdot <var:D> + <nat:180> \cdot <var:W> + <var:U> \cdot <nat:474> + <var:h> \cdot <nat:118> + <nat:196> \cdot <var:F> + <var:Y> \cdot <nat:28> + <var:p> \cdot <nat:84> + <nat:476> \cdot <var:q> $ is known to be odd as a consequence that the formula $ <var:h> \cdot <nat:118> + <var:W> \cdot <nat:180> + <var:p> \cdot <nat:84> + <var:F> \cdot <nat:196> + <nat:476> \cdot <var:q> + <var:D> \cdot <nat:258> + <var:U> \cdot <nat:474> + <var:Y> \cdot <nat:28> + <var:f> \cdot <nat:362> $ is clearly even . The terms $ <nat:118> \cdot <var:h> $ , $ <var:W> \cdot <nat:180> $ , $ <nat:84> \cdot <var:p> $ , $ <var:F> \cdot <nat:196> $ , $ <var:q> \cdot <nat:476> $ , $ <var:D> \cdot <nat:258> $ , $ <var:U> \cdot <nat:474> $ , $ <nat:28> \cdot <var:Y> $ , additionally $ <nat:362> \cdot <var:f> $ are trivially even since the coefficients $ <nat:118> $ , $ <nat:180> $ , $ <nat:84> $ , $ <nat:196> $ , $ <nat:476> $ , $ <nat:258> $ , $ <nat:474> $ , $ <nat:28> $ , plus $ <nat:362> $ are trivially even . From the knowledge the totaling between an even positive integer and even whole numbers will be even , the theorem holds . The summing between an even element of $ \mathbb{N} $ with an odd positive integer will be an odd positive integer . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:W> <var:U> <var:h> <var:Y> <var:F> <var:D> <var:p> <var:f> <var:q> : nat , Nat . odd ( <nat:84> * <var:p> + <nat:180> * <var:W> + <nat:258> * <var:D> + <nat:196> * <var:F> + <nat:474> * <var:U> + <nat:476> * <var:q> + <nat:28> * <var:Y> + <nat:362> * <var:f> + <nat:118> * <var:h> + <nat:245> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:118> = true ) . { auto . } assert ( <genH> : Nat . even <nat:180> = true ) . { auto . } assert ( <genH> : Nat . even <nat:84> = true ) . { auto . } assert ( <genH> : Nat . even <nat:196> = true ) . { auto . } assert ( <genH> : Nat . even <nat:476> = true ) . { auto . } assert ( <genH> : Nat . even <nat:258> = true ) . { auto . } assert ( <genH> : Nat . even <nat:474> = true ) . { auto . } assert ( <genH> : Nat . even <nat:28> = true ) . { auto . } assert ( <genH> : Nat . even <nat:362> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:118> * <var:h> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:180> * <var:W> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:84> * <var:p> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:196> * <var:F> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:476> * <var:q> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:258> * <var:D> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:474> * <var:U> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:28> * <var:Y> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:362> * <var:f> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:84> * <var:p> + <nat:180> * <var:W> + <nat:258> * <var:D> + <nat:196> * <var:F> + <nat:474> * <var:U> + <nat:476> * <var:q> + <nat:28> * <var:Y> + <nat:362> * <var:f> + <nat:118> * <var:h> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . auto . Qed . 