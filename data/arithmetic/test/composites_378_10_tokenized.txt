\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \newtheorem{definition}{Definition} \begin{document} \begin{definition} Let $ <var:z> $ , $ <var:x> $ , $ <var:t> $ , $ <var:X> $ , $ <var:N> $ , $ <var:u> $ , $ <var:E> $ , $ <var:Y> $ , $ <var:B> $ , $ <var:H> $ be numbers . Let that $ <var:G> \in \mathbb{N} $ is defined as a <def:ten-composite> whole number if $ <var:G> = <var:N> \cdot <var:E> \cdot <var:X> \cdot <var:H> \cdot <var:Y> \cdot <var:u> \cdot <var:B> \cdot <var:t> \cdot <var:z> \cdot <var:x> $ and more than or equal to <nat:2> . \end{definition} \begin{theorem} $ <nat:345945600> = <var:G> $ is a <def:ten-composite> whole number . \end{theorem} \begin{proof} Remember <nat:345945600> is <def:ten-composite> granted that it is the product of numbers $ <var:X> $ , $ <var:u> $ , $ <var:x> $ , $ <var:E> $ , $ <var:H> $ , $ <var:B> $ , $ <var:N> $ , $ <var:Y> $ , $ <var:t> $ , $ <var:z> $ more than or equal to <nat:2> . Allow $ <var:u> = <nat:4> $ , $ <var:H> = <nat:9> $ , $ <var:E> = <nat:13> $ , $ <var:t> = <nat:12> $ , $ <var:x> = <nat:2> $ , $ <var:B> = <nat:5> $ , $ <var:N> = <nat:7> $ , $ <var:X> = <nat:8> $ , $ <var:z> = <nat:10> $ and $ <var:Y> = <nat:11> $ . We prove <nat:345945600> is a <def:ten-composite> integer . Note $ <var:x> = <nat:2> $ , $ <var:Y> = <nat:11> $ , $ <var:H> = <nat:9> $ , $ <var:E> = <nat:13> $ , $ <var:N> = <nat:7> $ , $ <var:X> = <nat:8> $ , $ <var:u> = <nat:4> $ , $ <var:B> = <nat:5> $ , $ <var:z> = <nat:10> $ , and $ <var:t> = <nat:12> \geq <nat:2> $ . This yields <nat:345945600> is a <def:ten-composite> whole number . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:ten-composite> ( <var:G> : nat ) := exists <var:z> <var:x> <var:t> <var:X> <var:N> <var:u> <var:E> <var:Y> <var:B> <var:H> : nat , ( <var:G> = <var:N> * <var:E> * <var:X> * <var:H> * <var:Y> * <var:u> * <var:B> * <var:t> * <var:z> * <var:x> ) /\ ( <var:z> >= <nat:2> ) /\ ( <var:x> >= <nat:2> ) /\ ( <var:t> >= <nat:2> ) /\ ( <var:X> >= <nat:2> ) /\ ( <var:N> >= <nat:2> ) /\ ( <var:u> >= <nat:2> ) /\ ( <var:E> >= <nat:2> ) /\ ( <var:Y> >= <nat:2> ) /\ ( <var:B> >= <nat:2> ) /\ ( <var:H> >= <nat:2> ) . Theorem <genP:1> : <def:ten-composite> <nat:345945600> . Proof . unfold <def:ten-composite> . exists <nat:10> . exists <nat:2> . exists <nat:12> . exists <nat:8> . exists <nat:7> . exists <nat:4> . exists <nat:13> . exists <nat:11> . exists <nat:5> . exists <nat:9> . assert ( <genH> : <nat:2> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:11> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:9> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:13> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:7> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:8> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:4> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:5> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:10> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:12> >= <nat:2> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 