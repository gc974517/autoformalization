\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:446> \cdot <var:I> + <nat:28> + <nat:98> \cdot <var:h> + <var:r> \cdot <nat:192> + <nat:16> \cdot <var:T> + <nat:50> \cdot <var:j> + <var:M> \cdot <nat:482> + <nat:466> \cdot <var:i> $ is even . \end{theorem} \begin{proof} We prove the lemma must be true . Observe that $ <nat:28> $ is known to be an even natural . On top of this , we know that the leading terms $ <nat:446> $ , $ <nat:98> $ , $ <nat:192> $ , $ <nat:16> $ , $ <nat:50> $ , $ <nat:482> $ , and moreover $ <nat:466> $ are guaranteed to be even elements of $ \mathbb{Z}^+ $ . Thus , the terms $ <nat:446> * <var:I> $ , $ <nat:98> * <var:h> $ , $ <var:r> * <nat:192> $ , $ <nat:16> * <var:T> $ , $ <nat:50> * <var:j> $ , $ <nat:482> * <var:M> $ , and likewise $ <nat:466> * <var:i> $ must be even too . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:I> <var:h> <var:r> <var:T> <var:j> <var:M> <var:i> : nat , Nat . even ( <nat:446> * <var:I> + <nat:98> * <var:h> + <nat:192> * <var:r> + <nat:16> * <var:T> + <nat:50> * <var:j> + <nat:482> * <var:M> + <nat:466> * <var:i> + <nat:28> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:28> = true ) . { auto . } assert ( <genH> : Nat . even <nat:446> = true ) . { auto . } assert ( <genH> : Nat . even <nat:98> = true ) . { auto . } assert ( <genH> : Nat . even <nat:192> = true ) . { auto . } assert ( <genH> : Nat . even <nat:16> = true ) . { auto . } assert ( <genH> : Nat . even <nat:50> = true ) . { auto . } assert ( <genH> : Nat . even <nat:482> = true ) . { auto . } assert ( <genH> : Nat . even <nat:466> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:446> * <var:I> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:98> * <var:h> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:192> * <var:r> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:16> * <var:T> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:50> * <var:j> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:482> * <var:M> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:466> * <var:i> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 