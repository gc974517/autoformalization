\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \newtheorem{definition}{Definition} \begin{document} \begin{definition} Take $ <var:L> $ , $ <var:H> $ , $ <var:w> $ , $ <var:q> $ , $ <var:f> $ , $ <var:B> $ as numbers larger than or equivalent to <nat:2> . We say that $ <var:e> \in \mathbb{N} $ is named a <def:six-composite> positive integer given $ <var:e> = <var:L> \times <var:w> \times <var:B> \times <var:f> \times <var:q> \times <var:H> $ . \end{definition} \begin{theorem} $ <var:e> = <nat:39312> $ is a <def:six-composite> whole number . \end{theorem} \begin{proof} Observe $ <nat:39312> = <var:q> \cdot <var:H> \cdot <var:f> \cdot <var:L> \cdot <var:B> \cdot <var:w> $ yields $ <var:w> = <nat:7> $ , $ <var:f> = <nat:6> $ , $ <var:q> = <nat:2> $ , $ <var:L> = <nat:12> $ , $ <var:B> = <nat:3> $ , and $ <var:H> = <nat:13> $ . Similarly note $ <nat:3> $ , $ <nat:6> $ , $ <nat:7> $ , $ <nat:2> $ , $ <nat:13> $ , and $ <nat:12> $ are greater than or equal to <nat:2> . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:six-composite> ( <var:e> : nat ) := exists <var:L> <var:H> <var:w> <var:q> <var:f> <var:B> : nat , ( <var:L> >= <nat:2> ) /\ ( <var:H> >= <nat:2> ) /\ ( <var:w> >= <nat:2> ) /\ ( <var:q> >= <nat:2> ) /\ ( <var:f> >= <nat:2> ) /\ ( <var:B> >= <nat:2> ) /\ ( <var:e> = <var:L> * <var:w> * <var:B> * <var:f> * <var:q> * <var:H> ) . Theorem <genP:1> : <def:six-composite> <nat:39312> . Proof . unfold <def:six-composite> . exists <nat:12> . exists <nat:13> . exists <nat:7> . exists <nat:2> . exists <nat:6> . exists <nat:3> . assert ( <genH> : <nat:3> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:6> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:7> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:2> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:13> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:12> >= <nat:2> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 