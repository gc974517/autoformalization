\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:i> * <nat:180> + <nat:208> * <var:e> + <nat:34> * <var:F> + <nat:409> + <nat:56> * <var:w> + <nat:420> * <var:S> + <nat:16> * <var:u> + <var:r> * <nat:48> + <var:m> * <nat:126> + <var:v> * <nat:444> + <var:a> * <nat:464> $ will be odd taking any $ <var:r> $ , $ <var:w> $ , $ <var:S> $ , $ <var:F> $ , $ <var:u> $ , $ <var:m> $ , $ <var:a> $ , $ <var:e> $ , $ <var:v> $ , and $ <var:i> $ . \end{theorem} \begin{proof} We know that the products $ <nat:464> * <var:a> $ plus $ <var:m> * <nat:126> $ are obviously even numbers from the knowledge multiplying of an even integer and some whole number is guaranteed to be by itself an even integer . Further , $ <nat:48> * <var:r> $ is known to be even . Likewise , the products $ <var:F> * <nat:34> $ , $ <nat:180> * <var:i> $ , $ <var:v> * <nat:444> $ , $ <var:e> * <nat:208> $ , and also $ <nat:56> * <var:w> $ are known to be even numbers in $ \mathbb{N} $ . In addition , take note that the term $ <var:u> * <nat:16> $ is known as an even number in $ \mathbb{Z}^+ $ . Furthermore , observe the pair $ <nat:420> * <var:S> $ is even . Recall $ <nat:409> $ is known as an odd number in $ \mathbb{Z}^+ $ . Observe the addition between an even integer and an odd element of $ \mathbb{N} $ must be an odd number in $ \mathbb{Z}^+ $ . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:r> <var:w> <var:S> <var:F> <var:u> <var:m> <var:a> <var:e> <var:v> <var:i> : nat , Nat . odd ( <nat:180> * <var:i> + <nat:208> * <var:e> + <nat:34> * <var:F> + <nat:56> * <var:w> + <nat:420> * <var:S> + <nat:16> * <var:u> + <nat:48> * <var:r> + <nat:126> * <var:m> + <nat:444> * <var:v> + <nat:464> * <var:a> + <nat:409> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:464> * <var:a> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:126> * <var:m> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:48> * <var:r> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:34> * <var:F> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:180> * <var:i> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:444> * <var:v> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:208> * <var:e> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:56> * <var:w> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:16> * <var:u> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:420> * <var:S> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . odd <nat:409> = true ) . { auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 