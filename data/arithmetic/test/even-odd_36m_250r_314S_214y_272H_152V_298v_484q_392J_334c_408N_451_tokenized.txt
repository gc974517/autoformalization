\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:v> <nat:298> + <nat:314> <var:S> + <nat:451> + <nat:272> <var:H> + <var:y> <nat:214> + <nat:152> <var:V> + <var:N> <nat:408> + <var:J> <nat:392> + <var:c> <nat:334> + <var:m> <nat:36> + <nat:250> <var:r> + <nat:484> <var:q> $ is odd taking some positive terms $ <var:y> $ , $ <var:c> $ , $ <var:V> $ , $ <var:J> $ , $ <var:q> $ , $ <var:H> $ , $ <var:N> $ , $ <var:S> $ , $ <var:v> $ , $ <var:m> $ , and $ <var:r> $ . \end{theorem} \begin{proof} We know $ <nat:451> $ is guaranteed to be an odd positive integer . Because the totaling between an even whole number and an odd element of $ \mathbb{N} $ will be odd , hence the claim is true . The claim is proven since $ <var:m> \cdot <nat:36> + <nat:250> \cdot <var:r> + <nat:314> \cdot <var:S> + <var:y> \cdot <nat:214> + <nat:272> \cdot <var:H> + <nat:152> \cdot <var:V> + <var:v> \cdot <nat:298> + <nat:484> \cdot <var:q> + <var:J> \cdot <nat:392> + <nat:334> \cdot <var:c> + <nat:408> \cdot <var:N> $ is trivially even . Observe the product of even elements of $ \mathbb{N} $ is even . We know the leading terms $ <nat:298> $ , $ <nat:392> $ , $ <nat:484> $ , $ <nat:408> $ , $ <nat:334> $ , $ <nat:214> $ , $ <nat:36> $ , as well as $ <nat:250> $ are trivially even Furthermore , observe that the leading terms $ <nat:314> $ and also $ <nat:152> $ are guaranteed to be even Additionally , the number $ <nat:272> $ is trivially even \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:y> <var:c> <var:V> <var:J> <var:q> <var:H> <var:N> <var:S> <var:v> <var:m> <var:r> : nat , Nat . odd ( <nat:298> * <var:v> + <nat:314> * <var:S> + <nat:272> * <var:H> + <nat:214> * <var:y> + <nat:152> * <var:V> + <nat:408> * <var:N> + <nat:392> * <var:J> + <nat:334> * <var:c> + <nat:36> * <var:m> + <nat:250> * <var:r> + <nat:484> * <var:q> + <nat:451> ) = true . Proof . intros . assert ( <genH> : Nat . odd <nat:451> = true ) . { auto . } rewrite Nat . odd_add . assert ( <genH> : Nat . even <nat:298> = true ) . { auto . } assert ( <genH> : Nat . even <nat:392> = true ) . { auto . } assert ( <genH> : Nat . even <nat:484> = true ) . { auto . } assert ( <genH> : Nat . even <nat:408> = true ) . { auto . } assert ( <genH> : Nat . even <nat:334> = true ) . { auto . } assert ( <genH> : Nat . even <nat:214> = true ) . { auto . } assert ( <genH> : Nat . even <nat:36> = true ) . { auto . } assert ( <genH> : Nat . even <nat:250> = true ) . { auto . } assert ( <genH> : Nat . even <nat:314> = true ) . { auto . } assert ( <genH> : Nat . even <nat:152> = true ) . { auto . } assert ( <genH> : Nat . even <nat:272> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:298> * <var:v> + <nat:314> * <var:S> + <nat:272> * <var:H> + <nat:214> * <var:y> + <nat:152> * <var:V> + <nat:408> * <var:N> + <nat:392> * <var:J> + <nat:334> * <var:c> + <nat:36> * <var:m> + <nat:250> * <var:r> + <nat:484> * <var:q> ) = true ) . { repeat rewrite Nat . even_add . repeat rewrite Nat . even_mul . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite <- Nat . negb_even . rewrite <genH> . rewrite <genH> . auto . Qed . 