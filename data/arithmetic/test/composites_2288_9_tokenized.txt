\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} There exist $ <var:B> $ , $ <var:Y> $ , $ <var:S> $ , $ <var:v> $ , $ <var:C> $ , $ <var:F> $ , $ <var:x> $ , $ <var:H> $ , and $ <var:i> \in \mathbb{Z}^+ $ so that $ <var:v> $ , $ <var:C> $ , $ <var:S> $ , $ <var:F> $ , $ <var:x> $ , $ <var:H> $ , $ <var:i> $ , $ <var:B> $ , and $ <var:Y> > <nat:1> $ and where the positive integer <nat:56609280> is the product between $ <var:B> $ , $ <var:Y> $ , $ <var:S> $ , $ <var:v> $ , $ <var:C> $ , $ <var:F> $ , $ <var:x> $ , $ <var:H> $ , $ <var:i> \in \mathbb{Z}^+ $ . \end{theorem} \begin{proof} We verify our result is valid in consideration of $ <nat:56609280> = <nat:3> * <nat:6> * <nat:13> * <nat:12> * <nat:9> * <nat:4> * <nat:10> * <nat:8> * <nat:7> $ plus seeing that $ <nat:3> $ , $ <nat:4> $ , $ <nat:13> $ , $ <nat:12> $ , $ <nat:10> $ , $ <nat:7> $ , $ <nat:8> $ , $ <nat:6> $ , and $ <nat:9> > <nat:1> $ . Because of this , $ <var:v> $ , $ <var:F> $ , $ <var:i> $ , $ <var:B> $ , $ <var:S> $ , $ <var:Y> $ , $ <var:x> $ , $ <var:H> $ and $ <var:C> > <nat:1> $ and $ <var:F> * <var:C> * <var:v> * <var:S> * <var:i> * <var:Y> * <var:H> * <var:x> * <var:B> = <nat:56609280> $ is verified . \end{proof} \end{document} 
~
Require Import Lia . Theorem <genP:1> : exists <var:B> <var:Y> <var:S> <var:v> <var:C> <var:F> <var:x> <var:H> <var:i> : nat , ( <var:v> > <nat:1> ) /\ ( <var:C> > <nat:1> ) /\ ( <var:S> > <nat:1> ) /\ ( <var:F> > <nat:1> ) /\ ( <var:x> > <nat:1> ) /\ ( <var:H> > <nat:1> ) /\ ( <var:i> > <nat:1> ) /\ ( <var:B> > <nat:1> ) /\ ( <var:Y> > <nat:1> ) /\ ( <nat:56609280> = <var:B> * <var:Y> * <var:S> * <var:v> * <var:C> * <var:F> * <var:x> * <var:H> * <var:i> ) . Proof . exists <nat:13> . exists <nat:8> . exists <nat:6> . exists <nat:3> . exists <nat:12> . exists <nat:10> . exists <nat:4> . exists <nat:7> . exists <nat:9> . assert ( <genH> : <nat:3> > <nat:1> ) . { lia . } assert ( <genH> : <nat:4> > <nat:1> ) . { lia . } assert ( <genH> : <nat:13> > <nat:1> ) . { lia . } assert ( <genH> : <nat:12> > <nat:1> ) . { lia . } assert ( <genH> : <nat:10> > <nat:1> ) . { lia . } assert ( <genH> : <nat:7> > <nat:1> ) . { lia . } assert ( <genH> : <nat:8> > <nat:1> ) . { lia . } assert ( <genH> : <nat:6> > <nat:1> ) . { lia . } assert ( <genH> : <nat:9> > <nat:1> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 