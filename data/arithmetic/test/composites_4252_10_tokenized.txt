\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Given that we get $ <var:l> $ , $ <var:G> $ , $ <var:N> $ , $ <var:i> $ , $ <var:x> $ , $ <var:y> $ , $ <var:F> $ , $ <var:K> $ , $ <var:Q> $ , and $ <var:z> \geq <nat:2> $ where assuming $ <var:B> \in \mathbb{Z}^+ $ , $ <var:Q> * <var:G> * <var:x> * <var:z> * <var:F> * <var:l> * <var:K> * <var:i> * <var:y> * <var:N> = <var:B> $ for some $ <var:F> $ , $ <var:N> $ , $ <var:Q> $ , $ <var:x> $ , $ <var:y> $ , $ <var:l> $ , $ <var:K> $ , $ <var:z> $ , $ <var:i> $ , $ <var:G> \in \mathbb{Z}^+ $ , then we say that $ <var:B> $ is a <def:ten-composite> positive integer . Consequently the integer <nat:345945600> is a <def:ten-composite> number . \end{theorem} \begin{proof} Recall that <nat:345945600> is a <def:ten-composite> natural number with the condition it is the multiplication of integers $ <var:Q> $ , $ <var:i> $ , $ <var:x> $ , $ <var:G> $ , $ <var:F> $ , $ <var:z> $ , $ <var:N> $ , $ <var:l> $ , $ <var:K> $ , $ <var:y> $ more than or equal to <nat:2> . Note $ <nat:345945600> = <nat:8> \times <nat:4> \times <nat:3> \times <nat:7> \times <nat:13> \times <nat:12> \times <nat:11> \times <nat:6> \times <nat:10> \times <nat:5> = <var:K> \times <var:y> \times <var:x> \times <var:l> \times <var:Q> \times <var:i> \times <var:F> \times <var:N> \times <var:G> \times <var:z> $ . Plus observe that $ <nat:4> $ , $ <nat:8> $ , $ <nat:12> $ , $ <nat:13> $ , $ <nat:10> $ , $ <nat:3> $ , $ <nat:11> $ , $ <nat:6> $ , $ <nat:5> $ and $ <nat:7> \geq <nat:2> $ . As a consequence , <nat:345945600> is a <def:ten-composite> positive integer is validated . So , $ <nat:345945600> = <var:K> * <var:l> * <var:i> * <var:x> * <var:y> * <var:z> * <var:N> * <var:G> * <var:Q> * <var:F> $ has been verified . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:ten-composite> ( <var:B> : nat ) := exists <var:F> <var:N> <var:Q> <var:x> <var:y> <var:l> <var:K> <var:z> <var:i> <var:G> : nat , ( <var:l> >= <nat:2> ) /\ ( <var:G> >= <nat:2> ) /\ ( <var:N> >= <nat:2> ) /\ ( <var:i> >= <nat:2> ) /\ ( <var:x> >= <nat:2> ) /\ ( <var:y> >= <nat:2> ) /\ ( <var:F> >= <nat:2> ) /\ ( <var:K> >= <nat:2> ) /\ ( <var:Q> >= <nat:2> ) /\ ( <var:z> >= <nat:2> ) /\ ( <var:Q> * <var:G> * <var:x> * <var:z> * <var:F> * <var:l> * <var:K> * <var:i> * <var:y> * <var:N> = <var:B> ) . Theorem <genP:1> : <def:ten-composite> <nat:345945600> . Proof . unfold <def:ten-composite> . exists <nat:11> . exists <nat:6> . exists <nat:13> . exists <nat:3> . exists <nat:4> . exists <nat:7> . exists <nat:8> . exists <nat:5> . exists <nat:12> . exists <nat:10> . assert ( <genH> : <nat:4> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:8> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:12> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:13> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:10> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:3> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:11> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:6> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:5> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:7> >= <nat:2> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 