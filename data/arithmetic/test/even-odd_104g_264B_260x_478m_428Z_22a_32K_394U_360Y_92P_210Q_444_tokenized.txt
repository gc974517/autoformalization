\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:Q> \cdot <nat:210> + <var:P> \cdot <nat:92> + <var:Y> \cdot <nat:360> + <nat:478> \cdot <var:m> + <nat:394> \cdot <var:U> + <nat:32> \cdot <var:K> + <nat:264> \cdot <var:B> + <nat:104> \cdot <var:g> + <nat:444> + <var:Z> \cdot <nat:428> + <nat:260> \cdot <var:x> + <nat:22> \cdot <var:a> $ must be even taking some unknowns $ <var:a> $ , $ <var:Z> $ , $ <var:Q> $ , $ <var:U> $ , $ <var:B> $ , $ <var:Y> $ , $ <var:P> $ , $ <var:x> $ , $ <var:g> $ , $ <var:m> $ , and $ <var:K> $ . \end{theorem} \begin{proof} The expression $ <nat:478> * <var:m> + <nat:428> * <var:Z> + <var:Y> * <nat:360> + <var:Q> * <nat:210> + <var:B> * <nat:264> + <nat:104> * <var:g> + <var:U> * <nat:394> + <nat:92> * <var:P> + <var:a> * <nat:22> + <var:x> * <nat:260> + <nat:32> * <var:K> $ is trivially even . Take note the products $ <var:g> \times <nat:104> $ , $ <nat:260> \times <var:x> $ , $ <var:m> \times <nat:478> $ , $ <nat:394> \times <var:U> $ , $ <nat:92> \times <var:P> $ , $ <nat:22> \times <var:a> $ , $ <nat:428> \times <var:Z> $ , $ <var:K> \times <nat:32> $ , $ <var:Y> \times <nat:360> $ , and likewise $ <var:B> \times <nat:264> $ are obviously even numbers in $ \mathbb{Z}^+ $ . This fact is proven from the fact the multiplication of an even number in $ \mathbb{Z}^+ $ and a element of $ \mathbb{N} $ must be an even number in $ \mathbb{N} $ , which holds from the knowledge the positive integers $ <nat:104> $ , $ <nat:260> $ , $ <nat:478> $ , $ <nat:394> $ , $ <nat:92> $ , $ <nat:22> $ , $ <nat:428> $ , $ <nat:32> $ , $ <nat:360> $ , plus $ <nat:264> $ will be clearly even integers . Likewise , see that the integer $ <nat:210> $ is obviously an even whole number . Accordingly , the pair $ <var:Q> \times <nat:210> $ must be even at the same time . By reason that the product between an even integer with any natural number is even this lemma holds . We show the expression $ <var:g> \times <nat:104> + <nat:264> \times <var:B> + <var:x> \times <nat:260> + <nat:478> \times <var:m> + <nat:428> \times <var:Z> + <var:a> \times <nat:22> + <nat:32> \times <var:K> + <var:U> \times <nat:394> + <nat:444> + <var:Y> \times <nat:360> + <var:P> \times <nat:92> + <nat:210> \times <var:Q> $ must be even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:a> <var:Z> <var:Q> <var:U> <var:B> <var:Y> <var:P> <var:x> <var:g> <var:m> <var:K> : nat , Nat . even ( <nat:210> * <var:Q> + <nat:92> * <var:P> + <nat:360> * <var:Y> + <nat:478> * <var:m> + <nat:394> * <var:U> + <nat:32> * <var:K> + <nat:264> * <var:B> + <nat:104> * <var:g> + <nat:428> * <var:Z> + <nat:260> * <var:x> + <nat:22> * <var:a> + <nat:444> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:104> = true ) . { auto . } assert ( <genH> : Nat . even <nat:260> = true ) . { auto . } assert ( <genH> : Nat . even <nat:478> = true ) . { auto . } assert ( <genH> : Nat . even <nat:394> = true ) . { auto . } assert ( <genH> : Nat . even <nat:92> = true ) . { auto . } assert ( <genH> : Nat . even <nat:22> = true ) . { auto . } assert ( <genH> : Nat . even <nat:428> = true ) . { auto . } assert ( <genH> : Nat . even <nat:32> = true ) . { auto . } assert ( <genH> : Nat . even <nat:360> = true ) . { auto . } assert ( <genH> : Nat . even <nat:264> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:104> * <var:g> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:260> * <var:x> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:478> * <var:m> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:394> * <var:U> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:92> * <var:P> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:22> * <var:a> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:428> * <var:Z> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:32> * <var:K> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:360> * <var:Y> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:264> * <var:B> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:210> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:210> * <var:Q> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:210> * <var:Q> + <nat:92> * <var:P> + <nat:360> * <var:Y> + <nat:478> * <var:m> + <nat:394> * <var:U> + <nat:32> * <var:K> + <nat:264> * <var:B> + <nat:104> * <var:g> + <nat:428> * <var:Z> + <nat:260> * <var:x> + <nat:22> * <var:a> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . even_add . rewrite <genH> . auto . Qed . 