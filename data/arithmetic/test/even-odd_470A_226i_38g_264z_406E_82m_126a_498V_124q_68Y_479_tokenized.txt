\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} With some integers $ <var:g> $ , $ <var:i> $ , $ <var:V> $ , $ <var:A> $ , $ <var:m> $ , $ <var:E> $ , $ <var:a> $ , $ <var:Y> $ , $ <var:z> $ , and $ <var:q> $ the expression $ <var:a> \times <nat:126> + <var:z> \times <nat:264> + <nat:124> \times <var:q> + <nat:470> \times <var:A> + <nat:498> \times <var:V> + <var:g> \times <nat:38> + <var:m> \times <nat:82> + <nat:226> \times <var:i> + <nat:479> + <var:Y> \times <nat:68> + <var:E> \times <nat:406> $ is odd . \end{theorem} \begin{proof} The totaling of an even number and an odd number is by definition an odd integer . See that $ <nat:479> $ is known as an odd number in $ \mathbb{Z}^+ $ . It can be checked that $ <var:A> <nat:470> + <var:i> <nat:226> + <var:g> <nat:38> + <var:z> <nat:264> + <nat:406> <var:E> + <var:m> <nat:82> + <var:a> <nat:126> + <nat:498> <var:V> + <var:q> <nat:124> + <nat:68> <var:Y> $ is known to be even . Further , the terms $ <nat:470> \times <var:A> $ , $ <nat:226> \times <var:i> $ , $ <var:g> \times <nat:38> $ , $ <nat:264> \times <var:z> $ , $ <var:E> \times <nat:406> $ , $ <nat:82> \times <var:m> $ , $ <var:a> \times <nat:126> $ , $ <var:V> \times <nat:498> $ , $ <var:q> \times <nat:124> $ , and $ <nat:68> \times <var:Y> $ are trivially even natural numbers . This must be true because the positive integers $ <nat:470> $ , $ <nat:226> $ , $ <nat:38> $ , $ <nat:264> $ , $ <nat:406> $ , $ <nat:82> $ , $ <nat:126> $ , $ <nat:498> $ , $ <nat:124> $ , and likewise $ <nat:68> $ are even elements of $ \mathbb{N} $ . From the knowledge the adding between even elements of $ \mathbb{N} $ and an even element of $ \mathbb{Z}^+ $ will be by definition an even element of $ \mathbb{Z}^+ $ , as well as by reason that taking the product of even naturals and some positive integer is guaranteed to be even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:g> <var:i> <var:V> <var:A> <var:m> <var:E> <var:a> <var:Y> <var:z> <var:q> : nat , Nat . odd ( <nat:126> * <var:a> + <nat:264> * <var:z> + <nat:124> * <var:q> + <nat:470> * <var:A> + <nat:498> * <var:V> + <nat:38> * <var:g> + <nat:82> * <var:m> + <nat:226> * <var:i> + <nat:68> * <var:Y> + <nat:406> * <var:E> + <nat:479> ) = true . Proof . intros . rewrite Nat . odd_add . assert ( <genH> : Nat . odd <nat:479> = true ) . { auto . } assert ( <genH> : Nat . even <nat:470> = true ) . { auto . } assert ( <genH> : Nat . even <nat:226> = true ) . { auto . } assert ( <genH> : Nat . even <nat:38> = true ) . { auto . } assert ( <genH> : Nat . even <nat:264> = true ) . { auto . } assert ( <genH> : Nat . even <nat:406> = true ) . { auto . } assert ( <genH> : Nat . even <nat:82> = true ) . { auto . } assert ( <genH> : Nat . even <nat:126> = true ) . { auto . } assert ( <genH> : Nat . even <nat:498> = true ) . { auto . } assert ( <genH> : Nat . even <nat:124> = true ) . { auto . } assert ( <genH> : Nat . even <nat:68> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:470> * <var:A> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:226> * <var:i> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:38> * <var:g> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:264> * <var:z> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:406> * <var:E> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:82> * <var:m> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:126> * <var:a> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:498> * <var:V> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:124> * <var:q> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:68> * <var:Y> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:126> * <var:a> + <nat:264> * <var:z> + <nat:124> * <var:q> + <nat:470> * <var:A> + <nat:498> * <var:V> + <nat:38> * <var:g> + <nat:82> * <var:m> + <nat:226> * <var:i> + <nat:68> * <var:Y> + <nat:406> * <var:E> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite <- Nat . negb_even . rewrite <genH> . rewrite <genH> . auto . Qed . 