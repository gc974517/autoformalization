\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \newtheorem{definition}{Definition} \begin{document} \begin{definition} There exist $ <var:b> $ , $ <var:Y> $ , $ <var:o> $ , $ <var:v> $ , $ <var:t> $ , $ <var:F> $ , $ <var:B> $ , $ <var:Q> $ , $ <var:D> $ , $ <var:Z> \in \mathbb{Z}^+ $ more than or equivalent to <nat:2> . We say that $ <var:c> \in \mathbb{Z}^+ $ will be considered to be a <def:ten-composite> integer when $ <var:c> = <var:Y> * <var:B> * <var:Q> * <var:b> * <var:Z> * <var:D> * <var:t> * <var:o> * <var:v> * <var:F> $ . \end{definition} \begin{theorem} The whole number <nat:47174400> is a <def:ten-composite> natural number . \end{theorem} \begin{proof} Take $ <var:o> = <nat:8> $ , $ <var:F> = <nat:7> $ , $ <var:B> = <nat:9> $ , $ <var:v> = <nat:4> $ , $ <var:Y> = <nat:10> $ , $ <var:t> = <nat:2> $ , $ <var:b> = <nat:5> $ , $ <var:Q> = <nat:13> $ , $ <var:D> = <nat:3> $ , and $ <var:Z> = <nat:6> $ . Furthermore notice $ <var:B> = <nat:9> $ , $ <var:Q> = <nat:13> $ , $ <var:t> = <nat:2> $ , $ <var:D> = <nat:3> $ , $ <var:F> = <nat:7> $ , $ <var:b> = <nat:5> $ , $ <var:v> = <nat:4> $ , $ <var:Y> = <nat:10> $ , $ <var:o> = <nat:8> $ and $ <var:Z> = <nat:6> $ are more than or equivalent to <nat:2> . As a result , $ <nat:47174400> = <var:o> * <var:Y> * <var:F> * <var:v> * <var:Q> * <var:D> * <var:b> * <var:B> * <var:t> * <var:Z> $ is verified . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:ten-composite> ( <var:c> : nat ) := exists <var:b> <var:Y> <var:o> <var:v> <var:t> <var:F> <var:B> <var:Q> <var:D> <var:Z> : nat , ( <var:b> >= <nat:2> ) /\ ( <var:Y> >= <nat:2> ) /\ ( <var:o> >= <nat:2> ) /\ ( <var:v> >= <nat:2> ) /\ ( <var:t> >= <nat:2> ) /\ ( <var:F> >= <nat:2> ) /\ ( <var:B> >= <nat:2> ) /\ ( <var:Q> >= <nat:2> ) /\ ( <var:D> >= <nat:2> ) /\ ( <var:Z> >= <nat:2> ) /\ ( <var:c> = <var:Y> * <var:B> * <var:Q> * <var:b> * <var:Z> * <var:D> * <var:t> * <var:o> * <var:v> * <var:F> ) . Theorem <genP:1> : <def:ten-composite> <nat:47174400> . Proof . unfold <def:ten-composite> . exists <nat:5> . exists <nat:10> . exists <nat:8> . exists <nat:4> . exists <nat:2> . exists <nat:7> . exists <nat:9> . exists <nat:13> . exists <nat:3> . exists <nat:6> . assert ( <genH> : <nat:9> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:13> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:2> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:3> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:7> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:5> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:4> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:10> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:8> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:6> >= <nat:2> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 