\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Granted that there exist whole numbers $ <var:q> $ , $ <var:I> $ , $ <var:Z> $ , $ <var:D> $ , $ <var:K> $ , $ <var:s> $ , $ <var:T> $ , $ <var:p> $ , $ <var:k> $ take that $ <var:Y> \in \mathbb{Z}^+ $ will be considered as a <def:nine-composite> number given $ <var:k> * <var:s> * <var:Z> * <var:p> * <var:I> * <var:q> * <var:T> * <var:D> * <var:K> = <var:Y> $ and so that $ <var:k> $ , $ <var:Z> $ , $ <var:T> $ , $ <var:s> $ , $ <var:p> $ , $ <var:I> $ , $ <var:K> $ , $ <var:D> $ , and $ <var:q> > <nat:1> $ . Hence the positive integer <nat:17740800> is <def:nine-composite> . \end{theorem} \begin{proof} Allow $ <var:p> = <nat:7> $ , $ <var:T> = <nat:8> $ , $ <var:K> = <nat:4> $ , $ <var:Z> = <nat:11> $ , $ <var:s> = <nat:10> $ , $ <var:q> = <nat:6> $ , $ <var:k> = <nat:2> $ , $ <var:D> = <nat:12> $ and $ <var:I> = <nat:5> $ . Note $ <nat:10> $ , $ <nat:11> $ , $ <nat:4> $ , $ <nat:5> $ , $ <nat:7> $ , $ <nat:12> $ , $ <nat:6> $ , $ <nat:8> $ , $ <nat:2> > <nat:1> $ . Plus note also $ <var:s> \cdot <var:T> \cdot <var:D> \cdot <var:q> \cdot <var:Z> \cdot <var:I> \cdot <var:K> \cdot <var:k> \cdot <var:p> = <nat:17740800> $ . This produces <nat:17740800> is a <def:nine-composite> number . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:nine-composite> ( <var:Y> : nat ) := exists <var:q> <var:I> <var:Z> <var:D> <var:K> <var:s> <var:T> <var:p> <var:k> : nat , ( <var:k> * <var:s> * <var:Z> * <var:p> * <var:I> * <var:q> * <var:T> * <var:D> * <var:K> = <var:Y> ) /\ ( <var:k> > <nat:1> ) /\ ( <var:Z> > <nat:1> ) /\ ( <var:T> > <nat:1> ) /\ ( <var:s> > <nat:1> ) /\ ( <var:p> > <nat:1> ) /\ ( <var:I> > <nat:1> ) /\ ( <var:K> > <nat:1> ) /\ ( <var:D> > <nat:1> ) /\ ( <var:q> > <nat:1> ) . Theorem <genP:1> : <def:nine-composite> <nat:17740800> . Proof . unfold <def:nine-composite> . exists <nat:6> . exists <nat:5> . exists <nat:11> . exists <nat:12> . exists <nat:4> . exists <nat:10> . exists <nat:8> . exists <nat:7> . exists <nat:2> . assert ( <genH> : <nat:10> > <nat:1> ) . { lia . } assert ( <genH> : <nat:11> > <nat:1> ) . { lia . } assert ( <genH> : <nat:4> > <nat:1> ) . { lia . } assert ( <genH> : <nat:5> > <nat:1> ) . { lia . } assert ( <genH> : <nat:7> > <nat:1> ) . { lia . } assert ( <genH> : <nat:12> > <nat:1> ) . { lia . } assert ( <genH> : <nat:6> > <nat:1> ) . { lia . } assert ( <genH> : <nat:8> > <nat:1> ) . { lia . } assert ( <genH> : <nat:2> > <nat:1> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 