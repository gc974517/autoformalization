\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Taking some natural numbers $ <var:w> $ , $ <var:W> $ , $ <var:o> $ , $ <var:n> $ , and $ <var:h> $ the sum $ <nat:186> <var:h> + <var:o> <nat:314> + <nat:390> + <nat:352> <var:n> + <var:W> <nat:154> + <var:w> <nat:152> $ must be even . \end{theorem} \begin{proof} The totaling of even numbers is guaranteed to be obviously an even element of $ \mathbb{N} $ . Our result holds from the fact $ <nat:352> \times <var:n> + <nat:186> \times <var:h> + <nat:154> \times <var:W> + <var:w> \times <nat:152> + <nat:314> \times <var:o> $ is known as even , from the fact the addition of even natural numbers concurrently is an even whole number . Additionally , observe that the numbers $ <nat:352> $ , $ <nat:186> $ , $ <nat:154> $ , $ <nat:152> $ , and also $ <nat:314> $ are even natural numbers . Then , the pairs $ <var:n> * <nat:352> $ , $ <var:h> * <nat:186> $ , $ <var:W> * <nat:154> $ , $ <nat:152> * <var:w> $ , in addition to $ <nat:314> * <var:o> $ will be even too . plus as a consequence that the product of even positive integers and a integer must be in itself an even whole number the summation $ <nat:154> \cdot <var:W> + <nat:152> \cdot <var:w> + <nat:352> \cdot <var:n> + <var:h> \cdot <nat:186> + <var:o> \cdot <nat:314> $ must be instrinsically even . It can be verified that the sum $ <var:o> <nat:314> + <nat:186> <var:h> + <nat:390> + <var:n> <nat:352> + <nat:154> <var:W> + <nat:152> <var:w> $ is even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:w> <var:W> <var:o> <var:n> <var:h> : nat , Nat . even ( <nat:186> * <var:h> + <nat:314> * <var:o> + <nat:352> * <var:n> + <nat:154> * <var:W> + <nat:152> * <var:w> + <nat:390> ) = true . Proof . intros . rewrite Nat . even_add . assert ( <genH> : Nat . even <nat:352> = true ) . { auto . } assert ( <genH> : Nat . even <nat:186> = true ) . { auto . } assert ( <genH> : Nat . even <nat:154> = true ) . { auto . } assert ( <genH> : Nat . even <nat:152> = true ) . { auto . } assert ( <genH> : Nat . even <nat:314> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:352> * <var:n> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:186> * <var:h> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:154> * <var:W> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:152> * <var:w> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:314> * <var:o> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:186> * <var:h> + <nat:314> * <var:o> + <nat:352> * <var:n> + <nat:154> * <var:W> + <nat:152> * <var:w> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite <genH> . auto . Qed . 