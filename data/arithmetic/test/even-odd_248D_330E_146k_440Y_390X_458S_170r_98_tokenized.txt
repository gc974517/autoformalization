\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:98> + <var:r> \times <nat:170> + <nat:330> \times <var:E> + <var:X> \times <nat:390> + <var:S> \times <nat:458> + <var:k> \times <nat:146> + <nat:440> \times <var:Y> + <var:D> \times <nat:248> $ is guaranteed to be even assuming whole numbers $ <var:k> $ , $ <var:D> $ , $ <var:E> $ , $ <var:X> $ , $ <var:S> $ , $ <var:r> $ , and $ <var:Y> $ . \end{theorem} \begin{proof} The addition of even positive integers together and an even number is guaranteed to be an even natural . We make use the knowledge that the summation $ <var:k> <nat:146> + <nat:458> <var:S> + <var:E> <nat:330> + <nat:98> + <nat:248> <var:D> + <var:X> <nat:390> + <nat:170> <var:r> + <var:Y> <nat:440> $ is guaranteed to be even from the fact the formula $ <nat:330> \times <var:E> + <nat:146> \times <var:k> + <var:D> \times <nat:248> + <nat:390> \times <var:X> + <var:S> \times <nat:458> + <nat:170> \times <var:r> + <nat:440> \times <var:Y> $ is known to be even . Since the summation between even elements of $ \mathbb{Z}^+ $ with even integers is even , the expression $ <nat:248> \times <var:D> + <nat:330> \times <var:E> + <var:k> \times <nat:146> + <var:Y> \times <nat:440> + <var:X> \times <nat:390> + <nat:458> \times <var:S> + <var:r> \times <nat:170> $ will be even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:k> <var:D> <var:E> <var:X> <var:S> <var:r> <var:Y> : nat , Nat . even ( <nat:170> * <var:r> + <nat:330> * <var:E> + <nat:390> * <var:X> + <nat:458> * <var:S> + <nat:146> * <var:k> + <nat:440> * <var:Y> + <nat:248> * <var:D> + <nat:98> ) = true . Proof . intros . rewrite Nat . even_add . assert ( <genH> : Nat . even ( <nat:170> * <var:r> + <nat:330> * <var:E> + <nat:390> * <var:X> + <nat:458> * <var:S> + <nat:146> * <var:k> + <nat:440> * <var:Y> + <nat:248> * <var:D> ) = true ) . { repeat rewrite Nat . even_add . repeat rewrite Nat . even_mul . auto . } rewrite <genH> . auto . Qed . 