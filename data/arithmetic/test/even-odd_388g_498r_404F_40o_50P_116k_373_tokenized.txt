\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:g> * <nat:388> + <var:r> * <nat:498> + <var:F> * <nat:404> + <var:o> * <nat:40> + <nat:50> * <var:P> + <var:k> * <nat:116> + <nat:373> $ is odd with every whole numbers $ <var:g> $ , $ <var:F> $ , $ <var:P> $ , $ <var:o> $ , $ <var:k> $ , and $ <var:r> $ . \end{theorem} \begin{proof} See that the adding of an even number in $ \mathbb{Z}^+ $ with an odd element of $ \mathbb{Z}^+ $ must be an odd number . The products $ <var:k> <nat:116> $ , $ <nat:50> <var:P> $ , and moreover $ <var:r> <nat:498> $ are obviously even numbers in $ \mathbb{N} $ . Adding on , the term $ <nat:404> <var:F> $ is obviously an even element of $ \mathbb{Z}^+ $ . We know that the term $ <var:g> <nat:388> $ is known as even by reason that the multiplication of an even number in $ \mathbb{N} $ with a positive integer must be an even number in $ \mathbb{N} $ . Remember $ <var:o> <nat:40> $ is known as even because the multiplication between an even positive integer with an arbitrary number is guaranteed to be even . We demonstrate our claim must be true . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:g> <var:F> <var:P> <var:o> <var:k> <var:r> : nat , Nat . odd ( <nat:388> * <var:g> + <nat:498> * <var:r> + <nat:404> * <var:F> + <nat:40> * <var:o> + <nat:50> * <var:P> + <nat:116> * <var:k> + <nat:373> ) = true . Proof . intros . rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . assert ( <genH> : Nat . even ( <nat:116> * <var:k> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:50> * <var:P> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:498> * <var:r> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:404> * <var:F> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:388> * <var:g> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:40> * <var:o> ) = true ) . { rewrite Nat . even_mul . auto . } rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 