\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:186> <var:L> + <nat:424> <var:X> + <nat:216> <var:U> + <nat:38> <var:R> + <nat:102> <var:l> + <nat:296> <var:q> + <var:a> <nat:116> + <nat:86> + <nat:56> <var:P> + <nat:206> <var:O> $ is even given some positive integers $ <var:P> $ , $ <var:q> $ , $ <var:R> $ , $ <var:X> $ , $ <var:L> $ , $ <var:O> $ , $ <var:l> $ , $ <var:U> $ , and $ <var:a> $ . \end{theorem} \begin{proof} We use the assumption the fact $ <nat:424> \times <var:X> + <var:P> \times <nat:56> + <nat:102> \times <var:l> + <var:q> \times <nat:296> + <var:U> \times <nat:216> + <nat:116> \times <var:a> + <var:O> \times <nat:206> + <var:R> \times <nat:38> + <var:L> \times <nat:186> $ is known as even . Recall the terms $ <nat:296> \cdot <var:q> $ , $ <nat:424> \cdot <var:X> $ , $ <var:l> \cdot <nat:102> $ , and moreover $ <var:U> \cdot <nat:216> $ are trivially even because multiplying of an even element of $ \mathbb{N} $ and an arbitrary number must be even , and is proven as a consequence that the whole numbers $ <nat:296> $ , $ <nat:424> $ , $ <nat:102> $ , additionally $ <nat:216> $ are known as . Notice that the positive integers $ <nat:186> $ , $ <nat:56> $ , $ <nat:206> $ , and moreover $ <nat:116> $ must be even . For this reason , the products $ <nat:186> \cdot <var:L> $ , $ <nat:56> \cdot <var:P> $ , $ <nat:206> \cdot <var:O> $ , as well as $ <nat:116> \cdot <var:a> $ is guaranteed to be even at the same time . The integer $ <nat:38> $ is an even element of $ \mathbb{Z}^+ $ . For this reason , the term $ <var:R> \cdot <nat:38> $ is guaranteed to be even in addition . Take note the adding between even positive integers collectively and an even number in $ \mathbb{Z}^+ $ is guaranteed to be an even whole number . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:P> <var:q> <var:R> <var:X> <var:L> <var:O> <var:l> <var:U> <var:a> : nat , Nat . even ( <nat:186> * <var:L> + <nat:424> * <var:X> + <nat:216> * <var:U> + <nat:38> * <var:R> + <nat:102> * <var:l> + <nat:296> * <var:q> + <nat:116> * <var:a> + <nat:56> * <var:P> + <nat:206> * <var:O> + <nat:86> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:296> = true ) . { auto . } assert ( <genH> : Nat . even <nat:424> = true ) . { auto . } assert ( <genH> : Nat . even <nat:102> = true ) . { auto . } assert ( <genH> : Nat . even <nat:216> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:296> * <var:q> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:424> * <var:X> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:102> * <var:l> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:216> * <var:U> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:186> = true ) . { auto . } assert ( <genH> : Nat . even <nat:56> = true ) . { auto . } assert ( <genH> : Nat . even <nat:206> = true ) . { auto . } assert ( <genH> : Nat . even <nat:116> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:186> * <var:L> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:56> * <var:P> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:206> * <var:O> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:116> * <var:a> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:38> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:38> * <var:R> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:186> * <var:L> + <nat:424> * <var:X> + <nat:216> * <var:U> + <nat:38> * <var:R> + <nat:102> * <var:l> + <nat:296> * <var:q> + <nat:116> * <var:a> + <nat:56> * <var:P> + <nat:206> * <var:O> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . even_add . rewrite <genH> . auto . Qed . 