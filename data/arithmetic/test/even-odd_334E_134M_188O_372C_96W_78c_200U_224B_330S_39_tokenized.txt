\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:E> <nat:334> + <var:M> <nat:134> + <var:O> <nat:188> + <var:C> <nat:372> + <nat:96> <var:W> + <nat:78> <var:c> + <nat:200> <var:U> + <nat:224> <var:B> + <nat:330> <var:S> + <nat:39> $ is odd . \end{theorem} \begin{proof} Take note the pairs $ <nat:330> \cdot <var:S> $ , $ <nat:188> \cdot <var:O> $ , $ <var:M> \cdot <nat:134> $ , in addition to $ <var:c> \cdot <nat:78> $ are known as even elements of $ \mathbb{N} $ . This claim holds from the knowledge taking the product of an even positive integer with some element of $ \mathbb{Z}^+ $ is an even natural number . In addition to this , the pairs $ <var:C> \cdot <nat:372> $ and $ <nat:200> \cdot <var:U> $ are even natural numbers . The terms $ <var:E> \cdot <nat:334> $ and $ <nat:224> \cdot <var:B> $ are clearly even natural numbers as a consequence that taking the product between an even integer and a element of $ \mathbb{Z}^+ $ will be by itself an even number . $ <var:W> \cdot <nat:96> $ is even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:E> <var:M> <var:O> <var:C> <var:W> <var:c> <var:U> <var:B> <var:S> : nat , Nat . odd ( <nat:334> * <var:E> + <nat:134> * <var:M> + <nat:188> * <var:O> + <nat:372> * <var:C> + <nat:96> * <var:W> + <nat:78> * <var:c> + <nat:200> * <var:U> + <nat:224> * <var:B> + <nat:330> * <var:S> + <nat:39> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:330> * <var:S> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:188> * <var:O> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:134> * <var:M> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:78> * <var:c> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:372> * <var:C> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:200> * <var:U> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:334> * <var:E> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:224> * <var:B> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:96> * <var:W> ) = true ) . { rewrite Nat . even_mul . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 