\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:m> <nat:402> + <nat:166> <var:x> + <nat:396> <var:D> + <nat:365> + <nat:466> <var:y> + <var:Y> <nat:144> + <var:H> <nat:178> + <var:C> <nat:268> + <nat:358> <var:W> $ is guaranteed to be odd with every $ <var:C> $ , $ <var:H> $ , $ <var:m> $ , $ <var:W> $ , $ <var:D> $ , $ <var:Y> $ , $ <var:x> $ , and $ <var:y> $ . \end{theorem} \begin{proof} The natural numbers $ <nat:178> $ , $ <nat:166> $ , $ <nat:466> $ , $ <nat:144> $ , $ <nat:402> $ , and also $ <nat:268> $ are guaranteed to be even numbers Further , the integer $ <nat:358> $ is known to be an even positive integer What's more , the positive integer $ <nat:396> $ is clearly an even positive integer Taking the product between an even number and any positive integer will be an even number in $ \mathbb{Z}^+ $ . Recall $ <nat:365> $ is clearly odd . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:C> <var:H> <var:m> <var:W> <var:D> <var:Y> <var:x> <var:y> : nat , Nat . odd ( <nat:402> * <var:m> + <nat:166> * <var:x> + <nat:396> * <var:D> + <nat:466> * <var:y> + <nat:144> * <var:Y> + <nat:178> * <var:H> + <nat:268> * <var:C> + <nat:358> * <var:W> + <nat:365> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:178> = true ) . { auto . } assert ( <genH> : Nat . even <nat:166> = true ) . { auto . } assert ( <genH> : Nat . even <nat:466> = true ) . { auto . } assert ( <genH> : Nat . even <nat:144> = true ) . { auto . } assert ( <genH> : Nat . even <nat:402> = true ) . { auto . } assert ( <genH> : Nat . even <nat:268> = true ) . { auto . } assert ( <genH> : Nat . even <nat:358> = true ) . { auto . } assert ( <genH> : Nat . even <nat:396> = true ) . { auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . repeat rewrite Nat . even_mul . assert ( <genH> : Nat . odd <nat:365> = true ) . { auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 