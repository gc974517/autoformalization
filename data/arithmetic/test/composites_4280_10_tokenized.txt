\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \newtheorem{definition}{Definition} \begin{document} \begin{definition} With the condition we have $ <var:H> * <var:T> * <var:k> * <var:w> * <var:S> * <var:F> * <var:f> * <var:z> * <var:Y> * <var:L> = <var:b> $ given some number $ <var:b> $ as well as where $ <var:T> $ , $ <var:F> $ , $ <var:H> $ , $ <var:L> $ , $ <var:S> $ , $ <var:w> $ , $ <var:k> $ , $ <var:f> $ , $ <var:z> $ and $ <var:Y> \geq <nat:2> $ , assume that $ <var:b> $ is a <def:ten-composite> positive integer given some $ <var:S> $ , $ <var:f> $ , $ <var:F> $ , $ <var:H> $ , $ <var:k> $ , $ <var:w> $ , $ <var:Y> $ , $ <var:L> $ , $ <var:T> $ , $ <var:z> \in \mathbb{N} $ . \end{definition} \begin{theorem} $ <var:b> = <nat:124540416> $ is a <def:ten-composite> integer . \end{theorem} \begin{proof} Allow $ <var:T> = <nat:6> $ , $ <var:H> = <nat:2> $ , $ <var:L> = <nat:11> $ , $ <var:F> = <nat:12> $ , $ <var:k> = <nat:4> $ , $ <var:S> = <nat:13> $ , $ <var:f> = <nat:3> $ , $ <var:z> = <nat:9> $ , $ <var:w> = <nat:8> $ , $ <var:Y> = <nat:7> $ . Plus notice $ <var:S> = <nat:13> $ , $ <var:z> = <nat:9> $ , $ <var:w> = <nat:8> $ , $ <var:T> = <nat:6> $ , $ <var:f> = <nat:3> $ , $ <var:Y> = <nat:7> $ , $ <var:H> = <nat:2> $ , $ <var:F> = <nat:12> $ , $ <var:k> = <nat:4> $ and $ <var:L> = <nat:11> $ are more than or equivalent to <nat:2> . This indicates the proposition is true . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:ten-composite> ( <var:b> : nat ) := exists <var:S> <var:f> <var:F> <var:H> <var:k> <var:w> <var:Y> <var:L> <var:T> <var:z> : nat , ( <var:H> * <var:T> * <var:k> * <var:w> * <var:S> * <var:F> * <var:f> * <var:z> * <var:Y> * <var:L> = <var:b> ) /\ ( <var:T> >= <nat:2> ) /\ ( <var:F> >= <nat:2> ) /\ ( <var:H> >= <nat:2> ) /\ ( <var:L> >= <nat:2> ) /\ ( <var:S> >= <nat:2> ) /\ ( <var:w> >= <nat:2> ) /\ ( <var:k> >= <nat:2> ) /\ ( <var:f> >= <nat:2> ) /\ ( <var:z> >= <nat:2> ) /\ ( <var:Y> >= <nat:2> ) . Theorem <genP:1> : <def:ten-composite> <nat:124540416> . Proof . unfold <def:ten-composite> . exists <nat:13> . exists <nat:3> . exists <nat:12> . exists <nat:2> . exists <nat:4> . exists <nat:8> . exists <nat:7> . exists <nat:11> . exists <nat:6> . exists <nat:9> . assert ( <genH> : <nat:13> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:9> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:8> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:6> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:3> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:7> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:2> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:12> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:4> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:11> >= <nat:2> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 