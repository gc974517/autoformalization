\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Taking some positive numbers $ <var:u> $ , $ <var:E> $ , $ <var:O> $ , $ <var:P> $ , $ <var:k> $ , $ <var:X> $ , $ <var:c> $ , and $ <var:H> $ the sum $ <nat:92> <var:X> + <var:u> <nat:356> + <nat:303> + <nat:332> <var:O> + <nat:126> <var:P> + <var:E> <nat:112> + <var:c> <nat:98> + <var:H> <nat:366> + <nat:164> <var:k> $ is guaranteed to be odd . \end{theorem} \begin{proof} We know the terms $ <nat:92> \cdot <var:X> $ , $ <nat:126> \cdot <var:P> $ , plus $ <var:H> \cdot <nat:366> $ are clearly even . Recall the terms $ <var:u> \cdot <nat:356> $ , $ <var:O> \cdot <nat:332> $ , $ <var:c> \cdot <nat:98> $ , and likewise $ <var:k> \cdot <nat:164> $ are trivially even naturals because the product between an even number in $ \mathbb{Z}^+ $ with an arbitrary natural must be by itself an even element of $ \mathbb{N} $ . See that the term $ <nat:112> \cdot <var:E> $ is clearly even as a consequence that the product of an even natural number and a number in $ \mathbb{N} $ must be even . The adding between an even integer with an odd natural number must be odd . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:u> <var:E> <var:O> <var:P> <var:k> <var:X> <var:c> <var:H> : nat , Nat . odd ( <nat:92> * <var:X> + <nat:356> * <var:u> + <nat:332> * <var:O> + <nat:126> * <var:P> + <nat:112> * <var:E> + <nat:98> * <var:c> + <nat:366> * <var:H> + <nat:164> * <var:k> + <nat:303> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:92> * <var:X> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:126> * <var:P> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:366> * <var:H> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:356> * <var:u> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:332> * <var:O> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:98> * <var:c> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:164> * <var:k> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:112> * <var:E> ) = true ) . { rewrite Nat . even_mul . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 