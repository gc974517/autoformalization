\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \newtheorem{definition}{Definition} \begin{document} \begin{definition} Say that $ <var:J> $ is a <def:seven-composite> integer assuming that given some $ <var:s> $ , $ <var:z> $ , $ <var:w> $ , $ <var:v> $ , $ <var:y> $ , $ <var:W> $ , $ <var:K> \in \mathbb{Z}^+ $ we have $ <var:K> $ , $ <var:W> $ , $ <var:y> $ , $ <var:w> $ , $ <var:z> $ , $ <var:v> $ , $ <var:s> \geq <nat:2> $ as well as using $ <var:J> \in \mathbb{N} $ , $ <var:z> * <var:W> * <var:w> * <var:K> * <var:s> * <var:y> * <var:v> = <var:J> $ . \end{definition} \begin{theorem} <nat:1108800> is a <def:seven-composite> number . \end{theorem} \begin{proof} Let $ <var:z> = <nat:4> $ , $ <var:v> = <nat:7> $ , $ <var:y> = <nat:11> $ , $ <var:w> = <nat:12> $ , $ <var:W> = <nat:10> $ , $ <var:K> = <nat:5> $ and $ <var:s> = <nat:6> $ . Notice that $ <var:w> = <nat:12> $ , $ <var:v> = <nat:7> $ , $ <var:s> = <nat:6> $ , $ <var:z> = <nat:4> $ , $ <var:y> = <nat:11> $ , $ <var:K> = <nat:5> $ , and $ <var:W> = <nat:10> $ are greater than or equal to <nat:2> . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:seven-composite> ( <var:J> : nat ) := exists <var:s> <var:z> <var:w> <var:v> <var:y> <var:W> <var:K> : nat , ( <var:K> >= <nat:2> ) /\ ( <var:W> >= <nat:2> ) /\ ( <var:y> >= <nat:2> ) /\ ( <var:w> >= <nat:2> ) /\ ( <var:z> >= <nat:2> ) /\ ( <var:v> >= <nat:2> ) /\ ( <var:s> >= <nat:2> ) /\ ( <var:z> * <var:W> * <var:w> * <var:K> * <var:s> * <var:y> * <var:v> = <var:J> ) . Theorem <genP:1> : <def:seven-composite> <nat:1108800> . Proof . unfold <def:seven-composite> . exists <nat:6> . exists <nat:4> . exists <nat:12> . exists <nat:7> . exists <nat:11> . exists <nat:10> . exists <nat:5> . assert ( <genH> : <nat:12> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:7> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:6> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:4> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:11> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:5> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:10> >= <nat:2> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 