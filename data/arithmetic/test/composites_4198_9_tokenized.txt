\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \newtheorem{definition}{Definition} \begin{document} \begin{definition} Supposing that we have such that $ <var:G> $ , $ <var:K> $ , $ <var:V> $ , $ <var:w> $ , $ <var:o> $ , $ <var:v> $ , $ <var:a> $ , $ <var:d> $ and $ <var:F> > <nat:1> $ satisfying the condition that with $ <var:n> \in \mathbb{N} $ , $ <var:K> \times <var:o> \times <var:G> \times <var:a> \times <var:V> \times <var:F> \times <var:w> \times <var:d> \times <var:v> = <var:n> $ taking some $ <var:K> $ , $ <var:G> $ , $ <var:o> $ , $ <var:F> $ , $ <var:w> $ , $ <var:V> $ , $ <var:a> $ , $ <var:d> $ , $ <var:v> \in \mathbb{Z}^+ $ , then we claim that $ <var:n> $ is a <def:nine-composite> number . \end{definition} \begin{theorem} <nat:14414400> is a <def:nine-composite> whole number . \end{theorem} \begin{proof} Assume $ <var:G> = <nat:11> $ , $ <var:K> = <nat:4> $ , $ <var:V> = <nat:13> $ , $ <var:w> = <nat:7> $ , $ <var:F> = <nat:12> $ , $ <var:a> = <nat:2> $ , $ <var:d> = <nat:3> $ , $ <var:v> = <nat:5> $ , $ <var:o> = <nat:10> $ . Observe that $ <nat:5> $ , $ <nat:7> $ , $ <nat:10> $ , $ <nat:13> $ , $ <nat:12> $ , $ <nat:3> $ , $ <nat:2> $ , $ <nat:4> $ , and $ <nat:11> > <nat:1> $ . Additionally notice also $ <var:a> \times <var:G> \times <var:o> \times <var:V> \times <var:v> \times <var:d> \times <var:F> \times <var:w> \times <var:K> = <nat:14414400> $ . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:nine-composite> ( <var:n> : nat ) := exists <var:K> <var:G> <var:o> <var:F> <var:w> <var:V> <var:a> <var:d> <var:v> : nat , ( <var:G> > <nat:1> ) /\ ( <var:K> > <nat:1> ) /\ ( <var:V> > <nat:1> ) /\ ( <var:w> > <nat:1> ) /\ ( <var:o> > <nat:1> ) /\ ( <var:v> > <nat:1> ) /\ ( <var:a> > <nat:1> ) /\ ( <var:d> > <nat:1> ) /\ ( <var:F> > <nat:1> ) /\ ( <var:K> * <var:o> * <var:G> * <var:a> * <var:V> * <var:F> * <var:w> * <var:d> * <var:v> = <var:n> ) . Theorem <genP:1> : <def:nine-composite> <nat:14414400> . Proof . unfold <def:nine-composite> . exists <nat:4> . exists <nat:11> . exists <nat:10> . exists <nat:12> . exists <nat:7> . exists <nat:13> . exists <nat:2> . exists <nat:3> . exists <nat:5> . assert ( <genH> : <nat:5> > <nat:1> ) . { lia . } assert ( <genH> : <nat:7> > <nat:1> ) . { lia . } assert ( <genH> : <nat:10> > <nat:1> ) . { lia . } assert ( <genH> : <nat:13> > <nat:1> ) . { lia . } assert ( <genH> : <nat:12> > <nat:1> ) . { lia . } assert ( <genH> : <nat:3> > <nat:1> ) . { lia . } assert ( <genH> : <nat:2> > <nat:1> ) . { lia . } assert ( <genH> : <nat:4> > <nat:1> ) . { lia . } assert ( <genH> : <nat:11> > <nat:1> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 