\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:470> \times <var:Q> + <nat:419> + <nat:46> \times <var:C> + <var:W> \times <nat:96> + <var:d> \times <nat:188> + <var:v> \times <nat:218> + <var:u> \times <nat:110> $ will be odd . \end{theorem} \begin{proof} Recall the formula $ <var:v> \cdot <nat:218> + <var:C> \cdot <nat:46> + <nat:110> \cdot <var:u> + <var:W> \cdot <nat:96> + <nat:470> \cdot <var:Q> + <nat:188> \cdot <var:d> $ is known as even . The integers $ <nat:218> $ plus $ <nat:188> $ are even whole numbers In addition , remember the whole number $ <nat:470> $ is clearly an even number in $ \mathbb{N} $ The positive integers $ <nat:110> $ plus $ <nat:96> $ are trivially even Further , the positive integer $ <nat:46> $ is clearly even By reason that the multiplication of an even element of $ \mathbb{N} $ and any natural is even this proposition holds . Take note that the totaling between an even element of $ \mathbb{Z}^+ $ and an odd integer must be odd . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:Q> <var:C> <var:W> <var:d> <var:v> <var:u> : nat , Nat . odd ( <nat:470> * <var:Q> + <nat:46> * <var:C> + <nat:96> * <var:W> + <nat:188> * <var:d> + <nat:218> * <var:v> + <nat:110> * <var:u> + <nat:419> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:218> = true ) . { auto . } assert ( <genH> : Nat . even <nat:188> = true ) . { auto . } assert ( <genH> : Nat . even <nat:470> = true ) . { auto . } assert ( <genH> : Nat . even <nat:110> = true ) . { auto . } assert ( <genH> : Nat . even <nat:96> = true ) . { auto . } assert ( <genH> : Nat . even <nat:46> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:470> * <var:Q> + <nat:46> * <var:C> + <nat:96> * <var:W> + <nat:188> * <var:d> + <nat:218> * <var:v> + <nat:110> * <var:u> ) = true ) . { repeat rewrite Nat . even_add . repeat rewrite Nat . even_mul . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . auto . Qed . 