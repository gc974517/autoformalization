\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Taking every integers $ <var:y> $ , $ <var:I> $ , $ <var:F> $ , $ <var:M> $ , $ <var:r> $ , and $ <var:R> $ $ <var:I> \cdot <nat:86> + <nat:175> + <var:F> \cdot <nat:342> + <nat:162> \cdot <var:r> + <nat:186> \cdot <var:R> + <var:M> \cdot <nat:434> + <var:y> \cdot <nat:136> $ must be odd . \end{theorem} \begin{proof} We verify the summation $ <nat:175> + <nat:86> \times <var:I> + <nat:162> \times <var:r> + <nat:186> \times <var:R> + <nat:136> \times <var:y> + <nat:434> \times <var:M> + <nat:342> \times <var:F> $ is odd . We utilize that the formula $ <var:M> \cdot <nat:434> + <var:y> \cdot <nat:136> + <var:r> \cdot <nat:162> + <var:I> \cdot <nat:86> + <nat:175> + <var:F> \cdot <nat:342> + <var:R> \cdot <nat:186> $ is guaranteed to be odd from the fact $ <nat:342> * <var:F> + <nat:136> * <var:y> + <var:I> * <nat:86> + <nat:162> * <var:r> + <nat:434> * <var:M> + <nat:186> * <var:R> $ is known as even . In addition , the whole numbers $ <nat:342> $ , $ <nat:136> $ , $ <nat:86> $ , $ <nat:162> $ , $ <nat:434> $ , and $ <nat:186> $ must be even . So , the pairs $ <nat:342> \times <var:F> $ , $ <nat:136> \times <var:y> $ , $ <var:I> \times <nat:86> $ , $ <var:r> \times <nat:162> $ , $ <nat:434> \times <var:M> $ , plus $ <var:R> \times <nat:186> $ is guaranteed to be even as well . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:y> <var:I> <var:F> <var:M> <var:r> <var:R> : nat , Nat . odd ( <nat:86> * <var:I> + <nat:342> * <var:F> + <nat:162> * <var:r> + <nat:186> * <var:R> + <nat:434> * <var:M> + <nat:136> * <var:y> + <nat:175> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:342> = true ) . { auto . } assert ( <genH> : Nat . even <nat:136> = true ) . { auto . } assert ( <genH> : Nat . even <nat:86> = true ) . { auto . } assert ( <genH> : Nat . even <nat:162> = true ) . { auto . } assert ( <genH> : Nat . even <nat:434> = true ) . { auto . } assert ( <genH> : Nat . even <nat:186> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:342> * <var:F> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:136> * <var:y> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:86> * <var:I> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:162> * <var:r> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:434> * <var:M> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:186> * <var:R> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:86> * <var:I> + <nat:342> * <var:F> + <nat:162> * <var:r> + <nat:186> * <var:R> + <nat:434> * <var:M> + <nat:136> * <var:y> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . auto . Qed . 