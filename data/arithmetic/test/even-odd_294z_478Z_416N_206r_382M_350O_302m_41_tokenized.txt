\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:294> <var:z> + <nat:478> <var:Z> + <nat:41> + <nat:416> <var:N> + <nat:206> <var:r> + <nat:382> <var:M> + <nat:350> <var:O> + <nat:302> <var:m> $ is guaranteed to be odd assuming every positive integers $ <var:r> $ , $ <var:N> $ , $ <var:Z> $ , $ <var:z> $ , $ <var:O> $ , $ <var:M> $ , and $ <var:m> $ . \end{theorem} \begin{proof} Observe the leading terms $ <nat:294> $ , $ <nat:478> $ , $ <nat:416> $ , $ <nat:206> $ , $ <nat:382> $ , $ <nat:350> $ , and also $ <nat:302> $ are known as even elements of $ \mathbb{Z}^+ $ . For this reason , the pairs $ <var:z> \cdot <nat:294> $ , $ <var:Z> \cdot <nat:478> $ , $ <nat:416> \cdot <var:N> $ , $ <var:r> \cdot <nat:206> $ , $ <nat:382> \cdot <var:M> $ , $ <var:O> \cdot <nat:350> $ , in addition to $ <var:m> \cdot <nat:302> $ is even too . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:r> <var:N> <var:Z> <var:z> <var:O> <var:M> <var:m> : nat , Nat . odd ( <nat:294> * <var:z> + <nat:478> * <var:Z> + <nat:416> * <var:N> + <nat:206> * <var:r> + <nat:382> * <var:M> + <nat:350> * <var:O> + <nat:302> * <var:m> + <nat:41> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:294> = true ) . { auto . } assert ( <genH> : Nat . even <nat:478> = true ) . { auto . } assert ( <genH> : Nat . even <nat:416> = true ) . { auto . } assert ( <genH> : Nat . even <nat:206> = true ) . { auto . } assert ( <genH> : Nat . even <nat:382> = true ) . { auto . } assert ( <genH> : Nat . even <nat:350> = true ) . { auto . } assert ( <genH> : Nat . even <nat:302> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:294> * <var:z> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:478> * <var:Z> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:416> * <var:N> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:206> * <var:r> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:382> * <var:M> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:350> * <var:O> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:302> * <var:m> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 