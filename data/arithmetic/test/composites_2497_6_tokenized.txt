\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \newtheorem{definition}{Definition} \begin{document} \begin{definition} Allow $ <var:A> $ , $ <var:h> $ , $ <var:t> $ , $ <var:G> $ , $ <var:j> $ , $ <var:x> \in \mathbb{N} $ satisfying the condition that $ <var:A> $ , $ <var:x> $ , $ <var:t> $ , $ <var:G> $ , $ <var:h> $ , and $ <var:j> > <nat:1> $ . Let that $ <var:o> \in \mathbb{Z}^+ $ is a <def:six-composite> number when $ <var:x> \cdot <var:t> \cdot <var:j> \cdot <var:G> \cdot <var:h> \cdot <var:A> = <var:o> $ . \end{definition} \begin{theorem} $ <nat:90720> = <var:o> $ is a <def:six-composite> whole number . \end{theorem} \begin{proof} Recall that <nat:90720> is a <def:six-composite> number wherever it is the product between $ <var:t> $ , $ <var:h> $ , $ <var:x> $ , $ <var:j> $ , $ <var:G> $ , and $ <var:A> $ where $ <var:x> $ , $ <var:G> $ , $ <var:j> $ , $ <var:A> $ , $ <var:t> $ , $ <var:h> > <nat:1> $ . Let $ <var:h> = <nat:9> $ , $ <var:A> = <nat:10> $ , $ <var:t> = <nat:6> $ , $ <var:G> = <nat:2> $ , $ <var:x> = <nat:7> $ , $ <var:j> = <nat:12> $ . We justify <nat:90720> is a <def:six-composite> whole number on account of $ <nat:10> $ , $ <nat:6> $ , $ <nat:2> $ , $ <nat:7> $ , $ <nat:12> $ and $ <nat:9> $ are larger than <nat:1> . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:six-composite> ( <var:o> : nat ) := exists <var:A> <var:h> <var:t> <var:G> <var:j> <var:x> : nat , ( <var:A> > <nat:1> ) /\ ( <var:x> > <nat:1> ) /\ ( <var:t> > <nat:1> ) /\ ( <var:G> > <nat:1> ) /\ ( <var:h> > <nat:1> ) /\ ( <var:j> > <nat:1> ) /\ ( <var:x> * <var:t> * <var:j> * <var:G> * <var:h> * <var:A> = <var:o> ) . Theorem <genP:1> : <def:six-composite> <nat:90720> . Proof . unfold <def:six-composite> . exists <nat:10> . exists <nat:9> . exists <nat:6> . exists <nat:2> . exists <nat:12> . exists <nat:7> . assert ( <genH> : <nat:10> > <nat:1> ) . { lia . } assert ( <genH> : <nat:6> > <nat:1> ) . { lia . } assert ( <genH> : <nat:2> > <nat:1> ) . { lia . } assert ( <genH> : <nat:7> > <nat:1> ) . { lia . } assert ( <genH> : <nat:12> > <nat:1> ) . { lia . } assert ( <genH> : <nat:9> > <nat:1> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 