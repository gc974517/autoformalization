\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:208> * <var:s> + <var:a> * <nat:348> + <nat:336> * <var:t> + <nat:244> + <nat:30> * <var:V> + <var:C> * <nat:72> + <nat:416> * <var:y> + <nat:88> * <var:U> + <nat:140> * <var:Y> + <nat:150> * <var:q> + <var:O> * <nat:78> $ will be even . \end{theorem} \begin{proof} The adding of even numbers concurrently will be trivially an even positive integer . Recall $ <nat:244> $ is an even whole number . Notice that the coefficients $ <nat:416> $ , $ <nat:72> $ , $ <nat:208> $ , $ <nat:88> $ , $ <nat:78> $ , in addition to $ <nat:140> $ are guaranteed to be even numbers in $ \mathbb{N} $ In addition to this , remember the positive integer $ <nat:348> $ is known to be an even integer Furthermore , notice the numbers $ <nat:30> $ and moreover $ <nat:336> $ are known to be even The positive integer $ <nat:150> $ is known as an even number in $ \mathbb{Z}^+ $ \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:s> <var:a> <var:t> <var:V> <var:C> <var:y> <var:U> <var:Y> <var:q> <var:O> : nat , Nat . even ( <nat:208> * <var:s> + <nat:348> * <var:a> + <nat:336> * <var:t> + <nat:30> * <var:V> + <nat:72> * <var:C> + <nat:416> * <var:y> + <nat:88> * <var:U> + <nat:140> * <var:Y> + <nat:150> * <var:q> + <nat:78> * <var:O> + <nat:244> ) = true . Proof . intros . repeat rewrite Nat . even_add . assert ( <genH> : Nat . even <nat:244> = true ) . { auto . } assert ( <genH> : Nat . even <nat:416> = true ) . { auto . } assert ( <genH> : Nat . even <nat:72> = true ) . { auto . } assert ( <genH> : Nat . even <nat:208> = true ) . { auto . } assert ( <genH> : Nat . even <nat:88> = true ) . { auto . } assert ( <genH> : Nat . even <nat:78> = true ) . { auto . } assert ( <genH> : Nat . even <nat:140> = true ) . { auto . } assert ( <genH> : Nat . even <nat:348> = true ) . { auto . } assert ( <genH> : Nat . even <nat:30> = true ) . { auto . } assert ( <genH> : Nat . even <nat:336> = true ) . { auto . } assert ( <genH> : Nat . even <nat:150> = true ) . { auto . } repeat rewrite Nat . even_mul . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 