\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Taking integers $ <var:H> $ , $ <var:Z> $ , and $ <var:z> $ the formula $ <nat:339> + <var:Z> * <nat:134> + <var:z> * <nat:28> + <nat:320> * <var:H> $ is guaranteed to be odd . \end{theorem} \begin{proof} The theorem is true from the fact $ <nat:320> \cdot <var:H> + <nat:134> \cdot <var:Z> + <var:z> \cdot <nat:28> $ is even , since the addition of an even positive integer and an even whole number is by definition an even number in $ \mathbb{N} $ . See the product $ <nat:320> <var:H> $ is known as an even natural number . Notice $ <var:Z> <nat:134> $ is obviously even as a consequence that taking the product of an even natural and an arbitrary integer must be an even number in $ \mathbb{N} $ . Observe the product $ <nat:28> <var:z> $ is clearly an even number in $ \mathbb{N} $ from the fact multiplying between an even whole number with a whole number is even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:H> <var:Z> <var:z> : nat , Nat . odd ( <nat:134> * <var:Z> + <nat:28> * <var:z> + <nat:320> * <var:H> + <nat:339> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:320> * <var:H> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:134> * <var:Z> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:28> * <var:z> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:134> * <var:Z> + <nat:28> * <var:z> + <nat:320> * <var:H> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . auto . Qed . 