\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Define that with the condition that $ \exists <var:n> $ , $ <var:V> $ , $ <var:K> $ , $ <var:l> $ , $ <var:b> $ , $ <var:O> $ , $ <var:x> $ , $ <var:M> $ , $ <var:s> \in \mathbb{Z}^+ $ then we assume that some whole number $ <var:L> $ will be considered as a <def:nine-composite> natural number assuming $ <var:s> * <var:n> * <var:M> * <var:l> * <var:V> * <var:O> * <var:K> * <var:b> * <var:x> = <var:L> $ . Accordingly $ <var:L> = <nat:13837824> $ is a <def:nine-composite> integer . \end{theorem} \begin{proof} Remember <nat:13837824> is a <def:nine-composite> whole number with the condition it is the product of whole numbers $ <var:n> $ , $ <var:b> $ , $ <var:x> $ , $ <var:l> $ , $ <var:V> $ , $ <var:K> $ , $ <var:s> $ , $ <var:M> $ , and $ <var:O> $ larger than <nat:1> . Allow $ <var:O> = <nat:2> $ , $ <var:l> = <nat:7> $ , $ <var:b> = <nat:4> $ , $ <var:s> = <nat:12> $ , $ <var:x> = <nat:8> $ , $ <var:n> = <nat:6> $ , $ <var:K> = <nat:3> $ , $ <var:V> = <nat:11> $ and $ <var:M> = <nat:13> $ . We confirm <nat:13837824> is <def:nine-composite> . We demonstrate the theorem holds for $ <nat:6> \cdot <nat:2> \cdot <nat:4> \cdot <nat:12> \cdot <nat:13> \cdot <nat:7> \cdot <nat:8> \cdot <nat:3> \cdot <nat:11> = <nat:13837824> = <var:n> \cdot <var:O> \cdot <var:b> \cdot <var:s> \cdot <var:M> \cdot <var:l> \cdot <var:x> \cdot <var:K> \cdot <var:V> $ . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:nine-composite> ( <var:L> : nat ) := exists <var:n> <var:V> <var:K> <var:l> <var:b> <var:O> <var:x> <var:M> <var:s> : nat , ( <var:s> * <var:n> * <var:M> * <var:l> * <var:V> * <var:O> * <var:K> * <var:b> * <var:x> = <var:L> ) . Theorem <genP:1> : <def:nine-composite> <nat:13837824> . Proof . unfold <def:nine-composite> . exists <nat:6> . exists <nat:11> . exists <nat:3> . exists <nat:7> . exists <nat:4> . exists <nat:2> . exists <nat:8> . exists <nat:13> . exists <nat:12> . repeat split . all : lia . Qed . 