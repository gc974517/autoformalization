\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:Q> \cdot <nat:166> + <var:E> \cdot <nat:406> + <nat:279> + <nat:100> \cdot <var:i> + <nat:268> \cdot <var:S> + <var:C> \cdot <nat:452> + <nat:220> \cdot <var:W> + <nat:402> \cdot <var:A> + <var:r> \cdot <nat:228> + <nat:310> \cdot <var:G> $ must be odd . \end{theorem} \begin{proof} We apply $ <var:E> <nat:406> + <nat:452> <var:C> + <nat:310> <var:G> + <nat:268> <var:S> + <var:W> <nat:220> + <var:i> <nat:100> + <var:A> <nat:402> + <nat:228> <var:r> + <nat:279> + <var:Q> <nat:166> $ is clearly odd by reason that $ <var:S> * <nat:268> + <nat:402> * <var:A> + <var:r> * <nat:228> + <var:G> * <nat:310> + <nat:166> * <var:Q> + <nat:220> * <var:W> + <var:E> * <nat:406> + <nat:452> * <var:C> + <nat:100> * <var:i> $ is trivially even . Additionally , remember that the pairs $ <nat:268> <var:S> $ , $ <nat:402> <var:A> $ , $ <var:r> <nat:228> $ , $ <nat:310> <var:G> $ , $ <var:Q> <nat:166> $ , $ <var:W> <nat:220> $ , $ <nat:406> <var:E> $ , $ <nat:452> <var:C> $ , as well as $ <nat:100> <var:i> $ are clearly even elements of $ \mathbb{N} $ by reason that the whole numbers $ <nat:268> $ , $ <nat:402> $ , $ <nat:228> $ , $ <nat:310> $ , $ <nat:166> $ , $ <nat:220> $ , $ <nat:406> $ , $ <nat:452> $ , plus $ <nat:100> $ are guaranteed to be even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:Q> <var:E> <var:i> <var:S> <var:C> <var:W> <var:A> <var:r> <var:G> : nat , Nat . odd ( <nat:166> * <var:Q> + <nat:406> * <var:E> + <nat:100> * <var:i> + <nat:268> * <var:S> + <nat:452> * <var:C> + <nat:220> * <var:W> + <nat:402> * <var:A> + <nat:228> * <var:r> + <nat:310> * <var:G> + <nat:279> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:268> = true ) . { auto . } assert ( <genH> : Nat . even <nat:402> = true ) . { auto . } assert ( <genH> : Nat . even <nat:228> = true ) . { auto . } assert ( <genH> : Nat . even <nat:310> = true ) . { auto . } assert ( <genH> : Nat . even <nat:166> = true ) . { auto . } assert ( <genH> : Nat . even <nat:220> = true ) . { auto . } assert ( <genH> : Nat . even <nat:406> = true ) . { auto . } assert ( <genH> : Nat . even <nat:452> = true ) . { auto . } assert ( <genH> : Nat . even <nat:100> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:268> * <var:S> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:402> * <var:A> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:228> * <var:r> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:310> * <var:G> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:166> * <var:Q> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:220> * <var:W> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:406> * <var:E> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:452> * <var:C> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:100> * <var:i> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:166> * <var:Q> + <nat:406> * <var:E> + <nat:100> * <var:i> + <nat:268> * <var:S> + <nat:452> * <var:C> + <nat:220> * <var:W> + <nat:402> * <var:A> + <nat:228> * <var:r> + <nat:310> * <var:G> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . auto . Qed . 