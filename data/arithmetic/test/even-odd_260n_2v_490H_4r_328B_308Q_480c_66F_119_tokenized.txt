\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Assuming natural numbers $ <var:c> $ , $ <var:H> $ , $ <var:n> $ , $ <var:F> $ , $ <var:Q> $ , $ <var:r> $ , $ <var:B> $ , and $ <var:v> $ the sum $ <nat:480> \cdot <var:c> + <var:H> \cdot <nat:490> + <var:r> \cdot <nat:4> + <var:v> \cdot <nat:2> + <var:Q> \cdot <nat:308> + <nat:119> + <nat:260> \cdot <var:n> + <nat:328> \cdot <var:B> + <nat:66> \cdot <var:F> $ is guaranteed to be odd . \end{theorem} \begin{proof} It can be shown that the main result is true . Our result must be true since $ <nat:260> <var:n> + <nat:2> <var:v> + <var:H> <nat:490> + <nat:4> <var:r> + <var:B> <nat:328> + <var:Q> <nat:308> + <var:c> <nat:480> + <var:F> <nat:66> $ is known as even . See the pairs $ <var:Q> <nat:308> $ , $ <nat:4> <var:r> $ , $ <var:H> <nat:490> $ , in addition to $ <nat:66> <var:F> $ are known to be even . Remember the term $ <var:c> <nat:480> $ is clearly an even natural . This fact is proven from the fact the multiplication of an even number and a number in $ \mathbb{Z}^+ $ must be even . Building on , $ <var:B> <nat:328> $ is known as even . Furthermore , notice that the pair $ <nat:260> <var:n> $ is known to be an even positive integer . The product $ <var:v> <nat:2> $ is guaranteed to be even because taking the product of an even number and a positive integer will be even . From the fact taking the product of even whole numbers with any number in $ \mathbb{Z}^+ $ is guaranteed to be even our main result must be true . We know the summing of an even number and an odd element of $ \mathbb{Z}^+ $ must be by definition an odd natural . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:c> <var:H> <var:n> <var:F> <var:Q> <var:r> <var:B> <var:v> : nat , Nat . odd ( <nat:480> * <var:c> + <nat:490> * <var:H> + <nat:4> * <var:r> + <nat:2> * <var:v> + <nat:308> * <var:Q> + <nat:260> * <var:n> + <nat:328> * <var:B> + <nat:66> * <var:F> + <nat:119> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:308> * <var:Q> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:4> * <var:r> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:490> * <var:H> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:66> * <var:F> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:480> * <var:c> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:328> * <var:B> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:260> * <var:n> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:2> * <var:v> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:480> * <var:c> + <nat:490> * <var:H> + <nat:4> * <var:r> + <nat:2> * <var:v> + <nat:308> * <var:Q> + <nat:260> * <var:n> + <nat:328> * <var:B> + <nat:66> * <var:F> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . auto . Qed . 