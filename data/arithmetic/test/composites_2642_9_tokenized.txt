\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} With the condition there are $ <var:w> $ , $ <var:O> $ , $ <var:m> $ , $ <var:Q> $ , $ <var:f> $ , $ <var:n> $ , $ <var:P> $ , $ <var:h> $ , $ <var:N> \in \mathbb{Z}^+ $ more than or equal to <nat:2> . Take as given that some whole number $ <var:L> $ is a <def:nine-composite> integer given $ <var:L> = <var:Q> * <var:m> * <var:O> * <var:w> * <var:P> * <var:f> * <var:N> * <var:h> * <var:n> $ . Then $ <nat:9266400> = <var:L> $ is a <def:nine-composite> positive integer . \end{theorem} \begin{proof} Recall that <nat:9266400> is a <def:nine-composite> integer with the condition <nat:9266400> is the multiplication of natural numbers $ <var:f> $ , $ <var:w> $ , $ <var:Q> $ , $ <var:N> $ , $ <var:n> $ , $ <var:h> $ , $ <var:P> $ , $ <var:O> $ , and $ <var:m> $ more than or equal to <nat:2> . We confirm <nat:9266400> is a <def:nine-composite> positive integer for $ <nat:4> $ , $ <nat:9> $ , $ <nat:11> $ , $ <nat:13> $ , $ <nat:3> $ , $ <nat:6> $ , $ <nat:5> $ , $ <nat:10> $ , $ <nat:2> \geq <nat:2> $ as well as for $ <var:N> \times <var:n> \times <var:f> \times <var:Q> \times <var:m> \times <var:O> \times <var:w> \times <var:P> \times <var:h> = <nat:9266400> $ indicates $ <var:f> = <nat:9> $ , $ <var:w> = <nat:10> $ , $ <var:O> = <nat:13> $ , $ <var:Q> = <nat:5> $ , $ <var:N> = <nat:3> $ , $ <var:m> = <nat:2> $ , $ <var:n> = <nat:6> $ , $ <var:P> = <nat:4> $ , $ <var:h> = <nat:11> $ . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:nine-composite> ( <var:L> : nat ) := exists <var:w> <var:O> <var:m> <var:Q> <var:f> <var:n> <var:P> <var:h> <var:N> : nat , ( <var:w> >= <nat:2> ) /\ ( <var:O> >= <nat:2> ) /\ ( <var:m> >= <nat:2> ) /\ ( <var:Q> >= <nat:2> ) /\ ( <var:f> >= <nat:2> ) /\ ( <var:n> >= <nat:2> ) /\ ( <var:P> >= <nat:2> ) /\ ( <var:h> >= <nat:2> ) /\ ( <var:N> >= <nat:2> ) /\ ( <var:L> = <var:Q> * <var:m> * <var:O> * <var:w> * <var:P> * <var:f> * <var:N> * <var:h> * <var:n> ) . Theorem <genP:1> : <def:nine-composite> <nat:9266400> . Proof . unfold <def:nine-composite> . assert ( <genH> : <nat:4> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:9> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:11> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:13> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:3> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:6> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:5> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:10> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:2> >= <nat:2> ) . { lia . } exists <nat:10> . exists <nat:13> . exists <nat:2> . exists <nat:5> . exists <nat:9> . exists <nat:6> . exists <nat:4> . exists <nat:11> . exists <nat:3> . repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 