\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Given any variables $ <var:Q> $ , $ <var:e> $ , $ <var:k> $ , $ <var:X> $ , $ <var:T> $ , $ <var:z> $ , and $ <var:I> $ the sum $ <nat:200> * <var:X> + <nat:194> + <nat:246> * <var:z> + <nat:146> * <var:I> + <var:k> * <nat:434> + <var:Q> * <nat:280> + <var:e> * <nat:298> + <nat:392> * <var:T> $ will be even . \end{theorem} \begin{proof} We demonstrate the expression $ <nat:194> + <var:I> * <nat:146> + <nat:298> * <var:e> + <var:T> * <nat:392> + <nat:200> * <var:X> + <nat:434> * <var:k> + <nat:246> * <var:z> + <nat:280> * <var:Q> $ is even . Remember that $ <nat:194> $ is known to be even . The positive integers $ <nat:146> $ , $ <nat:298> $ , $ <nat:392> $ , $ <nat:200> $ , $ <nat:434> $ , $ <nat:246> $ , plus $ <nat:280> $ are obviously even natural numbers . As a consequence , the pairs $ <nat:146> <var:I> $ , $ <var:e> <nat:298> $ , $ <nat:392> <var:T> $ , $ <nat:200> <var:X> $ , $ <var:k> <nat:434> $ , $ <var:z> <nat:246> $ , and also $ <nat:280> <var:Q> $ must be even additionally . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:Q> <var:e> <var:k> <var:X> <var:T> <var:z> <var:I> : nat , Nat . even ( <nat:200> * <var:X> + <nat:246> * <var:z> + <nat:146> * <var:I> + <nat:434> * <var:k> + <nat:280> * <var:Q> + <nat:298> * <var:e> + <nat:392> * <var:T> + <nat:194> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:194> = true ) . { auto . } assert ( <genH> : Nat . even <nat:146> = true ) . { auto . } assert ( <genH> : Nat . even <nat:298> = true ) . { auto . } assert ( <genH> : Nat . even <nat:392> = true ) . { auto . } assert ( <genH> : Nat . even <nat:200> = true ) . { auto . } assert ( <genH> : Nat . even <nat:434> = true ) . { auto . } assert ( <genH> : Nat . even <nat:246> = true ) . { auto . } assert ( <genH> : Nat . even <nat:280> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:146> * <var:I> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:298> * <var:e> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:392> * <var:T> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:200> * <var:X> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:434> * <var:k> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:246> * <var:z> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:280> * <var:Q> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 