\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Using every positive terms $ <var:l> $ , $ <var:P> $ , and $ <var:o> $ the expression $ <nat:94> * <var:o> + <nat:491> + <nat:404> * <var:P> + <var:l> * <nat:90> $ is odd . \end{theorem} \begin{proof} Notice $ <nat:491> $ is odd . We check the summation $ <var:P> \times <nat:404> + <nat:491> + <var:o> \times <nat:94> + <nat:90> \times <var:l> $ is guaranteed to be odd . Our result is true from the fact $ <nat:404> <var:P> + <var:l> <nat:90> + <var:o> <nat:94> $ is known as even . Recall the totaling between even positive integers successively and an even element of $ \mathbb{Z}^+ $ is even . Notice the terms $ <var:o> \times <nat:94> $ in addition to $ <var:P> \times <nat:404> $ are obviously even whole numbers since taking the product between an even number in $ \mathbb{Z}^+ $ and an arbitrary integer is guaranteed to be an even number in $ \mathbb{N} $ . The term $ <nat:90> \times <var:l> $ is obviously an even number in $ \mathbb{Z}^+ $ . This fact holds from the knowledge multiplying between an even number in $ \mathbb{N} $ with a natural is even . and moreover by reason that taking the product between even whole numbers with an arbitrary number in $ \mathbb{Z}^+ $ is an even positive integer our main result is true . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:l> <var:P> <var:o> : nat , Nat . odd ( <nat:94> * <var:o> + <nat:404> * <var:P> + <nat:90> * <var:l> + <nat:491> ) = true . Proof . intros . assert ( <genH> : Nat . odd <nat:491> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:94> * <var:o> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:404> * <var:P> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:90> * <var:l> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:94> * <var:o> + <nat:404> * <var:P> + <nat:90> * <var:l> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . rewrite <genH> . auto . Qed . 