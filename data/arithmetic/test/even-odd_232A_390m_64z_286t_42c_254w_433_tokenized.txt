\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:286> \cdot <var:t> + <var:A> \cdot <nat:232> + <var:c> \cdot <nat:42> + <nat:433> + <var:w> \cdot <nat:254> + <var:z> \cdot <nat:64> + <nat:390> \cdot <var:m> $ will be odd assuming any $ <var:w> $ , $ <var:m> $ , $ <var:A> $ , $ <var:t> $ , $ <var:c> $ , and $ <var:z> \in \mathbb{N} $ . \end{theorem} \begin{proof} We demonstrate that the sum $ <nat:232> \cdot <var:A> + <var:m> \cdot <nat:390> + <nat:64> \cdot <var:z> + <var:t> \cdot <nat:286> + <nat:42> \cdot <var:c> + <var:w> \cdot <nat:254> $ is guaranteed to be even . Remember that the adding between even numbers concurrently and an even element of $ \mathbb{Z}^+ $ is even . Observe the products $ <nat:390> \times <var:m> $ , $ <var:c> \times <nat:42> $ , $ <var:w> \times <nat:254> $ , $ <nat:232> \times <var:A> $ , and likewise $ <var:t> \times <nat:286> $ are known to be even . Take note the pair $ <nat:64> \times <var:z> $ is clearly an even whole number . Take note the adding of even natural numbers successively with an odd whole number will be odd . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:w> <var:m> <var:A> <var:t> <var:c> <var:z> : nat , Nat . odd ( <nat:286> * <var:t> + <nat:232> * <var:A> + <nat:42> * <var:c> + <nat:254> * <var:w> + <nat:64> * <var:z> + <nat:390> * <var:m> + <nat:433> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:390> * <var:m> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:42> * <var:c> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:254> * <var:w> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:232> * <var:A> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:286> * <var:t> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:64> * <var:z> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:286> * <var:t> + <nat:232> * <var:A> + <nat:42> * <var:c> + <nat:254> * <var:w> + <nat:64> * <var:z> + <nat:390> * <var:m> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . auto . Qed . 