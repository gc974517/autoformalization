\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Taking all whole numbers $ <var:c> $ , $ <var:L> $ , $ <var:N> $ , $ <var:A> $ , and $ <var:C> $ the summation $ <nat:396> <var:N> + <var:L> <nat:140> + <var:c> <nat:484> + <nat:110> <var:A> + <nat:334> <var:C> + <nat:431> $ must be odd . \end{theorem} \begin{proof} Take note the products $ <nat:396> <var:N> $ , $ <nat:140> <var:L> $ , $ <nat:484> <var:c> $ , $ <nat:110> <var:A> $ , $ <var:C> <nat:334> $ , are guaranteed to be even . This fact holds from the fact the whole numbers $ <nat:396> $ , $ <nat:140> $ , $ <nat:484> $ , $ <nat:110> $ , $ <nat:334> $ , are guaranteed to be even numbers . We check $ <nat:431> + <nat:334> \times <var:C> + <nat:396> \times <var:N> + <var:A> \times <nat:110> + <nat:484> \times <var:c> + <nat:140> \times <var:L> $ will be odd . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:c> <var:L> <var:N> <var:A> <var:C> : nat , Nat . odd ( <nat:396> * <var:N> + <nat:140> * <var:L> + <nat:484> * <var:c> + <nat:110> * <var:A> + <nat:334> * <var:C> + <nat:431> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:396> = true ) . { auto . } assert ( <genH> : Nat . even <nat:140> = true ) . { auto . } assert ( <genH> : Nat . even <nat:484> = true ) . { auto . } assert ( <genH> : Nat . even <nat:110> = true ) . { auto . } assert ( <genH> : Nat . even <nat:334> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:396> * <var:N> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:140> * <var:L> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:484> * <var:c> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:110> * <var:A> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:334> * <var:C> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 