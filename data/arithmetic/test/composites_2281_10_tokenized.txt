\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \newtheorem{definition}{Definition} \begin{document} \begin{definition} There are $ <var:Q> $ , $ <var:R> $ , $ <var:a> $ , $ <var:d> $ , $ <var:O> $ , $ <var:X> $ , $ <var:m> $ , $ <var:i> $ , $ <var:G> $ , $ <var:F> \in \mathbb{N} $ so that $ <var:d> $ , $ <var:R> $ , $ <var:O> $ , $ <var:X> $ , $ <var:m> $ , $ <var:i> $ , $ <var:a> $ , $ <var:F> $ , $ <var:G> $ and $ <var:Q> \geq <nat:2> $ . We denote that $ <var:t> \in \mathbb{N} $ is called a <def:ten-composite> integer when $ <var:F> * <var:a> * <var:R> * <var:i> * <var:Q> * <var:X> * <var:O> * <var:G> * <var:m> * <var:d> = <var:t> $ . \end{definition} \begin{theorem} $ <var:t> = <nat:56609280> $ is a <def:ten-composite> positive integer . \end{theorem} \begin{proof} Let $ <var:O> = <nat:13> $ , $ <var:m> = <nat:8> $ , $ <var:i> = <nat:12> $ , $ <var:R> = <nat:5> $ , $ <var:Q> = <nat:9> $ , $ <var:F> = <nat:6> $ , $ <var:a> = <nat:7> $ , $ <var:d> = <nat:2> $ , $ <var:X> = <nat:3> $ , and $ <var:G> = <nat:4> $ . We demonstrate $ <nat:56609280> = <var:Q> * <var:G> * <var:X> * <var:F> * <var:a> * <var:R> * <var:i> * <var:O> * <var:d> * <var:m> $ . Notice $ <var:d> = <nat:2> $ , $ <var:m> = <nat:8> $ , $ <var:R> = <nat:5> $ , $ <var:F> = <nat:6> $ , $ <var:a> = <nat:7> $ , $ <var:O> = <nat:13> $ , $ <var:i> = <nat:12> $ , $ <var:X> = <nat:3> $ , $ <var:G> = <nat:4> $ and $ <var:Q> = <nat:9> $ are greater than or equal to <nat:2> . In addition notice also $ <nat:4> \cdot <nat:3> \cdot <nat:8> \cdot <nat:6> \cdot <nat:2> \cdot <nat:7> \cdot <nat:5> \cdot <nat:9> \cdot <nat:12> \cdot <nat:13> = <nat:56609280> $ . This gives the statement is valid . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:ten-composite> ( <var:t> : nat ) := exists <var:Q> <var:R> <var:a> <var:d> <var:O> <var:X> <var:m> <var:i> <var:G> <var:F> : nat , ( <var:d> >= <nat:2> ) /\ ( <var:R> >= <nat:2> ) /\ ( <var:O> >= <nat:2> ) /\ ( <var:X> >= <nat:2> ) /\ ( <var:m> >= <nat:2> ) /\ ( <var:i> >= <nat:2> ) /\ ( <var:a> >= <nat:2> ) /\ ( <var:F> >= <nat:2> ) /\ ( <var:G> >= <nat:2> ) /\ ( <var:Q> >= <nat:2> ) /\ ( <var:F> * <var:a> * <var:R> * <var:i> * <var:Q> * <var:X> * <var:O> * <var:G> * <var:m> * <var:d> = <var:t> ) . Theorem <genP:1> : <def:ten-composite> <nat:56609280> . Proof . unfold <def:ten-composite> . exists <nat:9> . exists <nat:5> . exists <nat:7> . exists <nat:2> . exists <nat:13> . exists <nat:3> . exists <nat:8> . exists <nat:12> . exists <nat:4> . exists <nat:6> . assert ( <genH> : <nat:2> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:8> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:5> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:6> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:7> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:13> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:12> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:3> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:4> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:9> >= <nat:2> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 