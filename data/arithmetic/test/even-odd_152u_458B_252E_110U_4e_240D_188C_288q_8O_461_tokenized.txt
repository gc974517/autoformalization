\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:252> \times <var:E> + <var:U> \times <nat:110> + <nat:458> \times <var:B> + <var:e> \times <nat:4> + <nat:461> + <nat:8> \times <var:O> + <nat:152> \times <var:u> + <var:C> \times <nat:188> + <nat:240> \times <var:D> + <nat:288> \times <var:q> $ is guaranteed to be odd . \end{theorem} \begin{proof} Remember that $ <nat:461> $ is clearly odd . The adding between even naturals successively and an odd whole number will be an odd element of $ \mathbb{Z}^+ $ . $ <var:U> * <nat:110> + <nat:4> * <var:e> + <var:O> * <nat:8> + <var:q> * <nat:288> + <var:E> * <nat:252> + <nat:152> * <var:u> + <nat:240> * <var:D> + <var:B> * <nat:458> + <var:C> * <nat:188> + <nat:461> $ is obviously odd because the formula $ <nat:152> * <var:u> + <nat:458> * <var:B> + <nat:252> * <var:E> + <nat:110> * <var:U> + <nat:4> * <var:e> + <nat:240> * <var:D> + <nat:188> * <var:C> + <var:q> * <nat:288> + <var:O> * <nat:8> $ is known to be even . Take note the summation of an even element of $ \mathbb{N} $ with an even positive integer is an even number in $ \mathbb{Z}^+ $ . The positive integers $ <nat:252> $ and also $ <nat:458> $ are obviously even numbers in $ \mathbb{Z}^+ $ Recall the integer $ <nat:188> $ is trivially even Likewise , see that the coefficients $ <nat:8> $ , $ <nat:4> $ , and moreover $ <nat:240> $ are clearly even The integers $ <nat:152> $ and $ <nat:110> $ are guaranteed to be even We know that the natural number $ <nat:288> $ is guaranteed to be an even integer \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:E> <var:U> <var:B> <var:e> <var:O> <var:u> <var:C> <var:D> <var:q> : nat , Nat . odd ( <nat:252> * <var:E> + <nat:110> * <var:U> + <nat:458> * <var:B> + <nat:4> * <var:e> + <nat:8> * <var:O> + <nat:152> * <var:u> + <nat:188> * <var:C> + <nat:240> * <var:D> + <nat:288> * <var:q> + <nat:461> ) = true . Proof . intros . assert ( <genH> : Nat . odd <nat:461> = true ) . { auto . } rewrite Nat . odd_add . assert ( <genH> : Nat . even <nat:252> = true ) . { auto . } assert ( <genH> : Nat . even <nat:458> = true ) . { auto . } assert ( <genH> : Nat . even <nat:188> = true ) . { auto . } assert ( <genH> : Nat . even <nat:8> = true ) . { auto . } assert ( <genH> : Nat . even <nat:4> = true ) . { auto . } assert ( <genH> : Nat . even <nat:240> = true ) . { auto . } assert ( <genH> : Nat . even <nat:152> = true ) . { auto . } assert ( <genH> : Nat . even <nat:110> = true ) . { auto . } assert ( <genH> : Nat . even <nat:288> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:252> * <var:E> + <nat:110> * <var:U> + <nat:458> * <var:B> + <nat:4> * <var:e> + <nat:8> * <var:O> + <nat:152> * <var:u> + <nat:188> * <var:C> + <nat:240> * <var:D> + <nat:288> * <var:q> ) = true ) . { repeat rewrite Nat . even_add . repeat rewrite Nat . even_mul . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite <- Nat . negb_even . rewrite <genH> . rewrite <genH> . auto . Qed . 