\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \newtheorem{definition}{Definition} \begin{document} \begin{definition} Assume $ <var:A> $ , $ <var:a> $ , $ <var:Y> $ , $ <var:o> $ , $ <var:m> $ , $ <var:w> $ , $ <var:l> $ as whole numbers where $ <var:l> $ , $ <var:w> $ , $ <var:A> $ , $ <var:o> $ , $ <var:m> $ , $ <var:Y> $ , $ <var:a> \geq <nat:2> $ . Define that $ <var:E> \in \mathbb{N} $ is said to be a <def:seven-composite> natural number if $ <var:Y> \cdot <var:a> \cdot <var:o> \cdot <var:l> \cdot <var:m> \cdot <var:w> \cdot <var:A> = <var:E> $ . \end{definition} \begin{theorem} The number <nat:982800> is a <def:seven-composite> positive integer . \end{theorem} \begin{proof} Remember that <nat:982800> is a <def:seven-composite> natural number iff <nat:982800> is the multiplication of integers $ <var:w> $ , $ <var:A> $ , $ <var:l> $ , $ <var:m> $ , $ <var:a> $ , $ <var:o> $ , $ <var:Y> $ larger than or equal to <nat:2> . Note that $ <nat:982800> = <var:Y> \times <var:w> \times <var:l> \times <var:A> \times <var:a> \times <var:o> \times <var:m> $ hints $ <var:o> = <nat:10> $ , $ <var:A> = <nat:6> $ , $ <var:a> = <nat:7> $ , $ <var:w> = <nat:4> $ , $ <var:Y> = <nat:9> $ , $ <var:l> = <nat:13> $ , $ <var:m> = <nat:5> $ . Additionally note $ <nat:9> $ , $ <nat:10> $ , $ <nat:6> $ , $ <nat:4> $ , $ <nat:5> $ , $ <nat:13> $ , and $ <nat:7> $ are more than or equivalent to <nat:2> . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:seven-composite> ( <var:E> : nat ) := exists <var:A> <var:a> <var:Y> <var:o> <var:m> <var:w> <var:l> : nat , ( <var:l> >= <nat:2> ) /\ ( <var:w> >= <nat:2> ) /\ ( <var:A> >= <nat:2> ) /\ ( <var:o> >= <nat:2> ) /\ ( <var:m> >= <nat:2> ) /\ ( <var:Y> >= <nat:2> ) /\ ( <var:a> >= <nat:2> ) /\ ( <var:Y> * <var:a> * <var:o> * <var:l> * <var:m> * <var:w> * <var:A> = <var:E> ) . Theorem <genP:1> : <def:seven-composite> <nat:982800> . Proof . unfold <def:seven-composite> . exists <nat:6> . exists <nat:7> . exists <nat:9> . exists <nat:10> . exists <nat:5> . exists <nat:4> . exists <nat:13> . assert ( <genH> : <nat:9> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:10> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:6> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:4> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:5> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:13> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:7> >= <nat:2> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 