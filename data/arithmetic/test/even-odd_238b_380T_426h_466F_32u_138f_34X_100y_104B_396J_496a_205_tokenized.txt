\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Given natural numbers $ <var:f> $ , $ <var:F> $ , $ <var:T> $ , $ <var:y> $ , $ <var:J> $ , $ <var:b> $ , $ <var:X> $ , $ <var:B> $ , $ <var:u> $ , $ <var:a> $ , and $ <var:h> $ the expression $ <nat:238> * <var:b> + <nat:380> * <var:T> + <nat:205> + <var:h> * <nat:426> + <nat:466> * <var:F> + <nat:32> * <var:u> + <nat:138> * <var:f> + <var:X> * <nat:34> + <var:y> * <nat:100> + <nat:104> * <var:B> + <nat:396> * <var:J> + <var:a> * <nat:496> $ must be odd . \end{theorem} \begin{proof} Take note that the numbers $ <nat:238> $ , $ <nat:100> $ , $ <nat:496> $ , $ <nat:34> $ , $ <nat:426> $ , $ <nat:104> $ , $ <nat:138> $ , $ <nat:466> $ , and likewise $ <nat:32> $ must be even numbers Further , the leading term $ <nat:396> $ is an even integer Notice that the coefficient $ <nat:380> $ is guaranteed to be even The summation between an even element of $ \mathbb{Z}^+ $ and an odd number in $ \mathbb{N} $ must be odd . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:f> <var:F> <var:T> <var:y> <var:J> <var:b> <var:X> <var:B> <var:u> <var:a> <var:h> : nat , Nat . odd ( <nat:238> * <var:b> + <nat:380> * <var:T> + <nat:426> * <var:h> + <nat:466> * <var:F> + <nat:32> * <var:u> + <nat:138> * <var:f> + <nat:34> * <var:X> + <nat:100> * <var:y> + <nat:104> * <var:B> + <nat:396> * <var:J> + <nat:496> * <var:a> + <nat:205> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:238> = true ) . { auto . } assert ( <genH> : Nat . even <nat:100> = true ) . { auto . } assert ( <genH> : Nat . even <nat:496> = true ) . { auto . } assert ( <genH> : Nat . even <nat:34> = true ) . { auto . } assert ( <genH> : Nat . even <nat:426> = true ) . { auto . } assert ( <genH> : Nat . even <nat:104> = true ) . { auto . } assert ( <genH> : Nat . even <nat:138> = true ) . { auto . } assert ( <genH> : Nat . even <nat:466> = true ) . { auto . } assert ( <genH> : Nat . even <nat:32> = true ) . { auto . } assert ( <genH> : Nat . even <nat:396> = true ) . { auto . } assert ( <genH> : Nat . even <nat:380> = true ) . { auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . repeat rewrite Nat . even_mul . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 