\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:266> * <var:W> + <nat:406> * <var:S> + <var:x> * <nat:300> + <nat:163> + <var:P> * <nat:36> + <nat:440> * <var:H> + <nat:200> * <var:D> + <var:t> * <nat:344> $ is guaranteed to be odd for any whole numbers $ <var:x> $ , $ <var:D> $ , $ <var:H> $ , $ <var:t> $ , $ <var:S> $ , $ <var:P> $ , and $ <var:W> $ . \end{theorem} \begin{proof} This claim holds from the knowledge $ <var:D> \times <nat:200> + <nat:406> \times <var:S> + <var:x> \times <nat:300> + <var:t> \times <nat:344> + <nat:36> \times <var:P> + <var:H> \times <nat:440> + <nat:266> \times <var:W> $ is trivially even . The leading terms $ <nat:406> $ , $ <nat:36> $ , $ <nat:440> $ , $ <nat:200> $ , and moreover $ <nat:266> $ are obviously even Building on , recall that the positive integer $ <nat:300> $ is guaranteed to be an even positive integer Additionally , the natural number $ <nat:344> $ is known to be even \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:x> <var:D> <var:H> <var:t> <var:S> <var:P> <var:W> : nat , Nat . odd ( <nat:266> * <var:W> + <nat:406> * <var:S> + <nat:300> * <var:x> + <nat:36> * <var:P> + <nat:440> * <var:H> + <nat:200> * <var:D> + <nat:344> * <var:t> + <nat:163> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:406> = true ) . { auto . } assert ( <genH> : Nat . even <nat:36> = true ) . { auto . } assert ( <genH> : Nat . even <nat:440> = true ) . { auto . } assert ( <genH> : Nat . even <nat:200> = true ) . { auto . } assert ( <genH> : Nat . even <nat:266> = true ) . { auto . } assert ( <genH> : Nat . even <nat:300> = true ) . { auto . } assert ( <genH> : Nat . even <nat:344> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:266> * <var:W> + <nat:406> * <var:S> + <nat:300> * <var:x> + <nat:36> * <var:P> + <nat:440> * <var:H> + <nat:200> * <var:D> + <nat:344> * <var:t> ) = true ) . { repeat rewrite Nat . even_add . repeat rewrite Nat . even_mul . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . auto . Qed . 