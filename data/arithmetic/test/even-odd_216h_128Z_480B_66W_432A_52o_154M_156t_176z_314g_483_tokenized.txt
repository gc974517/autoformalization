\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:314> <var:g> + <nat:66> <var:W> + <nat:176> <var:z> + <var:A> <nat:432> + <var:Z> <nat:128> + <nat:156> <var:t> + <var:o> <nat:52> + <nat:483> + <nat:480> <var:B> + <var:M> <nat:154> + <var:h> <nat:216> $ will be odd for terms $ <var:M> $ , $ <var:W> $ , $ <var:z> $ , $ <var:o> $ , $ <var:B> $ , $ <var:h> $ , $ <var:g> $ , $ <var:A> $ , $ <var:Z> $ , and $ <var:t> $ . \end{theorem} \begin{proof} The natural numbers $ <nat:432> $ , $ <nat:314> $ , additionally $ <nat:154> $ are known to be even The leading term $ <nat:66> $ is even Building on , the numbers $ <nat:156> $ , $ <nat:480> $ , and likewise $ <nat:128> $ are obviously even Furthermore , the positive integers $ <nat:176> $ and likewise $ <nat:52> $ are known as even naturals Observe that the whole number $ <nat:216> $ is obviously an even element of $ \mathbb{N} $ Observe $ <nat:483> $ is clearly an odd number . It can be checked that $ <var:h> * <nat:216> + <nat:128> * <var:Z> + <var:B> * <nat:480> + <nat:483> + <var:W> * <nat:66> + <var:A> * <nat:432> + <nat:52> * <var:o> + <var:M> * <nat:154> + <var:t> * <nat:156> + <nat:176> * <var:z> + <nat:314> * <var:g> $ is guaranteed to be odd in connection with the understanding taking the product between an even positive integer with any whole number is even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:M> <var:W> <var:z> <var:o> <var:B> <var:h> <var:g> <var:A> <var:Z> <var:t> : nat , Nat . odd ( <nat:314> * <var:g> + <nat:66> * <var:W> + <nat:176> * <var:z> + <nat:432> * <var:A> + <nat:128> * <var:Z> + <nat:156> * <var:t> + <nat:52> * <var:o> + <nat:480> * <var:B> + <nat:154> * <var:M> + <nat:216> * <var:h> + <nat:483> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:432> = true ) . { auto . } assert ( <genH> : Nat . even <nat:314> = true ) . { auto . } assert ( <genH> : Nat . even <nat:154> = true ) . { auto . } assert ( <genH> : Nat . even <nat:66> = true ) . { auto . } assert ( <genH> : Nat . even <nat:156> = true ) . { auto . } assert ( <genH> : Nat . even <nat:480> = true ) . { auto . } assert ( <genH> : Nat . even <nat:128> = true ) . { auto . } assert ( <genH> : Nat . even <nat:176> = true ) . { auto . } assert ( <genH> : Nat . even <nat:52> = true ) . { auto . } assert ( <genH> : Nat . even <nat:216> = true ) . { auto . } assert ( <genH> : Nat . odd <nat:483> = true ) . { auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . repeat rewrite Nat . even_mul . rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 