\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:T> \cdot <nat:168> + <nat:403> + <var:o> \cdot <nat:240> + <var:b> \cdot <nat:300> + <nat:136> \cdot <var:M> + <var:D> \cdot <nat:122> $ is odd . \end{theorem} \begin{proof} The claim holds since $ <var:o> <nat:240> + <var:D> <nat:122> + <var:M> <nat:136> + <nat:168> <var:T> + <var:b> <nat:300> $ is guaranteed to be even . Notice the pairs $ <nat:240> \cdot <var:o> $ , $ <var:D> \cdot <nat:122> $ , in addition to $ <nat:136> \cdot <var:M> $ are known to be even . Furthermore , the product $ <var:T> \cdot <nat:168> $ is an even natural number . Likewise , the pair $ <nat:300> \cdot <var:b> $ is clearly even . The formula $ <var:T> \cdot <nat:168> + <var:b> \cdot <nat:300> + <nat:136> \cdot <var:M> + <nat:122> \cdot <var:D> + <var:o> \cdot <nat:240> $ is guaranteed to be instrinsically even because taking the product of even elements of $ \mathbb{Z}^+ $ with an arbitrary whole number is guaranteed to be even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:T> <var:o> <var:b> <var:M> <var:D> : nat , Nat . odd ( <nat:168> * <var:T> + <nat:240> * <var:o> + <nat:300> * <var:b> + <nat:136> * <var:M> + <nat:122> * <var:D> + <nat:403> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:240> * <var:o> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:122> * <var:D> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:136> * <var:M> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:168> * <var:T> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:300> * <var:b> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:168> * <var:T> + <nat:240> * <var:o> + <nat:300> * <var:b> + <nat:136> * <var:M> + <nat:122> * <var:D> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . auto . Qed . 