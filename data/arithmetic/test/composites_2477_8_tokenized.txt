\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Take $ <var:j> $ , $ <var:J> $ , $ <var:r> $ , $ <var:o> $ , $ <var:g> $ , $ <var:l> $ , $ <var:P> $ , $ <var:q> \in \mathbb{N} $ greater than <nat:1> . Define that some $ <var:A> $ will be considered a <def:eight-composite> number given $ <var:o> * <var:r> * <var:l> * <var:j> * <var:g> * <var:P> * <var:q> * <var:J> = <var:A> $ . Accordingly the integer <nat:1123200> is a <def:eight-composite> natural number . \end{theorem} \begin{proof} Let $ <var:J> = <nat:3> $ , $ <var:q> = <nat:13> $ , $ <var:g> = <nat:4> $ , $ <var:l> = <nat:5> $ , $ <var:j> = <nat:8> $ , $ <var:P> = <nat:2> $ , $ <var:r> = <nat:10> $ , and $ <var:o> = <nat:9> $ . Notice $ <nat:8> $ , $ <nat:9> $ , $ <nat:10> $ , $ <nat:2> $ , $ <nat:13> $ , $ <nat:3> $ , $ <nat:4> $ , and $ <nat:5> $ are more than <nat:1> . Furthermore notice further $ <nat:1123200> = <var:o> \cdot <var:g> \cdot <var:q> \cdot <var:P> \cdot <var:l> \cdot <var:J> \cdot <var:j> \cdot <var:r> $ . This gives the formula is true . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:eight-composite> ( <var:A> : nat ) := exists <var:j> <var:J> <var:r> <var:o> <var:g> <var:l> <var:P> <var:q> : nat , ( <var:j> > <nat:1> ) /\ ( <var:J> > <nat:1> ) /\ ( <var:r> > <nat:1> ) /\ ( <var:o> > <nat:1> ) /\ ( <var:g> > <nat:1> ) /\ ( <var:l> > <nat:1> ) /\ ( <var:P> > <nat:1> ) /\ ( <var:q> > <nat:1> ) /\ ( <var:o> * <var:r> * <var:l> * <var:j> * <var:g> * <var:P> * <var:q> * <var:J> = <var:A> ) . Theorem <genP:1> : <def:eight-composite> <nat:1123200> . Proof . unfold <def:eight-composite> . exists <nat:8> . exists <nat:3> . exists <nat:10> . exists <nat:9> . exists <nat:4> . exists <nat:5> . exists <nat:2> . exists <nat:13> . assert ( <genH> : <nat:8> > <nat:1> ) . { lia . } assert ( <genH> : <nat:9> > <nat:1> ) . { lia . } assert ( <genH> : <nat:10> > <nat:1> ) . { lia . } assert ( <genH> : <nat:2> > <nat:1> ) . { lia . } assert ( <genH> : <nat:13> > <nat:1> ) . { lia . } assert ( <genH> : <nat:3> > <nat:1> ) . { lia . } assert ( <genH> : <nat:4> > <nat:1> ) . { lia . } assert ( <genH> : <nat:5> > <nat:1> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 