\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:252> <var:Z> + <var:x> <nat:358> + <nat:316> <var:q> + <var:j> <nat:336> + <nat:457> + <nat:434> <var:K> + <nat:4> <var:i> + <var:L> <nat:348> + <var:c> <nat:356> $ will be odd with all unknowns $ <var:K> $ , $ <var:L> $ , $ <var:q> $ , $ <var:Z> $ , $ <var:c> $ , $ <var:i> $ , $ <var:x> $ , and $ <var:j> $ . \end{theorem} \begin{proof} We check this theorem is true . Recall the pairs $ <var:Z> <nat:252> $ , $ <nat:358> <var:x> $ , $ <var:q> <nat:316> $ , $ <nat:336> <var:j> $ , $ <nat:434> <var:K> $ , $ <nat:4> <var:i> $ , $ <var:L> <nat:348> $ , and $ <var:c> <nat:356> $ are known to be even as a consequence that the positive integers $ <nat:252> $ , $ <nat:358> $ , $ <nat:316> $ , $ <nat:336> $ , $ <nat:434> $ , $ <nat:4> $ , $ <nat:348> $ , in addition to $ <nat:356> $ must be even numbers in $ \mathbb{Z}^+ $ . Remember the adding of even natural numbers together with an odd natural will be odd . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:K> <var:L> <var:q> <var:Z> <var:c> <var:i> <var:x> <var:j> : nat , Nat . odd ( <nat:252> * <var:Z> + <nat:358> * <var:x> + <nat:316> * <var:q> + <nat:336> * <var:j> + <nat:434> * <var:K> + <nat:4> * <var:i> + <nat:348> * <var:L> + <nat:356> * <var:c> + <nat:457> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:252> = true ) . { auto . } assert ( <genH> : Nat . even <nat:358> = true ) . { auto . } assert ( <genH> : Nat . even <nat:316> = true ) . { auto . } assert ( <genH> : Nat . even <nat:336> = true ) . { auto . } assert ( <genH> : Nat . even <nat:434> = true ) . { auto . } assert ( <genH> : Nat . even <nat:4> = true ) . { auto . } assert ( <genH> : Nat . even <nat:348> = true ) . { auto . } assert ( <genH> : Nat . even <nat:356> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:252> * <var:Z> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:358> * <var:x> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:316> * <var:q> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:336> * <var:j> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:434> * <var:K> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:4> * <var:i> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:348> * <var:L> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:356> * <var:c> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 