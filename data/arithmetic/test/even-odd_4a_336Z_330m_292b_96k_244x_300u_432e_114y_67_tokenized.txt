\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:a> \cdot <nat:4> + <nat:67> + <var:Z> \cdot <nat:336> + <var:m> \cdot <nat:330> + <nat:292> \cdot <var:b> + <var:k> \cdot <nat:96> + <var:x> \cdot <nat:244> + <nat:300> \cdot <var:u> + <nat:432> \cdot <var:e> + <nat:114> \cdot <var:y> $ is guaranteed to be odd taking integers $ <var:Z> $ , $ <var:b> $ , $ <var:u> $ , $ <var:x> $ , $ <var:y> $ , $ <var:m> $ , $ <var:a> $ , $ <var:k> $ , and $ <var:e> $ . \end{theorem} \begin{proof} The summing between an even number and an odd number must be by itself an odd natural number . The terms $ <nat:292> * <var:b> $ , $ <var:k> * <nat:96> $ , $ <var:Z> * <nat:336> $ , $ <nat:244> * <var:x> $ , $ <nat:432> * <var:e> $ , $ <nat:300> * <var:u> $ , $ <var:m> * <nat:330> $ , additionally $ <nat:4> * <var:a> $ are guaranteed to be even . See $ <nat:114> * <var:y> $ is trivially an even whole number . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:Z> <var:b> <var:u> <var:x> <var:y> <var:m> <var:a> <var:k> <var:e> : nat , Nat . odd ( <nat:4> * <var:a> + <nat:336> * <var:Z> + <nat:330> * <var:m> + <nat:292> * <var:b> + <nat:96> * <var:k> + <nat:244> * <var:x> + <nat:300> * <var:u> + <nat:432> * <var:e> + <nat:114> * <var:y> + <nat:67> ) = true . Proof . intros . rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . assert ( <genH> : Nat . even ( <nat:292> * <var:b> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:96> * <var:k> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:336> * <var:Z> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:244> * <var:x> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:432> * <var:e> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:300> * <var:u> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:330> * <var:m> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:4> * <var:a> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:114> * <var:y> ) = true ) . { rewrite Nat . even_mul . auto . } rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 