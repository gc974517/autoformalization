\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:y> \cdot <nat:10> + <var:a> \cdot <nat:78> + <nat:28> \cdot <var:V> + <var:u> \cdot <nat:198> + <var:p> \cdot <nat:84> + <var:G> \cdot <nat:410> + <nat:101> + <nat:180> \cdot <var:R> + <var:q> \cdot <nat:236> + <var:D> \cdot <nat:82> + <nat:452> \cdot <var:j> + <nat:488> \cdot <var:g> $ must be odd . \end{theorem} \begin{proof} Remember that $ <nat:101> $ is known as odd . It can be justified that the sum $ <nat:101> + <var:V> \times <nat:28> + <var:p> \times <nat:84> + <var:j> \times <nat:452> + <var:g> \times <nat:488> + <nat:236> \times <var:q> + <var:D> \times <nat:82> + <var:R> \times <nat:180> + <nat:10> \times <var:y> + <nat:198> \times <var:u> + <var:G> \times <nat:410> + <var:a> \times <nat:78> $ will be odd . We know that the pairs $ <nat:28> <var:V> $ , $ <nat:488> <var:g> $ , $ <nat:452> <var:j> $ , $ <nat:84> <var:p> $ , $ <var:q> <nat:236> $ , $ <nat:180> <var:R> $ , $ <nat:10> <var:y> $ , and also $ <var:G> <nat:410> $ are trivially even numbers in $ \mathbb{N} $ . The pairs $ <var:D> <nat:82> $ and moreover $ <var:a> <nat:78> $ must be even naturals as a consequence that the multiplication between an even positive integer with any element of $ \mathbb{Z}^+ $ must be even . See that the product $ <var:u> <nat:198> $ is clearly even . This claim is proven from the knowledge multiplying of an even element of $ \mathbb{Z}^+ $ and an arbitrary number in $ \mathbb{N} $ is guaranteed to be even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:y> <var:a> <var:V> <var:u> <var:p> <var:G> <var:R> <var:q> <var:D> <var:j> <var:g> : nat , Nat . odd ( <nat:10> * <var:y> + <nat:78> * <var:a> + <nat:28> * <var:V> + <nat:198> * <var:u> + <nat:84> * <var:p> + <nat:410> * <var:G> + <nat:180> * <var:R> + <nat:236> * <var:q> + <nat:82> * <var:D> + <nat:452> * <var:j> + <nat:488> * <var:g> + <nat:101> ) = true . Proof . intros . assert ( <genH> : Nat . odd <nat:101> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:28> * <var:V> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:488> * <var:g> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:452> * <var:j> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:84> * <var:p> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:236> * <var:q> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:180> * <var:R> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:10> * <var:y> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:410> * <var:G> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:82> * <var:D> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:78> * <var:a> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:198> * <var:u> ) = true ) . { rewrite Nat . even_mul . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 