\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:313> + <var:Z> \cdot <nat:208> + <nat:276> \cdot <var:D> + <nat:258> \cdot <var:I> + <nat:440> \cdot <var:O> + <nat:318> \cdot <var:T> + <var:L> \cdot <nat:464> + <nat:120> \cdot <var:s> + <var:R> \cdot <nat:466> $ is guaranteed to be odd . \end{theorem} \begin{proof} The summing of even numbers successively with an odd number is guaranteed to be an odd element of $ \mathbb{N} $ . Consequently , $ <nat:208> <var:Z> + <var:L> <nat:464> + <var:O> <nat:440> + <nat:313> + <nat:120> <var:s> + <nat:276> <var:D> + <var:I> <nat:258> + <nat:318> <var:T> + <var:R> <nat:466> $ must be odd . The coefficients $ <nat:208> $ , $ <nat:276> $ , $ <nat:258> $ , $ <nat:466> $ , $ <nat:440> $ , and likewise $ <nat:464> $ are clearly even elements of $ \mathbb{N} $ The leading term $ <nat:318> $ is even See that the number $ <nat:120> $ is trivially even Taking the product of even elements of $ \mathbb{Z}^+ $ is guaranteed to be an even natural number . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:Z> <var:D> <var:I> <var:O> <var:T> <var:L> <var:s> <var:R> : nat , Nat . odd ( <nat:208> * <var:Z> + <nat:276> * <var:D> + <nat:258> * <var:I> + <nat:440> * <var:O> + <nat:318> * <var:T> + <nat:464> * <var:L> + <nat:120> * <var:s> + <nat:466> * <var:R> + <nat:313> ) = true . Proof . intros . rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . assert ( <genH> : Nat . even <nat:208> = true ) . { auto . } assert ( <genH> : Nat . even <nat:276> = true ) . { auto . } assert ( <genH> : Nat . even <nat:258> = true ) . { auto . } assert ( <genH> : Nat . even <nat:466> = true ) . { auto . } assert ( <genH> : Nat . even <nat:440> = true ) . { auto . } assert ( <genH> : Nat . even <nat:464> = true ) . { auto . } assert ( <genH> : Nat . even <nat:318> = true ) . { auto . } assert ( <genH> : Nat . even <nat:120> = true ) . { auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . repeat rewrite Nat . even_mul . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 