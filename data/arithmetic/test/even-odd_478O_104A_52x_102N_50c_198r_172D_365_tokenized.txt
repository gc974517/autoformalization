\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:O> \times <nat:478> + <nat:104> \times <var:A> + <var:x> \times <nat:52> + <nat:365> + <nat:102> \times <var:N> + <nat:50> \times <var:c> + <nat:198> \times <var:r> + <nat:172> \times <var:D> $ must be odd assuming every positive integers $ <var:O> $ , $ <var:x> $ , $ <var:c> $ , $ <var:r> $ , $ <var:D> $ , $ <var:A> $ , and $ <var:N> $ . \end{theorem} \begin{proof} The pairs $ <var:N> \times <nat:102> $ additionally $ <nat:104> \times <var:A> $ will be even . This holds since multiplying of an even natural number and a element of $ \mathbb{Z}^+ $ is guaranteed to be fundamentally an even number in $ \mathbb{Z}^+ $ . Adding on , take note that the pairs $ <nat:198> \times <var:r> $ , $ <var:D> \times <nat:172> $ , as well as $ <nat:478> \times <var:O> $ will be even . Additionally , notice the pair $ <var:x> \times <nat:52> $ is trivially an even element of $ \mathbb{N} $ . This is proven since taking the product of an even whole number with some element of $ \mathbb{N} $ is guaranteed to be even . Building on , the term $ <nat:50> \times <var:c> $ is clearly an even element of $ \mathbb{Z}^+ $ because the product between an even number in $ \mathbb{N} $ with a whole number is even . Recall $ <nat:365> $ is guaranteed to be an odd natural . We demonstrate this theorem is true . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:O> <var:x> <var:c> <var:r> <var:D> <var:A> <var:N> : nat , Nat . odd ( <nat:478> * <var:O> + <nat:104> * <var:A> + <nat:52> * <var:x> + <nat:102> * <var:N> + <nat:50> * <var:c> + <nat:198> * <var:r> + <nat:172> * <var:D> + <nat:365> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:102> * <var:N> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:104> * <var:A> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:198> * <var:r> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:172> * <var:D> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:478> * <var:O> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:52> * <var:x> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:50> * <var:c> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . odd <nat:365> = true ) . { auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 