\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:5> + <nat:20> <var:q> + <var:R> <nat:98> + <var:U> <nat:234> + <var:x> <nat:62> $ must be odd using every terms $ <var:R> $ , $ <var:U> $ , $ <var:x> $ , and $ <var:q> $ . \end{theorem} \begin{proof} In addition , the pairs $ <nat:20> \times <var:q> $ , $ <var:R> \times <nat:98> $ , $ <var:U> \times <nat:234> $ , and also $ <var:x> \times <nat:62> $ are clearly even since the product between an even positive integer and an arbitrary whole number must be in itself an even natural number and moreover the integers $ <nat:20> $ , $ <nat:98> $ , $ <nat:234> $ , additionally $ <nat:62> $ are known as trivially even elements of $ \mathbb{N} $ . The addition between even positive integers together with an odd positive integer will be by itself an odd natural . Observe $ <nat:5> $ is obviously an odd positive integer . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:R> <var:U> <var:x> <var:q> : nat , Nat . odd ( <nat:20> * <var:q> + <nat:98> * <var:R> + <nat:234> * <var:U> + <nat:62> * <var:x> + <nat:5> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:20> = true ) . { auto . } assert ( <genH> : Nat . even <nat:98> = true ) . { auto . } assert ( <genH> : Nat . even <nat:234> = true ) . { auto . } assert ( <genH> : Nat . even <nat:62> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:20> * <var:q> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:98> * <var:R> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:234> * <var:U> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:62> * <var:x> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . assert ( <genH> : Nat . odd <nat:5> = true ) . { auto . } rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 