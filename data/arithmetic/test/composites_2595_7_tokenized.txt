\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \newtheorem{definition}{Definition} \begin{document} \begin{definition} There exist $ <var:R> $ , $ <var:v> $ , $ <var:e> $ , $ <var:i> $ , $ <var:Q> $ , $ <var:r> $ , $ <var:z> \in \mathbb{N} $ satisfying the condition that $ <var:z> $ , $ <var:R> $ , $ <var:i> $ , $ <var:e> $ , $ <var:Q> $ , $ <var:r> $ and $ <var:v> > <nat:1> $ . We claim that some positive integer $ <var:x> $ will be considered a <def:seven-composite> integer given $ <var:x> = <var:e> \times <var:r> \times <var:z> \times <var:i> \times <var:v> \times <var:R> \times <var:Q> $ . \end{definition} \begin{theorem} $ <nat:230400> = <var:x> $ is a <def:seven-composite> natural number . \end{theorem} \begin{proof} Allow $ <var:r> = <nat:4> $ , $ <var:v> = <nat:12> $ , $ <var:Q> = <nat:8> $ , $ <var:i> = <nat:10> $ , $ <var:e> = <nat:2> $ , $ <var:z> = <nat:5> $ and $ <var:R> = <nat:6> $ . Similarly note that $ <nat:8> $ , $ <nat:12> $ , $ <nat:2> $ , $ <nat:4> $ , $ <nat:5> $ , $ <nat:10> $ , $ <nat:6> $ are greater than <nat:1> . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:seven-composite> ( <var:x> : nat ) := exists <var:R> <var:v> <var:e> <var:i> <var:Q> <var:r> <var:z> : nat , ( <var:z> > <nat:1> ) /\ ( <var:R> > <nat:1> ) /\ ( <var:i> > <nat:1> ) /\ ( <var:e> > <nat:1> ) /\ ( <var:Q> > <nat:1> ) /\ ( <var:r> > <nat:1> ) /\ ( <var:v> > <nat:1> ) /\ ( <var:x> = <var:e> * <var:r> * <var:z> * <var:i> * <var:v> * <var:R> * <var:Q> ) . Theorem <genP:1> : <def:seven-composite> <nat:230400> . Proof . unfold <def:seven-composite> . exists <nat:6> . exists <nat:12> . exists <nat:2> . exists <nat:10> . exists <nat:8> . exists <nat:4> . exists <nat:5> . assert ( <genH> : <nat:8> > <nat:1> ) . { lia . } assert ( <genH> : <nat:12> > <nat:1> ) . { lia . } assert ( <genH> : <nat:2> > <nat:1> ) . { lia . } assert ( <genH> : <nat:4> > <nat:1> ) . { lia . } assert ( <genH> : <nat:5> > <nat:1> ) . { lia . } assert ( <genH> : <nat:10> > <nat:1> ) . { lia . } assert ( <genH> : <nat:6> > <nat:1> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 