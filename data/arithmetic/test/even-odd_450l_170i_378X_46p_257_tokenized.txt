\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:X> * <nat:378> + <var:p> * <nat:46> + <var:i> * <nat:170> + <nat:450> * <var:l> + <nat:257> $ is odd with some natural terms $ <var:l> $ , $ <var:p> $ , $ <var:i> $ , and $ <var:X> $ . \end{theorem} \begin{proof} See that $ <var:l> <nat:450> + <var:i> <nat:170> + <nat:46> <var:p> + <var:X> <nat:378> $ is clearly even , because the totaling of an even integer and an even element of $ \mathbb{N} $ is guaranteed to be even . The leading term $ <nat:450> $ is known as even . Therefore , $ <var:l> <nat:450> $ is even additionally . Notice that the pair $ <nat:170> <var:i> $ is clearly an even integer from the fact multiplying between an even number in $ \mathbb{Z}^+ $ and any natural number will be clearly an even number and likewise the coefficient $ <nat:170> $ is guaranteed to be even . In addition to this , the leading term $ <nat:378> $ is guaranteed to be even . In consequence , the term $ <var:X> <nat:378> $ is even additionally . We know the product $ <var:p> <nat:46> $ is known as even . This fact is proven from the fact the whole number $ <nat:46> $ is known as even . Observe $ <nat:257> $ is known to be odd . We verify our result is true . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:l> <var:p> <var:i> <var:X> : nat , Nat . odd ( <nat:378> * <var:X> + <nat:46> * <var:p> + <nat:170> * <var:i> + <nat:450> * <var:l> + <nat:257> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:450> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:450> * <var:l> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:170> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:170> * <var:i> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:378> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:378> * <var:X> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:46> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:46> * <var:p> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:378> * <var:X> + <nat:46> * <var:p> + <nat:170> * <var:i> + <nat:450> * <var:l> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } assert ( <genH> : Nat . odd <nat:257> = true ) . { auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . rewrite <genH> . auto . Qed . 