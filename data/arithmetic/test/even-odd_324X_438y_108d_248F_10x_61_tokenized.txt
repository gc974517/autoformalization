\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:61> + <var:x> \times <nat:10> + <var:d> \times <nat:108> + <var:X> \times <nat:324> + <var:F> \times <nat:248> + <nat:438> \times <var:y> $ will be odd . \end{theorem} \begin{proof} It can be justified that that the expression $ <nat:324> <var:X> + <var:F> <nat:248> + <nat:438> <var:y> + <var:x> <nat:10> + <nat:108> <var:d> $ is guaranteed to be even . Recall the terms $ <var:x> * <nat:10> $ and likewise $ <var:F> * <nat:248> $ are known to be even whole numbers . What's more , we know the product $ <var:X> * <nat:324> $ is trivially an even element of $ \mathbb{N} $ from the fact the product between an even element of $ \mathbb{Z}^+ $ with an arbitrary number in $ \mathbb{N} $ is guaranteed to be by itself an even positive integer . Furthermore , the product $ <nat:438> * <var:y> $ is guaranteed to be an even element of $ \mathbb{Z}^+ $ from the knowledge the product between an even number in $ \mathbb{Z}^+ $ and a number is even . In addition to this , $ <var:d> * <nat:108> $ is obviously an even number as a consequence that multiplying between an even number in $ \mathbb{Z}^+ $ with any number in $ \mathbb{Z}^+ $ is guaranteed to be even . The sum $ <nat:108> <var:d> + <var:X> <nat:324> + <nat:248> <var:F> + <nat:10> <var:x> + <var:y> <nat:438> $ will be by its very nature even because the totaling between an even integer and even whole numbers will be even in addition to from the knowledge the product of even numbers in $ \mathbb{N} $ and a positive integer is guaranteed to be even . We demonstrate $ <nat:324> \cdot <var:X> + <var:y> \cdot <nat:438> + <var:d> \cdot <nat:108> + <var:F> \cdot <nat:248> + <nat:61> + <nat:10> \cdot <var:x> $ must be odd . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:x> <var:d> <var:X> <var:F> <var:y> : nat , Nat . odd ( <nat:10> * <var:x> + <nat:108> * <var:d> + <nat:324> * <var:X> + <nat:248> * <var:F> + <nat:438> * <var:y> + <nat:61> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:10> * <var:x> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:248> * <var:F> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:324> * <var:X> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:438> * <var:y> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:108> * <var:d> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:10> * <var:x> + <nat:108> * <var:d> + <nat:324> * <var:X> + <nat:248> * <var:F> + <nat:438> * <var:y> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . auto . Qed . 