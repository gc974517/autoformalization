\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:v> * <nat:378> + <nat:114> * <var:A> + <var:U> * <nat:210> + <nat:285> + <var:Q> * <nat:266> + <nat:278> * <var:C> + <var:I> * <nat:290> + <var:t> * <nat:100> + <var:Z> * <nat:84> $ is guaranteed to be odd taking every terms $ <var:v> $ , $ <var:U> $ , $ <var:I> $ , $ <var:A> $ , $ <var:Q> $ , $ <var:t> $ , $ <var:C> $ , and $ <var:Z> $ . \end{theorem} \begin{proof} We verify the sum $ <nat:290> <var:I> + <nat:378> <var:v> + <nat:210> <var:U> + <nat:285> + <nat:278> <var:C> + <var:t> <nat:100> + <nat:114> <var:A> + <nat:84> <var:Z> + <nat:266> <var:Q> $ is guaranteed to be odd . The pair $ <nat:378> <var:v> $ is trivially even . Remember the products $ <var:I> <nat:290> $ , $ <var:A> <nat:114> $ , $ <nat:84> <var:Z> $ , in addition to $ <var:t> <nat:100> $ are even . This is proven by reason that the product of an even integer and some number is even . The pairs $ <var:Q> <nat:266> $ and $ <nat:278> <var:C> $ are clearly even naturals by reason that the multiplication of an even element of $ \mathbb{N} $ with an arbitrary element of $ \mathbb{N} $ must be an even element of $ \mathbb{Z}^+ $ . The term $ <var:U> <nat:210> $ is guaranteed to be an even whole number from the knowledge taking the product of an even number in $ \mathbb{Z}^+ $ with any number in $ \mathbb{Z}^+ $ is guaranteed to be even . See the addition between even naturals together with an odd whole number must be by definition an odd number . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:v> <var:U> <var:I> <var:A> <var:Q> <var:t> <var:C> <var:Z> : nat , Nat . odd ( <nat:378> * <var:v> + <nat:114> * <var:A> + <nat:210> * <var:U> + <nat:266> * <var:Q> + <nat:278> * <var:C> + <nat:290> * <var:I> + <nat:100> * <var:t> + <nat:84> * <var:Z> + <nat:285> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:378> * <var:v> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:290> * <var:I> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:114> * <var:A> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:84> * <var:Z> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:100> * <var:t> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:266> * <var:Q> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:278> * <var:C> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:210> * <var:U> ) = true ) . { rewrite Nat . even_mul . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 