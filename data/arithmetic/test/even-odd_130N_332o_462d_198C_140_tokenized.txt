\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:N> \times <nat:130> + <var:o> \times <nat:332> + <nat:462> \times <var:d> + <nat:198> \times <var:C> + <nat:140> $ will be even assuming any $ <var:C> $ , $ <var:o> $ , $ <var:d> $ , and $ <var:N> $ . \end{theorem} \begin{proof} We utilize the understanding that $ <nat:130> * <var:N> + <nat:332> * <var:o> + <nat:462> * <var:d> + <nat:198> * <var:C> $ is trivially even . The integers $ <nat:130> $ , $ <nat:332> $ , $ <nat:462> $ , $ <nat:198> $ , are guaranteed to be even numbers . As a consequence , the pairs $ <var:N> \times <nat:130> $ , $ <var:o> \times <nat:332> $ , $ <nat:462> \times <var:d> $ , $ <var:C> \times <nat:198> $ , is even additionally . From the fact the product of an even number in $ \mathbb{N} $ and some number in $ \mathbb{N} $ is guaranteed to be in itself an even element of $ \mathbb{Z}^+ $ this proposition is proven . We know that $ <nat:140> $ is trivially an even natural . It can be checked that our main result is proven . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:C> <var:o> <var:d> <var:N> : nat , Nat . even ( <nat:130> * <var:N> + <nat:332> * <var:o> + <nat:462> * <var:d> + <nat:198> * <var:C> + <nat:140> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:130> = true ) . { auto . } assert ( <genH> : Nat . even <nat:332> = true ) . { auto . } assert ( <genH> : Nat . even <nat:462> = true ) . { auto . } assert ( <genH> : Nat . even <nat:198> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:130> * <var:N> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:332> * <var:o> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:462> * <var:d> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:198> * <var:C> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:130> * <var:N> + <nat:332> * <var:o> + <nat:462> * <var:d> + <nat:198> * <var:C> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:140> = true ) . { auto . } rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . auto . Qed . 