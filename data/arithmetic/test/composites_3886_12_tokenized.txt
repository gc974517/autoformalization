\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Under the condition that we get $ <var:Y> $ , $ <var:f> $ , $ <var:p> $ , $ <var:A> $ , $ <var:d> $ , $ <var:e> $ , $ <var:k> $ , $ <var:n> $ , $ <var:D> $ , $ <var:H> $ , $ <var:o> $ , and $ <var:w> \geq <nat:2> $ so that assuming some positive integer $ <var:K> $ , $ <var:K> = <var:e> \cdot <var:D> \cdot <var:A> \cdot <var:d> \cdot <var:o> \cdot <var:Y> \cdot <var:p> \cdot <var:H> \cdot <var:n> \cdot <var:k> \cdot <var:f> \cdot <var:w> $ , say that $ <var:K> $ is a <def:twelve-composite> natural number for some numbers $ <var:H> $ , $ <var:w> $ , $ <var:D> $ , $ <var:d> $ , $ <var:f> $ , $ <var:e> $ , $ <var:o> $ , $ <var:k> $ , $ <var:p> $ , $ <var:n> $ , $ <var:A> $ , $ <var:Y> $ . Then the natural number <nat:6227020800> is a <def:twelve-composite> number . \end{theorem} \begin{proof} Remember that a <def:twelve-composite> positive integer is the multiplication of integers $ <var:D> $ , $ <var:d> $ , $ <var:A> $ , $ <var:f> $ , $ <var:p> $ , $ <var:n> $ , $ <var:H> $ , $ <var:e> $ , $ <var:o> $ , $ <var:Y> $ , $ <var:k> $ , $ <var:w> $ larger than or equal to <nat:2> . Let $ <var:f> = <nat:11> $ , $ <var:H> = <nat:5> $ , $ <var:n> = <nat:7> $ , $ <var:p> = <nat:3> $ , $ <var:w> = <nat:13> $ , $ <var:D> = <nat:9> $ , $ <var:o> = <nat:8> $ , $ <var:A> = <nat:2> $ , $ <var:e> = <nat:6> $ , $ <var:d> = <nat:10> $ , $ <var:k> = <nat:4> $ , and $ <var:Y> = <nat:12> $ . Note that $ <nat:5> \cdot <nat:12> \cdot <nat:2> \cdot <nat:13> \cdot <nat:11> \cdot <nat:8> \cdot <nat:3> \cdot <nat:4> \cdot <nat:6> \cdot <nat:10> \cdot <nat:9> \cdot <nat:7> = <nat:6227020800> = <var:H> \cdot <var:Y> \cdot <var:A> \cdot <var:w> \cdot <var:f> \cdot <var:o> \cdot <var:p> \cdot <var:k> \cdot <var:e> \cdot <var:d> \cdot <var:D> \cdot <var:n> $ . Similarly observe that $ <var:D> = <nat:9> $ , $ <var:A> = <nat:2> $ , $ <var:p> = <nat:3> $ , $ <var:d> = <nat:10> $ , $ <var:k> = <nat:4> $ , $ <var:Y> = <nat:12> $ , $ <var:n> = <nat:7> $ , $ <var:f> = <nat:11> $ , $ <var:H> = <nat:5> $ , $ <var:w> = <nat:13> $ , $ <var:o> = <nat:8> $ , $ <var:e> = <nat:6> \geq <nat:2> $ . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:twelve-composite> ( <var:K> : nat ) := exists <var:H> <var:w> <var:D> <var:d> <var:f> <var:e> <var:o> <var:k> <var:p> <var:n> <var:A> <var:Y> : nat , ( <var:Y> >= <nat:2> ) /\ ( <var:f> >= <nat:2> ) /\ ( <var:p> >= <nat:2> ) /\ ( <var:A> >= <nat:2> ) /\ ( <var:d> >= <nat:2> ) /\ ( <var:e> >= <nat:2> ) /\ ( <var:k> >= <nat:2> ) /\ ( <var:n> >= <nat:2> ) /\ ( <var:D> >= <nat:2> ) /\ ( <var:H> >= <nat:2> ) /\ ( <var:o> >= <nat:2> ) /\ ( <var:w> >= <nat:2> ) /\ ( <var:K> = <var:e> * <var:D> * <var:A> * <var:d> * <var:o> * <var:Y> * <var:p> * <var:H> * <var:n> * <var:k> * <var:f> * <var:w> ) . Theorem <genP:1> : <def:twelve-composite> <nat:6227020800> . Proof . unfold <def:twelve-composite> . exists <nat:5> . exists <nat:13> . exists <nat:9> . exists <nat:10> . exists <nat:11> . exists <nat:6> . exists <nat:8> . exists <nat:4> . exists <nat:3> . exists <nat:7> . exists <nat:2> . exists <nat:12> . assert ( <genH> : <nat:9> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:2> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:3> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:10> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:4> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:12> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:7> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:11> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:5> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:13> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:8> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:6> >= <nat:2> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 