\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Taking some natural terms $ <var:w> $ , $ <var:g> $ , $ <var:d> $ , $ <var:r> $ , and $ <var:A> $ $ <var:A> \cdot <nat:446> + <nat:282> \cdot <var:w> + <nat:38> \cdot <var:r> + <nat:240> \cdot <var:g> + <var:d> \cdot <nat:60> + <nat:107> $ is odd . \end{theorem} \begin{proof} The addition of an even number and an odd number must be odd . We utilize the understanding the formula $ <nat:282> \times <var:w> + <var:g> \times <nat:240> + <var:d> \times <nat:60> + <var:r> \times <nat:38> + <var:A> \times <nat:446> $ is clearly even . The pairs $ <var:w> \cdot <nat:282> $ , $ <var:g> \cdot <nat:240> $ , $ <var:d> \cdot <nat:60> $ , $ <var:r> \cdot <nat:38> $ , $ <nat:446> \cdot <var:A> $ , are obviously even . This claim must be true from the knowledge taking the product of an even element of $ \mathbb{N} $ and any element of $ \mathbb{N} $ will be an even element of $ \mathbb{Z}^+ $ and the leading terms $ <nat:282> $ , $ <nat:240> $ , $ <nat:60> $ , $ <nat:38> $ , $ <nat:446> $ , are even . From the fact the adding of an even number in $ \mathbb{N} $ and an even positive integer must be fundamentally an even natural number , the expression $ <nat:38> <var:r> + <nat:60> <var:d> + <var:w> <nat:282> + <nat:446> <var:A> + <nat:240> <var:g> $ will be even . It can be checked that $ <nat:107> + <nat:240> \times <var:g> + <var:d> \times <nat:60> + <nat:282> \times <var:w> + <nat:446> \times <var:A> + <nat:38> \times <var:r> $ is odd . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:w> <var:g> <var:d> <var:r> <var:A> : nat , Nat . odd ( <nat:446> * <var:A> + <nat:282> * <var:w> + <nat:38> * <var:r> + <nat:240> * <var:g> + <nat:60> * <var:d> + <nat:107> ) = true . Proof . intros . rewrite Nat . odd_add . assert ( <genH> : Nat . even <nat:282> = true ) . { auto . } assert ( <genH> : Nat . even <nat:240> = true ) . { auto . } assert ( <genH> : Nat . even <nat:60> = true ) . { auto . } assert ( <genH> : Nat . even <nat:38> = true ) . { auto . } assert ( <genH> : Nat . even <nat:446> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:282> * <var:w> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:240> * <var:g> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:60> * <var:d> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:38> * <var:r> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:446> * <var:A> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:446> * <var:A> + <nat:282> * <var:w> + <nat:38> * <var:r> + <nat:240> * <var:g> + <nat:60> * <var:d> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite <- Nat . negb_even . rewrite <genH> . auto . Qed . 