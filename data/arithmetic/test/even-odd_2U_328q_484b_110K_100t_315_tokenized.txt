\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} With all $ <var:t> $ , $ <var:K> $ , $ <var:b> $ , $ <var:U> $ , and $ <var:q> $ the expression $ <nat:100> <var:t> + <var:K> <nat:110> + <nat:2> <var:U> + <nat:328> <var:q> + <var:b> <nat:484> + <nat:315> $ is guaranteed to be odd . \end{theorem} \begin{proof} Recall that $ <nat:315> $ is obviously an odd integer . The adding of even elements of $ \mathbb{Z}^+ $ and an odd number in $ \mathbb{Z}^+ $ must be an odd whole number . Thus , $ <nat:2> * <var:U> + <nat:328> * <var:q> + <var:b> * <nat:484> + <nat:315> + <var:K> * <nat:110> + <var:t> * <nat:100> $ by definition must be odd . On top of this , the pairs $ <nat:2> \times <var:U> $ , $ <var:q> \times <nat:328> $ , $ <var:b> \times <nat:484> $ , $ <nat:110> \times <var:K> $ , in addition to $ <var:t> \times <nat:100> $ are known as even . This is true since the whole numbers $ <nat:2> $ , $ <nat:328> $ , $ <nat:484> $ , $ <nat:110> $ , in addition to $ <nat:100> $ are known to be even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:t> <var:K> <var:b> <var:U> <var:q> : nat , Nat . odd ( <nat:100> * <var:t> + <nat:110> * <var:K> + <nat:2> * <var:U> + <nat:328> * <var:q> + <nat:484> * <var:b> + <nat:315> ) = true . Proof . intros . assert ( <genH> : Nat . odd <nat:315> = true ) . { auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . assert ( <genH> : Nat . even <nat:2> = true ) . { auto . } assert ( <genH> : Nat . even <nat:328> = true ) . { auto . } assert ( <genH> : Nat . even <nat:484> = true ) . { auto . } assert ( <genH> : Nat . even <nat:110> = true ) . { auto . } assert ( <genH> : Nat . even <nat:100> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:2> * <var:U> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:328> * <var:q> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:484> * <var:b> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:110> * <var:K> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:100> * <var:t> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 