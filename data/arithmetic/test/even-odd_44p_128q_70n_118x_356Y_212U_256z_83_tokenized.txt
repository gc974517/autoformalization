\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:q> <nat:128> + <var:Y> <nat:356> + <var:U> <nat:212> + <nat:118> <var:x> + <nat:256> <var:z> + <nat:44> <var:p> + <nat:70> <var:n> + <nat:83> $ must be odd with any positive numbers $ <var:z> $ , $ <var:p> $ , $ <var:x> $ , $ <var:Y> $ , $ <var:n> $ , $ <var:q> $ , and $ <var:U> $ . \end{theorem} \begin{proof} We know $ <nat:83> $ is trivially odd . Take note the summation of an even whole number with an odd natural number is guaranteed to be odd . It can be justified that the formula $ <var:p> * <nat:44> + <nat:128> * <var:q> + <var:n> * <nat:70> + <var:x> * <nat:118> + <nat:356> * <var:Y> + <nat:212> * <var:U> + <nat:256> * <var:z> $ is even , because the adding of an even number in $ \mathbb{N} $ and an even element of $ \mathbb{N} $ is even . The terms $ <var:x> * <nat:118> $ , $ <var:n> * <nat:70> $ , $ <var:z> * <nat:256> $ , as well as $ <var:p> * <nat:44> $ are known as even numbers . Take note the term $ <var:U> * <nat:212> $ is clearly even . On top of this , see the product $ <nat:128> * <var:q> $ is known as an even integer since the product of an even number in $ \mathbb{Z}^+ $ and any natural is guaranteed to be even . Adding on , the pair $ <var:Y> * <nat:356> $ is even . This must be true from the knowledge taking the product of an even integer with some element of $ \mathbb{Z}^+ $ is even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:z> <var:p> <var:x> <var:Y> <var:n> <var:q> <var:U> : nat , Nat . odd ( <nat:128> * <var:q> + <nat:356> * <var:Y> + <nat:212> * <var:U> + <nat:118> * <var:x> + <nat:256> * <var:z> + <nat:44> * <var:p> + <nat:70> * <var:n> + <nat:83> ) = true . Proof . intros . assert ( <genH> : Nat . odd <nat:83> = true ) . { auto . } rewrite Nat . odd_add . assert ( <genH> : Nat . even ( <nat:118> * <var:x> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:70> * <var:n> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:256> * <var:z> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:44> * <var:p> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:212> * <var:U> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:128> * <var:q> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:356> * <var:Y> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:128> * <var:q> + <nat:356> * <var:Y> + <nat:212> * <var:U> + <nat:118> * <var:x> + <nat:256> * <var:z> + <nat:44> * <var:p> + <nat:70> * <var:n> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite <- Nat . negb_even . rewrite <genH> . rewrite <genH> . auto . Qed . 