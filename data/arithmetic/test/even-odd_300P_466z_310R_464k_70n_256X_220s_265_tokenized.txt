\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:k> \times <nat:464> + <var:z> \times <nat:466> + <nat:265> + <var:R> \times <nat:310> + <var:n> \times <nat:70> + <nat:256> \times <var:X> + <nat:300> \times <var:P> + <var:s> \times <nat:220> $ is guaranteed to be odd using some unknowns $ <var:k> $ , $ <var:n> $ , $ <var:R> $ , $ <var:X> $ , $ <var:P> $ , $ <var:s> $ , and $ <var:z> $ . \end{theorem} \begin{proof} The addition of even naturals concurrently and an odd element of $ \mathbb{Z}^+ $ will be by itself an odd integer . See that $ <nat:265> $ is guaranteed to be an odd element of $ \mathbb{N} $ . The theorem must be true from the fact $ <var:z> <nat:466> + <var:n> <nat:70> + <nat:464> <var:k> + <nat:256> <var:X> + <nat:300> <var:P> + <nat:220> <var:s> + <nat:310> <var:R> $ is even . The integers $ <nat:256> $ , $ <nat:220> $ , as well as $ <nat:310> $ are guaranteed to be even Remember that the coefficients $ <nat:466> $ , $ <nat:464> $ , as well as $ <nat:300> $ are obviously even The positive integer $ <nat:70> $ is trivially even The expression $ <nat:300> <var:P> + <var:z> <nat:466> + <nat:310> <var:R> + <nat:464> <var:k> + <var:n> <nat:70> + <nat:256> <var:X> + <var:s> <nat:220> $ is even since the product of even whole numbers with a natural number is even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:k> <var:n> <var:R> <var:X> <var:P> <var:s> <var:z> : nat , Nat . odd ( <nat:464> * <var:k> + <nat:466> * <var:z> + <nat:310> * <var:R> + <nat:70> * <var:n> + <nat:256> * <var:X> + <nat:300> * <var:P> + <nat:220> * <var:s> + <nat:265> ) = true . Proof . intros . rewrite Nat . odd_add . assert ( <genH> : Nat . odd <nat:265> = true ) . { auto . } assert ( <genH> : Nat . even <nat:256> = true ) . { auto . } assert ( <genH> : Nat . even <nat:220> = true ) . { auto . } assert ( <genH> : Nat . even <nat:310> = true ) . { auto . } assert ( <genH> : Nat . even <nat:466> = true ) . { auto . } assert ( <genH> : Nat . even <nat:464> = true ) . { auto . } assert ( <genH> : Nat . even <nat:300> = true ) . { auto . } assert ( <genH> : Nat . even <nat:70> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:464> * <var:k> + <nat:466> * <var:z> + <nat:310> * <var:R> + <nat:70> * <var:n> + <nat:256> * <var:X> + <nat:300> * <var:P> + <nat:220> * <var:s> ) = true ) . { repeat rewrite Nat . even_add . repeat rewrite Nat . even_mul . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite <- Nat . negb_even . rewrite <genH> . rewrite <genH> . auto . Qed . 