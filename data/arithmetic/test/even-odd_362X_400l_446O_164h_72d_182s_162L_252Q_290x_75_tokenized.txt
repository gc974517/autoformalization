\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:252> \times <var:Q> + <var:d> \times <nat:72> + <var:l> \times <nat:400> + <nat:446> \times <var:O> + <var:h> \times <nat:164> + <var:X> \times <nat:362> + <var:L> \times <nat:162> + <nat:290> \times <var:x> + <nat:182> \times <var:s> + <nat:75> $ is odd with every unknowns $ <var:O> $ , $ <var:h> $ , $ <var:Q> $ , $ <var:s> $ , $ <var:l> $ , $ <var:x> $ , $ <var:d> $ , $ <var:X> $ , and $ <var:L> $ . \end{theorem} \begin{proof} The pair $ <nat:72> <var:d> $ is known as an even whole number . This fact holds as a consequence that the product of an even natural number and some number must be an even integer , which is true from the knowledge the integer $ <nat:72> $ is obviously instrinsically an even positive integer . The natural numbers $ <nat:362> $ , $ <nat:164> $ , $ <nat:400> $ , $ <nat:290> $ , and moreover $ <nat:252> $ will be even . Consequently , the terms $ <nat:362> <var:X> $ , $ <nat:164> <var:h> $ , $ <var:l> <nat:400> $ , $ <var:x> <nat:290> $ , and moreover $ <var:Q> <nat:252> $ is even additionally . Adding on , the coefficients $ <nat:182> $ and likewise $ <nat:446> $ are known as even . Thus , the terms $ <nat:182> <var:s> $ and also $ <var:O> <nat:446> $ is even additionally . What's more , the coefficient $ <nat:162> $ is clearly even . Then , the term $ <nat:162> <var:L> $ will be even also . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:O> <var:h> <var:Q> <var:s> <var:l> <var:x> <var:d> <var:X> <var:L> : nat , Nat . odd ( <nat:252> * <var:Q> + <nat:72> * <var:d> + <nat:400> * <var:l> + <nat:446> * <var:O> + <nat:164> * <var:h> + <nat:362> * <var:X> + <nat:162> * <var:L> + <nat:290> * <var:x> + <nat:182> * <var:s> + <nat:75> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:72> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:72> * <var:d> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:362> = true ) . { auto . } assert ( <genH> : Nat . even <nat:164> = true ) . { auto . } assert ( <genH> : Nat . even <nat:400> = true ) . { auto . } assert ( <genH> : Nat . even <nat:290> = true ) . { auto . } assert ( <genH> : Nat . even <nat:252> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:362> * <var:X> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:164> * <var:h> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:400> * <var:l> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:290> * <var:x> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:252> * <var:Q> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:182> = true ) . { auto . } assert ( <genH> : Nat . even <nat:446> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:182> * <var:s> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:446> * <var:O> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:162> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:162> * <var:L> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 