\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Iff we get $ <var:j> = <var:M> \cdot <var:F> \cdot <var:q> \cdot <var:C> \cdot <var:w> \cdot <var:E> \cdot <var:g> \cdot <var:x> \cdot <var:X> \cdot <var:T> \cdot <var:I> $ assuming $ <var:j> \in \mathbb{N} $ and satisfying the condition that $ <var:x> $ , $ <var:w> $ , $ <var:F> $ , $ <var:E> $ , $ <var:q> $ , $ <var:I> $ , $ <var:T> $ , $ <var:C> $ , $ <var:M> $ , $ <var:g> $ , and $ <var:X> \geq <nat:2> $ , then we denote that $ <var:j> $ is a <def:eleven-composite> integer using some $ <var:F> $ , $ <var:g> $ , $ <var:x> $ , $ <var:T> $ , $ <var:q> $ , $ <var:C> $ , $ <var:E> $ , $ <var:w> $ , $ <var:X> $ , $ <var:M> $ , $ <var:I> \in \mathbb{N} $ . Therefore the whole number <nat:778377600> is a <def:eleven-composite> whole number . \end{theorem} \begin{proof} Observe $ <nat:6> \cdot <nat:4> \cdot <nat:7> \cdot <nat:2> \cdot <nat:3> \cdot <nat:13> \cdot <nat:10> \cdot <nat:11> \cdot <nat:12> \cdot <nat:9> \cdot <nat:5> = <nat:778377600> $ . Furthermore observe $ <nat:11> $ , $ <nat:5> $ , $ <nat:6> $ , $ <nat:13> $ , $ <nat:3> $ , $ <nat:12> $ , $ <nat:4> $ , $ <nat:7> $ , $ <nat:10> $ , $ <nat:9> $ , and $ <nat:2> $ are more than or equal to <nat:2> . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:eleven-composite> ( <var:j> : nat ) := exists <var:F> <var:g> <var:x> <var:T> <var:q> <var:C> <var:E> <var:w> <var:X> <var:M> <var:I> : nat , ( <var:j> = <var:M> * <var:F> * <var:q> * <var:C> * <var:w> * <var:E> * <var:g> * <var:x> * <var:X> * <var:T> * <var:I> ) /\ ( <var:x> >= <nat:2> ) /\ ( <var:w> >= <nat:2> ) /\ ( <var:F> >= <nat:2> ) /\ ( <var:E> >= <nat:2> ) /\ ( <var:q> >= <nat:2> ) /\ ( <var:I> >= <nat:2> ) /\ ( <var:T> >= <nat:2> ) /\ ( <var:C> >= <nat:2> ) /\ ( <var:M> >= <nat:2> ) /\ ( <var:g> >= <nat:2> ) /\ ( <var:X> >= <nat:2> ) . Theorem <genP:1> : <def:eleven-composite> <nat:778377600> . Proof . unfold <def:eleven-composite> . exists <nat:2> . exists <nat:10> . exists <nat:7> . exists <nat:9> . exists <nat:3> . exists <nat:4> . exists <nat:5> . exists <nat:12> . exists <nat:13> . exists <nat:11> . exists <nat:6> . assert ( <genH> : <nat:11> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:5> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:6> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:13> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:3> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:12> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:4> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:7> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:10> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:9> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:2> >= <nat:2> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 