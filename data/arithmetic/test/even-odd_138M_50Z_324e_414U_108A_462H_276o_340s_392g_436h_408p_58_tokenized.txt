\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Given some variables $ <var:p> $ , $ <var:M> $ , $ <var:U> $ , $ <var:Z> $ , $ <var:H> $ , $ <var:g> $ , $ <var:A> $ , $ <var:e> $ , $ <var:o> $ , $ <var:h> $ , and $ <var:s> $ the summation $ <nat:324> \times <var:e> + <var:Z> \times <nat:50> + <var:M> \times <nat:138> + <var:p> \times <nat:408> + <var:s> \times <nat:340> + <var:h> \times <nat:436> + <var:g> \times <nat:392> + <var:U> \times <nat:414> + <var:o> \times <nat:276> + <nat:462> \times <var:H> + <nat:58> + <var:A> \times <nat:108> $ is even . \end{theorem} \begin{proof} The summing between even natural numbers concurrently and an even number is guaranteed to be an even whole number . The expression $ <nat:108> \cdot <var:A> + <nat:340> \cdot <var:s> + <nat:276> \cdot <var:o> + <var:M> \cdot <nat:138> + <var:H> \cdot <nat:462> + <var:p> \cdot <nat:408> + <var:g> \cdot <nat:392> + <var:U> \cdot <nat:414> + <var:Z> \cdot <nat:50> + <nat:324> \cdot <var:e> + <nat:58> + <nat:436> \cdot <var:h> $ is guaranteed to be even from the knowledge $ <var:M> <nat:138> + <var:H> <nat:462> + <var:h> <nat:436> + <var:g> <nat:392> + <nat:340> <var:s> + <var:U> <nat:414> + <nat:108> <var:A> + <var:e> <nat:324> + <var:Z> <nat:50> + <nat:276> <var:o> + <nat:408> <var:p> $ is trivially even . See that the leading terms $ <nat:138> $ , $ <nat:462> $ , $ <nat:436> $ , $ <nat:392> $ , $ <nat:340> $ , $ <nat:414> $ , $ <nat:108> $ , $ <nat:324> $ , $ <nat:50> $ , $ <nat:276> $ , and $ <nat:408> $ are guaranteed to be even . In consequence , the pairs $ <var:M> * <nat:138> $ , $ <var:H> * <nat:462> $ , $ <nat:436> * <var:h> $ , $ <nat:392> * <var:g> $ , $ <nat:340> * <var:s> $ , $ <var:U> * <nat:414> $ , $ <nat:108> * <var:A> $ , $ <var:e> * <nat:324> $ , $ <nat:50> * <var:Z> $ , $ <var:o> * <nat:276> $ , and also $ <var:p> * <nat:408> $ must be even as well . Because taking the product between an even natural number and a element of $ \mathbb{Z}^+ $ must be itself an even number in $ \mathbb{N} $ the sum $ <nat:138> <var:M> + <var:Z> <nat:50> + <nat:324> <var:e> + <var:U> <nat:414> + <var:A> <nat:108> + <var:H> <nat:462> + <nat:276> <var:o> + <var:s> <nat:340> + <var:g> <nat:392> + <var:h> <nat:436> + <var:p> <nat:408> $ will be even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:p> <var:M> <var:U> <var:Z> <var:H> <var:g> <var:A> <var:e> <var:o> <var:h> <var:s> : nat , Nat . even ( <nat:324> * <var:e> + <nat:50> * <var:Z> + <nat:138> * <var:M> + <nat:408> * <var:p> + <nat:340> * <var:s> + <nat:436> * <var:h> + <nat:392> * <var:g> + <nat:414> * <var:U> + <nat:276> * <var:o> + <nat:462> * <var:H> + <nat:108> * <var:A> + <nat:58> ) = true . Proof . intros . rewrite Nat . even_add . assert ( <genH> : Nat . even <nat:138> = true ) . { auto . } assert ( <genH> : Nat . even <nat:462> = true ) . { auto . } assert ( <genH> : Nat . even <nat:436> = true ) . { auto . } assert ( <genH> : Nat . even <nat:392> = true ) . { auto . } assert ( <genH> : Nat . even <nat:340> = true ) . { auto . } assert ( <genH> : Nat . even <nat:414> = true ) . { auto . } assert ( <genH> : Nat . even <nat:108> = true ) . { auto . } assert ( <genH> : Nat . even <nat:324> = true ) . { auto . } assert ( <genH> : Nat . even <nat:50> = true ) . { auto . } assert ( <genH> : Nat . even <nat:276> = true ) . { auto . } assert ( <genH> : Nat . even <nat:408> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:138> * <var:M> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:462> * <var:H> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:436> * <var:h> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:392> * <var:g> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:340> * <var:s> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:414> * <var:U> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:108> * <var:A> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:324> * <var:e> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:50> * <var:Z> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:276> * <var:o> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:408> * <var:p> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:324> * <var:e> + <nat:50> * <var:Z> + <nat:138> * <var:M> + <nat:408> * <var:p> + <nat:340> * <var:s> + <nat:436> * <var:h> + <nat:392> * <var:g> + <nat:414> * <var:U> + <nat:276> * <var:o> + <nat:462> * <var:H> + <nat:108> * <var:A> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite <genH> . auto . Qed . 