\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:308> \times <var:T> + <var:h> \times <nat:154> + <nat:74> \times <var:r> + <nat:200> \times <var:w> + <nat:398> \times <var:I> + <nat:378> \times <var:X> + <var:j> \times <nat:10> + <nat:160> \times <var:U> + <nat:98> + <var:m> \times <nat:166> $ will be even given all positive integers $ <var:w> $ , $ <var:h> $ , $ <var:j> $ , $ <var:X> $ , $ <var:I> $ , $ <var:T> $ , $ <var:r> $ , $ <var:m> $ , and $ <var:U> $ . \end{theorem} \begin{proof} Recall that the products $ <nat:308> <var:T> $ , $ <nat:154> <var:h> $ , $ <var:r> <nat:74> $ , $ <nat:200> <var:w> $ , $ <nat:398> <var:I> $ , $ <nat:378> <var:X> $ , $ <var:j> <nat:10> $ , $ <nat:160> <var:U> $ , plus $ <nat:166> <var:m> $ are guaranteed to be even elements of $ \mathbb{Z}^+ $ because the integers $ <nat:308> $ , $ <nat:154> $ , $ <nat:74> $ , $ <nat:200> $ , $ <nat:398> $ , $ <nat:378> $ , $ <nat:10> $ , $ <nat:160> $ , and likewise $ <nat:166> $ are known as even integers . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:w> <var:h> <var:j> <var:X> <var:I> <var:T> <var:r> <var:m> <var:U> : nat , Nat . even ( <nat:308> * <var:T> + <nat:154> * <var:h> + <nat:74> * <var:r> + <nat:200> * <var:w> + <nat:398> * <var:I> + <nat:378> * <var:X> + <nat:10> * <var:j> + <nat:160> * <var:U> + <nat:166> * <var:m> + <nat:98> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:308> = true ) . { auto . } assert ( <genH> : Nat . even <nat:154> = true ) . { auto . } assert ( <genH> : Nat . even <nat:74> = true ) . { auto . } assert ( <genH> : Nat . even <nat:200> = true ) . { auto . } assert ( <genH> : Nat . even <nat:398> = true ) . { auto . } assert ( <genH> : Nat . even <nat:378> = true ) . { auto . } assert ( <genH> : Nat . even <nat:10> = true ) . { auto . } assert ( <genH> : Nat . even <nat:160> = true ) . { auto . } assert ( <genH> : Nat . even <nat:166> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:308> * <var:T> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:154> * <var:h> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:74> * <var:r> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:200> * <var:w> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:398> * <var:I> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:378> * <var:X> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:10> * <var:j> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:160> * <var:U> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:166> * <var:m> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 