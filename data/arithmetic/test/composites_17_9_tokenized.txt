\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Assuming that there exist $ <var:V> $ , $ <var:M> $ , $ <var:L> $ , $ <var:t> $ , $ <var:S> $ , $ <var:m> $ , $ <var:r> $ , $ <var:z> $ , $ <var:n> \in \mathbb{N} $ we define that some whole number $ <var:f> $ will be considered as a <def:nine-composite> whole number assuming $ <var:f> = <var:t> * <var:m> * <var:r> * <var:S> * <var:V> * <var:z> * <var:L> * <var:M> * <var:n> $ and unique factors are greater than <nat:1> . Therefore <nat:27799200> is a <def:nine-composite> natural number . \end{theorem} \begin{proof} Assume $ <var:V> = <nat:12> $ , $ <var:L> = <nat:10> $ , $ <var:M> = <nat:5> $ , $ <var:t> = <nat:9> $ , $ <var:S> = <nat:2> $ , $ <var:n> = <nat:13> $ , $ <var:r> = <nat:6> $ , $ <var:m> = <nat:11> $ , $ <var:z> = <nat:3> $ . Additionally note that $ <nat:2> $ , $ <nat:13> $ , $ <nat:3> $ , $ <nat:10> $ , $ <nat:12> $ , $ <nat:9> $ , $ <nat:6> $ , $ <nat:11> $ and $ <nat:5> > <nat:1> $ . This produces <nat:27799200> is a <def:nine-composite> integer . Thus , <nat:27799200> is the multiplication between $ <var:n> $ , $ <var:z> $ , $ <var:V> $ , $ <var:r> $ , $ <var:L> $ , $ <var:S> $ , $ <var:M> $ , $ <var:t> $ , $ <var:m> \in \mathbb{Z}^+ $ has been verified . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:nine-composite> ( <var:f> : nat ) := exists <var:V> <var:M> <var:L> <var:t> <var:S> <var:m> <var:r> <var:z> <var:n> : nat , ( <var:f> = <var:t> * <var:m> * <var:r> * <var:S> * <var:V> * <var:z> * <var:L> * <var:M> * <var:n> ) /\ ( <var:V> > <nat:1> ) /\ ( <var:M> > <nat:1> ) /\ ( <var:L> > <nat:1> ) /\ ( <var:t> > <nat:1> ) /\ ( <var:S> > <nat:1> ) /\ ( <var:m> > <nat:1> ) /\ ( <var:r> > <nat:1> ) /\ ( <var:z> > <nat:1> ) /\ ( <var:n> > <nat:1> ) . Theorem <genP:1> : <def:nine-composite> <nat:27799200> . Proof . unfold <def:nine-composite> . exists <nat:12> . exists <nat:5> . exists <nat:10> . exists <nat:9> . exists <nat:2> . exists <nat:11> . exists <nat:6> . exists <nat:3> . exists <nat:13> . assert ( <genH> : <nat:2> > <nat:1> ) . { lia . } assert ( <genH> : <nat:13> > <nat:1> ) . { lia . } assert ( <genH> : <nat:3> > <nat:1> ) . { lia . } assert ( <genH> : <nat:10> > <nat:1> ) . { lia . } assert ( <genH> : <nat:12> > <nat:1> ) . { lia . } assert ( <genH> : <nat:9> > <nat:1> ) . { lia . } assert ( <genH> : <nat:6> > <nat:1> ) . { lia . } assert ( <genH> : <nat:11> > <nat:1> ) . { lia . } assert ( <genH> : <nat:5> > <nat:1> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 