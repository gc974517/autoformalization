\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:223> + <var:y> \cdot <nat:382> + <var:z> \cdot <nat:386> + <nat:264> \cdot <var:P> + <nat:404> \cdot <var:G> + <var:o> \cdot <nat:458> + <var:q> \cdot <nat:148> + <nat:122> \cdot <var:l> + <var:d> \cdot <nat:234> + <var:C> \cdot <nat:94> $ must be odd . \end{theorem} \begin{proof} The summing of even elements of $ \mathbb{Z}^+ $ with an odd element of $ \mathbb{N} $ is an odd integer . In addition , the positive integers $ <nat:382> $ , $ <nat:386> $ , $ <nat:264> $ , $ <nat:404> $ , $ <nat:458> $ , $ <nat:148> $ , $ <nat:122> $ , $ <nat:234> $ , and also $ <nat:94> $ are known as even elements of $ \mathbb{N} $ . As a consequence , the pairs $ <nat:382> <var:y> $ , $ <nat:386> <var:z> $ , $ <nat:264> <var:P> $ , $ <nat:404> <var:G> $ , $ <nat:458> <var:o> $ , $ <nat:148> <var:q> $ , $ <var:l> <nat:122> $ , $ <nat:234> <var:d> $ , and also $ <var:C> <nat:94> $ will be even also . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:y> <var:z> <var:P> <var:G> <var:o> <var:q> <var:l> <var:d> <var:C> : nat , Nat . odd ( <nat:382> * <var:y> + <nat:386> * <var:z> + <nat:264> * <var:P> + <nat:404> * <var:G> + <nat:458> * <var:o> + <nat:148> * <var:q> + <nat:122> * <var:l> + <nat:234> * <var:d> + <nat:94> * <var:C> + <nat:223> ) = true . Proof . intros . rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . assert ( <genH> : Nat . even <nat:382> = true ) . { auto . } assert ( <genH> : Nat . even <nat:386> = true ) . { auto . } assert ( <genH> : Nat . even <nat:264> = true ) . { auto . } assert ( <genH> : Nat . even <nat:404> = true ) . { auto . } assert ( <genH> : Nat . even <nat:458> = true ) . { auto . } assert ( <genH> : Nat . even <nat:148> = true ) . { auto . } assert ( <genH> : Nat . even <nat:122> = true ) . { auto . } assert ( <genH> : Nat . even <nat:234> = true ) . { auto . } assert ( <genH> : Nat . even <nat:94> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:382> * <var:y> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:386> * <var:z> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:264> * <var:P> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:404> * <var:G> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:458> * <var:o> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:148> * <var:q> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:122> * <var:l> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:234> * <var:d> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:94> * <var:C> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 