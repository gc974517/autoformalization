\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:433> + <var:B> * <nat:84> + <var:Z> * <nat:498> + <var:P> * <nat:356> + <var:X> * <nat:166> + <var:k> * <nat:302> $ must be odd . \end{theorem} \begin{proof} We verify our lemma is true . $ <nat:302> \cdot <var:k> + <nat:166> \cdot <var:X> + <nat:498> \cdot <var:Z> + <nat:433> + <var:B> \cdot <nat:84> + <nat:356> \cdot <var:P> $ is guaranteed to be odd since the formula $ <nat:166> <var:X> + <var:k> <nat:302> + <var:Z> <nat:498> + <var:B> <nat:84> + <nat:356> <var:P> $ is even , as a consequence that the multiplication between an even natural number and some element of $ \mathbb{Z}^+ $ is even . See that the leading terms $ <nat:84> $ , $ <nat:166> $ , as well as $ <nat:356> $ will be even On top of this , recall that the integer $ <nat:302> $ is guaranteed to be an even whole number The number $ <nat:498> $ is trivially even Our proposition must be true because the addition between even elements of $ \mathbb{N} $ and an even element of $ \mathbb{Z}^+ $ will be an even element of $ \mathbb{N} $ . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:B> <var:Z> <var:P> <var:X> <var:k> : nat , Nat . odd ( <nat:84> * <var:B> + <nat:498> * <var:Z> + <nat:356> * <var:P> + <nat:166> * <var:X> + <nat:302> * <var:k> + <nat:433> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:84> = true ) . { auto . } assert ( <genH> : Nat . even <nat:166> = true ) . { auto . } assert ( <genH> : Nat . even <nat:356> = true ) . { auto . } assert ( <genH> : Nat . even <nat:302> = true ) . { auto . } assert ( <genH> : Nat . even <nat:498> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:84> * <var:B> + <nat:498> * <var:Z> + <nat:356> * <var:P> + <nat:166> * <var:X> + <nat:302> * <var:k> ) = true ) . { repeat rewrite Nat . even_add . repeat rewrite Nat . even_mul . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . auto . Qed . 