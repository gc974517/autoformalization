\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Taking positive numbers $ <var:D> $ , $ <var:W> $ , $ <var:f> $ , $ <var:Q> $ , $ <var:l> $ , $ <var:t> $ , $ <var:Y> $ , $ <var:a> $ , $ <var:o> $ , $ <var:k> $ , and $ <var:Z> $ the formula $ <nat:162> \times <var:t> + <var:Q> \times <nat:434> + <var:a> \times <nat:88> + <nat:406> \times <var:Y> + <nat:270> \times <var:k> + <nat:40> \times <var:Z> + <var:l> \times <nat:340> + <nat:404> \times <var:o> + <nat:411> + <var:f> \times <nat:222> + <var:D> \times <nat:158> + <nat:226> \times <var:W> $ must be odd . \end{theorem} \begin{proof} We know that the natural numbers $ <nat:40> $ , $ <nat:404> $ , $ <nat:222> $ , $ <nat:88> $ , $ <nat:340> $ , $ <nat:162> $ , $ <nat:406> $ , additionally $ <nat:270> $ are clearly even whole numbers On top of this , notice the number $ <nat:226> $ is known as even Building on , see the integer $ <nat:158> $ is even In addition , the number $ <nat:434> $ is obviously an even element of $ \mathbb{N} $ Observe that $ <nat:411> $ is guaranteed to be an odd element of $ \mathbb{N} $ . It can be shown that $ <nat:226> * <var:W> + <var:a> * <nat:88> + <var:t> * <nat:162> + <var:Y> * <nat:406> + <var:f> * <nat:222> + <var:Z> * <nat:40> + <var:o> * <nat:404> + <var:D> * <nat:158> + <var:Q> * <nat:434> + <nat:411> + <var:l> * <nat:340> + <var:k> * <nat:270> $ is odd . Observe that the multiplication of an even number and some integer must be even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:D> <var:W> <var:f> <var:Q> <var:l> <var:t> <var:Y> <var:a> <var:o> <var:k> <var:Z> : nat , Nat . odd ( <nat:162> * <var:t> + <nat:434> * <var:Q> + <nat:88> * <var:a> + <nat:406> * <var:Y> + <nat:270> * <var:k> + <nat:40> * <var:Z> + <nat:340> * <var:l> + <nat:404> * <var:o> + <nat:222> * <var:f> + <nat:158> * <var:D> + <nat:226> * <var:W> + <nat:411> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:40> = true ) . { auto . } assert ( <genH> : Nat . even <nat:404> = true ) . { auto . } assert ( <genH> : Nat . even <nat:222> = true ) . { auto . } assert ( <genH> : Nat . even <nat:88> = true ) . { auto . } assert ( <genH> : Nat . even <nat:340> = true ) . { auto . } assert ( <genH> : Nat . even <nat:162> = true ) . { auto . } assert ( <genH> : Nat . even <nat:406> = true ) . { auto . } assert ( <genH> : Nat . even <nat:270> = true ) . { auto . } assert ( <genH> : Nat . even <nat:226> = true ) . { auto . } assert ( <genH> : Nat . even <nat:158> = true ) . { auto . } assert ( <genH> : Nat . even <nat:434> = true ) . { auto . } assert ( <genH> : Nat . odd <nat:411> = true ) . { auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . repeat rewrite Nat . even_mul . rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 