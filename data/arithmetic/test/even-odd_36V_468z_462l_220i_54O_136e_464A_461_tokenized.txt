\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Taking every variables $ <var:l> $ , $ <var:A> $ , $ <var:i> $ , $ <var:O> $ , $ <var:V> $ , $ <var:z> $ , and $ <var:e> $ the sum $ <nat:36> <var:V> + <nat:468> <var:z> + <var:l> <nat:462> + <var:i> <nat:220> + <var:O> <nat:54> + <nat:136> <var:e> + <var:A> <nat:464> + <nat:461> $ is guaranteed to be odd . \end{theorem} \begin{proof} The terms $ <var:z> * <nat:468> $ , $ <var:i> * <nat:220> $ , $ <var:V> * <nat:36> $ , and $ <var:l> * <nat:462> $ will be even whole numbers since the multiplication between an even number in $ \mathbb{N} $ and a element of $ \mathbb{N} $ is even . The product $ <nat:54> * <var:O> $ is guaranteed to be even . The product $ <nat:464> * <var:A> $ is known as even as a consequence that the multiplication of an even element of $ \mathbb{Z}^+ $ with a element of $ \mathbb{Z}^+ $ must be an even natural . The pair $ <nat:136> * <var:e> $ is known to be an even natural number from the knowledge multiplying of an even natural and a positive integer must be even . It can be demonstrated that the claim must be true . Remember $ <nat:461> $ is clearly an odd number in $ \mathbb{N} $ . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:l> <var:A> <var:i> <var:O> <var:V> <var:z> <var:e> : nat , Nat . odd ( <nat:36> * <var:V> + <nat:468> * <var:z> + <nat:462> * <var:l> + <nat:220> * <var:i> + <nat:54> * <var:O> + <nat:136> * <var:e> + <nat:464> * <var:A> + <nat:461> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:468> * <var:z> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:220> * <var:i> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:36> * <var:V> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:462> * <var:l> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:54> * <var:O> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:464> * <var:A> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:136> * <var:e> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . odd <nat:461> = true ) . { auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 