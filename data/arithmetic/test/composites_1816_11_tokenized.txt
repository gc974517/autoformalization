\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} The natural number <nat:1037836800> is the multiplication of numbers $ <var:N> $ , $ <var:y> $ , $ <var:t> $ , $ <var:D> $ , $ <var:z> $ , $ <var:S> $ , $ <var:j> $ , $ <var:m> $ , $ <var:w> $ , $ <var:Z> $ , $ <var:s> \in \mathbb{Z}^+ $ where $ <var:w> $ , $ <var:s> $ , $ <var:S> $ , $ <var:y> $ , $ <var:N> $ , $ <var:t> $ , $ <var:j> $ , $ <var:D> $ , $ <var:m> $ , $ <var:z> $ and $ <var:Z> $ larger than or equal to <nat:2> . \end{theorem} \begin{proof} Let $ <var:s> = <nat:9> $ , $ <var:j> = <nat:7> $ , $ <var:N> = <nat:11> $ , $ <var:y> = <nat:5> $ , $ <var:w> = <nat:4> $ , $ <var:S> = <nat:3> $ , $ <var:z> = <nat:13> $ , $ <var:D> = <nat:2> $ , $ <var:m> = <nat:8> $ , $ <var:t> = <nat:12> $ , and $ <var:Z> = <nat:10> $ . Observe that $ <nat:12> $ , $ <nat:8> $ , $ <nat:2> $ , $ <nat:10> $ , $ <nat:4> $ , $ <nat:7> $ , $ <nat:3> $ , $ <nat:9> $ , $ <nat:11> $ , $ <nat:13> $ , and $ <nat:5> \geq <nat:2> $ . \end{proof} \end{document} 
~
Require Import Lia . Theorem <genP:1> : exists <var:N> <var:y> <var:t> <var:D> <var:z> <var:S> <var:j> <var:m> <var:w> <var:Z> <var:s> : nat , ( <nat:1037836800> = <var:N> * <var:y> * <var:t> * <var:D> * <var:z> * <var:S> * <var:j> * <var:m> * <var:w> * <var:Z> * <var:s> ) /\ ( <var:w> >= <nat:2> ) /\ ( <var:s> >= <nat:2> ) /\ ( <var:S> >= <nat:2> ) /\ ( <var:y> >= <nat:2> ) /\ ( <var:N> >= <nat:2> ) /\ ( <var:t> >= <nat:2> ) /\ ( <var:j> >= <nat:2> ) /\ ( <var:D> >= <nat:2> ) /\ ( <var:m> >= <nat:2> ) /\ ( <var:z> >= <nat:2> ) /\ ( <var:Z> >= <nat:2> ) . Proof . exists <nat:11> . exists <nat:5> . exists <nat:12> . exists <nat:2> . exists <nat:13> . exists <nat:3> . exists <nat:7> . exists <nat:8> . exists <nat:4> . exists <nat:10> . exists <nat:9> . assert ( <genH> : <nat:12> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:8> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:2> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:10> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:4> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:7> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:3> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:9> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:11> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:13> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:5> >= <nat:2> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 