\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:k> \cdot <nat:14> + <nat:443> + <nat:82> \cdot <var:G> + <var:z> \cdot <nat:440> + <nat:142> \cdot <var:L> + <var:Y> \cdot <nat:202> + <var:h> \cdot <nat:386> $ will be odd given any positive terms $ <var:z> $ , $ <var:L> $ , $ <var:k> $ , $ <var:h> $ , $ <var:G> $ , and $ <var:Y> $ . \end{theorem} \begin{proof} Notice the summing of an even whole number and an odd element of $ \mathbb{Z}^+ $ must be an odd integer . Take note that $ <nat:443> $ is clearly odd . We know the pairs $ <nat:14> \times <var:k> $ , $ <nat:82> \times <var:G> $ , $ <var:z> \times <nat:440> $ , $ <var:L> \times <nat:142> $ , $ <nat:202> \times <var:Y> $ , in addition to $ <var:h> \times <nat:386> $ are trivially even by reason that multiplying of an even positive integer and an arbitrary natural must be an even number in $ \mathbb{Z}^+ $ , which is true from the knowledge the positive integers $ <nat:14> $ , $ <nat:82> $ , $ <nat:440> $ , $ <nat:142> $ , $ <nat:202> $ , and moreover $ <nat:386> $ must be even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:z> <var:L> <var:k> <var:h> <var:G> <var:Y> : nat , Nat . odd ( <nat:14> * <var:k> + <nat:82> * <var:G> + <nat:440> * <var:z> + <nat:142> * <var:L> + <nat:202> * <var:Y> + <nat:386> * <var:h> + <nat:443> ) = true . Proof . intros . rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . assert ( <genH> : Nat . odd <nat:443> = true ) . { auto . } assert ( <genH> : Nat . even <nat:14> = true ) . { auto . } assert ( <genH> : Nat . even <nat:82> = true ) . { auto . } assert ( <genH> : Nat . even <nat:440> = true ) . { auto . } assert ( <genH> : Nat . even <nat:142> = true ) . { auto . } assert ( <genH> : Nat . even <nat:202> = true ) . { auto . } assert ( <genH> : Nat . even <nat:386> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:14> * <var:k> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:82> * <var:G> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:440> * <var:z> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:142> * <var:L> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:202> * <var:Y> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:386> * <var:h> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 