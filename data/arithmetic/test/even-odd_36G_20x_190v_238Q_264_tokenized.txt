\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:Q> \cdot <nat:238> + <nat:36> \cdot <var:G> + <nat:264> + <var:v> \cdot <nat:190> + <var:x> \cdot <nat:20> $ is even . \end{theorem} \begin{proof} $ <var:v> * <nat:190> + <nat:36> * <var:G> + <var:Q> * <nat:238> + <nat:20> * <var:x> $ is obviously even . The pair $ <var:G> \times <nat:36> $ is an even element of $ \mathbb{N} $ by reason that the leading term $ <nat:36> $ is an even integer . Notice that the integer $ <nat:238> $ is clearly an even whole number . So , the term $ <var:Q> \times <nat:238> $ is guaranteed to be even too . What's more , notice the product $ <nat:190> \times <var:v> $ is obviously even . This must be true since the coefficient $ <nat:190> $ is trivially even . On top of this , the product $ <var:x> \times <nat:20> $ is trivially an even whole number from the fact the multiplication of an even whole number with any number in $ \mathbb{Z}^+ $ will be by its very nature an even natural , and must be true from the knowledge the number $ <nat:20> $ is known as an even element of $ \mathbb{N} $ . $ <var:v> * <nat:190> + <nat:36> * <var:G> + <var:Q> * <nat:238> + <var:x> * <nat:20> $ is instrinsically even since taking the product of an even number and an arbitrary number in $ \mathbb{N} $ is guaranteed to be even . We verify $ <var:G> \cdot <nat:36> + <var:x> \cdot <nat:20> + <nat:264> + <var:v> \cdot <nat:190> + <nat:238> \cdot <var:Q> $ is even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:Q> <var:G> <var:v> <var:x> : nat , Nat . even ( <nat:238> * <var:Q> + <nat:36> * <var:G> + <nat:190> * <var:v> + <nat:20> * <var:x> + <nat:264> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:36> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:36> * <var:G> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:238> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:238> * <var:Q> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:190> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:190> * <var:v> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:20> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:20> * <var:x> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:238> * <var:Q> + <nat:36> * <var:G> + <nat:190> * <var:v> + <nat:20> * <var:x> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . even_add . rewrite <genH> . auto . Qed . 