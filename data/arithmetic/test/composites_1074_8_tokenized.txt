\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} There exist some $ <var:c> $ , $ <var:Z> $ , $ <var:E> $ , $ <var:q> $ , $ <var:a> $ , $ <var:G> $ , $ <var:y> $ and $ <var:g> $ so that $ <var:a> $ , $ <var:q> $ , $ <var:G> $ , $ <var:E> $ , $ <var:c> $ , $ <var:Z> $ , $ <var:g> $ and $ <var:y> $ more than or equivalent to <nat:2> as well as where $ <nat:10810800> $ is equivalent to $ <var:a> \times <var:Z> \times <var:y> \times <var:G> \times <var:q> \times <var:g> \times <var:E> \times <var:c> $ . \end{theorem} \begin{proof} Allow $ <var:G> = <nat:5> $ , $ <var:g> = <nat:9> $ , $ <var:Z> = <nat:13> $ , $ <var:E> = <nat:10> $ , $ <var:y> = <nat:2> $ , $ <var:q> = <nat:12> $ , $ <var:a> = <nat:7> $ , $ <var:c> = <nat:11> $ . We prove our proposition is valid on account of $ <var:a> = <nat:7> $ , $ <var:q> = <nat:12> $ , $ <var:c> = <nat:11> $ , $ <var:G> = <nat:5> $ , $ <var:Z> = <nat:13> $ , $ <var:g> = <nat:9> $ , $ <var:y> = <nat:2> $ and $ <var:E> = <nat:10> \geq <nat:2> $ . \end{proof} \end{document} 
~
Require Import Lia . Theorem <genP:1> : exists <var:c> <var:Z> <var:E> <var:q> <var:a> <var:G> <var:y> <var:g> : nat , ( <var:a> >= <nat:2> ) /\ ( <var:q> >= <nat:2> ) /\ ( <var:G> >= <nat:2> ) /\ ( <var:E> >= <nat:2> ) /\ ( <var:c> >= <nat:2> ) /\ ( <var:Z> >= <nat:2> ) /\ ( <var:g> >= <nat:2> ) /\ ( <var:y> >= <nat:2> ) /\ ( <nat:10810800> = <var:a> * <var:Z> * <var:y> * <var:G> * <var:q> * <var:g> * <var:E> * <var:c> ) . Proof . exists <nat:11> . exists <nat:13> . exists <nat:10> . exists <nat:12> . exists <nat:7> . exists <nat:5> . exists <nat:2> . exists <nat:9> . assert ( <genH> : <nat:7> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:12> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:11> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:5> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:13> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:9> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:2> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:10> >= <nat:2> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 