\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:F> * <nat:360> + <nat:318> + <var:B> * <nat:472> + <nat:52> * <var:w> + <var:t> * <nat:348> + <var:k> * <nat:50> + <nat:326> * <var:r> + <var:n> * <nat:62> + <nat:222> * <var:J> + <var:S> * <nat:448> + <var:g> * <nat:240> + <var:R> * <nat:322> $ is guaranteed to be even . \end{theorem} \begin{proof} It can be justified that that $ <nat:52> * <var:w> + <nat:62> * <var:n> + <nat:348> * <var:t> + <var:R> * <nat:322> + <var:J> * <nat:222> + <nat:240> * <var:g> + <nat:472> * <var:B> + <nat:326> * <var:r> + <nat:50> * <var:k> + <nat:448> * <var:S> + <nat:360> * <var:F> $ is clearly even . Observe the product $ <nat:240> <var:g> $ is obviously even by reason that the leading term $ <nat:240> $ is clearly an even element of $ \mathbb{N} $ . In addition , remember the number $ <nat:62> $ is known to be an even element of $ \mathbb{Z}^+ $ . Then , $ <var:n> <nat:62> $ is even as well . In addition to this , the product $ <nat:472> <var:B> $ is known as an even integer from the knowledge the number $ <nat:472> $ is guaranteed to be even . The pair $ <nat:52> <var:w> $ is known as even . This claim is true by reason that taking the product between an even natural and an arbitrary positive integer is guaranteed to be even and also the leading term $ <nat:52> $ is instrinsically an even number . Further , we know $ <var:t> <nat:348> $ is known to be an even element of $ \mathbb{Z}^+ $ by reason that the coefficient $ <nat:348> $ is known to be even . In addition , observe that the natural number $ <nat:50> $ is guaranteed to be even . In consequence , $ <var:k> <nat:50> $ will be even also . In addition to this , the pair $ <nat:322> <var:R> $ is obviously even . This holds from the knowledge the multiplication between an even number in $ \mathbb{Z}^+ $ and any number in $ \mathbb{Z}^+ $ is guaranteed to be an even element of $ \mathbb{N} $ . This claim holds because the natural number $ <nat:322> $ is obviously an even number . In addition to this , the term $ <var:r> <nat:326> $ is known to be even . This fact is proven from the knowledge the leading term $ <nat:326> $ is known as itself an even positive integer . In addition to this , the whole number $ <nat:448> $ is guaranteed to be even . As a consequence , the product $ <nat:448> <var:S> $ is guaranteed to be even as well . Likewise , the coefficient $ <nat:222> $ is clearly an even natural . Consequently , $ <nat:222> <var:J> $ must be even too . The leading term $ <nat:360> $ is clearly even . So , $ <var:F> <nat:360> $ will be even as well . The formula $ <nat:240> \cdot <var:g> + <var:B> \cdot <nat:472> + <var:t> \cdot <nat:348> + <var:r> \cdot <nat:326> + <nat:360> \cdot <var:F> + <var:n> \cdot <nat:62> + <var:R> \cdot <nat:322> + <nat:50> \cdot <var:k> + <nat:222> \cdot <var:J> + <var:S> \cdot <nat:448> + <var:w> \cdot <nat:52> $ is obviously even from the knowledge multiplying of even positive integers and some whole number will be an even integer . We demonstrate $ <nat:448> <var:S> + <nat:360> <var:F> + <var:J> <nat:222> + <var:n> <nat:62> + <nat:50> <var:k> + <nat:52> <var:w> + <nat:326> <var:r> + <nat:348> <var:t> + <var:g> <nat:240> + <nat:318> + <var:B> <nat:472> + <nat:322> <var:R> $ is even . Observe $ <nat:318> $ is trivially even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:F> <var:B> <var:w> <var:t> <var:k> <var:r> <var:n> <var:J> <var:S> <var:g> <var:R> : nat , Nat . even ( <nat:360> * <var:F> + <nat:472> * <var:B> + <nat:52> * <var:w> + <nat:348> * <var:t> + <nat:50> * <var:k> + <nat:326> * <var:r> + <nat:62> * <var:n> + <nat:222> * <var:J> + <nat:448> * <var:S> + <nat:240> * <var:g> + <nat:322> * <var:R> + <nat:318> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:240> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:240> * <var:g> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:62> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:62> * <var:n> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:472> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:472> * <var:B> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:52> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:52> * <var:w> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:348> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:348> * <var:t> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:50> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:50> * <var:k> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:322> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:322> * <var:R> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:326> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:326> * <var:r> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:448> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:448> * <var:S> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:222> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:222> * <var:J> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:360> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:360> * <var:F> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:360> * <var:F> + <nat:472> * <var:B> + <nat:52> * <var:w> + <nat:348> * <var:t> + <nat:50> * <var:k> + <nat:326> * <var:r> + <nat:62> * <var:n> + <nat:222> * <var:J> + <nat:448> * <var:S> + <nat:240> * <var:g> + <nat:322> * <var:R> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:318> = true ) . { auto . } rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . auto . Qed . 