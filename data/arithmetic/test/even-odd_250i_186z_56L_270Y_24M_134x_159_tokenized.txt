\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:Y> \cdot <nat:270> + <nat:250> \cdot <var:i> + <nat:159> + <nat:134> \cdot <var:x> + <var:z> \cdot <nat:186> + <var:L> \cdot <nat:56> + <var:M> \cdot <nat:24> $ must be odd for any integers $ <var:M> $ , $ <var:Y> $ , $ <var:i> $ , $ <var:L> $ , $ <var:z> $ , and $ <var:x> $ . \end{theorem} \begin{proof} The summation between an even natural and an odd element of $ \mathbb{Z}^+ $ is by definition an odd element of $ \mathbb{Z}^+ $ . It can be verified that that the expression $ <var:L> \times <nat:56> + <var:z> \times <nat:186> + <nat:24> \times <var:M> + <nat:270> \times <var:Y> + <nat:250> \times <var:i> + <nat:134> \times <var:x> $ is known to be even . See that the leading term $ <nat:24> $ is guaranteed to be even . In consequence , the term $ <var:M> \times <nat:24> $ must be even too . Likewise , the term $ <var:Y> \times <nat:270> $ is trivially even . This fact is true as a consequence that the integer $ <nat:270> $ is clearly even . In addition to this , recall the pair $ <var:z> \times <nat:186> $ is obviously even . This fact must be true because taking the product of an even number in $ \mathbb{Z}^+ $ and an arbitrary integer will be obviously an even whole number . This is proven from the fact the leading term $ <nat:186> $ is clearly clearly an even natural . We know that the term $ <var:i> \times <nat:250> $ is trivially an even integer . This claim is proven because multiplying between an even element of $ \mathbb{Z}^+ $ with an arbitrary element of $ \mathbb{N} $ must be fundamentally an even whole number , and is proven from the knowledge the positive integer $ <nat:250> $ is known to be by itself an even positive integer . Building on , notice that $ <var:L> \times <nat:56> $ is clearly an even whole number from the knowledge the leading term $ <nat:56> $ is clearly by definition an even natural . The pair $ <nat:134> \times <var:x> $ is obviously even . This holds since the coefficient $ <nat:134> $ is known as even . The expression $ <nat:250> \cdot <var:i> + <nat:186> \cdot <var:z> + <var:L> \cdot <nat:56> + <nat:270> \cdot <var:Y> + <var:M> \cdot <nat:24> + <var:x> \cdot <nat:134> $ must be itself even as a consequence that the totaling of even elements of $ \mathbb{Z}^+ $ and even elements of $ \mathbb{Z}^+ $ is clearly an even number in $ \mathbb{N} $ . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:M> <var:Y> <var:i> <var:L> <var:z> <var:x> : nat , Nat . odd ( <nat:270> * <var:Y> + <nat:250> * <var:i> + <nat:134> * <var:x> + <nat:186> * <var:z> + <nat:56> * <var:L> + <nat:24> * <var:M> + <nat:159> ) = true . Proof . intros . rewrite Nat . odd_add . assert ( <genH> : Nat . even <nat:24> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:24> * <var:M> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:270> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:270> * <var:Y> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:186> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:186> * <var:z> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:250> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:250> * <var:i> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:56> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:56> * <var:L> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:134> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:134> * <var:x> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:270> * <var:Y> + <nat:250> * <var:i> + <nat:134> * <var:x> + <nat:186> * <var:z> + <nat:56> * <var:L> + <nat:24> * <var:M> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite <- Nat . negb_even . rewrite <genH> . auto . Qed . 