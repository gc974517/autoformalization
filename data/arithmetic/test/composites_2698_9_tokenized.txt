\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \newtheorem{definition}{Definition} \begin{document} \begin{definition} Assuming that we get $ <var:K> * <var:F> * <var:f> * <var:L> * <var:Z> * <var:d> * <var:q> * <var:C> * <var:p> = <var:B> $ given $ <var:B> \in \mathbb{Z}^+ $ and satisfying the condition that $ <var:p> $ , $ <var:L> $ , $ <var:F> $ , $ <var:d> $ , $ <var:f> $ , $ <var:C> $ , $ <var:q> $ , $ <var:K> $ , $ <var:Z> \geq <nat:2> $ , take as given that $ <var:B> $ is a <def:nine-composite> number for some $ <var:Z> $ , $ <var:q> $ , $ <var:f> $ , $ <var:p> $ , $ <var:F> $ , $ <var:C> $ , $ <var:K> $ , $ <var:L> $ , $ <var:d> \in \mathbb{Z}^+ $ . \end{definition} \begin{theorem} <nat:20966400> is a <def:nine-composite> number . \end{theorem} \begin{proof} Remember that <nat:20966400> is a <def:nine-composite> positive integer under the condition <nat:20966400> is the product between whole numbers $ <var:q> $ , $ <var:Z> $ , $ <var:d> $ , $ <var:L> $ , $ <var:C> $ , $ <var:f> $ , $ <var:K> $ , $ <var:F> $ , $ <var:p> $ so that $ <var:p> $ , $ <var:Z> $ , $ <var:F> $ , $ <var:q> $ , $ <var:C> $ , $ <var:K> $ , $ <var:L> $ , $ <var:f> $ , $ <var:d> > <nat:1> $ . We show <nat:20966400> is a <def:nine-composite> integer . We justify <nat:20966400> is a <def:nine-composite> number on account of $ <nat:4> $ , $ <nat:5> $ , $ <nat:10> $ , $ <nat:7> $ , $ <nat:6> $ , $ <nat:13> $ , $ <nat:2> $ , $ <nat:8> $ and $ <nat:12> $ are larger than <nat:1> and because $ <nat:20966400> = <var:K> * <var:f> * <var:C> * <var:q> * <var:F> * <var:d> * <var:L> * <var:Z> * <var:p> $ yields $ <var:p> = <nat:7> $ , $ <var:K> = <nat:10> $ , $ <var:d> = <nat:5> $ , $ <var:f> = <nat:4> $ , $ <var:F> = <nat:13> $ , $ <var:q> = <nat:2> $ , $ <var:C> = <nat:6> $ , $ <var:Z> = <nat:12> $ , $ <var:L> = <nat:8> $ . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:nine-composite> ( <var:B> : nat ) := exists <var:Z> <var:q> <var:f> <var:p> <var:F> <var:C> <var:K> <var:L> <var:d> : nat , ( <var:K> * <var:F> * <var:f> * <var:L> * <var:Z> * <var:d> * <var:q> * <var:C> * <var:p> = <var:B> ) /\ ( <var:p> >= <nat:2> ) /\ ( <var:L> >= <nat:2> ) /\ ( <var:F> >= <nat:2> ) /\ ( <var:d> >= <nat:2> ) /\ ( <var:f> >= <nat:2> ) /\ ( <var:C> >= <nat:2> ) /\ ( <var:q> >= <nat:2> ) /\ ( <var:K> >= <nat:2> ) /\ ( <var:Z> >= <nat:2> ) . Theorem <genP:1> : <def:nine-composite> <nat:20966400> . Proof . unfold <def:nine-composite> . assert ( <genH> : <nat:4> > <nat:1> ) . { lia . } assert ( <genH> : <nat:5> > <nat:1> ) . { lia . } assert ( <genH> : <nat:10> > <nat:1> ) . { lia . } assert ( <genH> : <nat:7> > <nat:1> ) . { lia . } assert ( <genH> : <nat:6> > <nat:1> ) . { lia . } assert ( <genH> : <nat:13> > <nat:1> ) . { lia . } assert ( <genH> : <nat:2> > <nat:1> ) . { lia . } assert ( <genH> : <nat:8> > <nat:1> ) . { lia . } assert ( <genH> : <nat:12> > <nat:1> ) . { lia . } exists <nat:12> . exists <nat:2> . exists <nat:4> . exists <nat:7> . exists <nat:13> . exists <nat:6> . exists <nat:10> . exists <nat:8> . exists <nat:5> . repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 