\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \newtheorem{definition}{Definition} \begin{document} \begin{definition} Take $ <var:m> $ , $ <var:K> $ , $ <var:P> $ , $ <var:M> $ , $ <var:Z> $ , $ <var:X> $ , $ <var:D> $ , $ <var:h> $ , $ <var:i> $ , $ <var:e> \in \mathbb{N} $ such that $ <var:h> $ , $ <var:P> $ , $ <var:X> $ , $ <var:e> $ , $ <var:K> $ , $ <var:M> $ , $ <var:D> $ , $ <var:i> $ , $ <var:m> $ and $ <var:Z> \geq <nat:2> $ . Take as given that some number $ <var:z> $ is <def:ten-composite> if $ <var:P> \times <var:m> \times <var:K> \times <var:e> \times <var:D> \times <var:M> \times <var:Z> \times <var:h> \times <var:i> \times <var:X> = <var:z> $ . \end{definition} \begin{theorem} $ <var:z> = <nat:259459200> $ is a <def:ten-composite> positive integer . \end{theorem} \begin{proof} Note that $ <var:m> \times <var:D> \times <var:Z> \times <var:e> \times <var:X> \times <var:K> \times <var:P> \times <var:M> \times <var:h> \times <var:i> = <nat:8> \times <nat:11> \times <nat:7> \times <nat:13> \times <nat:2> \times <nat:3> \times <nat:10> \times <nat:5> \times <nat:9> \times <nat:12> = <nat:259459200> $ . Moreover observe $ <nat:7> $ , $ <nat:5> $ , $ <nat:2> $ , $ <nat:12> $ , $ <nat:8> $ , $ <nat:11> $ , $ <nat:10> $ , $ <nat:3> $ , $ <nat:9> $ , and $ <nat:13> $ are larger than or equivalent to <nat:2> . This suggests our principle holds . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:ten-composite> ( <var:z> : nat ) := exists <var:m> <var:K> <var:P> <var:M> <var:Z> <var:X> <var:D> <var:h> <var:i> <var:e> : nat , ( <var:h> >= <nat:2> ) /\ ( <var:P> >= <nat:2> ) /\ ( <var:X> >= <nat:2> ) /\ ( <var:e> >= <nat:2> ) /\ ( <var:K> >= <nat:2> ) /\ ( <var:M> >= <nat:2> ) /\ ( <var:D> >= <nat:2> ) /\ ( <var:i> >= <nat:2> ) /\ ( <var:m> >= <nat:2> ) /\ ( <var:Z> >= <nat:2> ) /\ ( <var:P> * <var:m> * <var:K> * <var:e> * <var:D> * <var:M> * <var:Z> * <var:h> * <var:i> * <var:X> = <var:z> ) . Theorem <genP:1> : <def:ten-composite> <nat:259459200> . Proof . unfold <def:ten-composite> . exists <nat:8> . exists <nat:3> . exists <nat:10> . exists <nat:5> . exists <nat:7> . exists <nat:2> . exists <nat:11> . exists <nat:9> . exists <nat:12> . exists <nat:13> . assert ( <genH> : <nat:7> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:5> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:2> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:12> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:8> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:11> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:10> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:3> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:9> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:13> >= <nat:2> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 