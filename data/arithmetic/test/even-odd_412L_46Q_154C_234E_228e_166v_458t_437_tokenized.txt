\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} With every $ <var:e> $ , $ <var:C> $ , $ <var:Q> $ , $ <var:L> $ , $ <var:t> $ , $ <var:E> $ , and $ <var:v> \in \mathbb{N} $ the expression $ <var:L> * <nat:412> + <var:Q> * <nat:46> + <var:C> * <nat:154> + <var:E> * <nat:234> + <var:e> * <nat:228> + <var:v> * <nat:166> + <nat:437> + <nat:458> * <var:t> $ must be odd . \end{theorem} \begin{proof} Notice that the addition of an even number in $ \mathbb{N} $ with an odd number will be an odd number in $ \mathbb{N} $ . See that $ <nat:437> $ is known as an odd number . Take note that the pairs $ <var:v> \cdot <nat:166> $ , $ <nat:458> \cdot <var:t> $ , $ <var:Q> \cdot <nat:46> $ , $ <var:L> \cdot <nat:412> $ , additionally $ <var:E> \cdot <nat:234> $ are known to be even . See that the pair $ <nat:228> \cdot <var:e> $ is obviously even . This claim is proven from the fact multiplying of an even integer with an arbitrary number in $ \mathbb{N} $ must be even . Further , the product $ <nat:154> \cdot <var:C> $ is obviously even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:e> <var:C> <var:Q> <var:L> <var:t> <var:E> <var:v> : nat , Nat . odd ( <nat:412> * <var:L> + <nat:46> * <var:Q> + <nat:154> * <var:C> + <nat:234> * <var:E> + <nat:228> * <var:e> + <nat:166> * <var:v> + <nat:458> * <var:t> + <nat:437> ) = true . Proof . intros . rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . assert ( <genH> : Nat . odd <nat:437> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:166> * <var:v> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:458> * <var:t> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:46> * <var:Q> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:412> * <var:L> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:234> * <var:E> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:228> * <var:e> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:154> * <var:C> ) = true ) . { rewrite Nat . even_mul . auto . } rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 