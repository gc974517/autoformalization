\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:327> + <var:K> <nat:430> + <nat:162> <var:F> + <nat:40> <var:Z> + <nat:372> <var:j> + <nat:354> <var:W> $ is guaranteed to be odd with $ <var:F> $ , $ <var:j> $ , $ <var:W> $ , $ <var:K> $ , and $ <var:Z> $ . \end{theorem} \begin{proof} The summing of an even integer with an odd positive integer is odd . See that the summation $ <nat:40> * <var:Z> + <var:K> * <nat:430> + <var:W> * <nat:354> + <var:F> * <nat:162> + <var:j> * <nat:372> $ is known as even . See the whole numbers $ <nat:40> $ , $ <nat:430> $ , $ <nat:354> $ , $ <nat:162> $ , as well as $ <nat:372> $ are known to be even whole numbers . Then , the pairs $ <nat:40> <var:Z> $ , $ <nat:430> <var:K> $ , $ <var:W> <nat:354> $ , $ <nat:162> <var:F> $ , and moreover $ <var:j> <nat:372> $ is guaranteed to be even also . It can be proven that $ <nat:40> <var:Z> + <nat:354> <var:W> + <nat:372> <var:j> + <var:K> <nat:430> + <nat:327> + <var:F> <nat:162> $ is guaranteed to be odd . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:F> <var:j> <var:W> <var:K> <var:Z> : nat , Nat . odd ( <nat:430> * <var:K> + <nat:162> * <var:F> + <nat:40> * <var:Z> + <nat:372> * <var:j> + <nat:354> * <var:W> + <nat:327> ) = true . Proof . intros . rewrite Nat . odd_add . assert ( <genH> : Nat . even <nat:40> = true ) . { auto . } assert ( <genH> : Nat . even <nat:430> = true ) . { auto . } assert ( <genH> : Nat . even <nat:354> = true ) . { auto . } assert ( <genH> : Nat . even <nat:162> = true ) . { auto . } assert ( <genH> : Nat . even <nat:372> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:40> * <var:Z> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:430> * <var:K> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:354> * <var:W> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:162> * <var:F> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:372> * <var:j> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:430> * <var:K> + <nat:162> * <var:F> + <nat:40> * <var:Z> + <nat:372> * <var:j> + <nat:354> * <var:W> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite <- Nat . negb_even . rewrite <genH> . auto . Qed . 