\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Take that $ <var:D> $ is <def:seven-composite> supposing that there are $ <var:H> $ , $ <var:f> $ , $ <var:L> $ , $ <var:U> $ , $ <var:d> $ , $ <var:p> $ , $ <var:k> \in \mathbb{Z}^+ $ where satisfying the condition that $ <var:f> $ , $ <var:p> $ , $ <var:L> $ , $ <var:k> $ , $ <var:d> $ , $ <var:H> $ and $ <var:U> > <nat:1> $ as well as taking some $ <var:D> $ , $ <var:D> = <var:k> * <var:d> * <var:H> * <var:f> * <var:p> * <var:U> * <var:L> $ . So the positive integer <nat:245700> is a <def:seven-composite> positive integer . \end{theorem} \begin{proof} Remember <nat:245700> is a <def:seven-composite> natural number when <nat:245700> is the product between $ <var:L> $ , $ <var:f> $ , $ <var:p> $ , $ <var:U> $ , $ <var:k> $ , $ <var:d> $ , and $ <var:H> $ so that $ <var:U> $ , $ <var:f> $ , $ <var:p> $ , $ <var:k> $ , $ <var:L> $ , $ <var:d> $ , $ <var:H> > <nat:1> $ . Observe that $ <nat:2> $ , $ <nat:10> $ , $ <nat:5> $ , $ <nat:13> $ , $ <nat:3> $ , $ <nat:7> $ , and $ <nat:9> > <nat:1> $ . Additionally notice moreover $ <var:H> \cdot <var:d> \cdot <var:L> \cdot <var:U> \cdot <var:k> \cdot <var:f> \cdot <var:p> = <nat:13> \cdot <nat:10> \cdot <nat:3> \cdot <nat:5> \cdot <nat:9> \cdot <nat:7> \cdot <nat:2> = <nat:245700> $ . This gives our claim holds . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:seven-composite> ( <var:D> : nat ) := exists <var:H> <var:f> <var:L> <var:U> <var:d> <var:p> <var:k> : nat , ( <var:f> > <nat:1> ) /\ ( <var:p> > <nat:1> ) /\ ( <var:L> > <nat:1> ) /\ ( <var:k> > <nat:1> ) /\ ( <var:d> > <nat:1> ) /\ ( <var:H> > <nat:1> ) /\ ( <var:U> > <nat:1> ) /\ ( <var:D> = <var:k> * <var:d> * <var:H> * <var:f> * <var:p> * <var:U> * <var:L> ) . Theorem <genP:1> : <def:seven-composite> <nat:245700> . Proof . unfold <def:seven-composite> . assert ( <genH> : <nat:2> > <nat:1> ) . { lia . } assert ( <genH> : <nat:10> > <nat:1> ) . { lia . } assert ( <genH> : <nat:5> > <nat:1> ) . { lia . } assert ( <genH> : <nat:13> > <nat:1> ) . { lia . } assert ( <genH> : <nat:3> > <nat:1> ) . { lia . } assert ( <genH> : <nat:7> > <nat:1> ) . { lia . } assert ( <genH> : <nat:9> > <nat:1> ) . { lia . } exists <nat:13> . exists <nat:7> . exists <nat:3> . exists <nat:5> . exists <nat:10> . exists <nat:2> . exists <nat:9> . repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 