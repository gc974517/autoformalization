\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:z> * <nat:226> + <var:c> * <nat:34> + <nat:194> * <var:B> + <var:e> * <nat:448> + <var:o> * <nat:278> + <nat:340> + <nat:326> * <var:V> $ is guaranteed to be even using all positive numbers $ <var:B> $ , $ <var:c> $ , $ <var:e> $ , $ <var:o> $ , $ <var:V> $ , and $ <var:z> $ . \end{theorem} \begin{proof} In addition , take note the products $ <nat:226> \times <var:z> $ , $ <var:c> \times <nat:34> $ , $ <var:B> \times <nat:194> $ , $ <var:e> \times <nat:448> $ , $ <nat:278> \times <var:o> $ , and moreover $ <var:V> \times <nat:326> $ are obviously even . This must be true because multiplying of an even natural and any whole number is even . This claim holds by reason that the leading terms $ <nat:226> $ , $ <nat:34> $ , $ <nat:194> $ , $ <nat:448> $ , $ <nat:278> $ , and $ <nat:326> $ must be even elements of $ \mathbb{Z}^+ $ . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:B> <var:c> <var:e> <var:o> <var:V> <var:z> : nat , Nat . even ( <nat:226> * <var:z> + <nat:34> * <var:c> + <nat:194> * <var:B> + <nat:448> * <var:e> + <nat:278> * <var:o> + <nat:326> * <var:V> + <nat:340> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:226> = true ) . { auto . } assert ( <genH> : Nat . even <nat:34> = true ) . { auto . } assert ( <genH> : Nat . even <nat:194> = true ) . { auto . } assert ( <genH> : Nat . even <nat:448> = true ) . { auto . } assert ( <genH> : Nat . even <nat:278> = true ) . { auto . } assert ( <genH> : Nat . even <nat:326> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:226> * <var:z> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:34> * <var:c> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:194> * <var:B> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:448> * <var:e> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:278> * <var:o> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:326> * <var:V> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 