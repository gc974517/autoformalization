\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:488> \cdot <var:G> + <var:B> \cdot <nat:296> + <var:F> \cdot <nat:304> + <var:H> \cdot <nat:106> + <nat:382> \cdot <var:q> + <nat:41> $ is guaranteed to be odd taking every unknowns $ <var:B> $ , $ <var:F> $ , $ <var:H> $ , $ <var:G> $ , and $ <var:q> $ . \end{theorem} \begin{proof} We check this proposition must be true . We know the terms $ <var:G> \cdot <nat:488> $ , $ <var:B> \cdot <nat:296> $ , $ <nat:304> \cdot <var:F> $ , $ <var:H> \cdot <nat:106> $ , $ <nat:382> \cdot <var:q> $ , are obviously even . This fact is proven from the knowledge the leading terms $ <nat:488> $ , $ <nat:296> $ , $ <nat:304> $ , $ <nat:106> $ , $ <nat:382> $ , are guaranteed to be even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:B> <var:F> <var:H> <var:G> <var:q> : nat , Nat . odd ( <nat:488> * <var:G> + <nat:296> * <var:B> + <nat:304> * <var:F> + <nat:106> * <var:H> + <nat:382> * <var:q> + <nat:41> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:488> = true ) . { auto . } assert ( <genH> : Nat . even <nat:296> = true ) . { auto . } assert ( <genH> : Nat . even <nat:304> = true ) . { auto . } assert ( <genH> : Nat . even <nat:106> = true ) . { auto . } assert ( <genH> : Nat . even <nat:382> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:488> * <var:G> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:296> * <var:B> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:304> * <var:F> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:106> * <var:H> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:382> * <var:q> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 