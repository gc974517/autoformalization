\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:258> * <var:f> + <nat:103> + <var:E> * <nat:8> + <nat:398> * <var:v> + <nat:36> * <var:O> $ is guaranteed to be odd . \end{theorem} \begin{proof} We make use the understanding that the expression $ <nat:398> \cdot <var:v> + <nat:36> \cdot <var:O> + <nat:8> \cdot <var:E> + <nat:103> + <nat:258> \cdot <var:f> $ is known to be odd by reason that $ <var:f> * <nat:258> + <nat:398> * <var:v> + <var:E> * <nat:8> + <var:O> * <nat:36> $ is known as even . Observe the product $ <var:v> * <nat:398> $ is known to be an even number as a consequence that taking the product between an even integer with an arbitrary integer is guaranteed to be even . What's more , the terms $ <nat:258> * <var:f> $ plus $ <var:E> * <nat:8> $ are guaranteed to be even . This claim is proven as a consequence that multiplying of an even natural number with any positive integer is in itself an even element of $ \mathbb{Z}^+ $ . The product $ <nat:36> * <var:O> $ is an even integer . This is proven because taking the product between an even element of $ \mathbb{Z}^+ $ and a number in $ \mathbb{Z}^+ $ is an even element of $ \mathbb{Z}^+ $ . From the fact the multiplication of even positive integers and some number in $ \mathbb{N} $ is even the summation $ <var:f> \times <nat:258> + <nat:36> \times <var:O> + <var:v> \times <nat:398> + <var:E> \times <nat:8> $ is guaranteed to be clearly even . The totaling of an even number in $ \mathbb{Z}^+ $ and an odd positive integer must be odd . Notice $ <nat:103> $ is known to be odd . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:f> <var:E> <var:v> <var:O> : nat , Nat . odd ( <nat:258> * <var:f> + <nat:8> * <var:E> + <nat:398> * <var:v> + <nat:36> * <var:O> + <nat:103> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:398> * <var:v> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:258> * <var:f> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:8> * <var:E> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:36> * <var:O> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:258> * <var:f> + <nat:8> * <var:E> + <nat:398> * <var:v> + <nat:36> * <var:O> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . assert ( <genH> : Nat . odd <nat:103> = true ) . { auto . } rewrite <- Nat . negb_even . rewrite <genH> . rewrite <genH> . auto . Qed . 