\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} For $ <var:x> $ , $ <var:s> $ , $ <var:X> $ , $ <var:y> $ , $ <var:j> $ , $ <var:z> $ , $ <var:r> $ , $ <var:S> $ , $ <var:c> $ , and $ <var:v> \in \mathbb{Z}^+ $ the expression $ <nat:79> + <var:x> \times <nat:30> + <var:v> \times <nat:362> + <var:c> \times <nat:236> + <var:y> \times <nat:276> + <var:X> \times <nat:266> + <var:j> \times <nat:4> + <nat:220> \times <var:s> + <var:S> \times <nat:156> + <var:r> \times <nat:190> + <nat:172> \times <var:z> $ is odd . \end{theorem} \begin{proof} Recall $ <nat:79> $ is obviously an odd element of $ \mathbb{N} $ . We justify the sum $ <nat:266> \times <var:X> + <nat:156> \times <var:S> + <nat:172> \times <var:z> + <nat:362> \times <var:v> + <nat:190> \times <var:r> + <nat:236> \times <var:c> + <var:s> \times <nat:220> + <nat:79> + <var:x> \times <nat:30> + <nat:4> \times <var:j> + <nat:276> \times <var:y> $ must be odd . We justify $ <nat:266> \times <var:X> + <var:j> \times <nat:4> + <var:c> \times <nat:236> + <nat:30> \times <var:x> + <nat:276> \times <var:y> + <nat:156> \times <var:S> + <nat:190> \times <var:r> + <nat:362> \times <var:v> + <nat:79> + <nat:220> \times <var:s> + <var:z> \times <nat:172> $ is known to be odd by reason that the sum $ <var:S> * <nat:156> + <var:s> * <nat:220> + <var:j> * <nat:4> + <var:r> * <nat:190> + <nat:30> * <var:x> + <nat:236> * <var:c> + <var:y> * <nat:276> + <nat:172> * <var:z> + <var:v> * <nat:362> + <nat:266> * <var:X> $ is obviously even . Remember the adding between an even number and an even natural number will be even . Take note that the products $ <nat:172> <var:z> $ , $ <var:c> <nat:236> $ , $ <nat:362> <var:v> $ , $ <nat:276> <var:y> $ , $ <var:s> <nat:220> $ , $ <var:S> <nat:156> $ , $ <var:X> <nat:266> $ , $ <var:x> <nat:30> $ , and $ <var:j> <nat:4> $ are known to be even elements of $ \mathbb{N} $ . Take note the product $ <nat:190> <var:r> $ is known to be an even integer . This is proven from the fact the product between an even element of $ \mathbb{Z}^+ $ with any integer will be even . and likewise since the product of even natural numbers with any natural number must be an even natural our main result is proven . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:x> <var:s> <var:X> <var:y> <var:j> <var:z> <var:r> <var:S> <var:c> <var:v> : nat , Nat . odd ( <nat:30> * <var:x> + <nat:362> * <var:v> + <nat:236> * <var:c> + <nat:276> * <var:y> + <nat:266> * <var:X> + <nat:4> * <var:j> + <nat:220> * <var:s> + <nat:156> * <var:S> + <nat:190> * <var:r> + <nat:172> * <var:z> + <nat:79> ) = true . Proof . intros . assert ( <genH> : Nat . odd <nat:79> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:172> * <var:z> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:236> * <var:c> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:362> * <var:v> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:276> * <var:y> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:220> * <var:s> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:156> * <var:S> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:266> * <var:X> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:30> * <var:x> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:4> * <var:j> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:190> * <var:r> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:30> * <var:x> + <nat:362> * <var:v> + <nat:236> * <var:c> + <nat:276> * <var:y> + <nat:266> * <var:X> + <nat:4> * <var:j> + <nat:220> * <var:s> + <nat:156> * <var:S> + <nat:190> * <var:r> + <nat:172> * <var:z> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . rewrite <genH> . auto . Qed . 