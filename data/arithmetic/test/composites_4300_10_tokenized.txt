\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} We assume that if and only if there exist $ <var:P> $ , $ <var:v> $ , $ <var:G> $ , $ <var:T> $ , $ <var:p> $ , $ <var:b> $ , $ <var:y> $ , $ <var:E> $ , $ <var:Z> $ , $ <var:g> $ assume that $ <var:S> \in \mathbb{N} $ will be called a <def:ten-composite> number given $ <var:T> \times <var:E> \times <var:g> \times <var:G> \times <var:Z> \times <var:b> \times <var:P> \times <var:p> \times <var:y> \times <var:v> = <var:S> $ and factors are greater than <nat:1> . Therefore the positive integer <nat:115315200> is <def:ten-composite> . \end{theorem} \begin{proof} We present $ <nat:115315200> = <var:T> \times <var:b> \times <var:P> \times <var:E> \times <var:p> \times <var:G> \times <var:v> \times <var:g> \times <var:y> \times <var:Z> $ . Notice that $ <nat:4> $ , $ <nat:13> $ , $ <nat:12> $ , $ <nat:7> $ , $ <nat:8> $ , $ <nat:2> $ , $ <nat:5> $ , $ <nat:11> $ , $ <nat:10> $ , and $ <nat:3> > <nat:1> $ . In addition observe that likewise $ <nat:115315200> = <var:T> \times <var:v> \times <var:p> \times <var:G> \times <var:P> \times <var:Z> \times <var:b> \times <var:E> \times <var:g> \times <var:y> $ hints $ <var:P> = <nat:5> $ , $ <var:v> = <nat:8> $ , $ <var:E> = <nat:7> $ , $ <var:G> = <nat:3> $ , $ <var:b> = <nat:4> $ , $ <var:g> = <nat:2> $ , $ <var:T> = <nat:10> $ , $ <var:p> = <nat:12> $ , $ <var:y> = <nat:13> $ and $ <var:Z> = <nat:11> $ . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:ten-composite> ( <var:S> : nat ) := exists <var:P> <var:v> <var:G> <var:T> <var:p> <var:b> <var:y> <var:E> <var:Z> <var:g> : nat , ( <var:T> * <var:E> * <var:g> * <var:G> * <var:Z> * <var:b> * <var:P> * <var:p> * <var:y> * <var:v> = <var:S> ) /\ ( <var:P> > <nat:1> ) /\ ( <var:v> > <nat:1> ) /\ ( <var:G> > <nat:1> ) /\ ( <var:T> > <nat:1> ) /\ ( <var:p> > <nat:1> ) /\ ( <var:b> > <nat:1> ) /\ ( <var:y> > <nat:1> ) /\ ( <var:E> > <nat:1> ) /\ ( <var:Z> > <nat:1> ) /\ ( <var:g> > <nat:1> ) . Theorem <genP:1> : <def:ten-composite> <nat:115315200> . Proof . unfold <def:ten-composite> . assert ( <genH> : <nat:4> > <nat:1> ) . { lia . } assert ( <genH> : <nat:13> > <nat:1> ) . { lia . } assert ( <genH> : <nat:12> > <nat:1> ) . { lia . } assert ( <genH> : <nat:7> > <nat:1> ) . { lia . } assert ( <genH> : <nat:8> > <nat:1> ) . { lia . } assert ( <genH> : <nat:2> > <nat:1> ) . { lia . } assert ( <genH> : <nat:5> > <nat:1> ) . { lia . } assert ( <genH> : <nat:11> > <nat:1> ) . { lia . } assert ( <genH> : <nat:10> > <nat:1> ) . { lia . } assert ( <genH> : <nat:3> > <nat:1> ) . { lia . } exists <nat:5> . exists <nat:8> . exists <nat:3> . exists <nat:10> . exists <nat:12> . exists <nat:4> . exists <nat:13> . exists <nat:7> . exists <nat:11> . exists <nat:2> . repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 