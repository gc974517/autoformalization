\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:189> + <var:m> \cdot <nat:212> + <nat:340> \cdot <var:S> + <var:E> \cdot <nat:30> + <nat:290> \cdot <var:w> + <nat:120> \cdot <var:g> + <var:Z> \cdot <nat:442> + <nat:288> \cdot <var:H> + <var:o> \cdot <nat:338> + <nat:160> \cdot <var:h> $ is odd . \end{theorem} \begin{proof} Notice the positive integers $ <nat:290> $ in addition to $ <nat:340> $ are obviously even What's more , the leading terms $ <nat:160> $ , $ <nat:442> $ , $ <nat:212> $ , $ <nat:30> $ , as well as $ <nat:288> $ are guaranteed to be even Building on , take note that the number $ <nat:120> $ is clearly even The positive integer $ <nat:338> $ is known to be an even natural Take note that $ <nat:189> $ is odd . We show this proposition holds using the knowledge the summation between even naturals together and an odd number in $ \mathbb{N} $ is odd as well as the product between an even natural and some positive integer will be even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:m> <var:S> <var:E> <var:w> <var:g> <var:Z> <var:H> <var:o> <var:h> : nat , Nat . odd ( <nat:212> * <var:m> + <nat:340> * <var:S> + <nat:30> * <var:E> + <nat:290> * <var:w> + <nat:120> * <var:g> + <nat:442> * <var:Z> + <nat:288> * <var:H> + <nat:338> * <var:o> + <nat:160> * <var:h> + <nat:189> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:290> = true ) . { auto . } assert ( <genH> : Nat . even <nat:340> = true ) . { auto . } assert ( <genH> : Nat . even <nat:160> = true ) . { auto . } assert ( <genH> : Nat . even <nat:442> = true ) . { auto . } assert ( <genH> : Nat . even <nat:212> = true ) . { auto . } assert ( <genH> : Nat . even <nat:30> = true ) . { auto . } assert ( <genH> : Nat . even <nat:288> = true ) . { auto . } assert ( <genH> : Nat . even <nat:120> = true ) . { auto . } assert ( <genH> : Nat . even <nat:338> = true ) . { auto . } assert ( <genH> : Nat . odd <nat:189> = true ) . { auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . repeat rewrite Nat . even_mul . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 