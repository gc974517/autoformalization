\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:232> * <var:c> + <var:s> * <nat:166> + <var:r> * <nat:112> + <nat:371> $ is odd for some natural terms $ <var:s> $ , $ <var:r> $ , and $ <var:c> $ . \end{theorem} \begin{proof} The summing of even numbers in $ \mathbb{Z}^+ $ and an odd integer will be odd . The sum $ <nat:166> * <var:s> + <nat:371> + <nat:232> * <var:c> + <var:r> * <nat:112> $ is odd from the knowledge $ <var:c> \times <nat:232> + <var:r> \times <nat:112> + <nat:166> \times <var:s> $ is trivially even . The products $ <nat:232> \cdot <var:c> $ , $ <nat:112> \cdot <var:r> $ , plus $ <var:s> \cdot <nat:166> $ are trivially even . This is true from the knowledge the multiplication between an even number and some number in $ \mathbb{Z}^+ $ is guaranteed to be even additionally the whole numbers $ <nat:232> $ , $ <nat:112> $ , and likewise $ <nat:166> $ will be even numbers . From the fact the adding between an even number with even integers must be even , as well as because taking the product of even whole numbers and some element of $ \mathbb{N} $ is guaranteed to be even . We prove the summation $ <var:c> * <nat:232> + <nat:371> + <nat:166> * <var:s> + <nat:112> * <var:r> $ is odd . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:s> <var:r> <var:c> : nat , Nat . odd ( <nat:232> * <var:c> + <nat:166> * <var:s> + <nat:112> * <var:r> + <nat:371> ) = true . Proof . intros . rewrite Nat . odd_add . assert ( <genH> : Nat . even <nat:232> = true ) . { auto . } assert ( <genH> : Nat . even <nat:112> = true ) . { auto . } assert ( <genH> : Nat . even <nat:166> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:232> * <var:c> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:112> * <var:r> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:166> * <var:s> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:232> * <var:c> + <nat:166> * <var:s> + <nat:112> * <var:r> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite <- Nat . negb_even . rewrite <genH> . auto . Qed . 