\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:t> * <nat:282> + <var:K> * <nat:12> + <nat:443> + <nat:152> * <var:d> + <var:l> * <nat:270> + <var:F> * <nat:326> $ is odd for some $ <var:t> $ , $ <var:l> $ , $ <var:d> $ , $ <var:K> $ , and $ <var:F> $ . \end{theorem} \begin{proof} $ <var:K> \times <nat:12> + <var:t> \times <nat:282> + <var:l> \times <nat:270> + <var:F> \times <nat:326> + <nat:152> \times <var:d> $ is obviously even . We know that the natural numbers $ <nat:12> $ , $ <nat:282> $ , $ <nat:270> $ , $ <nat:326> $ , in addition to $ <nat:152> $ are even numbers . Accordingly , the terms $ <nat:12> \cdot <var:K> $ , $ <var:t> \cdot <nat:282> $ , $ <var:l> \cdot <nat:270> $ , $ <nat:326> \cdot <var:F> $ , and $ <nat:152> \cdot <var:d> $ will be even also . Because the multiplication between even positive integers with any number is an even number in $ \mathbb{N} $ this result is true . It can be shown that the main result holds . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:t> <var:l> <var:d> <var:K> <var:F> : nat , Nat . odd ( <nat:282> * <var:t> + <nat:12> * <var:K> + <nat:152> * <var:d> + <nat:270> * <var:l> + <nat:326> * <var:F> + <nat:443> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:12> = true ) . { auto . } assert ( <genH> : Nat . even <nat:282> = true ) . { auto . } assert ( <genH> : Nat . even <nat:270> = true ) . { auto . } assert ( <genH> : Nat . even <nat:326> = true ) . { auto . } assert ( <genH> : Nat . even <nat:152> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:12> * <var:K> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:282> * <var:t> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:270> * <var:l> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:326> * <var:F> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:152> * <var:d> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:282> * <var:t> + <nat:12> * <var:K> + <nat:152> * <var:d> + <nat:270> * <var:l> + <nat:326> * <var:F> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . auto . Qed . 