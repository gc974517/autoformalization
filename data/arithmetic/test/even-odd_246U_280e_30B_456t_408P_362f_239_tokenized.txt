\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:456> \times <var:t> + <var:P> \times <nat:408> + <nat:239> + <nat:30> \times <var:B> + <var:e> \times <nat:280> + <nat:362> \times <var:f> + <nat:246> \times <var:U> $ is odd . \end{theorem} \begin{proof} Observe that $ <nat:239> $ is obviously an odd element of $ \mathbb{Z}^+ $ . It can be checked that the sum $ <nat:280> \cdot <var:e> + <nat:246> \cdot <var:U> + <nat:362> \cdot <var:f> + <var:t> \cdot <nat:456> + <var:B> \cdot <nat:30> + <nat:408> \cdot <var:P> + <nat:239> $ will be odd . The theorem is proven from the fact $ <nat:246> \cdot <var:U> + <var:e> \cdot <nat:280> + <nat:30> \cdot <var:B> + <var:t> \cdot <nat:456> + <nat:408> \cdot <var:P> + <var:f> \cdot <nat:362> $ is guaranteed to be even , from the fact the totaling of even elements of $ \mathbb{N} $ successively and an even integer is guaranteed to be an even natural . On top of this , the terms $ <var:U> \cdot <nat:246> $ , $ <var:e> \cdot <nat:280> $ , $ <nat:30> \cdot <var:B> $ , $ <nat:456> \cdot <var:t> $ , $ <nat:408> \cdot <var:P> $ , plus $ <nat:362> \cdot <var:f> $ are known to be even positive integers as a consequence that taking the product between an even positive integer with an arbitrary integer is an even number , which must be true by reason that the coefficients $ <nat:246> $ , $ <nat:280> $ , $ <nat:30> $ , $ <nat:456> $ , $ <nat:408> $ , additionally $ <nat:362> $ are even numbers in $ \mathbb{N} $ . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:t> <var:P> <var:B> <var:e> <var:f> <var:U> : nat , Nat . odd ( <nat:456> * <var:t> + <nat:408> * <var:P> + <nat:30> * <var:B> + <nat:280> * <var:e> + <nat:362> * <var:f> + <nat:246> * <var:U> + <nat:239> ) = true . Proof . intros . assert ( <genH> : Nat . odd <nat:239> = true ) . { auto . } assert ( <genH> : Nat . even <nat:246> = true ) . { auto . } assert ( <genH> : Nat . even <nat:280> = true ) . { auto . } assert ( <genH> : Nat . even <nat:30> = true ) . { auto . } assert ( <genH> : Nat . even <nat:456> = true ) . { auto . } assert ( <genH> : Nat . even <nat:408> = true ) . { auto . } assert ( <genH> : Nat . even <nat:362> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:246> * <var:U> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:280> * <var:e> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:30> * <var:B> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:456> * <var:t> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:408> * <var:P> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:362> * <var:f> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:456> * <var:t> + <nat:408> * <var:P> + <nat:30> * <var:B> + <nat:280> * <var:e> + <nat:362> * <var:f> + <nat:246> * <var:U> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . rewrite <genH> . auto . Qed . 