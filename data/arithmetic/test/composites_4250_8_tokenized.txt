\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} There are some positive integers $ <var:e> $ , $ <var:Y> $ , $ <var:h> $ , $ <var:E> $ , $ <var:D> $ , $ <var:Q> $ , $ <var:L> $ , and $ <var:i> $ where $ <var:h> $ , $ <var:L> $ , $ <var:e> $ , $ <var:E> $ , $ <var:Q> $ , $ <var:D> $ , $ <var:i> $ and $ <var:Y> > <nat:1> $ as well as satisfying the condition that <nat:2162160> is the product of natural numbers $ <var:e> $ , $ <var:Y> $ , $ <var:h> $ , $ <var:E> $ , $ <var:D> $ , $ <var:Q> $ , $ <var:L> $ and $ <var:i> $ . \end{theorem} \begin{proof} Assume $ <var:i> = <nat:5> $ , $ <var:Y> = <nat:2> $ , $ <var:Q> = <nat:9> $ , $ <var:E> = <nat:3> $ , $ <var:D> = <nat:8> $ , $ <var:e> = <nat:13> $ , $ <var:L> = <nat:11> $ and $ <var:h> = <nat:7> $ . Observe $ <nat:2162160> = <nat:9> \times <nat:7> \times <nat:3> \times <nat:13> \times <nat:5> \times <nat:8> \times <nat:11> \times <nat:2> $ . What's more note $ <nat:11> $ , $ <nat:9> $ , $ <nat:7> $ , $ <nat:2> $ , $ <nat:8> $ , $ <nat:3> $ , $ <nat:5> $ and $ <nat:13> > <nat:1> $ . This suggests the statement is valid . Hence , $ <var:L> * <var:i> * <var:Y> * <var:D> * <var:h> * <var:e> * <var:Q> * <var:E> = <nat:2162160> $ has been verified . \end{proof} \end{document} 
~
Require Import Lia . Theorem <genP:1> : exists <var:e> <var:Y> <var:h> <var:E> <var:D> <var:Q> <var:L> <var:i> : nat , ( <var:h> > <nat:1> ) /\ ( <var:L> > <nat:1> ) /\ ( <var:e> > <nat:1> ) /\ ( <var:E> > <nat:1> ) /\ ( <var:Q> > <nat:1> ) /\ ( <var:D> > <nat:1> ) /\ ( <var:i> > <nat:1> ) /\ ( <var:Y> > <nat:1> ) /\ ( <nat:2162160> = <var:e> * <var:Y> * <var:h> * <var:E> * <var:D> * <var:Q> * <var:L> * <var:i> ) . Proof . exists <nat:13> . exists <nat:2> . exists <nat:7> . exists <nat:3> . exists <nat:8> . exists <nat:9> . exists <nat:11> . exists <nat:5> . assert ( <genH> : <nat:11> > <nat:1> ) . { lia . } assert ( <genH> : <nat:9> > <nat:1> ) . { lia . } assert ( <genH> : <nat:7> > <nat:1> ) . { lia . } assert ( <genH> : <nat:2> > <nat:1> ) . { lia . } assert ( <genH> : <nat:8> > <nat:1> ) . { lia . } assert ( <genH> : <nat:3> > <nat:1> ) . { lia . } assert ( <genH> : <nat:5> > <nat:1> ) . { lia . } assert ( <genH> : <nat:13> > <nat:1> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 