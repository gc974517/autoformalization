\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \newtheorem{definition}{Definition} \begin{document} \begin{definition} If and only if we get $ <var:o> = <var:w> * <var:s> * <var:Q> * <var:J> * <var:i> * <var:P> $ assuming $ <var:o> \in \mathbb{Z}^+ $ plus where $ <var:Q> $ , $ <var:s> $ , $ <var:i> $ , $ <var:w> $ , $ <var:J> $ , $ <var:P> \geq <nat:2> $ , then assume that $ <var:o> $ is a <def:six-composite> positive integer with some positive integers $ <var:P> $ , $ <var:w> $ , $ <var:J> $ , $ <var:s> $ , $ <var:i> $ , $ <var:Q> $ . \end{definition} \begin{theorem} $ <nat:308880> = <var:o> $ is a <def:six-composite> number . \end{theorem} \begin{proof} Remember that a <def:six-composite> is the multiplication between numbers $ <var:Q> $ , $ <var:w> $ , $ <var:P> $ , $ <var:i> $ , $ <var:s> $ , and $ <var:J> $ more than or equivalent to <nat:2> . We verify <nat:308880> is a <def:six-composite> number . Note $ <nat:13> $ , $ <nat:11> $ , $ <nat:9> $ , $ <nat:4> $ , $ <nat:10> $ and $ <nat:6> \geq <nat:2> $ . Further notice additionally $ <nat:308880> = <var:Q> \cdot <var:s> \cdot <var:J> \cdot <var:P> \cdot <var:i> \cdot <var:w> = <nat:10> \cdot <nat:4> \cdot <nat:6> \cdot <nat:9> \cdot <nat:11> \cdot <nat:13> $ . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:six-composite> ( <var:o> : nat ) := exists <var:P> <var:w> <var:J> <var:s> <var:i> <var:Q> : nat , ( <var:o> = <var:w> * <var:s> * <var:Q> * <var:J> * <var:i> * <var:P> ) /\ ( <var:Q> >= <nat:2> ) /\ ( <var:s> >= <nat:2> ) /\ ( <var:i> >= <nat:2> ) /\ ( <var:w> >= <nat:2> ) /\ ( <var:J> >= <nat:2> ) /\ ( <var:P> >= <nat:2> ) . Theorem <genP:1> : <def:six-composite> <nat:308880> . Proof . unfold <def:six-composite> . assert ( <genH> : <nat:13> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:11> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:9> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:4> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:10> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:6> >= <nat:2> ) . { lia . } exists <nat:9> . exists <nat:13> . exists <nat:6> . exists <nat:4> . exists <nat:11> . exists <nat:10> . repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 