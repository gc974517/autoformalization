\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:p> \cdot <nat:226> + <var:P> \cdot <nat:424> + <var:n> \cdot <nat:384> + <var:Z> \cdot <nat:150> + <nat:212> \cdot <var:q> + <nat:462> \cdot <var:y> + <var:O> \cdot <nat:224> + <var:J> \cdot <nat:146> + <var:F> \cdot <nat:170> + <nat:357> $ is guaranteed to be odd . \end{theorem} \begin{proof} Multiplying between an even whole number and an arbitrary natural must be an even integer . Recall the integers $ <nat:150> $ and also $ <nat:170> $ are known to be even whole numbers Notice the whole numbers $ <nat:384> $ , $ <nat:146> $ , $ <nat:212> $ , $ <nat:224> $ , and also $ <nat:226> $ are trivially even elements of $ \mathbb{N} $ Notice that the natural number $ <nat:462> $ is guaranteed to be an even element of $ \mathbb{N} $ Observe that the whole number $ <nat:424> $ is even The totaling of even numbers in $ \mathbb{Z}^+ $ concurrently with an odd number in $ \mathbb{N} $ must be odd . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:p> <var:P> <var:n> <var:Z> <var:q> <var:y> <var:O> <var:J> <var:F> : nat , Nat . odd ( <nat:226> * <var:p> + <nat:424> * <var:P> + <nat:384> * <var:n> + <nat:150> * <var:Z> + <nat:212> * <var:q> + <nat:462> * <var:y> + <nat:224> * <var:O> + <nat:146> * <var:J> + <nat:170> * <var:F> + <nat:357> ) = true . Proof . intros . rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . repeat rewrite Nat . even_mul . assert ( <genH> : Nat . even <nat:150> = true ) . { auto . } assert ( <genH> : Nat . even <nat:170> = true ) . { auto . } assert ( <genH> : Nat . even <nat:384> = true ) . { auto . } assert ( <genH> : Nat . even <nat:146> = true ) . { auto . } assert ( <genH> : Nat . even <nat:212> = true ) . { auto . } assert ( <genH> : Nat . even <nat:224> = true ) . { auto . } assert ( <genH> : Nat . even <nat:226> = true ) . { auto . } assert ( <genH> : Nat . even <nat:462> = true ) . { auto . } assert ( <genH> : Nat . even <nat:424> = true ) . { auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 