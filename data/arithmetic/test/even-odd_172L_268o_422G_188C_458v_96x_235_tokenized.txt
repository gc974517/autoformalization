\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:172> \cdot <var:L> + <nat:268> \cdot <var:o> + <nat:422> \cdot <var:G> + <nat:235> + <nat:188> \cdot <var:C> + <nat:458> \cdot <var:v> + <nat:96> \cdot <var:x> $ is guaranteed to be odd taking unknowns $ <var:L> $ , $ <var:x> $ , $ <var:G> $ , $ <var:C> $ , $ <var:o> $ , and $ <var:v> $ . \end{theorem} \begin{proof} Remember that the natural numbers $ <nat:172> $ , $ <nat:268> $ , $ <nat:422> $ , $ <nat:188> $ , $ <nat:458> $ , and $ <nat:96> $ are guaranteed to be even . Hence , the terms $ <var:L> * <nat:172> $ , $ <nat:268> * <var:o> $ , $ <var:G> * <nat:422> $ , $ <var:C> * <nat:188> $ , $ <nat:458> * <var:v> $ , and also $ <nat:96> * <var:x> $ is guaranteed to be even also . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:L> <var:x> <var:G> <var:C> <var:o> <var:v> : nat , Nat . odd ( <nat:172> * <var:L> + <nat:268> * <var:o> + <nat:422> * <var:G> + <nat:188> * <var:C> + <nat:458> * <var:v> + <nat:96> * <var:x> + <nat:235> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:172> = true ) . { auto . } assert ( <genH> : Nat . even <nat:268> = true ) . { auto . } assert ( <genH> : Nat . even <nat:422> = true ) . { auto . } assert ( <genH> : Nat . even <nat:188> = true ) . { auto . } assert ( <genH> : Nat . even <nat:458> = true ) . { auto . } assert ( <genH> : Nat . even <nat:96> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:172> * <var:L> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:268> * <var:o> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:422> * <var:G> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:188> * <var:C> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:458> * <var:v> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:96> * <var:x> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 