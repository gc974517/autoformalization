\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \newtheorem{definition}{Definition} \begin{document} \begin{definition} Define that $ <var:Q> $ is a <def:four-composite> number under the condition given some $ <var:N> $ , $ <var:R> $ , $ <var:P> $ , $ <var:r> \in \mathbb{N} $ we get $ <var:r> \times <var:R> \times <var:N> \times <var:P> = <var:Q> $ with $ <var:Q> \in \mathbb{N} $ plus satisfying the condition that $ <var:r> $ , $ <var:R> $ , $ <var:P> $ , $ <var:N> \geq <nat:2> $ . \end{definition} \begin{theorem} $ <var:Q> = <nat:1440> $ is a <def:four-composite> whole number . \end{theorem} \begin{proof} Recall <nat:1440> is a <def:four-composite> whole number supposing it is the multiplication between numbers $ <var:P> $ , $ <var:R> $ , $ <var:r> $ and $ <var:N> $ such that $ <var:R> $ , $ <var:P> $ , $ <var:N> $ , and $ <var:r> > <nat:1> $ . Let $ <var:R> = <nat:12> $ , $ <var:N> = <nat:5> $ , $ <var:r> = <nat:3> $ , $ <var:P> = <nat:8> $ . Further observe $ <nat:3> $ , $ <nat:8> $ , $ <nat:5> $ and $ <nat:12> $ are greater than <nat:1> . Hence , <nat:1440> is a <def:four-composite> integer is validated . Therefore , $ <var:P> \cdot <var:r> \cdot <var:R> \cdot <var:N> = <nat:1440> $ is validated . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:four-composite> ( <var:Q> : nat ) := exists <var:N> <var:R> <var:P> <var:r> : nat , ( <var:r> * <var:R> * <var:N> * <var:P> = <var:Q> ) /\ ( <var:r> >= <nat:2> ) /\ ( <var:R> >= <nat:2> ) /\ ( <var:P> >= <nat:2> ) /\ ( <var:N> >= <nat:2> ) . Theorem <genP:1> : <def:four-composite> <nat:1440> . Proof . unfold <def:four-composite> . exists <nat:5> . exists <nat:12> . exists <nat:8> . exists <nat:3> . assert ( <genH> : <nat:3> > <nat:1> ) . { lia . } assert ( <genH> : <nat:8> > <nat:1> ) . { lia . } assert ( <genH> : <nat:5> > <nat:1> ) . { lia . } assert ( <genH> : <nat:12> > <nat:1> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 