\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Under the condition that we have $ <var:C> = <var:f> * <var:B> * <var:K> * <var:n> * <var:R> * <var:U> * <var:p> * <var:c> * <var:e> * <var:b> * <var:W> $ assuming some natural number $ <var:C> $ as well as such that $ <var:f> $ , $ <var:b> $ , $ <var:K> $ , $ <var:e> $ , $ <var:U> $ , $ <var:B> $ , $ <var:c> $ , $ <var:n> $ , $ <var:R> $ , $ <var:p> $ and $ <var:W> \geq <nat:2> $ , take that $ <var:C> $ is a <def:eleven-composite> positive integer assuming some $ <var:W> $ , $ <var:f> $ , $ <var:e> $ , $ <var:n> $ , $ <var:R> $ , $ <var:p> $ , $ <var:c> $ , $ <var:B> $ , $ <var:b> $ , $ <var:K> $ , $ <var:U> \in \mathbb{N} $ . Consequently the positive integer <nat:518918400> is a <def:eleven-composite> whole number . \end{theorem} \begin{proof} Note that $ <nat:11> \cdot <nat:4> \cdot <nat:7> \cdot <nat:6> \cdot <nat:13> \cdot <nat:5> \cdot <nat:9> \cdot <nat:10> \cdot <nat:3> \cdot <nat:8> \cdot <nat:2> = <nat:518918400> $ . In addition note $ <nat:13> $ , $ <nat:10> $ , $ <nat:2> $ , $ <nat:5> $ , $ <nat:4> $ , $ <nat:7> $ , $ <nat:9> $ , $ <nat:8> $ , $ <nat:6> $ , $ <nat:11> $ and $ <nat:3> \geq <nat:2> $ . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:eleven-composite> ( <var:C> : nat ) := exists <var:W> <var:f> <var:e> <var:n> <var:R> <var:p> <var:c> <var:B> <var:b> <var:K> <var:U> : nat , ( <var:C> = <var:f> * <var:B> * <var:K> * <var:n> * <var:R> * <var:U> * <var:p> * <var:c> * <var:e> * <var:b> * <var:W> ) /\ ( <var:f> >= <nat:2> ) /\ ( <var:b> >= <nat:2> ) /\ ( <var:K> >= <nat:2> ) /\ ( <var:e> >= <nat:2> ) /\ ( <var:U> >= <nat:2> ) /\ ( <var:B> >= <nat:2> ) /\ ( <var:c> >= <nat:2> ) /\ ( <var:n> >= <nat:2> ) /\ ( <var:R> >= <nat:2> ) /\ ( <var:p> >= <nat:2> ) /\ ( <var:W> >= <nat:2> ) . Theorem <genP:1> : <def:eleven-composite> <nat:518918400> . Proof . unfold <def:eleven-composite> . exists <nat:4> . exists <nat:9> . exists <nat:10> . exists <nat:11> . exists <nat:7> . exists <nat:3> . exists <nat:13> . exists <nat:6> . exists <nat:8> . exists <nat:5> . exists <nat:2> . assert ( <genH> : <nat:13> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:10> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:2> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:5> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:4> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:7> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:9> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:8> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:6> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:11> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:3> >= <nat:2> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 