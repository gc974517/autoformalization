\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:n> <nat:294> + <nat:142> <var:D> + <nat:39> + <nat:452> <var:j> $ will be odd using all terms $ <var:D> $ , $ <var:n> $ , and $ <var:j> $ . \end{theorem} \begin{proof} This claim holds by reason that $ <nat:294> * <var:n> + <nat:452> * <var:j> + <nat:142> * <var:D> $ is guaranteed to be even . Notice that the product $ <nat:452> * <var:j> $ is guaranteed to be an even number by reason that multiplying of an even positive integer with any element of $ \mathbb{Z}^+ $ is even . Additionally , take note the pair $ <var:D> * <nat:142> $ is known as an even number in $ \mathbb{Z}^+ $ . We know that the pair $ <var:n> * <nat:294> $ is clearly even . This fact must be true since taking the product between an even natural number with an arbitrary natural number must be an even number in $ \mathbb{Z}^+ $ . $ <var:j> * <nat:452> + <var:n> * <nat:294> + <var:D> * <nat:142> $ will be clearly even as a consequence that the summation of even numbers in $ \mathbb{Z}^+ $ with even elements of $ \mathbb{N} $ must be even . Observe $ <nat:39> $ is known as odd . Observe the adding between even elements of $ \mathbb{N} $ collectively and an odd natural number will be odd . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:D> <var:n> <var:j> : nat , Nat . odd ( <nat:294> * <var:n> + <nat:142> * <var:D> + <nat:452> * <var:j> + <nat:39> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:452> * <var:j> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:142> * <var:D> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:294> * <var:n> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:294> * <var:n> + <nat:142> * <var:D> + <nat:452> * <var:j> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } assert ( <genH> : Nat . odd <nat:39> = true ) . { auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . rewrite <genH> . auto . Qed . 