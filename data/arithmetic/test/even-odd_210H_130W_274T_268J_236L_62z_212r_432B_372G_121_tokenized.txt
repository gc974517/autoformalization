\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:210> * <var:H> + <nat:130> * <var:W> + <nat:274> * <var:T> + <nat:268> * <var:J> + <nat:236> * <var:L> + <var:z> * <nat:62> + <nat:212> * <var:r> + <nat:121> + <var:B> * <nat:432> + <nat:372> * <var:G> $ will be odd . \end{theorem} \begin{proof} Observe the pairs $ <var:J> \cdot <nat:268> $ , $ <nat:236> \cdot <var:L> $ , $ <nat:372> \cdot <var:G> $ , $ <nat:212> \cdot <var:r> $ , $ <var:W> \cdot <nat:130> $ , $ <nat:432> \cdot <var:B> $ , $ <nat:274> \cdot <var:T> $ , in addition to $ <var:z> \cdot <nat:62> $ are even . The term $ <var:H> \cdot <nat:210> $ is known to be even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:H> <var:W> <var:T> <var:J> <var:L> <var:z> <var:r> <var:B> <var:G> : nat , Nat . odd ( <nat:210> * <var:H> + <nat:130> * <var:W> + <nat:274> * <var:T> + <nat:268> * <var:J> + <nat:236> * <var:L> + <nat:62> * <var:z> + <nat:212> * <var:r> + <nat:432> * <var:B> + <nat:372> * <var:G> + <nat:121> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:268> * <var:J> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:236> * <var:L> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:372> * <var:G> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:212> * <var:r> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:130> * <var:W> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:432> * <var:B> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:274> * <var:T> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:62> * <var:z> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:210> * <var:H> ) = true ) . { rewrite Nat . even_mul . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 