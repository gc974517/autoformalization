\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:8108100> $ is the same as $ <var:W> \cdot <var:s> \cdot <var:t> \cdot <var:U> \cdot <var:Q> \cdot <var:K> \cdot <var:I> \cdot <var:b> $ so that $ <var:K> $ , $ <var:t> $ , $ <var:b> $ , $ <var:U> $ , $ <var:s> $ , $ <var:Q> $ , $ <var:W> $ , $ <var:I> $ more than or equivalent to <nat:2> . \end{theorem} \begin{proof} Assume $ <var:W> = <nat:6> $ , $ <var:b> = <nat:3> $ , $ <var:I> = <nat:5> $ , $ <var:K> = <nat:13> $ , $ <var:U> = <nat:9> $ , $ <var:Q> = <nat:10> $ , $ <var:s> = <nat:7> $ , $ <var:t> = <nat:11> $ . Similarly observe $ <nat:5> $ , $ <nat:7> $ , $ <nat:6> $ , $ <nat:9> $ , $ <nat:11> $ , $ <nat:10> $ , $ <nat:13> $ , $ <nat:3> $ are more than or equal to <nat:2> . Consequently , $ <var:W> \times <var:I> \times <var:t> \times <var:s> \times <var:K> \times <var:Q> \times <var:b> \times <var:U> = <nat:8108100> $ plus $ <var:W> $ , $ <var:b> $ , $ <var:s> $ , $ <var:t> $ , $ <var:Q> $ , $ <var:K> $ , $ <var:I> $ and $ <var:U> $ are larger than or equal to <nat:2> is true has been proven . \end{proof} \end{document} 
~
Require Import Lia . Theorem <genP:1> : exists <var:K> <var:t> <var:U> <var:Q> <var:s> <var:I> <var:W> <var:b> : nat , ( <nat:8108100> = <var:W> * <var:s> * <var:t> * <var:U> * <var:Q> * <var:K> * <var:I> * <var:b> ) /\ ( <var:K> >= <nat:2> ) /\ ( <var:t> >= <nat:2> ) /\ ( <var:b> >= <nat:2> ) /\ ( <var:U> >= <nat:2> ) /\ ( <var:s> >= <nat:2> ) /\ ( <var:Q> >= <nat:2> ) /\ ( <var:W> >= <nat:2> ) /\ ( <var:I> >= <nat:2> ) . Proof . exists <nat:13> . exists <nat:11> . exists <nat:9> . exists <nat:10> . exists <nat:7> . exists <nat:5> . exists <nat:6> . exists <nat:3> . assert ( <genH> : <nat:5> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:7> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:6> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:9> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:11> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:10> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:13> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:3> >= <nat:2> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 