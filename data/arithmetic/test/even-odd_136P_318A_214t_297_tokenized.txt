\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:t> * <nat:214> + <nat:136> * <var:P> + <nat:318> * <var:A> + <nat:297> $ will be odd for every unknowns $ <var:P> $ , $ <var:t> $ , and $ <var:A> $ . \end{theorem} \begin{proof} We apply the understanding $ <nat:297> + <var:A> <nat:318> + <var:t> <nat:214> + <nat:136> <var:P> $ is trivially odd from the fact the sum $ <nat:214> \cdot <var:t> + <nat:136> \cdot <var:P> + <var:A> \cdot <nat:318> $ is trivially even , as a consequence that the adding between an even number and an even natural number will be even . $ <var:A> <nat:318> $ is even . This claim is proven since the integer $ <nat:318> $ is known to be even . Remember that $ <var:t> <nat:214> $ is guaranteed to be even . This claim holds because the integer $ <nat:214> $ is trivially even . On top of this , notice the pair $ <var:P> <nat:136> $ is known as even . This claim holds from the fact the multiplication between an even natural number and an arbitrary integer is an even whole number , and is true as a consequence that the whole number $ <nat:136> $ is known to be an even number in $ \mathbb{N} $ . We justify the sum $ <nat:297> + <nat:136> <var:P> + <var:A> <nat:318> + <nat:214> <var:t> $ is guaranteed to be odd . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:P> <var:t> <var:A> : nat , Nat . odd ( <nat:214> * <var:t> + <nat:136> * <var:P> + <nat:318> * <var:A> + <nat:297> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:318> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:318> * <var:A> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:214> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:214> * <var:t> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:136> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:136> * <var:P> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:214> * <var:t> + <nat:136> * <var:P> + <nat:318> * <var:A> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . auto . Qed . 