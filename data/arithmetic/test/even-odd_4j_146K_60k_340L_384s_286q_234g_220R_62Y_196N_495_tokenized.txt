\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Taking every positive numbers $ <var:j> $ , $ <var:K> $ , $ <var:L> $ , $ <var:Y> $ , $ <var:g> $ , $ <var:k> $ , $ <var:q> $ , $ <var:N> $ , $ <var:R> $ , and $ <var:s> $ the expression $ <var:j> \times <nat:4> + <var:K> \times <nat:146> + <nat:495> + <var:k> \times <nat:60> + <nat:340> \times <var:L> + <var:s> \times <nat:384> + <var:q> \times <nat:286> + <nat:234> \times <var:g> + <var:R> \times <nat:220> + <var:Y> \times <nat:62> + <nat:196> \times <var:N> $ will be odd . \end{theorem} \begin{proof} The products $ <nat:146> <var:K> $ as well as $ <var:q> <nat:286> $ must be even numbers in $ \mathbb{N} $ . This must be true because the multiplication of an even element of $ \mathbb{Z}^+ $ with any natural number is guaranteed to be even . Recall that the terms $ <var:s> <nat:384> $ , $ <nat:62> <var:Y> $ , $ <var:R> <nat:220> $ , $ <var:j> <nat:4> $ , $ <nat:340> <var:L> $ , and also $ <var:k> <nat:60> $ are known to be even numbers . Further , the product $ <nat:196> <var:N> $ is trivially an even integer . This fact holds by reason that the multiplication between an even positive integer with some natural will be fundamentally an even number . Recall $ <nat:234> <var:g> $ is guaranteed to be even . The adding between an even whole number and an odd number will be odd . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:j> <var:K> <var:L> <var:Y> <var:g> <var:k> <var:q> <var:N> <var:R> <var:s> : nat , Nat . odd ( <nat:4> * <var:j> + <nat:146> * <var:K> + <nat:60> * <var:k> + <nat:340> * <var:L> + <nat:384> * <var:s> + <nat:286> * <var:q> + <nat:234> * <var:g> + <nat:220> * <var:R> + <nat:62> * <var:Y> + <nat:196> * <var:N> + <nat:495> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:146> * <var:K> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:286> * <var:q> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:384> * <var:s> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:62> * <var:Y> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:220> * <var:R> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:4> * <var:j> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:340> * <var:L> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:60> * <var:k> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:196> * <var:N> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:234> * <var:g> ) = true ) . { rewrite Nat . even_mul . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 