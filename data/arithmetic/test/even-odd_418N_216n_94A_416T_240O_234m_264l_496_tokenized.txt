\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Assuming any unknowns $ <var:T> $ , $ <var:l> $ , $ <var:O> $ , $ <var:N> $ , $ <var:A> $ , $ <var:m> $ , and $ <var:n> $ the expression $ <var:N> <nat:418> + <nat:496> + <nat:216> <var:n> + <nat:94> <var:A> + <var:T> <nat:416> + <nat:240> <var:O> + <nat:234> <var:m> + <var:l> <nat:264> $ will be even . \end{theorem} \begin{proof} What's more , take note that the whole numbers $ <nat:418> $ , $ <nat:216> $ , $ <nat:94> $ , $ <nat:416> $ , $ <nat:240> $ , $ <nat:234> $ , plus $ <nat:264> $ must be even naturals . As a consequence , the products $ <nat:418> \times <var:N> $ , $ <nat:216> \times <var:n> $ , $ <var:A> \times <nat:94> $ , $ <nat:416> \times <var:T> $ , $ <var:O> \times <nat:240> $ , $ <nat:234> \times <var:m> $ , in addition to $ <var:l> \times <nat:264> $ will be even at the same time . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:T> <var:l> <var:O> <var:N> <var:A> <var:m> <var:n> : nat , Nat . even ( <nat:418> * <var:N> + <nat:216> * <var:n> + <nat:94> * <var:A> + <nat:416> * <var:T> + <nat:240> * <var:O> + <nat:234> * <var:m> + <nat:264> * <var:l> + <nat:496> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:418> = true ) . { auto . } assert ( <genH> : Nat . even <nat:216> = true ) . { auto . } assert ( <genH> : Nat . even <nat:94> = true ) . { auto . } assert ( <genH> : Nat . even <nat:416> = true ) . { auto . } assert ( <genH> : Nat . even <nat:240> = true ) . { auto . } assert ( <genH> : Nat . even <nat:234> = true ) . { auto . } assert ( <genH> : Nat . even <nat:264> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:418> * <var:N> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:216> * <var:n> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:94> * <var:A> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:416> * <var:T> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:240> * <var:O> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:234> * <var:m> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:264> * <var:l> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 