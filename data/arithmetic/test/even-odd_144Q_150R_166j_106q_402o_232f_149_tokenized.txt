\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Taking any $ <var:R> $ , $ <var:j> $ , $ <var:Q> $ , $ <var:q> $ , $ <var:f> $ , and $ <var:o> \in \mathbb{Z}^+ $ the summation $ <var:f> \cdot <nat:232> + <nat:144> \cdot <var:Q> + <var:q> \cdot <nat:106> + <var:o> \cdot <nat:402> + <var:R> \cdot <nat:150> + <nat:166> \cdot <var:j> + <nat:149> $ must be odd . \end{theorem} \begin{proof} It can be checked that $ <nat:144> <var:Q> + <nat:150> <var:R> + <var:j> <nat:166> + <nat:149> + <var:q> <nat:106> + <nat:402> <var:o> + <nat:232> <var:f> $ is guaranteed to be odd . Remember that $ <nat:149> $ is known to be an odd element of $ \mathbb{N} $ . The products $ <var:R> \times <nat:150> $ , $ <var:Q> \times <nat:144> $ , $ <nat:402> \times <var:o> $ , $ <nat:166> \times <var:j> $ , and $ <var:f> \times <nat:232> $ are even . Building on , the pair $ <nat:106> \times <var:q> $ is trivially an even number in $ \mathbb{N} $ . This claim is proven since taking the product of an even positive integer with an arbitrary element of $ \mathbb{Z}^+ $ will be in itself an even whole number . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:R> <var:j> <var:Q> <var:q> <var:f> <var:o> : nat , Nat . odd ( <nat:232> * <var:f> + <nat:144> * <var:Q> + <nat:106> * <var:q> + <nat:402> * <var:o> + <nat:150> * <var:R> + <nat:166> * <var:j> + <nat:149> ) = true . Proof . intros . assert ( <genH> : Nat . odd <nat:149> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:150> * <var:R> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:144> * <var:Q> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:402> * <var:o> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:166> * <var:j> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:232> * <var:f> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:106> * <var:q> ) = true ) . { rewrite Nat . even_mul . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 