\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:376> \cdot <var:q> + <nat:319> + <nat:248> \cdot <var:h> + <var:A> \cdot <nat:320> + <var:p> \cdot <nat:296> + <var:z> \cdot <nat:334> + <nat:26> \cdot <var:C> + <var:a> \cdot <nat:326> + <var:S> \cdot <nat:410> + <var:e> \cdot <nat:388> $ is odd using whole numbers $ <var:a> $ , $ <var:z> $ , $ <var:q> $ , $ <var:C> $ , $ <var:e> $ , $ <var:h> $ , $ <var:S> $ , $ <var:A> $ , and $ <var:p> $ . \end{theorem} \begin{proof} The expression $ <var:e> <nat:388> + <nat:319> + <nat:26> <var:C> + <nat:248> <var:h> + <var:a> <nat:326> + <nat:410> <var:S> + <var:A> <nat:320> + <var:z> <nat:334> + <nat:296> <var:p> + <var:q> <nat:376> $ is known as odd because $ <nat:334> * <var:z> + <var:q> * <nat:376> + <var:C> * <nat:26> + <var:a> * <nat:326> + <nat:296> * <var:p> + <nat:320> * <var:A> + <var:e> * <nat:388> + <var:S> * <nat:410> + <nat:248> * <var:h> $ is obviously even . Recall the natural numbers $ <nat:334> $ , $ <nat:376> $ , $ <nat:26> $ , $ <nat:326> $ , $ <nat:296> $ , $ <nat:320> $ , $ <nat:388> $ , $ <nat:410> $ , in addition to $ <nat:248> $ are even . Hence , the products $ <nat:334> \cdot <var:z> $ , $ <nat:376> \cdot <var:q> $ , $ <nat:26> \cdot <var:C> $ , $ <nat:326> \cdot <var:a> $ , $ <nat:296> \cdot <var:p> $ , $ <var:A> \cdot <nat:320> $ , $ <var:e> \cdot <nat:388> $ , $ <nat:410> \cdot <var:S> $ , in addition to $ <var:h> \cdot <nat:248> $ is guaranteed to be even also . This main result holds since the addition of even elements of $ \mathbb{Z}^+ $ and even positive integers is guaranteed to be even and likewise from the knowledge the multiplication between even elements of $ \mathbb{N} $ with an arbitrary number in $ \mathbb{Z}^+ $ is guaranteed to be by its very nature an even element of $ \mathbb{Z}^+ $ . It can be demonstrated that our claim is proven by applying the addition between an even number in $ \mathbb{N} $ and an odd positive integer is an odd integer . Notice $ <nat:319> $ is obviously odd . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:a> <var:z> <var:q> <var:C> <var:e> <var:h> <var:S> <var:A> <var:p> : nat , Nat . odd ( <nat:376> * <var:q> + <nat:248> * <var:h> + <nat:320> * <var:A> + <nat:296> * <var:p> + <nat:334> * <var:z> + <nat:26> * <var:C> + <nat:326> * <var:a> + <nat:410> * <var:S> + <nat:388> * <var:e> + <nat:319> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:334> = true ) . { auto . } assert ( <genH> : Nat . even <nat:376> = true ) . { auto . } assert ( <genH> : Nat . even <nat:26> = true ) . { auto . } assert ( <genH> : Nat . even <nat:326> = true ) . { auto . } assert ( <genH> : Nat . even <nat:296> = true ) . { auto . } assert ( <genH> : Nat . even <nat:320> = true ) . { auto . } assert ( <genH> : Nat . even <nat:388> = true ) . { auto . } assert ( <genH> : Nat . even <nat:410> = true ) . { auto . } assert ( <genH> : Nat . even <nat:248> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:334> * <var:z> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:376> * <var:q> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:26> * <var:C> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:326> * <var:a> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:296> * <var:p> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:320> * <var:A> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:388> * <var:e> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:410> * <var:S> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:248> * <var:h> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:376> * <var:q> + <nat:248> * <var:h> + <nat:320> * <var:A> + <nat:296> * <var:p> + <nat:334> * <var:z> + <nat:26> * <var:C> + <nat:326> * <var:a> + <nat:410> * <var:S> + <nat:388> * <var:e> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . assert ( <genH> : Nat . odd <nat:319> = true ) . { auto . } rewrite <- Nat . negb_even . rewrite <genH> . rewrite <genH> . auto . Qed . 