\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Assuming every $ <var:N> $ , $ <var:M> $ , $ <var:l> $ , $ <var:G> $ , and $ <var:a> \in \mathbb{N} $ $ <var:l> \cdot <nat:424> + <var:G> \cdot <nat:264> + <var:M> \cdot <nat:124> + <nat:353> + <nat:12> \cdot <var:N> + <var:a> \cdot <nat:416> $ will be odd . \end{theorem} \begin{proof} It can be shown that $ <var:G> \cdot <nat:264> + <nat:424> \cdot <var:l> + <var:M> \cdot <nat:124> + <nat:12> \cdot <var:N> + <var:a> \cdot <nat:416> + <nat:353> $ is guaranteed to be odd . Observe $ <nat:353> $ is guaranteed to be odd . It can be shown that the formula $ <var:a> <nat:416> + <nat:264> <var:G> + <var:l> <nat:424> + <nat:12> <var:N> + <var:M> <nat:124> $ is known to be even . In addition , the leading terms $ <nat:416> $ , $ <nat:264> $ , $ <nat:424> $ , $ <nat:12> $ , plus $ <nat:124> $ are trivially even . Consequently , the terms $ <nat:416> <var:a> $ , $ <nat:264> <var:G> $ , $ <var:l> <nat:424> $ , $ <nat:12> <var:N> $ , plus $ <var:M> <nat:124> $ is guaranteed to be even too . By reason that the adding of an even whole number with an even natural number is even , our claim is true . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:N> <var:M> <var:l> <var:G> <var:a> : nat , Nat . odd ( <nat:424> * <var:l> + <nat:264> * <var:G> + <nat:124> * <var:M> + <nat:12> * <var:N> + <nat:416> * <var:a> + <nat:353> ) = true . Proof . intros . assert ( <genH> : Nat . odd <nat:353> = true ) . { auto . } assert ( <genH> : Nat . even <nat:416> = true ) . { auto . } assert ( <genH> : Nat . even <nat:264> = true ) . { auto . } assert ( <genH> : Nat . even <nat:424> = true ) . { auto . } assert ( <genH> : Nat . even <nat:12> = true ) . { auto . } assert ( <genH> : Nat . even <nat:124> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:416> * <var:a> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:264> * <var:G> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:424> * <var:l> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:12> * <var:N> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:124> * <var:M> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:424> * <var:l> + <nat:264> * <var:G> + <nat:124> * <var:M> + <nat:12> * <var:N> + <nat:416> * <var:a> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . rewrite <genH> . auto . Qed . 