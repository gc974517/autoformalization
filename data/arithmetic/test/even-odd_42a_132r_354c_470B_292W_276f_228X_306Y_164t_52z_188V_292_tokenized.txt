\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:42> * <var:a> + <nat:132> * <var:r> + <nat:354> * <var:c> + <var:B> * <nat:470> + <var:W> * <nat:292> + <nat:276> * <var:f> + <var:X> * <nat:228> + <var:Y> * <nat:306> + <nat:292> + <nat:164> * <var:t> + <nat:52> * <var:z> + <nat:188> * <var:V> $ will be even given some integers $ <var:X> $ , $ <var:B> $ , $ <var:r> $ , $ <var:a> $ , $ <var:z> $ , $ <var:t> $ , $ <var:W> $ , $ <var:c> $ , $ <var:Y> $ , $ <var:f> $ , and $ <var:V> $ . \end{theorem} \begin{proof} We know that the whole numbers $ <nat:276> $ , $ <nat:292> $ , $ <nat:306> $ , $ <nat:52> $ , $ <nat:164> $ , $ <nat:132> $ , $ <nat:354> $ , and also $ <nat:188> $ are known as even elements of $ \mathbb{N} $ We know the integer $ <nat:470> $ is even On top of this , we know the leading term $ <nat:228> $ is an even number Likewise , the leading term $ <nat:42> $ is guaranteed to be an even element of $ \mathbb{N} $ Observe $ <nat:292> $ is clearly even . Take note that the product of even numbers will be in itself an even positive integer . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:X> <var:B> <var:r> <var:a> <var:z> <var:t> <var:W> <var:c> <var:Y> <var:f> <var:V> : nat , Nat . even ( <nat:42> * <var:a> + <nat:132> * <var:r> + <nat:354> * <var:c> + <nat:470> * <var:B> + <nat:292> * <var:W> + <nat:276> * <var:f> + <nat:228> * <var:X> + <nat:306> * <var:Y> + <nat:164> * <var:t> + <nat:52> * <var:z> + <nat:188> * <var:V> + <nat:292> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:276> = true ) . { auto . } assert ( <genH> : Nat . even <nat:292> = true ) . { auto . } assert ( <genH> : Nat . even <nat:306> = true ) . { auto . } assert ( <genH> : Nat . even <nat:52> = true ) . { auto . } assert ( <genH> : Nat . even <nat:164> = true ) . { auto . } assert ( <genH> : Nat . even <nat:132> = true ) . { auto . } assert ( <genH> : Nat . even <nat:354> = true ) . { auto . } assert ( <genH> : Nat . even <nat:188> = true ) . { auto . } assert ( <genH> : Nat . even <nat:470> = true ) . { auto . } assert ( <genH> : Nat . even <nat:228> = true ) . { auto . } assert ( <genH> : Nat . even <nat:42> = true ) . { auto . } assert ( <genH> : Nat . even <nat:292> = true ) . { auto . } repeat rewrite Nat . even_add . repeat rewrite Nat . even_mul . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 