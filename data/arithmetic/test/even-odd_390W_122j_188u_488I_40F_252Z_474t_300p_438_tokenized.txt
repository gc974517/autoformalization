\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:390> * <var:W> + <nat:438> + <nat:122> * <var:j> + <var:u> * <nat:188> + <nat:488> * <var:I> + <nat:40> * <var:F> + <nat:252> * <var:Z> + <var:t> * <nat:474> + <nat:300> * <var:p> $ is even using every positive numbers $ <var:F> $ , $ <var:W> $ , $ <var:j> $ , $ <var:Z> $ , $ <var:u> $ , $ <var:t> $ , $ <var:I> $ , and $ <var:p> $ . \end{theorem} \begin{proof} In addition , the coefficients $ <nat:390> $ , $ <nat:122> $ , $ <nat:188> $ , $ <nat:488> $ , $ <nat:40> $ , $ <nat:252> $ , $ <nat:474> $ , and also $ <nat:300> $ are even . Hence , the pairs $ <nat:390> \cdot <var:W> $ , $ <nat:122> \cdot <var:j> $ , $ <var:u> \cdot <nat:188> $ , $ <nat:488> \cdot <var:I> $ , $ <var:F> \cdot <nat:40> $ , $ <nat:252> \cdot <var:Z> $ , $ <var:t> \cdot <nat:474> $ , and also $ <var:p> \cdot <nat:300> $ is even additionally . We verify our claim must be true . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:F> <var:W> <var:j> <var:Z> <var:u> <var:t> <var:I> <var:p> : nat , Nat . even ( <nat:390> * <var:W> + <nat:122> * <var:j> + <nat:188> * <var:u> + <nat:488> * <var:I> + <nat:40> * <var:F> + <nat:252> * <var:Z> + <nat:474> * <var:t> + <nat:300> * <var:p> + <nat:438> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:390> = true ) . { auto . } assert ( <genH> : Nat . even <nat:122> = true ) . { auto . } assert ( <genH> : Nat . even <nat:188> = true ) . { auto . } assert ( <genH> : Nat . even <nat:488> = true ) . { auto . } assert ( <genH> : Nat . even <nat:40> = true ) . { auto . } assert ( <genH> : Nat . even <nat:252> = true ) . { auto . } assert ( <genH> : Nat . even <nat:474> = true ) . { auto . } assert ( <genH> : Nat . even <nat:300> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:390> * <var:W> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:122> * <var:j> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:188> * <var:u> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:488> * <var:I> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:40> * <var:F> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:252> * <var:Z> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:474> * <var:t> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:300> * <var:p> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 