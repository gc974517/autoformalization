\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:r> <nat:128> + <var:q> <nat:156> + <nat:12> + <nat:372> <var:V> + <var:F> <nat:158> + <nat:398> <var:P> + <var:E> <nat:48> + <var:u> <nat:120> $ is guaranteed to be even . \end{theorem} \begin{proof} The proposition is true from the knowledge $ <nat:48> * <var:E> + <var:r> * <nat:128> + <nat:158> * <var:F> + <nat:398> * <var:P> + <var:u> * <nat:120> + <var:V> * <nat:372> + <var:q> * <nat:156> $ is known to be even . Notice that the products $ <nat:48> \times <var:E> $ , $ <var:P> \times <nat:398> $ , and also $ <nat:128> \times <var:r> $ must be even whole numbers . This claim holds as a consequence that the leading terms $ <nat:48> $ , $ <nat:398> $ , and also $ <nat:128> $ are clearly even numbers . In addition , the coefficients $ <nat:158> $ , $ <nat:156> $ , as well as $ <nat:120> $ are clearly even integers . Consequently , the products $ <nat:158> \times <var:F> $ , $ <nat:156> \times <var:q> $ , plus $ <nat:120> \times <var:u> $ is guaranteed to be even additionally . Notice the leading term $ <nat:372> $ is obviously an even number in $ \mathbb{N} $ . For this reason , the term $ <nat:372> \times <var:V> $ must be even also . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:r> <var:q> <var:V> <var:F> <var:P> <var:E> <var:u> : nat , Nat . even ( <nat:128> * <var:r> + <nat:156> * <var:q> + <nat:372> * <var:V> + <nat:158> * <var:F> + <nat:398> * <var:P> + <nat:48> * <var:E> + <nat:120> * <var:u> + <nat:12> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:48> = true ) . { auto . } assert ( <genH> : Nat . even <nat:398> = true ) . { auto . } assert ( <genH> : Nat . even <nat:128> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:48> * <var:E> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:398> * <var:P> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:128> * <var:r> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:158> = true ) . { auto . } assert ( <genH> : Nat . even <nat:156> = true ) . { auto . } assert ( <genH> : Nat . even <nat:120> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:158> * <var:F> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:156> * <var:q> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:120> * <var:u> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:372> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:372> * <var:V> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:128> * <var:r> + <nat:156> * <var:q> + <nat:372> * <var:V> + <nat:158> * <var:F> + <nat:398> * <var:P> + <nat:48> * <var:E> + <nat:120> * <var:u> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . even_add . rewrite <genH> . auto . Qed . 