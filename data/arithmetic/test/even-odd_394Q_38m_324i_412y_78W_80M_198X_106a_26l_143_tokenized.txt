\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:324> \times <var:i> + <var:a> \times <nat:106> + <nat:38> \times <var:m> + <var:l> \times <nat:26> + <nat:394> \times <var:Q> + <nat:80> \times <var:M> + <nat:78> \times <var:W> + <var:y> \times <nat:412> + <var:X> \times <nat:198> + <nat:143> $ is guaranteed to be odd with all $ <var:m> $ , $ <var:M> $ , $ <var:i> $ , $ <var:Q> $ , $ <var:W> $ , $ <var:l> $ , $ <var:y> $ , $ <var:X> $ , and $ <var:a> \in \mathbb{N} $ . \end{theorem} \begin{proof} The pair $ <nat:394> <var:Q> $ is clearly even since the coefficient $ <nat:394> $ is trivially even . Likewise , see that the whole number $ <nat:38> $ is even . For this reason , $ <var:m> <nat:38> $ is guaranteed to be even too . The integer $ <nat:324> $ is trivially an even whole number . Accordingly , the term $ <nat:324> <var:i> $ will be even also . The product $ <nat:412> <var:y> $ is known as even . This fact must be true as a consequence that the integer $ <nat:412> $ is clearly by definition an even whole number . Furthermore , notice the leading term $ <nat:78> $ is clearly even . Therefore , the term $ <var:W> <nat:78> $ is guaranteed to be even too . What's more , remember that the integer $ <nat:80> $ is even . As a consequence , the product $ <var:M> <nat:80> $ is even also . The pair $ <nat:198> <var:X> $ is even from the fact multiplying between an even element of $ \mathbb{Z}^+ $ with some element of $ \mathbb{N} $ is guaranteed to be even and moreover the number $ <nat:198> $ is trivially even . On top of this , take note the number $ <nat:106> $ is an even element of $ \mathbb{Z}^+ $ . Hence , the term $ <var:a> <nat:106> $ is even also . Recall that the natural number $ <nat:26> $ is even . Then , the product $ <var:l> <nat:26> $ is even too . We know that $ <nat:143> $ is known as odd . It can be justified that this result is proven . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:m> <var:M> <var:i> <var:Q> <var:W> <var:l> <var:y> <var:X> <var:a> : nat , Nat . odd ( <nat:324> * <var:i> + <nat:106> * <var:a> + <nat:38> * <var:m> + <nat:26> * <var:l> + <nat:394> * <var:Q> + <nat:80> * <var:M> + <nat:78> * <var:W> + <nat:412> * <var:y> + <nat:198> * <var:X> + <nat:143> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:394> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:394> * <var:Q> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:38> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:38> * <var:m> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:324> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:324> * <var:i> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:412> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:412> * <var:y> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:78> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:78> * <var:W> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:80> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:80> * <var:M> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:198> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:198> * <var:X> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:106> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:106> * <var:a> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:26> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:26> * <var:l> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . odd <nat:143> = true ) . { auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 