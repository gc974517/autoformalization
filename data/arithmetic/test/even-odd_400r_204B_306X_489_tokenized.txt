\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} With all positive terms $ <var:X> $ , $ <var:r> $ , and $ <var:B> $ $ <nat:204> \cdot <var:B> + <var:r> \cdot <nat:400> + <var:X> \cdot <nat:306> + <nat:489> $ is odd . \end{theorem} \begin{proof} From the fact the adding of an even integer with an odd positive integer is in itself an odd number in $ \mathbb{N} $ , hence our claim is proven . We check that $ <var:r> \cdot <nat:400> + <nat:204> \cdot <var:B> + <nat:489> + <var:X> \cdot <nat:306> $ is known to be odd since the summation $ <var:r> <nat:400> + <var:B> <nat:204> + <nat:306> <var:X> $ is guaranteed to be even . The products $ <var:X> \cdot <nat:306> $ and likewise $ <nat:400> \cdot <var:r> $ are obviously even integers since taking the product between an even positive integer and any element of $ \mathbb{N} $ will be even . Further , the pair $ <var:B> \cdot <nat:204> $ is known to be an even number as a consequence that the multiplication between an even number in $ \mathbb{N} $ and any integer is guaranteed to be an even number in $ \mathbb{N} $ . $ <var:r> * <nat:400> + <var:B> * <nat:204> + <nat:306> * <var:X> $ must be trivially even from the knowledge the product between even integers with a integer will be even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:X> <var:r> <var:B> : nat , Nat . odd ( <nat:204> * <var:B> + <nat:400> * <var:r> + <nat:306> * <var:X> + <nat:489> ) = true . Proof . intros . rewrite Nat . odd_add . assert ( <genH> : Nat . even ( <nat:306> * <var:X> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:400> * <var:r> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:204> * <var:B> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:204> * <var:B> + <nat:400> * <var:r> + <nat:306> * <var:X> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite <- Nat . negb_even . rewrite <genH> . auto . Qed . 