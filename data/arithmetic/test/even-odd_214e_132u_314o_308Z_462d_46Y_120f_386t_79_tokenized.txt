\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:e> \times <nat:214> + <var:o> \times <nat:314> + <var:Y> \times <nat:46> + <nat:79> + <nat:462> \times <var:d> + <nat:120> \times <var:f> + <var:u> \times <nat:132> + <var:Z> \times <nat:308> + <var:t> \times <nat:386> $ must be odd . \end{theorem} \begin{proof} The pairs $ <nat:308> \cdot <var:Z> $ , $ <var:f> \cdot <nat:120> $ , $ <nat:132> \cdot <var:u> $ , $ <nat:386> \cdot <var:t> $ , $ <var:o> \cdot <nat:314> $ , in addition to $ <var:e> \cdot <nat:214> $ are guaranteed to be even elements of $ \mathbb{N} $ . This claim is proven from the knowledge multiplying between an even number and any number in $ \mathbb{Z}^+ $ will be even . Take note that $ <var:d> \cdot <nat:462> $ is trivially an even element of $ \mathbb{N} $ . Observe that the pair $ <var:Y> \cdot <nat:46> $ is trivially even . This claim is proven from the knowledge the multiplication between an even whole number with an arbitrary positive integer is guaranteed to be an even element of $ \mathbb{Z}^+ $ . Take note $ <nat:79> $ is obviously an odd number . It can be checked that the expression $ <var:e> \cdot <nat:214> + <var:u> \cdot <nat:132> + <nat:314> \cdot <var:o> + <var:Z> \cdot <nat:308> + <nat:79> + <var:d> \cdot <nat:462> + <nat:46> \cdot <var:Y> + <nat:120> \cdot <var:f> + <var:t> \cdot <nat:386> $ will be odd . See the adding of an even number with an odd number in $ \mathbb{N} $ is guaranteed to be odd . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:e> <var:o> <var:Y> <var:d> <var:f> <var:u> <var:Z> <var:t> : nat , Nat . odd ( <nat:214> * <var:e> + <nat:314> * <var:o> + <nat:46> * <var:Y> + <nat:462> * <var:d> + <nat:120> * <var:f> + <nat:132> * <var:u> + <nat:308> * <var:Z> + <nat:386> * <var:t> + <nat:79> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:308> * <var:Z> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:120> * <var:f> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:132> * <var:u> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:386> * <var:t> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:314> * <var:o> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:214> * <var:e> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:462> * <var:d> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:46> * <var:Y> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . odd <nat:79> = true ) . { auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 