\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:324> \cdot <var:q> + <var:u> \cdot <nat:282> + <var:y> \cdot <nat:98> + <nat:24> \cdot <var:a> + <nat:294> \cdot <var:z> + <nat:430> \cdot <var:N> + <var:Q> \cdot <nat:76> + <nat:159> $ is guaranteed to be odd taking variables $ <var:y> $ , $ <var:z> $ , $ <var:N> $ , $ <var:u> $ , $ <var:Q> $ , $ <var:a> $ , and $ <var:q> $ . \end{theorem} \begin{proof} See the sum $ <nat:282> <var:u> + <nat:430> <var:N> + <var:z> <nat:294> + <var:y> <nat:98> + <var:q> <nat:324> + <var:Q> <nat:76> + <nat:159> + <var:a> <nat:24> $ is trivially odd as a consequence that the summation $ <var:Q> \times <nat:76> + <var:N> \times <nat:430> + <nat:24> \times <var:a> + <nat:324> \times <var:q> + <var:z> \times <nat:294> + <nat:98> \times <var:y> + <var:u> \times <nat:282> $ is trivially even . Additionally , the whole numbers $ <nat:76> $ , $ <nat:430> $ , $ <nat:24> $ , $ <nat:324> $ , $ <nat:294> $ , $ <nat:98> $ , as well as $ <nat:282> $ will be even . As a consequence , the terms $ <var:Q> <nat:76> $ , $ <nat:430> <var:N> $ , $ <nat:24> <var:a> $ , $ <var:q> <nat:324> $ , $ <var:z> <nat:294> $ , $ <var:y> <nat:98> $ , additionally $ <nat:282> <var:u> $ is guaranteed to be even as well . See the summation between even natural numbers successively and an odd element of $ \mathbb{Z}^+ $ must be odd . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:y> <var:z> <var:N> <var:u> <var:Q> <var:a> <var:q> : nat , Nat . odd ( <nat:324> * <var:q> + <nat:282> * <var:u> + <nat:98> * <var:y> + <nat:24> * <var:a> + <nat:294> * <var:z> + <nat:430> * <var:N> + <nat:76> * <var:Q> + <nat:159> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:76> = true ) . { auto . } assert ( <genH> : Nat . even <nat:430> = true ) . { auto . } assert ( <genH> : Nat . even <nat:24> = true ) . { auto . } assert ( <genH> : Nat . even <nat:324> = true ) . { auto . } assert ( <genH> : Nat . even <nat:294> = true ) . { auto . } assert ( <genH> : Nat . even <nat:98> = true ) . { auto . } assert ( <genH> : Nat . even <nat:282> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:76> * <var:Q> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:430> * <var:N> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:24> * <var:a> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:324> * <var:q> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:294> * <var:z> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:98> * <var:y> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:282> * <var:u> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:324> * <var:q> + <nat:282> * <var:u> + <nat:98> * <var:y> + <nat:24> * <var:a> + <nat:294> * <var:z> + <nat:430> * <var:N> + <nat:76> * <var:Q> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . auto . Qed . 