\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:466> <var:U> + <var:N> <nat:312> + <var:M> <nat:354> + <nat:49> + <var:z> <nat:222> $ is guaranteed to be odd assuming $ <var:M> $ , $ <var:z> $ , $ <var:U> $ , and $ <var:N> \in \mathbb{Z}^+ $ . \end{theorem} \begin{proof} $ <var:U> \times <nat:466> + <nat:354> \times <var:M> + <var:N> \times <nat:312> + <var:z> \times <nat:222> $ is even , from the knowledge the totaling of even integers collectively with an even whole number must be by definition an even natural . What's more , the whole numbers $ <nat:466> $ , $ <nat:354> $ , $ <nat:312> $ , as well as $ <nat:222> $ are even . Hence , the terms $ <var:U> <nat:466> $ , $ <nat:354> <var:M> $ , $ <nat:312> <var:N> $ , in addition to $ <var:z> <nat:222> $ is even additionally . and from the knowledge taking the product of even numbers with some natural is guaranteed to be an even whole number our result holds . We justify the formula $ <var:N> <nat:312> + <var:U> <nat:466> + <var:z> <nat:222> + <var:M> <nat:354> + <nat:49> $ must be odd . Recall that $ <nat:49> $ is guaranteed to be an odd natural . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:M> <var:z> <var:U> <var:N> : nat , Nat . odd ( <nat:466> * <var:U> + <nat:312> * <var:N> + <nat:354> * <var:M> + <nat:222> * <var:z> + <nat:49> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:466> = true ) . { auto . } assert ( <genH> : Nat . even <nat:354> = true ) . { auto . } assert ( <genH> : Nat . even <nat:312> = true ) . { auto . } assert ( <genH> : Nat . even <nat:222> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:466> * <var:U> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:354> * <var:M> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:312> * <var:N> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:222> * <var:z> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:466> * <var:U> + <nat:312> * <var:N> + <nat:354> * <var:M> + <nat:222> * <var:z> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } assert ( <genH> : Nat . odd <nat:49> = true ) . { auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . rewrite <genH> . auto . Qed . 