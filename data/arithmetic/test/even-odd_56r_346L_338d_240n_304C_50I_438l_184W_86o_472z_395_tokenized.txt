\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Using all terms $ <var:r> $ , $ <var:W> $ , $ <var:d> $ , $ <var:z> $ , $ <var:I> $ , $ <var:n> $ , $ <var:C> $ , $ <var:l> $ , $ <var:L> $ , and $ <var:o> $ the expression $ <var:W> * <nat:184> + <nat:438> * <var:l> + <var:n> * <nat:240> + <nat:395> + <var:C> * <nat:304> + <var:L> * <nat:346> + <nat:338> * <var:d> + <var:r> * <nat:56> + <nat:86> * <var:o> + <var:z> * <nat:472> + <nat:50> * <var:I> $ will be odd . \end{theorem} \begin{proof} The theorem holds from the fact $ <nat:86> \times <var:o> + <nat:304> \times <var:C> + <nat:338> \times <var:d> + <var:W> \times <nat:184> + <var:L> \times <nat:346> + <var:z> \times <nat:472> + <nat:56> \times <var:r> + <var:I> \times <nat:50> + <var:n> \times <nat:240> + <nat:438> \times <var:l> $ is obviously even . The summation $ <var:r> <nat:56> + <var:L> <nat:346> + <var:d> <nat:338> + <nat:240> <var:n> + <var:C> <nat:304> + <nat:50> <var:I> + <nat:438> <var:l> + <nat:184> <var:W> + <var:o> <nat:86> + <nat:472> <var:z> $ is even as a consequence that multiplying between an even integer with some natural number is even . The addition between even naturals concurrently and an odd positive integer will be odd . Observe that $ <nat:395> $ is an odd number in $ \mathbb{Z}^+ $ . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:r> <var:W> <var:d> <var:z> <var:I> <var:n> <var:C> <var:l> <var:L> <var:o> : nat , Nat . odd ( <nat:184> * <var:W> + <nat:438> * <var:l> + <nat:240> * <var:n> + <nat:304> * <var:C> + <nat:346> * <var:L> + <nat:338> * <var:d> + <nat:56> * <var:r> + <nat:86> * <var:o> + <nat:472> * <var:z> + <nat:50> * <var:I> + <nat:395> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:184> * <var:W> + <nat:438> * <var:l> + <nat:240> * <var:n> + <nat:304> * <var:C> + <nat:346> * <var:L> + <nat:338> * <var:d> + <nat:56> * <var:r> + <nat:86> * <var:o> + <nat:472> * <var:z> + <nat:50> * <var:I> ) = true ) . { repeat rewrite Nat . even_add . repeat rewrite Nat . even_mul . auto . } rewrite Nat . odd_add . assert ( <genH> : Nat . odd <nat:395> = true ) . { auto . } rewrite <- Nat . negb_even . rewrite <genH> . rewrite <genH> . auto . Qed . 