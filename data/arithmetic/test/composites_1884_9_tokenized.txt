\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \newtheorem{definition}{Definition} \begin{document} \begin{definition} Granted we have $ <var:i> $ , $ <var:D> $ , $ <var:R> $ , $ <var:w> $ , $ <var:A> $ , $ <var:B> $ , $ <var:b> $ , $ <var:f> $ , $ <var:g> \geq <nat:2> $ satisfying the condition that using $ <var:P> \in \mathbb{N} $ , $ <var:w> \cdot <var:g> \cdot <var:f> \cdot <var:A> \cdot <var:b> \cdot <var:i> \cdot <var:D> \cdot <var:R> \cdot <var:B> = <var:P> $ , we define that $ <var:P> $ is <def:nine-composite> using some natural numbers $ <var:g> $ , $ <var:b> $ , $ <var:f> $ , $ <var:w> $ , $ <var:i> $ , $ <var:A> $ , $ <var:B> $ , $ <var:D> $ , $ <var:R> $ . \end{definition} \begin{theorem} $ <nat:4717440> = <var:P> $ is a <def:nine-composite> number . \end{theorem} \begin{proof} Allow $ <var:f> = <nat:7> $ , $ <var:i> = <nat:6> $ , $ <var:D> = <nat:5> $ , $ <var:b> = <nat:4> $ , $ <var:w> = <nat:13> $ , $ <var:R> = <nat:8> $ , $ <var:B> = <nat:2> $ , $ <var:g> = <nat:3> $ , $ <var:A> = <nat:9> $ . We present our thesis holds as $ <var:R> = <nat:8> $ , $ <var:A> = <nat:9> $ , $ <var:g> = <nat:3> $ , $ <var:w> = <nat:13> $ , $ <var:f> = <nat:7> $ , $ <var:i> = <nat:6> $ , $ <var:b> = <nat:4> $ , $ <var:B> = <nat:2> $ and $ <var:D> = <nat:5> $ are greater than or equal to <nat:2> . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:nine-composite> ( <var:P> : nat ) := exists <var:g> <var:b> <var:f> <var:w> <var:i> <var:A> <var:B> <var:D> <var:R> : nat , ( <var:i> >= <nat:2> ) /\ ( <var:D> >= <nat:2> ) /\ ( <var:R> >= <nat:2> ) /\ ( <var:w> >= <nat:2> ) /\ ( <var:A> >= <nat:2> ) /\ ( <var:B> >= <nat:2> ) /\ ( <var:b> >= <nat:2> ) /\ ( <var:f> >= <nat:2> ) /\ ( <var:g> >= <nat:2> ) /\ ( <var:w> * <var:g> * <var:f> * <var:A> * <var:b> * <var:i> * <var:D> * <var:R> * <var:B> = <var:P> ) . Theorem <genP:1> : <def:nine-composite> <nat:4717440> . Proof . unfold <def:nine-composite> . exists <nat:3> . exists <nat:4> . exists <nat:7> . exists <nat:13> . exists <nat:6> . exists <nat:9> . exists <nat:2> . exists <nat:5> . exists <nat:8> . assert ( <genH> : <nat:8> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:9> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:3> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:13> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:7> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:6> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:4> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:2> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:5> >= <nat:2> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 