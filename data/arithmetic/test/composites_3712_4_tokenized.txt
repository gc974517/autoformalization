\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Assume that $ <var:j> $ is a <def:four-composite> number assuming that for some $ <var:B> $ , $ <var:H> $ , $ <var:O> $ , $ <var:M> \in \mathbb{N} $ we have $ <var:j> = <var:H> \cdot <var:O> \cdot <var:M> \cdot <var:B> $ with some positive integer $ <var:j> $ as well as such that $ <var:O> $ , $ <var:M> $ , $ <var:H> $ , and $ <var:B> \geq <nat:2> $ . Then the positive integer <nat:2700> is a <def:four-composite> positive integer . \end{theorem} \begin{proof} Recollect that <nat:2700> is a <def:four-composite> whole number if and only if it is the multiplication of positive integers $ <var:H> $ , $ <var:O> $ , $ <var:B> $ , $ <var:M> $ such that $ <var:H> $ , $ <var:O> $ , $ <var:M> $ , and $ <var:B> > <nat:1> $ . Let $ <var:O> = <nat:6> $ , $ <var:B> = <nat:10> $ , $ <var:H> = <nat:5> $ , and $ <var:M> = <nat:9> $ . Note $ <var:B> = <nat:10> $ , $ <var:H> = <nat:5> $ , $ <var:O> = <nat:6> $ , and $ <var:M> = <nat:9> $ are greater than <nat:1> . This yields <nat:2700> is <def:four-composite> . As a consequence , <nat:2700> is a <def:four-composite> integer has been verified . Because of this , $ <var:H> \times <var:M> \times <var:B> \times <var:O> = <nat:2700> $ plus $ <var:O> $ , $ <var:B> $ , $ <var:H> $ , and $ <var:M> > <nat:1> $ is true has been proven . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:four-composite> ( <var:j> : nat ) := exists <var:B> <var:H> <var:O> <var:M> : nat , ( <var:j> = <var:H> * <var:O> * <var:M> * <var:B> ) /\ ( <var:O> >= <nat:2> ) /\ ( <var:M> >= <nat:2> ) /\ ( <var:H> >= <nat:2> ) /\ ( <var:B> >= <nat:2> ) . Theorem <genP:1> : <def:four-composite> <nat:2700> . Proof . unfold <def:four-composite> . exists <nat:10> . exists <nat:5> . exists <nat:6> . exists <nat:9> . assert ( <genH> : <nat:10> > <nat:1> ) . { lia . } assert ( <genH> : <nat:5> > <nat:1> ) . { lia . } assert ( <genH> : <nat:6> > <nat:1> ) . { lia . } assert ( <genH> : <nat:9> > <nat:1> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 