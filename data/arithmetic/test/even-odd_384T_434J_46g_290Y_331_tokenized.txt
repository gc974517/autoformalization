\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:J> * <nat:434> + <nat:331> + <var:g> * <nat:46> + <var:Y> * <nat:290> + <var:T> * <nat:384> $ is guaranteed to be odd with some positive integers $ <var:T> $ , $ <var:g> $ , $ <var:J> $ , and $ <var:Y> $ . \end{theorem} \begin{proof} We verify this theorem is true . Take note $ <nat:331> $ is clearly an odd natural number . We know that the formula $ <nat:384> * <var:T> + <nat:434> * <var:J> + <nat:46> * <var:g> + <nat:290> * <var:Y> $ is obviously even . In addition to this , the products $ <var:T> \times <nat:384> $ , $ <var:J> \times <nat:434> $ , $ <var:g> \times <nat:46> $ , additionally $ <nat:290> \times <var:Y> $ are guaranteed to be even . This is true as a consequence that the whole numbers $ <nat:384> $ , $ <nat:434> $ , $ <nat:46> $ , plus $ <nat:290> $ are known as even . Because taking the product of even positive integers and some number in $ \mathbb{Z}^+ $ is an even natural the proposition is true . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:T> <var:g> <var:J> <var:Y> : nat , Nat . odd ( <nat:434> * <var:J> + <nat:46> * <var:g> + <nat:290> * <var:Y> + <nat:384> * <var:T> + <nat:331> ) = true . Proof . intros . assert ( <genH> : Nat . odd <nat:331> = true ) . { auto . } assert ( <genH> : Nat . even <nat:384> = true ) . { auto . } assert ( <genH> : Nat . even <nat:434> = true ) . { auto . } assert ( <genH> : Nat . even <nat:46> = true ) . { auto . } assert ( <genH> : Nat . even <nat:290> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:384> * <var:T> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:434> * <var:J> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:46> * <var:g> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:290> * <var:Y> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:434> * <var:J> + <nat:46> * <var:g> + <nat:290> * <var:Y> + <nat:384> * <var:T> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . rewrite <genH> . auto . Qed . 