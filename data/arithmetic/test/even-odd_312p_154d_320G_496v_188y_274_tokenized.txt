\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:320> * <var:G> + <var:p> * <nat:312> + <var:d> * <nat:154> + <var:v> * <nat:496> + <nat:274> + <nat:188> * <var:y> $ will be even using some terms $ <var:G> $ , $ <var:d> $ , $ <var:y> $ , $ <var:p> $ , and $ <var:v> $ . \end{theorem} \begin{proof} It can be justified that this main result is true . Recall that $ <nat:274> $ is known to be even . It can be checked that the sum $ <nat:312> <var:p> + <nat:320> <var:G> + <var:v> <nat:496> + <nat:154> <var:d> + <nat:274> + <nat:188> <var:y> $ is known as even from the knowledge $ <nat:312> * <var:p> + <nat:154> * <var:d> + <var:G> * <nat:320> + <nat:496> * <var:v> + <var:y> * <nat:188> $ is known to be even . Remember that taking the product between an even number in $ \mathbb{N} $ and a element of $ \mathbb{Z}^+ $ must be even . Take note the natural numbers $ <nat:154> $ and $ <nat:320> $ will be even elements of $ \mathbb{Z}^+ $ See the number $ <nat:312> $ is known to be even Further , notice the number $ <nat:496> $ is obviously an even number In addition to this , the integer $ <nat:188> $ is guaranteed to be even \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:G> <var:d> <var:y> <var:p> <var:v> : nat , Nat . even ( <nat:320> * <var:G> + <nat:312> * <var:p> + <nat:154> * <var:d> + <nat:496> * <var:v> + <nat:188> * <var:y> + <nat:274> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:274> = true ) . { auto . } assert ( <genH> : Nat . even <nat:154> = true ) . { auto . } assert ( <genH> : Nat . even <nat:320> = true ) . { auto . } assert ( <genH> : Nat . even <nat:312> = true ) . { auto . } assert ( <genH> : Nat . even <nat:496> = true ) . { auto . } assert ( <genH> : Nat . even <nat:188> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:320> * <var:G> + <nat:312> * <var:p> + <nat:154> * <var:d> + <nat:496> * <var:v> + <nat:188> * <var:y> ) = true ) . { repeat rewrite Nat . even_add . repeat rewrite Nat . even_mul . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . auto . Qed . 