\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:R> \times <nat:130> + <nat:386> \times <var:u> + <nat:126> \times <var:I> + <var:O> \times <nat:324> + <nat:394> \times <var:D> + <var:t> \times <nat:10> + <nat:262> \times <var:m> + <var:p> \times <nat:12> + <nat:112> + <nat:460> \times <var:W> $ must be even taking all $ <var:D> $ , $ <var:I> $ , $ <var:m> $ , $ <var:R> $ , $ <var:O> $ , $ <var:t> $ , $ <var:p> $ , $ <var:u> $ , and $ <var:W> \in \mathbb{N} $ . \end{theorem} \begin{proof} Remember that $ <nat:112> $ is clearly an even integer . It can be shown that our theorem is true . We employ the fact that the expression $ <var:p> * <nat:12> + <nat:130> * <var:R> + <var:D> * <nat:394> + <nat:386> * <var:u> + <var:O> * <nat:324> + <nat:10> * <var:t> + <var:m> * <nat:262> + <var:I> * <nat:126> + <nat:460> * <var:W> $ is even . The natural numbers $ <nat:394> $ , $ <nat:460> $ , $ <nat:10> $ , $ <nat:12> $ , $ <nat:386> $ , $ <nat:262> $ , $ <nat:324> $ , and also $ <nat:126> $ are clearly even whole numbers . Consequently , the pairs $ <nat:394> * <var:D> $ , $ <var:W> * <nat:460> $ , $ <nat:10> * <var:t> $ , $ <nat:12> * <var:p> $ , $ <var:u> * <nat:386> $ , $ <nat:262> * <var:m> $ , $ <var:O> * <nat:324> $ , plus $ <var:I> * <nat:126> $ must be even as well . The whole number $ <nat:130> $ is known as an even number in $ \mathbb{Z}^+ $ . Then , $ <nat:130> * <var:R> $ will be even too . By reason that the totaling of an even natural with even integers is guaranteed to be an even natural number , and from the knowledge the product between even elements of $ \mathbb{Z}^+ $ with any element of $ \mathbb{N} $ is an even element of $ \mathbb{Z}^+ $ . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:D> <var:I> <var:m> <var:R> <var:O> <var:t> <var:p> <var:u> <var:W> : nat , Nat . even ( <nat:130> * <var:R> + <nat:386> * <var:u> + <nat:126> * <var:I> + <nat:324> * <var:O> + <nat:394> * <var:D> + <nat:10> * <var:t> + <nat:262> * <var:m> + <nat:12> * <var:p> + <nat:460> * <var:W> + <nat:112> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:112> = true ) . { auto . } assert ( <genH> : Nat . even <nat:394> = true ) . { auto . } assert ( <genH> : Nat . even <nat:460> = true ) . { auto . } assert ( <genH> : Nat . even <nat:10> = true ) . { auto . } assert ( <genH> : Nat . even <nat:12> = true ) . { auto . } assert ( <genH> : Nat . even <nat:386> = true ) . { auto . } assert ( <genH> : Nat . even <nat:262> = true ) . { auto . } assert ( <genH> : Nat . even <nat:324> = true ) . { auto . } assert ( <genH> : Nat . even <nat:126> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:394> * <var:D> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:460> * <var:W> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:10> * <var:t> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:12> * <var:p> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:386> * <var:u> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:262> * <var:m> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:324> * <var:O> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:126> * <var:I> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:130> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:130> * <var:R> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:130> * <var:R> + <nat:386> * <var:u> + <nat:126> * <var:I> + <nat:324> * <var:O> + <nat:394> * <var:D> + <nat:10> * <var:t> + <nat:262> * <var:m> + <nat:12> * <var:p> + <nat:460> * <var:W> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . auto . Qed . 