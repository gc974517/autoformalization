\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:438> \cdot <var:N> + <nat:184> \cdot <var:H> + <nat:6> \cdot <var:h> + <nat:235> + <nat:460> \cdot <var:B> + <nat:228> \cdot <var:D> + <var:t> \cdot <nat:334> + <var:G> \cdot <nat:116> + <nat:486> \cdot <var:u> + <nat:172> \cdot <var:z> + <var:r> \cdot <nat:66> $ must be odd . \end{theorem} \begin{proof} The products $ <nat:172> \cdot <var:z> $ , $ <nat:334> \cdot <var:t> $ , $ <var:r> \cdot <nat:66> $ , $ <nat:116> \cdot <var:G> $ , as well as $ <nat:6> \cdot <var:h> $ must be even whole numbers . This claim is proven as a consequence that the multiplication of an even number with any number in $ \mathbb{N} $ is even . In addition to this , observe the terms $ <nat:184> \cdot <var:H> $ as well as $ <var:D> \cdot <nat:228> $ will be even . $ <nat:438> \cdot <var:N> $ is clearly an even number from the knowledge multiplying of an even element of $ \mathbb{Z}^+ $ with some natural must be clearly an even whole number . The product $ <var:B> \cdot <nat:460> $ is an even element of $ \mathbb{Z}^+ $ . This fact is true because multiplying of an even number in $ \mathbb{Z}^+ $ and some positive integer is trivially an even element of $ \mathbb{N} $ . See $ <nat:486> \cdot <var:u> $ is trivially even because multiplying between an even whole number with any integer is guaranteed to be even . See $ <nat:235> $ is clearly an odd number . The addition of even natural numbers concurrently and an odd number in $ \mathbb{Z}^+ $ is guaranteed to be by itself an odd number in $ \mathbb{N} $ . Accordingly , this main result must be true . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:N> <var:H> <var:h> <var:B> <var:D> <var:t> <var:G> <var:u> <var:z> <var:r> : nat , Nat . odd ( <nat:438> * <var:N> + <nat:184> * <var:H> + <nat:6> * <var:h> + <nat:460> * <var:B> + <nat:228> * <var:D> + <nat:334> * <var:t> + <nat:116> * <var:G> + <nat:486> * <var:u> + <nat:172> * <var:z> + <nat:66> * <var:r> + <nat:235> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:172> * <var:z> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:334> * <var:t> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:66> * <var:r> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:116> * <var:G> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:6> * <var:h> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:184> * <var:H> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:228> * <var:D> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:438> * <var:N> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:460> * <var:B> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:486> * <var:u> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . odd <nat:235> = true ) . { auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 