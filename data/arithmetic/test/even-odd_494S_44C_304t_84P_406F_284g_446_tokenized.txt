\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:S> <nat:494> + <nat:284> <var:g> + <nat:446> + <nat:406> <var:F> + <var:t> <nat:304> + <nat:44> <var:C> + <nat:84> <var:P> $ will be even . \end{theorem} \begin{proof} We utilize the understanding $ <nat:446> + <var:S> <nat:494> + <nat:84> <var:P> + <var:C> <nat:44> + <nat:304> <var:t> + <var:F> <nat:406> + <var:g> <nat:284> $ is known to be even by reason that the sum $ <var:S> <nat:494> + <nat:44> <var:C> + <var:t> <nat:304> + <var:P> <nat:84> + <nat:406> <var:F> + <nat:284> <var:g> $ is guaranteed to be even , as a consequence that the summing of an even number in $ \mathbb{N} $ with an even number in $ \mathbb{N} $ must be in itself an even element of $ \mathbb{Z}^+ $ . Remember that the products $ <nat:44> \times <var:C> $ as well as $ <nat:84> \times <var:P> $ are obviously even . On top of this , recall the terms $ <nat:406> \times <var:F> $ additionally $ <var:S> \times <nat:494> $ are even positive integers . Observe $ <nat:304> \times <var:t> $ is obviously an even integer . The term $ <nat:284> \times <var:g> $ is trivially even . This fact must be true from the fact the product between an even number in $ \mathbb{N} $ with an arbitrary natural number will be even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:S> <var:g> <var:F> <var:t> <var:C> <var:P> : nat , Nat . even ( <nat:494> * <var:S> + <nat:284> * <var:g> + <nat:406> * <var:F> + <nat:304> * <var:t> + <nat:44> * <var:C> + <nat:84> * <var:P> + <nat:446> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:44> * <var:C> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:84> * <var:P> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:406> * <var:F> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:494> * <var:S> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:304> * <var:t> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:284> * <var:g> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:494> * <var:S> + <nat:284> * <var:g> + <nat:406> * <var:F> + <nat:304> * <var:t> + <nat:44> * <var:C> + <nat:84> * <var:P> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . even_add . rewrite <genH> . auto . Qed . 