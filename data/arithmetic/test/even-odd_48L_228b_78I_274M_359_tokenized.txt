\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:274> * <var:M> + <nat:359> + <var:b> * <nat:228> + <nat:78> * <var:I> + <var:L> * <nat:48> $ is odd given $ <var:b> $ , $ <var:L> $ , $ <var:I> $ , and $ <var:M> \in \mathbb{Z}^+ $ . \end{theorem} \begin{proof} Take note that $ <var:b> <nat:228> + <nat:274> <var:M> + <var:L> <nat:48> + <var:I> <nat:78> $ is obviously even . Remember that the adding of even numbers with an even natural number is guaranteed to be an even positive integer . Take note the leading term $ <nat:78> $ is known as even . Therefore , the pair $ <var:I> \cdot <nat:78> $ is guaranteed to be even also . Observe that the coefficients $ <nat:274> $ and likewise $ <nat:228> $ are clearly even positive integers . Therefore , the products $ <nat:274> \cdot <var:M> $ and likewise $ <var:b> \cdot <nat:228> $ must be even as well . Furthermore , the product $ <var:L> \cdot <nat:48> $ is trivially even by reason that the integer $ <nat:48> $ is trivially even . It can be demonstrated that $ <nat:359> + <nat:48> <var:L> + <nat:228> <var:b> + <nat:78> <var:I> + <nat:274> <var:M> $ is guaranteed to be odd . Observe that $ <nat:359> $ is guaranteed to be an odd number in $ \mathbb{Z}^+ $ . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:b> <var:L> <var:I> <var:M> : nat , Nat . odd ( <nat:274> * <var:M> + <nat:228> * <var:b> + <nat:78> * <var:I> + <nat:48> * <var:L> + <nat:359> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:78> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:78> * <var:I> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:274> = true ) . { auto . } assert ( <genH> : Nat . even <nat:228> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:274> * <var:M> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:228> * <var:b> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:48> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:48> * <var:L> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:274> * <var:M> + <nat:228> * <var:b> + <nat:78> * <var:I> + <nat:48> * <var:L> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } assert ( <genH> : Nat . odd <nat:359> = true ) . { auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . rewrite <genH> . auto . Qed . 