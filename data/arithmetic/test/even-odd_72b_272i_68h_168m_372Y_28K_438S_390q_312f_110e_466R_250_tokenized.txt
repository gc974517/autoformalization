\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:250> + <var:h> <nat:68> + <nat:312> <var:f> + <nat:390> <var:q> + <var:Y> <nat:372> + <nat:272> <var:i> + <nat:438> <var:S> + <nat:72> <var:b> + <nat:110> <var:e> + <var:m> <nat:168> + <nat:28> <var:K> + <var:R> <nat:466> $ must be even . \end{theorem} \begin{proof} See $ <nat:250> $ is obviously even . The adding of even numbers in $ \mathbb{N} $ with an even whole number is even . The natural number $ <nat:72> $ is obviously even . Then , the pair $ <var:b> \cdot <nat:72> $ is guaranteed to be even additionally . The number $ <nat:272> $ is clearly even . Consequently , the term $ <var:i> \cdot <nat:272> $ must be even too . Adding on , the term $ <nat:68> \cdot <var:h> $ is obviously an even number in $ \mathbb{N} $ from the knowledge multiplying of an even whole number and some natural will be even . This claim holds by reason that the positive integer $ <nat:68> $ is an even natural number . Notice that the positive integer $ <nat:168> $ is guaranteed to be an even integer . Therefore , the pair $ <var:m> \cdot <nat:168> $ is even too . Further , see the product $ <var:Y> \cdot <nat:372> $ is obviously an even number in $ \mathbb{N} $ . This claim is proven from the knowledge the whole number $ <nat:372> $ is known as even . See the term $ <nat:28> \cdot <var:K> $ is trivially even . This claim holds from the knowledge the multiplication of an even element of $ \mathbb{Z}^+ $ with any number will be an even integer , and holds by reason that the natural number $ <nat:28> $ is known as even . The pair $ <nat:438> \cdot <var:S> $ is known as an even element of $ \mathbb{N} $ from the knowledge multiplying between an even natural number and an arbitrary integer will be even in addition to the integer $ <nat:438> $ is guaranteed to be even . What's more , recall that the natural number $ <nat:390> $ is known as even . Then , the pair $ <nat:390> \cdot <var:q> $ will be even at the same time . Take note that the integer $ <nat:312> $ is guaranteed to be even . Then , the pair $ <nat:312> \cdot <var:f> $ is guaranteed to be even also . Furthermore , observe the leading term $ <nat:110> $ is an even positive integer . Accordingly , the term $ <nat:110> \cdot <var:e> $ must be even additionally . Additionally , recall the leading term $ <nat:466> $ is obviously an even number in $ \mathbb{N} $ . Accordingly , $ <nat:466> \cdot <var:R> $ is guaranteed to be even also . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:h> <var:f> <var:q> <var:Y> <var:i> <var:S> <var:b> <var:e> <var:m> <var:K> <var:R> : nat , Nat . even ( <nat:68> * <var:h> + <nat:312> * <var:f> + <nat:390> * <var:q> + <nat:372> * <var:Y> + <nat:272> * <var:i> + <nat:438> * <var:S> + <nat:72> * <var:b> + <nat:110> * <var:e> + <nat:168> * <var:m> + <nat:28> * <var:K> + <nat:466> * <var:R> + <nat:250> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:250> = true ) . { auto . } repeat rewrite Nat . even_add . assert ( <genH> : Nat . even <nat:72> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:72> * <var:b> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:272> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:272> * <var:i> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:68> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:68> * <var:h> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:168> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:168> * <var:m> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:372> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:372> * <var:Y> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:28> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:28> * <var:K> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:438> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:438> * <var:S> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:390> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:390> * <var:q> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:312> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:312> * <var:f> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:110> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:110> * <var:e> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:466> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:466> * <var:R> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 