\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Under the condition that there exist $ <var:y> $ , $ <var:f> $ , $ <var:K> $ , $ <var:n> $ , $ <var:q> $ , $ <var:E> $ , $ <var:e> $ , $ <var:u> $ , $ <var:W> $ , $ <var:T> \in \mathbb{N} $ so that $ <var:T> $ , $ <var:n> $ , $ <var:q> $ , $ <var:u> $ , $ <var:K> $ , $ <var:W> $ , $ <var:E> $ , $ <var:y> $ , $ <var:e> $ and $ <var:f> > <nat:1> $ . Define that $ <var:p> \in \mathbb{N} $ will be considered as a <def:ten-composite> number when $ <var:p> = <var:y> \cdot <var:e> \cdot <var:f> \cdot <var:W> \cdot <var:u> \cdot <var:q> \cdot <var:E> \cdot <var:n> \cdot <var:T> \cdot <var:K> $ . Consequently <nat:69189120> is a <def:ten-composite> integer . \end{theorem} \begin{proof} We demonstrate <nat:69189120> is a <def:ten-composite> positive integer because $ <nat:12> $ , $ <nat:8> $ , $ <nat:7> $ , $ <nat:2> $ , $ <nat:13> $ , $ <nat:6> $ , $ <nat:4> $ , $ <nat:3> $ , $ <nat:5> $ , $ <nat:11> $ are greater than <nat:1> plus seeing that $ <nat:13> \cdot <nat:2> \cdot <nat:6> \cdot <nat:12> \cdot <nat:11> \cdot <nat:5> \cdot <nat:4> \cdot <nat:7> \cdot <nat:3> \cdot <nat:8> = <nat:69189120> = <var:E> \cdot <var:e> \cdot <var:q> \cdot <var:n> \cdot <var:y> \cdot <var:f> \cdot <var:T> \cdot <var:W> \cdot <var:u> \cdot <var:K> $ . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:ten-composite> ( <var:p> : nat ) := exists <var:y> <var:f> <var:K> <var:n> <var:q> <var:E> <var:e> <var:u> <var:W> <var:T> : nat , ( <var:T> > <nat:1> ) /\ ( <var:n> > <nat:1> ) /\ ( <var:q> > <nat:1> ) /\ ( <var:u> > <nat:1> ) /\ ( <var:K> > <nat:1> ) /\ ( <var:W> > <nat:1> ) /\ ( <var:E> > <nat:1> ) /\ ( <var:y> > <nat:1> ) /\ ( <var:e> > <nat:1> ) /\ ( <var:f> > <nat:1> ) /\ ( <var:p> = <var:y> * <var:e> * <var:f> * <var:W> * <var:u> * <var:q> * <var:E> * <var:n> * <var:T> * <var:K> ) . Theorem <genP:1> : <def:ten-composite> <nat:69189120> . Proof . unfold <def:ten-composite> . assert ( <genH> : <nat:12> > <nat:1> ) . { lia . } assert ( <genH> : <nat:8> > <nat:1> ) . { lia . } assert ( <genH> : <nat:7> > <nat:1> ) . { lia . } assert ( <genH> : <nat:2> > <nat:1> ) . { lia . } assert ( <genH> : <nat:13> > <nat:1> ) . { lia . } assert ( <genH> : <nat:6> > <nat:1> ) . { lia . } assert ( <genH> : <nat:4> > <nat:1> ) . { lia . } assert ( <genH> : <nat:3> > <nat:1> ) . { lia . } assert ( <genH> : <nat:5> > <nat:1> ) . { lia . } assert ( <genH> : <nat:11> > <nat:1> ) . { lia . } exists <nat:11> . exists <nat:5> . exists <nat:8> . exists <nat:12> . exists <nat:6> . exists <nat:13> . exists <nat:2> . exists <nat:3> . exists <nat:7> . exists <nat:4> . repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 