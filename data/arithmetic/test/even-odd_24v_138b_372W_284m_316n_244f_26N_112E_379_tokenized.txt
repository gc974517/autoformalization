\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:v> * <nat:24> + <var:b> * <nat:138> + <var:W> * <nat:372> + <var:m> * <nat:284> + <var:n> * <nat:316> + <nat:244> * <var:f> + <var:N> * <nat:26> + <nat:112> * <var:E> + <nat:379> $ will be odd . \end{theorem} \begin{proof} The terms $ <nat:138> * <var:b> $ , $ <var:N> * <nat:26> $ , $ <var:W> * <nat:372> $ , as well as $ <nat:284> * <var:m> $ are known to be even numbers in $ \mathbb{Z}^+ $ . Adding on , the terms $ <var:E> * <nat:112> $ and $ <nat:244> * <var:f> $ are known to be even . This fact is proven because the multiplication between an even positive integer with an arbitrary whole number is guaranteed to be an even integer . Furthermore , the term $ <nat:24> * <var:v> $ is known as an even positive integer by reason that multiplying of an even number in $ \mathbb{N} $ with some element of $ \mathbb{N} $ is guaranteed to be even . Observe the pair $ <nat:316> * <var:n> $ is an even natural . Observe $ <nat:379> $ is clearly odd . We verify the main result must be true . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:v> <var:b> <var:W> <var:m> <var:n> <var:f> <var:N> <var:E> : nat , Nat . odd ( <nat:24> * <var:v> + <nat:138> * <var:b> + <nat:372> * <var:W> + <nat:284> * <var:m> + <nat:316> * <var:n> + <nat:244> * <var:f> + <nat:26> * <var:N> + <nat:112> * <var:E> + <nat:379> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:138> * <var:b> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:26> * <var:N> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:372> * <var:W> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:284> * <var:m> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:112> * <var:E> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:244> * <var:f> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:24> * <var:v> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:316> * <var:n> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . odd <nat:379> = true ) . { auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 