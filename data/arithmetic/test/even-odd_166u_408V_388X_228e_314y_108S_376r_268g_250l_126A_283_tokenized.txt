\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Taking positive terms $ <var:A> $ , $ <var:V> $ , $ <var:y> $ , $ <var:r> $ , $ <var:X> $ , $ <var:g> $ , $ <var:e> $ , $ <var:u> $ , $ <var:S> $ , and $ <var:l> $ the formula $ <nat:376> \times <var:r> + <nat:283> + <nat:388> \times <var:X> + <var:A> \times <nat:126> + <var:S> \times <nat:108> + <nat:228> \times <var:e> + <var:V> \times <nat:408> + <var:u> \times <nat:166> + <var:g> \times <nat:268> + <var:l> \times <nat:250> + <var:y> \times <nat:314> $ is guaranteed to be odd . \end{theorem} \begin{proof} The summation $ <var:l> \cdot <nat:250> + <nat:388> \cdot <var:X> + <var:r> \cdot <nat:376> + <var:S> \cdot <nat:108> + <var:A> \cdot <nat:126> + <var:e> \cdot <nat:228> + <nat:283> + <var:g> \cdot <nat:268> + <nat:314> \cdot <var:y> + <var:u> \cdot <nat:166> + <var:V> \cdot <nat:408> $ is odd by reason that the sum $ <nat:166> \cdot <var:u> + <var:V> \cdot <nat:408> + <nat:388> \cdot <var:X> + <nat:228> \cdot <var:e> + <nat:314> \cdot <var:y> + <var:S> \cdot <nat:108> + <nat:376> \cdot <var:r> + <var:g> \cdot <nat:268> + <nat:250> \cdot <var:l> + <var:A> \cdot <nat:126> $ is known to be even . See the whole numbers $ <nat:268> $ , $ <nat:126> $ , $ <nat:108> $ , $ <nat:250> $ , $ <nat:228> $ , $ <nat:376> $ , $ <nat:166> $ , in addition to $ <nat:408> $ are clearly even The natural number $ <nat:314> $ is obviously an even positive integer Likewise , the number $ <nat:388> $ is guaranteed to be an even element of $ \mathbb{Z}^+ $ Notice that the summing between an even natural and an odd element of $ \mathbb{N} $ must be odd . See $ <nat:283> $ is obviously odd . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:A> <var:V> <var:y> <var:r> <var:X> <var:g> <var:e> <var:u> <var:S> <var:l> : nat , Nat . odd ( <nat:376> * <var:r> + <nat:388> * <var:X> + <nat:126> * <var:A> + <nat:108> * <var:S> + <nat:228> * <var:e> + <nat:408> * <var:V> + <nat:166> * <var:u> + <nat:268> * <var:g> + <nat:250> * <var:l> + <nat:314> * <var:y> + <nat:283> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:268> = true ) . { auto . } assert ( <genH> : Nat . even <nat:126> = true ) . { auto . } assert ( <genH> : Nat . even <nat:108> = true ) . { auto . } assert ( <genH> : Nat . even <nat:250> = true ) . { auto . } assert ( <genH> : Nat . even <nat:228> = true ) . { auto . } assert ( <genH> : Nat . even <nat:376> = true ) . { auto . } assert ( <genH> : Nat . even <nat:166> = true ) . { auto . } assert ( <genH> : Nat . even <nat:408> = true ) . { auto . } assert ( <genH> : Nat . even <nat:314> = true ) . { auto . } assert ( <genH> : Nat . even <nat:388> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:376> * <var:r> + <nat:388> * <var:X> + <nat:126> * <var:A> + <nat:108> * <var:S> + <nat:228> * <var:e> + <nat:408> * <var:V> + <nat:166> * <var:u> + <nat:268> * <var:g> + <nat:250> * <var:l> + <nat:314> * <var:y> ) = true ) . { repeat rewrite Nat . even_add . repeat rewrite Nat . even_mul . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . assert ( <genH> : Nat . odd <nat:283> = true ) . { auto . } rewrite <- Nat . negb_even . rewrite <genH> . rewrite <genH> . auto . Qed . 