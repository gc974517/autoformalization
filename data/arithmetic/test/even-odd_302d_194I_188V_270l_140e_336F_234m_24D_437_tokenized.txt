\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:d> * <nat:302> + <nat:437> + <nat:194> * <var:I> + <nat:188> * <var:V> + <var:l> * <nat:270> + <var:e> * <nat:140> + <var:F> * <nat:336> + <nat:234> * <var:m> + <var:D> * <nat:24> $ is odd assuming some positive numbers $ <var:m> $ , $ <var:D> $ , $ <var:F> $ , $ <var:l> $ , $ <var:e> $ , $ <var:V> $ , $ <var:d> $ , and $ <var:I> $ . \end{theorem} \begin{proof} The natural numbers $ <nat:24> $ , $ <nat:302> $ , $ <nat:188> $ , in addition to $ <nat:140> $ are clearly even Recall that the leading term $ <nat:336> $ is obviously an even natural number Furthermore , remember the leading terms $ <nat:234> $ and $ <nat:270> $ must be even numbers in $ \mathbb{N} $ See that the coefficient $ <nat:194> $ is even Notice $ <nat:437> $ is obviously an odd element of $ \mathbb{Z}^+ $ . See the addition between an even element of $ \mathbb{Z}^+ $ with an odd integer will be by definition an odd number in $ \mathbb{Z}^+ $ , as well as following , notice that the product between an even natural number and some number in $ \mathbb{N} $ is even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:m> <var:D> <var:F> <var:l> <var:e> <var:V> <var:d> <var:I> : nat , Nat . odd ( <nat:302> * <var:d> + <nat:194> * <var:I> + <nat:188> * <var:V> + <nat:270> * <var:l> + <nat:140> * <var:e> + <nat:336> * <var:F> + <nat:234> * <var:m> + <nat:24> * <var:D> + <nat:437> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:24> = true ) . { auto . } assert ( <genH> : Nat . even <nat:302> = true ) . { auto . } assert ( <genH> : Nat . even <nat:188> = true ) . { auto . } assert ( <genH> : Nat . even <nat:140> = true ) . { auto . } assert ( <genH> : Nat . even <nat:336> = true ) . { auto . } assert ( <genH> : Nat . even <nat:234> = true ) . { auto . } assert ( <genH> : Nat . even <nat:270> = true ) . { auto . } assert ( <genH> : Nat . even <nat:194> = true ) . { auto . } assert ( <genH> : Nat . odd <nat:437> = true ) . { auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . repeat rewrite Nat . even_mul . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 