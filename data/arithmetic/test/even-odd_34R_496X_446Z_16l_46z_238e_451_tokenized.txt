\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} For some integers $ <var:l> $ , $ <var:z> $ , $ <var:R> $ , $ <var:X> $ , $ <var:e> $ , and $ <var:Z> $ the sum $ <var:R> * <nat:34> + <var:e> * <nat:238> + <var:z> * <nat:46> + <nat:16> * <var:l> + <nat:496> * <var:X> + <var:Z> * <nat:446> + <nat:451> $ is guaranteed to be odd . \end{theorem} \begin{proof} It can be verified that $ <nat:16> <var:l> + <var:Z> <nat:446> + <var:e> <nat:238> + <var:X> <nat:496> + <nat:34> <var:R> + <nat:46> <var:z> + <nat:451> $ is guaranteed to be odd . The lemma is proven from the knowledge $ <nat:446> * <var:Z> + <var:l> * <nat:16> + <nat:34> * <var:R> + <var:e> * <nat:238> + <nat:46> * <var:z> + <var:X> * <nat:496> $ is known to be even . See that the terms $ <var:z> \cdot <nat:46> $ , $ <nat:496> \cdot <var:X> $ , $ <var:R> \cdot <nat:34> $ , $ <nat:238> \cdot <var:e> $ , and $ <var:l> \cdot <nat:16> $ are known to be even . Recall the product $ <nat:446> \cdot <var:Z> $ is known to be an even positive integer . From the knowledge the totaling of an even number in $ \mathbb{Z}^+ $ with an even element of $ \mathbb{Z}^+ $ is by its very nature an even element of $ \mathbb{N} $ , the expression $ <var:R> \times <nat:34> + <var:X> \times <nat:496> + <nat:446> \times <var:Z> + <var:l> \times <nat:16> + <var:z> \times <nat:46> + <nat:238> \times <var:e> $ will be even . The summation of even numbers in $ \mathbb{N} $ successively and an odd natural is odd . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:l> <var:z> <var:R> <var:X> <var:e> <var:Z> : nat , Nat . odd ( <nat:34> * <var:R> + <nat:238> * <var:e> + <nat:46> * <var:z> + <nat:16> * <var:l> + <nat:496> * <var:X> + <nat:446> * <var:Z> + <nat:451> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:46> * <var:z> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:496> * <var:X> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:34> * <var:R> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:238> * <var:e> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:16> * <var:l> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:446> * <var:Z> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:34> * <var:R> + <nat:238> * <var:e> + <nat:46> * <var:z> + <nat:16> * <var:l> + <nat:496> * <var:X> + <nat:446> * <var:Z> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . auto . Qed . 