\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} For every $ <var:v> $ , $ <var:L> $ , $ <var:E> $ , $ <var:C> $ , $ <var:S> $ , $ <var:N> $ , $ <var:o> $ , and $ <var:a> \in \mathbb{N} $ the sum $ <var:v> <nat:28> + <nat:54> <var:N> + <nat:388> <var:L> + <nat:218> <var:E> + <nat:62> <var:a> + <nat:118> + <var:o> <nat:118> + <nat:114> <var:S> + <nat:250> <var:C> $ is guaranteed to be even . \end{theorem} \begin{proof} Remember that the natural numbers $ <nat:28> $ , $ <nat:54> $ , $ <nat:388> $ , $ <nat:218> $ , $ <nat:62> $ , $ <nat:118> $ , $ <nat:114> $ , and likewise $ <nat:250> $ are trivially even natural numbers . Then , the terms $ <nat:28> <var:v> $ , $ <nat:54> <var:N> $ , $ <var:L> <nat:388> $ , $ <var:E> <nat:218> $ , $ <var:a> <nat:62> $ , $ <var:o> <nat:118> $ , $ <var:S> <nat:114> $ , and likewise $ <nat:250> <var:C> $ must be even also . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:v> <var:L> <var:E> <var:C> <var:S> <var:N> <var:o> <var:a> : nat , Nat . even ( <nat:28> * <var:v> + <nat:54> * <var:N> + <nat:388> * <var:L> + <nat:218> * <var:E> + <nat:62> * <var:a> + <nat:118> * <var:o> + <nat:114> * <var:S> + <nat:250> * <var:C> + <nat:118> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:28> = true ) . { auto . } assert ( <genH> : Nat . even <nat:54> = true ) . { auto . } assert ( <genH> : Nat . even <nat:388> = true ) . { auto . } assert ( <genH> : Nat . even <nat:218> = true ) . { auto . } assert ( <genH> : Nat . even <nat:62> = true ) . { auto . } assert ( <genH> : Nat . even <nat:118> = true ) . { auto . } assert ( <genH> : Nat . even <nat:114> = true ) . { auto . } assert ( <genH> : Nat . even <nat:250> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:28> * <var:v> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:54> * <var:N> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:388> * <var:L> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:218> * <var:E> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:62> * <var:a> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:118> * <var:o> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:114> * <var:S> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:250> * <var:C> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 