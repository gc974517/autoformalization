\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:u> * <nat:380> + <nat:362> * <var:C> + <var:c> * <nat:182> + <var:s> * <nat:248> + <nat:208> * <var:U> + <nat:252> * <var:O> + <nat:265> + <nat:72> * <var:l> + <nat:10> * <var:q> + <var:V> * <nat:498> $ must be odd taking some $ <var:U> $ , $ <var:s> $ , $ <var:c> $ , $ <var:C> $ , $ <var:O> $ , $ <var:V> $ , $ <var:q> $ , $ <var:u> $ , and $ <var:l> \in \mathbb{N} $ . \end{theorem} \begin{proof} The pairs $ <nat:380> \times <var:u> $ , $ <var:C> \times <nat:362> $ , $ <var:c> \times <nat:182> $ , $ <nat:248> \times <var:s> $ , $ <nat:208> \times <var:U> $ , $ <nat:252> \times <var:O> $ , $ <var:l> \times <nat:72> $ , $ <var:q> \times <nat:10> $ , in addition to $ <nat:498> \times <var:V> $ must be even numbers in $ \mathbb{Z}^+ $ from the fact the multiplication between an even element of $ \mathbb{Z}^+ $ and any number is fundamentally an even whole number as well as the integers $ <nat:380> $ , $ <nat:362> $ , $ <nat:182> $ , $ <nat:248> $ , $ <nat:208> $ , $ <nat:252> $ , $ <nat:72> $ , $ <nat:10> $ , plus $ <nat:498> $ must be even . It can be proven that $ <var:q> \cdot <nat:10> + <var:U> \cdot <nat:208> + <nat:72> \cdot <var:l> + <var:u> \cdot <nat:380> + <nat:265> + <var:O> \cdot <nat:252> + <var:C> \cdot <nat:362> + <nat:182> \cdot <var:c> + <var:s> \cdot <nat:248> + <nat:498> \cdot <var:V> $ will be odd . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:U> <var:s> <var:c> <var:C> <var:O> <var:V> <var:q> <var:u> <var:l> : nat , Nat . odd ( <nat:380> * <var:u> + <nat:362> * <var:C> + <nat:182> * <var:c> + <nat:248> * <var:s> + <nat:208> * <var:U> + <nat:252> * <var:O> + <nat:72> * <var:l> + <nat:10> * <var:q> + <nat:498> * <var:V> + <nat:265> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:380> = true ) . { auto . } assert ( <genH> : Nat . even <nat:362> = true ) . { auto . } assert ( <genH> : Nat . even <nat:182> = true ) . { auto . } assert ( <genH> : Nat . even <nat:248> = true ) . { auto . } assert ( <genH> : Nat . even <nat:208> = true ) . { auto . } assert ( <genH> : Nat . even <nat:252> = true ) . { auto . } assert ( <genH> : Nat . even <nat:72> = true ) . { auto . } assert ( <genH> : Nat . even <nat:10> = true ) . { auto . } assert ( <genH> : Nat . even <nat:498> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:380> * <var:u> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:362> * <var:C> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:182> * <var:c> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:248> * <var:s> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:208> * <var:U> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:252> * <var:O> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:72> * <var:l> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:10> * <var:q> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:498> * <var:V> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 