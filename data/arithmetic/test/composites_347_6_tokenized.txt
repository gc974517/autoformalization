\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} There exist some whole numbers $ <var:y> $ , $ <var:X> $ , $ <var:N> $ , $ <var:W> $ , $ <var:m> $ , and $ <var:K> $ satisfying the condition that $ <var:W> $ , $ <var:N> $ , $ <var:y> $ , $ <var:K> $ , $ <var:m> $ and $ <var:X> > <nat:1> $ and where $ <var:N> * <var:m> * <var:W> * <var:K> * <var:X> * <var:y> $ is $ <nat:31680> $ . \end{theorem} \begin{proof} We confirm $ <var:X> \cdot <var:y> \cdot <var:m> \cdot <var:W> \cdot <var:K> \cdot <var:N> = <nat:31680> $ as well as $ <var:K> $ , $ <var:m> $ , $ <var:y> $ , $ <var:X> $ , $ <var:W> $ and $ <var:N> $ are more than <nat:1> . Note that $ <nat:8> $ , $ <nat:6> $ , $ <nat:2> $ , $ <nat:11> $ , $ <nat:10> $ , and $ <nat:3> > <nat:1> $ . Plus note additionally $ <nat:31680> = <var:X> \times <var:N> \times <var:m> \times <var:W> \times <var:K> \times <var:y> $ produces $ <var:N> = <nat:10> $ , $ <var:y> = <nat:8> $ , $ <var:K> = <nat:6> $ , $ <var:X> = <nat:3> $ , $ <var:W> = <nat:11> $ , and $ <var:m> = <nat:2> $ . \end{proof} \end{document} 
~
Require Import Lia . Theorem <genP:1> : exists <var:y> <var:X> <var:N> <var:W> <var:m> <var:K> : nat , ( <var:W> > <nat:1> ) /\ ( <var:N> > <nat:1> ) /\ ( <var:y> > <nat:1> ) /\ ( <var:K> > <nat:1> ) /\ ( <var:m> > <nat:1> ) /\ ( <var:X> > <nat:1> ) /\ ( <var:N> * <var:m> * <var:W> * <var:K> * <var:X> * <var:y> = <nat:31680> ) . Proof . assert ( <genH> : <nat:8> > <nat:1> ) . { lia . } assert ( <genH> : <nat:6> > <nat:1> ) . { lia . } assert ( <genH> : <nat:2> > <nat:1> ) . { lia . } assert ( <genH> : <nat:11> > <nat:1> ) . { lia . } assert ( <genH> : <nat:10> > <nat:1> ) . { lia . } assert ( <genH> : <nat:3> > <nat:1> ) . { lia . } exists <nat:8> . exists <nat:3> . exists <nat:10> . exists <nat:11> . exists <nat:2> . exists <nat:6> . repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 