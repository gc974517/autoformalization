\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Allow $ <var:o> $ , $ <var:M> $ , $ <var:A> $ , $ <var:f> $ , $ <var:v> $ , $ <var:S> $ , $ <var:C> $ , $ <var:u> $ , $ <var:L> $ , $ <var:G> $ as natural numbers . Define that some $ <var:d> $ is said to be a <def:ten-composite> number if $ <var:d> = <var:o> * <var:C> * <var:S> * <var:u> * <var:G> * <var:M> * <var:v> * <var:L> * <var:f> * <var:A> $ . For this reason $ <var:d> = <nat:119750400> $ is a <def:ten-composite> number . \end{theorem} \begin{proof} Remember a <def:ten-composite> natural number is the multiplication of positive integers $ <var:M> $ , $ <var:v> $ , $ <var:G> $ , $ <var:A> $ , $ <var:L> $ , $ <var:u> $ , $ <var:o> $ , $ <var:S> $ , $ <var:f> $ , $ <var:C> $ more than <nat:1> . Assume $ <var:C> = <nat:10> $ , $ <var:A> = <nat:6> $ , $ <var:u> = <nat:7> $ , $ <var:M> = <nat:9> $ , $ <var:L> = <nat:11> $ , $ <var:f> = <nat:5> $ , $ <var:v> = <nat:2> $ , $ <var:S> = <nat:12> $ , $ <var:G> = <nat:8> $ and $ <var:o> = <nat:3> $ . This indicates <nat:119750400> is a <def:ten-composite> natural number . Therefore , <nat:119750400> is a <def:ten-composite> natural number is validated . Therefore , $ <var:u> \times <var:v> \times <var:o> \times <var:C> \times <var:M> \times <var:G> \times <var:L> \times <var:A> \times <var:S> \times <var:f> = <nat:119750400> $ has been verified . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:ten-composite> ( <var:d> : nat ) := exists <var:o> <var:M> <var:A> <var:f> <var:v> <var:S> <var:C> <var:u> <var:L> <var:G> : nat , ( <var:d> = <var:o> * <var:C> * <var:S> * <var:u> * <var:G> * <var:M> * <var:v> * <var:L> * <var:f> * <var:A> ) . Theorem <genP:1> : <def:ten-composite> <nat:119750400> . Proof . unfold <def:ten-composite> . exists <nat:3> . exists <nat:9> . exists <nat:6> . exists <nat:5> . exists <nat:2> . exists <nat:12> . exists <nat:10> . exists <nat:7> . exists <nat:11> . exists <nat:8> . repeat split . all : lia . Qed . 