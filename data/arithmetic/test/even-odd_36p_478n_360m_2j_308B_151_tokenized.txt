\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Given some unknowns $ <var:B> $ , $ <var:j> $ , $ <var:p> $ , $ <var:m> $ , and $ <var:n> $ $ <var:p> <nat:36> + <nat:478> <var:n> + <var:m> <nat:360> + <nat:151> + <var:j> <nat:2> + <var:B> <nat:308> $ is guaranteed to be odd . \end{theorem} \begin{proof} The terms $ <var:n> \cdot <nat:478> $ , $ <nat:2> \cdot <var:j> $ , $ <var:B> \cdot <nat:308> $ , plus $ <nat:360> \cdot <var:m> $ are trivially even elements of $ \mathbb{N} $ . Recall the product $ <nat:36> \cdot <var:p> $ is known as even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:B> <var:j> <var:p> <var:m> <var:n> : nat , Nat . odd ( <nat:36> * <var:p> + <nat:478> * <var:n> + <nat:360> * <var:m> + <nat:2> * <var:j> + <nat:308> * <var:B> + <nat:151> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:478> * <var:n> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:2> * <var:j> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:308> * <var:B> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:360> * <var:m> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:36> * <var:p> ) = true ) . { rewrite Nat . even_mul . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 