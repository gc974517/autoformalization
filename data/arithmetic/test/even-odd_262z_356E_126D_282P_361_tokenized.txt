\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:282> * <var:P> + <var:z> * <nat:262> + <nat:126> * <var:D> + <nat:361> + <var:E> * <nat:356> $ is guaranteed to be odd taking some unknowns $ <var:D> $ , $ <var:z> $ , $ <var:E> $ , and $ <var:P> $ . \end{theorem} \begin{proof} We apply the understanding the summation $ <var:D> \times <nat:126> + <nat:282> \times <var:P> + <nat:361> + <nat:262> \times <var:z> + <var:E> \times <nat:356> $ is known as odd because the sum $ <nat:126> \cdot <var:D> + <nat:356> \cdot <var:E> + <var:z> \cdot <nat:262> + <nat:282> \cdot <var:P> $ is clearly even . See the term $ <nat:262> <var:z> $ is known to be an even natural number . This is true since taking the product of an even element of $ \mathbb{N} $ and a natural is by itself an even positive integer as well as the whole number $ <nat:262> $ is trivially by its very nature an even element of $ \mathbb{N} $ . See that the natural number $ <nat:356> $ is known to be even . Thus , the product $ <var:E> <nat:356> $ will be even as well . See $ <nat:126> <var:D> $ is known as even . This claim is true from the knowledge multiplying of an even integer and an arbitrary whole number must be in itself an even whole number and the positive integer $ <nat:126> $ is trivially even . Adding on , the coefficient $ <nat:282> $ is known to be an even number . So , the product $ <nat:282> <var:P> $ is guaranteed to be even at the same time . The summing of an even number in $ \mathbb{N} $ with an odd integer will be odd . Notice $ <nat:361> $ is obviously odd . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:D> <var:z> <var:E> <var:P> : nat , Nat . odd ( <nat:282> * <var:P> + <nat:262> * <var:z> + <nat:126> * <var:D> + <nat:356> * <var:E> + <nat:361> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:262> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:262> * <var:z> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:356> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:356> * <var:E> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:126> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:126> * <var:D> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:282> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:282> * <var:P> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:282> * <var:P> + <nat:262> * <var:z> + <nat:126> * <var:D> + <nat:356> * <var:E> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . assert ( <genH> : Nat . odd <nat:361> = true ) . { auto . } rewrite <- Nat . negb_even . rewrite <genH> . rewrite <genH> . auto . Qed . 