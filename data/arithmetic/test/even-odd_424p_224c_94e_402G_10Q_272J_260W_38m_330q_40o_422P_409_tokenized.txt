\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:424> \times <var:p> + <nat:224> \times <var:c> + <nat:94> \times <var:e> + <var:G> \times <nat:402> + <var:Q> \times <nat:10> + <var:J> \times <nat:272> + <var:W> \times <nat:260> + <var:m> \times <nat:38> + <var:q> \times <nat:330> + <nat:40> \times <var:o> + <var:P> \times <nat:422> + <nat:409> $ will be odd for positive numbers $ <var:P> $ , $ <var:Q> $ , $ <var:m> $ , $ <var:p> $ , $ <var:q> $ , $ <var:c> $ , $ <var:o> $ , $ <var:W> $ , $ <var:G> $ , $ <var:J> $ , and $ <var:e> $ . \end{theorem} \begin{proof} We know that the integer $ <nat:38> $ is known to be even See that the number $ <nat:422> $ is clearly even The natural numbers $ <nat:402> $ , $ <nat:224> $ , $ <nat:424> $ , additionally $ <nat:260> $ must be even numbers In addition to this , the whole numbers $ <nat:272> $ additionally $ <nat:94> $ are known as even natural numbers The numbers $ <nat:330> $ in addition to $ <nat:40> $ are clearly even numbers In addition to this , notice that the natural number $ <nat:10> $ is even It can be shown that this proposition must be true . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:P> <var:Q> <var:m> <var:p> <var:q> <var:c> <var:o> <var:W> <var:G> <var:J> <var:e> : nat , Nat . odd ( <nat:424> * <var:p> + <nat:224> * <var:c> + <nat:94> * <var:e> + <nat:402> * <var:G> + <nat:10> * <var:Q> + <nat:272> * <var:J> + <nat:260> * <var:W> + <nat:38> * <var:m> + <nat:330> * <var:q> + <nat:40> * <var:o> + <nat:422> * <var:P> + <nat:409> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:38> = true ) . { auto . } assert ( <genH> : Nat . even <nat:422> = true ) . { auto . } assert ( <genH> : Nat . even <nat:402> = true ) . { auto . } assert ( <genH> : Nat . even <nat:224> = true ) . { auto . } assert ( <genH> : Nat . even <nat:424> = true ) . { auto . } assert ( <genH> : Nat . even <nat:260> = true ) . { auto . } assert ( <genH> : Nat . even <nat:272> = true ) . { auto . } assert ( <genH> : Nat . even <nat:94> = true ) . { auto . } assert ( <genH> : Nat . even <nat:330> = true ) . { auto . } assert ( <genH> : Nat . even <nat:40> = true ) . { auto . } assert ( <genH> : Nat . even <nat:10> = true ) . { auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . repeat rewrite Nat . even_mul . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 