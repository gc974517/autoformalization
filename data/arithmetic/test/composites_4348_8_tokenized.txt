\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} There exist some $ <var:y> $ , $ <var:c> $ , $ <var:G> $ , $ <var:r> $ , $ <var:L> $ , $ <var:d> $ , $ <var:i> $ , and $ <var:o> $ such that $ <var:r> $ , $ <var:o> $ , $ <var:c> $ , $ <var:i> $ , $ <var:L> $ , $ <var:d> $ , $ <var:G> $ and $ <var:y> \geq <nat:2> $ plus such that $ <var:L> * <var:o> * <var:c> * <var:i> * <var:y> * <var:r> * <var:d> * <var:G> $ is the same as $ <nat:898560> $ . \end{theorem} \begin{proof} Assume $ <var:L> = <nat:13> $ , $ <var:r> = <nat:5> $ , $ <var:y> = <nat:6> $ , $ <var:i> = <nat:12> $ , $ <var:o> = <nat:2> $ , $ <var:G> = <nat:4> $ , $ <var:d> = <nat:8> $ , $ <var:c> = <nat:3> $ . We confirm the result is true because Because $ <var:c> = <nat:3> $ , $ <var:d> = <nat:8> $ , $ <var:o> = <nat:2> $ , $ <var:L> = <nat:13> $ , $ <var:y> = <nat:6> $ , $ <var:r> = <nat:5> $ , $ <var:G> = <nat:4> $ and $ <var:i> = <nat:12> \geq <nat:2> $ . \end{proof} \end{document} 
~
Require Import Lia . Theorem <genP:1> : exists <var:y> <var:c> <var:G> <var:r> <var:L> <var:d> <var:i> <var:o> : nat , ( <var:r> >= <nat:2> ) /\ ( <var:o> >= <nat:2> ) /\ ( <var:c> >= <nat:2> ) /\ ( <var:i> >= <nat:2> ) /\ ( <var:L> >= <nat:2> ) /\ ( <var:d> >= <nat:2> ) /\ ( <var:G> >= <nat:2> ) /\ ( <var:y> >= <nat:2> ) /\ ( <var:L> * <var:o> * <var:c> * <var:i> * <var:y> * <var:r> * <var:d> * <var:G> = <nat:898560> ) . Proof . exists <nat:6> . exists <nat:3> . exists <nat:4> . exists <nat:5> . exists <nat:13> . exists <nat:8> . exists <nat:12> . exists <nat:2> . assert ( <genH> : <nat:3> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:8> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:2> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:13> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:6> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:5> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:4> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:12> >= <nat:2> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 