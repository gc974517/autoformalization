\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \newtheorem{definition}{Definition} \begin{document} \begin{definition} Assume $ <var:e> $ , $ <var:y> $ , $ <var:T> $ , $ <var:q> $ , $ <var:X> $ , $ <var:a> \in \mathbb{Z}^+ $ . We denote that $ <var:x> \in \mathbb{N} $ is named a <def:six-composite> integer if $ <var:X> * <var:q> * <var:T> * <var:e> * <var:a> * <var:y> = <var:x> $ and unique terms are greater than <nat:1> . \end{definition} \begin{theorem} The number <nat:90720> is a <def:six-composite> number . \end{theorem} \begin{proof} Recollect that <nat:90720> is <def:six-composite> supposing it is the product of whole numbers $ <var:q> $ , $ <var:y> $ , $ <var:X> $ , $ <var:e> $ , $ <var:T> $ , $ <var:a> $ more than <nat:1> . Allow $ <var:a> = <nat:9> $ , $ <var:T> = <nat:5> $ , $ <var:e> = <nat:8> $ , $ <var:X> = <nat:12> $ , $ <var:q> = <nat:3> $ and $ <var:y> = <nat:7> $ . We confirm <nat:90720> is a <def:six-composite> natural number . We show <nat:90720> is a <def:six-composite> natural number in view of $ <var:X> = <nat:12> $ , $ <var:q> = <nat:3> $ , $ <var:T> = <nat:5> $ , $ <var:y> = <nat:7> $ , $ <var:a> = <nat:9> $ and $ <var:e> = <nat:8> $ are greater than <nat:1> . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:six-composite> ( <var:x> : nat ) := exists <var:e> <var:y> <var:T> <var:q> <var:X> <var:a> : nat , ( <var:X> * <var:q> * <var:T> * <var:e> * <var:a> * <var:y> = <var:x> ) /\ ( <var:e> > <nat:1> ) /\ ( <var:y> > <nat:1> ) /\ ( <var:T> > <nat:1> ) /\ ( <var:q> > <nat:1> ) /\ ( <var:X> > <nat:1> ) /\ ( <var:a> > <nat:1> ) . Theorem <genP:1> : <def:six-composite> <nat:90720> . Proof . unfold <def:six-composite> . exists <nat:8> . exists <nat:7> . exists <nat:5> . exists <nat:3> . exists <nat:12> . exists <nat:9> . assert ( <genH> : <nat:12> > <nat:1> ) . { lia . } assert ( <genH> : <nat:3> > <nat:1> ) . { lia . } assert ( <genH> : <nat:5> > <nat:1> ) . { lia . } assert ( <genH> : <nat:7> > <nat:1> ) . { lia . } assert ( <genH> : <nat:9> > <nat:1> ) . { lia . } assert ( <genH> : <nat:8> > <nat:1> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 