\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:268> * <var:p> + <var:E> * <nat:102> + <nat:258> * <var:D> + <var:b> * <nat:56> + <nat:316> * <var:Y> + <nat:94> + <var:x> * <nat:450> $ is guaranteed to be even . \end{theorem} \begin{proof} We use the understanding $ <var:E> \cdot <nat:102> + <nat:268> \cdot <var:p> + <nat:258> \cdot <var:D> + <var:Y> \cdot <nat:316> + <nat:56> \cdot <var:b> + <nat:450> \cdot <var:x> $ is clearly even , by reason that the summation of even natural numbers and an even whole number is an even number in $ \mathbb{Z}^+ $ . The integers $ <nat:316> $ , $ <nat:450> $ , $ <nat:258> $ , $ <nat:102> $ , and $ <nat:56> $ are known as even whole numbers . Hence , the pairs $ <nat:316> <var:Y> $ , $ <var:x> <nat:450> $ , $ <nat:258> <var:D> $ , $ <nat:102> <var:E> $ , as well as $ <var:b> <nat:56> $ is guaranteed to be even additionally . Further , the leading term $ <nat:268> $ is known to be an even whole number . Therefore , the pair $ <var:p> <nat:268> $ is even too . as well as by reason that multiplying of an even number in $ \mathbb{Z}^+ $ with some number will be even the summation $ <var:E> <nat:102> + <nat:316> <var:Y> + <var:p> <nat:268> + <var:b> <nat:56> + <var:D> <nat:258> + <nat:450> <var:x> $ will be even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:p> <var:E> <var:D> <var:b> <var:Y> <var:x> : nat , Nat . even ( <nat:268> * <var:p> + <nat:102> * <var:E> + <nat:258> * <var:D> + <nat:56> * <var:b> + <nat:316> * <var:Y> + <nat:450> * <var:x> + <nat:94> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:316> = true ) . { auto . } assert ( <genH> : Nat . even <nat:450> = true ) . { auto . } assert ( <genH> : Nat . even <nat:258> = true ) . { auto . } assert ( <genH> : Nat . even <nat:102> = true ) . { auto . } assert ( <genH> : Nat . even <nat:56> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:316> * <var:Y> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:450> * <var:x> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:258> * <var:D> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:102> * <var:E> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:56> * <var:b> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:268> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:268> * <var:p> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:268> * <var:p> + <nat:102> * <var:E> + <nat:258> * <var:D> + <nat:56> * <var:b> + <nat:316> * <var:Y> + <nat:450> * <var:x> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . even_add . rewrite <genH> . auto . Qed . 