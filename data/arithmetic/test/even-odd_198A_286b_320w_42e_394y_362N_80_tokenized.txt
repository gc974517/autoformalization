\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:80> + <nat:394> \cdot <var:y> + <nat:320> \cdot <var:w> + <nat:42> \cdot <var:e> + <var:A> \cdot <nat:198> + <var:b> \cdot <nat:286> + <nat:362> \cdot <var:N> $ will be even . \end{theorem} \begin{proof} The summation $ <nat:80> + <nat:394> * <var:y> + <nat:198> * <var:A> + <nat:362> * <var:N> + <var:b> * <nat:286> + <nat:42> * <var:e> + <var:w> * <nat:320> $ is even because the formula $ <nat:198> * <var:A> + <var:b> * <nat:286> + <var:w> * <nat:320> + <var:e> * <nat:42> + <nat:394> * <var:y> + <nat:362> * <var:N> $ is known as even . The positive integers $ <nat:286> $ , $ <nat:198> $ , $ <nat:362> $ , and also $ <nat:42> $ are known to be even positive integers The positive integer $ <nat:320> $ is trivially an even positive integer The leading term $ <nat:394> $ is known to be an even number in $ \mathbb{Z}^+ $ We show our lemma holds . See that $ <nat:80> $ is known to be even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:y> <var:w> <var:e> <var:A> <var:b> <var:N> : nat , Nat . even ( <nat:394> * <var:y> + <nat:320> * <var:w> + <nat:42> * <var:e> + <nat:198> * <var:A> + <nat:286> * <var:b> + <nat:362> * <var:N> + <nat:80> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:286> = true ) . { auto . } assert ( <genH> : Nat . even <nat:198> = true ) . { auto . } assert ( <genH> : Nat . even <nat:362> = true ) . { auto . } assert ( <genH> : Nat . even <nat:42> = true ) . { auto . } assert ( <genH> : Nat . even <nat:320> = true ) . { auto . } assert ( <genH> : Nat . even <nat:394> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:394> * <var:y> + <nat:320> * <var:w> + <nat:42> * <var:e> + <nat:198> * <var:A> + <nat:286> * <var:b> + <nat:362> * <var:N> ) = true ) . { repeat rewrite Nat . even_add . repeat rewrite Nat . even_mul . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:80> = true ) . { auto . } rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . auto . Qed . 