\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:Y> \times <nat:294> + <var:b> \times <nat:162> + <var:x> \times <nat:106> + <var:z> \times <nat:210> + <var:a> \times <nat:80> + <nat:148> \times <var:U> + <var:F> \times <nat:90> + <nat:233> + <var:n> \times <nat:360> $ is guaranteed to be odd assuming any $ <var:b> $ , $ <var:Y> $ , $ <var:a> $ , $ <var:n> $ , $ <var:z> $ , $ <var:U> $ , $ <var:x> $ , and $ <var:F> \in \mathbb{N} $ . \end{theorem} \begin{proof} Remember the integers $ <nat:106> $ , $ <nat:148> $ , $ <nat:294> $ , $ <nat:90> $ , additionally $ <nat:360> $ are guaranteed to be even whole numbers . Accordingly , the terms $ <var:x> \cdot <nat:106> $ , $ <var:U> \cdot <nat:148> $ , $ <nat:294> \cdot <var:Y> $ , $ <var:F> \cdot <nat:90> $ , plus $ <var:n> \cdot <nat:360> $ must be even also . See that the numbers $ <nat:162> $ and also $ <nat:210> $ are known as even natural numbers . In consequence , the products $ <nat:162> \cdot <var:b> $ as well as $ <var:z> \cdot <nat:210> $ must be even as well . Furthermore , recall the pair $ <var:a> \cdot <nat:80> $ is trivially even . This fact is true from the fact taking the product of an even number with some number in $ \mathbb{N} $ is even , which must be true as a consequence that the leading term $ <nat:80> $ is known as an even number . We know $ <nat:233> $ is odd . It can be justified that this lemma must be true . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:b> <var:Y> <var:a> <var:n> <var:z> <var:U> <var:x> <var:F> : nat , Nat . odd ( <nat:294> * <var:Y> + <nat:162> * <var:b> + <nat:106> * <var:x> + <nat:210> * <var:z> + <nat:80> * <var:a> + <nat:148> * <var:U> + <nat:90> * <var:F> + <nat:360> * <var:n> + <nat:233> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:106> = true ) . { auto . } assert ( <genH> : Nat . even <nat:148> = true ) . { auto . } assert ( <genH> : Nat . even <nat:294> = true ) . { auto . } assert ( <genH> : Nat . even <nat:90> = true ) . { auto . } assert ( <genH> : Nat . even <nat:360> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:106> * <var:x> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:148> * <var:U> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:294> * <var:Y> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:90> * <var:F> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:360> * <var:n> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:162> = true ) . { auto . } assert ( <genH> : Nat . even <nat:210> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:162> * <var:b> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:210> * <var:z> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:80> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:80> * <var:a> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . odd <nat:233> = true ) . { auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 