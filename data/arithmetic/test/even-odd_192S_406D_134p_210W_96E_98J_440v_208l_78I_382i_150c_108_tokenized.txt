\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:S> \times <nat:192> + <nat:382> \times <var:i> + <var:p> \times <nat:134> + <nat:96> \times <var:E> + <nat:210> \times <var:W> + <var:J> \times <nat:98> + <nat:440> \times <var:v> + <var:c> \times <nat:150> + <nat:208> \times <var:l> + <nat:78> \times <var:I> + <nat:108> + <var:D> \times <nat:406> $ is even taking all positive terms $ <var:I> $ , $ <var:D> $ , $ <var:J> $ , $ <var:v> $ , $ <var:i> $ , $ <var:S> $ , $ <var:W> $ , $ <var:p> $ , $ <var:E> $ , $ <var:c> $ , and $ <var:l> $ . \end{theorem} \begin{proof} $ <var:v> * <nat:440> + <nat:406> * <var:D> + <var:J> * <nat:98> + <var:i> * <nat:382> + <var:I> * <nat:78> + <var:E> * <nat:96> + <var:S> * <nat:192> + <var:l> * <nat:208> + <var:c> * <nat:150> + <nat:134> * <var:p> + <nat:108> + <nat:210> * <var:W> $ is obviously even as a consequence that the sum $ <var:J> <nat:98> + <var:I> <nat:78> + <var:S> <nat:192> + <var:D> <nat:406> + <nat:134> <var:p> + <nat:210> <var:W> + <nat:440> <var:v> + <var:i> <nat:382> + <var:c> <nat:150> + <var:E> <nat:96> + <nat:208> <var:l> $ is known to be even . We know the numbers $ <nat:208> $ , $ <nat:440> $ , additionally $ <nat:96> $ are guaranteed to be even naturals . Hence , the terms $ <var:l> * <nat:208> $ , $ <nat:440> * <var:v> $ , and $ <var:E> * <nat:96> $ is even as well . Remember the positive integers $ <nat:382> $ , $ <nat:406> $ , $ <nat:78> $ , $ <nat:98> $ , $ <nat:192> $ , $ <nat:210> $ , and moreover $ <nat:134> $ are obviously even . Then , the pairs $ <nat:382> * <var:i> $ , $ <var:D> * <nat:406> $ , $ <var:I> * <nat:78> $ , $ <nat:98> * <var:J> $ , $ <var:S> * <nat:192> $ , $ <var:W> * <nat:210> $ , and $ <var:p> * <nat:134> $ is guaranteed to be even also . $ <nat:150> * <var:c> $ is obviously even because the whole number $ <nat:150> $ is obviously fundamentally an even integer . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:I> <var:D> <var:J> <var:v> <var:i> <var:S> <var:W> <var:p> <var:E> <var:c> <var:l> : nat , Nat . even ( <nat:192> * <var:S> + <nat:382> * <var:i> + <nat:134> * <var:p> + <nat:96> * <var:E> + <nat:210> * <var:W> + <nat:98> * <var:J> + <nat:440> * <var:v> + <nat:150> * <var:c> + <nat:208> * <var:l> + <nat:78> * <var:I> + <nat:406> * <var:D> + <nat:108> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:208> = true ) . { auto . } assert ( <genH> : Nat . even <nat:440> = true ) . { auto . } assert ( <genH> : Nat . even <nat:96> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:208> * <var:l> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:440> * <var:v> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:96> * <var:E> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:382> = true ) . { auto . } assert ( <genH> : Nat . even <nat:406> = true ) . { auto . } assert ( <genH> : Nat . even <nat:78> = true ) . { auto . } assert ( <genH> : Nat . even <nat:98> = true ) . { auto . } assert ( <genH> : Nat . even <nat:192> = true ) . { auto . } assert ( <genH> : Nat . even <nat:210> = true ) . { auto . } assert ( <genH> : Nat . even <nat:134> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:382> * <var:i> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:406> * <var:D> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:78> * <var:I> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:98> * <var:J> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:192> * <var:S> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:210> * <var:W> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:134> * <var:p> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:150> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:150> * <var:c> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:192> * <var:S> + <nat:382> * <var:i> + <nat:134> * <var:p> + <nat:96> * <var:E> + <nat:210> * <var:W> + <nat:98> * <var:J> + <nat:440> * <var:v> + <nat:150> * <var:c> + <nat:208> * <var:l> + <nat:78> * <var:I> + <nat:406> * <var:D> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . even_add . rewrite <genH> . auto . Qed . 