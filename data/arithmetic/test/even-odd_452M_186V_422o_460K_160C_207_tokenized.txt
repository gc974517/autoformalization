\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:207> + <var:V> \times <nat:186> + <nat:160> \times <var:C> + <var:K> \times <nat:460> + <var:M> \times <nat:452> + <var:o> \times <nat:422> $ will be odd with all $ <var:K> $ , $ <var:C> $ , $ <var:M> $ , $ <var:o> $ , and $ <var:V> $ . \end{theorem} \begin{proof} We show the claim holds . $ <var:M> \times <nat:452> + <nat:186> \times <var:V> + <var:o> \times <nat:422> + <var:K> \times <nat:460> + <nat:160> \times <var:C> $ is guaranteed to be even , by reason that the summing of even numbers in $ \mathbb{N} $ concurrently with an even element of $ \mathbb{Z}^+ $ will be even . The natural numbers $ <nat:452> $ , $ <nat:186> $ , $ <nat:422> $ , $ <nat:460> $ , and also $ <nat:160> $ are obviously even elements of $ \mathbb{Z}^+ $ . Therefore , the pairs $ <var:M> \times <nat:452> $ , $ <var:V> \times <nat:186> $ , $ <var:o> \times <nat:422> $ , $ <nat:460> \times <var:K> $ , and likewise $ <var:C> \times <nat:160> $ must be even too . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:K> <var:C> <var:M> <var:o> <var:V> : nat , Nat . odd ( <nat:186> * <var:V> + <nat:160> * <var:C> + <nat:460> * <var:K> + <nat:452> * <var:M> + <nat:422> * <var:o> + <nat:207> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:452> = true ) . { auto . } assert ( <genH> : Nat . even <nat:186> = true ) . { auto . } assert ( <genH> : Nat . even <nat:422> = true ) . { auto . } assert ( <genH> : Nat . even <nat:460> = true ) . { auto . } assert ( <genH> : Nat . even <nat:160> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:452> * <var:M> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:186> * <var:V> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:422> * <var:o> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:460> * <var:K> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:160> * <var:C> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:186> * <var:V> + <nat:160> * <var:C> + <nat:460> * <var:K> + <nat:452> * <var:M> + <nat:422> * <var:o> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . auto . Qed . 