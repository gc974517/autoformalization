\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:460> \cdot <var:D> + <var:U> \cdot <nat:78> + <nat:212> \cdot <var:z> + <nat:1> + <var:X> \cdot <nat:204> + <var:N> \cdot <nat:324> $ must be odd given positive numbers $ <var:U> $ , $ <var:z> $ , $ <var:N> $ , $ <var:X> $ , and $ <var:D> $ . \end{theorem} \begin{proof} We work with the assumption the understanding that the formula $ <var:X> * <nat:204> + <var:z> * <nat:212> + <var:N> * <nat:324> + <nat:1> + <nat:78> * <var:U> + <nat:460> * <var:D> $ is known to be odd by reason that the sum $ <nat:324> \cdot <var:N> + <nat:460> \cdot <var:D> + <nat:212> \cdot <var:z> + <var:U> \cdot <nat:78> + <nat:204> \cdot <var:X> $ is known as even . The pairs $ <var:D> \cdot <nat:460> $ and $ <nat:204> \cdot <var:X> $ are clearly even elements of $ \mathbb{Z}^+ $ . Additionally , the pairs $ <nat:324> \cdot <var:N> $ plus $ <nat:212> \cdot <var:z> $ must be even . Further , recall that $ <var:U> \cdot <nat:78> $ is obviously even . The formula $ <var:U> <nat:78> + <nat:324> <var:N> + <nat:212> <var:z> + <nat:460> <var:D> + <nat:204> <var:X> $ is obviously even because the adding of even positive integers with even elements of $ \mathbb{N} $ is guaranteed to be itself an even number additionally from the knowledge taking the product between an even number and some natural number is an even number in $ \mathbb{N} $ . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:U> <var:z> <var:N> <var:X> <var:D> : nat , Nat . odd ( <nat:460> * <var:D> + <nat:78> * <var:U> + <nat:212> * <var:z> + <nat:204> * <var:X> + <nat:324> * <var:N> + <nat:1> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:460> * <var:D> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:204> * <var:X> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:324> * <var:N> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:212> * <var:z> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:78> * <var:U> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:460> * <var:D> + <nat:78> * <var:U> + <nat:212> * <var:z> + <nat:204> * <var:X> + <nat:324> * <var:N> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . auto . Qed . 