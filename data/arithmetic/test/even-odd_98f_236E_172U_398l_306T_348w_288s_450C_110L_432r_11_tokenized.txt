\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:98> <var:f> + <var:E> <nat:236> + <var:U> <nat:172> + <var:l> <nat:398> + <nat:11> + <nat:306> <var:T> + <var:w> <nat:348> + <var:s> <nat:288> + <nat:450> <var:C> + <nat:110> <var:L> + <var:r> <nat:432> $ must be odd . \end{theorem} \begin{proof} The terms $ <var:E> * <nat:236> $ , $ <var:T> * <nat:306> $ , additionally $ <var:L> * <nat:110> $ are known to be even from the fact taking the product between an even number in $ \mathbb{Z}^+ $ and an arbitrary element of $ \mathbb{Z}^+ $ is guaranteed to be even . Adding on , notice that the terms $ <nat:450> * <var:C> $ , $ <var:r> * <nat:432> $ , $ <nat:98> * <var:f> $ , additionally $ <var:w> * <nat:348> $ must be even . The product $ <var:l> * <nat:398> $ is trivially even . $ <nat:172> * <var:U> $ is obviously an even integer . On top of this , take note $ <nat:288> * <var:s> $ is clearly even from the fact taking the product between an even number in $ \mathbb{N} $ with any natural is even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:f> <var:E> <var:U> <var:l> <var:T> <var:w> <var:s> <var:C> <var:L> <var:r> : nat , Nat . odd ( <nat:98> * <var:f> + <nat:236> * <var:E> + <nat:172> * <var:U> + <nat:398> * <var:l> + <nat:306> * <var:T> + <nat:348> * <var:w> + <nat:288> * <var:s> + <nat:450> * <var:C> + <nat:110> * <var:L> + <nat:432> * <var:r> + <nat:11> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:236> * <var:E> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:306> * <var:T> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:110> * <var:L> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:450> * <var:C> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:432> * <var:r> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:98> * <var:f> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:348> * <var:w> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:398> * <var:l> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:172> * <var:U> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:288> * <var:s> ) = true ) . { rewrite Nat . even_mul . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 