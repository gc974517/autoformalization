\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} The positive integer <nat:95800320> is the product of integers $ <var:y> $ , $ <var:n> $ , $ <var:q> $ , $ <var:B> $ , $ <var:d> $ , $ <var:L> $ , $ <var:j> $ , $ <var:p> $ , $ <var:m> $ and $ <var:x> \in \mathbb{Z}^+ $ satisfying the condition that $ <var:L> $ , $ <var:m> $ , $ <var:j> $ , $ <var:n> $ , $ <var:d> $ , $ <var:x> $ , $ <var:q> $ , $ <var:y> $ , $ <var:B> $ and $ <var:p> \geq <nat:2> $ . \end{theorem} \begin{proof} Assume $ <var:m> = <nat:8> $ , $ <var:d> = <nat:10> $ , $ <var:q> = <nat:6> $ , $ <var:p> = <nat:2> $ , $ <var:B> = <nat:11> $ , $ <var:L> = <nat:12> $ , $ <var:n> = <nat:9> $ , $ <var:x> = <nat:4> $ , $ <var:y> = <nat:3> $ and $ <var:j> = <nat:7> $ . Note $ <var:L> = <nat:12> $ , $ <var:m> = <nat:8> $ , $ <var:j> = <nat:7> $ , $ <var:n> = <nat:9> $ , $ <var:y> = <nat:3> $ , $ <var:p> = <nat:2> $ , $ <var:B> = <nat:11> $ , $ <var:q> = <nat:6> $ , $ <var:x> = <nat:4> $ , $ <var:d> = <nat:10> $ are larger than or equivalent to <nat:2> . This produces our result holds . \end{proof} \end{document} 
~
Require Import Lia . Theorem <genP:1> : exists <var:y> <var:n> <var:q> <var:B> <var:d> <var:L> <var:j> <var:p> <var:m> <var:x> : nat , ( <nat:95800320> = <var:y> * <var:n> * <var:q> * <var:B> * <var:d> * <var:L> * <var:j> * <var:p> * <var:m> * <var:x> ) /\ ( <var:L> >= <nat:2> ) /\ ( <var:m> >= <nat:2> ) /\ ( <var:j> >= <nat:2> ) /\ ( <var:n> >= <nat:2> ) /\ ( <var:d> >= <nat:2> ) /\ ( <var:x> >= <nat:2> ) /\ ( <var:q> >= <nat:2> ) /\ ( <var:y> >= <nat:2> ) /\ ( <var:B> >= <nat:2> ) /\ ( <var:p> >= <nat:2> ) . Proof . exists <nat:3> . exists <nat:9> . exists <nat:6> . exists <nat:11> . exists <nat:10> . exists <nat:12> . exists <nat:7> . exists <nat:2> . exists <nat:8> . exists <nat:4> . assert ( <genH> : <nat:12> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:8> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:7> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:9> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:3> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:2> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:11> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:6> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:4> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:10> >= <nat:2> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 