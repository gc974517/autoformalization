\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \newtheorem{definition}{Definition} \begin{document} \begin{definition} Wherever we have $ <var:h> = <var:c> \times <var:Q> \times <var:H> \times <var:s> \times <var:P> \times <var:I> \times <var:V> $ given $ <var:h> \in \mathbb{Z}^+ $ plus so that $ <var:V> $ , $ <var:s> $ , $ <var:P> $ , $ <var:Q> $ , $ <var:I> $ , $ <var:c> $ and $ <var:H> \geq <nat:2> $ taking some whole numbers $ <var:c> $ , $ <var:P> $ , $ <var:V> $ , $ <var:s> $ , $ <var:I> $ , $ <var:Q> $ , $ <var:H> $ , then we claim that $ <var:h> $ is a <def:seven-composite> number . \end{definition} \begin{theorem} $ <nat:386100> = <var:h> $ is a <def:seven-composite> natural number . \end{theorem} \begin{proof} We demonstrate $ <nat:386100> = <var:I> * <var:s> * <var:V> * <var:P> * <var:c> * <var:Q> * <var:H> $ as well as $ <var:H> $ , $ <var:Q> $ , $ <var:c> $ , $ <var:I> $ , $ <var:s> $ , $ <var:V> $ , $ <var:P> \geq <nat:2> $ . Observe that $ <nat:10> $ , $ <nat:9> $ , $ <nat:5> $ , $ <nat:11> $ , $ <nat:3> $ , $ <nat:2> $ and $ <nat:13> \geq <nat:2> $ . Plus note that also $ <nat:386100> = <var:c> \times <var:P> \times <var:I> \times <var:Q> \times <var:s> \times <var:V> \times <var:H> $ produces $ <var:P> = <nat:11> $ , $ <var:I> = <nat:5> $ , $ <var:s> = <nat:3> $ , $ <var:Q> = <nat:13> $ , $ <var:c> = <nat:10> $ , $ <var:H> = <nat:9> $ , $ <var:V> = <nat:2> $ . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:seven-composite> ( <var:h> : nat ) := exists <var:c> <var:P> <var:V> <var:s> <var:I> <var:Q> <var:H> : nat , ( <var:h> = <var:c> * <var:Q> * <var:H> * <var:s> * <var:P> * <var:I> * <var:V> ) /\ ( <var:V> >= <nat:2> ) /\ ( <var:s> >= <nat:2> ) /\ ( <var:P> >= <nat:2> ) /\ ( <var:Q> >= <nat:2> ) /\ ( <var:I> >= <nat:2> ) /\ ( <var:c> >= <nat:2> ) /\ ( <var:H> >= <nat:2> ) . Theorem <genP:1> : <def:seven-composite> <nat:386100> . Proof . unfold <def:seven-composite> . assert ( <genH> : <nat:10> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:9> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:5> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:11> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:3> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:2> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:13> >= <nat:2> ) . { lia . } exists <nat:10> . exists <nat:11> . exists <nat:2> . exists <nat:3> . exists <nat:5> . exists <nat:13> . exists <nat:9> . repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 