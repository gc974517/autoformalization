\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:74> \cdot <var:H> + <nat:396> \cdot <var:f> + <nat:324> \cdot <var:y> + <var:g> \cdot <nat:130> + <nat:104> \cdot <var:q> + <nat:166> \cdot <var:b> + <nat:325> + <var:w> \cdot <nat:156> + <var:j> \cdot <nat:98> + <nat:218> \cdot <var:m> + <var:Q> \cdot <nat:76> + <var:P> \cdot <nat:8> $ is guaranteed to be odd . \end{theorem} \begin{proof} Adding on , the terms $ <var:H> <nat:74> $ , $ <var:f> <nat:396> $ , $ <var:y> <nat:324> $ , $ <var:g> <nat:130> $ , $ <var:q> <nat:104> $ , $ <nat:166> <var:b> $ , $ <var:w> <nat:156> $ , $ <var:j> <nat:98> $ , $ <nat:218> <var:m> $ , $ <var:Q> <nat:76> $ , and likewise $ <nat:8> <var:P> $ will be even numbers . This claim must be true since the whole numbers $ <nat:74> $ , $ <nat:396> $ , $ <nat:324> $ , $ <nat:130> $ , $ <nat:104> $ , $ <nat:166> $ , $ <nat:156> $ , $ <nat:98> $ , $ <nat:218> $ , $ <nat:76> $ , and $ <nat:8> $ must be even elements of $ \mathbb{N} $ . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:H> <var:f> <var:y> <var:g> <var:q> <var:b> <var:w> <var:j> <var:m> <var:Q> <var:P> : nat , Nat . odd ( <nat:74> * <var:H> + <nat:396> * <var:f> + <nat:324> * <var:y> + <nat:130> * <var:g> + <nat:104> * <var:q> + <nat:166> * <var:b> + <nat:156> * <var:w> + <nat:98> * <var:j> + <nat:218> * <var:m> + <nat:76> * <var:Q> + <nat:8> * <var:P> + <nat:325> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:74> = true ) . { auto . } assert ( <genH> : Nat . even <nat:396> = true ) . { auto . } assert ( <genH> : Nat . even <nat:324> = true ) . { auto . } assert ( <genH> : Nat . even <nat:130> = true ) . { auto . } assert ( <genH> : Nat . even <nat:104> = true ) . { auto . } assert ( <genH> : Nat . even <nat:166> = true ) . { auto . } assert ( <genH> : Nat . even <nat:156> = true ) . { auto . } assert ( <genH> : Nat . even <nat:98> = true ) . { auto . } assert ( <genH> : Nat . even <nat:218> = true ) . { auto . } assert ( <genH> : Nat . even <nat:76> = true ) . { auto . } assert ( <genH> : Nat . even <nat:8> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:74> * <var:H> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:396> * <var:f> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:324> * <var:y> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:130> * <var:g> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:104> * <var:q> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:166> * <var:b> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:156> * <var:w> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:98> * <var:j> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:218> * <var:m> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:76> * <var:Q> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:8> * <var:P> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 