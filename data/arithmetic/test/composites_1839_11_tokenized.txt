\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Given there exist natural numbers $ <var:F> $ , $ <var:r> $ , $ <var:H> $ , $ <var:P> $ , $ <var:q> $ , $ <var:t> $ , $ <var:z> $ , $ <var:E> $ , $ <var:Q> $ , $ <var:N> $ , $ <var:m> $ more than or equivalent to <nat:2> . Say that some natural number $ <var:g> $ will be considered a <def:eleven-composite> positive integer assuming $ <var:Q> \times <var:F> \times <var:z> \times <var:N> \times <var:m> \times <var:E> \times <var:r> \times <var:q> \times <var:H> \times <var:P> \times <var:t> = <var:g> $ . For this reason $ <nat:1556755200> = <var:g> $ is a <def:eleven-composite> natural number . \end{theorem} \begin{proof} Note that $ <nat:1556755200> = <var:Q> * <var:H> * <var:N> * <var:F> * <var:z> * <var:m> * <var:E> * <var:t> * <var:P> * <var:r> * <var:q> $ indicates $ <var:F> = <nat:9> $ , $ <var:E> = <nat:7> $ , $ <var:z> = <nat:10> $ , $ <var:Q> = <nat:12> $ , $ <var:r> = <nat:8> $ , $ <var:m> = <nat:13> $ , $ <var:H> = <nat:3> $ , $ <var:t> = <nat:5> $ , $ <var:P> = <nat:2> $ , $ <var:N> = <nat:6> $ and $ <var:q> = <nat:11> $ . What's more note $ <nat:2> $ , $ <nat:8> $ , $ <nat:6> $ , $ <nat:13> $ , $ <nat:10> $ , $ <nat:12> $ , $ <nat:5> $ , $ <nat:11> $ , $ <nat:7> $ , $ <nat:3> $ , $ <nat:9> $ are greater than or equivalent to <nat:2> . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:eleven-composite> ( <var:g> : nat ) := exists <var:F> <var:r> <var:H> <var:P> <var:q> <var:t> <var:z> <var:E> <var:Q> <var:N> <var:m> : nat , ( <var:F> >= <nat:2> ) /\ ( <var:r> >= <nat:2> ) /\ ( <var:H> >= <nat:2> ) /\ ( <var:P> >= <nat:2> ) /\ ( <var:q> >= <nat:2> ) /\ ( <var:t> >= <nat:2> ) /\ ( <var:z> >= <nat:2> ) /\ ( <var:E> >= <nat:2> ) /\ ( <var:Q> >= <nat:2> ) /\ ( <var:N> >= <nat:2> ) /\ ( <var:m> >= <nat:2> ) /\ ( <var:Q> * <var:F> * <var:z> * <var:N> * <var:m> * <var:E> * <var:r> * <var:q> * <var:H> * <var:P> * <var:t> = <var:g> ) . Theorem <genP:1> : <def:eleven-composite> <nat:1556755200> . Proof . unfold <def:eleven-composite> . exists <nat:9> . exists <nat:8> . exists <nat:3> . exists <nat:2> . exists <nat:11> . exists <nat:5> . exists <nat:10> . exists <nat:7> . exists <nat:12> . exists <nat:6> . exists <nat:13> . assert ( <genH> : <nat:2> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:8> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:6> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:13> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:10> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:12> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:5> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:11> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:7> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:3> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:9> >= <nat:2> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 