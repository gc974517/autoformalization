\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Assuming any positive terms $ <var:V> $ , $ <var:Q> $ , $ <var:d> $ , $ <var:N> $ , $ <var:W> $ , $ <var:v> $ , $ <var:E> $ , $ <var:a> $ , $ <var:p> $ , and $ <var:c> $ the formula $ <nat:170> \times <var:v> + <nat:236> + <var:E> \times <nat:404> + <var:Q> \times <nat:64> + <var:d> \times <nat:252> + <var:N> \times <nat:70> + <var:p> \times <nat:230> + <var:c> \times <nat:130> + <var:W> \times <nat:314> + <var:a> \times <nat:254> + <nat:282> \times <var:V> $ will be even . \end{theorem} \begin{proof} We use the fact the formula $ <nat:130> \cdot <var:c> + <nat:252> \cdot <var:d> + <var:a> \cdot <nat:254> + <nat:404> \cdot <var:E> + <var:N> \cdot <nat:70> + <nat:282> \cdot <var:V> + <var:v> \cdot <nat:170> + <nat:314> \cdot <var:W> + <var:p> \cdot <nat:230> + <var:Q> \cdot <nat:64> $ is guaranteed to be even . The positive integer $ <nat:282> $ is known to be even . Accordingly , the pair $ <nat:282> \cdot <var:V> $ will be even in addition . Adding on , the leading term $ <nat:314> $ is known as even . Therefore , the product $ <var:W> \cdot <nat:314> $ will be even additionally . The term $ <var:v> \cdot <nat:170> $ is an even integer since taking the product of an even element of $ \mathbb{N} $ with an arbitrary element of $ \mathbb{Z}^+ $ must be even , which is true from the fact the number $ <nat:170> $ is trivially an even positive integer . Notice the pair $ <nat:252> \cdot <var:d> $ is known to be even . This must be true as a consequence that the integer $ <nat:252> $ is known to be instrinsically an even element of $ \mathbb{Z}^+ $ . Observe that the positive integer $ <nat:64> $ is known as an even number . Thus , $ <var:Q> \cdot <nat:64> $ will be even as well . Notice $ <nat:254> \cdot <var:a> $ is known as even from the fact multiplying between an even element of $ \mathbb{N} $ and an arbitrary whole number is guaranteed to be itself an even whole number and also the whole number $ <nat:254> $ is guaranteed to be even . Observe $ <nat:130> \cdot <var:c> $ is clearly even because the integer $ <nat:130> $ is by definition an even number . The natural number $ <nat:230> $ is known as an even integer . For this reason , the product $ <nat:230> \cdot <var:p> $ is even as well . On top of this , remember the natural number $ <nat:404> $ is guaranteed to be an even element of $ \mathbb{Z}^+ $ . In consequence , the pair $ <var:E> \cdot <nat:404> $ is guaranteed to be even additionally . See the whole number $ <nat:70> $ is clearly even . In consequence , the product $ <nat:70> \cdot <var:N> $ is guaranteed to be even in addition . We know that the adding between even numbers together and an even positive integer will be even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:V> <var:Q> <var:d> <var:N> <var:W> <var:v> <var:E> <var:a> <var:p> <var:c> : nat , Nat . even ( <nat:170> * <var:v> + <nat:404> * <var:E> + <nat:64> * <var:Q> + <nat:252> * <var:d> + <nat:70> * <var:N> + <nat:230> * <var:p> + <nat:130> * <var:c> + <nat:314> * <var:W> + <nat:254> * <var:a> + <nat:282> * <var:V> + <nat:236> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:282> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:282> * <var:V> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:314> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:314> * <var:W> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:170> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:170> * <var:v> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:252> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:252> * <var:d> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:64> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:64> * <var:Q> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:254> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:254> * <var:a> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:130> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:130> * <var:c> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:230> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:230> * <var:p> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:404> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:404> * <var:E> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:70> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:70> * <var:N> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:170> * <var:v> + <nat:404> * <var:E> + <nat:64> * <var:Q> + <nat:252> * <var:d> + <nat:70> * <var:N> + <nat:230> * <var:p> + <nat:130> * <var:c> + <nat:314> * <var:W> + <nat:254> * <var:a> + <nat:282> * <var:V> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . even_add . rewrite <genH> . auto . Qed . 