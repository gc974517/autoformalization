\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} With every $ <var:T> $ , $ <var:W> $ , $ <var:d> $ , $ <var:g> $ , $ <var:G> $ , $ <var:r> $ , $ <var:j> $ , $ <var:N> $ , $ <var:Y> $ , $ <var:C> $ , and $ <var:p> $ the expression $ <var:C> * <nat:462> + <var:j> * <nat:346> + <nat:422> * <var:W> + <var:T> * <nat:250> + <var:r> * <nat:466> + <var:g> * <nat:432> + <var:d> * <nat:120> + <nat:428> * <var:G> + <nat:252> * <var:p> + <var:N> * <nat:336> + <nat:8> + <nat:214> * <var:Y> $ must be even . \end{theorem} \begin{proof} It can be proven that the summation $ <nat:8> + <nat:432> \cdot <var:g> + <var:r> \cdot <nat:466> + <var:p> \cdot <nat:252> + <var:j> \cdot <nat:346> + <nat:214> \cdot <var:Y> + <var:G> \cdot <nat:428> + <var:W> \cdot <nat:422> + <nat:462> \cdot <var:C> + <nat:120> \cdot <var:d> + <nat:250> \cdot <var:T> + <nat:336> \cdot <var:N> $ is even from the knowledge the expression $ <var:d> * <nat:120> + <nat:250> * <var:T> + <nat:336> * <var:N> + <nat:432> * <var:g> + <var:C> * <nat:462> + <var:Y> * <nat:214> + <nat:428> * <var:G> + <nat:346> * <var:j> + <var:W> * <nat:422> + <nat:466> * <var:r> + <var:p> * <nat:252> $ is guaranteed to be even . On top of this , the whole numbers $ <nat:120> $ , $ <nat:250> $ , $ <nat:336> $ , $ <nat:432> $ , $ <nat:462> $ , $ <nat:214> $ , $ <nat:428> $ , $ <nat:346> $ , $ <nat:422> $ , $ <nat:466> $ , in addition to $ <nat:252> $ are trivially even positive integers . In consequence , the terms $ <nat:120> <var:d> $ , $ <nat:250> <var:T> $ , $ <nat:336> <var:N> $ , $ <nat:432> <var:g> $ , $ <var:C> <nat:462> $ , $ <nat:214> <var:Y> $ , $ <nat:428> <var:G> $ , $ <nat:346> <var:j> $ , $ <var:W> <nat:422> $ , $ <var:r> <nat:466> $ , in addition to $ <var:p> <nat:252> $ will be even at the same time . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:T> <var:W> <var:d> <var:g> <var:G> <var:r> <var:j> <var:N> <var:Y> <var:C> <var:p> : nat , Nat . even ( <nat:462> * <var:C> + <nat:346> * <var:j> + <nat:422> * <var:W> + <nat:250> * <var:T> + <nat:466> * <var:r> + <nat:432> * <var:g> + <nat:120> * <var:d> + <nat:428> * <var:G> + <nat:252> * <var:p> + <nat:336> * <var:N> + <nat:214> * <var:Y> + <nat:8> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:120> = true ) . { auto . } assert ( <genH> : Nat . even <nat:250> = true ) . { auto . } assert ( <genH> : Nat . even <nat:336> = true ) . { auto . } assert ( <genH> : Nat . even <nat:432> = true ) . { auto . } assert ( <genH> : Nat . even <nat:462> = true ) . { auto . } assert ( <genH> : Nat . even <nat:214> = true ) . { auto . } assert ( <genH> : Nat . even <nat:428> = true ) . { auto . } assert ( <genH> : Nat . even <nat:346> = true ) . { auto . } assert ( <genH> : Nat . even <nat:422> = true ) . { auto . } assert ( <genH> : Nat . even <nat:466> = true ) . { auto . } assert ( <genH> : Nat . even <nat:252> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:120> * <var:d> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:250> * <var:T> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:336> * <var:N> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:432> * <var:g> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:462> * <var:C> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:214> * <var:Y> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:428> * <var:G> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:346> * <var:j> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:422> * <var:W> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:466> * <var:r> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:252> * <var:p> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:462> * <var:C> + <nat:346> * <var:j> + <nat:422> * <var:W> + <nat:250> * <var:T> + <nat:466> * <var:r> + <nat:432> * <var:g> + <nat:120> * <var:d> + <nat:428> * <var:G> + <nat:252> * <var:p> + <nat:336> * <var:N> + <nat:214> * <var:Y> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . even_add . rewrite <genH> . auto . Qed . 