\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} With every positive numbers $ <var:l> $ , $ <var:x> $ , $ <var:P> $ , $ <var:c> $ , $ <var:m> $ , $ <var:v> $ , and $ <var:a> $ the sum $ <nat:400> + <nat:158> <var:l> + <var:P> <nat:50> + <var:c> <nat:338> + <var:a> <nat:242> + <nat:170> <var:x> + <var:v> <nat:486> + <var:m> <nat:110> $ is guaranteed to be even . \end{theorem} \begin{proof} Recall the products $ <var:m> * <nat:110> $ , $ <nat:242> * <var:a> $ , $ <var:v> * <nat:486> $ , $ <var:P> * <nat:50> $ , $ <var:c> * <nat:338> $ , and also $ <nat:170> * <var:x> $ must be even . The pair $ <var:l> * <nat:158> $ is known as even because multiplying of an even element of $ \mathbb{N} $ and an arbitrary natural number will be even . We show the expression $ <nat:110> \cdot <var:m> + <nat:400> + <nat:338> \cdot <var:c> + <var:v> \cdot <nat:486> + <nat:50> \cdot <var:P> + <nat:242> \cdot <var:a> + <nat:158> \cdot <var:l> + <var:x> \cdot <nat:170> $ is even . See $ <nat:400> $ is trivially even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:l> <var:x> <var:P> <var:c> <var:m> <var:v> <var:a> : nat , Nat . even ( <nat:158> * <var:l> + <nat:50> * <var:P> + <nat:338> * <var:c> + <nat:242> * <var:a> + <nat:170> * <var:x> + <nat:486> * <var:v> + <nat:110> * <var:m> + <nat:400> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:110> * <var:m> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:242> * <var:a> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:486> * <var:v> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:50> * <var:P> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:338> * <var:c> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:170> * <var:x> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:158> * <var:l> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even <nat:400> = true ) . { auto . } repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 