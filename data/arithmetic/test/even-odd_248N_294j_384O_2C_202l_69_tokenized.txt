\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Given all integers $ <var:C> $ , $ <var:j> $ , $ <var:l> $ , $ <var:N> $ , and $ <var:O> $ the summation $ <var:O> <nat:384> + <nat:69> + <var:j> <nat:294> + <nat:248> <var:N> + <var:l> <nat:202> + <var:C> <nat:2> $ must be odd . \end{theorem} \begin{proof} The expression $ <nat:69> + <var:N> * <nat:248> + <nat:294> * <var:j> + <var:O> * <nat:384> + <nat:202> * <var:l> + <var:C> * <nat:2> $ is guaranteed to be odd as a consequence that the expression $ <var:N> * <nat:248> + <var:j> * <nat:294> + <nat:384> * <var:O> + <var:C> * <nat:2> + <nat:202> * <var:l> $ is known as even . In addition to this , the leading terms $ <nat:248> $ , $ <nat:294> $ , $ <nat:384> $ , $ <nat:2> $ , $ <nat:202> $ , are clearly even . Thus , the products $ <nat:248> * <var:N> $ , $ <nat:294> * <var:j> $ , $ <nat:384> * <var:O> $ , $ <var:C> * <nat:2> $ , $ <var:l> * <nat:202> $ , must be even also . This main result holds by reason that the adding between even numbers in $ \mathbb{N} $ with even elements of $ \mathbb{N} $ will be an even number in $ \mathbb{N} $ . It can be justified that this result is true . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:C> <var:j> <var:l> <var:N> <var:O> : nat , Nat . odd ( <nat:384> * <var:O> + <nat:294> * <var:j> + <nat:248> * <var:N> + <nat:202> * <var:l> + <nat:2> * <var:C> + <nat:69> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:248> = true ) . { auto . } assert ( <genH> : Nat . even <nat:294> = true ) . { auto . } assert ( <genH> : Nat . even <nat:384> = true ) . { auto . } assert ( <genH> : Nat . even <nat:2> = true ) . { auto . } assert ( <genH> : Nat . even <nat:202> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:248> * <var:N> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:294> * <var:j> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:384> * <var:O> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:2> * <var:C> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:202> * <var:l> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:384> * <var:O> + <nat:294> * <var:j> + <nat:248> * <var:N> + <nat:202> * <var:l> + <nat:2> * <var:C> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . auto . Qed . 