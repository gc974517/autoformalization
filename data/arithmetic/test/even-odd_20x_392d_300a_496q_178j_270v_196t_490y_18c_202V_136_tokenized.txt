\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Using every positive terms $ <var:v> $ , $ <var:V> $ , $ <var:a> $ , $ <var:c> $ , $ <var:y> $ , $ <var:j> $ , $ <var:t> $ , $ <var:x> $ , $ <var:d> $ , and $ <var:q> $ the formula $ <nat:20> * <var:x> + <nat:392> * <var:d> + <nat:300> * <var:a> + <var:q> * <nat:496> + <nat:136> + <nat:178> * <var:j> + <nat:270> * <var:v> + <var:t> * <nat:196> + <var:y> * <nat:490> + <var:c> * <nat:18> + <nat:202> * <var:V> $ is even . \end{theorem} \begin{proof} The leading terms $ <nat:20> $ , $ <nat:392> $ , $ <nat:300> $ , $ <nat:496> $ , $ <nat:178> $ , $ <nat:270> $ , $ <nat:196> $ , $ <nat:490> $ , $ <nat:18> $ , and also $ <nat:202> $ will be even . Consequently , the products $ <var:x> \cdot <nat:20> $ , $ <var:d> \cdot <nat:392> $ , $ <nat:300> \cdot <var:a> $ , $ <var:q> \cdot <nat:496> $ , $ <nat:178> \cdot <var:j> $ , $ <nat:270> \cdot <var:v> $ , $ <nat:196> \cdot <var:t> $ , $ <nat:490> \cdot <var:y> $ , $ <nat:18> \cdot <var:c> $ , and likewise $ <var:V> \cdot <nat:202> $ will be even at the same time . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:v> <var:V> <var:a> <var:c> <var:y> <var:j> <var:t> <var:x> <var:d> <var:q> : nat , Nat . even ( <nat:20> * <var:x> + <nat:392> * <var:d> + <nat:300> * <var:a> + <nat:496> * <var:q> + <nat:178> * <var:j> + <nat:270> * <var:v> + <nat:196> * <var:t> + <nat:490> * <var:y> + <nat:18> * <var:c> + <nat:202> * <var:V> + <nat:136> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:20> = true ) . { auto . } assert ( <genH> : Nat . even <nat:392> = true ) . { auto . } assert ( <genH> : Nat . even <nat:300> = true ) . { auto . } assert ( <genH> : Nat . even <nat:496> = true ) . { auto . } assert ( <genH> : Nat . even <nat:178> = true ) . { auto . } assert ( <genH> : Nat . even <nat:270> = true ) . { auto . } assert ( <genH> : Nat . even <nat:196> = true ) . { auto . } assert ( <genH> : Nat . even <nat:490> = true ) . { auto . } assert ( <genH> : Nat . even <nat:18> = true ) . { auto . } assert ( <genH> : Nat . even <nat:202> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:20> * <var:x> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:392> * <var:d> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:300> * <var:a> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:496> * <var:q> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:178> * <var:j> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:270> * <var:v> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:196> * <var:t> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:490> * <var:y> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:18> * <var:c> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:202> * <var:V> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 