\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:328> * <var:P> + <nat:331> + <nat:152> * <var:G> + <var:z> * <nat:160> + <nat:56> * <var:R> + <var:i> * <nat:304> + <var:I> * <nat:456> + <var:N> * <nat:358> + <var:L> * <nat:402> + <var:d> * <nat:284> + <nat:172> * <var:t> $ must be odd . \end{theorem} \begin{proof} The terms $ <var:P> \cdot <nat:328> $ , $ <nat:304> \cdot <var:i> $ , in addition to $ <nat:284> \cdot <var:d> $ are known to be even positive integers . Additionally , the product $ <nat:160> \cdot <var:z> $ is clearly even . Likewise , the products $ <nat:358> \cdot <var:N> $ plus $ <var:I> \cdot <nat:456> $ are known to be even . The products $ <var:t> \cdot <nat:172> $ , $ <var:R> \cdot <nat:56> $ , and moreover $ <var:L> \cdot <nat:402> $ are even from the fact multiplying between an even natural number and some integer will be an even element of $ \mathbb{N} $ . On top of this , the pair $ <var:G> \cdot <nat:152> $ is even . Take note that $ <nat:331> $ is clearly an odd element of $ \mathbb{Z}^+ $ . From the knowledge the totaling of an even number in $ \mathbb{Z}^+ $ with an odd number in $ \mathbb{N} $ is odd , as a consequence our lemma must be true . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:P> <var:G> <var:z> <var:R> <var:i> <var:I> <var:N> <var:L> <var:d> <var:t> : nat , Nat . odd ( <nat:328> * <var:P> + <nat:152> * <var:G> + <nat:160> * <var:z> + <nat:56> * <var:R> + <nat:304> * <var:i> + <nat:456> * <var:I> + <nat:358> * <var:N> + <nat:402> * <var:L> + <nat:284> * <var:d> + <nat:172> * <var:t> + <nat:331> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:328> * <var:P> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:304> * <var:i> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:284> * <var:d> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:160> * <var:z> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:358> * <var:N> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:456> * <var:I> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:172> * <var:t> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:56> * <var:R> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:402> * <var:L> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:152> * <var:G> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . odd <nat:331> = true ) . { auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 