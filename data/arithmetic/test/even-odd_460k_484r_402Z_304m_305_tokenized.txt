\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:k> * <nat:460> + <var:Z> * <nat:402> + <nat:484> * <var:r> + <var:m> * <nat:304> + <nat:305> $ must be odd taking $ <var:k> $ , $ <var:r> $ , $ <var:Z> $ , and $ <var:m> $ . \end{theorem} \begin{proof} Take note that the expression $ <nat:304> \cdot <var:m> + <nat:460> \cdot <var:k> + <var:r> \cdot <nat:484> + <nat:305> + <nat:402> \cdot <var:Z> $ is guaranteed to be odd by reason that the sum $ <nat:402> \cdot <var:Z> + <nat:304> \cdot <var:m> + <nat:484> \cdot <var:r> + <nat:460> \cdot <var:k> $ is trivially even . Take note the adding of an even positive integer and an even natural number must be even . The whole number $ <nat:402> $ is trivially even . Accordingly , the product $ <var:Z> \cdot <nat:402> $ is guaranteed to be even as well . Building on , the positive integer $ <nat:484> $ is clearly an even number in $ \mathbb{N} $ . For this reason , the term $ <var:r> \cdot <nat:484> $ is even too . Take note the whole number $ <nat:460> $ is obviously even . Then , the product $ <nat:460> \cdot <var:k> $ must be even also . What's more , observe the positive integer $ <nat:304> $ is obviously even . As a consequence , the term $ <var:m> \cdot <nat:304> $ will be even also . Notice that $ <nat:305> $ is clearly an odd element of $ \mathbb{N} $ . We justify the sum $ <nat:460> \cdot <var:k> + <var:r> \cdot <nat:484> + <nat:305> + <var:Z> \cdot <nat:402> + <nat:304> \cdot <var:m> $ is odd . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:k> <var:r> <var:Z> <var:m> : nat , Nat . odd ( <nat:460> * <var:k> + <nat:402> * <var:Z> + <nat:484> * <var:r> + <nat:304> * <var:m> + <nat:305> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:402> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:402> * <var:Z> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:484> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:484> * <var:r> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:460> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:460> * <var:k> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:304> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:304> * <var:m> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:460> * <var:k> + <nat:402> * <var:Z> + <nat:484> * <var:r> + <nat:304> * <var:m> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } assert ( <genH> : Nat . odd <nat:305> = true ) . { auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . rewrite <genH> . auto . Qed . 