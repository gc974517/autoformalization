\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Taking $ <var:A> $ , $ <var:c> $ , $ <var:e> $ , $ <var:M> $ , $ <var:o> $ , $ <var:h> $ , and $ <var:D> \in \mathbb{Z}^+ $ the sum $ <nat:184> <var:e> + <nat:78> <var:h> + <var:M> <nat:488> + <var:o> <nat:196> + <nat:391> + <var:c> <nat:2> + <nat:398> <var:A> + <nat:30> <var:D> $ is odd . \end{theorem} \begin{proof} We justify the expression $ <var:c> * <nat:2> + <nat:391> + <nat:398> * <var:A> + <nat:30> * <var:D> + <var:h> * <nat:78> + <var:M> * <nat:488> + <nat:184> * <var:e> + <var:o> * <nat:196> $ is odd . Take note that $ <nat:391> $ is trivially odd . See that the expression $ <nat:78> * <var:h> + <var:e> * <nat:184> + <var:o> * <nat:196> + <var:D> * <nat:30> + <var:c> * <nat:2> + <var:M> * <nat:488> + <var:A> * <nat:398> $ is known as even . See the natural numbers $ <nat:78> $ , $ <nat:184> $ , $ <nat:196> $ , $ <nat:30> $ , $ <nat:2> $ , $ <nat:488> $ , and likewise $ <nat:398> $ are trivially even elements of $ \mathbb{Z}^+ $ . So , the products $ <nat:78> \cdot <var:h> $ , $ <nat:184> \cdot <var:e> $ , $ <var:o> \cdot <nat:196> $ , $ <nat:30> \cdot <var:D> $ , $ <nat:2> \cdot <var:c> $ , $ <var:M> \cdot <nat:488> $ , additionally $ <nat:398> \cdot <var:A> $ will be even at the same time . $ <nat:488> \cdot <var:M> + <nat:2> \cdot <var:c> + <var:h> \cdot <nat:78> + <var:D> \cdot <nat:30> + <nat:184> \cdot <var:e> + <var:A> \cdot <nat:398> + <var:o> \cdot <nat:196> $ will be trivially even from the fact the product of even naturals with a number must be an even positive integer . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:A> <var:c> <var:e> <var:M> <var:o> <var:h> <var:D> : nat , Nat . odd ( <nat:184> * <var:e> + <nat:78> * <var:h> + <nat:488> * <var:M> + <nat:196> * <var:o> + <nat:2> * <var:c> + <nat:398> * <var:A> + <nat:30> * <var:D> + <nat:391> ) = true . Proof . intros . assert ( <genH> : Nat . odd <nat:391> = true ) . { auto . } assert ( <genH> : Nat . even <nat:78> = true ) . { auto . } assert ( <genH> : Nat . even <nat:184> = true ) . { auto . } assert ( <genH> : Nat . even <nat:196> = true ) . { auto . } assert ( <genH> : Nat . even <nat:30> = true ) . { auto . } assert ( <genH> : Nat . even <nat:2> = true ) . { auto . } assert ( <genH> : Nat . even <nat:488> = true ) . { auto . } assert ( <genH> : Nat . even <nat:398> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:78> * <var:h> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:184> * <var:e> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:196> * <var:o> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:30> * <var:D> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:2> * <var:c> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:488> * <var:M> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:398> * <var:A> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:184> * <var:e> + <nat:78> * <var:h> + <nat:488> * <var:M> + <nat:196> * <var:o> + <nat:2> * <var:c> + <nat:398> * <var:A> + <nat:30> * <var:D> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . rewrite <genH> . auto . Qed . 