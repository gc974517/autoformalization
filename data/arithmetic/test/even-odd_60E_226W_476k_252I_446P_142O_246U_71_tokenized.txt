\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:E> \times <nat:60> + <nat:226> \times <var:W> + <nat:476> \times <var:k> + <nat:71> + <var:I> \times <nat:252> + <var:P> \times <nat:446> + <var:O> \times <nat:142> + <var:U> \times <nat:246> $ is guaranteed to be odd . \end{theorem} \begin{proof} Recall the terms $ <var:P> \cdot <nat:446> $ , $ <nat:142> \cdot <var:O> $ , $ <nat:246> \cdot <var:U> $ , $ <var:k> \cdot <nat:476> $ , and also $ <var:I> \cdot <nat:252> $ are known to be even elements of $ \mathbb{Z}^+ $ . This fact is proven since the product between an even natural and a integer is guaranteed to be an even element of $ \mathbb{Z}^+ $ . The term $ <var:E> \cdot <nat:60> $ is even as a consequence that taking the product of an even integer and an arbitrary natural number must be even . Take note that the term $ <nat:226> \cdot <var:W> $ is trivially an even number in $ \mathbb{N} $ . This claim must be true since the multiplication between an even positive integer with a number in $ \mathbb{Z}^+ $ must be even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:E> <var:W> <var:k> <var:I> <var:P> <var:O> <var:U> : nat , Nat . odd ( <nat:60> * <var:E> + <nat:226> * <var:W> + <nat:476> * <var:k> + <nat:252> * <var:I> + <nat:446> * <var:P> + <nat:142> * <var:O> + <nat:246> * <var:U> + <nat:71> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:446> * <var:P> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:142> * <var:O> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:246> * <var:U> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:476> * <var:k> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:252> * <var:I> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:60> * <var:E> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:226> * <var:W> ) = true ) . { rewrite Nat . even_mul . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 