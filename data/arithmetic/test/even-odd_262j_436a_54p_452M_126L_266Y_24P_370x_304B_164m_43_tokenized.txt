\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:262> \times <var:j> + <var:a> \times <nat:436> + <var:p> \times <nat:54> + <nat:43> + <var:M> \times <nat:452> + <nat:126> \times <var:L> + <var:Y> \times <nat:266> + <var:P> \times <nat:24> + <nat:370> \times <var:x> + <nat:304> \times <var:B> + <nat:164> \times <var:m> $ is guaranteed to be odd taking all integers $ <var:x> $ , $ <var:B> $ , $ <var:L> $ , $ <var:p> $ , $ <var:M> $ , $ <var:a> $ , $ <var:Y> $ , $ <var:P> $ , $ <var:j> $ , and $ <var:m> $ . \end{theorem} \begin{proof} Take note the product of an even number in $ \mathbb{N} $ and any element of $ \mathbb{Z}^+ $ is guaranteed to be itself an even integer . Observe the whole numbers $ <nat:164> $ and likewise $ <nat:262> $ are clearly even The leading terms $ <nat:452> $ , $ <nat:126> $ , $ <nat:54> $ , $ <nat:370> $ , $ <nat:436> $ , as well as $ <nat:24> $ will be even elements of $ \mathbb{N} $ The positive integer $ <nat:266> $ is trivially even Notice that the natural number $ <nat:304> $ is trivially an even element of $ \mathbb{N} $ \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:x> <var:B> <var:L> <var:p> <var:M> <var:a> <var:Y> <var:P> <var:j> <var:m> : nat , Nat . odd ( <nat:262> * <var:j> + <nat:436> * <var:a> + <nat:54> * <var:p> + <nat:452> * <var:M> + <nat:126> * <var:L> + <nat:266> * <var:Y> + <nat:24> * <var:P> + <nat:370> * <var:x> + <nat:304> * <var:B> + <nat:164> * <var:m> + <nat:43> ) = true . Proof . intros . rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . repeat rewrite Nat . even_mul . assert ( <genH> : Nat . even <nat:164> = true ) . { auto . } assert ( <genH> : Nat . even <nat:262> = true ) . { auto . } assert ( <genH> : Nat . even <nat:452> = true ) . { auto . } assert ( <genH> : Nat . even <nat:126> = true ) . { auto . } assert ( <genH> : Nat . even <nat:54> = true ) . { auto . } assert ( <genH> : Nat . even <nat:370> = true ) . { auto . } assert ( <genH> : Nat . even <nat:436> = true ) . { auto . } assert ( <genH> : Nat . even <nat:24> = true ) . { auto . } assert ( <genH> : Nat . even <nat:266> = true ) . { auto . } assert ( <genH> : Nat . even <nat:304> = true ) . { auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 