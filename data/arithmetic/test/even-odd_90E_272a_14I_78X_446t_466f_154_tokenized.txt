\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:154> + <nat:466> \times <var:f> + <nat:78> \times <var:X> + <nat:446> \times <var:t> + <nat:272> \times <var:a> + <var:I> \times <nat:14> + <nat:90> \times <var:E> $ must be even . \end{theorem} \begin{proof} Observe that the sum $ <nat:90> <var:E> + <nat:272> <var:a> + <var:I> <nat:14> + <var:X> <nat:78> + <var:t> <nat:446> + <nat:466> <var:f> $ is even . See $ <nat:272> * <var:a> $ is known to be even as a consequence that the multiplication between an even number in $ \mathbb{N} $ and an arbitrary natural number will be even . The pairs $ <var:f> * <nat:466> $ and $ <nat:446> * <var:t> $ are known as even . The product $ <nat:14> * <var:I> $ is known to be an even natural from the fact the product of an even number in $ \mathbb{N} $ with some number in $ \mathbb{N} $ must be even . Notice the pair $ <nat:90> * <var:E> $ is clearly even from the knowledge multiplying of an even element of $ \mathbb{Z}^+ $ and some natural is an even positive integer . In addition to this , $ <nat:78> * <var:X> $ is guaranteed to be an even positive integer . This is proven from the knowledge taking the product between an even element of $ \mathbb{N} $ with a natural is guaranteed to be an even natural number . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:f> <var:X> <var:t> <var:a> <var:I> <var:E> : nat , Nat . even ( <nat:466> * <var:f> + <nat:78> * <var:X> + <nat:446> * <var:t> + <nat:272> * <var:a> + <nat:14> * <var:I> + <nat:90> * <var:E> + <nat:154> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:272> * <var:a> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:466> * <var:f> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:446> * <var:t> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:14> * <var:I> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:90> * <var:E> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:78> * <var:X> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:466> * <var:f> + <nat:78> * <var:X> + <nat:446> * <var:t> + <nat:272> * <var:a> + <nat:14> * <var:I> + <nat:90> * <var:E> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . even_add . rewrite <genH> . auto . Qed . 