\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:12> \cdot <var:O> + <var:A> \cdot <nat:272> + <nat:354> \cdot <var:J> + <nat:480> \cdot <var:g> + <var:q> \cdot <nat:384> + <var:F> \cdot <nat:102> + <nat:161> + <var:e> \cdot <nat:186> + <var:n> \cdot <nat:112> + <var:L> \cdot <nat:170> + <var:P> \cdot <nat:328> + <nat:64> \cdot <var:l> $ is guaranteed to be odd given some positive integers $ <var:n> $ , $ <var:O> $ , $ <var:L> $ , $ <var:g> $ , $ <var:F> $ , $ <var:P> $ , $ <var:A> $ , $ <var:q> $ , $ <var:J> $ , $ <var:l> $ , and $ <var:e> $ . \end{theorem} \begin{proof} The products $ <var:n> * <nat:112> $ , $ <var:L> * <nat:170> $ , $ <var:J> * <nat:354> $ , $ <nat:272> * <var:A> $ , $ <var:q> * <nat:384> $ , $ <nat:480> * <var:g> $ , $ <var:F> * <nat:102> $ , $ <var:l> * <nat:64> $ , in addition to $ <var:O> * <nat:12> $ are trivially even positive integers because the product of an even natural with an arbitrary element of $ \mathbb{Z}^+ $ must be even . On top of this , take note that the term $ <var:P> * <nat:328> $ is clearly an even element of $ \mathbb{Z}^+ $ because the multiplication between an even number with any element of $ \mathbb{N} $ is even . Recall that the product $ <nat:186> * <var:e> $ is known to be an even number in $ \mathbb{Z}^+ $ . This fact is true because multiplying of an even positive integer and an arbitrary integer must be even . We check this proposition is proven . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:n> <var:O> <var:L> <var:g> <var:F> <var:P> <var:A> <var:q> <var:J> <var:l> <var:e> : nat , Nat . odd ( <nat:12> * <var:O> + <nat:272> * <var:A> + <nat:354> * <var:J> + <nat:480> * <var:g> + <nat:384> * <var:q> + <nat:102> * <var:F> + <nat:186> * <var:e> + <nat:112> * <var:n> + <nat:170> * <var:L> + <nat:328> * <var:P> + <nat:64> * <var:l> + <nat:161> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:112> * <var:n> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:170> * <var:L> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:354> * <var:J> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:272> * <var:A> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:384> * <var:q> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:480> * <var:g> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:102> * <var:F> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:64> * <var:l> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:12> * <var:O> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:328> * <var:P> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:186> * <var:e> ) = true ) . { rewrite Nat . even_mul . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 