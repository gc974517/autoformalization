\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:r> * <nat:404> + <nat:436> * <var:c> + <var:V> * <nat:474> + <nat:438> * <var:k> + <var:H> * <nat:86> + <nat:180> + <nat:176> * <var:L> + <var:o> * <nat:486> + <nat:464> * <var:e> $ must be even . \end{theorem} \begin{proof} Observe that the expression $ <var:e> \times <nat:464> + <var:o> \times <nat:486> + <nat:436> \times <var:c> + <var:k> \times <nat:438> + <nat:180> + <var:r> \times <nat:404> + <var:H> \times <nat:86> + <nat:176> \times <var:L> + <nat:474> \times <var:V> $ is trivially even as a consequence that the sum $ <nat:436> <var:c> + <nat:464> <var:e> + <nat:404> <var:r> + <var:o> <nat:486> + <var:k> <nat:438> + <var:L> <nat:176> + <var:V> <nat:474> + <nat:86> <var:H> $ is guaranteed to be even . Additionally , take note that the coefficients $ <nat:436> $ , $ <nat:464> $ , $ <nat:404> $ , $ <nat:486> $ , $ <nat:438> $ , $ <nat:176> $ , $ <nat:474> $ , plus $ <nat:86> $ must be even . Therefore , the pairs $ <nat:436> \times <var:c> $ , $ <var:e> \times <nat:464> $ , $ <var:r> \times <nat:404> $ , $ <nat:486> \times <var:o> $ , $ <nat:438> \times <var:k> $ , $ <var:L> \times <nat:176> $ , $ <var:V> \times <nat:474> $ , and likewise $ <var:H> \times <nat:86> $ is guaranteed to be even at the same time . This lemma must be true as a consequence that the product of even positive integers and some number in $ \mathbb{N} $ must be instrinsically an even natural . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:r> <var:c> <var:V> <var:k> <var:H> <var:L> <var:o> <var:e> : nat , Nat . even ( <nat:404> * <var:r> + <nat:436> * <var:c> + <nat:474> * <var:V> + <nat:438> * <var:k> + <nat:86> * <var:H> + <nat:176> * <var:L> + <nat:486> * <var:o> + <nat:464> * <var:e> + <nat:180> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:436> = true ) . { auto . } assert ( <genH> : Nat . even <nat:464> = true ) . { auto . } assert ( <genH> : Nat . even <nat:404> = true ) . { auto . } assert ( <genH> : Nat . even <nat:486> = true ) . { auto . } assert ( <genH> : Nat . even <nat:438> = true ) . { auto . } assert ( <genH> : Nat . even <nat:176> = true ) . { auto . } assert ( <genH> : Nat . even <nat:474> = true ) . { auto . } assert ( <genH> : Nat . even <nat:86> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:436> * <var:c> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:464> * <var:e> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:404> * <var:r> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:486> * <var:o> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:438> * <var:k> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:176> * <var:L> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:474> * <var:V> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:86> * <var:H> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:404> * <var:r> + <nat:436> * <var:c> + <nat:474> * <var:V> + <nat:438> * <var:k> + <nat:86> * <var:H> + <nat:176> * <var:L> + <nat:486> * <var:o> + <nat:464> * <var:e> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . even_add . rewrite <genH> . auto . Qed . 