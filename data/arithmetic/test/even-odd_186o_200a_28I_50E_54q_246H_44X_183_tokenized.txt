\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Given $ <var:E> $ , $ <var:o> $ , $ <var:a> $ , $ <var:q> $ , $ <var:H> $ , $ <var:I> $ , and $ <var:X> \in \mathbb{Z}^+ $ the formula $ <var:E> \cdot <nat:50> + <var:I> \cdot <nat:28> + <nat:200> \cdot <var:a> + <nat:186> \cdot <var:o> + <var:X> \cdot <nat:44> + <var:H> \cdot <nat:246> + <nat:54> \cdot <var:q> + <nat:183> $ is odd . \end{theorem} \begin{proof} We demonstrate the sum $ <nat:44> \times <var:X> + <nat:183> + <nat:50> \times <var:E> + <var:o> \times <nat:186> + <nat:246> \times <var:H> + <var:q> \times <nat:54> + <var:a> \times <nat:200> + <nat:28> \times <var:I> $ will be odd . Notice $ <nat:186> <var:o> + <var:E> <nat:50> + <var:X> <nat:44> + <var:H> <nat:246> + <var:I> <nat:28> + <var:a> <nat:200> + <nat:54> <var:q> $ is obviously even . The pair $ <var:o> * <nat:186> $ is obviously an even natural number . This claim is true since the whole number $ <nat:186> $ is trivially even . $ <nat:200> * <var:a> $ is obviously even . This is proven by reason that the integer $ <nat:200> $ is known to be even . The pair $ <var:I> * <nat:28> $ is known to be an even whole number since the coefficient $ <nat:28> $ is by itself an even element of $ \mathbb{N} $ . In addition , $ <var:E> * <nat:50> $ is obviously an even whole number . This is true by reason that the multiplication of an even element of $ \mathbb{N} $ with some whole number is guaranteed to be by itself an even natural . This claim is true since the integer $ <nat:50> $ is guaranteed to be an even element of $ \mathbb{N} $ . In addition to this , $ <nat:54> * <var:q> $ is clearly even as a consequence that the number $ <nat:54> $ is known to be an even integer . Adding on , $ <var:H> * <nat:246> $ is known as even . This is true because the whole number $ <nat:246> $ is known as an even element of $ \mathbb{N} $ . The natural number $ <nat:44> $ is clearly an even element of $ \mathbb{Z}^+ $ . For this reason , the term $ <var:X> * <nat:44> $ will be even too . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:E> <var:o> <var:a> <var:q> <var:H> <var:I> <var:X> : nat , Nat . odd ( <nat:50> * <var:E> + <nat:28> * <var:I> + <nat:200> * <var:a> + <nat:186> * <var:o> + <nat:44> * <var:X> + <nat:246> * <var:H> + <nat:54> * <var:q> + <nat:183> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:186> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:186> * <var:o> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:200> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:200> * <var:a> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:28> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:28> * <var:I> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:50> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:50> * <var:E> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:54> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:54> * <var:q> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:246> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:246> * <var:H> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:44> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:44> * <var:X> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:50> * <var:E> + <nat:28> * <var:I> + <nat:200> * <var:a> + <nat:186> * <var:o> + <nat:44> * <var:X> + <nat:246> * <var:H> + <nat:54> * <var:q> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . auto . Qed . 