\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} The positive integer <nat:8236800> is the product between $ <var:H> $ , $ <var:t> $ , $ <var:s> $ , $ <var:A> $ , $ <var:z> $ , $ <var:L> $ , $ <var:k> $ , $ <var:p> $ so that $ <var:t> $ , $ <var:A> $ , $ <var:p> $ , $ <var:L> $ , $ <var:k> $ , $ <var:z> $ , $ <var:s> $ , $ <var:H> $ greater than <nat:1> . \end{theorem} \begin{proof} Assume $ <var:L> = <nat:2> $ , $ <var:z> = <nat:11> $ , $ <var:p> = <nat:5> $ , $ <var:A> = <nat:8> $ , $ <var:s> = <nat:10> $ , $ <var:t> = <nat:12> $ , $ <var:k> = <nat:13> $ , and $ <var:H> = <nat:6> $ . Note $ <nat:11> $ , $ <nat:12> $ , $ <nat:5> $ , $ <nat:8> $ , $ <nat:13> $ , $ <nat:6> $ , $ <nat:10> $ , $ <nat:2> $ are larger than <nat:1> . Plus notice that also $ <nat:8236800> = <var:z> \times <var:k> \times <var:s> \times <var:L> \times <var:t> \times <var:p> \times <var:H> \times <var:A> $ . Thus , <nat:8236800> is the product of some whole numbers $ <var:L> $ , $ <var:t> $ , $ <var:s> $ , $ <var:k> $ , $ <var:A> $ , $ <var:H> $ , $ <var:z> $ and $ <var:p> $ has been verified . \end{proof} \end{document} 
~
Require Import Lia . Theorem <genP:1> : exists <var:H> <var:t> <var:s> <var:A> <var:z> <var:L> <var:k> <var:p> : nat , ( <nat:8236800> = <var:H> * <var:t> * <var:s> * <var:A> * <var:z> * <var:L> * <var:k> * <var:p> ) /\ ( <var:t> > <nat:1> ) /\ ( <var:A> > <nat:1> ) /\ ( <var:p> > <nat:1> ) /\ ( <var:L> > <nat:1> ) /\ ( <var:k> > <nat:1> ) /\ ( <var:z> > <nat:1> ) /\ ( <var:s> > <nat:1> ) /\ ( <var:H> > <nat:1> ) . Proof . exists <nat:6> . exists <nat:12> . exists <nat:10> . exists <nat:8> . exists <nat:11> . exists <nat:2> . exists <nat:13> . exists <nat:5> . assert ( <genH> : <nat:11> > <nat:1> ) . { lia . } assert ( <genH> : <nat:12> > <nat:1> ) . { lia . } assert ( <genH> : <nat:5> > <nat:1> ) . { lia . } assert ( <genH> : <nat:8> > <nat:1> ) . { lia . } assert ( <genH> : <nat:13> > <nat:1> ) . { lia . } assert ( <genH> : <nat:6> > <nat:1> ) . { lia . } assert ( <genH> : <nat:10> > <nat:1> ) . { lia . } assert ( <genH> : <nat:2> > <nat:1> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 