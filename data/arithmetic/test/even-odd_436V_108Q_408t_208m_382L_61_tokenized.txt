\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} With every unknowns $ <var:Q> $ , $ <var:t> $ , $ <var:m> $ , $ <var:V> $ , and $ <var:L> $ $ <nat:436> * <var:V> + <var:Q> * <nat:108> + <nat:408> * <var:t> + <nat:208> * <var:m> + <nat:61> + <nat:382> * <var:L> $ is odd . \end{theorem} \begin{proof} We prove the lemma is proven . See that $ <nat:61> $ is clearly odd . The terms $ <nat:108> \cdot <var:Q> $ and moreover $ <nat:382> \cdot <var:L> $ are obviously even . This claim must be true from the fact the product of an even element of $ \mathbb{Z}^+ $ with some element of $ \mathbb{Z}^+ $ is guaranteed to be even . The products $ <var:V> \cdot <nat:436> $ plus $ <var:t> \cdot <nat:408> $ are guaranteed to be even positive integers from the fact multiplying between an even number in $ \mathbb{Z}^+ $ with any natural number must be even . Adding on , observe the pair $ <var:m> \cdot <nat:208> $ is trivially even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:Q> <var:t> <var:m> <var:V> <var:L> : nat , Nat . odd ( <nat:436> * <var:V> + <nat:108> * <var:Q> + <nat:408> * <var:t> + <nat:208> * <var:m> + <nat:382> * <var:L> + <nat:61> ) = true . Proof . intros . assert ( <genH> : Nat . odd <nat:61> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:108> * <var:Q> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:382> * <var:L> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:436> * <var:V> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:408> * <var:t> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:208> * <var:m> ) = true ) . { rewrite Nat . even_mul . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 