\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:238> <var:l> + <nat:264> <var:H> + <nat:48> <var:z> + <var:m> <nat:90> + <var:Y> <nat:166> + <var:N> <nat:380> + <nat:353> + <var:e> <nat:342> + <var:r> <nat:352> $ must be odd . \end{theorem} \begin{proof} This main result holds from the fact $ <var:e> <nat:342> + <var:m> <nat:90> + <var:r> <nat:352> + <nat:166> <var:Y> + <var:z> <nat:48> + <var:H> <nat:264> + <nat:380> <var:N> + <var:l> <nat:238> $ is guaranteed to be even , as a consequence that the totaling of even whole numbers collectively and an even whole number is an even number in $ \mathbb{Z}^+ $ . We know the whole numbers $ <nat:90> $ , $ <nat:264> $ , $ <nat:380> $ , $ <nat:342> $ , and $ <nat:352> $ are obviously even The leading terms $ <nat:238> $ plus $ <nat:48> $ are obviously even naturals Take note that the integer $ <nat:166> $ is known to be even \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:l> <var:H> <var:z> <var:m> <var:Y> <var:N> <var:e> <var:r> : nat , Nat . odd ( <nat:238> * <var:l> + <nat:264> * <var:H> + <nat:48> * <var:z> + <nat:90> * <var:m> + <nat:166> * <var:Y> + <nat:380> * <var:N> + <nat:342> * <var:e> + <nat:352> * <var:r> + <nat:353> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:90> = true ) . { auto . } assert ( <genH> : Nat . even <nat:264> = true ) . { auto . } assert ( <genH> : Nat . even <nat:380> = true ) . { auto . } assert ( <genH> : Nat . even <nat:342> = true ) . { auto . } assert ( <genH> : Nat . even <nat:352> = true ) . { auto . } assert ( <genH> : Nat . even <nat:238> = true ) . { auto . } assert ( <genH> : Nat . even <nat:48> = true ) . { auto . } assert ( <genH> : Nat . even <nat:166> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:238> * <var:l> + <nat:264> * <var:H> + <nat:48> * <var:z> + <nat:90> * <var:m> + <nat:166> * <var:Y> + <nat:380> * <var:N> + <nat:342> * <var:e> + <nat:352> * <var:r> ) = true ) . { repeat rewrite Nat . even_add . repeat rewrite Nat . even_mul . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . auto . Qed . 