\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Assume that $ <var:r> $ is a <def:five-composite> positive integer granted that taking some whole numbers $ <var:E> $ , $ <var:f> $ , $ <var:j> $ , $ <var:y> $ , $ <var:R> $ we get such that $ <var:y> $ , $ <var:E> $ , $ <var:j> $ , $ <var:f> $ , $ <var:R> > <nat:1> $ plus with $ <var:r> \in \mathbb{Z}^+ $ , $ <var:r> = <var:R> \cdot <var:f> \cdot <var:j> \cdot <var:y> \cdot <var:E> $ . Then $ <var:r> = <nat:95040> $ is a <def:five-composite> integer . \end{theorem} \begin{proof} Remember that <nat:95040> is <def:five-composite> granted <nat:95040> is the multiplication of positive integers $ <var:j> $ , $ <var:y> $ , $ <var:R> $ , $ <var:E> $ , $ <var:f> $ larger than <nat:1> . Observe $ <nat:95040> = <var:R> * <var:j> * <var:E> * <var:f> * <var:y> = <nat:10> * <nat:11> * <nat:12> * <nat:8> * <nat:9> $ . Moreover notice that $ <nat:9> $ , $ <nat:11> $ , $ <nat:12> $ , $ <nat:10> $ , and $ <nat:8> > <nat:1> $ . Consequently , <nat:95040> is <def:five-composite> is proven . Hence , <nat:95040> is the multiplication of some positive integers $ <var:E> $ , $ <var:f> $ , $ <var:j> $ , $ <var:y> $ , $ <var:R> $ has been verified . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:five-composite> ( <var:r> : nat ) := exists <var:E> <var:f> <var:j> <var:y> <var:R> : nat , ( <var:y> > <nat:1> ) /\ ( <var:E> > <nat:1> ) /\ ( <var:j> > <nat:1> ) /\ ( <var:f> > <nat:1> ) /\ ( <var:R> > <nat:1> ) /\ ( <var:r> = <var:R> * <var:f> * <var:j> * <var:y> * <var:E> ) . Theorem <genP:1> : <def:five-composite> <nat:95040> . Proof . unfold <def:five-composite> . exists <nat:12> . exists <nat:8> . exists <nat:11> . exists <nat:9> . exists <nat:10> . assert ( <genH> : <nat:9> > <nat:1> ) . { lia . } assert ( <genH> : <nat:11> > <nat:1> ) . { lia . } assert ( <genH> : <nat:12> > <nat:1> ) . { lia . } assert ( <genH> : <nat:10> > <nat:1> ) . { lia . } assert ( <genH> : <nat:8> > <nat:1> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 