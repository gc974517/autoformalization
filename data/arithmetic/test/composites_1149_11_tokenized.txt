\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Take $ <var:r> $ , $ <var:k> $ , $ <var:x> $ , $ <var:A> $ , $ <var:J> $ , $ <var:L> $ , $ <var:Q> $ , $ <var:q> $ , $ <var:m> $ , $ <var:B> $ , $ <var:G> \in \mathbb{Z}^+ $ . We assume that some natural number $ <var:V> $ is defined to be a <def:eleven-composite> number given $ <var:r> * <var:G> * <var:Q> * <var:J> * <var:L> * <var:q> * <var:x> * <var:B> * <var:k> * <var:A> * <var:m> = <var:V> $ as well as terms are greater than or equal to <nat:2> . Thus the number <nat:622702080> is a <def:eleven-composite> natural number . \end{theorem} \begin{proof} Let $ <var:k> = <nat:13> $ , $ <var:q> = <nat:2> $ , $ <var:Q> = <nat:8> $ , $ <var:J> = <nat:6> $ , $ <var:G> = <nat:4> $ , $ <var:r> = <nat:11> $ , $ <var:x> = <nat:3> $ , $ <var:A> = <nat:7> $ , $ <var:B> = <nat:9> $ , $ <var:m> = <nat:12> $ and $ <var:L> = <nat:5> $ . Observe that $ <nat:9> $ , $ <nat:11> $ , $ <nat:4> $ , $ <nat:5> $ , $ <nat:12> $ , $ <nat:13> $ , $ <nat:6> $ , $ <nat:3> $ , $ <nat:7> $ , $ <nat:2> $ , $ <nat:8> \geq <nat:2> $ . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:eleven-composite> ( <var:V> : nat ) := exists <var:r> <var:k> <var:x> <var:A> <var:J> <var:L> <var:Q> <var:q> <var:m> <var:B> <var:G> : nat , ( <var:r> * <var:G> * <var:Q> * <var:J> * <var:L> * <var:q> * <var:x> * <var:B> * <var:k> * <var:A> * <var:m> = <var:V> ) /\ ( <var:r> >= <nat:2> ) /\ ( <var:k> >= <nat:2> ) /\ ( <var:x> >= <nat:2> ) /\ ( <var:A> >= <nat:2> ) /\ ( <var:J> >= <nat:2> ) /\ ( <var:L> >= <nat:2> ) /\ ( <var:Q> >= <nat:2> ) /\ ( <var:q> >= <nat:2> ) /\ ( <var:m> >= <nat:2> ) /\ ( <var:B> >= <nat:2> ) /\ ( <var:G> >= <nat:2> ) . Theorem <genP:1> : <def:eleven-composite> <nat:622702080> . Proof . unfold <def:eleven-composite> . exists <nat:11> . exists <nat:13> . exists <nat:3> . exists <nat:7> . exists <nat:6> . exists <nat:5> . exists <nat:8> . exists <nat:2> . exists <nat:12> . exists <nat:9> . exists <nat:4> . assert ( <genH> : <nat:9> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:11> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:4> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:5> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:12> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:13> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:6> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:3> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:7> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:2> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:8> >= <nat:2> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 