\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:82> <var:I> + <nat:350> <var:t> + <var:e> <nat:330> + <var:f> <nat:300> + <nat:291> + <nat:308> <var:N> $ must be odd . \end{theorem} \begin{proof} Observe $ <nat:291> $ is known as odd . By reason that the totaling of an even number with an odd natural is guaranteed to be odd , the formula $ <var:I> <nat:82> + <nat:291> + <var:e> <nat:330> + <var:N> <nat:308> + <var:t> <nat:350> + <var:f> <nat:300> $ will be odd . $ <nat:300> <var:f> + <nat:330> <var:e> + <var:t> <nat:350> + <var:N> <nat:308> + <nat:82> <var:I> $ is even , by reason that the totaling between even integers together with an even whole number will be even . See that the whole number $ <nat:82> $ is guaranteed to be an even natural number Adding on , see that the leading term $ <nat:308> $ is guaranteed to be even Likewise , we know the leading terms $ <nat:330> $ plus $ <nat:350> $ must be even integers Further , notice that the whole number $ <nat:300> $ is clearly even \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:I> <var:t> <var:e> <var:f> <var:N> : nat , Nat . odd ( <nat:82> * <var:I> + <nat:350> * <var:t> + <nat:330> * <var:e> + <nat:300> * <var:f> + <nat:308> * <var:N> + <nat:291> ) = true . Proof . intros . assert ( <genH> : Nat . odd <nat:291> = true ) . { auto . } rewrite Nat . odd_add . assert ( <genH> : Nat . even <nat:82> = true ) . { auto . } assert ( <genH> : Nat . even <nat:308> = true ) . { auto . } assert ( <genH> : Nat . even <nat:330> = true ) . { auto . } assert ( <genH> : Nat . even <nat:350> = true ) . { auto . } assert ( <genH> : Nat . even <nat:300> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:82> * <var:I> + <nat:350> * <var:t> + <nat:330> * <var:e> + <nat:300> * <var:f> + <nat:308> * <var:N> ) = true ) . { repeat rewrite Nat . even_add . repeat rewrite Nat . even_mul . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite <- Nat . negb_even . rewrite <genH> . rewrite <genH> . auto . Qed . 