\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \newtheorem{definition}{Definition} \begin{document} \begin{definition} If and only if we have $ <var:O> \times <var:m> \times <var:e> \times <var:H> \times <var:x> \times <var:X> \times <var:U> \times <var:T> \times <var:M> \times <var:d> \times <var:Z> \times <var:y> = <var:L> $ assuming some natural number $ <var:L> $ and so that $ <var:y> $ , $ <var:x> $ , $ <var:m> $ , $ <var:U> $ , $ <var:Z> $ , $ <var:H> $ , $ <var:e> $ , $ <var:X> $ , $ <var:M> $ , $ <var:d> $ , $ <var:O> $ , $ <var:T> \geq <nat:2> $ , define that $ <var:L> $ is <def:twelve-composite> given some $ <var:e> $ , $ <var:U> $ , $ <var:m> $ , $ <var:M> $ , $ <var:x> $ , $ <var:X> $ , $ <var:O> $ , $ <var:Z> $ , $ <var:y> $ , $ <var:H> $ , $ <var:d> $ , $ <var:T> \in \mathbb{N} $ . \end{definition} \begin{theorem} $ <nat:6227020800> = <var:L> $ is a <def:twelve-composite> natural number . \end{theorem} \begin{proof} Allow $ <var:m> = <nat:11> $ , $ <var:T> = <nat:13> $ , $ <var:Z> = <nat:7> $ , $ <var:H> = <nat:12> $ , $ <var:e> = <nat:8> $ , $ <var:O> = <nat:10> $ , $ <var:M> = <nat:4> $ , $ <var:d> = <nat:9> $ , $ <var:U> = <nat:2> $ , $ <var:X> = <nat:3> $ , $ <var:y> = <nat:6> $ , and $ <var:x> = <nat:5> $ . We justify <nat:6227020800> is a <def:twelve-composite> positive integer seeing that $ <nat:3> $ , $ <nat:9> $ , $ <nat:2> $ , $ <nat:4> $ , $ <nat:12> $ , $ <nat:11> $ , $ <nat:5> $ , $ <nat:10> $ , $ <nat:13> $ , $ <nat:8> $ , $ <nat:7> $ and $ <nat:6> > <nat:1> $ and seeing that $ <nat:6227020800> = <var:O> * <var:y> * <var:x> * <var:X> * <var:H> * <var:d> * <var:T> * <var:Z> * <var:M> * <var:e> * <var:m> * <var:U> $ . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:twelve-composite> ( <var:L> : nat ) := exists <var:e> <var:U> <var:m> <var:M> <var:x> <var:X> <var:O> <var:Z> <var:y> <var:H> <var:d> <var:T> : nat , ( <var:O> * <var:m> * <var:e> * <var:H> * <var:x> * <var:X> * <var:U> * <var:T> * <var:M> * <var:d> * <var:Z> * <var:y> = <var:L> ) /\ ( <var:y> >= <nat:2> ) /\ ( <var:x> >= <nat:2> ) /\ ( <var:m> >= <nat:2> ) /\ ( <var:U> >= <nat:2> ) /\ ( <var:Z> >= <nat:2> ) /\ ( <var:H> >= <nat:2> ) /\ ( <var:e> >= <nat:2> ) /\ ( <var:X> >= <nat:2> ) /\ ( <var:M> >= <nat:2> ) /\ ( <var:d> >= <nat:2> ) /\ ( <var:O> >= <nat:2> ) /\ ( <var:T> >= <nat:2> ) . Theorem <genP:1> : <def:twelve-composite> <nat:6227020800> . Proof . unfold <def:twelve-composite> . exists <nat:8> . exists <nat:2> . exists <nat:11> . exists <nat:4> . exists <nat:5> . exists <nat:3> . exists <nat:10> . exists <nat:7> . exists <nat:6> . exists <nat:12> . exists <nat:9> . exists <nat:13> . assert ( <genH> : <nat:3> > <nat:1> ) . { lia . } assert ( <genH> : <nat:9> > <nat:1> ) . { lia . } assert ( <genH> : <nat:2> > <nat:1> ) . { lia . } assert ( <genH> : <nat:4> > <nat:1> ) . { lia . } assert ( <genH> : <nat:12> > <nat:1> ) . { lia . } assert ( <genH> : <nat:11> > <nat:1> ) . { lia . } assert ( <genH> : <nat:5> > <nat:1> ) . { lia . } assert ( <genH> : <nat:10> > <nat:1> ) . { lia . } assert ( <genH> : <nat:13> > <nat:1> ) . { lia . } assert ( <genH> : <nat:8> > <nat:1> ) . { lia . } assert ( <genH> : <nat:7> > <nat:1> ) . { lia . } assert ( <genH> : <nat:6> > <nat:1> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 