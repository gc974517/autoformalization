\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:x> \times <nat:228> + <var:m> \times <nat:320> + <var:u> \times <nat:164> + <nat:444> + <nat:34> \times <var:W> + <nat:274> \times <var:U> + <var:Z> \times <nat:188> $ will be even . \end{theorem} \begin{proof} The theorem is proven from the fact $ <nat:320> \times <var:m> + <var:W> \times <nat:34> + <nat:274> \times <var:U> + <var:Z> \times <nat:188> + <nat:164> \times <var:u> + <nat:228> \times <var:x> $ is trivially even , from the fact the totaling between an even integer and an even number must be an even number . See the number $ <nat:274> $ is trivially an even natural . So , the pair $ <var:U> * <nat:274> $ will be even also . Notice that the products $ <nat:320> * <var:m> $ , $ <var:Z> * <nat:188> $ , and $ <var:u> * <nat:164> $ are even natural numbers because the multiplication between an even number and any natural number is guaranteed to be an even natural number and also the integers $ <nat:320> $ , $ <nat:188> $ , as well as $ <nat:164> $ are even natural numbers . The pair $ <nat:228> * <var:x> $ is known as even since the integer $ <nat:228> $ is in itself an even number in $ \mathbb{N} $ . The product $ <var:W> * <nat:34> $ is known to be even . This fact is true as a consequence that the positive integer $ <nat:34> $ is clearly obviously an even number in $ \mathbb{Z}^+ $ . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:x> <var:m> <var:u> <var:W> <var:U> <var:Z> : nat , Nat . even ( <nat:228> * <var:x> + <nat:320> * <var:m> + <nat:164> * <var:u> + <nat:34> * <var:W> + <nat:274> * <var:U> + <nat:188> * <var:Z> + <nat:444> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:274> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:274> * <var:U> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:320> = true ) . { auto . } assert ( <genH> : Nat . even <nat:188> = true ) . { auto . } assert ( <genH> : Nat . even <nat:164> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:320> * <var:m> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:188> * <var:Z> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:164> * <var:u> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:228> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:228> * <var:x> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:34> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:34> * <var:W> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:228> * <var:x> + <nat:320> * <var:m> + <nat:164> * <var:u> + <nat:34> * <var:W> + <nat:274> * <var:U> + <nat:188> * <var:Z> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . even_add . rewrite <genH> . auto . Qed . 