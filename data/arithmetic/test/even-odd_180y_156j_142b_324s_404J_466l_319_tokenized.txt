\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:404> \times <var:J> + <nat:324> \times <var:s> + <var:b> \times <nat:142> + <var:y> \times <nat:180> + <nat:466> \times <var:l> + <nat:156> \times <var:j> + <nat:319> $ must be odd for some positive terms $ <var:b> $ , $ <var:y> $ , $ <var:s> $ , $ <var:J> $ , $ <var:l> $ , and $ <var:j> $ . \end{theorem} \begin{proof} Our theorem is true by reason that $ <var:y> * <nat:180> + <var:J> * <nat:404> + <nat:156> * <var:j> + <var:s> * <nat:324> + <var:b> * <nat:142> + <nat:466> * <var:l> $ is trivially even . The products $ <nat:180> * <var:y> $ plus $ <nat:466> * <var:l> $ are clearly even numbers in $ \mathbb{Z}^+ $ . Building on , the pairs $ <nat:404> * <var:J> $ , $ <var:s> * <nat:324> $ , as well as $ <nat:156> * <var:j> $ are guaranteed to be even integers . The pair $ <var:b> * <nat:142> $ is known to be even as a consequence that the multiplication of an even integer and some element of $ \mathbb{N} $ will be an even number . The expression $ <var:y> \times <nat:180> + <nat:156> \times <var:j> + <var:b> \times <nat:142> + <nat:324> \times <var:s> + <var:J> \times <nat:404> + <nat:466> \times <var:l> $ is guaranteed to be even since the totaling between even whole numbers and an even number in $ \mathbb{N} $ will be obviously an even positive integer and also as a consequence that the multiplication of an even natural with a element of $ \mathbb{N} $ must be an even element of $ \mathbb{Z}^+ $ . See that $ <nat:319> $ is obviously an odd element of $ \mathbb{N} $ . It can be checked that our result must be true . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:b> <var:y> <var:s> <var:J> <var:l> <var:j> : nat , Nat . odd ( <nat:404> * <var:J> + <nat:324> * <var:s> + <nat:142> * <var:b> + <nat:180> * <var:y> + <nat:466> * <var:l> + <nat:156> * <var:j> + <nat:319> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:180> * <var:y> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:466> * <var:l> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:404> * <var:J> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:324> * <var:s> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:156> * <var:j> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:142> * <var:b> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:404> * <var:J> + <nat:324> * <var:s> + <nat:142> * <var:b> + <nat:180> * <var:y> + <nat:466> * <var:l> + <nat:156> * <var:j> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } assert ( <genH> : Nat . odd <nat:319> = true ) . { auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . rewrite <genH> . auto . Qed . 