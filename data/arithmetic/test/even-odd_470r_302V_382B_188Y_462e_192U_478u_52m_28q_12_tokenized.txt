\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:470> \cdot <var:r> + <nat:302> \cdot <var:V> + <var:B> \cdot <nat:382> + <nat:188> \cdot <var:Y> + <nat:462> \cdot <var:e> + <var:U> \cdot <nat:192> + <nat:12> + <var:u> \cdot <nat:478> + <var:m> \cdot <nat:52> + <nat:28> \cdot <var:q> $ must be even . \end{theorem} \begin{proof} We know that $ <nat:12> $ is guaranteed to be an even natural number . The addition between an even number in $ \mathbb{Z}^+ $ and an even integer will be an even natural . The leading terms $ <nat:470> $ , $ <nat:302> $ , $ <nat:382> $ , $ <nat:188> $ , $ <nat:462> $ , $ <nat:192> $ , $ <nat:478> $ , $ <nat:52> $ , plus $ <nat:28> $ are clearly even elements of $ \mathbb{Z}^+ $ . In consequence , the terms $ <nat:470> * <var:r> $ , $ <var:V> * <nat:302> $ , $ <var:B> * <nat:382> $ , $ <nat:188> * <var:Y> $ , $ <nat:462> * <var:e> $ , $ <var:U> * <nat:192> $ , $ <var:u> * <nat:478> $ , $ <nat:52> * <var:m> $ , as well as $ <nat:28> * <var:q> $ will be even in addition . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:r> <var:V> <var:B> <var:Y> <var:e> <var:U> <var:u> <var:m> <var:q> : nat , Nat . even ( <nat:470> * <var:r> + <nat:302> * <var:V> + <nat:382> * <var:B> + <nat:188> * <var:Y> + <nat:462> * <var:e> + <nat:192> * <var:U> + <nat:478> * <var:u> + <nat:52> * <var:m> + <nat:28> * <var:q> + <nat:12> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:12> = true ) . { auto . } repeat rewrite Nat . even_add . assert ( <genH> : Nat . even <nat:470> = true ) . { auto . } assert ( <genH> : Nat . even <nat:302> = true ) . { auto . } assert ( <genH> : Nat . even <nat:382> = true ) . { auto . } assert ( <genH> : Nat . even <nat:188> = true ) . { auto . } assert ( <genH> : Nat . even <nat:462> = true ) . { auto . } assert ( <genH> : Nat . even <nat:192> = true ) . { auto . } assert ( <genH> : Nat . even <nat:478> = true ) . { auto . } assert ( <genH> : Nat . even <nat:52> = true ) . { auto . } assert ( <genH> : Nat . even <nat:28> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:470> * <var:r> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:302> * <var:V> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:382> * <var:B> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:188> * <var:Y> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:462> * <var:e> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:192> * <var:U> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:478> * <var:u> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:52> * <var:m> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:28> * <var:q> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 