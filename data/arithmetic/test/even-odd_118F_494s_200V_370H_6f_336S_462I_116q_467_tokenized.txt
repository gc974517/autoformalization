\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:S> \times <nat:336> + <nat:467> + <nat:6> \times <var:f> + <var:q> \times <nat:116> + <var:I> \times <nat:462> + <var:s> \times <nat:494> + <var:F> \times <nat:118> + <nat:370> \times <var:H> + <nat:200> \times <var:V> $ is odd assuming some $ <var:I> $ , $ <var:f> $ , $ <var:H> $ , $ <var:S> $ , $ <var:V> $ , $ <var:F> $ , $ <var:s> $ , and $ <var:q> $ . \end{theorem} \begin{proof} Take note that the coefficient $ <nat:494> $ is known as even Notice the coefficient $ <nat:336> $ is even Recall the coefficients $ <nat:200> $ plus $ <nat:462> $ are trivially even elements of $ \mathbb{N} $ Additionally , the leading terms $ <nat:6> $ and moreover $ <nat:116> $ are obviously even In addition to this , remember the leading term $ <nat:118> $ is even Additionally , the whole number $ <nat:370> $ is trivially even As a consequence that the multiplication between an even whole number with a natural is guaranteed to be even , the sum $ <var:F> \cdot <nat:118> + <var:s> \cdot <nat:494> + <var:V> \cdot <nat:200> + <var:H> \cdot <nat:370> + <nat:6> \cdot <var:f> + <nat:467> + <nat:336> \cdot <var:S> + <nat:462> \cdot <var:I> + <nat:116> \cdot <var:q> $ is odd . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:I> <var:f> <var:H> <var:S> <var:V> <var:F> <var:s> <var:q> : nat , Nat . odd ( <nat:336> * <var:S> + <nat:6> * <var:f> + <nat:116> * <var:q> + <nat:462> * <var:I> + <nat:494> * <var:s> + <nat:118> * <var:F> + <nat:370> * <var:H> + <nat:200> * <var:V> + <nat:467> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:494> = true ) . { auto . } assert ( <genH> : Nat . even <nat:336> = true ) . { auto . } assert ( <genH> : Nat . even <nat:200> = true ) . { auto . } assert ( <genH> : Nat . even <nat:462> = true ) . { auto . } assert ( <genH> : Nat . even <nat:6> = true ) . { auto . } assert ( <genH> : Nat . even <nat:116> = true ) . { auto . } assert ( <genH> : Nat . even <nat:118> = true ) . { auto . } assert ( <genH> : Nat . even <nat:370> = true ) . { auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . repeat rewrite Nat . even_mul . rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 