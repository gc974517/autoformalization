\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Given all natural terms $ <var:j> $ , $ <var:c> $ , $ <var:X> $ , $ <var:L> $ , and $ <var:m> $ the expression $ <nat:6> <var:L> + <var:c> <nat:244> + <nat:228> <var:j> + <nat:363> + <var:X> <nat:74> + <nat:232> <var:m> $ is guaranteed to be odd . \end{theorem} \begin{proof} Notice $ <nat:363> $ is clearly odd . Take note that the summing between even positive integers together and an odd element of $ \mathbb{N} $ is guaranteed to be odd . The expression $ <nat:228> <var:j> + <nat:232> <var:m> + <nat:74> <var:X> + <var:L> <nat:6> + <var:c> <nat:244> $ is even , from the fact the addition between an even element of $ \mathbb{Z}^+ $ and an even integer must be even . The natural numbers $ <nat:244> $ , $ <nat:6> $ , $ <nat:228> $ , and moreover $ <nat:232> $ are trivially even integers Take note that the integer $ <nat:74> $ is known as even in addition to from the knowledge multiplying between even whole numbers with an arbitrary whole number is guaranteed to be even $ <nat:244> * <var:c> + <var:m> * <nat:232> + <var:X> * <nat:74> + <nat:6> * <var:L> + <var:j> * <nat:228> $ must be instrinsically even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:j> <var:c> <var:X> <var:L> <var:m> : nat , Nat . odd ( <nat:6> * <var:L> + <nat:244> * <var:c> + <nat:228> * <var:j> + <nat:74> * <var:X> + <nat:232> * <var:m> + <nat:363> ) = true . Proof . intros . assert ( <genH> : Nat . odd <nat:363> = true ) . { auto . } rewrite Nat . odd_add . assert ( <genH> : Nat . even <nat:244> = true ) . { auto . } assert ( <genH> : Nat . even <nat:6> = true ) . { auto . } assert ( <genH> : Nat . even <nat:228> = true ) . { auto . } assert ( <genH> : Nat . even <nat:232> = true ) . { auto . } assert ( <genH> : Nat . even <nat:74> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:6> * <var:L> + <nat:244> * <var:c> + <nat:228> * <var:j> + <nat:74> * <var:X> + <nat:232> * <var:m> ) = true ) . { repeat rewrite Nat . even_add . repeat rewrite Nat . even_mul . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite <- Nat . negb_even . rewrite <genH> . rewrite <genH> . auto . Qed . 