\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Take $ <var:i> $ , $ <var:Y> $ , $ <var:r> $ , $ <var:I> $ , $ <var:D> $ , $ <var:M> $ , $ <var:F> $ and $ <var:m> $ are numbers where $ <var:m> $ , $ <var:r> $ , $ <var:D> $ , $ <var:M> $ , $ <var:i> $ , $ <var:F> $ , $ <var:I> $ , and $ <var:Y> > <nat:1> $ plus where $ <nat:2779920> $ equals $ <var:i> * <var:r> * <var:F> * <var:M> * <var:D> * <var:m> * <var:I> * <var:Y> $ . \end{theorem} \begin{proof} Let $ <var:F> = <nat:11> $ , $ <var:r> = <nat:5> $ , $ <var:Y> = <nat:3> $ , $ <var:m> = <nat:13> $ , $ <var:I> = <nat:9> $ , $ <var:D> = <nat:6> $ , $ <var:M> = <nat:12> $ , $ <var:i> = <nat:2> $ . In addition observe $ <nat:9> $ , $ <nat:5> $ , $ <nat:13> $ , $ <nat:11> $ , $ <nat:3> $ , $ <nat:12> $ , $ <nat:6> $ , $ <nat:2> > <nat:1> $ . This yields our principle is true . Thus , <nat:2779920> is the product of $ <var:r> $ , $ <var:D> $ , $ <var:Y> $ , $ <var:F> $ , $ <var:i> $ , $ <var:M> $ , $ <var:I> $ , $ <var:m> \in \mathbb{Z}^+ $ is validated . \end{proof} \end{document} 
~
Require Import Lia . Theorem <genP:1> : exists <var:i> <var:Y> <var:r> <var:I> <var:D> <var:M> <var:F> <var:m> : nat , ( <var:m> > <nat:1> ) /\ ( <var:r> > <nat:1> ) /\ ( <var:D> > <nat:1> ) /\ ( <var:M> > <nat:1> ) /\ ( <var:i> > <nat:1> ) /\ ( <var:F> > <nat:1> ) /\ ( <var:I> > <nat:1> ) /\ ( <var:Y> > <nat:1> ) /\ ( <nat:2779920> = <var:i> * <var:r> * <var:F> * <var:M> * <var:D> * <var:m> * <var:I> * <var:Y> ) . Proof . exists <nat:2> . exists <nat:3> . exists <nat:5> . exists <nat:9> . exists <nat:6> . exists <nat:12> . exists <nat:11> . exists <nat:13> . assert ( <genH> : <nat:9> > <nat:1> ) . { lia . } assert ( <genH> : <nat:5> > <nat:1> ) . { lia . } assert ( <genH> : <nat:13> > <nat:1> ) . { lia . } assert ( <genH> : <nat:11> > <nat:1> ) . { lia . } assert ( <genH> : <nat:3> > <nat:1> ) . { lia . } assert ( <genH> : <nat:12> > <nat:1> ) . { lia . } assert ( <genH> : <nat:6> > <nat:1> ) . { lia . } assert ( <genH> : <nat:2> > <nat:1> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 