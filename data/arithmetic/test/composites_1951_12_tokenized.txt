\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} We say that $ <var:l> $ is a <def:twelve-composite> positive integer iff assuming some positive integers $ <var:A> $ , $ <var:d> $ , $ <var:R> $ , $ <var:Y> $ , $ <var:b> $ , $ <var:k> $ , $ <var:h> $ , $ <var:Q> $ , $ <var:t> $ , $ <var:o> $ , $ <var:K> $ , $ <var:n> $ we get $ <var:l> = <var:o> * <var:K> * <var:h> * <var:R> * <var:Q> * <var:b> * <var:d> * <var:k> * <var:n> * <var:t> * <var:Y> * <var:A> $ for some integer $ <var:l> $ and so that $ <var:A> $ , $ <var:n> $ , $ <var:R> $ , $ <var:t> $ , $ <var:K> $ , $ <var:d> $ , $ <var:o> $ , $ <var:k> $ , $ <var:Y> $ , $ <var:h> $ , $ <var:Q> $ and $ <var:b> \geq <nat:2> $ . Accordingly <nat:6227020800> is a <def:twelve-composite> natural number . \end{theorem} \begin{proof} We demonstrate $ <nat:6227020800> = <var:A> * <var:Y> * <var:t> * <var:b> * <var:d> * <var:o> * <var:k> * <var:K> * <var:n> * <var:R> * <var:h> * <var:Q> $ plus $ <var:b> $ , $ <var:n> $ , $ <var:h> $ , $ <var:d> $ , $ <var:K> $ , $ <var:o> $ , $ <var:t> $ , $ <var:Q> $ , $ <var:R> $ , $ <var:A> $ , $ <var:k> $ , $ <var:Y> $ are larger than <nat:1> . Note that $ <var:K> * <var:Q> * <var:t> * <var:R> * <var:A> * <var:k> * <var:d> * <var:n> * <var:h> * <var:Y> * <var:b> * <var:o> = <nat:6227020800> $ yields $ <var:d> = <nat:4> $ , $ <var:Y> = <nat:2> $ , $ <var:R> = <nat:10> $ , $ <var:n> = <nat:12> $ , $ <var:o> = <nat:7> $ , $ <var:h> = <nat:11> $ , $ <var:b> = <nat:9> $ , $ <var:t> = <nat:13> $ , $ <var:Q> = <nat:8> $ , $ <var:K> = <nat:5> $ , $ <var:A> = <nat:6> $ and $ <var:k> = <nat:3> $ . What's more observe that $ <nat:5> $ , $ <nat:8> $ , $ <nat:11> $ , $ <nat:7> $ , $ <nat:9> $ , $ <nat:3> $ , $ <nat:12> $ , $ <nat:4> $ , $ <nat:10> $ , $ <nat:13> $ , $ <nat:6> $ , $ <nat:2> > <nat:1> $ . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:twelve-composite> ( <var:l> : nat ) := exists <var:A> <var:d> <var:R> <var:Y> <var:b> <var:k> <var:h> <var:Q> <var:t> <var:o> <var:K> <var:n> : nat , ( <var:l> = <var:o> * <var:K> * <var:h> * <var:R> * <var:Q> * <var:b> * <var:d> * <var:k> * <var:n> * <var:t> * <var:Y> * <var:A> ) /\ ( <var:A> >= <nat:2> ) /\ ( <var:n> >= <nat:2> ) /\ ( <var:R> >= <nat:2> ) /\ ( <var:t> >= <nat:2> ) /\ ( <var:K> >= <nat:2> ) /\ ( <var:d> >= <nat:2> ) /\ ( <var:o> >= <nat:2> ) /\ ( <var:k> >= <nat:2> ) /\ ( <var:Y> >= <nat:2> ) /\ ( <var:h> >= <nat:2> ) /\ ( <var:Q> >= <nat:2> ) /\ ( <var:b> >= <nat:2> ) . Theorem <genP:1> : <def:twelve-composite> <nat:6227020800> . Proof . unfold <def:twelve-composite> . exists <nat:6> . exists <nat:4> . exists <nat:10> . exists <nat:2> . exists <nat:9> . exists <nat:3> . exists <nat:11> . exists <nat:8> . exists <nat:13> . exists <nat:7> . exists <nat:5> . exists <nat:12> . assert ( <genH> : <nat:5> > <nat:1> ) . { lia . } assert ( <genH> : <nat:8> > <nat:1> ) . { lia . } assert ( <genH> : <nat:11> > <nat:1> ) . { lia . } assert ( <genH> : <nat:7> > <nat:1> ) . { lia . } assert ( <genH> : <nat:9> > <nat:1> ) . { lia . } assert ( <genH> : <nat:3> > <nat:1> ) . { lia . } assert ( <genH> : <nat:12> > <nat:1> ) . { lia . } assert ( <genH> : <nat:4> > <nat:1> ) . { lia . } assert ( <genH> : <nat:10> > <nat:1> ) . { lia . } assert ( <genH> : <nat:13> > <nat:1> ) . { lia . } assert ( <genH> : <nat:6> > <nat:1> ) . { lia . } assert ( <genH> : <nat:2> > <nat:1> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 