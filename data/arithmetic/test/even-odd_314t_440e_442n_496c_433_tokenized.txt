\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:n> <nat:442> + <nat:314> <var:t> + <nat:433> + <var:e> <nat:440> + <var:c> <nat:496> $ must be odd . \end{theorem} \begin{proof} We justify this result must be true . The formula $ <nat:442> \times <var:n> + <nat:314> \times <var:t> + <nat:496> \times <var:c> + <nat:440> \times <var:e> $ is known to be even . The terms $ <nat:314> <var:t> $ , $ <nat:442> <var:n> $ , plus $ <var:c> <nat:496> $ are known to be even from the knowledge the leading terms $ <nat:314> $ , $ <nat:442> $ , and likewise $ <nat:496> $ are clearly clearly even elements of $ \mathbb{Z}^+ $ . Further , notice $ <nat:440> <var:e> $ is an even natural as a consequence that the positive integer $ <nat:440> $ is trivially even . Our claim must be true from the knowledge taking the product of even elements of $ \mathbb{N} $ and any number in $ \mathbb{Z}^+ $ is guaranteed to be even . The adding between an even integer with an odd natural must be odd . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:n> <var:t> <var:e> <var:c> : nat , Nat . odd ( <nat:442> * <var:n> + <nat:314> * <var:t> + <nat:440> * <var:e> + <nat:496> * <var:c> + <nat:433> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:314> = true ) . { auto . } assert ( <genH> : Nat . even <nat:442> = true ) . { auto . } assert ( <genH> : Nat . even <nat:496> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:314> * <var:t> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:442> * <var:n> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:496> * <var:c> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:440> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:440> * <var:e> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:442> * <var:n> + <nat:314> * <var:t> + <nat:440> * <var:e> + <nat:496> * <var:c> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . auto . Qed . 