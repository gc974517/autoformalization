\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Supposing there exist natural numbers $ <var:b> $ , $ <var:R> $ , $ <var:V> $ , $ <var:r> $ , $ <var:Y> $ , $ <var:g> $ , $ <var:p> $ then take that some whole number $ <var:S> $ is said to be a <def:seven-composite> positive integer assuming $ <var:S> = <var:g> * <var:Y> * <var:r> * <var:p> * <var:R> * <var:V> * <var:b> $ and unique terms are larger than <nat:1> . Then the natural number <nat:262080> is <def:seven-composite> . \end{theorem} \begin{proof} Let $ <var:Y> = <nat:7> $ , $ <var:g> = <nat:6> $ , $ <var:V> = <nat:13> $ , $ <var:b> = <nat:2> $ , $ <var:r> = <nat:10> $ , $ <var:R> = <nat:8> $ , and $ <var:p> = <nat:3> $ . Notice $ <nat:3> $ , $ <nat:7> $ , $ <nat:6> $ , $ <nat:8> $ , $ <nat:2> $ , $ <nat:13> $ , $ <nat:10> $ are more than <nat:1> . Thus , <nat:262080> is the multiplication between $ <var:g> $ , $ <var:r> $ , $ <var:p> $ , $ <var:V> $ , $ <var:R> $ , $ <var:b> $ , and $ <var:Y> \in \mathbb{N} $ and $ <var:Y> $ , $ <var:b> $ , $ <var:r> $ , $ <var:V> $ , $ <var:g> $ , $ <var:R> $ , $ <var:p> $ are larger than <nat:1> is true has been proven . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:seven-composite> ( <var:S> : nat ) := exists <var:b> <var:R> <var:V> <var:r> <var:Y> <var:g> <var:p> : nat , ( <var:S> = <var:g> * <var:Y> * <var:r> * <var:p> * <var:R> * <var:V> * <var:b> ) /\ ( <var:b> > <nat:1> ) /\ ( <var:R> > <nat:1> ) /\ ( <var:V> > <nat:1> ) /\ ( <var:r> > <nat:1> ) /\ ( <var:Y> > <nat:1> ) /\ ( <var:g> > <nat:1> ) /\ ( <var:p> > <nat:1> ) . Theorem <genP:1> : <def:seven-composite> <nat:262080> . Proof . unfold <def:seven-composite> . exists <nat:2> . exists <nat:8> . exists <nat:13> . exists <nat:10> . exists <nat:7> . exists <nat:6> . exists <nat:3> . assert ( <genH> : <nat:3> > <nat:1> ) . { lia . } assert ( <genH> : <nat:7> > <nat:1> ) . { lia . } assert ( <genH> : <nat:6> > <nat:1> ) . { lia . } assert ( <genH> : <nat:8> > <nat:1> ) . { lia . } assert ( <genH> : <nat:2> > <nat:1> ) . { lia . } assert ( <genH> : <nat:13> > <nat:1> ) . { lia . } assert ( <genH> : <nat:10> > <nat:1> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 