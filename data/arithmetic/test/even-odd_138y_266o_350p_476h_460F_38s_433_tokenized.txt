\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Given every variables $ <var:y> $ , $ <var:s> $ , $ <var:F> $ , $ <var:p> $ , $ <var:o> $ , and $ <var:h> $ the expression $ <var:o> \times <nat:266> + <nat:38> \times <var:s> + <nat:138> \times <var:y> + <var:F> \times <nat:460> + <var:p> \times <nat:350> + <nat:476> \times <var:h> + <nat:433> $ is odd . \end{theorem} \begin{proof} Since the addition between an even element of $ \mathbb{Z}^+ $ with an odd integer will be odd , as a consequence the lemma holds . See $ <nat:433> $ is clearly odd . Our result is proven as a consequence that $ <nat:350> * <var:p> + <var:F> * <nat:460> + <var:h> * <nat:476> + <var:s> * <nat:38> + <nat:138> * <var:y> + <nat:266> * <var:o> $ is guaranteed to be even . The products $ <nat:350> * <var:p> $ , $ <var:y> * <nat:138> $ , $ <var:s> * <nat:38> $ , as well as $ <var:F> * <nat:460> $ are obviously even whole numbers . Adding on , take note $ <nat:266> * <var:o> $ is an even whole number . In addition to this , $ <nat:476> * <var:h> $ is trivially an even number in $ \mathbb{Z}^+ $ . The formula $ <nat:138> \cdot <var:y> + <nat:266> \cdot <var:o> + <nat:350> \cdot <var:p> + <var:h> \cdot <nat:476> + <var:F> \cdot <nat:460> + <var:s> \cdot <nat:38> $ will be even from the fact the product between an even natural number and a element of $ \mathbb{N} $ must be even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:y> <var:s> <var:F> <var:p> <var:o> <var:h> : nat , Nat . odd ( <nat:266> * <var:o> + <nat:38> * <var:s> + <nat:138> * <var:y> + <nat:460> * <var:F> + <nat:350> * <var:p> + <nat:476> * <var:h> + <nat:433> ) = true . Proof . intros . rewrite Nat . odd_add . assert ( <genH> : Nat . odd <nat:433> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:350> * <var:p> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:138> * <var:y> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:38> * <var:s> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:460> * <var:F> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:266> * <var:o> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:476> * <var:h> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:266> * <var:o> + <nat:38> * <var:s> + <nat:138> * <var:y> + <nat:460> * <var:F> + <nat:350> * <var:p> + <nat:476> * <var:h> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite <- Nat . negb_even . rewrite <genH> . rewrite <genH> . auto . Qed . 