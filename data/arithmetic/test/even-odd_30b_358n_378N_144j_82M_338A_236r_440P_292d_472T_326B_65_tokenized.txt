\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:d> \cdot <nat:292> + <var:r> \cdot <nat:236> + <nat:30> \cdot <var:b> + <nat:326> \cdot <var:B> + <var:T> \cdot <nat:472> + <nat:65> + <nat:358> \cdot <var:n> + <nat:440> \cdot <var:P> + <var:N> \cdot <nat:378> + <var:A> \cdot <nat:338> + <var:M> \cdot <nat:82> + <var:j> \cdot <nat:144> $ must be odd taking $ <var:A> $ , $ <var:M> $ , $ <var:d> $ , $ <var:j> $ , $ <var:N> $ , $ <var:b> $ , $ <var:n> $ , $ <var:P> $ , $ <var:T> $ , $ <var:r> $ , and $ <var:B> $ . \end{theorem} \begin{proof} Notice $ <nat:65> $ is guaranteed to be an odd integer . We demonstrate the formula $ <nat:30> \times <var:b> + <var:P> \times <nat:440> + <nat:338> \times <var:A> + <var:N> \times <nat:378> + <var:d> \times <nat:292> + <nat:82> \times <var:M> + <nat:358> \times <var:n> + <nat:65> + <var:j> \times <nat:144> + <nat:472> \times <var:T> + <nat:236> \times <var:r> + <nat:326> \times <var:B> $ must be odd . We know that $ <var:M> \times <nat:82> + <var:T> \times <nat:472> + <nat:338> \times <var:A> + <var:N> \times <nat:378> + <var:B> \times <nat:326> + <nat:30> \times <var:b> + <var:j> \times <nat:144> + <nat:292> \times <var:d> + <nat:65> + <var:n> \times <nat:358> + <var:P> \times <nat:440> + <var:r> \times <nat:236> $ is obviously odd from the fact the expression $ <var:n> \times <nat:358> + <var:r> \times <nat:236> + <nat:472> \times <var:T> + <var:M> \times <nat:82> + <nat:338> \times <var:A> + <var:b> \times <nat:30> + <nat:378> \times <var:N> + <var:P> \times <nat:440> + <var:j> \times <nat:144> + <var:B> \times <nat:326> + <nat:292> \times <var:d> $ is known as even , as a consequence that the summing between an even number in $ \mathbb{N} $ and an even number in $ \mathbb{N} $ will be even . Observe that the pairs $ <nat:472> <var:T> $ , $ <nat:338> <var:A> $ , $ <var:M> <nat:82> $ , in addition to $ <nat:378> <var:N> $ are known to be even numbers in $ \mathbb{N} $ by reason that the integers $ <nat:472> $ , $ <nat:338> $ , $ <nat:82> $ , and moreover $ <nat:378> $ must be even . On top of this , the numbers $ <nat:144> $ , $ <nat:236> $ , plus $ <nat:440> $ are even elements of $ \mathbb{Z}^+ $ . Accordingly , the terms $ <var:j> <nat:144> $ , $ <nat:236> <var:r> $ , and likewise $ <var:P> <nat:440> $ will be even at the same time . The terms $ <var:B> <nat:326> $ plus $ <nat:30> <var:b> $ are even . This fact must be true by reason that multiplying between an even natural number and an arbitrary number must be an even positive integer , and must be true since the leading terms $ <nat:326> $ as well as $ <nat:30> $ are obviously even numbers in $ \mathbb{N} $ . See that the pair $ <nat:292> <var:d> $ is clearly an even natural number . This fact is proven from the fact the whole number $ <nat:292> $ is clearly an even number . Take note that the integer $ <nat:358> $ is trivially even . Thus , $ <var:n> <nat:358> $ will be even too . and since the product of even numbers in $ \mathbb{N} $ and a natural number is guaranteed to be even the summation $ <nat:30> <var:b> + <var:n> <nat:358> + <var:N> <nat:378> + <var:j> <nat:144> + <var:M> <nat:82> + <nat:338> <var:A> + <nat:236> <var:r> + <var:P> <nat:440> + <var:d> <nat:292> + <var:T> <nat:472> + <var:B> <nat:326> $ must be even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:A> <var:M> <var:d> <var:j> <var:N> <var:b> <var:n> <var:P> <var:T> <var:r> <var:B> : nat , Nat . odd ( <nat:292> * <var:d> + <nat:236> * <var:r> + <nat:30> * <var:b> + <nat:326> * <var:B> + <nat:472> * <var:T> + <nat:358> * <var:n> + <nat:440> * <var:P> + <nat:378> * <var:N> + <nat:338> * <var:A> + <nat:82> * <var:M> + <nat:144> * <var:j> + <nat:65> ) = true . Proof . intros . assert ( <genH> : Nat . odd <nat:65> = true ) . { auto . } assert ( <genH> : Nat . even <nat:472> = true ) . { auto . } assert ( <genH> : Nat . even <nat:338> = true ) . { auto . } assert ( <genH> : Nat . even <nat:82> = true ) . { auto . } assert ( <genH> : Nat . even <nat:378> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:472> * <var:T> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:338> * <var:A> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:82> * <var:M> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:378> * <var:N> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:144> = true ) . { auto . } assert ( <genH> : Nat . even <nat:236> = true ) . { auto . } assert ( <genH> : Nat . even <nat:440> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:144> * <var:j> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:236> * <var:r> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:440> * <var:P> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:326> = true ) . { auto . } assert ( <genH> : Nat . even <nat:30> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:326> * <var:B> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:30> * <var:b> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:292> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:292> * <var:d> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:358> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:358> * <var:n> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:292> * <var:d> + <nat:236> * <var:r> + <nat:30> * <var:b> + <nat:326> * <var:B> + <nat:472> * <var:T> + <nat:358> * <var:n> + <nat:440> * <var:P> + <nat:378> * <var:N> + <nat:338> * <var:A> + <nat:82> * <var:M> + <nat:144> * <var:j> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . rewrite <genH> . auto . Qed . 