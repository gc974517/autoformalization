\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:227> + <var:P> \cdot <nat:496> + <nat:204> \cdot <var:f> + <var:Q> \cdot <nat:194> + <var:q> \cdot <nat:290> + <nat:20> \cdot <var:m> + <nat:70> \cdot <var:h> + <nat:372> \cdot <var:S> $ will be odd with some $ <var:h> $ , $ <var:q> $ , $ <var:Q> $ , $ <var:m> $ , $ <var:f> $ , $ <var:S> $ , and $ <var:P> \in \mathbb{N} $ . \end{theorem} \begin{proof} We check the summation $ <var:S> * <nat:372> + <nat:496> * <var:P> + <var:h> * <nat:70> + <var:f> * <nat:204> + <nat:227> + <var:Q> * <nat:194> + <nat:20> * <var:m> + <var:q> * <nat:290> $ must be odd . We check the summation $ <nat:290> * <var:q> + <nat:204> * <var:f> + <var:h> * <nat:70> + <var:m> * <nat:20> + <var:Q> * <nat:194> + <nat:496> * <var:P> + <nat:227> + <nat:372> * <var:S> $ is known as odd because the expression $ <var:m> \times <nat:20> + <nat:204> \times <var:f> + <var:S> \times <nat:372> + <var:h> \times <nat:70> + <nat:496> \times <var:P> + <var:q> \times <nat:290> + <var:Q> \times <nat:194> $ is trivially even . See the products $ <var:m> <nat:20> $ , $ <nat:204> <var:f> $ , $ <var:S> <nat:372> $ , $ <nat:70> <var:h> $ , $ <var:P> <nat:496> $ , $ <var:q> <nat:290> $ , and $ <var:Q> <nat:194> $ are obviously even since the leading terms $ <nat:20> $ , $ <nat:204> $ , $ <nat:372> $ , $ <nat:70> $ , $ <nat:496> $ , $ <nat:290> $ , and also $ <nat:194> $ must be even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:h> <var:q> <var:Q> <var:m> <var:f> <var:S> <var:P> : nat , Nat . odd ( <nat:496> * <var:P> + <nat:204> * <var:f> + <nat:194> * <var:Q> + <nat:290> * <var:q> + <nat:20> * <var:m> + <nat:70> * <var:h> + <nat:372> * <var:S> + <nat:227> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:20> = true ) . { auto . } assert ( <genH> : Nat . even <nat:204> = true ) . { auto . } assert ( <genH> : Nat . even <nat:372> = true ) . { auto . } assert ( <genH> : Nat . even <nat:70> = true ) . { auto . } assert ( <genH> : Nat . even <nat:496> = true ) . { auto . } assert ( <genH> : Nat . even <nat:290> = true ) . { auto . } assert ( <genH> : Nat . even <nat:194> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:20> * <var:m> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:204> * <var:f> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:372> * <var:S> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:70> * <var:h> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:496> * <var:P> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:290> * <var:q> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:194> * <var:Q> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:496> * <var:P> + <nat:204> * <var:f> + <nat:194> * <var:Q> + <nat:290> * <var:q> + <nat:20> * <var:m> + <nat:70> * <var:h> + <nat:372> * <var:S> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . auto . Qed . 