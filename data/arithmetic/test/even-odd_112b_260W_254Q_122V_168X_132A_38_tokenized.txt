\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:112> \cdot <var:b> + <nat:260> \cdot <var:W> + <nat:254> \cdot <var:Q> + <nat:38> + <nat:122> \cdot <var:V> + <var:X> \cdot <nat:168> + <var:A> \cdot <nat:132> $ is even taking some natural numbers $ <var:W> $ , $ <var:Q> $ , $ <var:V> $ , $ <var:X> $ , $ <var:b> $ , and $ <var:A> $ . \end{theorem} \begin{proof} Observe the leading terms $ <nat:112> $ , $ <nat:260> $ , $ <nat:254> $ , $ <nat:122> $ , $ <nat:168> $ , in addition to $ <nat:132> $ will be even whole numbers . Hence , the terms $ <nat:112> <var:b> $ , $ <var:W> <nat:260> $ , $ <var:Q> <nat:254> $ , $ <nat:122> <var:V> $ , $ <var:X> <nat:168> $ , plus $ <nat:132> <var:A> $ is guaranteed to be even at the same time . We know that $ <nat:38> $ is guaranteed to be even . The summation between an even element of $ \mathbb{N} $ with an even integer is guaranteed to be an even natural . As a consequence , the proposition is proven . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:W> <var:Q> <var:V> <var:X> <var:b> <var:A> : nat , Nat . even ( <nat:112> * <var:b> + <nat:260> * <var:W> + <nat:254> * <var:Q> + <nat:122> * <var:V> + <nat:168> * <var:X> + <nat:132> * <var:A> + <nat:38> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:112> = true ) . { auto . } assert ( <genH> : Nat . even <nat:260> = true ) . { auto . } assert ( <genH> : Nat . even <nat:254> = true ) . { auto . } assert ( <genH> : Nat . even <nat:122> = true ) . { auto . } assert ( <genH> : Nat . even <nat:168> = true ) . { auto . } assert ( <genH> : Nat . even <nat:132> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:112> * <var:b> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:260> * <var:W> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:254> * <var:Q> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:122> * <var:V> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:168> * <var:X> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:132> * <var:A> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:38> = true ) . { auto . } repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 