\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:T> <nat:144> + <nat:440> + <nat:104> <var:B> + <nat:294> <var:m> + <var:M> <nat:162> + <var:g> <nat:202> $ is guaranteed to be even . \end{theorem} \begin{proof} Our main result is proven from the fact $ <var:M> * <nat:162> + <nat:144> * <var:T> + <nat:294> * <var:m> + <nat:104> * <var:B> + <var:g> * <nat:202> $ is known to be even . See the pairs $ <var:B> \cdot <nat:104> $ and likewise $ <var:M> \cdot <nat:162> $ are obviously even whole numbers . The pairs $ <nat:294> \cdot <var:m> $ and moreover $ <var:g> \cdot <nat:202> $ are clearly even . The product $ <nat:144> \cdot <var:T> $ is an even positive integer . Our claim holds as a consequence that taking the product of an even number in $ \mathbb{N} $ with any element of $ \mathbb{N} $ will be by definition an even number in $ \mathbb{N} $ . It can be justified that the main result is true . Observe that $ <nat:440> $ is trivially even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:T> <var:B> <var:m> <var:M> <var:g> : nat , Nat . even ( <nat:144> * <var:T> + <nat:104> * <var:B> + <nat:294> * <var:m> + <nat:162> * <var:M> + <nat:202> * <var:g> + <nat:440> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:104> * <var:B> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:162> * <var:M> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:294> * <var:m> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:202> * <var:g> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:144> * <var:T> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:144> * <var:T> + <nat:104> * <var:B> + <nat:294> * <var:m> + <nat:162> * <var:M> + <nat:202> * <var:g> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:440> = true ) . { auto . } rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . auto . Qed . 