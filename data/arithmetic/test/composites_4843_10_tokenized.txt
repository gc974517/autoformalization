\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \newtheorem{definition}{Definition} \begin{document} \begin{definition} Take $ <var:u> $ , $ <var:D> $ , $ <var:M> $ , $ <var:k> $ , $ <var:t> $ , $ <var:h> $ , $ <var:X> $ , $ <var:e> $ , $ <var:P> $ , $ <var:v> \in \mathbb{Z}^+ $ such that $ <var:v> $ , $ <var:e> $ , $ <var:k> $ , $ <var:P> $ , $ <var:t> $ , $ <var:M> $ , $ <var:X> $ , $ <var:D> $ , $ <var:h> $ and $ <var:u> \geq <nat:2> $ . Define that some natural number $ <var:S> $ is defined as a <def:ten-composite> integer assuming $ <var:S> = <var:u> \times <var:X> \times <var:t> \times <var:v> \times <var:M> \times <var:P> \times <var:k> \times <var:h> \times <var:e> \times <var:D> $ . \end{definition} \begin{theorem} The number <nat:103783680> is a <def:ten-composite> positive integer . \end{theorem} \begin{proof} Recollect that <nat:103783680> is <def:ten-composite> when it is the product of positive integers $ <var:D> $ , $ <var:P> $ , $ <var:e> $ , $ <var:u> $ , $ <var:h> $ , $ <var:k> $ , $ <var:M> $ , $ <var:v> $ , $ <var:X> $ , and $ <var:t> $ more than or equal to <nat:2> . Take $ <var:e> = <nat:5> $ , $ <var:t> = <nat:11> $ , $ <var:u> = <nat:3> $ , $ <var:k> = <nat:12> $ , $ <var:v> = <nat:8> $ , $ <var:M> = <nat:2> $ , $ <var:X> = <nat:13> $ , $ <var:D> = <nat:7> $ , $ <var:P> = <nat:4> $ and $ <var:h> = <nat:9> $ . Note that $ <var:u> \cdot <var:t> \cdot <var:h> \cdot <var:M> \cdot <var:X> \cdot <var:e> \cdot <var:P> \cdot <var:v> \cdot <var:D> \cdot <var:k> = <nat:103783680> $ . Also observe $ <var:P> = <nat:4> $ , $ <var:u> = <nat:3> $ , $ <var:e> = <nat:5> $ , $ <var:X> = <nat:13> $ , $ <var:v> = <nat:8> $ , $ <var:t> = <nat:11> $ , $ <var:h> = <nat:9> $ , $ <var:M> = <nat:2> $ , $ <var:D> = <nat:7> $ , and $ <var:k> = <nat:12> \geq <nat:2> $ . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:ten-composite> ( <var:S> : nat ) := exists <var:u> <var:D> <var:M> <var:k> <var:t> <var:h> <var:X> <var:e> <var:P> <var:v> : nat , ( <var:v> >= <nat:2> ) /\ ( <var:e> >= <nat:2> ) /\ ( <var:k> >= <nat:2> ) /\ ( <var:P> >= <nat:2> ) /\ ( <var:t> >= <nat:2> ) /\ ( <var:M> >= <nat:2> ) /\ ( <var:X> >= <nat:2> ) /\ ( <var:D> >= <nat:2> ) /\ ( <var:h> >= <nat:2> ) /\ ( <var:u> >= <nat:2> ) /\ ( <var:S> = <var:u> * <var:X> * <var:t> * <var:v> * <var:M> * <var:P> * <var:k> * <var:h> * <var:e> * <var:D> ) . Theorem <genP:1> : <def:ten-composite> <nat:103783680> . Proof . unfold <def:ten-composite> . exists <nat:3> . exists <nat:7> . exists <nat:2> . exists <nat:12> . exists <nat:11> . exists <nat:9> . exists <nat:13> . exists <nat:5> . exists <nat:4> . exists <nat:8> . assert ( <genH> : <nat:4> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:3> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:5> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:13> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:8> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:11> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:9> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:2> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:7> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:12> >= <nat:2> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 