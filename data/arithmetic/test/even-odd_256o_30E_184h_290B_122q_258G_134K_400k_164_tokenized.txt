\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:164> + <nat:256> * <var:o> + <var:E> * <nat:30> + <var:h> * <nat:184> + <nat:290> * <var:B> + <var:q> * <nat:122> + <var:G> * <nat:258> + <nat:134> * <var:K> + <var:k> * <nat:400> $ will be even . \end{theorem} \begin{proof} The positive integers $ <nat:290> $ , $ <nat:134> $ , $ <nat:258> $ , $ <nat:30> $ , plus $ <nat:400> $ will be even The integer $ <nat:184> $ is guaranteed to be even Observe that the number $ <nat:122> $ is an even natural The integer $ <nat:256> $ is clearly an even number in $ \mathbb{Z}^+ $ It can be proven that our result must be true employing the product of an even whole number with any number in $ \mathbb{Z}^+ $ must be an even positive integer . Recall that $ <nat:164> $ is clearly an even integer . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:o> <var:E> <var:h> <var:B> <var:q> <var:G> <var:K> <var:k> : nat , Nat . even ( <nat:256> * <var:o> + <nat:30> * <var:E> + <nat:184> * <var:h> + <nat:290> * <var:B> + <nat:122> * <var:q> + <nat:258> * <var:G> + <nat:134> * <var:K> + <nat:400> * <var:k> + <nat:164> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:290> = true ) . { auto . } assert ( <genH> : Nat . even <nat:134> = true ) . { auto . } assert ( <genH> : Nat . even <nat:258> = true ) . { auto . } assert ( <genH> : Nat . even <nat:30> = true ) . { auto . } assert ( <genH> : Nat . even <nat:400> = true ) . { auto . } assert ( <genH> : Nat . even <nat:184> = true ) . { auto . } assert ( <genH> : Nat . even <nat:122> = true ) . { auto . } assert ( <genH> : Nat . even <nat:256> = true ) . { auto . } repeat rewrite Nat . even_add . repeat rewrite Nat . even_mul . assert ( <genH> : Nat . even <nat:164> = true ) . { auto . } repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 