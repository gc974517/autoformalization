\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:110> \cdot <var:C> + <nat:279> + <var:k> \cdot <nat:170> + <var:a> \cdot <nat:86> $ is guaranteed to be odd with any natural numbers $ <var:k> $ , $ <var:C> $ , and $ <var:a> $ . \end{theorem} \begin{proof} We apply the assumption the understanding that the summation $ <nat:170> \times <var:k> + <var:C> \times <nat:110> + <nat:86> \times <var:a> $ is known as even . We know the summation between an even number in $ \mathbb{Z}^+ $ and an even positive integer will be an even number in $ \mathbb{Z}^+ $ . Notice that the pair $ <var:a> \cdot <nat:86> $ is trivially an even whole number as a consequence that taking the product of an even number in $ \mathbb{N} $ and a natural is guaranteed to be an even whole number and moreover the whole number $ <nat:86> $ is trivially an even positive integer . Likewise , the coefficient $ <nat:110> $ is known to be an even element of $ \mathbb{N} $ . Consequently , the term $ <nat:110> \cdot <var:C> $ is guaranteed to be even too . We know that the coefficient $ <nat:170> $ is clearly an even element of $ \mathbb{N} $ . In consequence , the term $ <var:k> \cdot <nat:170> $ is guaranteed to be even as well . and likewise by reason that taking the product between even elements of $ \mathbb{Z}^+ $ and some whole number is even . We show the proposition must be true . See that $ <nat:279> $ is known to be odd . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:k> <var:C> <var:a> : nat , Nat . odd ( <nat:110> * <var:C> + <nat:170> * <var:k> + <nat:86> * <var:a> + <nat:279> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:86> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:86> * <var:a> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:110> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:110> * <var:C> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:170> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:170> * <var:k> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:110> * <var:C> + <nat:170> * <var:k> + <nat:86> * <var:a> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } assert ( <genH> : Nat . odd <nat:279> = true ) . { auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . rewrite <genH> . auto . Qed . 