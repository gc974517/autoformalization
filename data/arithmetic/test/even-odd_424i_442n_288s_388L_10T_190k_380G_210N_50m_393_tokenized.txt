\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Given all whole numbers $ <var:n> $ , $ <var:G> $ , $ <var:k> $ , $ <var:m> $ , $ <var:L> $ , $ <var:i> $ , $ <var:N> $ , $ <var:T> $ , and $ <var:s> $ the expression $ <var:s> * <nat:288> + <nat:393> + <var:N> * <nat:210> + <nat:380> * <var:G> + <nat:50> * <var:m> + <nat:190> * <var:k> + <nat:388> * <var:L> + <var:n> * <nat:442> + <var:i> * <nat:424> + <var:T> * <nat:10> $ is guaranteed to be odd . \end{theorem} \begin{proof} Recall the expression $ <var:i> <nat:424> + <var:n> <nat:442> + <var:s> <nat:288> + <var:L> <nat:388> + <var:T> <nat:10> + <nat:190> <var:k> + <var:G> <nat:380> + <nat:210> <var:N> + <nat:50> <var:m> $ is even . The main result is true from the fact the adding of even numbers and even natural numbers is an even positive integer and because multiplying between an even number in $ \mathbb{N} $ with any element of $ \mathbb{N} $ will be even . We know that the totaling between even whole numbers concurrently with an odd natural number is itself an odd whole number . Take note $ <nat:393> $ is obviously an odd positive integer . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:n> <var:G> <var:k> <var:m> <var:L> <var:i> <var:N> <var:T> <var:s> : nat , Nat . odd ( <nat:288> * <var:s> + <nat:210> * <var:N> + <nat:380> * <var:G> + <nat:50> * <var:m> + <nat:190> * <var:k> + <nat:388> * <var:L> + <nat:442> * <var:n> + <nat:424> * <var:i> + <nat:10> * <var:T> + <nat:393> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:288> * <var:s> + <nat:210> * <var:N> + <nat:380> * <var:G> + <nat:50> * <var:m> + <nat:190> * <var:k> + <nat:388> * <var:L> + <nat:442> * <var:n> + <nat:424> * <var:i> + <nat:10> * <var:T> ) = true ) . { repeat rewrite Nat . even_add . repeat rewrite Nat . even_mul . auto . } rewrite Nat . odd_add . assert ( <genH> : Nat . odd <nat:393> = true ) . { auto . } rewrite <- Nat . negb_even . rewrite <genH> . rewrite <genH> . auto . Qed . 