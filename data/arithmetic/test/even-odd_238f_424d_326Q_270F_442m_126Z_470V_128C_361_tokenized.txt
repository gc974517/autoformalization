\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:326> * <var:Q> + <nat:128> * <var:C> + <nat:470> * <var:V> + <var:d> * <nat:424> + <var:m> * <nat:442> + <nat:126> * <var:Z> + <nat:270> * <var:F> + <nat:361> + <var:f> * <nat:238> $ will be odd with every $ <var:d> $ , $ <var:C> $ , $ <var:Z> $ , $ <var:f> $ , $ <var:Q> $ , $ <var:m> $ , $ <var:F> $ , and $ <var:V> \in \mathbb{Z}^+ $ . \end{theorem} \begin{proof} We know that the adding between an even number in $ \mathbb{N} $ with an odd integer is guaranteed to be odd . In addition to this , observe the integer $ <nat:238> $ is clearly even . Consequently , the product $ <var:f> <nat:238> $ will be even too . $ <var:d> <nat:424> $ is clearly even from the knowledge the positive integer $ <nat:424> $ is even . See that the pair $ <nat:326> <var:Q> $ is even . This claim holds from the knowledge the natural number $ <nat:326> $ is known as even . Take note that the pair $ <nat:270> <var:F> $ is guaranteed to be even . This claim is proven since taking the product between an even element of $ \mathbb{N} $ and a natural must be an even number in $ \mathbb{Z}^+ $ . This claim is proven by reason that the coefficient $ <nat:270> $ is known as even . Furthermore , remember $ <var:m> <nat:442> $ is trivially an even integer . This fact holds from the fact the multiplication of an even natural number and some natural number is guaranteed to be even . This fact is true by reason that the coefficient $ <nat:442> $ is trivially an even element of $ \mathbb{Z}^+ $ . The pair $ <var:Z> <nat:126> $ is an even positive integer from the fact the positive integer $ <nat:126> $ is obviously even . What's more , notice that the positive integer $ <nat:470> $ is known to be even . Therefore , $ <nat:470> <var:V> $ will be even too . The coefficient $ <nat:128> $ is known to be an even positive integer . Therefore , the product $ <var:C> <nat:128> $ is guaranteed to be even at the same time . It can be shown that the result must be true . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:d> <var:C> <var:Z> <var:f> <var:Q> <var:m> <var:F> <var:V> : nat , Nat . odd ( <nat:326> * <var:Q> + <nat:128> * <var:C> + <nat:470> * <var:V> + <nat:424> * <var:d> + <nat:442> * <var:m> + <nat:126> * <var:Z> + <nat:270> * <var:F> + <nat:238> * <var:f> + <nat:361> ) = true . Proof . intros . rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . assert ( <genH> : Nat . even <nat:238> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:238> * <var:f> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:424> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:424> * <var:d> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:326> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:326> * <var:Q> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:270> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:270> * <var:F> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:442> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:442> * <var:m> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:126> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:126> * <var:Z> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:470> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:470> * <var:V> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:128> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:128> * <var:C> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 