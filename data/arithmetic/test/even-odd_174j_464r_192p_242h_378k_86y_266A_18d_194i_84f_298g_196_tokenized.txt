\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:196> + <nat:174> \times <var:j> + <var:r> \times <nat:464> + <nat:192> \times <var:p> + <nat:242> \times <var:h> + <var:k> \times <nat:378> + <nat:86> \times <var:y> + <var:A> \times <nat:266> + <nat:18> \times <var:d> + <nat:194> \times <var:i> + <var:f> \times <nat:84> + <var:g> \times <nat:298> $ will be even . \end{theorem} \begin{proof} Furthermore , recall that the terms $ <nat:174> <var:j> $ , $ <nat:464> <var:r> $ , $ <nat:192> <var:p> $ , $ <nat:242> <var:h> $ , $ <nat:378> <var:k> $ , $ <var:y> <nat:86> $ , $ <var:A> <nat:266> $ , $ <var:d> <nat:18> $ , $ <var:i> <nat:194> $ , $ <nat:84> <var:f> $ , as well as $ <nat:298> <var:g> $ are clearly even whole numbers since the positive integers $ <nat:174> $ , $ <nat:464> $ , $ <nat:192> $ , $ <nat:242> $ , $ <nat:378> $ , $ <nat:86> $ , $ <nat:266> $ , $ <nat:18> $ , $ <nat:194> $ , $ <nat:84> $ , and $ <nat:298> $ must be even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:j> <var:r> <var:p> <var:h> <var:k> <var:y> <var:A> <var:d> <var:i> <var:f> <var:g> : nat , Nat . even ( <nat:174> * <var:j> + <nat:464> * <var:r> + <nat:192> * <var:p> + <nat:242> * <var:h> + <nat:378> * <var:k> + <nat:86> * <var:y> + <nat:266> * <var:A> + <nat:18> * <var:d> + <nat:194> * <var:i> + <nat:84> * <var:f> + <nat:298> * <var:g> + <nat:196> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:174> = true ) . { auto . } assert ( <genH> : Nat . even <nat:464> = true ) . { auto . } assert ( <genH> : Nat . even <nat:192> = true ) . { auto . } assert ( <genH> : Nat . even <nat:242> = true ) . { auto . } assert ( <genH> : Nat . even <nat:378> = true ) . { auto . } assert ( <genH> : Nat . even <nat:86> = true ) . { auto . } assert ( <genH> : Nat . even <nat:266> = true ) . { auto . } assert ( <genH> : Nat . even <nat:18> = true ) . { auto . } assert ( <genH> : Nat . even <nat:194> = true ) . { auto . } assert ( <genH> : Nat . even <nat:84> = true ) . { auto . } assert ( <genH> : Nat . even <nat:298> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:174> * <var:j> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:464> * <var:r> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:192> * <var:p> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:242> * <var:h> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:378> * <var:k> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:86> * <var:y> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:266> * <var:A> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:18> * <var:d> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:194> * <var:i> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:84> * <var:f> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:298> * <var:g> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 