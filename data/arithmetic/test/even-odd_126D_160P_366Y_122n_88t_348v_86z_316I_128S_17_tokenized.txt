\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:348> \times <var:v> + <nat:128> \times <var:S> + <var:I> \times <nat:316> + <var:D> \times <nat:126> + <nat:122> \times <var:n> + <nat:160> \times <var:P> + <nat:17> + <nat:366> \times <var:Y> + <nat:86> \times <var:z> + <nat:88> \times <var:t> $ must be odd . \end{theorem} \begin{proof} It can be justified that the formula $ <var:Y> \times <nat:366> + <var:P> \times <nat:160> + <nat:88> \times <var:t> + <var:D> \times <nat:126> + <var:S> \times <nat:128> + <var:v> \times <nat:348> + <nat:316> \times <var:I> + <var:n> \times <nat:122> + <var:z> \times <nat:86> $ is even . See the totaling between an even positive integer with an even number must be trivially an even element of $ \mathbb{Z}^+ $ . Notice the leading terms $ <nat:86> $ and moreover $ <nat:160> $ are guaranteed to be even positive integers In addition to this , the numbers $ <nat:366> $ , $ <nat:126> $ , and also $ <nat:122> $ are known to be even numbers Take note the coefficient $ <nat:316> $ is known to be even In addition , the leading terms $ <nat:348> $ plus $ <nat:88> $ will be even Furthermore , the natural number $ <nat:128> $ is obviously even By reason that the summation between even elements of $ \mathbb{N} $ with an odd number in $ \mathbb{N} $ is odd , as a consequence the sum $ <var:D> \times <nat:126> + <var:P> \times <nat:160> + <nat:366> \times <var:Y> + <var:n> \times <nat:122> + <nat:17> + <var:t> \times <nat:88> + <nat:348> \times <var:v> + <var:z> \times <nat:86> + <nat:316> \times <var:I> + <nat:128> \times <var:S> $ is guaranteed to be odd . Take note that $ <nat:17> $ is guaranteed to be an odd integer . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:v> <var:S> <var:I> <var:D> <var:n> <var:P> <var:Y> <var:z> <var:t> : nat , Nat . odd ( <nat:348> * <var:v> + <nat:128> * <var:S> + <nat:316> * <var:I> + <nat:126> * <var:D> + <nat:122> * <var:n> + <nat:160> * <var:P> + <nat:366> * <var:Y> + <nat:86> * <var:z> + <nat:88> * <var:t> + <nat:17> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:86> = true ) . { auto . } assert ( <genH> : Nat . even <nat:160> = true ) . { auto . } assert ( <genH> : Nat . even <nat:366> = true ) . { auto . } assert ( <genH> : Nat . even <nat:126> = true ) . { auto . } assert ( <genH> : Nat . even <nat:122> = true ) . { auto . } assert ( <genH> : Nat . even <nat:316> = true ) . { auto . } assert ( <genH> : Nat . even <nat:348> = true ) . { auto . } assert ( <genH> : Nat . even <nat:88> = true ) . { auto . } assert ( <genH> : Nat . even <nat:128> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:348> * <var:v> + <nat:128> * <var:S> + <nat:316> * <var:I> + <nat:126> * <var:D> + <nat:122> * <var:n> + <nat:160> * <var:P> + <nat:366> * <var:Y> + <nat:86> * <var:z> + <nat:88> * <var:t> ) = true ) . { repeat rewrite Nat . even_add . repeat rewrite Nat . even_mul . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . assert ( <genH> : Nat . odd <nat:17> = true ) . { auto . } rewrite <- Nat . negb_even . rewrite <genH> . rewrite <genH> . auto . Qed . 