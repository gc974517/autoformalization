\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:P> \cdot <nat:200> + <var:F> \cdot <nat:160> + <var:i> \cdot <nat:492> + <var:p> \cdot <nat:394> + <var:c> \cdot <nat:466> + <var:H> \cdot <nat:254> + <var:C> \cdot <nat:378> + <nat:265> + <nat:188> \cdot <var:b> $ must be odd . \end{theorem} \begin{proof} This lemma is proven from the fact $ <nat:394> \times <var:p> + <var:b> \times <nat:188> + <var:F> \times <nat:160> + <nat:378> \times <var:C> + <nat:200> \times <var:P> + <nat:492> \times <var:i> + <var:H> \times <nat:254> + <var:c> \times <nat:466> $ is known as even . Notice the whole numbers $ <nat:160> $ , $ <nat:466> $ , $ <nat:492> $ , $ <nat:188> $ , $ <nat:254> $ , $ <nat:394> $ , in addition to $ <nat:200> $ are known to be even Likewise , remember that the whole number $ <nat:378> $ is known to be an even integer From the knowledge the totaling of even numbers in $ \mathbb{Z}^+ $ with even naturals will be an even number , the formula $ <nat:254> \times <var:H> + <nat:188> \times <var:b> + <var:i> \times <nat:492> + <nat:200> \times <var:P> + <var:c> \times <nat:466> + <nat:378> \times <var:C> + <var:p> \times <nat:394> + <var:F> \times <nat:160> $ must be even . We justify the formula $ <nat:394> <var:p> + <nat:188> <var:b> + <nat:492> <var:i> + <nat:200> <var:P> + <nat:466> <var:c> + <nat:378> <var:C> + <nat:254> <var:H> + <var:F> <nat:160> + <nat:265> $ will be odd . We know that $ <nat:265> $ is obviously odd . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:P> <var:F> <var:i> <var:p> <var:c> <var:H> <var:C> <var:b> : nat , Nat . odd ( <nat:200> * <var:P> + <nat:160> * <var:F> + <nat:492> * <var:i> + <nat:394> * <var:p> + <nat:466> * <var:c> + <nat:254> * <var:H> + <nat:378> * <var:C> + <nat:188> * <var:b> + <nat:265> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:160> = true ) . { auto . } assert ( <genH> : Nat . even <nat:466> = true ) . { auto . } assert ( <genH> : Nat . even <nat:492> = true ) . { auto . } assert ( <genH> : Nat . even <nat:188> = true ) . { auto . } assert ( <genH> : Nat . even <nat:254> = true ) . { auto . } assert ( <genH> : Nat . even <nat:394> = true ) . { auto . } assert ( <genH> : Nat . even <nat:200> = true ) . { auto . } assert ( <genH> : Nat . even <nat:378> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:200> * <var:P> + <nat:160> * <var:F> + <nat:492> * <var:i> + <nat:394> * <var:p> + <nat:466> * <var:c> + <nat:254> * <var:H> + <nat:378> * <var:C> + <nat:188> * <var:b> ) = true ) . { repeat rewrite Nat . even_add . repeat rewrite Nat . even_mul . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } assert ( <genH> : Nat . odd <nat:265> = true ) . { auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . rewrite <genH> . auto . Qed . 