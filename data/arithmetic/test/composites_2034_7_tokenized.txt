\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} We assume that granted that there are integers $ <var:m> $ , $ <var:L> $ , $ <var:V> $ , $ <var:B> $ , $ <var:e> $ , $ <var:y> $ , $ <var:p> $ so that $ <var:y> $ , $ <var:p> $ , $ <var:V> $ , $ <var:e> $ , $ <var:L> $ , $ <var:m> $ , and $ <var:B> > <nat:1> $ . Claim that some integer $ <var:n> $ is a <def:seven-composite> integer assuming $ <var:L> \cdot <var:e> \cdot <var:B> \cdot <var:p> \cdot <var:V> \cdot <var:y> \cdot <var:m> = <var:n> $ . Thus the integer <nat:480480> is a <def:seven-composite> natural number . \end{theorem} \begin{proof} Assume $ <var:e> = <nat:8> $ , $ <var:y> = <nat:7> $ , $ <var:B> = <nat:2> $ , $ <var:L> = <nat:6> $ , $ <var:m> = <nat:5> $ , $ <var:p> = <nat:11> $ , and $ <var:V> = <nat:13> $ . Note $ <nat:5> * <nat:7> * <nat:8> * <nat:11> * <nat:6> * <nat:2> * <nat:13> = <nat:480480> $ . Similarly note that $ <nat:6> $ , $ <nat:2> $ , $ <nat:13> $ , $ <nat:5> $ , $ <nat:7> $ , $ <nat:11> $ and $ <nat:8> > <nat:1> $ . So , $ <var:e> $ , $ <var:V> $ , $ <var:B> $ , $ <var:L> $ , $ <var:y> $ , $ <var:p> $ and $ <var:m> > <nat:1> $ and $ <var:p> \cdot <var:V> \cdot <var:m> \cdot <var:L> \cdot <var:B> \cdot <var:e> \cdot <var:y> = <nat:480480> $ is proven . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:seven-composite> ( <var:n> : nat ) := exists <var:m> <var:L> <var:V> <var:B> <var:e> <var:y> <var:p> : nat , ( <var:y> > <nat:1> ) /\ ( <var:p> > <nat:1> ) /\ ( <var:V> > <nat:1> ) /\ ( <var:e> > <nat:1> ) /\ ( <var:L> > <nat:1> ) /\ ( <var:m> > <nat:1> ) /\ ( <var:B> > <nat:1> ) /\ ( <var:L> * <var:e> * <var:B> * <var:p> * <var:V> * <var:y> * <var:m> = <var:n> ) . Theorem <genP:1> : <def:seven-composite> <nat:480480> . Proof . unfold <def:seven-composite> . exists <nat:5> . exists <nat:6> . exists <nat:13> . exists <nat:2> . exists <nat:8> . exists <nat:7> . exists <nat:11> . assert ( <genH> : <nat:6> > <nat:1> ) . { lia . } assert ( <genH> : <nat:2> > <nat:1> ) . { lia . } assert ( <genH> : <nat:13> > <nat:1> ) . { lia . } assert ( <genH> : <nat:5> > <nat:1> ) . { lia . } assert ( <genH> : <nat:7> > <nat:1> ) . { lia . } assert ( <genH> : <nat:11> > <nat:1> ) . { lia . } assert ( <genH> : <nat:8> > <nat:1> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 