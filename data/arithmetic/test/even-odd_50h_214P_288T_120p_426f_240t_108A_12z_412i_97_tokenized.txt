\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:12> \cdot <var:z> + <var:P> \cdot <nat:214> + <var:p> \cdot <nat:120> + <var:f> \cdot <nat:426> + <nat:97> + <nat:288> \cdot <var:T> + <var:h> \cdot <nat:50> + <nat:108> \cdot <var:A> + <var:i> \cdot <nat:412> + <var:t> \cdot <nat:240> $ will be odd . \end{theorem} \begin{proof} The theorem is true as a consequence that $ <var:h> \cdot <nat:50> + <var:P> \cdot <nat:214> + <var:T> \cdot <nat:288> + <var:p> \cdot <nat:120> + <var:f> \cdot <nat:426> + <nat:240> \cdot <var:t> + <nat:108> \cdot <var:A> + <nat:12> \cdot <var:z> + <nat:412> \cdot <var:i> $ is trivially even . The coefficients $ <nat:50> $ , $ <nat:214> $ , $ <nat:288> $ , $ <nat:120> $ , $ <nat:426> $ , $ <nat:240> $ , $ <nat:108> $ , $ <nat:12> $ , additionally $ <nat:412> $ are even . Then , the terms $ <nat:50> \times <var:h> $ , $ <nat:214> \times <var:P> $ , $ <nat:288> \times <var:T> $ , $ <nat:120> \times <var:p> $ , $ <var:f> \times <nat:426> $ , $ <nat:240> \times <var:t> $ , $ <nat:108> \times <var:A> $ , $ <var:z> \times <nat:12> $ , additionally $ <nat:412> \times <var:i> $ will be even also . The claim holds from the fact the addition between even numbers and an even element of $ \mathbb{N} $ must be even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:z> <var:P> <var:p> <var:f> <var:T> <var:h> <var:A> <var:i> <var:t> : nat , Nat . odd ( <nat:12> * <var:z> + <nat:214> * <var:P> + <nat:120> * <var:p> + <nat:426> * <var:f> + <nat:288> * <var:T> + <nat:50> * <var:h> + <nat:108> * <var:A> + <nat:412> * <var:i> + <nat:240> * <var:t> + <nat:97> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:50> = true ) . { auto . } assert ( <genH> : Nat . even <nat:214> = true ) . { auto . } assert ( <genH> : Nat . even <nat:288> = true ) . { auto . } assert ( <genH> : Nat . even <nat:120> = true ) . { auto . } assert ( <genH> : Nat . even <nat:426> = true ) . { auto . } assert ( <genH> : Nat . even <nat:240> = true ) . { auto . } assert ( <genH> : Nat . even <nat:108> = true ) . { auto . } assert ( <genH> : Nat . even <nat:12> = true ) . { auto . } assert ( <genH> : Nat . even <nat:412> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:50> * <var:h> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:214> * <var:P> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:288> * <var:T> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:120> * <var:p> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:426> * <var:f> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:240> * <var:t> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:108> * <var:A> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:12> * <var:z> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:412> * <var:i> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:12> * <var:z> + <nat:214> * <var:P> + <nat:120> * <var:p> + <nat:426> * <var:f> + <nat:288> * <var:T> + <nat:50> * <var:h> + <nat:108> * <var:A> + <nat:412> * <var:i> + <nat:240> * <var:t> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . auto . Qed . 