\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Assuming some positive integers $ <var:n> $ , $ <var:L> $ , $ <var:I> $ , $ <var:W> $ , $ <var:d> $ , $ <var:J> $ , $ <var:S> $ , $ <var:j> $ , and $ <var:r> $ $ <var:d> * <nat:404> + <nat:66> * <var:n> + <var:j> * <nat:56> + <var:W> * <nat:260> + <var:S> * <nat:184> + <var:L> * <nat:174> + <var:J> * <nat:348> + <nat:294> * <var:r> + <nat:295> + <nat:204> * <var:I> $ is odd . \end{theorem} \begin{proof} We demonstrate the sum $ <var:n> <nat:66> + <var:d> <nat:404> + <var:S> <nat:184> + <nat:295> + <nat:260> <var:W> + <var:J> <nat:348> + <nat:294> <var:r> + <nat:204> <var:I> + <var:L> <nat:174> + <nat:56> <var:j> $ will be odd . Observe the pairs $ <nat:56> \times <var:j> $ , $ <var:J> \times <nat:348> $ , $ <var:r> \times <nat:294> $ , $ <var:S> \times <nat:184> $ , $ <nat:404> \times <var:d> $ , $ <nat:204> \times <var:I> $ , and $ <nat:66> \times <var:n> $ must be even elements of $ \mathbb{N} $ . Furthermore , $ <var:L> \times <nat:174> $ is even because the multiplication of an even natural number and an arbitrary element of $ \mathbb{Z}^+ $ is guaranteed to be by its very nature an even positive integer . The pair $ <nat:260> \times <var:W> $ is clearly an even natural . Recall that the addition of an even number in $ \mathbb{N} $ and an odd number in $ \mathbb{N} $ will be an odd whole number . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:n> <var:L> <var:I> <var:W> <var:d> <var:J> <var:S> <var:j> <var:r> : nat , Nat . odd ( <nat:404> * <var:d> + <nat:66> * <var:n> + <nat:56> * <var:j> + <nat:260> * <var:W> + <nat:184> * <var:S> + <nat:174> * <var:L> + <nat:348> * <var:J> + <nat:294> * <var:r> + <nat:204> * <var:I> + <nat:295> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:56> * <var:j> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:348> * <var:J> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:294> * <var:r> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:184> * <var:S> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:404> * <var:d> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:204> * <var:I> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:66> * <var:n> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:174> * <var:L> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:260> * <var:W> ) = true ) . { rewrite Nat . even_mul . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 