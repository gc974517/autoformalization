\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:468> \times <var:b> + <nat:344> \times <var:c> + <nat:482> \times <var:D> + <nat:384> \times <var:C> + <nat:129> + <nat:150> \times <var:R> + <var:e> \times <nat:270> + <var:X> \times <nat:278> + <nat:458> \times <var:Z> + <nat:144> \times <var:H> + <nat:164> \times <var:O> $ is guaranteed to be odd given any positive terms $ <var:R> $ , $ <var:X> $ , $ <var:O> $ , $ <var:b> $ , $ <var:c> $ , $ <var:D> $ , $ <var:e> $ , $ <var:C> $ , $ <var:Z> $ , and $ <var:H> $ . \end{theorem} \begin{proof} We demonstrate our theorem is proven . Notice the coefficients $ <nat:150> $ and moreover $ <nat:344> $ are even elements of $ \mathbb{Z}^+ $ Take note that the natural numbers $ <nat:458> $ , $ <nat:144> $ , plus $ <nat:278> $ are known as even integers What's more , observe the positive integers $ <nat:164> $ , $ <nat:482> $ , $ <nat:270> $ , and also $ <nat:384> $ are known as even Further , the coefficient $ <nat:468> $ is clearly an even element of $ \mathbb{N} $ Take note that the summing between an even element of $ \mathbb{Z}^+ $ with an odd element of $ \mathbb{N} $ must be odd , as well as we know that multiplying of an even whole number with any positive integer must be even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:R> <var:X> <var:O> <var:b> <var:c> <var:D> <var:e> <var:C> <var:Z> <var:H> : nat , Nat . odd ( <nat:468> * <var:b> + <nat:344> * <var:c> + <nat:482> * <var:D> + <nat:384> * <var:C> + <nat:150> * <var:R> + <nat:270> * <var:e> + <nat:278> * <var:X> + <nat:458> * <var:Z> + <nat:144> * <var:H> + <nat:164> * <var:O> + <nat:129> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:150> = true ) . { auto . } assert ( <genH> : Nat . even <nat:344> = true ) . { auto . } assert ( <genH> : Nat . even <nat:458> = true ) . { auto . } assert ( <genH> : Nat . even <nat:144> = true ) . { auto . } assert ( <genH> : Nat . even <nat:278> = true ) . { auto . } assert ( <genH> : Nat . even <nat:164> = true ) . { auto . } assert ( <genH> : Nat . even <nat:482> = true ) . { auto . } assert ( <genH> : Nat . even <nat:270> = true ) . { auto . } assert ( <genH> : Nat . even <nat:384> = true ) . { auto . } assert ( <genH> : Nat . even <nat:468> = true ) . { auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . repeat rewrite Nat . even_mul . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 