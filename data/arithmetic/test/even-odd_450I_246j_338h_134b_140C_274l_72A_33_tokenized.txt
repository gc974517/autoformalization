\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Taking all variables $ <var:A> $ , $ <var:h> $ , $ <var:b> $ , $ <var:C> $ , $ <var:j> $ , $ <var:l> $ , and $ <var:I> $ the formula $ <nat:450> \times <var:I> + <nat:246> \times <var:j> + <nat:338> \times <var:h> + <nat:33> + <var:C> \times <nat:140> + <nat:134> \times <var:b> + <nat:72> \times <var:A> + <nat:274> \times <var:l> $ is guaranteed to be odd . \end{theorem} \begin{proof} Our lemma must be true from the fact $ <nat:450> \cdot <var:I> + <var:j> \cdot <nat:246> + <var:h> \cdot <nat:338> + <var:b> \cdot <nat:134> + <var:C> \cdot <nat:140> + <var:l> \cdot <nat:274> + <var:A> \cdot <nat:72> $ is guaranteed to be even . Take note that multiplying between an even number in $ \mathbb{N} $ with an arbitrary number will be even . Notice the whole number $ <nat:246> $ is even Further , we know the positive integers $ <nat:338> $ , $ <nat:274> $ , $ <nat:72> $ , $ <nat:450> $ , as well as $ <nat:134> $ are obviously even On top of this , the number $ <nat:140> $ is guaranteed to be even As a consequence that the addition between even natural numbers and even elements of $ \mathbb{Z}^+ $ will be even , The totaling between even naturals concurrently and an odd natural number will be an odd element of $ \mathbb{N} $ . Therefore , the lemma must be true . Notice $ <nat:33> $ is known as odd . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:A> <var:h> <var:b> <var:C> <var:j> <var:l> <var:I> : nat , Nat . odd ( <nat:450> * <var:I> + <nat:246> * <var:j> + <nat:338> * <var:h> + <nat:140> * <var:C> + <nat:134> * <var:b> + <nat:72> * <var:A> + <nat:274> * <var:l> + <nat:33> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:246> = true ) . { auto . } assert ( <genH> : Nat . even <nat:338> = true ) . { auto . } assert ( <genH> : Nat . even <nat:274> = true ) . { auto . } assert ( <genH> : Nat . even <nat:72> = true ) . { auto . } assert ( <genH> : Nat . even <nat:450> = true ) . { auto . } assert ( <genH> : Nat . even <nat:134> = true ) . { auto . } assert ( <genH> : Nat . even <nat:140> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:450> * <var:I> + <nat:246> * <var:j> + <nat:338> * <var:h> + <nat:140> * <var:C> + <nat:134> * <var:b> + <nat:72> * <var:A> + <nat:274> * <var:l> ) = true ) . { repeat rewrite Nat . even_add . repeat rewrite Nat . even_mul . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . assert ( <genH> : Nat . odd <nat:33> = true ) . { auto . } rewrite <- Nat . negb_even . rewrite <genH> . rewrite <genH> . auto . Qed . 