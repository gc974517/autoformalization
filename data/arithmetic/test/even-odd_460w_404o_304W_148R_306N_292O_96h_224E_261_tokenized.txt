\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:E> <nat:224> + <nat:261> + <var:h> <nat:96> + <var:w> <nat:460> + <nat:304> <var:W> + <var:o> <nat:404> + <nat:148> <var:R> + <nat:292> <var:O> + <nat:306> <var:N> $ is guaranteed to be odd using all natural numbers $ <var:R> $ , $ <var:W> $ , $ <var:o> $ , $ <var:N> $ , $ <var:h> $ , $ <var:w> $ , $ <var:O> $ , and $ <var:E> $ . \end{theorem} \begin{proof} The sum $ <var:w> \cdot <nat:460> + <nat:404> \cdot <var:o> + <var:W> \cdot <nat:304> + <var:R> \cdot <nat:148> + <nat:306> \cdot <var:N> + <nat:292> \cdot <var:O> + <nat:96> \cdot <var:h> + <var:E> \cdot <nat:224> $ is guaranteed to be even , from the knowledge the addition of an even number in $ \mathbb{N} $ with an even number will be even . Take note the numbers $ <nat:460> $ , $ <nat:404> $ , $ <nat:304> $ , $ <nat:148> $ , $ <nat:306> $ , $ <nat:292> $ , $ <nat:96> $ , as well as $ <nat:224> $ are known as even . Thus , the terms $ <var:w> \cdot <nat:460> $ , $ <nat:404> \cdot <var:o> $ , $ <nat:304> \cdot <var:W> $ , $ <nat:148> \cdot <var:R> $ , $ <nat:306> \cdot <var:N> $ , $ <var:O> \cdot <nat:292> $ , $ <var:h> \cdot <nat:96> $ , as well as $ <nat:224> \cdot <var:E> $ will be even also . in addition to by reason that taking the product between even positive integers and a whole number will be even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:R> <var:W> <var:o> <var:N> <var:h> <var:w> <var:O> <var:E> : nat , Nat . odd ( <nat:224> * <var:E> + <nat:96> * <var:h> + <nat:460> * <var:w> + <nat:304> * <var:W> + <nat:404> * <var:o> + <nat:148> * <var:R> + <nat:292> * <var:O> + <nat:306> * <var:N> + <nat:261> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:460> = true ) . { auto . } assert ( <genH> : Nat . even <nat:404> = true ) . { auto . } assert ( <genH> : Nat . even <nat:304> = true ) . { auto . } assert ( <genH> : Nat . even <nat:148> = true ) . { auto . } assert ( <genH> : Nat . even <nat:306> = true ) . { auto . } assert ( <genH> : Nat . even <nat:292> = true ) . { auto . } assert ( <genH> : Nat . even <nat:96> = true ) . { auto . } assert ( <genH> : Nat . even <nat:224> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:460> * <var:w> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:404> * <var:o> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:304> * <var:W> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:148> * <var:R> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:306> * <var:N> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:292> * <var:O> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:96> * <var:h> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:224> * <var:E> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:224> * <var:E> + <nat:96> * <var:h> + <nat:460> * <var:w> + <nat:304> * <var:W> + <nat:404> * <var:o> + <nat:148> * <var:R> + <nat:292> * <var:O> + <nat:306> * <var:N> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . auto . Qed . 