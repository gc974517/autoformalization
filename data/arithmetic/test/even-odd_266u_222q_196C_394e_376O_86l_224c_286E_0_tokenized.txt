\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:0> + <var:O> <nat:376> + <nat:224> <var:c> + <var:l> <nat:86> + <var:e> <nat:394> + <nat:222> <var:q> + <nat:286> <var:E> + <nat:266> <var:u> + <nat:196> <var:C> $ must be even assuming whole numbers $ <var:c> $ , $ <var:e> $ , $ <var:l> $ , $ <var:u> $ , $ <var:C> $ , $ <var:O> $ , $ <var:E> $ , and $ <var:q> $ . \end{theorem} \begin{proof} We prove $ <var:E> <nat:286> + <var:u> <nat:266> + <nat:224> <var:c> + <var:O> <nat:376> + <nat:196> <var:C> + <nat:0> + <nat:394> <var:e> + <var:q> <nat:222> + <var:l> <nat:86> $ is trivially even because the formula $ <var:C> <nat:196> + <nat:222> <var:q> + <nat:86> <var:l> + <var:E> <nat:286> + <nat:266> <var:u> + <nat:224> <var:c> + <nat:394> <var:e> + <nat:376> <var:O> $ is even . What's more , notice that the whole numbers $ <nat:196> $ , $ <nat:222> $ , $ <nat:86> $ , $ <nat:286> $ , $ <nat:266> $ , $ <nat:224> $ , $ <nat:394> $ , as well as $ <nat:376> $ are known as even integers . In consequence , the terms $ <nat:196> * <var:C> $ , $ <nat:222> * <var:q> $ , $ <var:l> * <nat:86> $ , $ <var:E> * <nat:286> $ , $ <var:u> * <nat:266> $ , $ <nat:224> * <var:c> $ , $ <nat:394> * <var:e> $ , additionally $ <nat:376> * <var:O> $ will be even additionally . The expression $ <nat:266> \times <var:u> + <nat:222> \times <var:q> + <nat:196> \times <var:C> + <var:e> \times <nat:394> + <var:O> \times <nat:376> + <var:l> \times <nat:86> + <var:c> \times <nat:224> + <var:E> \times <nat:286> $ will be even since the adding between even numbers in $ \mathbb{Z}^+ $ with an even element of $ \mathbb{Z}^+ $ is in itself an even number in $ \mathbb{Z}^+ $ as well as because the product of an even element of $ \mathbb{Z}^+ $ with a number in $ \mathbb{Z}^+ $ is guaranteed to be an even element of $ \mathbb{N} $ . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:c> <var:e> <var:l> <var:u> <var:C> <var:O> <var:E> <var:q> : nat , Nat . even ( <nat:376> * <var:O> + <nat:224> * <var:c> + <nat:86> * <var:l> + <nat:394> * <var:e> + <nat:222> * <var:q> + <nat:286> * <var:E> + <nat:266> * <var:u> + <nat:196> * <var:C> + <nat:0> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:196> = true ) . { auto . } assert ( <genH> : Nat . even <nat:222> = true ) . { auto . } assert ( <genH> : Nat . even <nat:86> = true ) . { auto . } assert ( <genH> : Nat . even <nat:286> = true ) . { auto . } assert ( <genH> : Nat . even <nat:266> = true ) . { auto . } assert ( <genH> : Nat . even <nat:224> = true ) . { auto . } assert ( <genH> : Nat . even <nat:394> = true ) . { auto . } assert ( <genH> : Nat . even <nat:376> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:196> * <var:C> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:222> * <var:q> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:86> * <var:l> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:286> * <var:E> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:266> * <var:u> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:224> * <var:c> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:394> * <var:e> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:376> * <var:O> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:376> * <var:O> + <nat:224> * <var:c> + <nat:86> * <var:l> + <nat:394> * <var:e> + <nat:222> * <var:q> + <nat:286> * <var:E> + <nat:266> * <var:u> + <nat:196> * <var:C> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . even_add . rewrite <genH> . auto . Qed . 