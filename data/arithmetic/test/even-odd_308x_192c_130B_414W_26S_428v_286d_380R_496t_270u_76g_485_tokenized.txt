\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:308> * <var:x> + <nat:485> + <nat:192> * <var:c> + <nat:130> * <var:B> + <var:W> * <nat:414> + <nat:26> * <var:S> + <var:v> * <nat:428> + <nat:286> * <var:d> + <var:R> * <nat:380> + <nat:496> * <var:t> + <nat:270> * <var:u> + <var:g> * <nat:76> $ must be odd given all natural terms $ <var:d> $ , $ <var:t> $ , $ <var:x> $ , $ <var:B> $ , $ <var:g> $ , $ <var:u> $ , $ <var:W> $ , $ <var:v> $ , $ <var:R> $ , $ <var:S> $ , and $ <var:c> $ . \end{theorem} \begin{proof} Remember that the integers $ <nat:428> $ , $ <nat:76> $ , $ <nat:414> $ , $ <nat:380> $ , $ <nat:270> $ , $ <nat:308> $ , $ <nat:130> $ , $ <nat:192> $ , as well as $ <nat:286> $ will be even numbers Additionally , observe the whole number $ <nat:496> $ is clearly an even natural number Remember that the integer $ <nat:26> $ is even Recall $ <nat:485> $ is clearly odd . The product between even elements of $ \mathbb{Z}^+ $ is guaranteed to be even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:d> <var:t> <var:x> <var:B> <var:g> <var:u> <var:W> <var:v> <var:R> <var:S> <var:c> : nat , Nat . odd ( <nat:308> * <var:x> + <nat:192> * <var:c> + <nat:130> * <var:B> + <nat:414> * <var:W> + <nat:26> * <var:S> + <nat:428> * <var:v> + <nat:286> * <var:d> + <nat:380> * <var:R> + <nat:496> * <var:t> + <nat:270> * <var:u> + <nat:76> * <var:g> + <nat:485> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:428> = true ) . { auto . } assert ( <genH> : Nat . even <nat:76> = true ) . { auto . } assert ( <genH> : Nat . even <nat:414> = true ) . { auto . } assert ( <genH> : Nat . even <nat:380> = true ) . { auto . } assert ( <genH> : Nat . even <nat:270> = true ) . { auto . } assert ( <genH> : Nat . even <nat:308> = true ) . { auto . } assert ( <genH> : Nat . even <nat:130> = true ) . { auto . } assert ( <genH> : Nat . even <nat:192> = true ) . { auto . } assert ( <genH> : Nat . even <nat:286> = true ) . { auto . } assert ( <genH> : Nat . even <nat:496> = true ) . { auto . } assert ( <genH> : Nat . even <nat:26> = true ) . { auto . } assert ( <genH> : Nat . odd <nat:485> = true ) . { auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . repeat rewrite Nat . even_mul . rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 