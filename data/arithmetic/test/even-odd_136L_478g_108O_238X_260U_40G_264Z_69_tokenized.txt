\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:136> <var:L> + <var:g> <nat:478> + <nat:108> <var:O> + <var:X> <nat:238> + <var:U> <nat:260> + <nat:40> <var:G> + <nat:69> + <var:Z> <nat:264> $ is guaranteed to be odd for any $ <var:g> $ , $ <var:U> $ , $ <var:G> $ , $ <var:L> $ , $ <var:Z> $ , $ <var:X> $ , and $ <var:O> \in \mathbb{N} $ . \end{theorem} \begin{proof} The pairs $ <nat:260> * <var:U> $ plus $ <nat:108> * <var:O> $ are obviously even natural numbers . Remember the products $ <var:G> * <nat:40> $ and likewise $ <var:X> * <nat:238> $ are known to be even positive integers from the fact taking the product between an even whole number with an arbitrary integer is guaranteed to be instrinsically an even element of $ \mathbb{N} $ . Additionally , take note the term $ <nat:478> * <var:g> $ is clearly an even natural number . Furthermore , the term $ <nat:264> * <var:Z> $ is clearly an even element of $ \mathbb{N} $ . Likewise , remember that the term $ <nat:136> * <var:L> $ is guaranteed to be an even positive integer . Take note $ <nat:69> $ is clearly an odd integer . Observe that the totaling between even elements of $ \mathbb{Z}^+ $ and an odd number is guaranteed to be odd . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:g> <var:U> <var:G> <var:L> <var:Z> <var:X> <var:O> : nat , Nat . odd ( <nat:136> * <var:L> + <nat:478> * <var:g> + <nat:108> * <var:O> + <nat:238> * <var:X> + <nat:260> * <var:U> + <nat:40> * <var:G> + <nat:264> * <var:Z> + <nat:69> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:260> * <var:U> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:108> * <var:O> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:40> * <var:G> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:238> * <var:X> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:478> * <var:g> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:264> * <var:Z> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:136> * <var:L> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . odd <nat:69> = true ) . { auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 