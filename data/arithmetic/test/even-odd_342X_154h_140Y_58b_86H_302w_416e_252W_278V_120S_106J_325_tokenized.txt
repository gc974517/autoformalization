\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:342> <var:X> + <var:h> <nat:154> + <var:Y> <nat:140> + <nat:325> + <nat:58> <var:b> + <var:H> <nat:86> + <var:w> <nat:302> + <var:e> <nat:416> + <var:W> <nat:252> + <var:V> <nat:278> + <nat:120> <var:S> + <nat:106> <var:J> $ must be odd using all terms $ <var:X> $ , $ <var:h> $ , $ <var:w> $ , $ <var:J> $ , $ <var:e> $ , $ <var:b> $ , $ <var:S> $ , $ <var:W> $ , $ <var:H> $ , $ <var:V> $ , and $ <var:Y> $ . \end{theorem} \begin{proof} Observe that the integers $ <nat:252> $ plus $ <nat:278> $ are known as even The natural numbers $ <nat:416> $ , $ <nat:342> $ , $ <nat:58> $ , $ <nat:86> $ , $ <nat:154> $ , $ <nat:140> $ , and $ <nat:106> $ are obviously even The number $ <nat:120> $ is an even natural The number $ <nat:302> $ is even Observe that $ <nat:325> $ is guaranteed to be an odd number in $ \mathbb{Z}^+ $ . Remember the summing of even natural numbers together with an odd number in $ \mathbb{Z}^+ $ will be an odd number in $ \mathbb{Z}^+ $ . Recall the multiplication of an even natural number with any number in $ \mathbb{N} $ must be by itself an even number in $ \mathbb{N} $ . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:X> <var:h> <var:w> <var:J> <var:e> <var:b> <var:S> <var:W> <var:H> <var:V> <var:Y> : nat , Nat . odd ( <nat:342> * <var:X> + <nat:154> * <var:h> + <nat:140> * <var:Y> + <nat:58> * <var:b> + <nat:86> * <var:H> + <nat:302> * <var:w> + <nat:416> * <var:e> + <nat:252> * <var:W> + <nat:278> * <var:V> + <nat:120> * <var:S> + <nat:106> * <var:J> + <nat:325> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:252> = true ) . { auto . } assert ( <genH> : Nat . even <nat:278> = true ) . { auto . } assert ( <genH> : Nat . even <nat:416> = true ) . { auto . } assert ( <genH> : Nat . even <nat:342> = true ) . { auto . } assert ( <genH> : Nat . even <nat:58> = true ) . { auto . } assert ( <genH> : Nat . even <nat:86> = true ) . { auto . } assert ( <genH> : Nat . even <nat:154> = true ) . { auto . } assert ( <genH> : Nat . even <nat:140> = true ) . { auto . } assert ( <genH> : Nat . even <nat:106> = true ) . { auto . } assert ( <genH> : Nat . even <nat:120> = true ) . { auto . } assert ( <genH> : Nat . even <nat:302> = true ) . { auto . } assert ( <genH> : Nat . odd <nat:325> = true ) . { auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . repeat rewrite Nat . even_mul . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 