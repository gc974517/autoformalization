\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Using some $ <var:T> $ , $ <var:F> $ , $ <var:V> $ , $ <var:N> $ , $ <var:r> $ , $ <var:i> $ , $ <var:y> $ , $ <var:o> $ , $ <var:Z> $ , and $ <var:X> \in \mathbb{Z}^+ $ the expression $ <var:Z> <nat:450> + <nat:298> <var:T> + <nat:180> <var:X> + <nat:312> <var:y> + <var:V> <nat:204> + <nat:448> + <var:o> <nat:384> + <var:F> <nat:10> + <nat:356> <var:i> + <var:r> <nat:422> + <nat:424> <var:N> $ is even . \end{theorem} \begin{proof} Remember that the pairs $ <var:Z> <nat:450> $ , $ <var:V> <nat:204> $ , $ <var:F> <nat:10> $ , $ <var:o> <nat:384> $ , plus $ <nat:356> <var:i> $ are guaranteed to be even elements of $ \mathbb{Z}^+ $ . This claim is true because the product between an even number in $ \mathbb{N} $ and a positive integer is guaranteed to be obviously an even natural . Furthermore , notice the product $ <var:X> <nat:180> $ is clearly even . The products $ <nat:312> <var:y> $ , $ <nat:424> <var:N> $ , and $ <nat:422> <var:r> $ are even . In addition , $ <var:T> <nat:298> $ is obviously an even number . This claim must be true by reason that multiplying of an even natural and a positive integer will be even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:T> <var:F> <var:V> <var:N> <var:r> <var:i> <var:y> <var:o> <var:Z> <var:X> : nat , Nat . even ( <nat:450> * <var:Z> + <nat:298> * <var:T> + <nat:180> * <var:X> + <nat:312> * <var:y> + <nat:204> * <var:V> + <nat:384> * <var:o> + <nat:10> * <var:F> + <nat:356> * <var:i> + <nat:422> * <var:r> + <nat:424> * <var:N> + <nat:448> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:450> * <var:Z> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:204> * <var:V> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:10> * <var:F> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:384> * <var:o> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:356> * <var:i> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:180> * <var:X> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:312> * <var:y> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:424> * <var:N> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:422> * <var:r> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:298> * <var:T> ) = true ) . { rewrite Nat . even_mul . auto . } repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 