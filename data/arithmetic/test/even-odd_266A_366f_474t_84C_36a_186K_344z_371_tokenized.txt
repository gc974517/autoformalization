\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Using variables $ <var:z> $ , $ <var:C> $ , $ <var:f> $ , $ <var:a> $ , $ <var:A> $ , $ <var:t> $ , and $ <var:K> $ the sum $ <var:f> \times <nat:366> + <nat:474> \times <var:t> + <var:A> \times <nat:266> + <var:a> \times <nat:36> + <nat:344> \times <var:z> + <nat:186> \times <var:K> + <nat:371> + <var:C> \times <nat:84> $ will be odd . \end{theorem} \begin{proof} The term $ <var:a> <nat:36> $ is guaranteed to be even as a consequence that the leading term $ <nat:36> $ is known to be an even element of $ \mathbb{N} $ . In addition , the natural numbers $ <nat:186> $ , $ <nat:266> $ , $ <nat:344> $ , $ <nat:474> $ , and also $ <nat:84> $ are trivially even naturals . Therefore , the products $ <nat:186> <var:K> $ , $ <var:A> <nat:266> $ , $ <nat:344> <var:z> $ , $ <var:t> <nat:474> $ , in addition to $ <var:C> <nat:84> $ is guaranteed to be even at the same time . The term $ <nat:366> <var:f> $ is known to be even because the product between an even number in $ \mathbb{N} $ and some natural is guaranteed to be even , and is proven from the knowledge the integer $ <nat:366> $ is itself an even whole number . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:z> <var:C> <var:f> <var:a> <var:A> <var:t> <var:K> : nat , Nat . odd ( <nat:366> * <var:f> + <nat:474> * <var:t> + <nat:266> * <var:A> + <nat:36> * <var:a> + <nat:344> * <var:z> + <nat:186> * <var:K> + <nat:84> * <var:C> + <nat:371> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:36> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:36> * <var:a> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:186> = true ) . { auto . } assert ( <genH> : Nat . even <nat:266> = true ) . { auto . } assert ( <genH> : Nat . even <nat:344> = true ) . { auto . } assert ( <genH> : Nat . even <nat:474> = true ) . { auto . } assert ( <genH> : Nat . even <nat:84> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:186> * <var:K> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:266> * <var:A> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:344> * <var:z> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:474> * <var:t> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:84> * <var:C> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:366> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:366> * <var:f> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 