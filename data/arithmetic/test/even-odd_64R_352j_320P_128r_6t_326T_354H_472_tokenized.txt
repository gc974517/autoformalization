\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:64> * <var:R> + <nat:472> + <var:t> * <nat:6> + <var:H> * <nat:354> + <var:j> * <nat:352> + <nat:320> * <var:P> + <var:T> * <nat:326> + <var:r> * <nat:128> $ is guaranteed to be even . \end{theorem} \begin{proof} It can be shown that $ <var:R> * <nat:64> + <var:j> * <nat:352> + <nat:320> * <var:P> + <var:r> * <nat:128> + <nat:6> * <var:t> + <nat:472> + <nat:326> * <var:T> + <var:H> * <nat:354> $ is even . See that the adding between an even number with an even integer is guaranteed to be even . We know the terms $ <nat:352> \times <var:j> $ , $ <nat:64> \times <var:R> $ , $ <nat:6> \times <var:t> $ , $ <nat:354> \times <var:H> $ , $ <var:r> \times <nat:128> $ , plus $ <var:P> \times <nat:320> $ are guaranteed to be even . Furthermore , remember the product $ <nat:326> \times <var:T> $ is trivially even . This must be true as a consequence that the product between an even element of $ \mathbb{N} $ and an arbitrary integer is an even natural number . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:R> <var:t> <var:H> <var:j> <var:P> <var:T> <var:r> : nat , Nat . even ( <nat:64> * <var:R> + <nat:6> * <var:t> + <nat:354> * <var:H> + <nat:352> * <var:j> + <nat:320> * <var:P> + <nat:326> * <var:T> + <nat:128> * <var:r> + <nat:472> ) = true . Proof . intros . repeat rewrite Nat . even_add . assert ( <genH> : Nat . even ( <nat:352> * <var:j> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:64> * <var:R> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:6> * <var:t> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:354> * <var:H> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:128> * <var:r> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:320> * <var:P> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:326> * <var:T> ) = true ) . { rewrite Nat . even_mul . auto . } rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 