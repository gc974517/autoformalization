\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:426> \times <var:t> + <nat:82> \times <var:L> + <nat:94> + <var:e> \times <nat:302> + <var:Q> \times <nat:238> + <var:R> \times <nat:68> + <nat:60> \times <var:Z> $ must be even given any positive integers $ <var:L> $ , $ <var:e> $ , $ <var:Z> $ , $ <var:Q> $ , $ <var:t> $ , and $ <var:R> $ . \end{theorem} \begin{proof} It can be checked that that the expression $ <nat:94> + <var:Q> \cdot <nat:238> + <nat:60> \cdot <var:Z> + <var:e> \cdot <nat:302> + <nat:68> \cdot <var:R> + <var:t> \cdot <nat:426> + <var:L> \cdot <nat:82> $ is even since the expression $ <nat:82> \cdot <var:L> + <nat:238> \cdot <var:Q> + <var:R> \cdot <nat:68> + <var:e> \cdot <nat:302> + <nat:426> \cdot <var:t> + <var:Z> \cdot <nat:60> $ is guaranteed to be even . Recall that the pairs $ <nat:82> <var:L> $ , $ <nat:238> <var:Q> $ , and likewise $ <nat:426> <var:t> $ will be even because the multiplication between an even natural with some integer is guaranteed to be an even natural number . Likewise , observe that the pairs $ <nat:60> <var:Z> $ additionally $ <var:R> <nat:68> $ are known to be even . The term $ <var:e> <nat:302> $ is obviously an even natural number . This claim is proven by reason that the product between an even number in $ \mathbb{Z}^+ $ and an arbitrary element of $ \mathbb{N} $ is even . The formula $ <var:Q> <nat:238> + <var:L> <nat:82> + <nat:60> <var:Z> + <nat:68> <var:R> + <nat:426> <var:t> + <var:e> <nat:302> $ is by definition even as a consequence that the multiplication between an even positive integer and an arbitrary natural is guaranteed to be an even element of $ \mathbb{N} $ . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:L> <var:e> <var:Z> <var:Q> <var:t> <var:R> : nat , Nat . even ( <nat:426> * <var:t> + <nat:82> * <var:L> + <nat:302> * <var:e> + <nat:238> * <var:Q> + <nat:68> * <var:R> + <nat:60> * <var:Z> + <nat:94> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:82> * <var:L> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:238> * <var:Q> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:426> * <var:t> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:60> * <var:Z> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:68> * <var:R> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:302> * <var:e> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:426> * <var:t> + <nat:82> * <var:L> + <nat:302> * <var:e> + <nat:238> * <var:Q> + <nat:68> * <var:R> + <nat:60> * <var:Z> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . even_add . rewrite <genH> . auto . Qed . 