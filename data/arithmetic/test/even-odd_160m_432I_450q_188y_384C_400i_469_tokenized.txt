\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:m> \times <nat:160> + <var:i> \times <nat:400> + <nat:432> \times <var:I> + <nat:450> \times <var:q> + <var:y> \times <nat:188> + <nat:469> + <nat:384> \times <var:C> $ will be odd . \end{theorem} \begin{proof} We use the assumption the knowledge $ <var:m> \times <nat:160> + <var:I> \times <nat:432> + <var:q> \times <nat:450> + <nat:188> \times <var:y> + <var:C> \times <nat:384> + <var:i> \times <nat:400> $ is known as even . Remember the whole numbers $ <nat:160> $ additionally $ <nat:188> $ are known as even elements of $ \mathbb{Z}^+ $ Take note that the coefficient $ <nat:432> $ is known to be even Building on , see that the number $ <nat:400> $ is known to be even Likewise , the number $ <nat:384> $ is even The positive integer $ <nat:450> $ is clearly even From the knowledge the summing between an even number in $ \mathbb{N} $ and even naturals must be even , plus by reason that multiplying between even integers and an arbitrary element of $ \mathbb{N} $ must be even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:m> <var:i> <var:I> <var:q> <var:y> <var:C> : nat , Nat . odd ( <nat:160> * <var:m> + <nat:400> * <var:i> + <nat:432> * <var:I> + <nat:450> * <var:q> + <nat:188> * <var:y> + <nat:384> * <var:C> + <nat:469> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:160> = true ) . { auto . } assert ( <genH> : Nat . even <nat:188> = true ) . { auto . } assert ( <genH> : Nat . even <nat:432> = true ) . { auto . } assert ( <genH> : Nat . even <nat:400> = true ) . { auto . } assert ( <genH> : Nat . even <nat:384> = true ) . { auto . } assert ( <genH> : Nat . even <nat:450> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:160> * <var:m> + <nat:400> * <var:i> + <nat:432> * <var:I> + <nat:450> * <var:q> + <nat:188> * <var:y> + <nat:384> * <var:C> ) = true ) . { repeat rewrite Nat . even_add . repeat rewrite Nat . even_mul . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . auto . Qed . 