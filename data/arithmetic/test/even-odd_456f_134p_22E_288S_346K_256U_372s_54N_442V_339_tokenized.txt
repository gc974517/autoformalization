\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:339> + <nat:456> \cdot <var:f> + <nat:134> \cdot <var:p> + <var:E> \cdot <nat:22> + <var:S> \cdot <nat:288> + <nat:346> \cdot <var:K> + <nat:256> \cdot <var:U> + <nat:372> \cdot <var:s> + <nat:54> \cdot <var:N> + <var:V> \cdot <nat:442> $ is odd . \end{theorem} \begin{proof} It can be demonstrated that this result must be true . Take note $ <nat:339> $ is odd . The terms $ <var:V> <nat:442> $ and also $ <var:E> <nat:22> $ are trivially even natural numbers . Take note the term $ <var:f> <nat:456> $ is guaranteed to be even . This fact is true because multiplying between an even number with an arbitrary positive integer must be an even number . The terms $ <nat:372> <var:s> $ , $ <nat:256> <var:U> $ , $ <var:S> <nat:288> $ , $ <nat:346> <var:K> $ , and also $ <var:p> <nat:134> $ are clearly even numbers in $ \mathbb{Z}^+ $ . This fact is proven since the product between an even element of $ \mathbb{N} $ and an arbitrary number will be even . Take note that the term $ <var:N> <nat:54> $ is trivially an even number in $ \mathbb{Z}^+ $ since multiplying of an even number in $ \mathbb{N} $ and any element of $ \mathbb{N} $ will be even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:f> <var:p> <var:E> <var:S> <var:K> <var:U> <var:s> <var:N> <var:V> : nat , Nat . odd ( <nat:456> * <var:f> + <nat:134> * <var:p> + <nat:22> * <var:E> + <nat:288> * <var:S> + <nat:346> * <var:K> + <nat:256> * <var:U> + <nat:372> * <var:s> + <nat:54> * <var:N> + <nat:442> * <var:V> + <nat:339> ) = true . Proof . intros . assert ( <genH> : Nat . odd <nat:339> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:442> * <var:V> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:22> * <var:E> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:456> * <var:f> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:372> * <var:s> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:256> * <var:U> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:288> * <var:S> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:346> * <var:K> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:134> * <var:p> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:54> * <var:N> ) = true ) . { rewrite Nat . even_mul . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 