\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:q> \times <nat:422> + <nat:467> + <nat:394> \times <var:b> + <nat:244> \times <var:J> + <var:Y> \times <nat:128> + <var:H> \times <nat:138> + <nat:266> \times <var:A> + <nat:140> \times <var:h> + <nat:454> \times <var:f> + <nat:78> \times <var:z> + <nat:302> \times <var:m> + <var:S> \times <nat:150> $ is odd using any variables $ <var:Y> $ , $ <var:m> $ , $ <var:z> $ , $ <var:A> $ , $ <var:b> $ , $ <var:S> $ , $ <var:H> $ , $ <var:J> $ , $ <var:q> $ , $ <var:f> $ , and $ <var:h> $ . \end{theorem} \begin{proof} Notice that the totaling between an even natural number and an odd whole number is guaranteed to be odd . Remember the leading terms $ <nat:140> $ , $ <nat:266> $ , and moreover $ <nat:138> $ are known to be even Take note the numbers $ <nat:302> $ , $ <nat:394> $ , $ <nat:150> $ , $ <nat:128> $ , and also $ <nat:78> $ are known to be even whole numbers Additionally , the integers $ <nat:454> $ and also $ <nat:244> $ must be even The coefficient $ <nat:422> $ is guaranteed to be even We justify this result is true . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:Y> <var:m> <var:z> <var:A> <var:b> <var:S> <var:H> <var:J> <var:q> <var:f> <var:h> : nat , Nat . odd ( <nat:422> * <var:q> + <nat:394> * <var:b> + <nat:244> * <var:J> + <nat:128> * <var:Y> + <nat:138> * <var:H> + <nat:266> * <var:A> + <nat:140> * <var:h> + <nat:454> * <var:f> + <nat:78> * <var:z> + <nat:302> * <var:m> + <nat:150> * <var:S> + <nat:467> ) = true . Proof . intros . rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . assert ( <genH> : Nat . even <nat:140> = true ) . { auto . } assert ( <genH> : Nat . even <nat:266> = true ) . { auto . } assert ( <genH> : Nat . even <nat:138> = true ) . { auto . } assert ( <genH> : Nat . even <nat:302> = true ) . { auto . } assert ( <genH> : Nat . even <nat:394> = true ) . { auto . } assert ( <genH> : Nat . even <nat:150> = true ) . { auto . } assert ( <genH> : Nat . even <nat:128> = true ) . { auto . } assert ( <genH> : Nat . even <nat:78> = true ) . { auto . } assert ( <genH> : Nat . even <nat:454> = true ) . { auto . } assert ( <genH> : Nat . even <nat:244> = true ) . { auto . } assert ( <genH> : Nat . even <nat:422> = true ) . { auto . } repeat rewrite Nat . even_mul . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 