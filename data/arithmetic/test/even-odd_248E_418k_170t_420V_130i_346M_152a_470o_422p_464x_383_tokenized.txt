\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:248> \times <var:E> + <var:k> \times <nat:418> + <var:t> \times <nat:170> + <var:V> \times <nat:420> + <var:i> \times <nat:130> + <nat:346> \times <var:M> + <nat:152> \times <var:a> + <var:o> \times <nat:470> + <var:p> \times <nat:422> + <nat:383> + <nat:464> \times <var:x> $ is guaranteed to be odd . \end{theorem} \begin{proof} We know that the whole numbers $ <nat:248> $ , $ <nat:418> $ , $ <nat:170> $ , $ <nat:420> $ , $ <nat:130> $ , $ <nat:346> $ , $ <nat:152> $ , $ <nat:470> $ , $ <nat:422> $ , additionally $ <nat:464> $ are known as even . Accordingly , the products $ <var:E> <nat:248> $ , $ <var:k> <nat:418> $ , $ <nat:170> <var:t> $ , $ <var:V> <nat:420> $ , $ <nat:130> <var:i> $ , $ <var:M> <nat:346> $ , $ <var:a> <nat:152> $ , $ <nat:470> <var:o> $ , $ <nat:422> <var:p> $ , and also $ <var:x> <nat:464> $ must be even too . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:E> <var:k> <var:t> <var:V> <var:i> <var:M> <var:a> <var:o> <var:p> <var:x> : nat , Nat . odd ( <nat:248> * <var:E> + <nat:418> * <var:k> + <nat:170> * <var:t> + <nat:420> * <var:V> + <nat:130> * <var:i> + <nat:346> * <var:M> + <nat:152> * <var:a> + <nat:470> * <var:o> + <nat:422> * <var:p> + <nat:464> * <var:x> + <nat:383> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:248> = true ) . { auto . } assert ( <genH> : Nat . even <nat:418> = true ) . { auto . } assert ( <genH> : Nat . even <nat:170> = true ) . { auto . } assert ( <genH> : Nat . even <nat:420> = true ) . { auto . } assert ( <genH> : Nat . even <nat:130> = true ) . { auto . } assert ( <genH> : Nat . even <nat:346> = true ) . { auto . } assert ( <genH> : Nat . even <nat:152> = true ) . { auto . } assert ( <genH> : Nat . even <nat:470> = true ) . { auto . } assert ( <genH> : Nat . even <nat:422> = true ) . { auto . } assert ( <genH> : Nat . even <nat:464> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:248> * <var:E> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:418> * <var:k> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:170> * <var:t> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:420> * <var:V> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:130> * <var:i> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:346> * <var:M> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:152> * <var:a> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:470> * <var:o> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:422> * <var:p> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:464> * <var:x> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 