\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:M> <nat:308> + <var:j> <nat:158> + <var:i> <nat:324> + <var:d> <nat:124> + <var:Y> <nat:106> + <nat:382> <var:s> + <var:k> <nat:234> + <nat:366> <var:n> + <nat:289> + <var:w> <nat:226> + <var:U> <nat:66> $ must be odd . \end{theorem} \begin{proof} Our proposition is proven by reason that $ <nat:158> \times <var:j> + <var:Y> \times <nat:106> + <nat:324> \times <var:i> + <nat:234> \times <var:k> + <nat:382> \times <var:s> + <nat:124> \times <var:d> + <var:n> \times <nat:366> + <var:U> \times <nat:66> + <var:w> \times <nat:226> + <nat:308> \times <var:M> $ is obviously even , since the product between even numbers in $ \mathbb{N} $ will be even . The natural numbers $ <nat:324> $ , $ <nat:66> $ , $ <nat:382> $ , $ <nat:308> $ , $ <nat:226> $ , and moreover $ <nat:366> $ are guaranteed to be even numbers in $ \mathbb{N} $ Recall that the integers $ <nat:106> $ in addition to $ <nat:234> $ are guaranteed to be even Notice that the leading term $ <nat:124> $ is trivially even Recall the natural number $ <nat:158> $ is guaranteed to be an even whole number \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:M> <var:j> <var:i> <var:d> <var:Y> <var:s> <var:k> <var:n> <var:w> <var:U> : nat , Nat . odd ( <nat:308> * <var:M> + <nat:158> * <var:j> + <nat:324> * <var:i> + <nat:124> * <var:d> + <nat:106> * <var:Y> + <nat:382> * <var:s> + <nat:234> * <var:k> + <nat:366> * <var:n> + <nat:226> * <var:w> + <nat:66> * <var:U> + <nat:289> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:324> = true ) . { auto . } assert ( <genH> : Nat . even <nat:66> = true ) . { auto . } assert ( <genH> : Nat . even <nat:382> = true ) . { auto . } assert ( <genH> : Nat . even <nat:308> = true ) . { auto . } assert ( <genH> : Nat . even <nat:226> = true ) . { auto . } assert ( <genH> : Nat . even <nat:366> = true ) . { auto . } assert ( <genH> : Nat . even <nat:106> = true ) . { auto . } assert ( <genH> : Nat . even <nat:234> = true ) . { auto . } assert ( <genH> : Nat . even <nat:124> = true ) . { auto . } assert ( <genH> : Nat . even <nat:158> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:308> * <var:M> + <nat:158> * <var:j> + <nat:324> * <var:i> + <nat:124> * <var:d> + <nat:106> * <var:Y> + <nat:382> * <var:s> + <nat:234> * <var:k> + <nat:366> * <var:n> + <nat:226> * <var:w> + <nat:66> * <var:U> ) = true ) . { repeat rewrite Nat . even_add . repeat rewrite Nat . even_mul . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . auto . Qed . 