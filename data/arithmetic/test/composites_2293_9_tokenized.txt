\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Supposing that we get $ <var:c> $ , $ <var:G> $ , $ <var:S> $ , $ <var:g> $ , $ <var:m> $ , $ <var:f> $ , $ <var:v> $ , $ <var:F> $ , and $ <var:s> \geq <nat:2> $ such that for $ <var:T> \in \mathbb{N} $ , $ <var:T> = <var:c> \cdot <var:m> \cdot <var:v> \cdot <var:S> \cdot <var:s> \cdot <var:f> \cdot <var:G> \cdot <var:g> \cdot <var:F> $ taking some integers $ <var:s> $ , $ <var:v> $ , $ <var:f> $ , $ <var:S> $ , $ <var:G> $ , $ <var:F> $ , $ <var:c> $ , $ <var:g> $ , $ <var:m> $ , then take as given that $ <var:T> $ is a <def:nine-composite> integer . Accordingly the integer <nat:21621600> is a <def:nine-composite> positive integer . \end{theorem} \begin{proof} Recall a <def:nine-composite> natural number is the product between numbers $ <var:G> $ , $ <var:S> $ , $ <var:c> $ , $ <var:m> $ , $ <var:v> $ , $ <var:g> $ , $ <var:F> $ , $ <var:s> $ , and $ <var:f> $ greater than or equivalent to <nat:2> . Observe that $ <var:s> \times <var:g> \times <var:G> \times <var:v> \times <var:m> \times <var:f> \times <var:S> \times <var:c> \times <var:F> = <nat:21621600> $ yields $ <var:F> = <nat:5> $ , $ <var:v> = <nat:13> $ , $ <var:c> = <nat:8> $ , $ <var:g> = <nat:10> $ , $ <var:m> = <nat:2> $ , $ <var:G> = <nat:9> $ , $ <var:f> = <nat:7> $ , $ <var:s> = <nat:3> $ and $ <var:S> = <nat:11> $ . Plus notice $ <nat:7> $ , $ <nat:13> $ , $ <nat:11> $ , $ <nat:8> $ , $ <nat:3> $ , $ <nat:9> $ , $ <nat:5> $ , $ <nat:10> $ and $ <nat:2> $ are larger than or equal to <nat:2> . As a result , <nat:21621600> is a <def:nine-composite> number is proven . Hence , $ <var:c> * <var:m> * <var:G> * <var:F> * <var:S> * <var:s> * <var:v> * <var:f> * <var:g> = <nat:21621600> $ is true has been proven . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:nine-composite> ( <var:T> : nat ) := exists <var:s> <var:v> <var:f> <var:S> <var:G> <var:F> <var:c> <var:g> <var:m> : nat , ( <var:c> >= <nat:2> ) /\ ( <var:G> >= <nat:2> ) /\ ( <var:S> >= <nat:2> ) /\ ( <var:g> >= <nat:2> ) /\ ( <var:m> >= <nat:2> ) /\ ( <var:f> >= <nat:2> ) /\ ( <var:v> >= <nat:2> ) /\ ( <var:F> >= <nat:2> ) /\ ( <var:s> >= <nat:2> ) /\ ( <var:T> = <var:c> * <var:m> * <var:v> * <var:S> * <var:s> * <var:f> * <var:G> * <var:g> * <var:F> ) . Theorem <genP:1> : <def:nine-composite> <nat:21621600> . Proof . unfold <def:nine-composite> . exists <nat:3> . exists <nat:13> . exists <nat:7> . exists <nat:11> . exists <nat:9> . exists <nat:5> . exists <nat:8> . exists <nat:10> . exists <nat:2> . assert ( <genH> : <nat:7> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:13> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:11> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:8> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:3> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:9> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:5> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:10> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:2> >= <nat:2> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 