\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:157> + <nat:232> \times <var:F> + <nat:32> \times <var:p> + <nat:214> \times <var:v> + <var:I> \times <nat:124> + <nat:464> \times <var:X> + <nat:84> \times <var:t> + <var:k> \times <nat:470> + <var:f> \times <nat:60> + <nat:274> \times <var:Z> $ will be odd . \end{theorem} \begin{proof} Take note that the integer $ <nat:214> $ is known to be even In addition to this , take note that the positive integers $ <nat:32> $ , $ <nat:124> $ , $ <nat:274> $ , and $ <nat:84> $ are trivially even Adding on , the number $ <nat:470> $ is obviously an even natural number Further , take note the leading terms $ <nat:464> $ and $ <nat:60> $ are known as even natural numbers In addition to this , recall the integer $ <nat:232> $ is known as even We demonstrate the result must be true in connection with the fact that the multiplication of an even integer with some integer is even . See $ <nat:157> $ is obviously an odd natural number . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:F> <var:p> <var:v> <var:I> <var:X> <var:t> <var:k> <var:f> <var:Z> : nat , Nat . odd ( <nat:232> * <var:F> + <nat:32> * <var:p> + <nat:214> * <var:v> + <nat:124> * <var:I> + <nat:464> * <var:X> + <nat:84> * <var:t> + <nat:470> * <var:k> + <nat:60> * <var:f> + <nat:274> * <var:Z> + <nat:157> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:214> = true ) . { auto . } assert ( <genH> : Nat . even <nat:32> = true ) . { auto . } assert ( <genH> : Nat . even <nat:124> = true ) . { auto . } assert ( <genH> : Nat . even <nat:274> = true ) . { auto . } assert ( <genH> : Nat . even <nat:84> = true ) . { auto . } assert ( <genH> : Nat . even <nat:470> = true ) . { auto . } assert ( <genH> : Nat . even <nat:464> = true ) . { auto . } assert ( <genH> : Nat . even <nat:60> = true ) . { auto . } assert ( <genH> : Nat . even <nat:232> = true ) . { auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . repeat rewrite Nat . even_mul . assert ( <genH> : Nat . odd <nat:157> = true ) . { auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 