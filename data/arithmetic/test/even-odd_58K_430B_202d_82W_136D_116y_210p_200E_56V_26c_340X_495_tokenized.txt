\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:495> + <var:K> \cdot <nat:58> + <nat:430> \cdot <var:B> + <nat:202> \cdot <var:d> + <var:W> \cdot <nat:82> + <nat:136> \cdot <var:D> + <var:y> \cdot <nat:116> + <var:p> \cdot <nat:210> + <nat:200> \cdot <var:E> + <var:V> \cdot <nat:56> + <nat:26> \cdot <var:c> + <nat:340> \cdot <var:X> $ is odd with $ <var:V> $ , $ <var:X> $ , $ <var:c> $ , $ <var:B> $ , $ <var:p> $ , $ <var:y> $ , $ <var:W> $ , $ <var:E> $ , $ <var:d> $ , $ <var:K> $ , and $ <var:D> \in \mathbb{Z}^+ $ . \end{theorem} \begin{proof} The summing between even integers concurrently and an odd number in $ \mathbb{Z}^+ $ must be by itself an odd number in $ \mathbb{Z}^+ $ . The leading terms $ <nat:58> $ , $ <nat:430> $ , $ <nat:202> $ , $ <nat:82> $ , $ <nat:136> $ , $ <nat:116> $ , $ <nat:210> $ , $ <nat:200> $ , $ <nat:56> $ , $ <nat:26> $ , in addition to $ <nat:340> $ are obviously even . For this reason , the products $ <var:K> \times <nat:58> $ , $ <var:B> \times <nat:430> $ , $ <nat:202> \times <var:d> $ , $ <nat:82> \times <var:W> $ , $ <var:D> \times <nat:136> $ , $ <var:y> \times <nat:116> $ , $ <nat:210> \times <var:p> $ , $ <var:E> \times <nat:200> $ , $ <var:V> \times <nat:56> $ , $ <var:c> \times <nat:26> $ , additionally $ <nat:340> \times <var:X> $ is even as well . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:V> <var:X> <var:c> <var:B> <var:p> <var:y> <var:W> <var:E> <var:d> <var:K> <var:D> : nat , Nat . odd ( <nat:58> * <var:K> + <nat:430> * <var:B> + <nat:202> * <var:d> + <nat:82> * <var:W> + <nat:136> * <var:D> + <nat:116> * <var:y> + <nat:210> * <var:p> + <nat:200> * <var:E> + <nat:56> * <var:V> + <nat:26> * <var:c> + <nat:340> * <var:X> + <nat:495> ) = true . Proof . intros . rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . assert ( <genH> : Nat . even <nat:58> = true ) . { auto . } assert ( <genH> : Nat . even <nat:430> = true ) . { auto . } assert ( <genH> : Nat . even <nat:202> = true ) . { auto . } assert ( <genH> : Nat . even <nat:82> = true ) . { auto . } assert ( <genH> : Nat . even <nat:136> = true ) . { auto . } assert ( <genH> : Nat . even <nat:116> = true ) . { auto . } assert ( <genH> : Nat . even <nat:210> = true ) . { auto . } assert ( <genH> : Nat . even <nat:200> = true ) . { auto . } assert ( <genH> : Nat . even <nat:56> = true ) . { auto . } assert ( <genH> : Nat . even <nat:26> = true ) . { auto . } assert ( <genH> : Nat . even <nat:340> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:58> * <var:K> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:430> * <var:B> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:202> * <var:d> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:82> * <var:W> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:136> * <var:D> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:116> * <var:y> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:210> * <var:p> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:200> * <var:E> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:56> * <var:V> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:26> * <var:c> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:340> * <var:X> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 