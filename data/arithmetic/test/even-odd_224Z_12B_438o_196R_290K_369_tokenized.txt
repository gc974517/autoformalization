\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} With some positive integers $ <var:o> $ , $ <var:R> $ , $ <var:Z> $ , $ <var:B> $ , and $ <var:K> $ $ <nat:369> + <var:R> \cdot <nat:196> + <var:B> \cdot <nat:12> + <nat:290> \cdot <var:K> + <var:o> \cdot <nat:438> + <var:Z> \cdot <nat:224> $ will be odd . \end{theorem} \begin{proof} We make use the formula $ <nat:196> * <var:R> + <var:K> * <nat:290> + <nat:438> * <var:o> + <var:B> * <nat:12> + <nat:224> * <var:Z> $ is obviously even , since the summation of even elements of $ \mathbb{Z}^+ $ concurrently with an even natural must be an even element of $ \mathbb{N} $ . The leading terms $ <nat:290> $ and moreover $ <nat:224> $ will be even numbers in $ \mathbb{N} $ . Therefore , the products $ <var:K> \times <nat:290> $ and moreover $ <nat:224> \times <var:Z> $ is guaranteed to be even also . The coefficients $ <nat:12> $ additionally $ <nat:196> $ will be even . In consequence , the terms $ <nat:12> \times <var:B> $ as well as $ <nat:196> \times <var:R> $ is guaranteed to be even also . Likewise , remember that the positive integer $ <nat:438> $ is known to be an even positive integer . Accordingly , the product $ <var:o> \times <nat:438> $ will be even too . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:o> <var:R> <var:Z> <var:B> <var:K> : nat , Nat . odd ( <nat:196> * <var:R> + <nat:12> * <var:B> + <nat:290> * <var:K> + <nat:438> * <var:o> + <nat:224> * <var:Z> + <nat:369> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:290> = true ) . { auto . } assert ( <genH> : Nat . even <nat:224> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:290> * <var:K> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:224> * <var:Z> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:12> = true ) . { auto . } assert ( <genH> : Nat . even <nat:196> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:12> * <var:B> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:196> * <var:R> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:438> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:438> * <var:o> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:196> * <var:R> + <nat:12> * <var:B> + <nat:290> * <var:K> + <nat:438> * <var:o> + <nat:224> * <var:Z> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . auto . Qed . 