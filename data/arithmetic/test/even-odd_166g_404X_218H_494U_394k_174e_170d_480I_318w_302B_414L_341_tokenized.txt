\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} For all positive terms $ <var:H> $ , $ <var:d> $ , $ <var:g> $ , $ <var:X> $ , $ <var:L> $ , $ <var:U> $ , $ <var:e> $ , $ <var:B> $ , $ <var:w> $ , $ <var:k> $ , and $ <var:I> $ the expression $ <nat:341> + <var:g> \cdot <nat:166> + <nat:404> \cdot <var:X> + <nat:218> \cdot <var:H> + <var:U> \cdot <nat:494> + <var:k> \cdot <nat:394> + <nat:174> \cdot <var:e> + <var:d> \cdot <nat:170> + <var:I> \cdot <nat:480> + <var:w> \cdot <nat:318> + <nat:302> \cdot <var:B> + <var:L> \cdot <nat:414> $ will be odd . \end{theorem} \begin{proof} Remember $ <nat:341> $ is known to be an odd element of $ \mathbb{N} $ . The summing between even numbers concurrently with an odd number must be by its very nature an odd number . See the products $ <nat:174> \cdot <var:e> $ , $ <nat:480> \cdot <var:I> $ , $ <var:X> \cdot <nat:404> $ , $ <nat:302> \cdot <var:B> $ , and $ <nat:494> \cdot <var:U> $ are obviously even natural numbers . This claim holds from the fact taking the product of an even number and an arbitrary natural is an even number in $ \mathbb{N} $ . What's more , the terms $ <var:d> \cdot <nat:170> $ , $ <var:k> \cdot <nat:394> $ , and likewise $ <var:L> \cdot <nat:414> $ will be even positive integers . The pair $ <var:w> \cdot <nat:318> $ is trivially an even element of $ \mathbb{N} $ from the knowledge taking the product between an even element of $ \mathbb{Z}^+ $ and an arbitrary positive integer is guaranteed to be even . On top of this , observe the product $ <var:g> \cdot <nat:166> $ is known to be even as a consequence that taking the product of an even number with an arbitrary element of $ \mathbb{Z}^+ $ is even . See that $ <var:H> \cdot <nat:218> $ is guaranteed to be an even integer . This claim must be true from the fact the multiplication between an even whole number with any integer must be clearly an even number . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:H> <var:d> <var:g> <var:X> <var:L> <var:U> <var:e> <var:B> <var:w> <var:k> <var:I> : nat , Nat . odd ( <nat:166> * <var:g> + <nat:404> * <var:X> + <nat:218> * <var:H> + <nat:494> * <var:U> + <nat:394> * <var:k> + <nat:174> * <var:e> + <nat:170> * <var:d> + <nat:480> * <var:I> + <nat:318> * <var:w> + <nat:302> * <var:B> + <nat:414> * <var:L> + <nat:341> ) = true . Proof . intros . assert ( <genH> : Nat . odd <nat:341> = true ) . { auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . assert ( <genH> : Nat . even ( <nat:174> * <var:e> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:480> * <var:I> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:404> * <var:X> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:302> * <var:B> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:494> * <var:U> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:170> * <var:d> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:394> * <var:k> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:414> * <var:L> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:318> * <var:w> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:166> * <var:g> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:218> * <var:H> ) = true ) . { rewrite Nat . even_mul . auto . } rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 