\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \newtheorem{definition}{Definition} \begin{document} \begin{definition} Assume $ <var:F> $ , $ <var:t> $ , $ <var:w> $ , $ <var:D> $ , $ <var:b> $ as integers satisfying the condition that $ <var:w> $ , $ <var:t> $ , $ <var:b> $ , $ <var:F> $ , and $ <var:D> \geq <nat:2> $ . Denote that some $ <var:r> $ is defined to be a <def:five-composite> number when $ <var:t> \cdot <var:F> \cdot <var:b> \cdot <var:D> \cdot <var:w> = <var:r> $ . \end{definition} \begin{theorem} $ <nat:5148> = <var:r> $ is a <def:five-composite> number . \end{theorem} \begin{proof} Remember that a <def:five-composite> integer is the multiplication of natural numbers $ <var:F> $ , $ <var:t> $ , $ <var:b> $ , $ <var:D> $ , and $ <var:w> $ greater than or equivalent to <nat:2> . We prove <nat:5148> is a <def:five-composite> positive integer in view of $ <nat:3> $ , $ <nat:6> $ , $ <nat:11> $ , $ <nat:13> $ , $ <nat:2> \geq <nat:2> $ and on account of $ <nat:5148> = <var:D> \cdot <var:F> \cdot <var:t> \cdot <var:w> \cdot <var:b> $ implies $ <var:b> = <nat:6> $ , $ <var:D> = <nat:11> $ , $ <var:F> = <nat:13> $ , $ <var:w> = <nat:2> $ , $ <var:t> = <nat:3> $ . As a consequence , <nat:5148> is a <def:five-composite> whole number is true has been proven . Hence , $ <nat:5148> = <var:b> \times <var:t> \times <var:D> \times <var:w> \times <var:F> $ has been validated . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:five-composite> ( <var:r> : nat ) := exists <var:F> <var:t> <var:w> <var:D> <var:b> : nat , ( <var:w> >= <nat:2> ) /\ ( <var:t> >= <nat:2> ) /\ ( <var:b> >= <nat:2> ) /\ ( <var:F> >= <nat:2> ) /\ ( <var:D> >= <nat:2> ) /\ ( <var:t> * <var:F> * <var:b> * <var:D> * <var:w> = <var:r> ) . Theorem <genP:1> : <def:five-composite> <nat:5148> . Proof . unfold <def:five-composite> . assert ( <genH> : <nat:3> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:6> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:11> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:13> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:2> >= <nat:2> ) . { lia . } exists <nat:13> . exists <nat:3> . exists <nat:2> . exists <nat:11> . exists <nat:6> . repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 