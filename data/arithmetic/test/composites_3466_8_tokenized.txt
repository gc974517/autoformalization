\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \newtheorem{definition}{Definition} \begin{document} \begin{definition} With the condition that we get $ <var:i> = <var:q> \times <var:b> \times <var:s> \times <var:W> \times <var:I> \times <var:X> \times <var:c> \times <var:Q> $ for some number $ <var:i> $ and so that $ <var:b> $ , $ <var:c> $ , $ <var:Q> $ , $ <var:I> $ , $ <var:s> $ , $ <var:q> $ , $ <var:X> $ , and $ <var:W> \geq <nat:2> $ with some numbers $ <var:X> $ , $ <var:Q> $ , $ <var:b> $ , $ <var:c> $ , $ <var:W> $ , $ <var:q> $ , $ <var:I> $ , $ <var:s> $ , then we denote that $ <var:i> $ is <def:eight-composite> . \end{definition} \begin{theorem} $ <nat:887040> = <var:i> $ is a <def:eight-composite> whole number . \end{theorem} \begin{proof} Observe that $ <nat:12> $ , $ <nat:8> $ , $ <nat:3> $ , $ <nat:7> $ , $ <nat:2> $ , $ <nat:11> $ , $ <nat:5> $ and $ <nat:4> > <nat:1> $ . Further notice also $ <var:W> \cdot <var:q> \cdot <var:c> \cdot <var:s> \cdot <var:X> \cdot <var:I> \cdot <var:b> \cdot <var:Q> = <nat:887040> $ implies $ <var:b> = <nat:4> $ , $ <var:c> = <nat:3> $ , $ <var:I> = <nat:8> $ , $ <var:q> = <nat:7> $ , $ <var:s> = <nat:12> $ , $ <var:W> = <nat:11> $ , $ <var:Q> = <nat:2> $ and $ <var:X> = <nat:5> $ . This suggests <nat:887040> is a <def:eight-composite> whole number . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:eight-composite> ( <var:i> : nat ) := exists <var:X> <var:Q> <var:b> <var:c> <var:W> <var:q> <var:I> <var:s> : nat , ( <var:i> = <var:q> * <var:b> * <var:s> * <var:W> * <var:I> * <var:X> * <var:c> * <var:Q> ) /\ ( <var:b> >= <nat:2> ) /\ ( <var:c> >= <nat:2> ) /\ ( <var:Q> >= <nat:2> ) /\ ( <var:I> >= <nat:2> ) /\ ( <var:s> >= <nat:2> ) /\ ( <var:q> >= <nat:2> ) /\ ( <var:X> >= <nat:2> ) /\ ( <var:W> >= <nat:2> ) . Theorem <genP:1> : <def:eight-composite> <nat:887040> . Proof . unfold <def:eight-composite> . assert ( <genH> : <nat:12> > <nat:1> ) . { lia . } assert ( <genH> : <nat:8> > <nat:1> ) . { lia . } assert ( <genH> : <nat:3> > <nat:1> ) . { lia . } assert ( <genH> : <nat:7> > <nat:1> ) . { lia . } assert ( <genH> : <nat:2> > <nat:1> ) . { lia . } assert ( <genH> : <nat:11> > <nat:1> ) . { lia . } assert ( <genH> : <nat:5> > <nat:1> ) . { lia . } assert ( <genH> : <nat:4> > <nat:1> ) . { lia . } exists <nat:5> . exists <nat:2> . exists <nat:4> . exists <nat:3> . exists <nat:11> . exists <nat:7> . exists <nat:8> . exists <nat:12> . repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 