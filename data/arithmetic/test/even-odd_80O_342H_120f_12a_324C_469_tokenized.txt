\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Given all positive integers $ <var:O> $ , $ <var:C> $ , $ <var:H> $ , $ <var:a> $ , and $ <var:f> $ the expression $ <var:H> \times <nat:342> + <var:C> \times <nat:324> + <var:a> \times <nat:12> + <nat:80> \times <var:O> + <nat:469> + <var:f> \times <nat:120> $ is guaranteed to be odd . \end{theorem} \begin{proof} See $ <nat:469> $ is known as an odd natural . We justify $ <nat:469> + <nat:324> <var:C> + <nat:120> <var:f> + <nat:80> <var:O> + <nat:342> <var:H> + <nat:12> <var:a> $ is guaranteed to be odd . The proposition is proven from the knowledge $ <var:O> \times <nat:80> + <var:H> \times <nat:342> + <var:f> \times <nat:120> + <nat:12> \times <var:a> + <var:C> \times <nat:324> $ is trivially even . Take note that the pairs $ <var:C> \times <nat:324> $ , $ <nat:342> \times <var:H> $ , in addition to $ <nat:120> \times <var:f> $ must be even . In addition to this , the product $ <var:a> \times <nat:12> $ is known as an even element of $ \mathbb{Z}^+ $ because multiplying between an even number in $ \mathbb{Z}^+ $ and an arbitrary whole number is guaranteed to be an even number in $ \mathbb{Z}^+ $ . Adding on , the product $ <nat:80> \times <var:O> $ is even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:O> <var:C> <var:H> <var:a> <var:f> : nat , Nat . odd ( <nat:342> * <var:H> + <nat:324> * <var:C> + <nat:12> * <var:a> + <nat:80> * <var:O> + <nat:120> * <var:f> + <nat:469> ) = true . Proof . intros . assert ( <genH> : Nat . odd <nat:469> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:324> * <var:C> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:342> * <var:H> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:120> * <var:f> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:12> * <var:a> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:80> * <var:O> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:342> * <var:H> + <nat:324> * <var:C> + <nat:12> * <var:a> + <nat:80> * <var:O> + <nat:120> * <var:f> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . rewrite <genH> . auto . Qed . 