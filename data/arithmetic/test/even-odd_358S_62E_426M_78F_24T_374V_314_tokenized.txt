\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:T> * <nat:24> + <nat:78> * <var:F> + <nat:62> * <var:E> + <nat:426> * <var:M> + <var:S> * <nat:358> + <nat:314> + <var:V> * <nat:374> $ will be even . \end{theorem} \begin{proof} The expression $ <nat:358> \cdot <var:S> + <nat:62> \cdot <var:E> + <nat:426> \cdot <var:M> + <var:F> \cdot <nat:78> + <nat:24> \cdot <var:T> + <nat:374> \cdot <var:V> $ is trivially even . Take note that the whole numbers $ <nat:358> $ , $ <nat:78> $ , $ <nat:24> $ , $ <nat:62> $ , and $ <nat:426> $ are known as even Additionally , the number $ <nat:374> $ is known to be an even number By reason that the totaling between an even element of $ \mathbb{Z}^+ $ with even numbers in $ \mathbb{Z}^+ $ will be even , as well as from the knowledge taking the product of even whole numbers with any natural number is guaranteed to be even . Remember $ <nat:314> $ is obviously even . The adding of an even element of $ \mathbb{N} $ and an even element of $ \mathbb{Z}^+ $ is guaranteed to be by definition an even number in $ \mathbb{N} $ . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:T> <var:F> <var:E> <var:M> <var:S> <var:V> : nat , Nat . even ( <nat:24> * <var:T> + <nat:78> * <var:F> + <nat:62> * <var:E> + <nat:426> * <var:M> + <nat:358> * <var:S> + <nat:374> * <var:V> + <nat:314> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:358> = true ) . { auto . } assert ( <genH> : Nat . even <nat:78> = true ) . { auto . } assert ( <genH> : Nat . even <nat:24> = true ) . { auto . } assert ( <genH> : Nat . even <nat:62> = true ) . { auto . } assert ( <genH> : Nat . even <nat:426> = true ) . { auto . } assert ( <genH> : Nat . even <nat:374> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:24> * <var:T> + <nat:78> * <var:F> + <nat:62> * <var:E> + <nat:426> * <var:M> + <nat:358> * <var:S> + <nat:374> * <var:V> ) = true ) . { repeat rewrite Nat . even_add . repeat rewrite Nat . even_mul . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:314> = true ) . { auto . } rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . auto . Qed . 