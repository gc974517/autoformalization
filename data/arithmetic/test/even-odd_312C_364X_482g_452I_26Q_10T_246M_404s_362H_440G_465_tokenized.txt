\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Taking any terms $ <var:s> $ , $ <var:I> $ , $ <var:X> $ , $ <var:Q> $ , $ <var:T> $ , $ <var:H> $ , $ <var:C> $ , $ <var:g> $ , $ <var:G> $ , and $ <var:M> $ the sum $ <var:s> \times <nat:404> + <nat:364> \times <var:X> + <nat:10> \times <var:T> + <var:I> \times <nat:452> + <nat:362> \times <var:H> + <var:C> \times <nat:312> + <nat:440> \times <var:G> + <nat:465> + <var:Q> \times <nat:26> + <var:M> \times <nat:246> + <nat:482> \times <var:g> $ is odd . \end{theorem} \begin{proof} The formula $ <nat:404> * <var:s> + <var:X> * <nat:364> + <nat:482> * <var:g> + <var:G> * <nat:440> + <nat:452> * <var:I> + <var:T> * <nat:10> + <nat:312> * <var:C> + <var:Q> * <nat:26> + <nat:465> + <var:H> * <nat:362> + <var:M> * <nat:246> $ is guaranteed to be odd since the formula $ <var:C> <nat:312> + <nat:364> <var:X> + <nat:482> <var:g> + <var:I> <nat:452> + <var:Q> <nat:26> + <nat:10> <var:T> + <var:M> <nat:246> + <var:s> <nat:404> + <nat:362> <var:H> + <nat:440> <var:G> $ is clearly even . The products $ <var:G> \cdot <nat:440> $ , $ <var:g> \cdot <nat:482> $ , $ <var:T> \cdot <nat:10> $ , and likewise $ <nat:452> \cdot <var:I> $ are clearly even numbers in $ \mathbb{N} $ . This fact is proven as a consequence that the multiplication between an even natural number with any positive integer is an even whole number . What's more , the products $ <nat:364> \cdot <var:X> $ , $ <var:C> \cdot <nat:312> $ , $ <var:M> \cdot <nat:246> $ , and likewise $ <nat:404> \cdot <var:s> $ are known to be even numbers . See the term $ <nat:26> \cdot <var:Q> $ is known to be an even number in $ \mathbb{N} $ . This fact is proven since the multiplication of an even positive integer and a number in $ \mathbb{N} $ must be an even natural number . The pair $ <var:H> \cdot <nat:362> $ is even . This is true since taking the product of an even whole number and an arbitrary natural number must be an even number in $ \mathbb{N} $ . Because the summation of an even integer with an even integer is guaranteed to be even , and moreover by reason that the multiplication between even integers and any element of $ \mathbb{N} $ is guaranteed to be even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:s> <var:I> <var:X> <var:Q> <var:T> <var:H> <var:C> <var:g> <var:G> <var:M> : nat , Nat . odd ( <nat:404> * <var:s> + <nat:364> * <var:X> + <nat:10> * <var:T> + <nat:452> * <var:I> + <nat:362> * <var:H> + <nat:312> * <var:C> + <nat:440> * <var:G> + <nat:26> * <var:Q> + <nat:246> * <var:M> + <nat:482> * <var:g> + <nat:465> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:440> * <var:G> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:482> * <var:g> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:10> * <var:T> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:452> * <var:I> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:364> * <var:X> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:312> * <var:C> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:246> * <var:M> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:404> * <var:s> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:26> * <var:Q> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:362> * <var:H> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:404> * <var:s> + <nat:364> * <var:X> + <nat:10> * <var:T> + <nat:452> * <var:I> + <nat:362> * <var:H> + <nat:312> * <var:C> + <nat:440> * <var:G> + <nat:26> * <var:Q> + <nat:246> * <var:M> + <nat:482> * <var:g> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . auto . Qed . 