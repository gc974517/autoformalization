\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} We denote that $ <var:p> $ is <def:ten-composite> iff given some $ <var:x> $ , $ <var:u> $ , $ <var:X> $ , $ <var:B> $ , $ <var:Y> $ , $ <var:E> $ , $ <var:D> $ , $ <var:y> $ , $ <var:P> $ , $ <var:U> \in \mathbb{Z}^+ $ we have $ <var:B> * <var:D> * <var:y> * <var:U> * <var:P> * <var:X> * <var:E> * <var:Y> * <var:u> * <var:x> = <var:p> $ with some $ <var:p> $ . So <nat:222393600> is a <def:ten-composite> integer . \end{theorem} \begin{proof} Recollect that a <def:ten-composite> is the multiplication of integers $ <var:P> $ , $ <var:E> $ , $ <var:U> $ , $ <var:u> $ , $ <var:X> $ , $ <var:D> $ , $ <var:x> $ , $ <var:Y> $ , $ <var:B> $ , $ <var:y> $ such that $ <var:D> $ , $ <var:x> $ , $ <var:U> $ , $ <var:E> $ , $ <var:B> $ , $ <var:Y> $ , $ <var:P> $ , $ <var:u> $ , $ <var:y> $ , $ <var:X> > <nat:1> $ . Allow $ <var:x> = <nat:12> $ , $ <var:U> = <nat:6> $ , $ <var:P> = <nat:2> $ , $ <var:X> = <nat:3> $ , $ <var:E> = <nat:11> $ , $ <var:u> = <nat:9> $ , $ <var:B> = <nat:5> $ , $ <var:D> = <nat:8> $ , $ <var:y> = <nat:10> $ and $ <var:Y> = <nat:13> $ . We verify our theorem is valid for $ <var:B> * <var:u> * <var:y> * <var:P> * <var:E> * <var:U> * <var:D> * <var:Y> * <var:x> * <var:X> = <nat:222393600> = <nat:5> * <nat:9> * <nat:10> * <nat:2> * <nat:11> * <nat:6> * <nat:8> * <nat:13> * <nat:12> * <nat:3> $ . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:ten-composite> ( <var:p> : nat ) := exists <var:x> <var:u> <var:X> <var:B> <var:Y> <var:E> <var:D> <var:y> <var:P> <var:U> : nat , ( <var:B> * <var:D> * <var:y> * <var:U> * <var:P> * <var:X> * <var:E> * <var:Y> * <var:u> * <var:x> = <var:p> ) . Theorem <genP:1> : <def:ten-composite> <nat:222393600> . Proof . unfold <def:ten-composite> . exists <nat:12> . exists <nat:9> . exists <nat:3> . exists <nat:5> . exists <nat:13> . exists <nat:11> . exists <nat:8> . exists <nat:10> . exists <nat:2> . exists <nat:6> . repeat split . all : lia . Qed . 