\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:I> \times <nat:424> + <nat:454> \times <var:y> + <var:R> \times <nat:436> + <nat:112> \times <var:q> + <var:i> \times <nat:32> + <var:D> \times <nat:236> + <nat:290> \times <var:L> + <nat:58> \times <var:v> + <var:O> \times <nat:118> + <nat:477> + <nat:46> \times <var:J> + <nat:468> \times <var:z> $ is guaranteed to be odd with any natural terms $ <var:y> $ , $ <var:i> $ , $ <var:R> $ , $ <var:I> $ , $ <var:J> $ , $ <var:v> $ , $ <var:O> $ , $ <var:L> $ , $ <var:D> $ , $ <var:z> $ , and $ <var:q> $ . \end{theorem} \begin{proof} We know the leading terms $ <nat:424> $ as well as $ <nat:46> $ are even elements of $ \mathbb{N} $ Additionally , take note the natural numbers $ <nat:454> $ , $ <nat:112> $ , $ <nat:468> $ , $ <nat:58> $ , and likewise $ <nat:32> $ are obviously even Furthermore , the integers $ <nat:436> $ , $ <nat:118> $ , in addition to $ <nat:236> $ are clearly even In addition , we know the positive integer $ <nat:290> $ is trivially an even integer Notice that $ <nat:477> $ is odd . See that the summing between an even positive integer with an odd whole number is guaranteed to be odd . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:y> <var:i> <var:R> <var:I> <var:J> <var:v> <var:O> <var:L> <var:D> <var:z> <var:q> : nat , Nat . odd ( <nat:424> * <var:I> + <nat:454> * <var:y> + <nat:436> * <var:R> + <nat:112> * <var:q> + <nat:32> * <var:i> + <nat:236> * <var:D> + <nat:290> * <var:L> + <nat:58> * <var:v> + <nat:118> * <var:O> + <nat:46> * <var:J> + <nat:468> * <var:z> + <nat:477> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:424> = true ) . { auto . } assert ( <genH> : Nat . even <nat:46> = true ) . { auto . } assert ( <genH> : Nat . even <nat:454> = true ) . { auto . } assert ( <genH> : Nat . even <nat:112> = true ) . { auto . } assert ( <genH> : Nat . even <nat:468> = true ) . { auto . } assert ( <genH> : Nat . even <nat:58> = true ) . { auto . } assert ( <genH> : Nat . even <nat:32> = true ) . { auto . } assert ( <genH> : Nat . even <nat:436> = true ) . { auto . } assert ( <genH> : Nat . even <nat:118> = true ) . { auto . } assert ( <genH> : Nat . even <nat:236> = true ) . { auto . } assert ( <genH> : Nat . even <nat:290> = true ) . { auto . } assert ( <genH> : Nat . odd <nat:477> = true ) . { auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . repeat rewrite Nat . even_mul . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 