\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} The integer <nat:2661120> is the multiplication between natural numbers $ <var:Z> $ , $ <var:G> $ , $ <var:f> $ , $ <var:A> $ , $ <var:Q> $ , $ <var:V> $ , $ <var:z> $ , $ <var:H> $ satisfying the condition that $ <var:H> $ , $ <var:Q> $ , $ <var:G> $ , $ <var:z> $ , $ <var:V> $ , $ <var:f> $ , $ <var:Z> $ , and $ <var:A> \geq <nat:2> $ . \end{theorem} \begin{proof} Note that $ <var:A> * <var:H> * <var:Z> * <var:z> * <var:Q> * <var:f> * <var:G> * <var:V> = <nat:2661120> $ shows $ <var:G> = <nat:12> $ , $ <var:z> = <nat:4> $ , $ <var:Z> = <nat:7> $ , $ <var:A> = <nat:6> $ , $ <var:f> = <nat:3> $ , $ <var:V> = <nat:11> $ , $ <var:Q> = <nat:8> $ , $ <var:H> = <nat:5> $ . Furthermore notice $ <nat:4> $ , $ <nat:11> $ , $ <nat:5> $ , $ <nat:7> $ , $ <nat:12> $ , $ <nat:6> $ , $ <nat:3> $ , $ <nat:8> $ are greater than or equivalent to <nat:2> . Consequently , $ <var:A> * <var:Q> * <var:f> * <var:V> * <var:z> * <var:G> * <var:H> * <var:Z> = <nat:2661120> $ is verified . \end{proof} \end{document} 
~
Require Import Lia . Theorem <genP:1> : exists <var:Z> <var:G> <var:f> <var:A> <var:Q> <var:V> <var:z> <var:H> : nat , ( <nat:2661120> = <var:Z> * <var:G> * <var:f> * <var:A> * <var:Q> * <var:V> * <var:z> * <var:H> ) /\ ( <var:H> >= <nat:2> ) /\ ( <var:Q> >= <nat:2> ) /\ ( <var:G> >= <nat:2> ) /\ ( <var:z> >= <nat:2> ) /\ ( <var:V> >= <nat:2> ) /\ ( <var:f> >= <nat:2> ) /\ ( <var:Z> >= <nat:2> ) /\ ( <var:A> >= <nat:2> ) . Proof . exists <nat:7> . exists <nat:12> . exists <nat:3> . exists <nat:6> . exists <nat:8> . exists <nat:11> . exists <nat:4> . exists <nat:5> . assert ( <genH> : <nat:4> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:11> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:5> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:7> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:12> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:6> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:3> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:8> >= <nat:2> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 