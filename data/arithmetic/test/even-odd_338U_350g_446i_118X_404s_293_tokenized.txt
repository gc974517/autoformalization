\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:U> * <nat:338> + <var:g> * <nat:350> + <var:s> * <nat:404> + <nat:293> + <var:X> * <nat:118> + <nat:446> * <var:i> $ is odd given natural numbers $ <var:g> $ , $ <var:s> $ , $ <var:U> $ , $ <var:X> $ , and $ <var:i> $ . \end{theorem} \begin{proof} Our theorem must be true from the knowledge $ <nat:338> <var:U> + <nat:350> <var:g> + <nat:446> <var:i> + <var:X> <nat:118> + <var:s> <nat:404> $ is obviously even . Observe that the products $ <nat:404> <var:s> $ , $ <nat:338> <var:U> $ , $ <nat:446> <var:i> $ , and likewise $ <nat:118> <var:X> $ are trivially even . This is true from the fact the multiplication between an even whole number and any number must be an even element of $ \mathbb{N} $ . See the pair $ <nat:350> <var:g> $ is known to be an even natural . Our theorem is true as a consequence that the adding of even numbers with an even natural number will be itself an even number in $ \mathbb{N} $ . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:g> <var:s> <var:U> <var:X> <var:i> : nat , Nat . odd ( <nat:338> * <var:U> + <nat:350> * <var:g> + <nat:404> * <var:s> + <nat:118> * <var:X> + <nat:446> * <var:i> + <nat:293> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:404> * <var:s> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:338> * <var:U> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:446> * <var:i> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:118> * <var:X> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:350> * <var:g> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:338> * <var:U> + <nat:350> * <var:g> + <nat:404> * <var:s> + <nat:118> * <var:X> + <nat:446> * <var:i> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . auto . Qed . 