\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:C> \times <nat:324> + <nat:142> \times <var:j> + <var:U> \times <nat:380> + <nat:220> \times <var:G> + <nat:370> \times <var:N> + <nat:434> \times <var:z> + <nat:145> + <var:o> \times <nat:484> + <nat:186> \times <var:Q> + <var:R> \times <nat:476> $ must be odd for $ <var:j> $ , $ <var:R> $ , $ <var:z> $ , $ <var:C> $ , $ <var:N> $ , $ <var:Q> $ , $ <var:U> $ , $ <var:G> $ , and $ <var:o> $ . \end{theorem} \begin{proof} Remember that the pairs $ <nat:484> <var:o> $ , $ <var:R> <nat:476> $ , $ <nat:380> <var:U> $ , in addition to $ <var:j> <nat:142> $ must be even . The pairs $ <nat:370> <var:N> $ and $ <var:z> <nat:434> $ are known to be even numbers in $ \mathbb{N} $ . On top of this , the pairs $ <var:Q> <nat:186> $ additionally $ <nat:220> <var:G> $ will be even . This is proven as a consequence that the multiplication of an even integer with some positive integer is guaranteed to be instrinsically an even natural number . $ <var:C> <nat:324> $ is guaranteed to be even . See the summation between an even number with an odd natural number is guaranteed to be odd . We know that $ <nat:145> $ is trivially odd . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:j> <var:R> <var:z> <var:C> <var:N> <var:Q> <var:U> <var:G> <var:o> : nat , Nat . odd ( <nat:324> * <var:C> + <nat:142> * <var:j> + <nat:380> * <var:U> + <nat:220> * <var:G> + <nat:370> * <var:N> + <nat:434> * <var:z> + <nat:484> * <var:o> + <nat:186> * <var:Q> + <nat:476> * <var:R> + <nat:145> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:484> * <var:o> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:476> * <var:R> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:380> * <var:U> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:142> * <var:j> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:370> * <var:N> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:434> * <var:z> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:186> * <var:Q> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:220> * <var:G> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:324> * <var:C> ) = true ) . { rewrite Nat . even_mul . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . assert ( <genH> : Nat . odd <nat:145> = true ) . { auto . } rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 