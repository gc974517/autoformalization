\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:J> * <nat:230> + <var:V> * <nat:26> + <nat:454> * <var:j> + <var:q> * <nat:228> + <nat:310> * <var:M> + <var:u> * <nat:32> + <nat:90> * <var:O> + <var:w> * <nat:376> + <var:A> * <nat:456> + <nat:417> + <var:I> * <nat:300> $ will be odd with all terms $ <var:O> $ , $ <var:u> $ , $ <var:A> $ , $ <var:J> $ , $ <var:q> $ , $ <var:I> $ , $ <var:w> $ , $ <var:V> $ , $ <var:j> $ , and $ <var:M> $ . \end{theorem} \begin{proof} We verify the sum $ <var:O> \cdot <nat:90> + <nat:456> \cdot <var:A> + <var:V> \cdot <nat:26> + <var:J> \cdot <nat:230> + <nat:32> \cdot <var:u> + <nat:454> \cdot <var:j> + <nat:376> \cdot <var:w> + <nat:310> \cdot <var:M> + <nat:228> \cdot <var:q> + <nat:417> + <var:I> \cdot <nat:300> $ will be odd . We make use the sum $ <nat:376> \times <var:w> + <nat:26> \times <var:V> + <var:A> \times <nat:456> + <var:O> \times <nat:90> + <var:M> \times <nat:310> + <nat:300> \times <var:I> + <var:q> \times <nat:228> + <nat:230> \times <var:J> + <nat:454> \times <var:j> + <var:u> \times <nat:32> $ is obviously even . The products $ <var:V> * <nat:26> $ , $ <var:w> * <nat:376> $ , $ <var:A> * <nat:456> $ , plus $ <nat:310> * <var:M> $ are even naturals . The products $ <nat:90> * <var:O> $ and likewise $ <var:I> * <nat:300> $ are known as even from the fact the multiplication of an even natural number with some element of $ \mathbb{Z}^+ $ must be even . Adding on , observe that the products $ <nat:228> * <var:q> $ , $ <nat:32> * <var:u> $ , as well as $ <nat:454> * <var:j> $ are obviously even . This fact is true from the fact the multiplication between an even number in $ \mathbb{N} $ and any number in $ \mathbb{N} $ is even . The pair $ <var:J> * <nat:230> $ is trivially an even whole number . This fact is true since taking the product of an even positive integer and some element of $ \mathbb{Z}^+ $ is even . The expression $ <var:V> * <nat:26> + <nat:454> * <var:j> + <nat:310> * <var:M> + <nat:228> * <var:q> + <nat:230> * <var:J> + <nat:90> * <var:O> + <var:w> * <nat:376> + <var:A> * <nat:456> + <var:u> * <nat:32> + <var:I> * <nat:300> $ is guaranteed to be trivially even because the multiplication of even numbers in $ \mathbb{N} $ and a integer is guaranteed to be even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:O> <var:u> <var:A> <var:J> <var:q> <var:I> <var:w> <var:V> <var:j> <var:M> : nat , Nat . odd ( <nat:230> * <var:J> + <nat:26> * <var:V> + <nat:454> * <var:j> + <nat:228> * <var:q> + <nat:310> * <var:M> + <nat:32> * <var:u> + <nat:90> * <var:O> + <nat:376> * <var:w> + <nat:456> * <var:A> + <nat:300> * <var:I> + <nat:417> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:26> * <var:V> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:376> * <var:w> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:456> * <var:A> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:310> * <var:M> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:90> * <var:O> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:300> * <var:I> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:228> * <var:q> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:32> * <var:u> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:454> * <var:j> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:230> * <var:J> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:230> * <var:J> + <nat:26> * <var:V> + <nat:454> * <var:j> + <nat:228> * <var:q> + <nat:310> * <var:M> + <nat:32> * <var:u> + <nat:90> * <var:O> + <nat:376> * <var:w> + <nat:456> * <var:A> + <nat:300> * <var:I> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . auto . Qed . 