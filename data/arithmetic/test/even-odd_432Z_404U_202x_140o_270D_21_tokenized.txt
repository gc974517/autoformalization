\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Taking every terms $ <var:x> $ , $ <var:D> $ , $ <var:U> $ , $ <var:Z> $ , and $ <var:o> $ the formula $ <nat:140> <var:o> + <nat:432> <var:Z> + <nat:21> + <var:U> <nat:404> + <nat:270> <var:D> + <nat:202> <var:x> $ must be odd . \end{theorem} \begin{proof} Take note that the number $ <nat:432> $ is trivially even . So , the term $ <nat:432> \cdot <var:Z> $ will be even at the same time . Building on , the whole number $ <nat:404> $ is known as even . Hence , $ <nat:404> \cdot <var:U> $ is even at the same time . Likewise , observe that the coefficient $ <nat:202> $ is guaranteed to be even . Accordingly , $ <var:x> \cdot <nat:202> $ is even also . Additionally , the whole number $ <nat:140> $ is guaranteed to be an even number in $ \mathbb{Z}^+ $ . Accordingly , the pair $ <var:o> \cdot <nat:140> $ is even additionally . Notice that the pair $ <nat:270> \cdot <var:D> $ is known as an even element of $ \mathbb{Z}^+ $ . This is proven from the knowledge the number $ <nat:270> $ is known as even . It can be proven that our lemma is proven . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:x> <var:D> <var:U> <var:Z> <var:o> : nat , Nat . odd ( <nat:140> * <var:o> + <nat:432> * <var:Z> + <nat:404> * <var:U> + <nat:270> * <var:D> + <nat:202> * <var:x> + <nat:21> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:432> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:432> * <var:Z> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:404> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:404> * <var:U> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:202> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:202> * <var:x> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:140> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:140> * <var:o> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:270> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:270> * <var:D> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 