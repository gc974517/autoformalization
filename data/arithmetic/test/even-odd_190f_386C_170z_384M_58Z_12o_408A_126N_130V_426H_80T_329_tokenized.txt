\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Given some terms $ <var:T> $ , $ <var:o> $ , $ <var:V> $ , $ <var:M> $ , $ <var:z> $ , $ <var:N> $ , $ <var:H> $ , $ <var:A> $ , $ <var:Z> $ , $ <var:f> $ , and $ <var:C> $ the summation $ <var:f> <nat:190> + <var:C> <nat:386> + <nat:170> <var:z> + <nat:384> <var:M> + <var:Z> <nat:58> + <var:o> <nat:12> + <nat:408> <var:A> + <var:N> <nat:126> + <nat:329> + <var:V> <nat:130> + <var:H> <nat:426> + <var:T> <nat:80> $ will be odd . \end{theorem} \begin{proof} We know that the integers $ <nat:58> $ , $ <nat:12> $ , additionally $ <nat:384> $ are clearly even Additionally , take note the integers $ <nat:130> $ , $ <nat:170> $ , $ <nat:426> $ , and likewise $ <nat:408> $ must be even numbers The leading terms $ <nat:80> $ , $ <nat:126> $ , and $ <nat:386> $ are guaranteed to be even What's more , the natural number $ <nat:190> $ is trivially an even number in $ \mathbb{Z}^+ $ The adding of even numbers successively with an odd natural number is in itself an odd natural . We know that $ <nat:329> $ is clearly an odd positive integer . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:T> <var:o> <var:V> <var:M> <var:z> <var:N> <var:H> <var:A> <var:Z> <var:f> <var:C> : nat , Nat . odd ( <nat:190> * <var:f> + <nat:386> * <var:C> + <nat:170> * <var:z> + <nat:384> * <var:M> + <nat:58> * <var:Z> + <nat:12> * <var:o> + <nat:408> * <var:A> + <nat:126> * <var:N> + <nat:130> * <var:V> + <nat:426> * <var:H> + <nat:80> * <var:T> + <nat:329> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:58> = true ) . { auto . } assert ( <genH> : Nat . even <nat:12> = true ) . { auto . } assert ( <genH> : Nat . even <nat:384> = true ) . { auto . } assert ( <genH> : Nat . even <nat:130> = true ) . { auto . } assert ( <genH> : Nat . even <nat:170> = true ) . { auto . } assert ( <genH> : Nat . even <nat:426> = true ) . { auto . } assert ( <genH> : Nat . even <nat:408> = true ) . { auto . } assert ( <genH> : Nat . even <nat:80> = true ) . { auto . } assert ( <genH> : Nat . even <nat:126> = true ) . { auto . } assert ( <genH> : Nat . even <nat:386> = true ) . { auto . } assert ( <genH> : Nat . even <nat:190> = true ) . { auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . assert ( <genH> : Nat . odd <nat:329> = true ) . { auto . } repeat rewrite Nat . even_mul . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 