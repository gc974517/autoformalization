\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Using some natural numbers $ <var:B> $ , $ <var:b> $ , $ <var:r> $ , $ <var:c> $ , $ <var:n> $ , and $ <var:J> $ $ <var:J> \cdot <nat:344> + <nat:486> \cdot <var:B> + <nat:364> \cdot <var:n> + <var:c> \cdot <nat:254> + <nat:239> + <var:b> \cdot <nat:244> + <nat:86> \cdot <var:r> $ must be odd . \end{theorem} \begin{proof} The expression $ <var:J> * <nat:344> + <var:b> * <nat:244> + <var:n> * <nat:364> + <var:B> * <nat:486> + <var:r> * <nat:86> + <nat:254> * <var:c> $ is even . We know the multiplication of an even whole number and some number is guaranteed to be even . See that the whole number $ <nat:344> $ is guaranteed to be an even natural Building on , the numbers $ <nat:486> $ , $ <nat:244> $ , and also $ <nat:364> $ must be even Likewise , the whole number $ <nat:254> $ is guaranteed to be an even element of $ \mathbb{Z}^+ $ The whole number $ <nat:86> $ is even It can be shown that this proposition is proven . Notice that $ <nat:239> $ is known to be an odd natural . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:B> <var:b> <var:r> <var:c> <var:n> <var:J> : nat , Nat . odd ( <nat:344> * <var:J> + <nat:486> * <var:B> + <nat:364> * <var:n> + <nat:254> * <var:c> + <nat:244> * <var:b> + <nat:86> * <var:r> + <nat:239> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:344> = true ) . { auto . } assert ( <genH> : Nat . even <nat:486> = true ) . { auto . } assert ( <genH> : Nat . even <nat:244> = true ) . { auto . } assert ( <genH> : Nat . even <nat:364> = true ) . { auto . } assert ( <genH> : Nat . even <nat:254> = true ) . { auto . } assert ( <genH> : Nat . even <nat:86> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:344> * <var:J> + <nat:486> * <var:B> + <nat:364> * <var:n> + <nat:254> * <var:c> + <nat:244> * <var:b> + <nat:86> * <var:r> ) = true ) . { repeat rewrite Nat . even_add . repeat rewrite Nat . even_mul . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } assert ( <genH> : Nat . odd <nat:239> = true ) . { auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . rewrite <genH> . auto . Qed . 