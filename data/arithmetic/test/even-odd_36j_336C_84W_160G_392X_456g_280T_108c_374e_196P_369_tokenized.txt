\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:C> <nat:336> + <var:P> <nat:196> + <nat:374> <var:e> + <nat:36> <var:j> + <var:g> <nat:456> + <nat:84> <var:W> + <nat:369> + <nat:160> <var:G> + <nat:392> <var:X> + <nat:280> <var:T> + <var:c> <nat:108> $ is guaranteed to be odd given all whole numbers $ <var:j> $ , $ <var:C> $ , $ <var:T> $ , $ <var:G> $ , $ <var:P> $ , $ <var:c> $ , $ <var:e> $ , $ <var:g> $ , $ <var:W> $ , and $ <var:X> $ . \end{theorem} \begin{proof} $ <var:P> \times <nat:196> + <nat:392> \times <var:X> + <nat:160> \times <var:G> + <nat:280> \times <var:T> + <var:g> \times <nat:456> + <var:j> \times <nat:36> + <var:W> \times <nat:84> + <nat:336> \times <var:C> + <nat:108> \times <var:c> + <nat:374> \times <var:e> $ is obviously even . Our lemma holds from the fact the multiplication between even elements of $ \mathbb{N} $ with some number is by definition an even whole number . We justify the formula $ <nat:36> <var:j> + <var:C> <nat:336> + <nat:84> <var:W> + <var:G> <nat:160> + <var:X> <nat:392> + <nat:456> <var:g> + <var:T> <nat:280> + <nat:108> <var:c> + <var:e> <nat:374> + <nat:369> + <nat:196> <var:P> $ will be odd . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:j> <var:C> <var:T> <var:G> <var:P> <var:c> <var:e> <var:g> <var:W> <var:X> : nat , Nat . odd ( <nat:336> * <var:C> + <nat:196> * <var:P> + <nat:374> * <var:e> + <nat:36> * <var:j> + <nat:456> * <var:g> + <nat:84> * <var:W> + <nat:160> * <var:G> + <nat:392> * <var:X> + <nat:280> * <var:T> + <nat:108> * <var:c> + <nat:369> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:336> * <var:C> + <nat:196> * <var:P> + <nat:374> * <var:e> + <nat:36> * <var:j> + <nat:456> * <var:g> + <nat:84> * <var:W> + <nat:160> * <var:G> + <nat:392> * <var:X> + <nat:280> * <var:T> + <nat:108> * <var:c> ) = true ) . { repeat rewrite Nat . even_add . repeat rewrite Nat . even_mul . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . auto . Qed . 