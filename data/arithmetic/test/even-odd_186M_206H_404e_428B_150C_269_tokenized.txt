\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} For every positive numbers $ <var:e> $ , $ <var:C> $ , $ <var:H> $ , $ <var:B> $ , and $ <var:M> $ $ <var:C> \cdot <nat:150> + <var:H> \cdot <nat:206> + <nat:428> \cdot <var:B> + <var:M> \cdot <nat:186> + <nat:269> + <var:e> \cdot <nat:404> $ must be odd . \end{theorem} \begin{proof} From the fact the addition of an even element of $ \mathbb{Z}^+ $ and an odd element of $ \mathbb{Z}^+ $ is odd , hence the summation $ <var:M> \times <nat:186> + <var:e> \times <nat:404> + <nat:206> \times <var:H> + <nat:269> + <nat:428> \times <var:B> + <var:C> \times <nat:150> $ itself will be odd . We apply the assumption the fact that the summation $ <nat:404> \times <var:e> + <var:H> \times <nat:206> + <var:B> \times <nat:428> + <var:C> \times <nat:150> + <nat:186> \times <var:M> + <nat:269> $ is clearly odd from the knowledge the sum $ <nat:186> \cdot <var:M> + <var:H> \cdot <nat:206> + <nat:404> \cdot <var:e> + <var:B> \cdot <nat:428> + <nat:150> \cdot <var:C> $ is obviously even . Notice the adding of even numbers together with an even natural number is guaranteed to be an even element of $ \mathbb{N} $ . Likewise , remember that the products $ <var:M> \cdot <nat:186> $ , $ <nat:206> \cdot <var:H> $ , $ <var:e> \cdot <nat:404> $ , $ <nat:428> \cdot <var:B> $ , and moreover $ <nat:150> \cdot <var:C> $ are even as a consequence that the positive integers $ <nat:186> $ , $ <nat:206> $ , $ <nat:404> $ , $ <nat:428> $ , and moreover $ <nat:150> $ must be even positive integers . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:e> <var:C> <var:H> <var:B> <var:M> : nat , Nat . odd ( <nat:150> * <var:C> + <nat:206> * <var:H> + <nat:428> * <var:B> + <nat:186> * <var:M> + <nat:404> * <var:e> + <nat:269> ) = true . Proof . intros . rewrite Nat . odd_add . assert ( <genH> : Nat . even <nat:186> = true ) . { auto . } assert ( <genH> : Nat . even <nat:206> = true ) . { auto . } assert ( <genH> : Nat . even <nat:404> = true ) . { auto . } assert ( <genH> : Nat . even <nat:428> = true ) . { auto . } assert ( <genH> : Nat . even <nat:150> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:186> * <var:M> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:206> * <var:H> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:404> * <var:e> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:428> * <var:B> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:150> * <var:C> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:150> * <var:C> + <nat:206> * <var:H> + <nat:428> * <var:B> + <nat:186> * <var:M> + <nat:404> * <var:e> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite <- Nat . negb_even . rewrite <genH> . auto . Qed . 