\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:74> * <var:x> + <var:U> * <nat:34> + <nat:372> + <nat:458> * <var:z> + <var:F> * <nat:234> + <nat:190> * <var:m> + <nat:140> * <var:q> + <nat:432> * <var:G> + <nat:110> * <var:k> + <nat:362> * <var:w> $ is even . \end{theorem} \begin{proof} The pairs $ <nat:432> \cdot <var:G> $ , $ <var:q> \cdot <nat:140> $ , and also $ <var:w> \cdot <nat:362> $ must be even . The terms $ <var:k> \cdot <nat:110> $ , $ <nat:458> \cdot <var:z> $ , $ <var:U> \cdot <nat:34> $ , plus $ <var:x> \cdot <nat:74> $ must be even naturals because the product between an even number in $ \mathbb{Z}^+ $ and a number in $ \mathbb{Z}^+ $ is an even whole number . Building on , see that the term $ <nat:190> \cdot <var:m> $ is guaranteed to be even . Further , $ <var:F> \cdot <nat:234> $ is guaranteed to be an even number . The summation of an even natural number with an even positive integer must be even . So , the formula $ <var:q> <nat:140> + <var:m> <nat:190> + <var:U> <nat:34> + <nat:458> <var:z> + <var:w> <nat:362> + <nat:432> <var:G> + <var:x> <nat:74> + <nat:234> <var:F> + <var:k> <nat:110> + <nat:372> $ is guaranteed to be even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:x> <var:U> <var:z> <var:F> <var:m> <var:q> <var:G> <var:k> <var:w> : nat , Nat . even ( <nat:74> * <var:x> + <nat:34> * <var:U> + <nat:458> * <var:z> + <nat:234> * <var:F> + <nat:190> * <var:m> + <nat:140> * <var:q> + <nat:432> * <var:G> + <nat:110> * <var:k> + <nat:362> * <var:w> + <nat:372> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:432> * <var:G> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:140> * <var:q> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:362> * <var:w> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:110> * <var:k> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:458> * <var:z> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:34> * <var:U> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:74> * <var:x> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:190> * <var:m> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:234> * <var:F> ) = true ) . { rewrite Nat . even_mul . auto . } repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 