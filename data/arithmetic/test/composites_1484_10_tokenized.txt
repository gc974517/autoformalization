\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \newtheorem{definition}{Definition} \begin{document} \begin{definition} Under the condition we get $ <var:Y> = <var:g> * <var:A> * <var:t> * <var:L> * <var:j> * <var:y> * <var:a> * <var:K> * <var:R> * <var:D> $ assuming $ <var:Y> \in \mathbb{N} $ as well as where $ <var:R> $ , $ <var:g> $ , $ <var:D> $ , $ <var:L> $ , $ <var:a> $ , $ <var:A> $ , $ <var:j> $ , $ <var:K> $ , $ <var:t> $ , and $ <var:y> \geq <nat:2> $ taking some $ <var:A> $ , $ <var:y> $ , $ <var:K> $ , $ <var:t> $ , $ <var:L> $ , $ <var:g> $ , $ <var:a> $ , $ <var:D> $ , $ <var:j> $ , $ <var:R> \in \mathbb{Z}^+ $ , then claim that $ <var:Y> $ is a <def:ten-composite> number . \end{definition} \begin{theorem} $ <nat:119750400> = <var:Y> $ is a <def:ten-composite> positive integer . \end{theorem} \begin{proof} Remember that a <def:ten-composite> natural number is the product of numbers $ <var:K> $ , $ <var:g> $ , $ <var:a> $ , $ <var:j> $ , $ <var:y> $ , $ <var:t> $ , $ <var:D> $ , $ <var:L> $ , $ <var:A> $ and $ <var:R> $ more than or equivalent to <nat:2> . Note that $ <nat:119750400> = <var:R> \cdot <var:A> \cdot <var:K> \cdot <var:y> \cdot <var:a> \cdot <var:j> \cdot <var:D> \cdot <var:g> \cdot <var:t> \cdot <var:L> $ gives $ <var:R> = <nat:10> $ , $ <var:g> = <nat:6> $ , $ <var:A> = <nat:5> $ , $ <var:j> = <nat:9> $ , $ <var:t> = <nat:11> $ , $ <var:L> = <nat:7> $ , $ <var:K> = <nat:3> $ , $ <var:y> = <nat:2> $ , $ <var:D> = <nat:8> $ , and $ <var:a> = <nat:12> $ . Additionally note that $ <nat:2> $ , $ <nat:12> $ , $ <nat:7> $ , $ <nat:9> $ , $ <nat:5> $ , $ <nat:6> $ , $ <nat:11> $ , $ <nat:8> $ , $ <nat:10> $ , and $ <nat:3> \geq <nat:2> $ . This suggests our result is valid . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:ten-composite> ( <var:Y> : nat ) := exists <var:A> <var:y> <var:K> <var:t> <var:L> <var:g> <var:a> <var:D> <var:j> <var:R> : nat , ( <var:Y> = <var:g> * <var:A> * <var:t> * <var:L> * <var:j> * <var:y> * <var:a> * <var:K> * <var:R> * <var:D> ) /\ ( <var:R> >= <nat:2> ) /\ ( <var:g> >= <nat:2> ) /\ ( <var:D> >= <nat:2> ) /\ ( <var:L> >= <nat:2> ) /\ ( <var:a> >= <nat:2> ) /\ ( <var:A> >= <nat:2> ) /\ ( <var:j> >= <nat:2> ) /\ ( <var:K> >= <nat:2> ) /\ ( <var:t> >= <nat:2> ) /\ ( <var:y> >= <nat:2> ) . Theorem <genP:1> : <def:ten-composite> <nat:119750400> . Proof . unfold <def:ten-composite> . exists <nat:5> . exists <nat:2> . exists <nat:3> . exists <nat:11> . exists <nat:7> . exists <nat:6> . exists <nat:12> . exists <nat:8> . exists <nat:9> . exists <nat:10> . assert ( <genH> : <nat:2> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:12> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:7> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:9> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:5> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:6> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:11> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:8> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:10> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:3> >= <nat:2> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 