\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:S> \cdot <nat:76> + <var:C> \cdot <nat:186> + <nat:8> \cdot <var:i> + <var:c> \cdot <nat:322> + <nat:46> \cdot <var:E> + <var:r> \cdot <nat:44> + <nat:252> + <nat:88> \cdot <var:k> + <var:v> \cdot <nat:318> $ will be even taking any integers $ <var:v> $ , $ <var:k> $ , $ <var:C> $ , $ <var:c> $ , $ <var:i> $ , $ <var:S> $ , $ <var:r> $ , and $ <var:E> $ . \end{theorem} \begin{proof} We demonstrate this claim holds . $ <nat:8> * <var:i> + <nat:76> * <var:S> + <nat:322> * <var:c> + <var:v> * <nat:318> + <nat:46> * <var:E> + <nat:88> * <var:k> + <var:r> * <nat:44> + <var:C> * <nat:186> $ is obviously even . See that the products $ <var:v> <nat:318> $ , $ <var:S> <nat:76> $ , plus $ <nat:186> <var:C> $ are obviously even whole numbers . Building on , notice the pairs $ <var:r> <nat:44> $ , $ <nat:322> <var:c> $ , additionally $ <var:k> <nat:88> $ are guaranteed to be even natural numbers . Take note that the product $ <nat:8> <var:i> $ is guaranteed to be an even natural number . Notice that $ <nat:46> <var:E> $ is trivially even . The sum $ <var:c> <nat:322> + <var:S> <nat:76> + <var:C> <nat:186> + <var:v> <nat:318> + <nat:8> <var:i> + <var:k> <nat:88> + <var:r> <nat:44> + <var:E> <nat:46> $ is guaranteed to be even from the knowledge the multiplication of even integers with an arbitrary positive integer will be an even number . We know the totaling between an even number in $ \mathbb{Z}^+ $ and an even element of $ \mathbb{Z}^+ $ is an even element of $ \mathbb{N} $ . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:v> <var:k> <var:C> <var:c> <var:i> <var:S> <var:r> <var:E> : nat , Nat . even ( <nat:76> * <var:S> + <nat:186> * <var:C> + <nat:8> * <var:i> + <nat:322> * <var:c> + <nat:46> * <var:E> + <nat:44> * <var:r> + <nat:88> * <var:k> + <nat:318> * <var:v> + <nat:252> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:318> * <var:v> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:76> * <var:S> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:186> * <var:C> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:44> * <var:r> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:322> * <var:c> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:88> * <var:k> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:8> * <var:i> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:46> * <var:E> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:76> * <var:S> + <nat:186> * <var:C> + <nat:8> * <var:i> + <nat:322> * <var:c> + <nat:46> * <var:E> + <nat:44> * <var:r> + <nat:88> * <var:k> + <nat:318> * <var:v> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . even_add . rewrite <genH> . auto . Qed . 