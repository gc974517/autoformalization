\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:f> <nat:432> + <nat:68> <var:R> + <var:W> <nat:322> + <nat:124> <var:H> + <nat:368> <var:s> + <nat:266> + <var:K> <nat:158> + <var:T> <nat:208> + <nat:58> <var:d> + <nat:118> <var:D> $ is guaranteed to be even . \end{theorem} \begin{proof} We utilize the fact that the formula $ <var:T> \times <nat:208> + <nat:266> + <nat:368> \times <var:s> + <var:d> \times <nat:58> + <nat:124> \times <var:H> + <var:D> \times <nat:118> + <nat:322> \times <var:W> + <var:R> \times <nat:68> + <var:f> \times <nat:432> + <var:K> \times <nat:158> $ is obviously even because $ <nat:322> \cdot <var:W> + <nat:68> \cdot <var:R> + <var:K> \cdot <nat:158> + <var:f> \cdot <nat:432> + <var:s> \cdot <nat:368> + <var:D> \cdot <nat:118> + <var:T> \cdot <nat:208> + <nat:58> \cdot <var:d> + <nat:124> \cdot <var:H> $ is guaranteed to be even . Because multiplying of even numbers in $ \mathbb{N} $ with a positive integer will be even this result must be true . We know $ <nat:266> $ is guaranteed to be an even whole number . We show $ <nat:266> + <nat:322> * <var:W> + <var:H> * <nat:124> + <var:K> * <nat:158> + <var:d> * <nat:58> + <var:D> * <nat:118> + <var:s> * <nat:368> + <var:T> * <nat:208> + <nat:432> * <var:f> + <var:R> * <nat:68> $ must be even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:f> <var:R> <var:W> <var:H> <var:s> <var:K> <var:T> <var:d> <var:D> : nat , Nat . even ( <nat:432> * <var:f> + <nat:68> * <var:R> + <nat:322> * <var:W> + <nat:124> * <var:H> + <nat:368> * <var:s> + <nat:158> * <var:K> + <nat:208> * <var:T> + <nat:58> * <var:d> + <nat:118> * <var:D> + <nat:266> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:432> * <var:f> + <nat:68> * <var:R> + <nat:322> * <var:W> + <nat:124> * <var:H> + <nat:368> * <var:s> + <nat:158> * <var:K> + <nat:208> * <var:T> + <nat:58> * <var:d> + <nat:118> * <var:D> ) = true ) . { repeat rewrite Nat . even_add . repeat rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even <nat:266> = true ) . { auto . } rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . auto . Qed . 