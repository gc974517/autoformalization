\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Assuming any positive terms $ <var:D> $ , $ <var:B> $ , $ <var:m> $ , $ <var:u> $ , $ <var:k> $ , $ <var:q> $ , $ <var:W> $ , $ <var:L> $ , and $ <var:K> $ the expression $ <var:u> <nat:96> + <nat:162> <var:B> + <nat:104> <var:K> + <var:W> <nat:192> + <var:L> <nat:428> + <nat:475> + <var:m> <nat:14> + <var:k> <nat:478> + <nat:94> <var:D> + <nat:100> <var:q> $ is guaranteed to be odd . \end{theorem} \begin{proof} We check the formula $ <var:W> \cdot <nat:192> + <var:u> \cdot <nat:96> + <nat:478> \cdot <var:k> + <nat:14> \cdot <var:m> + <nat:428> \cdot <var:L> + <nat:475> + <nat:94> \cdot <var:D> + <nat:162> \cdot <var:B> + <nat:104> \cdot <var:K> + <var:q> \cdot <nat:100> $ must be odd . Remember that the natural numbers $ <nat:478> $ , $ <nat:428> $ , $ <nat:162> $ , $ <nat:96> $ , $ <nat:100> $ , $ <nat:192> $ , $ <nat:104> $ , as well as $ <nat:14> $ are even . Hence , the products $ <var:k> \cdot <nat:478> $ , $ <nat:428> \cdot <var:L> $ , $ <nat:162> \cdot <var:B> $ , $ <var:u> \cdot <nat:96> $ , $ <nat:100> \cdot <var:q> $ , $ <nat:192> \cdot <var:W> $ , $ <var:K> \cdot <nat:104> $ , and moreover $ <nat:14> \cdot <var:m> $ must be even too . The pair $ <nat:94> \cdot <var:D> $ is known as an even element of $ \mathbb{N} $ . This is true from the knowledge multiplying of an even natural number and an arbitrary number must be even , which holds from the knowledge the number $ <nat:94> $ is known to be clearly an even number . The summation between even elements of $ \mathbb{N} $ collectively with an odd natural number is guaranteed to be odd . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:D> <var:B> <var:m> <var:u> <var:k> <var:q> <var:W> <var:L> <var:K> : nat , Nat . odd ( <nat:96> * <var:u> + <nat:162> * <var:B> + <nat:104> * <var:K> + <nat:192> * <var:W> + <nat:428> * <var:L> + <nat:14> * <var:m> + <nat:478> * <var:k> + <nat:94> * <var:D> + <nat:100> * <var:q> + <nat:475> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:478> = true ) . { auto . } assert ( <genH> : Nat . even <nat:428> = true ) . { auto . } assert ( <genH> : Nat . even <nat:162> = true ) . { auto . } assert ( <genH> : Nat . even <nat:96> = true ) . { auto . } assert ( <genH> : Nat . even <nat:100> = true ) . { auto . } assert ( <genH> : Nat . even <nat:192> = true ) . { auto . } assert ( <genH> : Nat . even <nat:104> = true ) . { auto . } assert ( <genH> : Nat . even <nat:14> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:478> * <var:k> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:428> * <var:L> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:162> * <var:B> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:96> * <var:u> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:100> * <var:q> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:192> * <var:W> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:104> * <var:K> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:14> * <var:m> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:94> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:94> * <var:D> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 