\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:s> <nat:274> + <var:l> <nat:162> + <nat:438> <var:t> + <nat:208> <var:R> + <nat:166> <var:Y> + <nat:306> <var:W> + <var:V> <nat:168> + <nat:278> <var:N> + <nat:397> + <var:A> <nat:70> + <nat:226> <var:c> + <nat:420> <var:q> $ is guaranteed to be odd with all natural terms $ <var:s> $ , $ <var:c> $ , $ <var:Y> $ , $ <var:R> $ , $ <var:A> $ , $ <var:N> $ , $ <var:W> $ , $ <var:V> $ , $ <var:q> $ , $ <var:l> $ , and $ <var:t> $ . \end{theorem} \begin{proof} The adding between even numbers in $ \mathbb{N} $ together with an odd element of $ \mathbb{Z}^+ $ must be by definition an odd number . In consequence , the formula $ <nat:306> \times <var:W> + <var:q> \times <nat:420> + <var:t> \times <nat:438> + <nat:278> \times <var:N> + <nat:168> \times <var:V> + <nat:397> + <nat:162> \times <var:l> + <nat:274> \times <var:s> + <var:Y> \times <nat:166> + <nat:208> \times <var:R> + <var:c> \times <nat:226> + <var:A> \times <nat:70> $ fundamentally is odd . Our theorem is proven by reason that $ <nat:168> \cdot <var:V> + <nat:208> \cdot <var:R> + <var:s> \cdot <nat:274> + <nat:70> \cdot <var:A> + <var:q> \cdot <nat:420> + <var:N> \cdot <nat:278> + <nat:306> \cdot <var:W> + <var:Y> \cdot <nat:166> + <var:t> \cdot <nat:438> + <var:c> \cdot <nat:226> + <nat:162> \cdot <var:l> $ is known to be even . In addition , notice that the natural numbers $ <nat:168> $ , $ <nat:208> $ , $ <nat:274> $ , $ <nat:70> $ , $ <nat:420> $ , $ <nat:278> $ , $ <nat:306> $ , $ <nat:166> $ , $ <nat:438> $ , $ <nat:226> $ , as well as $ <nat:162> $ are guaranteed to be even . Then , the pairs $ <nat:168> \times <var:V> $ , $ <var:R> \times <nat:208> $ , $ <nat:274> \times <var:s> $ , $ <var:A> \times <nat:70> $ , $ <nat:420> \times <var:q> $ , $ <var:N> \times <nat:278> $ , $ <nat:306> \times <var:W> $ , $ <nat:166> \times <var:Y> $ , $ <nat:438> \times <var:t> $ , $ <var:c> \times <nat:226> $ , and likewise $ <var:l> \times <nat:162> $ is guaranteed to be even as well . From the fact the adding between an even integer and even elements of $ \mathbb{N} $ is even , and by reason that the multiplication of an even integer and some number in $ \mathbb{N} $ is guaranteed to be an even number . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:s> <var:c> <var:Y> <var:R> <var:A> <var:N> <var:W> <var:V> <var:q> <var:l> <var:t> : nat , Nat . odd ( <nat:274> * <var:s> + <nat:162> * <var:l> + <nat:438> * <var:t> + <nat:208> * <var:R> + <nat:166> * <var:Y> + <nat:306> * <var:W> + <nat:168> * <var:V> + <nat:278> * <var:N> + <nat:70> * <var:A> + <nat:226> * <var:c> + <nat:420> * <var:q> + <nat:397> ) = true . Proof . intros . rewrite Nat . odd_add . assert ( <genH> : Nat . even <nat:168> = true ) . { auto . } assert ( <genH> : Nat . even <nat:208> = true ) . { auto . } assert ( <genH> : Nat . even <nat:274> = true ) . { auto . } assert ( <genH> : Nat . even <nat:70> = true ) . { auto . } assert ( <genH> : Nat . even <nat:420> = true ) . { auto . } assert ( <genH> : Nat . even <nat:278> = true ) . { auto . } assert ( <genH> : Nat . even <nat:306> = true ) . { auto . } assert ( <genH> : Nat . even <nat:166> = true ) . { auto . } assert ( <genH> : Nat . even <nat:438> = true ) . { auto . } assert ( <genH> : Nat . even <nat:226> = true ) . { auto . } assert ( <genH> : Nat . even <nat:162> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:168> * <var:V> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:208> * <var:R> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:274> * <var:s> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:70> * <var:A> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:420> * <var:q> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:278> * <var:N> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:306> * <var:W> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:166> * <var:Y> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:438> * <var:t> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:226> * <var:c> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:162> * <var:l> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:274> * <var:s> + <nat:162> * <var:l> + <nat:438> * <var:t> + <nat:208> * <var:R> + <nat:166> * <var:Y> + <nat:306> * <var:W> + <nat:168> * <var:V> + <nat:278> * <var:N> + <nat:70> * <var:A> + <nat:226> * <var:c> + <nat:420> * <var:q> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite <- Nat . negb_even . rewrite <genH> . auto . Qed . 