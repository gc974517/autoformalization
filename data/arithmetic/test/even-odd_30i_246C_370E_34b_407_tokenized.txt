\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:370> \cdot <var:E> + <nat:246> \cdot <var:C> + <nat:407> + <nat:30> \cdot <var:i> + <nat:34> \cdot <var:b> $ is guaranteed to be odd with every positive numbers $ <var:b> $ , $ <var:E> $ , $ <var:i> $ , and $ <var:C> $ . \end{theorem} \begin{proof} It can be demonstrated that $ <nat:246> * <var:C> + <nat:370> * <var:E> + <nat:407> + <var:i> * <nat:30> + <nat:34> * <var:b> $ is odd . This claim is true from the fact $ <var:C> <nat:246> + <nat:30> <var:i> + <nat:370> <var:E> + <var:b> <nat:34> $ is guaranteed to be even . The whole number $ <nat:30> $ is guaranteed to be an even element of $ \mathbb{N} $ . Then , $ <nat:30> <var:i> $ must be even too . The pair $ <nat:246> <var:C> $ is guaranteed to be an even whole number as a consequence that multiplying of an even natural with a integer must be even as well as the number $ <nat:246> $ is known as even . In addition to this , notice $ <var:E> <nat:370> $ is known to be an even natural as a consequence that taking the product between an even element of $ \mathbb{Z}^+ $ and some element of $ \mathbb{N} $ will be an even integer , which is proven by reason that the coefficient $ <nat:370> $ is obviously even . In addition to this , see that the number $ <nat:34> $ is known as an even number . Consequently , the product $ <var:b> <nat:34> $ must be even too . Since the totaling between an even whole number and an even number in $ \mathbb{Z}^+ $ will be even , this claim must be true . Notice that the adding between even natural numbers together with an odd natural will be an odd number in $ \mathbb{Z}^+ $ . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:b> <var:E> <var:i> <var:C> : nat , Nat . odd ( <nat:370> * <var:E> + <nat:246> * <var:C> + <nat:30> * <var:i> + <nat:34> * <var:b> + <nat:407> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:30> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:30> * <var:i> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:246> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:246> * <var:C> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:370> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:370> * <var:E> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:34> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:34> * <var:b> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:370> * <var:E> + <nat:246> * <var:C> + <nat:30> * <var:i> + <nat:34> * <var:b> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . auto . Qed . 