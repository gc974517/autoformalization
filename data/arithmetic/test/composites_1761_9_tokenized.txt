\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \newtheorem{definition}{Definition} \begin{document} \begin{definition} Assume $ <var:U> $ , $ <var:h> $ , $ <var:G> $ , $ <var:y> $ , $ <var:S> $ , $ <var:T> $ , $ <var:c> $ , $ <var:P> $ , $ <var:z> $ are positive integers satisfying the condition that $ <var:z> $ , $ <var:y> $ , $ <var:T> $ , $ <var:S> $ , $ <var:P> $ , $ <var:h> $ , $ <var:G> $ , $ <var:c> $ , $ <var:U> > <nat:1> $ . Claim that $ <var:v> \in \mathbb{Z}^+ $ will be named a <def:nine-composite> natural number when $ <var:v> = <var:z> \cdot <var:U> \cdot <var:G> \cdot <var:y> \cdot <var:c> \cdot <var:T> \cdot <var:P> \cdot <var:S> \cdot <var:h> $ . \end{definition} \begin{theorem} $ <var:v> = <nat:38438400> $ is a <def:nine-composite> positive integer . \end{theorem} \begin{proof} Allow $ <var:P> = <nat:13> $ , $ <var:S> = <nat:10> $ , $ <var:U> = <nat:8> $ , $ <var:y> = <nat:7> $ , $ <var:G> = <nat:11> $ , $ <var:z> = <nat:12> $ , $ <var:T> = <nat:2> $ , $ <var:c> = <nat:5> $ and $ <var:h> = <nat:4> $ . We prove our claim is valid because $ <var:G> \cdot <var:S> \cdot <var:h> \cdot <var:U> \cdot <var:y> \cdot <var:T> \cdot <var:P> \cdot <var:c> \cdot <var:z> = <nat:38438400> $ . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:nine-composite> ( <var:v> : nat ) := exists <var:U> <var:h> <var:G> <var:y> <var:S> <var:T> <var:c> <var:P> <var:z> : nat , ( <var:z> > <nat:1> ) /\ ( <var:y> > <nat:1> ) /\ ( <var:T> > <nat:1> ) /\ ( <var:S> > <nat:1> ) /\ ( <var:P> > <nat:1> ) /\ ( <var:h> > <nat:1> ) /\ ( <var:G> > <nat:1> ) /\ ( <var:c> > <nat:1> ) /\ ( <var:U> > <nat:1> ) /\ ( <var:v> = <var:z> * <var:U> * <var:G> * <var:y> * <var:c> * <var:T> * <var:P> * <var:S> * <var:h> ) . Theorem <genP:1> : <def:nine-composite> <nat:38438400> . Proof . unfold <def:nine-composite> . exists <nat:8> . exists <nat:4> . exists <nat:11> . exists <nat:7> . exists <nat:10> . exists <nat:2> . exists <nat:5> . exists <nat:13> . exists <nat:12> . repeat split . all : lia . Qed . 