\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \newtheorem{definition}{Definition} \begin{document} \begin{definition} Say that $ <var:W> $ is a <def:twelve-composite> number supposing that with some $ <var:O> $ , $ <var:k> $ , $ <var:U> $ , $ <var:q> $ , $ <var:u> $ , $ <var:Q> $ , $ <var:C> $ , $ <var:P> $ , $ <var:a> $ , $ <var:R> $ , $ <var:x> $ , $ <var:H> \in \mathbb{Z}^+ $ we have $ <var:O> $ , $ <var:q> $ , $ <var:C> $ , $ <var:H> $ , $ <var:x> $ , $ <var:u> $ , $ <var:U> $ , $ <var:a> $ , $ <var:R> $ , $ <var:k> $ , $ <var:Q> $ , $ <var:P> \geq <nat:2> $ as well as taking $ <var:W> \in \mathbb{N} $ , $ <var:W> = <var:H> \times <var:a> \times <var:q> \times <var:C> \times <var:k> \times <var:u> \times <var:O> \times <var:U> \times <var:P> \times <var:Q> \times <var:R> \times <var:x> $ . \end{definition} \begin{theorem} $ <var:W> = <nat:6227020800> $ is a <def:twelve-composite> positive integer . \end{theorem} \begin{proof} Recall <nat:6227020800> is a <def:twelve-composite> integer under the condition that <nat:6227020800> is the multiplication between numbers $ <var:u> $ , $ <var:U> $ , $ <var:P> $ , $ <var:q> $ , $ <var:H> $ , $ <var:Q> $ , $ <var:a> $ , $ <var:C> $ , $ <var:k> $ , $ <var:R> $ , $ <var:x> $ and $ <var:O> $ more than or equivalent to <nat:2> . Assume $ <var:x> = <nat:4> $ , $ <var:R> = <nat:13> $ , $ <var:H> = <nat:12> $ , $ <var:a> = <nat:5> $ , $ <var:u> = <nat:3> $ , $ <var:P> = <nat:10> $ , $ <var:U> = <nat:8> $ , $ <var:C> = <nat:6> $ , $ <var:O> = <nat:2> $ , $ <var:k> = <nat:9> $ , $ <var:Q> = <nat:7> $ , $ <var:q> = <nat:11> $ . Note that $ <var:x> = <nat:4> $ , $ <var:Q> = <nat:7> $ , $ <var:R> = <nat:13> $ , $ <var:H> = <nat:12> $ , $ <var:u> = <nat:3> $ , $ <var:U> = <nat:8> $ , $ <var:P> = <nat:10> $ , $ <var:O> = <nat:2> $ , $ <var:a> = <nat:5> $ , $ <var:C> = <nat:6> $ , $ <var:q> = <nat:11> $ , $ <var:k> = <nat:9> $ are more than or equivalent to <nat:2> . As a consequence , <nat:6227020800> is <def:twelve-composite> has been verified . Because of this , $ <var:O> * <var:C> * <var:P> * <var:Q> * <var:U> * <var:R> * <var:x> * <var:q> * <var:a> * <var:k> * <var:u> * <var:H> = <nat:6227020800> $ has been verified . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:twelve-composite> ( <var:W> : nat ) := exists <var:O> <var:k> <var:U> <var:q> <var:u> <var:Q> <var:C> <var:P> <var:a> <var:R> <var:x> <var:H> : nat , ( <var:O> >= <nat:2> ) /\ ( <var:q> >= <nat:2> ) /\ ( <var:C> >= <nat:2> ) /\ ( <var:H> >= <nat:2> ) /\ ( <var:x> >= <nat:2> ) /\ ( <var:u> >= <nat:2> ) /\ ( <var:U> >= <nat:2> ) /\ ( <var:a> >= <nat:2> ) /\ ( <var:R> >= <nat:2> ) /\ ( <var:k> >= <nat:2> ) /\ ( <var:Q> >= <nat:2> ) /\ ( <var:P> >= <nat:2> ) /\ ( <var:W> = <var:H> * <var:a> * <var:q> * <var:C> * <var:k> * <var:u> * <var:O> * <var:U> * <var:P> * <var:Q> * <var:R> * <var:x> ) . Theorem <genP:1> : <def:twelve-composite> <nat:6227020800> . Proof . unfold <def:twelve-composite> . exists <nat:2> . exists <nat:9> . exists <nat:8> . exists <nat:11> . exists <nat:3> . exists <nat:7> . exists <nat:6> . exists <nat:10> . exists <nat:5> . exists <nat:13> . exists <nat:4> . exists <nat:12> . assert ( <genH> : <nat:4> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:7> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:13> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:12> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:3> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:8> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:10> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:2> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:5> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:6> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:11> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:9> >= <nat:2> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 