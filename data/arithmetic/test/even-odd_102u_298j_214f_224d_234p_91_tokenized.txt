\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:p> <nat:234> + <var:u> <nat:102> + <nat:224> <var:d> + <nat:91> + <var:j> <nat:298> + <var:f> <nat:214> $ is odd using some positive integers $ <var:d> $ , $ <var:f> $ , $ <var:p> $ , $ <var:u> $ , and $ <var:j> $ . \end{theorem} \begin{proof} We prove that $ <var:u> <nat:102> + <var:j> <nat:298> + <var:f> <nat:214> + <nat:224> <var:d> + <var:p> <nat:234> $ is even , from the knowledge the addition of an even number in $ \mathbb{N} $ with an even integer must be even . Furthermore , recall that the products $ <var:u> * <nat:102> $ , $ <nat:298> * <var:j> $ , $ <var:f> * <nat:214> $ , $ <nat:224> * <var:d> $ , and also $ <nat:234> * <var:p> $ are known to be even . This must be true as a consequence that taking the product of an even number in $ \mathbb{N} $ with some positive integer must be an even number in addition to the positive integers $ <nat:102> $ , $ <nat:298> $ , $ <nat:214> $ , $ <nat:224> $ , and likewise $ <nat:234> $ will be even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:d> <var:f> <var:p> <var:u> <var:j> : nat , Nat . odd ( <nat:234> * <var:p> + <nat:102> * <var:u> + <nat:224> * <var:d> + <nat:298> * <var:j> + <nat:214> * <var:f> + <nat:91> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:102> = true ) . { auto . } assert ( <genH> : Nat . even <nat:298> = true ) . { auto . } assert ( <genH> : Nat . even <nat:214> = true ) . { auto . } assert ( <genH> : Nat . even <nat:224> = true ) . { auto . } assert ( <genH> : Nat . even <nat:234> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:102> * <var:u> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:298> * <var:j> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:214> * <var:f> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:224> * <var:d> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:234> * <var:p> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:234> * <var:p> + <nat:102> * <var:u> + <nat:224> * <var:d> + <nat:298> * <var:j> + <nat:214> * <var:f> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . auto . Qed . 