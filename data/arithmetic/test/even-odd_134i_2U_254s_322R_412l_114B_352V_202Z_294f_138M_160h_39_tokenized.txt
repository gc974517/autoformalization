\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:352> * <var:V> + <nat:134> * <var:i> + <var:h> * <nat:160> + <var:l> * <nat:412> + <var:B> * <nat:114> + <nat:2> * <var:U> + <nat:202> * <var:Z> + <var:s> * <nat:254> + <nat:138> * <var:M> + <var:f> * <nat:294> + <nat:322> * <var:R> + <nat:39> $ is guaranteed to be odd for every $ <var:B> $ , $ <var:h> $ , $ <var:U> $ , $ <var:Z> $ , $ <var:s> $ , $ <var:f> $ , $ <var:R> $ , $ <var:i> $ , $ <var:V> $ , $ <var:l> $ , and $ <var:M> \in \mathbb{N} $ . \end{theorem} \begin{proof} We work with the assumption the knowledge $ <nat:322> <var:R> + <var:l> <nat:412> + <var:h> <nat:160> + <nat:294> <var:f> + <var:M> <nat:138> + <nat:114> <var:B> + <var:s> <nat:254> + <nat:134> <var:i> + <var:U> <nat:2> + <nat:202> <var:Z> + <nat:352> <var:V> $ is known to be even . The sum $ <var:i> <nat:134> + <nat:2> <var:U> + <var:s> <nat:254> + <nat:322> <var:R> + <var:l> <nat:412> + <var:B> <nat:114> + <var:V> <nat:352> + <nat:202> <var:Z> + <nat:294> <var:f> + <nat:138> <var:M> + <nat:160> <var:h> $ must be even from the knowledge the product between even numbers and a number in $ \mathbb{N} $ is even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:B> <var:h> <var:U> <var:Z> <var:s> <var:f> <var:R> <var:i> <var:V> <var:l> <var:M> : nat , Nat . odd ( <nat:352> * <var:V> + <nat:134> * <var:i> + <nat:160> * <var:h> + <nat:412> * <var:l> + <nat:114> * <var:B> + <nat:2> * <var:U> + <nat:202> * <var:Z> + <nat:254> * <var:s> + <nat:138> * <var:M> + <nat:294> * <var:f> + <nat:322> * <var:R> + <nat:39> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:352> * <var:V> + <nat:134> * <var:i> + <nat:160> * <var:h> + <nat:412> * <var:l> + <nat:114> * <var:B> + <nat:2> * <var:U> + <nat:202> * <var:Z> + <nat:254> * <var:s> + <nat:138> * <var:M> + <nat:294> * <var:f> + <nat:322> * <var:R> ) = true ) . { repeat rewrite Nat . even_add . repeat rewrite Nat . even_mul . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . auto . Qed . 