\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:216> * <var:n> + <nat:247> + <var:r> * <nat:226> + <var:w> * <nat:168> + <var:y> * <nat:334> + <nat:24> * <var:b> + <var:p> * <nat:114> + <var:P> * <nat:454> + <nat:16> * <var:J> + <var:t> * <nat:258> $ is odd . \end{theorem} \begin{proof} Observe $ <nat:247> $ is known to be an odd number . The adding between an even positive integer and an odd element of $ \mathbb{N} $ must be in itself an odd number in $ \mathbb{Z}^+ $ . The whole number $ <nat:334> $ is known to be even . Then , the term $ <var:y> \times <nat:334> $ is even as well . Remember the leading term $ <nat:114> $ is clearly even . Hence , the term $ <var:p> \times <nat:114> $ must be even additionally . Notice the integer $ <nat:24> $ is known as an even number in $ \mathbb{N} $ . Then , the product $ <nat:24> \times <var:b> $ is even too . Adding on , we know $ <nat:16> \times <var:J> $ is known as an even positive integer since taking the product of an even number in $ \mathbb{Z}^+ $ with an arbitrary natural number will be an even natural number , which is true since the natural number $ <nat:16> $ is by definition an even element of $ \mathbb{N} $ . Notice the pair $ <var:P> \times <nat:454> $ is trivially an even number because the number $ <nat:454> $ is known as an even number . Observe that the positive integer $ <nat:216> $ is trivially even . Consequently , $ <nat:216> \times <var:n> $ is guaranteed to be even in addition . Building on , we know that $ <var:r> \times <nat:226> $ is clearly an even natural . This is proven by reason that the multiplication of an even whole number with a positive integer will be clearly an even element of $ \mathbb{Z}^+ $ in addition to the coefficient $ <nat:226> $ is obviously even . Furthermore , observe that the whole number $ <nat:258> $ is guaranteed to be an even whole number . For this reason , the pair $ <nat:258> \times <var:t> $ will be even as well . The whole number $ <nat:168> $ is trivially even . Therefore , the product $ <nat:168> \times <var:w> $ must be even too . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:n> <var:r> <var:w> <var:y> <var:b> <var:p> <var:P> <var:J> <var:t> : nat , Nat . odd ( <nat:216> * <var:n> + <nat:226> * <var:r> + <nat:168> * <var:w> + <nat:334> * <var:y> + <nat:24> * <var:b> + <nat:114> * <var:p> + <nat:454> * <var:P> + <nat:16> * <var:J> + <nat:258> * <var:t> + <nat:247> ) = true . Proof . intros . assert ( <genH> : Nat . odd <nat:247> = true ) . { auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . assert ( <genH> : Nat . even <nat:334> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:334> * <var:y> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:114> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:114> * <var:p> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:24> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:24> * <var:b> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:16> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:16> * <var:J> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:454> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:454> * <var:P> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:216> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:216> * <var:n> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:226> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:226> * <var:r> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:258> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:258> * <var:t> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:168> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:168> * <var:w> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 