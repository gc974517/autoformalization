\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:b> <nat:130> + <nat:367> + <var:m> <nat:396> + <var:P> <nat:92> + <var:R> <nat:286> + <nat:426> <var:o> + <nat:6> <var:C> $ is guaranteed to be odd using some positive terms $ <var:m> $ , $ <var:R> $ , $ <var:b> $ , $ <var:C> $ , $ <var:P> $ , and $ <var:o> $ . \end{theorem} \begin{proof} We make use the knowledge the sum $ <var:m> \cdot <nat:396> + <nat:286> \cdot <var:R> + <nat:92> \cdot <var:P> + <var:C> \cdot <nat:6> + <nat:426> \cdot <var:o> + <nat:130> \cdot <var:b> $ is known to be even , from the knowledge the summation between an even integer with an even element of $ \mathbb{N} $ will be even . Take note the pairs $ <var:o> * <nat:426> $ plus $ <nat:130> * <var:b> $ are guaranteed to be even numbers in $ \mathbb{N} $ . In addition , the pairs $ <var:R> * <nat:286> $ in addition to $ <nat:6> * <var:C> $ are trivially even . The product $ <nat:92> * <var:P> $ is an even element of $ \mathbb{N} $ by reason that multiplying of an even element of $ \mathbb{N} $ and any natural number is even . The pair $ <var:m> * <nat:396> $ is trivially even . This holds as a consequence that multiplying of an even element of $ \mathbb{N} $ and a number in $ \mathbb{Z}^+ $ must be an even natural number . and because multiplying of an even number with an arbitrary element of $ \mathbb{N} $ must be even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:m> <var:R> <var:b> <var:C> <var:P> <var:o> : nat , Nat . odd ( <nat:130> * <var:b> + <nat:396> * <var:m> + <nat:92> * <var:P> + <nat:286> * <var:R> + <nat:426> * <var:o> + <nat:6> * <var:C> + <nat:367> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:426> * <var:o> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:130> * <var:b> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:286> * <var:R> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:6> * <var:C> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:92> * <var:P> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:396> * <var:m> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:130> * <var:b> + <nat:396> * <var:m> + <nat:92> * <var:P> + <nat:286> * <var:R> + <nat:426> * <var:o> + <nat:6> * <var:C> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . auto . Qed . 