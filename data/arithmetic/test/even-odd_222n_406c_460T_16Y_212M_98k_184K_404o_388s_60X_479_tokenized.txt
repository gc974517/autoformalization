\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:460> \times <var:T> + <var:X> \times <nat:60> + <var:n> \times <nat:222> + <nat:16> \times <var:Y> + <var:o> \times <nat:404> + <nat:388> \times <var:s> + <nat:184> \times <var:K> + <var:M> \times <nat:212> + <var:k> \times <nat:98> + <nat:479> + <var:c> \times <nat:406> $ will be odd . \end{theorem} \begin{proof} It can be checked that the formula $ <var:n> <nat:222> + <nat:406> <var:c> + <nat:460> <var:T> + <nat:16> <var:Y> + <nat:479> + <var:M> <nat:212> + <nat:98> <var:k> + <nat:184> <var:K> + <nat:404> <var:o> + <var:s> <nat:388> + <nat:60> <var:X> $ is odd . The terms $ <var:K> \cdot <nat:184> $ , $ <nat:404> \cdot <var:o> $ , $ <nat:222> \cdot <var:n> $ , $ <var:Y> \cdot <nat:16> $ , $ <var:k> \cdot <nat:98> $ , $ <nat:60> \cdot <var:X> $ , and moreover $ <var:s> \cdot <nat:388> $ are known to be even . This holds from the knowledge the multiplication of an even number and some whole number is by its very nature an even natural number . Adding on , observe that $ <var:T> \cdot <nat:460> $ is known to be even . Further , the term $ <nat:212> \cdot <var:M> $ is trivially even . $ <var:c> \cdot <nat:406> $ is an even positive integer . Notice that the summation of an even element of $ \mathbb{Z}^+ $ and an odd number in $ \mathbb{N} $ must be an odd number in $ \mathbb{Z}^+ $ . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:T> <var:X> <var:n> <var:Y> <var:o> <var:s> <var:K> <var:M> <var:k> <var:c> : nat , Nat . odd ( <nat:460> * <var:T> + <nat:60> * <var:X> + <nat:222> * <var:n> + <nat:16> * <var:Y> + <nat:404> * <var:o> + <nat:388> * <var:s> + <nat:184> * <var:K> + <nat:212> * <var:M> + <nat:98> * <var:k> + <nat:406> * <var:c> + <nat:479> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:184> * <var:K> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:404> * <var:o> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:222> * <var:n> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:16> * <var:Y> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:98> * <var:k> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:60> * <var:X> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:388> * <var:s> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:460> * <var:T> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:212> * <var:M> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:406> * <var:c> ) = true ) . { rewrite Nat . even_mul . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 