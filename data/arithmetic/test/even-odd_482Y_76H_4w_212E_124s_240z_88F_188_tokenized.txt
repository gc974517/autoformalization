\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Given positive integers $ <var:s> $ , $ <var:E> $ , $ <var:F> $ , $ <var:z> $ , $ <var:w> $ , $ <var:H> $ , and $ <var:Y> $ the expression $ <nat:76> \cdot <var:H> + <nat:240> \cdot <var:z> + <nat:124> \cdot <var:s> + <nat:88> \cdot <var:F> + <var:Y> \cdot <nat:482> + <var:E> \cdot <nat:212> + <nat:188> + <var:w> \cdot <nat:4> $ must be even . \end{theorem} \begin{proof} The summation $ <var:Y> * <nat:482> + <nat:88> * <var:F> + <var:s> * <nat:124> + <nat:76> * <var:H> + <var:z> * <nat:240> + <nat:212> * <var:E> + <var:w> * <nat:4> $ is guaranteed to be even . Observe that the integer $ <nat:482> $ is guaranteed to be an even number in $ \mathbb{Z}^+ $ . As a consequence , the pair $ <var:Y> * <nat:482> $ will be even at the same time . The product $ <nat:76> * <var:H> $ is trivially an even number in $ \mathbb{N} $ by reason that the product between an even natural and a number in $ \mathbb{N} $ is guaranteed to be even , and is true as a consequence that the leading term $ <nat:76> $ is known as even . Remember the term $ <var:w> * <nat:4> $ is known as an even element of $ \mathbb{N} $ . This claim holds since multiplying between an even number and an arbitrary whole number is even . This fact is proven since the integer $ <nat:4> $ is clearly an even element of $ \mathbb{Z}^+ $ . The positive integer $ <nat:212> $ is guaranteed to be an even positive integer . Thus , the product $ <nat:212> * <var:E> $ will be even additionally . The whole number $ <nat:124> $ is known as an even whole number . Hence , the product $ <nat:124> * <var:s> $ must be even additionally . Further , $ <var:z> * <nat:240> $ is an even number in $ \mathbb{Z}^+ $ since the natural number $ <nat:240> $ is known as obviously an even number in $ \mathbb{Z}^+ $ . The natural number $ <nat:88> $ is even . As a consequence , the term $ <nat:88> * <var:F> $ is even also . The theorem must be true from the knowledge multiplying of even numbers in $ \mathbb{N} $ and a number must be even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:s> <var:E> <var:F> <var:z> <var:w> <var:H> <var:Y> : nat , Nat . even ( <nat:76> * <var:H> + <nat:240> * <var:z> + <nat:124> * <var:s> + <nat:88> * <var:F> + <nat:482> * <var:Y> + <nat:212> * <var:E> + <nat:4> * <var:w> + <nat:188> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:482> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:482> * <var:Y> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:76> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:76> * <var:H> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:4> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:4> * <var:w> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:212> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:212> * <var:E> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:124> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:124> * <var:s> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:240> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:240> * <var:z> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:88> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:88> * <var:F> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:76> * <var:H> + <nat:240> * <var:z> + <nat:124> * <var:s> + <nat:88> * <var:F> + <nat:482> * <var:Y> + <nat:212> * <var:E> + <nat:4> * <var:w> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . even_add . rewrite <genH> . auto . Qed . 