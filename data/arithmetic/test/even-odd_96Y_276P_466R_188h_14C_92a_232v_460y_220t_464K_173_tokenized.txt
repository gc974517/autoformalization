\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Taking unknowns $ <var:R> $ , $ <var:a> $ , $ <var:y> $ , $ <var:Y> $ , $ <var:C> $ , $ <var:P> $ , $ <var:v> $ , $ <var:h> $ , $ <var:K> $ , and $ <var:t> $ the formula $ <nat:96> * <var:Y> + <nat:173> + <var:P> * <nat:276> + <var:R> * <nat:466> + <var:h> * <nat:188> + <var:C> * <nat:14> + <var:a> * <nat:92> + <var:v> * <nat:232> + <nat:460> * <var:y> + <var:t> * <nat:220> + <var:K> * <nat:464> $ is odd . \end{theorem} \begin{proof} Recall taking the product between an even integer and a number in $ \mathbb{N} $ must be even . See that the natural numbers $ <nat:188> $ , $ <nat:460> $ , $ <nat:232> $ , $ <nat:276> $ , and also $ <nat:14> $ must be even elements of $ \mathbb{N} $ On top of this , recall that the integers $ <nat:464> $ , $ <nat:466> $ , as well as $ <nat:96> $ are known to be even elements of $ \mathbb{Z}^+ $ Adding on , the whole number $ <nat:220> $ is trivially even Adding on , the natural number $ <nat:92> $ is known to be even We verify our proposition is true . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:R> <var:a> <var:y> <var:Y> <var:C> <var:P> <var:v> <var:h> <var:K> <var:t> : nat , Nat . odd ( <nat:96> * <var:Y> + <nat:276> * <var:P> + <nat:466> * <var:R> + <nat:188> * <var:h> + <nat:14> * <var:C> + <nat:92> * <var:a> + <nat:232> * <var:v> + <nat:460> * <var:y> + <nat:220> * <var:t> + <nat:464> * <var:K> + <nat:173> ) = true . Proof . intros . rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . repeat rewrite Nat . even_mul . assert ( <genH> : Nat . even <nat:188> = true ) . { auto . } assert ( <genH> : Nat . even <nat:460> = true ) . { auto . } assert ( <genH> : Nat . even <nat:232> = true ) . { auto . } assert ( <genH> : Nat . even <nat:276> = true ) . { auto . } assert ( <genH> : Nat . even <nat:14> = true ) . { auto . } assert ( <genH> : Nat . even <nat:464> = true ) . { auto . } assert ( <genH> : Nat . even <nat:466> = true ) . { auto . } assert ( <genH> : Nat . even <nat:96> = true ) . { auto . } assert ( <genH> : Nat . even <nat:220> = true ) . { auto . } assert ( <genH> : Nat . even <nat:92> = true ) . { auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 