\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \newtheorem{definition}{Definition} \begin{document} \begin{definition} We define that $ <var:V> $ is <def:eight-composite> wherever $ \exists <var:T> $ , $ <var:E> $ , $ <var:x> $ , $ <var:F> $ , $ <var:G> $ , $ <var:U> $ , $ <var:X> $ , $ <var:p> \in \mathbb{Z}^+ $ satisfying the condition that $ <var:X> * <var:F> * <var:p> * <var:G> * <var:E> * <var:T> * <var:U> * <var:x> = <var:V> $ given $ <var:V> \in \mathbb{N} $ as well as so that $ <var:p> $ , $ <var:U> $ , $ <var:X> $ , $ <var:G> $ , $ <var:F> $ , $ <var:x> $ , $ <var:T> $ and $ <var:E> \geq <nat:2> $ . \end{definition} \begin{theorem} $ <nat:5405400> = <var:V> $ is a <def:eight-composite> positive integer . \end{theorem} \begin{proof} Assume $ <var:x> = <nat:6> $ , $ <var:E> = <nat:2> $ , $ <var:X> = <nat:7> $ , $ <var:T> = <nat:13> $ , $ <var:F> = <nat:9> $ , $ <var:G> = <nat:5> $ , $ <var:p> = <nat:10> $ , $ <var:U> = <nat:11> $ . Further note that $ <var:X> = <nat:7> $ , $ <var:x> = <nat:6> $ , $ <var:E> = <nat:2> $ , $ <var:F> = <nat:9> $ , $ <var:U> = <nat:11> $ , $ <var:T> = <nat:13> $ , $ <var:G> = <nat:5> $ , and $ <var:p> = <nat:10> \geq <nat:2> $ . Therefore , $ <var:U> \cdot <var:E> \cdot <var:X> \cdot <var:F> \cdot <var:p> \cdot <var:x> \cdot <var:T> \cdot <var:G> = <nat:5405400> $ is proven . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:eight-composite> ( <var:V> : nat ) := exists <var:T> <var:E> <var:x> <var:F> <var:G> <var:U> <var:X> <var:p> : nat , ( <var:X> * <var:F> * <var:p> * <var:G> * <var:E> * <var:T> * <var:U> * <var:x> = <var:V> ) /\ ( <var:p> >= <nat:2> ) /\ ( <var:U> >= <nat:2> ) /\ ( <var:X> >= <nat:2> ) /\ ( <var:G> >= <nat:2> ) /\ ( <var:F> >= <nat:2> ) /\ ( <var:x> >= <nat:2> ) /\ ( <var:T> >= <nat:2> ) /\ ( <var:E> >= <nat:2> ) . Theorem <genP:1> : <def:eight-composite> <nat:5405400> . Proof . unfold <def:eight-composite> . exists <nat:13> . exists <nat:2> . exists <nat:6> . exists <nat:9> . exists <nat:5> . exists <nat:11> . exists <nat:7> . exists <nat:10> . assert ( <genH> : <nat:7> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:6> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:2> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:9> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:11> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:13> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:5> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:10> >= <nat:2> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 