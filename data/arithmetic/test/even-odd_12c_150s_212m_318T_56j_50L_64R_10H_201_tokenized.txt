\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} For every $ <var:T> $ , $ <var:s> $ , $ <var:H> $ , $ <var:m> $ , $ <var:c> $ , $ <var:R> $ , $ <var:j> $ , and $ <var:L> $ the expression $ <nat:10> * <var:H> + <var:R> * <nat:64> + <nat:201> + <nat:50> * <var:L> + <nat:150> * <var:s> + <var:c> * <nat:12> + <var:m> * <nat:212> + <var:T> * <nat:318> + <var:j> * <nat:56> $ is guaranteed to be odd . \end{theorem} \begin{proof} We know the formula $ <nat:10> <var:H> + <var:j> <nat:56> + <var:L> <nat:50> + <nat:201> + <nat:212> <var:m> + <nat:12> <var:c> + <nat:64> <var:R> + <nat:318> <var:T> + <var:s> <nat:150> $ is obviously odd by reason that $ <nat:12> <var:c> + <var:s> <nat:150> + <nat:212> <var:m> + <var:T> <nat:318> + <nat:56> <var:j> + <nat:50> <var:L> + <var:R> <nat:64> + <var:H> <nat:10> $ is guaranteed to be even , by reason that the product of an even natural and any element of $ \mathbb{N} $ will be even . The numbers $ <nat:64> $ , $ <nat:12> $ , $ <nat:10> $ , $ <nat:56> $ , $ <nat:212> $ , and moreover $ <nat:150> $ are clearly even positive integers Furthermore , the number $ <nat:50> $ is trivially even Additionally , the whole number $ <nat:318> $ is an even positive integer Because the addition of an even positive integer with an even element of $ \mathbb{Z}^+ $ is itself an even number in $ \mathbb{Z}^+ $ , Take note that $ <nat:201> $ is known as odd . By reason that the addition between an even whole number with an odd element of $ \mathbb{Z}^+ $ is an odd whole number , then the claim holds . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:T> <var:s> <var:H> <var:m> <var:c> <var:R> <var:j> <var:L> : nat , Nat . odd ( <nat:10> * <var:H> + <nat:64> * <var:R> + <nat:50> * <var:L> + <nat:150> * <var:s> + <nat:12> * <var:c> + <nat:212> * <var:m> + <nat:318> * <var:T> + <nat:56> * <var:j> + <nat:201> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:64> = true ) . { auto . } assert ( <genH> : Nat . even <nat:12> = true ) . { auto . } assert ( <genH> : Nat . even <nat:10> = true ) . { auto . } assert ( <genH> : Nat . even <nat:56> = true ) . { auto . } assert ( <genH> : Nat . even <nat:212> = true ) . { auto . } assert ( <genH> : Nat . even <nat:150> = true ) . { auto . } assert ( <genH> : Nat . even <nat:50> = true ) . { auto . } assert ( <genH> : Nat . even <nat:318> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:10> * <var:H> + <nat:64> * <var:R> + <nat:50> * <var:L> + <nat:150> * <var:s> + <nat:12> * <var:c> + <nat:212> * <var:m> + <nat:318> * <var:T> + <nat:56> * <var:j> ) = true ) . { repeat rewrite Nat . even_add . repeat rewrite Nat . even_mul . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } assert ( <genH> : Nat . odd <nat:201> = true ) . { auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . rewrite <genH> . auto . Qed . 