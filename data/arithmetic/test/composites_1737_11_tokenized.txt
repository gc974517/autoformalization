\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Iff there exist positive integers $ <var:I> $ , $ <var:H> $ , $ <var:E> $ , $ <var:M> $ , $ <var:b> $ , $ <var:a> $ , $ <var:X> $ , $ <var:i> $ , $ <var:U> $ , $ <var:D> $ , $ <var:N> $ more than <nat:1> . Let that $ <var:Z> \in \mathbb{Z}^+ $ is a <def:eleven-composite> whole number if $ <var:H> \cdot <var:b> \cdot <var:I> \cdot <var:N> \cdot <var:U> \cdot <var:i> \cdot <var:E> \cdot <var:D> \cdot <var:a> \cdot <var:X> \cdot <var:M> = <var:Z> $ . Thus $ <nat:622702080> = <var:Z> $ is a <def:eleven-composite> whole number . \end{theorem} \begin{proof} Notice $ <nat:8> $ , $ <nat:6> $ , $ <nat:5> $ , $ <nat:9> $ , $ <nat:13> $ , $ <nat:11> $ , $ <nat:2> $ , $ <nat:4> $ , $ <nat:12> $ , $ <nat:7> $ , $ <nat:3> > <nat:1> $ . Additionally observe likewise $ <nat:7> * <nat:5> * <nat:9> * <nat:3> * <nat:12> * <nat:13> * <nat:8> * <nat:11> * <nat:2> * <nat:4> * <nat:6> = <nat:622702080> $ . This gives <nat:622702080> is <def:eleven-composite> . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:eleven-composite> ( <var:Z> : nat ) := exists <var:I> <var:H> <var:E> <var:M> <var:b> <var:a> <var:X> <var:i> <var:U> <var:D> <var:N> : nat , ( <var:I> > <nat:1> ) /\ ( <var:H> > <nat:1> ) /\ ( <var:E> > <nat:1> ) /\ ( <var:M> > <nat:1> ) /\ ( <var:b> > <nat:1> ) /\ ( <var:a> > <nat:1> ) /\ ( <var:X> > <nat:1> ) /\ ( <var:i> > <nat:1> ) /\ ( <var:U> > <nat:1> ) /\ ( <var:D> > <nat:1> ) /\ ( <var:N> > <nat:1> ) /\ ( <var:H> * <var:b> * <var:I> * <var:N> * <var:U> * <var:i> * <var:E> * <var:D> * <var:a> * <var:X> * <var:M> = <var:Z> ) . Theorem <genP:1> : <def:eleven-composite> <nat:622702080> . Proof . unfold <def:eleven-composite> . assert ( <genH> : <nat:8> > <nat:1> ) . { lia . } assert ( <genH> : <nat:6> > <nat:1> ) . { lia . } assert ( <genH> : <nat:5> > <nat:1> ) . { lia . } assert ( <genH> : <nat:9> > <nat:1> ) . { lia . } assert ( <genH> : <nat:13> > <nat:1> ) . { lia . } assert ( <genH> : <nat:11> > <nat:1> ) . { lia . } assert ( <genH> : <nat:2> > <nat:1> ) . { lia . } assert ( <genH> : <nat:4> > <nat:1> ) . { lia . } assert ( <genH> : <nat:12> > <nat:1> ) . { lia . } assert ( <genH> : <nat:7> > <nat:1> ) . { lia . } assert ( <genH> : <nat:3> > <nat:1> ) . { lia . } exists <nat:5> . exists <nat:8> . exists <nat:4> . exists <nat:2> . exists <nat:11> . exists <nat:13> . exists <nat:12> . exists <nat:9> . exists <nat:6> . exists <nat:3> . exists <nat:7> . repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 