\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \newtheorem{definition}{Definition} \begin{document} \begin{definition} Say that $ <var:M> $ is <def:six-composite> whenever there are some $ <var:A> $ , $ <var:U> $ , $ <var:Z> $ , $ <var:V> $ , $ <var:l> $ , $ <var:m> $ so that $ <var:m> \times <var:l> \times <var:U> \times <var:V> \times <var:A> \times <var:Z> = <var:M> $ with some number $ <var:M> $ as well as such that $ <var:l> $ , $ <var:U> $ , $ <var:m> $ , $ <var:V> $ , $ <var:Z> $ and $ <var:A> \geq <nat:2> $ . \end{definition} \begin{theorem} The natural number <nat:40320> is a <def:six-composite> integer . \end{theorem} \begin{proof} Recall that <nat:40320> is a <def:six-composite> natural number whenever it is the multiplication of integers $ <var:m> $ , $ <var:U> $ , $ <var:V> $ , $ <var:Z> $ , $ <var:A> $ and $ <var:l> $ where $ <var:V> $ , $ <var:Z> $ , $ <var:A> $ , $ <var:l> $ , $ <var:m> $ , $ <var:U> \geq <nat:2> $ . Assume $ <var:l> = <nat:8> $ , $ <var:Z> = <nat:10> $ , $ <var:V> = <nat:7> $ , $ <var:U> = <nat:4> $ , $ <var:A> = <nat:6> $ , $ <var:m> = <nat:3> $ . We verify <nat:40320> is a <def:six-composite> whole number . Notice $ <var:m> \times <var:Z> \times <var:V> \times <var:l> \times <var:U> \times <var:A> = <nat:3> \times <nat:10> \times <nat:7> \times <nat:8> \times <nat:4> \times <nat:6> = <nat:40320> $ . This implies the principle is valid . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:six-composite> ( <var:M> : nat ) := exists <var:A> <var:U> <var:Z> <var:V> <var:l> <var:m> : nat , ( <var:m> * <var:l> * <var:U> * <var:V> * <var:A> * <var:Z> = <var:M> ) /\ ( <var:l> >= <nat:2> ) /\ ( <var:U> >= <nat:2> ) /\ ( <var:m> >= <nat:2> ) /\ ( <var:V> >= <nat:2> ) /\ ( <var:Z> >= <nat:2> ) /\ ( <var:A> >= <nat:2> ) . Theorem <genP:1> : <def:six-composite> <nat:40320> . Proof . unfold <def:six-composite> . exists <nat:6> . exists <nat:4> . exists <nat:10> . exists <nat:7> . exists <nat:8> . exists <nat:3> . repeat split . all : lia . Qed . 