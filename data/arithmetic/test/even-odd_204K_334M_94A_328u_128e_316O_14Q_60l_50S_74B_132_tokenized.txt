\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:334> * <var:M> + <var:l> * <nat:60> + <nat:94> * <var:A> + <nat:204> * <var:K> + <nat:50> * <var:S> + <nat:14> * <var:Q> + <nat:128> * <var:e> + <nat:74> * <var:B> + <var:O> * <nat:316> + <nat:328> * <var:u> + <nat:132> $ will be even . \end{theorem} \begin{proof} It can be justified that the expression $ <nat:204> <var:K> + <var:M> <nat:334> + <nat:94> <var:A> + <var:u> <nat:328> + <nat:128> <var:e> + <var:O> <nat:316> + <var:Q> <nat:14> + <nat:60> <var:l> + <nat:50> <var:S> + <nat:74> <var:B> + <nat:132> $ is guaranteed to be even . Observe that $ <nat:132> $ is clearly even . The pairs $ <var:O> * <nat:316> $ , $ <nat:94> * <var:A> $ , $ <nat:328> * <var:u> $ , $ <nat:74> * <var:B> $ , as well as $ <nat:60> * <var:l> $ are obviously even by reason that the product of an even natural number with some number in $ \mathbb{Z}^+ $ will be even . Take note that the products $ <nat:128> * <var:e> $ and moreover $ <nat:14> * <var:Q> $ are even numbers in $ \mathbb{N} $ . This must be true by reason that taking the product between an even element of $ \mathbb{Z}^+ $ and some integer must be an even element of $ \mathbb{N} $ . The products $ <nat:204> * <var:K> $ and also $ <var:M> * <nat:334> $ are known to be even elements of $ \mathbb{N} $ . Further , we know that $ <nat:50> * <var:S> $ is guaranteed to be even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:M> <var:l> <var:A> <var:K> <var:S> <var:Q> <var:e> <var:B> <var:O> <var:u> : nat , Nat . even ( <nat:334> * <var:M> + <nat:60> * <var:l> + <nat:94> * <var:A> + <nat:204> * <var:K> + <nat:50> * <var:S> + <nat:14> * <var:Q> + <nat:128> * <var:e> + <nat:74> * <var:B> + <nat:316> * <var:O> + <nat:328> * <var:u> + <nat:132> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:132> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:316> * <var:O> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:94> * <var:A> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:328> * <var:u> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:74> * <var:B> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:60> * <var:l> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:128> * <var:e> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:14> * <var:Q> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:204> * <var:K> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:334> * <var:M> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:50> * <var:S> ) = true ) . { rewrite Nat . even_mul . auto . } repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 