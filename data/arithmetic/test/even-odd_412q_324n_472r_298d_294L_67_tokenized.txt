\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:n> * <nat:324> + <nat:67> + <nat:298> * <var:d> + <nat:294> * <var:L> + <nat:472> * <var:r> + <var:q> * <nat:412> $ is odd using integers $ <var:L> $ , $ <var:r> $ , $ <var:n> $ , $ <var:q> $ , and $ <var:d> $ . \end{theorem} \begin{proof} Remember $ <nat:67> $ is known to be an odd integer . It can be checked that that the sum $ <nat:472> \times <var:r> + <nat:67> + <var:n> \times <nat:324> + <var:q> \times <nat:412> + <nat:294> \times <var:L> + <nat:298> \times <var:d> $ must be odd . Remember that the adding of an even number in $ \mathbb{Z}^+ $ and an odd natural is guaranteed to be odd . Take note $ <nat:298> \cdot <var:d> $ is known to be an even number in $ \mathbb{N} $ as a consequence that multiplying between an even number in $ \mathbb{Z}^+ $ with an arbitrary element of $ \mathbb{Z}^+ $ is instrinsically an even number in $ \mathbb{N} $ . This claim is true by reason that the natural number $ <nat:298> $ is clearly itself an even positive integer . In addition to this , the integers $ <nat:412> $ , $ <nat:472> $ , in addition to $ <nat:294> $ are trivially even . Thus , the products $ <var:q> \cdot <nat:412> $ , $ <nat:472> \cdot <var:r> $ , and moreover $ <nat:294> \cdot <var:L> $ will be even also . Further , the natural number $ <nat:324> $ is guaranteed to be an even natural . As a consequence , the product $ <nat:324> \cdot <var:n> $ must be even as well . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:L> <var:r> <var:n> <var:q> <var:d> : nat , Nat . odd ( <nat:324> * <var:n> + <nat:298> * <var:d> + <nat:294> * <var:L> + <nat:472> * <var:r> + <nat:412> * <var:q> + <nat:67> ) = true . Proof . intros . assert ( <genH> : Nat . odd <nat:67> = true ) . { auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . assert ( <genH> : Nat . even <nat:298> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:298> * <var:d> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:412> = true ) . { auto . } assert ( <genH> : Nat . even <nat:472> = true ) . { auto . } assert ( <genH> : Nat . even <nat:294> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:412> * <var:q> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:472> * <var:r> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:294> * <var:L> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:324> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:324> * <var:n> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 