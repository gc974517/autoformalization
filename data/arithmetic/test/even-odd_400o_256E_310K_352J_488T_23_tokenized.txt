\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:23> + <nat:400> \cdot <var:o> + <nat:310> \cdot <var:K> + <var:E> \cdot <nat:256> + <nat:488> \cdot <var:T> + <var:J> \cdot <nat:352> $ must be odd . \end{theorem} \begin{proof} We use the assumption the understanding $ <nat:488> \cdot <var:T> + <nat:23> + <var:J> \cdot <nat:352> + <var:o> \cdot <nat:400> + <var:K> \cdot <nat:310> + <nat:256> \cdot <var:E> $ is obviously odd since the expression $ <nat:352> * <var:J> + <nat:256> * <var:E> + <nat:400> * <var:o> + <nat:310> * <var:K> + <var:T> * <nat:488> $ is clearly even , from the knowledge taking the product between even integers is an even integer . The whole numbers $ <nat:400> $ , $ <nat:256> $ , $ <nat:310> $ , additionally $ <nat:352> $ are obviously even The integer $ <nat:488> $ is clearly an even positive integer $ <nat:310> <var:K> + <var:o> <nat:400> + <var:E> <nat:256> + <nat:352> <var:J> + <var:T> <nat:488> $ will be even because the summation between an even positive integer with even numbers in $ \mathbb{Z}^+ $ is guaranteed to be even . It can be demonstrated that $ <nat:400> * <var:o> + <nat:256> * <var:E> + <nat:310> * <var:K> + <nat:352> * <var:J> + <nat:23> + <var:T> * <nat:488> $ is guaranteed to be odd . We know that $ <nat:23> $ is known as an odd positive integer . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:o> <var:K> <var:E> <var:T> <var:J> : nat , Nat . odd ( <nat:400> * <var:o> + <nat:310> * <var:K> + <nat:256> * <var:E> + <nat:488> * <var:T> + <nat:352> * <var:J> + <nat:23> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:400> = true ) . { auto . } assert ( <genH> : Nat . even <nat:256> = true ) . { auto . } assert ( <genH> : Nat . even <nat:310> = true ) . { auto . } assert ( <genH> : Nat . even <nat:352> = true ) . { auto . } assert ( <genH> : Nat . even <nat:488> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:400> * <var:o> + <nat:310> * <var:K> + <nat:256> * <var:E> + <nat:488> * <var:T> + <nat:352> * <var:J> ) = true ) . { repeat rewrite Nat . even_add . repeat rewrite Nat . even_mul . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } assert ( <genH> : Nat . odd <nat:23> = true ) . { auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . rewrite <genH> . auto . Qed . 