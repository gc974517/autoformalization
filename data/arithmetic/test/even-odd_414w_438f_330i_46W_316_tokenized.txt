\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:330> \cdot <var:i> + <nat:414> \cdot <var:w> + <nat:46> \cdot <var:W> + <nat:316> + <var:f> \cdot <nat:438> $ is even taking every natural terms $ <var:f> $ , $ <var:W> $ , $ <var:i> $ , and $ <var:w> $ . \end{theorem} \begin{proof} What's more , the positive integers $ <nat:330> $ , $ <nat:414> $ , $ <nat:46> $ , and $ <nat:438> $ are even numbers in $ \mathbb{Z}^+ $ . Accordingly , the pairs $ <var:i> \cdot <nat:330> $ , $ <nat:414> \cdot <var:w> $ , $ <var:W> \cdot <nat:46> $ , and likewise $ <var:f> \cdot <nat:438> $ is guaranteed to be even at the same time . Remember $ <nat:316> $ is known as an even whole number . It can be justified that $ <nat:316> + <nat:414> <var:w> + <nat:438> <var:f> + <var:i> <nat:330> + <nat:46> <var:W> $ must be even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:f> <var:W> <var:i> <var:w> : nat , Nat . even ( <nat:330> * <var:i> + <nat:414> * <var:w> + <nat:46> * <var:W> + <nat:438> * <var:f> + <nat:316> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:330> = true ) . { auto . } assert ( <genH> : Nat . even <nat:414> = true ) . { auto . } assert ( <genH> : Nat . even <nat:46> = true ) . { auto . } assert ( <genH> : Nat . even <nat:438> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:330> * <var:i> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:414> * <var:w> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:46> * <var:W> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:438> * <var:f> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:316> = true ) . { auto . } repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 