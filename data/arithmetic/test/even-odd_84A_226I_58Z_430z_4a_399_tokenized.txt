\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:399> + <var:I> \cdot <nat:226> + <nat:84> \cdot <var:A> + <var:z> \cdot <nat:430> + <var:a> \cdot <nat:4> + <nat:58> \cdot <var:Z> $ must be odd for any $ <var:a> $ , $ <var:I> $ , $ <var:z> $ , $ <var:Z> $ , and $ <var:A> $ . \end{theorem} \begin{proof} See $ <nat:399> $ is known as odd . Observe the addition between an even whole number with an odd number in $ \mathbb{N} $ is guaranteed to be fundamentally an odd number in $ \mathbb{N} $ . Observe that $ <nat:58> <var:Z> $ is trivially even because the multiplication of an even element of $ \mathbb{N} $ and some natural is even , which is true by reason that the integer $ <nat:58> $ is known to be even . In addition to this , recall that the coefficients $ <nat:84> $ as well as $ <nat:4> $ must be even . So , the products $ <var:A> <nat:84> $ in addition to $ <var:a> <nat:4> $ will be even additionally . The product $ <nat:226> <var:I> $ is obviously an even element of $ \mathbb{Z}^+ $ . This claim is proven since the number $ <nat:226> $ is trivially even . Remember that the whole number $ <nat:430> $ is guaranteed to be an even natural number . As a consequence , $ <var:z> <nat:430> $ must be even in addition . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:a> <var:I> <var:z> <var:Z> <var:A> : nat , Nat . odd ( <nat:226> * <var:I> + <nat:84> * <var:A> + <nat:430> * <var:z> + <nat:4> * <var:a> + <nat:58> * <var:Z> + <nat:399> ) = true . Proof . intros . assert ( <genH> : Nat . odd <nat:399> = true ) . { auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . assert ( <genH> : Nat . even <nat:58> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:58> * <var:Z> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:84> = true ) . { auto . } assert ( <genH> : Nat . even <nat:4> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:84> * <var:A> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:4> * <var:a> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:226> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:226> * <var:I> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:430> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:430> * <var:z> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 