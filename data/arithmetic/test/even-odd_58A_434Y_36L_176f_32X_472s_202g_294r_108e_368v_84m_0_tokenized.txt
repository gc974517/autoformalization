\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:434> \cdot <var:Y> + <var:X> \cdot <nat:32> + <nat:0> + <var:L> \cdot <nat:36> + <nat:202> \cdot <var:g> + <nat:368> \cdot <var:v> + <var:A> \cdot <nat:58> + <var:m> \cdot <nat:84> + <nat:108> \cdot <var:e> + <var:f> \cdot <nat:176> + <nat:294> \cdot <var:r> + <nat:472> \cdot <var:s> $ is even . \end{theorem} \begin{proof} The leading term $ <nat:58> $ is obviously an even positive integer . As a consequence , the product $ <nat:58> <var:A> $ must be even at the same time . Notice the leading term $ <nat:434> $ is known to be an even number in $ \mathbb{Z}^+ $ . Hence , the pair $ <var:Y> <nat:434> $ must be even as well . Additionally , $ <var:L> <nat:36> $ is obviously even by reason that the natural number $ <nat:36> $ is instrinsically an even number . What's more , the product $ <var:f> <nat:176> $ is even . This claim holds from the knowledge the whole number $ <nat:176> $ is obviously an even number in $ \mathbb{Z}^+ $ . Building on , the pair $ <var:X> <nat:32> $ is obviously even as a consequence that the positive integer $ <nat:32> $ is guaranteed to be an even integer . The product $ <var:s> <nat:472> $ is clearly an even number in $ \mathbb{Z}^+ $ . This is proven by reason that the product of an even number with any natural is guaranteed to be an even integer . This claim is true from the fact the leading term $ <nat:472> $ is trivially even . Recall the positive integer $ <nat:202> $ is clearly an even natural . Hence , the pair $ <var:g> <nat:202> $ is even in addition . Observe $ <var:r> <nat:294> $ is even . This is proven because multiplying between an even natural number with a element of $ \mathbb{N} $ will be even , and must be true from the fact the integer $ <nat:294> $ is trivially an even number in $ \mathbb{Z}^+ $ . See the term $ <nat:108> <var:e> $ is guaranteed to be an even element of $ \mathbb{N} $ . This holds since taking the product between an even element of $ \mathbb{Z}^+ $ with any number will be even , and must be true from the knowledge the leading term $ <nat:108> $ is trivially even . Further , $ <var:v> <nat:368> $ is guaranteed to be an even whole number . This claim holds from the fact the leading term $ <nat:368> $ is trivially even . Observe the leading term $ <nat:84> $ is clearly an even natural number . Hence , $ <nat:84> <var:m> $ must be even at the same time . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:Y> <var:X> <var:L> <var:g> <var:v> <var:A> <var:m> <var:e> <var:f> <var:r> <var:s> : nat , Nat . even ( <nat:434> * <var:Y> + <nat:32> * <var:X> + <nat:36> * <var:L> + <nat:202> * <var:g> + <nat:368> * <var:v> + <nat:58> * <var:A> + <nat:84> * <var:m> + <nat:108> * <var:e> + <nat:176> * <var:f> + <nat:294> * <var:r> + <nat:472> * <var:s> + <nat:0> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:58> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:58> * <var:A> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:434> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:434> * <var:Y> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:36> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:36> * <var:L> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:176> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:176> * <var:f> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:32> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:32> * <var:X> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:472> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:472> * <var:s> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:202> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:202> * <var:g> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:294> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:294> * <var:r> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:108> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:108> * <var:e> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:368> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:368> * <var:v> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:84> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:84> * <var:m> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 