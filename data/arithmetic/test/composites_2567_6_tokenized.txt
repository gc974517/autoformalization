\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \newtheorem{definition}{Definition} \begin{document} \begin{definition} Supposing that we have $ <var:o> \times <var:u> \times <var:s> \times <var:E> \times <var:n> \times <var:b> = <var:e> $ with some positive integer $ <var:e> $ as well as satisfying the condition that $ <var:E> $ , $ <var:s> $ , $ <var:n> $ , $ <var:b> $ , $ <var:o> $ , $ <var:u> \geq <nat:2> $ using some $ <var:n> $ , $ <var:u> $ , $ <var:b> $ , $ <var:s> $ , $ <var:o> $ , $ <var:E> \in \mathbb{Z}^+ $ , then define that $ <var:e> $ is a <def:six-composite> integer . \end{definition} \begin{theorem} $ <nat:109200> = <var:e> $ is <def:six-composite> . \end{theorem} \begin{proof} Recall <nat:109200> is <def:six-composite> only if it is the product of integers $ <var:u> $ , $ <var:s> $ , $ <var:o> $ , $ <var:E> $ , $ <var:n> $ , $ <var:b> $ greater than or equal to <nat:2> . We prove our proposition holds considering $ <nat:5> $ , $ <nat:12> $ , $ <nat:7> $ , $ <nat:10> $ , $ <nat:13> $ , and $ <nat:2> \geq <nat:2> $ plus as $ <nat:109200> = <nat:13> \times <nat:5> \times <nat:2> \times <nat:7> \times <nat:10> \times <nat:12> $ . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:six-composite> ( <var:e> : nat ) := exists <var:n> <var:u> <var:b> <var:s> <var:o> <var:E> : nat , ( <var:o> * <var:u> * <var:s> * <var:E> * <var:n> * <var:b> = <var:e> ) /\ ( <var:E> >= <nat:2> ) /\ ( <var:s> >= <nat:2> ) /\ ( <var:n> >= <nat:2> ) /\ ( <var:b> >= <nat:2> ) /\ ( <var:o> >= <nat:2> ) /\ ( <var:u> >= <nat:2> ) . Theorem <genP:1> : <def:six-composite> <nat:109200> . Proof . unfold <def:six-composite> . assert ( <genH> : <nat:5> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:12> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:7> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:10> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:13> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:2> >= <nat:2> ) . { lia . } exists <nat:5> . exists <nat:7> . exists <nat:13> . exists <nat:2> . exists <nat:12> . exists <nat:10> . repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 