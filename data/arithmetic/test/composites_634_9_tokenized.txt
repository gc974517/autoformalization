\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Denote that supposing $ \exists <var:b> $ , $ <var:U> $ , $ <var:l> $ , $ <var:N> $ , $ <var:O> $ , $ <var:B> $ , $ <var:V> $ , $ <var:K> $ , $ <var:R> \in \mathbb{N} $ satisfying the condition that $ <var:V> $ , $ <var:O> $ , $ <var:l> $ , $ <var:b> $ , $ <var:U> $ , $ <var:K> $ , $ <var:R> $ , $ <var:N> $ , $ <var:B> \geq <nat:2> $ . Take as given that some $ <var:F> $ is defined as <def:nine-composite> if $ <var:N> \cdot <var:O> \cdot <var:b> \cdot <var:V> \cdot <var:K> \cdot <var:l> \cdot <var:B> \cdot <var:R> \cdot <var:U> = <var:F> $ . Thus the integer <nat:17107200> is <def:nine-composite> . \end{theorem} \begin{proof} Observe that $ <nat:17107200> = <var:b> \times <var:B> \times <var:N> \times <var:K> \times <var:R> \times <var:l> \times <var:U> \times <var:O> \times <var:V> $ suggests $ <var:l> = <nat:5> $ , $ <var:O> = <nat:10> $ , $ <var:R> = <nat:3> $ , $ <var:N> = <nat:8> $ , $ <var:B> = <nat:12> $ , $ <var:U> = <nat:9> $ , $ <var:V> = <nat:6> $ , $ <var:b> = <nat:11> $ , $ <var:K> = <nat:2> $ . In addition observe $ <nat:3> $ , $ <nat:2> $ , $ <nat:6> $ , $ <nat:5> $ , $ <nat:10> $ , $ <nat:9> $ , $ <nat:11> $ , $ <nat:12> $ and $ <nat:8> \geq <nat:2> $ . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:nine-composite> ( <var:F> : nat ) := exists <var:b> <var:U> <var:l> <var:N> <var:O> <var:B> <var:V> <var:K> <var:R> : nat , ( <var:V> >= <nat:2> ) /\ ( <var:O> >= <nat:2> ) /\ ( <var:l> >= <nat:2> ) /\ ( <var:b> >= <nat:2> ) /\ ( <var:U> >= <nat:2> ) /\ ( <var:K> >= <nat:2> ) /\ ( <var:R> >= <nat:2> ) /\ ( <var:N> >= <nat:2> ) /\ ( <var:B> >= <nat:2> ) /\ ( <var:N> * <var:O> * <var:b> * <var:V> * <var:K> * <var:l> * <var:B> * <var:R> * <var:U> = <var:F> ) . Theorem <genP:1> : <def:nine-composite> <nat:17107200> . Proof . unfold <def:nine-composite> . exists <nat:11> . exists <nat:9> . exists <nat:5> . exists <nat:8> . exists <nat:10> . exists <nat:12> . exists <nat:6> . exists <nat:2> . exists <nat:3> . assert ( <genH> : <nat:3> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:2> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:6> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:5> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:10> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:9> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:11> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:12> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:8> >= <nat:2> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 