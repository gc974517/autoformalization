\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:M> <nat:126> + <nat:254> <var:r> + <nat:310> <var:l> + <var:O> <nat:232> + <nat:228> <var:s> + <nat:464> <var:c> + <nat:351> + <nat:376> <var:k> + <var:g> <nat:88> + <nat:140> <var:e> + <nat:410> <var:Z> + <var:i> <nat:204> $ is odd . \end{theorem} \begin{proof} The product of an even number in $ \mathbb{N} $ with some whole number is even . The natural numbers $ <nat:464> $ , $ <nat:410> $ , $ <nat:228> $ , $ <nat:204> $ , and also $ <nat:88> $ are trivially even The leading terms $ <nat:376> $ and moreover $ <nat:232> $ are guaranteed to be even elements of $ \mathbb{Z}^+ $ Additionally , we know that the coefficients $ <nat:140> $ additionally $ <nat:254> $ are clearly even naturals The coefficient $ <nat:310> $ is known to be even Adding on , recall the integer $ <nat:126> $ is an even number in $ \mathbb{N} $ It can be proven that this theorem is true . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:M> <var:r> <var:l> <var:O> <var:s> <var:c> <var:k> <var:g> <var:e> <var:Z> <var:i> : nat , Nat . odd ( <nat:126> * <var:M> + <nat:254> * <var:r> + <nat:310> * <var:l> + <nat:232> * <var:O> + <nat:228> * <var:s> + <nat:464> * <var:c> + <nat:376> * <var:k> + <nat:88> * <var:g> + <nat:140> * <var:e> + <nat:410> * <var:Z> + <nat:204> * <var:i> + <nat:351> ) = true . Proof . intros . rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . repeat rewrite Nat . even_mul . assert ( <genH> : Nat . even <nat:464> = true ) . { auto . } assert ( <genH> : Nat . even <nat:410> = true ) . { auto . } assert ( <genH> : Nat . even <nat:228> = true ) . { auto . } assert ( <genH> : Nat . even <nat:204> = true ) . { auto . } assert ( <genH> : Nat . even <nat:88> = true ) . { auto . } assert ( <genH> : Nat . even <nat:376> = true ) . { auto . } assert ( <genH> : Nat . even <nat:232> = true ) . { auto . } assert ( <genH> : Nat . even <nat:140> = true ) . { auto . } assert ( <genH> : Nat . even <nat:254> = true ) . { auto . } assert ( <genH> : Nat . even <nat:310> = true ) . { auto . } assert ( <genH> : Nat . even <nat:126> = true ) . { auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 