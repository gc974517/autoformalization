\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} With all whole numbers $ <var:m> $ , $ <var:y> $ , $ <var:J> $ , $ <var:l> $ , $ <var:o> $ , $ <var:Y> $ , $ <var:C> $ , and $ <var:A> $ $ <var:C> \times <nat:74> + <nat:364> \times <var:Y> + <nat:169> + <var:o> \times <nat:54> + <nat:264> \times <var:l> + <nat:24> \times <var:J> + <nat:230> \times <var:A> + <var:m> \times <nat:270> + <var:y> \times <nat:314> $ will be odd . \end{theorem} \begin{proof} The proposition must be true because $ <var:l> \times <nat:264> + <var:A> \times <nat:230> + <nat:270> \times <var:m> + <nat:314> \times <var:y> + <var:o> \times <nat:54> + <nat:364> \times <var:Y> + <var:C> \times <nat:74> + <var:J> \times <nat:24> $ is guaranteed to be even . In addition to this , take note the products $ <nat:264> \times <var:l> $ , $ <var:A> \times <nat:230> $ , $ <nat:270> \times <var:m> $ , $ <nat:314> \times <var:y> $ , $ <nat:54> \times <var:o> $ , $ <nat:364> \times <var:Y> $ , $ <nat:74> \times <var:C> $ , and $ <nat:24> \times <var:J> $ are known to be even positive integers . This claim is proven from the fact the product between an even element of $ \mathbb{Z}^+ $ with an arbitrary element of $ \mathbb{Z}^+ $ is guaranteed to be an even natural number additionally the whole numbers $ <nat:264> $ , $ <nat:230> $ , $ <nat:270> $ , $ <nat:314> $ , $ <nat:54> $ , $ <nat:364> $ , $ <nat:74> $ , and likewise $ <nat:24> $ must be even . The sum $ <var:Y> \cdot <nat:364> + <var:y> \cdot <nat:314> + <var:l> \cdot <nat:264> + <var:J> \cdot <nat:24> + <nat:74> \cdot <var:C> + <nat:230> \cdot <var:A> + <nat:270> \cdot <var:m> + <nat:54> \cdot <var:o> $ will be even since taking the product between an even number in $ \mathbb{Z}^+ $ and some number will be an even element of $ \mathbb{Z}^+ $ . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:m> <var:y> <var:J> <var:l> <var:o> <var:Y> <var:C> <var:A> : nat , Nat . odd ( <nat:74> * <var:C> + <nat:364> * <var:Y> + <nat:54> * <var:o> + <nat:264> * <var:l> + <nat:24> * <var:J> + <nat:230> * <var:A> + <nat:270> * <var:m> + <nat:314> * <var:y> + <nat:169> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:264> = true ) . { auto . } assert ( <genH> : Nat . even <nat:230> = true ) . { auto . } assert ( <genH> : Nat . even <nat:270> = true ) . { auto . } assert ( <genH> : Nat . even <nat:314> = true ) . { auto . } assert ( <genH> : Nat . even <nat:54> = true ) . { auto . } assert ( <genH> : Nat . even <nat:364> = true ) . { auto . } assert ( <genH> : Nat . even <nat:74> = true ) . { auto . } assert ( <genH> : Nat . even <nat:24> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:264> * <var:l> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:230> * <var:A> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:270> * <var:m> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:314> * <var:y> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:54> * <var:o> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:364> * <var:Y> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:74> * <var:C> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:24> * <var:J> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:74> * <var:C> + <nat:364> * <var:Y> + <nat:54> * <var:o> + <nat:264> * <var:l> + <nat:24> * <var:J> + <nat:230> * <var:A> + <nat:270> * <var:m> + <nat:314> * <var:y> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . auto . Qed . 