\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Define that $ <var:d> $ is a <def:seven-composite> natural number with the condition that there are $ <var:r> $ , $ <var:e> $ , $ <var:w> $ , $ <var:Y> $ , $ <var:k> $ , $ <var:s> $ , $ <var:o> \in \mathbb{N} $ satisfying the condition that $ <var:Y> * <var:k> * <var:s> * <var:e> * <var:r> * <var:w> * <var:o> = <var:d> $ assuming $ <var:d> \in \mathbb{Z}^+ $ as well as so that $ <var:s> $ , $ <var:Y> $ , $ <var:o> $ , $ <var:k> $ , $ <var:r> $ , $ <var:e> $ and $ <var:w> \geq <nat:2> $ . Hence $ <var:d> = <nat:362880> $ is a <def:seven-composite> natural number . \end{theorem} \begin{proof} Assume $ <var:s> = <nat:3> $ , $ <var:r> = <nat:7> $ , $ <var:k> = <nat:9> $ , $ <var:Y> = <nat:10> $ , $ <var:o> = <nat:4> $ , $ <var:e> = <nat:8> $ , and $ <var:w> = <nat:6> $ . Note that $ <nat:6> $ , $ <nat:7> $ , $ <nat:8> $ , $ <nat:10> $ , $ <nat:9> $ , $ <nat:3> $ and $ <nat:4> \geq <nat:2> $ . Plus notice that further $ <var:w> \cdot <var:s> \cdot <var:r> \cdot <var:k> \cdot <var:e> \cdot <var:o> \cdot <var:Y> = <nat:362880> $ . This suggests <nat:362880> is a <def:seven-composite> natural number . Therefore , <nat:362880> is the product of some positive integers $ <var:o> $ , $ <var:r> $ , $ <var:Y> $ , $ <var:e> $ , $ <var:k> $ , $ <var:w> $ and $ <var:s> $ is proven . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:seven-composite> ( <var:d> : nat ) := exists <var:r> <var:e> <var:w> <var:Y> <var:k> <var:s> <var:o> : nat , ( <var:Y> * <var:k> * <var:s> * <var:e> * <var:r> * <var:w> * <var:o> = <var:d> ) /\ ( <var:s> >= <nat:2> ) /\ ( <var:Y> >= <nat:2> ) /\ ( <var:o> >= <nat:2> ) /\ ( <var:k> >= <nat:2> ) /\ ( <var:r> >= <nat:2> ) /\ ( <var:e> >= <nat:2> ) /\ ( <var:w> >= <nat:2> ) . Theorem <genP:1> : <def:seven-composite> <nat:362880> . Proof . unfold <def:seven-composite> . exists <nat:7> . exists <nat:8> . exists <nat:6> . exists <nat:10> . exists <nat:9> . exists <nat:3> . exists <nat:4> . assert ( <genH> : <nat:6> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:7> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:8> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:10> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:9> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:3> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:4> >= <nat:2> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 