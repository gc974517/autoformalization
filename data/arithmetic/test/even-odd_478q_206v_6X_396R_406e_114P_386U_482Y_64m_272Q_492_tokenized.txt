\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:m> \cdot <nat:64> + <nat:492> + <var:U> \cdot <nat:386> + <nat:114> \cdot <var:P> + <var:v> \cdot <nat:206> + <nat:272> \cdot <var:Q> + <nat:6> \cdot <var:X> + <nat:406> \cdot <var:e> + <var:Y> \cdot <nat:482> + <nat:396> \cdot <var:R> + <var:q> \cdot <nat:478> $ is even . \end{theorem} \begin{proof} Remember multiplying between even positive integers is guaranteed to be an even whole number . The natural numbers $ <nat:386> $ , $ <nat:478> $ , $ <nat:272> $ , plus $ <nat:396> $ are clearly even Building on , remember that the coefficient $ <nat:6> $ is even The positive integers $ <nat:64> $ , $ <nat:482> $ , $ <nat:114> $ , plus $ <nat:406> $ are clearly even The integer $ <nat:206> $ is an even natural The addition between an even element of $ \mathbb{Z}^+ $ with an even natural number will be an even number in $ \mathbb{Z}^+ $ . Therefore , the expression $ <var:q> \cdot <nat:478> + <nat:206> \cdot <var:v> + <nat:492> + <nat:6> \cdot <var:X> + <nat:396> \cdot <var:R> + <var:e> \cdot <nat:406> + <var:P> \cdot <nat:114> + <var:U> \cdot <nat:386> + <var:Y> \cdot <nat:482> + <nat:64> \cdot <var:m> + <nat:272> \cdot <var:Q> $ trivially must be even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:m> <var:U> <var:P> <var:v> <var:Q> <var:X> <var:e> <var:Y> <var:R> <var:q> : nat , Nat . even ( <nat:64> * <var:m> + <nat:386> * <var:U> + <nat:114> * <var:P> + <nat:206> * <var:v> + <nat:272> * <var:Q> + <nat:6> * <var:X> + <nat:406> * <var:e> + <nat:482> * <var:Y> + <nat:396> * <var:R> + <nat:478> * <var:q> + <nat:492> ) = true . Proof . intros . repeat rewrite Nat . even_add . repeat rewrite Nat . even_mul . assert ( <genH> : Nat . even <nat:386> = true ) . { auto . } assert ( <genH> : Nat . even <nat:478> = true ) . { auto . } assert ( <genH> : Nat . even <nat:272> = true ) . { auto . } assert ( <genH> : Nat . even <nat:396> = true ) . { auto . } assert ( <genH> : Nat . even <nat:6> = true ) . { auto . } assert ( <genH> : Nat . even <nat:64> = true ) . { auto . } assert ( <genH> : Nat . even <nat:482> = true ) . { auto . } assert ( <genH> : Nat . even <nat:114> = true ) . { auto . } assert ( <genH> : Nat . even <nat:406> = true ) . { auto . } assert ( <genH> : Nat . even <nat:206> = true ) . { auto . } repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 