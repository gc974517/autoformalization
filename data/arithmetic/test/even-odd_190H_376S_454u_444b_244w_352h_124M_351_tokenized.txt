\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:h> * <nat:352> + <var:b> * <nat:444> + <nat:454> * <var:u> + <var:M> * <nat:124> + <var:S> * <nat:376> + <nat:351> + <var:H> * <nat:190> + <var:w> * <nat:244> $ must be odd . \end{theorem} \begin{proof} It can be verified that that the summation $ <nat:190> \times <var:H> + <var:S> \times <nat:376> + <var:u> \times <nat:454> + <nat:444> \times <var:b> + <var:w> \times <nat:244> + <var:h> \times <nat:352> + <nat:124> \times <var:M> $ is guaranteed to be even . The number $ <nat:454> $ is trivially even Further , notice that the integers $ <nat:444> $ , $ <nat:244> $ , $ <nat:352> $ , plus $ <nat:376> $ are known to be even numbers See the positive integer $ <nat:190> $ is known to be an even element of $ \mathbb{N} $ Recall the number $ <nat:124> $ is trivially even \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:h> <var:b> <var:u> <var:M> <var:S> <var:H> <var:w> : nat , Nat . odd ( <nat:352> * <var:h> + <nat:444> * <var:b> + <nat:454> * <var:u> + <nat:124> * <var:M> + <nat:376> * <var:S> + <nat:190> * <var:H> + <nat:244> * <var:w> + <nat:351> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:454> = true ) . { auto . } assert ( <genH> : Nat . even <nat:444> = true ) . { auto . } assert ( <genH> : Nat . even <nat:244> = true ) . { auto . } assert ( <genH> : Nat . even <nat:352> = true ) . { auto . } assert ( <genH> : Nat . even <nat:376> = true ) . { auto . } assert ( <genH> : Nat . even <nat:190> = true ) . { auto . } assert ( <genH> : Nat . even <nat:124> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:352> * <var:h> + <nat:444> * <var:b> + <nat:454> * <var:u> + <nat:124> * <var:M> + <nat:376> * <var:S> + <nat:190> * <var:H> + <nat:244> * <var:w> ) = true ) . { repeat rewrite Nat . even_add . repeat rewrite Nat . even_mul . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . auto . Qed . 