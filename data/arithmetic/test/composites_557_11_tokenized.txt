\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \newtheorem{definition}{Definition} \begin{document} \begin{definition} Assume $ <var:N> $ , $ <var:e> $ , $ <var:h> $ , $ <var:Z> $ , $ <var:H> $ , $ <var:F> $ , $ <var:R> $ , $ <var:d> $ , $ <var:o> $ , $ <var:D> $ , $ <var:n> \in \mathbb{Z}^+ $ . We assume that some number $ <var:B> $ is considered to be a <def:eleven-composite> integer when $ <var:B> = <var:o> \times <var:n> \times <var:F> \times <var:R> \times <var:N> \times <var:D> \times <var:e> \times <var:Z> \times <var:H> \times <var:h> \times <var:d> $ plus terms are greater than or equivalent to <nat:2> . \end{definition} \begin{theorem} $ <nat:3113510400> = <var:B> $ is <def:eleven-composite> . \end{theorem} \begin{proof} Remember a <def:eleven-composite> whole number is the product between $ <var:d> $ , $ <var:o> $ , $ <var:N> $ , $ <var:h> $ , $ <var:R> $ , $ <var:F> $ , $ <var:D> $ , $ <var:H> $ , $ <var:e> $ , $ <var:n> $ and $ <var:Z> $ where $ <var:N> $ , $ <var:D> $ , $ <var:F> $ , $ <var:n> $ , $ <var:R> $ , $ <var:Z> $ , $ <var:d> $ , $ <var:e> $ , $ <var:o> $ , $ <var:H> $ and $ <var:h> \geq <nat:2> $ . We prove <nat:3113510400> is a <def:eleven-composite> integer seeing that $ <var:F> * <var:d> * <var:o> * <var:H> * <var:R> * <var:e> * <var:n> * <var:h> * <var:Z> * <var:N> * <var:D> = <nat:3113510400> = <nat:9> * <nat:6> * <nat:4> * <nat:5> * <nat:10> * <nat:13> * <nat:8> * <nat:7> * <nat:3> * <nat:12> * <nat:11> $ as well as seeing that $ <nat:7> $ , $ <nat:10> $ , $ <nat:3> $ , $ <nat:13> $ , $ <nat:8> $ , $ <nat:9> $ , $ <nat:12> $ , $ <nat:5> $ , $ <nat:11> $ , $ <nat:4> $ , $ <nat:6> \geq <nat:2> $ . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:eleven-composite> ( <var:B> : nat ) := exists <var:N> <var:e> <var:h> <var:Z> <var:H> <var:F> <var:R> <var:d> <var:o> <var:D> <var:n> : nat , ( <var:B> = <var:o> * <var:n> * <var:F> * <var:R> * <var:N> * <var:D> * <var:e> * <var:Z> * <var:H> * <var:h> * <var:d> ) /\ ( <var:N> >= <nat:2> ) /\ ( <var:e> >= <nat:2> ) /\ ( <var:h> >= <nat:2> ) /\ ( <var:Z> >= <nat:2> ) /\ ( <var:H> >= <nat:2> ) /\ ( <var:F> >= <nat:2> ) /\ ( <var:R> >= <nat:2> ) /\ ( <var:d> >= <nat:2> ) /\ ( <var:o> >= <nat:2> ) /\ ( <var:D> >= <nat:2> ) /\ ( <var:n> >= <nat:2> ) . Theorem <genP:1> : <def:eleven-composite> <nat:3113510400> . Proof . unfold <def:eleven-composite> . exists <nat:12> . exists <nat:13> . exists <nat:7> . exists <nat:3> . exists <nat:5> . exists <nat:9> . exists <nat:10> . exists <nat:6> . exists <nat:4> . exists <nat:11> . exists <nat:8> . assert ( <genH> : <nat:7> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:10> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:3> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:13> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:8> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:9> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:12> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:5> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:11> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:4> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:6> >= <nat:2> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 