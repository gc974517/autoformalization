\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:414> \times <var:A> + <nat:18> \times <var:J> + <var:D> \times <nat:368> + <var:P> \times <nat:44> + <var:t> \times <nat:466> + <nat:476> \times <var:x> + <var:w> \times <nat:348> + <nat:64> \times <var:p> + <nat:235> $ will be odd . \end{theorem} \begin{proof} We prove the summation $ <nat:44> \times <var:P> + <nat:476> \times <var:x> + <var:D> \times <nat:368> + <nat:235> + <nat:466> \times <var:t> + <nat:18> \times <var:J> + <var:p> \times <nat:64> + <nat:348> \times <var:w> + <nat:414> \times <var:A> $ will be odd . The leading terms $ <nat:44> $ , $ <nat:476> $ , $ <nat:368> $ , $ <nat:466> $ , $ <nat:18> $ , $ <nat:64> $ , $ <nat:348> $ , and moreover $ <nat:414> $ are known to be even . Accordingly , the pairs $ <var:P> \cdot <nat:44> $ , $ <var:x> \cdot <nat:476> $ , $ <var:D> \cdot <nat:368> $ , $ <var:t> \cdot <nat:466> $ , $ <nat:18> \cdot <var:J> $ , $ <nat:64> \cdot <var:p> $ , $ <var:w> \cdot <nat:348> $ , and $ <var:A> \cdot <nat:414> $ is guaranteed to be even additionally . The addition between an even natural number and an odd number in $ \mathbb{N} $ is odd . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:A> <var:J> <var:D> <var:P> <var:t> <var:x> <var:w> <var:p> : nat , Nat . odd ( <nat:414> * <var:A> + <nat:18> * <var:J> + <nat:368> * <var:D> + <nat:44> * <var:P> + <nat:466> * <var:t> + <nat:476> * <var:x> + <nat:348> * <var:w> + <nat:64> * <var:p> + <nat:235> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:44> = true ) . { auto . } assert ( <genH> : Nat . even <nat:476> = true ) . { auto . } assert ( <genH> : Nat . even <nat:368> = true ) . { auto . } assert ( <genH> : Nat . even <nat:466> = true ) . { auto . } assert ( <genH> : Nat . even <nat:18> = true ) . { auto . } assert ( <genH> : Nat . even <nat:64> = true ) . { auto . } assert ( <genH> : Nat . even <nat:348> = true ) . { auto . } assert ( <genH> : Nat . even <nat:414> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:44> * <var:P> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:476> * <var:x> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:368> * <var:D> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:466> * <var:t> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:18> * <var:J> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:64> * <var:p> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:348> * <var:w> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:414> * <var:A> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 