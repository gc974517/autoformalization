\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:V> * <nat:380> + <var:A> * <nat:188> + <nat:410> * <var:O> + <nat:117> + <nat:124> * <var:J> + <nat:90> * <var:s> + <var:Z> * <nat:382> + <nat:170> * <var:o> + <var:Q> * <nat:328> $ is guaranteed to be odd . \end{theorem} \begin{proof} We check the summation $ <nat:410> \cdot <var:O> + <var:J> \cdot <nat:124> + <nat:90> \cdot <var:s> + <nat:117> + <var:Z> \cdot <nat:382> + <var:o> \cdot <nat:170> + <var:Q> \cdot <nat:328> + <var:V> \cdot <nat:380> + <var:A> \cdot <nat:188> $ is odd . $ <var:J> <nat:124> + <var:V> <nat:380> + <var:o> <nat:170> + <var:s> <nat:90> + <var:A> <nat:188> + <nat:410> <var:O> + <var:Z> <nat:382> + <var:Q> <nat:328> $ is clearly even . Notice that the pairs $ <nat:380> \times <var:V> $ , $ <nat:124> \times <var:J> $ , $ <nat:410> \times <var:O> $ , and likewise $ <nat:170> \times <var:o> $ will be even . Further , the terms $ <nat:328> \times <var:Q> $ , $ <nat:188> \times <var:A> $ , in addition to $ <nat:90> \times <var:s> $ are trivially even . Remember the product $ <nat:382> \times <var:Z> $ is clearly even . The formula $ <nat:188> \cdot <var:A> + <var:Z> \cdot <nat:382> + <var:J> \cdot <nat:124> + <var:V> \cdot <nat:380> + <nat:90> \cdot <var:s> + <var:o> \cdot <nat:170> + <nat:410> \cdot <var:O> + <var:Q> \cdot <nat:328> $ will be trivially even as a consequence that the product between even integers with any whole number is guaranteed to be an even number . The totaling of an even positive integer and an odd integer will be odd . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:V> <var:A> <var:O> <var:J> <var:s> <var:Z> <var:o> <var:Q> : nat , Nat . odd ( <nat:380> * <var:V> + <nat:188> * <var:A> + <nat:410> * <var:O> + <nat:124> * <var:J> + <nat:90> * <var:s> + <nat:382> * <var:Z> + <nat:170> * <var:o> + <nat:328> * <var:Q> + <nat:117> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:380> * <var:V> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:124> * <var:J> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:410> * <var:O> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:170> * <var:o> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:328> * <var:Q> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:188> * <var:A> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:90> * <var:s> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:382> * <var:Z> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:380> * <var:V> + <nat:188> * <var:A> + <nat:410> * <var:O> + <nat:124> * <var:J> + <nat:90> * <var:s> + <nat:382> * <var:Z> + <nat:170> * <var:o> + <nat:328> * <var:Q> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . auto . Qed . 