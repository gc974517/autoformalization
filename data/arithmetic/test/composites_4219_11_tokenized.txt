\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \newtheorem{definition}{Definition} \begin{document} \begin{definition} Define that $ <var:q> $ is a <def:eleven-composite> integer under the condition that using some $ <var:R> $ , $ <var:H> $ , $ <var:i> $ , $ <var:x> $ , $ <var:l> $ , $ <var:r> $ , $ <var:N> $ , $ <var:s> $ , $ <var:e> $ , $ <var:I> $ , $ <var:c> \in \mathbb{Z}^+ $ we get $ <var:i> $ , $ <var:r> $ , $ <var:I> $ , $ <var:s> $ , $ <var:c> $ , $ <var:H> $ , $ <var:N> $ , $ <var:R> $ , $ <var:e> $ , $ <var:x> $ , and $ <var:l> \geq <nat:2> $ plus taking $ <var:q> \in \mathbb{N} $ , $ <var:q> = <var:c> * <var:i> * <var:I> * <var:R> * <var:s> * <var:N> * <var:H> * <var:e> * <var:l> * <var:r> * <var:x> $ . \end{definition} \begin{theorem} The natural number <nat:3113510400> is a <def:eleven-composite> natural number . \end{theorem} \begin{proof} Recollect that <nat:3113510400> is a <def:eleven-composite> positive integer if and only if <nat:3113510400> is the product between whole numbers $ <var:N> $ , $ <var:s> $ , $ <var:I> $ , $ <var:l> $ , $ <var:e> $ , $ <var:R> $ , $ <var:c> $ , $ <var:H> $ , $ <var:i> $ , $ <var:x> $ and $ <var:r> $ greater than or equal to <nat:2> . Allow $ <var:e> = <nat:6> $ , $ <var:s> = <nat:9> $ , $ <var:R> = <nat:5> $ , $ <var:c> = <nat:4> $ , $ <var:x> = <nat:8> $ , $ <var:I> = <nat:10> $ , $ <var:r> = <nat:12> $ , $ <var:i> = <nat:13> $ , $ <var:H> = <nat:11> $ , $ <var:N> = <nat:7> $ , and $ <var:l> = <nat:3> $ . Observe $ <nat:3113510400> = <var:N> * <var:I> * <var:r> * <var:x> * <var:e> * <var:l> * <var:s> * <var:H> * <var:R> * <var:c> * <var:i> $ . Moreover notice $ <var:e> = <nat:6> $ , $ <var:i> = <nat:13> $ , $ <var:c> = <nat:4> $ , $ <var:R> = <nat:5> $ , $ <var:l> = <nat:3> $ , $ <var:x> = <nat:8> $ , $ <var:r> = <nat:12> $ , $ <var:I> = <nat:10> $ , $ <var:H> = <nat:11> $ , $ <var:s> = <nat:9> $ , $ <var:N> = <nat:7> \geq <nat:2> $ . This implies the thesis is valid . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:eleven-composite> ( <var:q> : nat ) := exists <var:R> <var:H> <var:i> <var:x> <var:l> <var:r> <var:N> <var:s> <var:e> <var:I> <var:c> : nat , ( <var:i> >= <nat:2> ) /\ ( <var:r> >= <nat:2> ) /\ ( <var:I> >= <nat:2> ) /\ ( <var:s> >= <nat:2> ) /\ ( <var:c> >= <nat:2> ) /\ ( <var:H> >= <nat:2> ) /\ ( <var:N> >= <nat:2> ) /\ ( <var:R> >= <nat:2> ) /\ ( <var:e> >= <nat:2> ) /\ ( <var:x> >= <nat:2> ) /\ ( <var:l> >= <nat:2> ) /\ ( <var:q> = <var:c> * <var:i> * <var:I> * <var:R> * <var:s> * <var:N> * <var:H> * <var:e> * <var:l> * <var:r> * <var:x> ) . Theorem <genP:1> : <def:eleven-composite> <nat:3113510400> . Proof . unfold <def:eleven-composite> . exists <nat:5> . exists <nat:11> . exists <nat:13> . exists <nat:8> . exists <nat:3> . exists <nat:12> . exists <nat:7> . exists <nat:9> . exists <nat:6> . exists <nat:10> . exists <nat:4> . assert ( <genH> : <nat:6> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:13> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:4> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:5> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:3> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:8> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:12> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:10> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:11> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:9> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:7> >= <nat:2> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 