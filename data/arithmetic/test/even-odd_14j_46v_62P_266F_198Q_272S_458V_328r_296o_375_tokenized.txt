\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:198> <var:Q> + <nat:266> <var:F> + <nat:62> <var:P> + <nat:328> <var:r> + <var:V> <nat:458> + <nat:272> <var:S> + <var:v> <nat:46> + <nat:296> <var:o> + <nat:14> <var:j> + <nat:375> $ is guaranteed to be odd . \end{theorem} \begin{proof} $ <var:o> * <nat:296> + <nat:62> * <var:P> + <var:Q> * <nat:198> + <nat:14> * <var:j> + <var:v> * <nat:46> + <nat:266> * <var:F> + <nat:375> + <var:S> * <nat:272> + <var:V> * <nat:458> + <var:r> * <nat:328> $ is clearly odd by reason that $ <var:j> \times <nat:14> + <nat:46> \times <var:v> + <nat:62> \times <var:P> + <var:F> \times <nat:266> + <nat:198> \times <var:Q> + <nat:272> \times <var:S> + <nat:458> \times <var:V> + <var:r> \times <nat:328> + <var:o> \times <nat:296> $ is guaranteed to be even . What's more , observe that the integers $ <nat:14> $ , $ <nat:46> $ , $ <nat:62> $ , $ <nat:266> $ , $ <nat:198> $ , $ <nat:272> $ , $ <nat:458> $ , $ <nat:328> $ , and $ <nat:296> $ must be even . In consequence , the pairs $ <var:j> <nat:14> $ , $ <var:v> <nat:46> $ , $ <var:P> <nat:62> $ , $ <nat:266> <var:F> $ , $ <nat:198> <var:Q> $ , $ <nat:272> <var:S> $ , $ <var:V> <nat:458> $ , $ <var:r> <nat:328> $ , in addition to $ <nat:296> <var:o> $ is guaranteed to be even at the same time . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:Q> <var:F> <var:P> <var:r> <var:V> <var:S> <var:v> <var:o> <var:j> : nat , Nat . odd ( <nat:198> * <var:Q> + <nat:266> * <var:F> + <nat:62> * <var:P> + <nat:328> * <var:r> + <nat:458> * <var:V> + <nat:272> * <var:S> + <nat:46> * <var:v> + <nat:296> * <var:o> + <nat:14> * <var:j> + <nat:375> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:14> = true ) . { auto . } assert ( <genH> : Nat . even <nat:46> = true ) . { auto . } assert ( <genH> : Nat . even <nat:62> = true ) . { auto . } assert ( <genH> : Nat . even <nat:266> = true ) . { auto . } assert ( <genH> : Nat . even <nat:198> = true ) . { auto . } assert ( <genH> : Nat . even <nat:272> = true ) . { auto . } assert ( <genH> : Nat . even <nat:458> = true ) . { auto . } assert ( <genH> : Nat . even <nat:328> = true ) . { auto . } assert ( <genH> : Nat . even <nat:296> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:14> * <var:j> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:46> * <var:v> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:62> * <var:P> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:266> * <var:F> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:198> * <var:Q> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:272> * <var:S> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:458> * <var:V> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:328> * <var:r> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:296> * <var:o> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:198> * <var:Q> + <nat:266> * <var:F> + <nat:62> * <var:P> + <nat:328> * <var:r> + <nat:458> * <var:V> + <nat:272> * <var:S> + <nat:46> * <var:v> + <nat:296> * <var:o> + <nat:14> * <var:j> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . auto . Qed . 