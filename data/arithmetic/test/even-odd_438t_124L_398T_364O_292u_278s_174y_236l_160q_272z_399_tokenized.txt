\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:l> \times <nat:236> + <nat:160> \times <var:q> + <nat:438> \times <var:t> + <var:O> \times <nat:364> + <nat:272> \times <var:z> + <var:L> \times <nat:124> + <nat:292> \times <var:u> + <var:T> \times <nat:398> + <var:y> \times <nat:174> + <nat:278> \times <var:s> + <nat:399> $ is guaranteed to be odd using every terms $ <var:t> $ , $ <var:q> $ , $ <var:s> $ , $ <var:y> $ , $ <var:O> $ , $ <var:z> $ , $ <var:L> $ , $ <var:l> $ , $ <var:T> $ , and $ <var:u> $ . \end{theorem} \begin{proof} Take note $ <nat:399> $ is known to be an odd element of $ \mathbb{N} $ . It can be demonstrated that the formula $ <nat:174> * <var:y> + <nat:272> * <var:z> + <nat:236> * <var:l> + <nat:124> * <var:L> + <var:T> * <nat:398> + <nat:399> + <nat:364> * <var:O> + <nat:438> * <var:t> + <var:u> * <nat:292> + <var:q> * <nat:160> + <var:s> * <nat:278> $ is guaranteed to be odd . We apply the fact that the summation $ <var:t> <nat:438> + <var:L> <nat:124> + <nat:398> <var:T> + <nat:364> <var:O> + <nat:292> <var:u> + <var:s> <nat:278> + <var:y> <nat:174> + <var:l> <nat:236> + <var:q> <nat:160> + <var:z> <nat:272> $ is guaranteed to be even . The products $ <nat:124> <var:L> $ , $ <nat:292> <var:u> $ , $ <var:q> <nat:160> $ , $ <var:T> <nat:398> $ , $ <nat:272> <var:z> $ , $ <var:t> <nat:438> $ , additionally $ <var:O> <nat:364> $ are clearly even . Additionally , see that $ <nat:174> <var:y> $ is even . This must be true from the knowledge multiplying of an even natural number and some integer must be by definition an even whole number . The term $ <var:l> <nat:236> $ is trivially even . See the product $ <var:s> <nat:278> $ is guaranteed to be an even element of $ \mathbb{N} $ . This claim is proven from the fact the multiplication between an even natural with some natural must be an even natural number . The proposition is proven from the fact the product of even numbers in $ \mathbb{Z}^+ $ and some number is guaranteed to be an even element of $ \mathbb{Z}^+ $ . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:t> <var:q> <var:s> <var:y> <var:O> <var:z> <var:L> <var:l> <var:T> <var:u> : nat , Nat . odd ( <nat:236> * <var:l> + <nat:160> * <var:q> + <nat:438> * <var:t> + <nat:364> * <var:O> + <nat:272> * <var:z> + <nat:124> * <var:L> + <nat:292> * <var:u> + <nat:398> * <var:T> + <nat:174> * <var:y> + <nat:278> * <var:s> + <nat:399> ) = true . Proof . intros . assert ( <genH> : Nat . odd <nat:399> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:124> * <var:L> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:292> * <var:u> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:160> * <var:q> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:398> * <var:T> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:272> * <var:z> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:438> * <var:t> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:364> * <var:O> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:174> * <var:y> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:236> * <var:l> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:278> * <var:s> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:236> * <var:l> + <nat:160> * <var:q> + <nat:438> * <var:t> + <nat:364> * <var:O> + <nat:272> * <var:z> + <nat:124> * <var:L> + <nat:292> * <var:u> + <nat:398> * <var:T> + <nat:174> * <var:y> + <nat:278> * <var:s> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . rewrite <genH> . auto . Qed . 