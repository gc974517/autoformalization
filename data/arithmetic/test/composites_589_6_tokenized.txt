\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \newtheorem{definition}{Definition} \begin{document} \begin{definition} Whenever we get $ <var:Q> = <var:w> \cdot <var:y> \cdot <var:a> \cdot <var:V> \cdot <var:E> \cdot <var:x> $ given some number $ <var:Q> $ plus so that $ <var:E> $ , $ <var:x> $ , $ <var:a> $ , $ <var:w> $ , $ <var:V> $ , $ <var:y> \geq <nat:2> $ taking some $ <var:x> $ , $ <var:a> $ , $ <var:y> $ , $ <var:V> $ , $ <var:w> $ , $ <var:E> \in \mathbb{N} $ , we denote that $ <var:Q> $ is a <def:six-composite> integer . \end{definition} \begin{theorem} $ <var:Q> = <nat:71280> $ is <def:six-composite> . \end{theorem} \begin{proof} Take $ <var:a> = <nat:3> $ , $ <var:y> = <nat:8> $ , $ <var:V> = <nat:9> $ , $ <var:x> = <nat:6> $ , $ <var:E> = <nat:5> $ , $ <var:w> = <nat:11> $ . We prove $ <var:w> * <var:a> * <var:x> * <var:E> * <var:V> * <var:y> = <nat:71280> $ . Moreover observe $ <nat:11> $ , $ <nat:5> $ , $ <nat:9> $ , $ <nat:3> $ , $ <nat:6> $ , $ <nat:8> > <nat:1> $ . This gives the belief is valid . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:six-composite> ( <var:Q> : nat ) := exists <var:x> <var:a> <var:y> <var:V> <var:w> <var:E> : nat , ( <var:Q> = <var:w> * <var:y> * <var:a> * <var:V> * <var:E> * <var:x> ) /\ ( <var:E> >= <nat:2> ) /\ ( <var:x> >= <nat:2> ) /\ ( <var:a> >= <nat:2> ) /\ ( <var:w> >= <nat:2> ) /\ ( <var:V> >= <nat:2> ) /\ ( <var:y> >= <nat:2> ) . Theorem <genP:1> : <def:six-composite> <nat:71280> . Proof . unfold <def:six-composite> . exists <nat:6> . exists <nat:3> . exists <nat:8> . exists <nat:9> . exists <nat:11> . exists <nat:5> . assert ( <genH> : <nat:11> > <nat:1> ) . { lia . } assert ( <genH> : <nat:5> > <nat:1> ) . { lia . } assert ( <genH> : <nat:9> > <nat:1> ) . { lia . } assert ( <genH> : <nat:3> > <nat:1> ) . { lia . } assert ( <genH> : <nat:6> > <nat:1> ) . { lia . } assert ( <genH> : <nat:8> > <nat:1> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 