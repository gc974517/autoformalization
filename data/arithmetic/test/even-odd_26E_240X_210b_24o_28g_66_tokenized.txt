\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:66> + <nat:24> \cdot <var:o> + <nat:240> \cdot <var:X> + <var:g> \cdot <nat:28> + <nat:26> \cdot <var:E> + <var:b> \cdot <nat:210> $ must be even . \end{theorem} \begin{proof} We apply the understanding that the summation $ <var:o> <nat:24> + <var:g> <nat:28> + <nat:240> <var:X> + <var:b> <nat:210> + <nat:26> <var:E> $ is guaranteed to be even . Building on , the coefficients $ <nat:24> $ , $ <nat:28> $ , $ <nat:240> $ , $ <nat:210> $ , and $ <nat:26> $ will be even . Thus , the products $ <var:o> <nat:24> $ , $ <var:g> <nat:28> $ , $ <var:X> <nat:240> $ , $ <nat:210> <var:b> $ , and likewise $ <var:E> <nat:26> $ is guaranteed to be even also . The sum $ <var:E> * <nat:26> + <var:X> * <nat:240> + <var:b> * <nat:210> + <nat:24> * <var:o> + <var:g> * <nat:28> $ is by its very nature even by reason that the product between even elements of $ \mathbb{N} $ and an arbitrary number in $ \mathbb{Z}^+ $ is even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:o> <var:X> <var:g> <var:E> <var:b> : nat , Nat . even ( <nat:24> * <var:o> + <nat:240> * <var:X> + <nat:28> * <var:g> + <nat:26> * <var:E> + <nat:210> * <var:b> + <nat:66> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:24> = true ) . { auto . } assert ( <genH> : Nat . even <nat:28> = true ) . { auto . } assert ( <genH> : Nat . even <nat:240> = true ) . { auto . } assert ( <genH> : Nat . even <nat:210> = true ) . { auto . } assert ( <genH> : Nat . even <nat:26> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:24> * <var:o> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:28> * <var:g> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:240> * <var:X> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:210> * <var:b> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:26> * <var:E> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:24> * <var:o> + <nat:240> * <var:X> + <nat:28> * <var:g> + <nat:26> * <var:E> + <nat:210> * <var:b> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . even_add . rewrite <genH> . auto . Qed . 