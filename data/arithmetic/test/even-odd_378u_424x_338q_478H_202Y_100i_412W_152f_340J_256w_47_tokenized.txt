\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:u> * <nat:378> + <var:x> * <nat:424> + <var:q> * <nat:338> + <nat:478> * <var:H> + <var:Y> * <nat:202> + <nat:47> + <nat:100> * <var:i> + <nat:412> * <var:W> + <var:f> * <nat:152> + <nat:340> * <var:J> + <nat:256> * <var:w> $ will be odd using all $ <var:f> $ , $ <var:i> $ , $ <var:q> $ , $ <var:Y> $ , $ <var:J> $ , $ <var:W> $ , $ <var:x> $ , $ <var:w> $ , $ <var:H> $ , and $ <var:u> $ . \end{theorem} \begin{proof} The totaling between even whole numbers concurrently and an odd number must be an odd element of $ \mathbb{Z}^+ $ . Take note the coefficients $ <nat:152> $ , $ <nat:256> $ , $ <nat:424> $ , $ <nat:412> $ , $ <nat:378> $ , $ <nat:202> $ , $ <nat:340> $ , and moreover $ <nat:100> $ are known to be even numbers in $ \mathbb{N} $ The natural number $ <nat:478> $ is guaranteed to be even Remember that the integer $ <nat:338> $ is known as an even natural number The product of an even positive integer and some natural number is an even number in $ \mathbb{N} $ . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:f> <var:i> <var:q> <var:Y> <var:J> <var:W> <var:x> <var:w> <var:H> <var:u> : nat , Nat . odd ( <nat:378> * <var:u> + <nat:424> * <var:x> + <nat:338> * <var:q> + <nat:478> * <var:H> + <nat:202> * <var:Y> + <nat:100> * <var:i> + <nat:412> * <var:W> + <nat:152> * <var:f> + <nat:340> * <var:J> + <nat:256> * <var:w> + <nat:47> ) = true . Proof . intros . rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . assert ( <genH> : Nat . even <nat:152> = true ) . { auto . } assert ( <genH> : Nat . even <nat:256> = true ) . { auto . } assert ( <genH> : Nat . even <nat:424> = true ) . { auto . } assert ( <genH> : Nat . even <nat:412> = true ) . { auto . } assert ( <genH> : Nat . even <nat:378> = true ) . { auto . } assert ( <genH> : Nat . even <nat:202> = true ) . { auto . } assert ( <genH> : Nat . even <nat:340> = true ) . { auto . } assert ( <genH> : Nat . even <nat:100> = true ) . { auto . } assert ( <genH> : Nat . even <nat:478> = true ) . { auto . } assert ( <genH> : Nat . even <nat:338> = true ) . { auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . repeat rewrite Nat . even_mul . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 