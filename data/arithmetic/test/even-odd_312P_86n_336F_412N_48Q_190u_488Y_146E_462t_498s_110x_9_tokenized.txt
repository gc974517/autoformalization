\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:P> <nat:312> + <var:n> <nat:86> + <var:F> <nat:336> + <var:N> <nat:412> + <var:Q> <nat:48> + <var:u> <nat:190> + <nat:488> <var:Y> + <var:E> <nat:146> + <var:t> <nat:462> + <nat:498> <var:s> + <nat:110> <var:x> + <nat:9> $ is guaranteed to be odd . \end{theorem} \begin{proof} The whole numbers $ <nat:498> $ , $ <nat:146> $ , $ <nat:312> $ , and likewise $ <nat:336> $ are even The integers $ <nat:412> $ , $ <nat:462> $ , $ <nat:190> $ , $ <nat:86> $ , $ <nat:48> $ , and $ <nat:488> $ are clearly even integers Likewise , the whole number $ <nat:110> $ is guaranteed to be an even element of $ \mathbb{Z}^+ $ Remember the multiplication of an even number in $ \mathbb{N} $ with some element of $ \mathbb{N} $ must be trivially an even natural number . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:P> <var:n> <var:F> <var:N> <var:Q> <var:u> <var:Y> <var:E> <var:t> <var:s> <var:x> : nat , Nat . odd ( <nat:312> * <var:P> + <nat:86> * <var:n> + <nat:336> * <var:F> + <nat:412> * <var:N> + <nat:48> * <var:Q> + <nat:190> * <var:u> + <nat:488> * <var:Y> + <nat:146> * <var:E> + <nat:462> * <var:t> + <nat:498> * <var:s> + <nat:110> * <var:x> + <nat:9> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:498> = true ) . { auto . } assert ( <genH> : Nat . even <nat:146> = true ) . { auto . } assert ( <genH> : Nat . even <nat:312> = true ) . { auto . } assert ( <genH> : Nat . even <nat:336> = true ) . { auto . } assert ( <genH> : Nat . even <nat:412> = true ) . { auto . } assert ( <genH> : Nat . even <nat:462> = true ) . { auto . } assert ( <genH> : Nat . even <nat:190> = true ) . { auto . } assert ( <genH> : Nat . even <nat:86> = true ) . { auto . } assert ( <genH> : Nat . even <nat:48> = true ) . { auto . } assert ( <genH> : Nat . even <nat:488> = true ) . { auto . } assert ( <genH> : Nat . even <nat:110> = true ) . { auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . repeat rewrite Nat . even_mul . rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 