\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} For any positive integers $ <var:E> $ , $ <var:I> $ , $ <var:S> $ , $ <var:Q> $ , $ <var:x> $ , $ <var:s> $ , $ <var:y> $ , $ <var:i> $ , $ <var:o> $ , and $ <var:D> $ the expression $ <nat:282> + <nat:332> <var:E> + <nat:162> <var:S> + <nat:20> <var:o> + <nat:72> <var:I> + <var:i> <nat:146> + <var:s> <nat:142> + <var:D> <nat:364> + <var:Q> <nat:182> + <var:x> <nat:324> + <nat:118> <var:y> $ is guaranteed to be even . \end{theorem} \begin{proof} Notice that the summation between even whole numbers successively is guaranteed to be even . Observe the pairs $ <var:i> * <nat:146> $ , $ <var:y> * <nat:118> $ , and also $ <nat:72> * <var:I> $ are obviously even naturals . The pairs $ <nat:364> * <var:D> $ , $ <var:x> * <nat:324> $ , and also $ <nat:182> * <var:Q> $ are guaranteed to be even from the knowledge multiplying of an even positive integer and an arbitrary positive integer will be by its very nature an even number . The products $ <var:s> * <nat:142> $ , $ <nat:20> * <var:o> $ , as well as $ <nat:332> * <var:E> $ are trivially even positive integers . Furthermore , the product $ <nat:162> * <var:S> $ is known as an even element of $ \mathbb{Z}^+ $ . We verify $ <var:s> * <nat:142> + <var:x> * <nat:324> + <var:y> * <nat:118> + <var:i> * <nat:146> + <nat:72> * <var:I> + <var:E> * <nat:332> + <nat:282> + <var:Q> * <nat:182> + <nat:20> * <var:o> + <var:S> * <nat:162> + <var:D> * <nat:364> $ will be even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:E> <var:I> <var:S> <var:Q> <var:x> <var:s> <var:y> <var:i> <var:o> <var:D> : nat , Nat . even ( <nat:332> * <var:E> + <nat:162> * <var:S> + <nat:20> * <var:o> + <nat:72> * <var:I> + <nat:146> * <var:i> + <nat:142> * <var:s> + <nat:364> * <var:D> + <nat:182> * <var:Q> + <nat:324> * <var:x> + <nat:118> * <var:y> + <nat:282> ) = true . Proof . intros . repeat rewrite Nat . even_add . assert ( <genH> : Nat . even ( <nat:146> * <var:i> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:118> * <var:y> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:72> * <var:I> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:364> * <var:D> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:324> * <var:x> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:182> * <var:Q> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:142> * <var:s> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:20> * <var:o> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:332> * <var:E> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:162> * <var:S> ) = true ) . { rewrite Nat . even_mul . auto . } rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 