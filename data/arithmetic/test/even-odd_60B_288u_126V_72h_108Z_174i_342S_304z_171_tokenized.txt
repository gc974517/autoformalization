\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:174> * <var:i> + <nat:60> * <var:B> + <nat:288> * <var:u> + <var:z> * <nat:304> + <nat:72> * <var:h> + <nat:126> * <var:V> + <nat:108> * <var:Z> + <nat:171> + <var:S> * <nat:342> $ must be odd . \end{theorem} \begin{proof} Take note that the multiplication between even naturals will be by itself an even element of $ \mathbb{Z}^+ $ . The leading term $ <nat:126> $ is guaranteed to be even Additionally , observe the coefficients $ <nat:108> $ , $ <nat:288> $ , $ <nat:72> $ , and $ <nat:174> $ are known to be even integers Remember that the integers $ <nat:304> $ and $ <nat:342> $ will be even Additionally , the integer $ <nat:60> $ is trivially even We show the summation $ <nat:171> + <nat:60> \times <var:B> + <var:u> \times <nat:288> + <nat:126> \times <var:V> + <var:h> \times <nat:72> + <nat:108> \times <var:Z> + <var:i> \times <nat:174> + <nat:342> \times <var:S> + <var:z> \times <nat:304> $ will be odd using the knowledge that the summing of even naturals concurrently and an odd number is an odd positive integer . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:i> <var:B> <var:u> <var:z> <var:h> <var:V> <var:Z> <var:S> : nat , Nat . odd ( <nat:174> * <var:i> + <nat:60> * <var:B> + <nat:288> * <var:u> + <nat:304> * <var:z> + <nat:72> * <var:h> + <nat:126> * <var:V> + <nat:108> * <var:Z> + <nat:342> * <var:S> + <nat:171> ) = true . Proof . intros . rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . repeat rewrite Nat . even_mul . assert ( <genH> : Nat . even <nat:126> = true ) . { auto . } assert ( <genH> : Nat . even <nat:108> = true ) . { auto . } assert ( <genH> : Nat . even <nat:288> = true ) . { auto . } assert ( <genH> : Nat . even <nat:72> = true ) . { auto . } assert ( <genH> : Nat . even <nat:174> = true ) . { auto . } assert ( <genH> : Nat . even <nat:304> = true ) . { auto . } assert ( <genH> : Nat . even <nat:342> = true ) . { auto . } assert ( <genH> : Nat . even <nat:60> = true ) . { auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 