\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Assuming some natural terms $ <var:u> $ , $ <var:Q> $ , $ <var:X> $ , $ <var:c> $ , $ <var:W> $ , $ <var:Z> $ , $ <var:U> $ , $ <var:f> $ , and $ <var:r> $ the formula $ <nat:61> + <var:X> \times <nat:126> + <nat:254> \times <var:Z> + <var:U> \times <nat:244> + <nat:266> \times <var:Q> + <var:u> \times <nat:444> + <nat:258> \times <var:W> + <var:r> \times <nat:482> + <nat:298> \times <var:f> + <nat:456> \times <var:c> $ will be odd . \end{theorem} \begin{proof} This lemma holds from the knowledge $ <var:Z> * <nat:254> + <var:c> * <nat:456> + <nat:244> * <var:U> + <nat:266> * <var:Q> + <nat:298> * <var:f> + <var:W> * <nat:258> + <var:X> * <nat:126> + <var:r> * <nat:482> + <nat:444> * <var:u> $ is obviously even . The term $ <var:Z> * <nat:254> $ is clearly an even number since taking the product between an even element of $ \mathbb{N} $ and some positive integer is guaranteed to be an even whole number . The terms $ <nat:266> * <var:Q> $ , $ <nat:298> * <var:f> $ , additionally $ <nat:456> * <var:c> $ are known to be even elements of $ \mathbb{Z}^+ $ from the fact taking the product of an even number in $ \mathbb{N} $ with any integer must be even . In addition , recall the pairs $ <nat:444> * <var:u> $ , $ <var:W> * <nat:258> $ , and likewise $ <var:X> * <nat:126> $ are trivially even . This must be true since the product of an even number and some number is guaranteed to be clearly an even number . We know the pair $ <var:r> * <nat:482> $ is guaranteed to be even . This fact holds because the product of an even whole number with an arbitrary positive integer is guaranteed to be even . The product $ <nat:244> * <var:U> $ is clearly even . By reason that the summation between an even positive integer and even naturals is guaranteed to be even , the expression $ <nat:258> \cdot <var:W> + <var:f> \cdot <nat:298> + <nat:254> \cdot <var:Z> + <var:u> \cdot <nat:444> + <nat:482> \cdot <var:r> + <var:Q> \cdot <nat:266> + <var:U> \cdot <nat:244> + <var:X> \cdot <nat:126> + <var:c> \cdot <nat:456> $ will be even . The summation of an even element of $ \mathbb{Z}^+ $ with an odd number will be odd . Recall that $ <nat:61> $ is odd . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:u> <var:Q> <var:X> <var:c> <var:W> <var:Z> <var:U> <var:f> <var:r> : nat , Nat . odd ( <nat:126> * <var:X> + <nat:254> * <var:Z> + <nat:244> * <var:U> + <nat:266> * <var:Q> + <nat:444> * <var:u> + <nat:258> * <var:W> + <nat:482> * <var:r> + <nat:298> * <var:f> + <nat:456> * <var:c> + <nat:61> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:254> * <var:Z> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:266> * <var:Q> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:298> * <var:f> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:456> * <var:c> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:444> * <var:u> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:258> * <var:W> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:126> * <var:X> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:482> * <var:r> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:244> * <var:U> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:126> * <var:X> + <nat:254> * <var:Z> + <nat:244> * <var:U> + <nat:266> * <var:Q> + <nat:444> * <var:u> + <nat:258> * <var:W> + <nat:482> * <var:r> + <nat:298> * <var:f> + <nat:456> * <var:c> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . assert ( <genH> : Nat . odd <nat:61> = true ) . { auto . } rewrite <- Nat . negb_even . rewrite <genH> . rewrite <genH> . auto . Qed . 