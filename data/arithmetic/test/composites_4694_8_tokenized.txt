\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Supposing we get $ <var:A> = <var:b> \times <var:U> \times <var:S> \times <var:C> \times <var:W> \times <var:K> \times <var:Y> \times <var:c> $ assuming some natural number $ <var:A> $ as well as so that $ <var:C> $ , $ <var:U> $ , $ <var:b> $ , $ <var:c> $ , $ <var:S> $ , $ <var:K> $ , $ <var:Y> $ and $ <var:W> \geq <nat:2> $ , we denote that $ <var:A> $ is <def:eight-composite> using some $ <var:Y> $ , $ <var:C> $ , $ <var:b> $ , $ <var:S> $ , $ <var:U> $ , $ <var:W> $ , $ <var:c> $ , $ <var:K> \in \mathbb{Z}^+ $ . Therefore $ <nat:8648640> = <var:A> $ is a <def:eight-composite> number . \end{theorem} \begin{proof} Notice $ <nat:8648640> = <nat:7> * <nat:4> * <nat:10> * <nat:8> * <nat:3> * <nat:13> * <nat:11> * <nat:9> $ . Furthermore notice that $ <nat:8> $ , $ <nat:9> $ , $ <nat:13> $ , $ <nat:3> $ , $ <nat:4> $ , $ <nat:7> $ , $ <nat:11> $ and $ <nat:10> > <nat:1> $ . This yields the belief is valid . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:eight-composite> ( <var:A> : nat ) := exists <var:Y> <var:C> <var:b> <var:S> <var:U> <var:W> <var:c> <var:K> : nat , ( <var:A> = <var:b> * <var:U> * <var:S> * <var:C> * <var:W> * <var:K> * <var:Y> * <var:c> ) /\ ( <var:C> >= <nat:2> ) /\ ( <var:U> >= <nat:2> ) /\ ( <var:b> >= <nat:2> ) /\ ( <var:c> >= <nat:2> ) /\ ( <var:S> >= <nat:2> ) /\ ( <var:K> >= <nat:2> ) /\ ( <var:Y> >= <nat:2> ) /\ ( <var:W> >= <nat:2> ) . Theorem <genP:1> : <def:eight-composite> <nat:8648640> . Proof . unfold <def:eight-composite> . exists <nat:4> . exists <nat:3> . exists <nat:10> . exists <nat:9> . exists <nat:8> . exists <nat:11> . exists <nat:7> . exists <nat:13> . assert ( <genH> : <nat:8> > <nat:1> ) . { lia . } assert ( <genH> : <nat:9> > <nat:1> ) . { lia . } assert ( <genH> : <nat:13> > <nat:1> ) . { lia . } assert ( <genH> : <nat:3> > <nat:1> ) . { lia . } assert ( <genH> : <nat:4> > <nat:1> ) . { lia . } assert ( <genH> : <nat:7> > <nat:1> ) . { lia . } assert ( <genH> : <nat:11> > <nat:1> ) . { lia . } assert ( <genH> : <nat:10> > <nat:1> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 