\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \newtheorem{definition}{Definition} \begin{document} \begin{definition} Take as given that $ <var:X> $ is a <def:nine-composite> whole number granted that there are $ <var:F> $ , $ <var:J> $ , $ <var:o> $ , $ <var:A> $ , $ <var:l> $ , $ <var:n> $ , $ <var:v> $ , $ <var:x> $ , $ <var:O> \in \mathbb{Z}^+ $ satisfying the condition that $ <var:X> = <var:F> \cdot <var:J> \cdot <var:x> \cdot <var:l> \cdot <var:n> \cdot <var:o> \cdot <var:A> \cdot <var:v> \cdot <var:O> $ given some positive integer $ <var:X> $ as well as so that $ <var:A> $ , $ <var:x> $ , $ <var:O> $ , $ <var:l> $ , $ <var:J> $ , $ <var:o> $ , $ <var:F> $ , $ <var:v> $ and $ <var:n> \geq <nat:2> $ . \end{definition} \begin{theorem} $ <nat:37065600> = <var:X> $ is a <def:nine-composite> whole number . \end{theorem} \begin{proof} Remember that <nat:37065600> is a <def:nine-composite> integer only if <nat:37065600> is the product of positive integers $ <var:x> $ , $ <var:O> $ , $ <var:A> $ , $ <var:J> $ , $ <var:o> $ , $ <var:l> $ , $ <var:F> $ , $ <var:n> $ and $ <var:v> $ where $ <var:v> $ , $ <var:J> $ , $ <var:o> $ , $ <var:n> $ , $ <var:O> $ , $ <var:A> $ , $ <var:x> $ , $ <var:F> $ , $ <var:l> > <nat:1> $ . Notice that $ <nat:13> $ , $ <nat:5> $ , $ <nat:3> $ , $ <nat:10> $ , $ <nat:6> $ , $ <nat:9> $ , $ <nat:11> $ , $ <nat:4> $ , and $ <nat:8> > <nat:1> $ . Also notice moreover $ <nat:5> \times <nat:3> \times <nat:8> \times <nat:9> \times <nat:4> \times <nat:11> \times <nat:13> \times <nat:10> \times <nat:6> = <nat:37065600> $ . So , <nat:37065600> is a <def:nine-composite> positive integer is validated . Therefore , <nat:37065600> is the multiplication of $ <var:o> $ , $ <var:x> $ , $ <var:J> $ , $ <var:F> $ , $ <var:A> $ , $ <var:l> $ , $ <var:v> $ , $ <var:O> $ , and $ <var:n> \in \mathbb{Z}^+ $ has been validated . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:nine-composite> ( <var:X> : nat ) := exists <var:F> <var:J> <var:o> <var:A> <var:l> <var:n> <var:v> <var:x> <var:O> : nat , ( <var:X> = <var:F> * <var:J> * <var:x> * <var:l> * <var:n> * <var:o> * <var:A> * <var:v> * <var:O> ) /\ ( <var:A> >= <nat:2> ) /\ ( <var:x> >= <nat:2> ) /\ ( <var:O> >= <nat:2> ) /\ ( <var:l> >= <nat:2> ) /\ ( <var:J> >= <nat:2> ) /\ ( <var:o> >= <nat:2> ) /\ ( <var:F> >= <nat:2> ) /\ ( <var:v> >= <nat:2> ) /\ ( <var:n> >= <nat:2> ) . Theorem <genP:1> : <def:nine-composite> <nat:37065600> . Proof . unfold <def:nine-composite> . assert ( <genH> : <nat:13> > <nat:1> ) . { lia . } assert ( <genH> : <nat:5> > <nat:1> ) . { lia . } assert ( <genH> : <nat:3> > <nat:1> ) . { lia . } assert ( <genH> : <nat:10> > <nat:1> ) . { lia . } assert ( <genH> : <nat:6> > <nat:1> ) . { lia . } assert ( <genH> : <nat:9> > <nat:1> ) . { lia . } assert ( <genH> : <nat:11> > <nat:1> ) . { lia . } assert ( <genH> : <nat:4> > <nat:1> ) . { lia . } assert ( <genH> : <nat:8> > <nat:1> ) . { lia . } exists <nat:13> . exists <nat:11> . exists <nat:8> . exists <nat:10> . exists <nat:6> . exists <nat:3> . exists <nat:9> . exists <nat:5> . exists <nat:4> . repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 