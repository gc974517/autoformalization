\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:44> * <var:C> + <nat:478> * <var:g> + <nat:190> * <var:L> + <nat:198> * <var:v> + <nat:38> $ will be even assuming some positive terms $ <var:L> $ , $ <var:C> $ , $ <var:v> $ , and $ <var:g> $ . \end{theorem} \begin{proof} We apply the assumption the knowledge that $ <nat:478> \cdot <var:g> + <var:L> \cdot <nat:190> + <nat:38> + <var:C> \cdot <nat:44> + <var:v> \cdot <nat:198> $ is trivially even by reason that the formula $ <nat:190> * <var:L> + <nat:478> * <var:g> + <nat:198> * <var:v> + <var:C> * <nat:44> $ is even . $ <var:g> <nat:478> $ is known to be even from the fact the multiplication between an even whole number with an arbitrary natural is guaranteed to be even and also the coefficient $ <nat:478> $ is guaranteed to be even . Take note $ <nat:190> <var:L> $ is obviously even from the fact the number $ <nat:190> $ is known to be even . Building on , $ <var:v> <nat:198> $ is guaranteed to be even because the integer $ <nat:198> $ is known to be in itself an even natural number . In addition , we know that the leading term $ <nat:44> $ is guaranteed to be an even number . Hence , $ <nat:44> <var:C> $ is guaranteed to be even in addition . From the fact the multiplication of an even natural number and any number in $ \mathbb{N} $ must be even our lemma must be true . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:L> <var:C> <var:v> <var:g> : nat , Nat . even ( <nat:44> * <var:C> + <nat:478> * <var:g> + <nat:190> * <var:L> + <nat:198> * <var:v> + <nat:38> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:478> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:478> * <var:g> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:190> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:190> * <var:L> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:198> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:198> * <var:v> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:44> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:44> * <var:C> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:44> * <var:C> + <nat:478> * <var:g> + <nat:190> * <var:L> + <nat:198> * <var:v> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . even_add . rewrite <genH> . auto . Qed . 