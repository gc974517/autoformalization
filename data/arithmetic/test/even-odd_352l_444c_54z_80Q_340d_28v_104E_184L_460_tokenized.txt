\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:460> + <var:c> <nat:444> + <var:d> <nat:340> + <nat:80> <var:Q> + <var:E> <nat:104> + <nat:28> <var:v> + <var:z> <nat:54> + <nat:184> <var:L> + <nat:352> <var:l> $ is even given any positive numbers $ <var:d> $ , $ <var:E> $ , $ <var:l> $ , $ <var:L> $ , $ <var:z> $ , $ <var:v> $ , $ <var:c> $ , and $ <var:Q> $ . \end{theorem} \begin{proof} The coefficients $ <nat:444> $ , $ <nat:340> $ , $ <nat:80> $ , $ <nat:104> $ , $ <nat:28> $ , $ <nat:54> $ , $ <nat:184> $ , plus $ <nat:352> $ will be even whole numbers . Thus , the terms $ <var:c> \times <nat:444> $ , $ <nat:340> \times <var:d> $ , $ <var:Q> \times <nat:80> $ , $ <nat:104> \times <var:E> $ , $ <var:v> \times <nat:28> $ , $ <nat:54> \times <var:z> $ , $ <nat:184> \times <var:L> $ , as well as $ <var:l> \times <nat:352> $ is guaranteed to be even also . It can be verified that the expression $ <var:l> * <nat:352> + <var:c> * <nat:444> + <var:z> * <nat:54> + <var:Q> * <nat:80> + <nat:340> * <var:d> + <var:v> * <nat:28> + <var:E> * <nat:104> + <nat:460> + <nat:184> * <var:L> $ must be even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:d> <var:E> <var:l> <var:L> <var:z> <var:v> <var:c> <var:Q> : nat , Nat . even ( <nat:444> * <var:c> + <nat:340> * <var:d> + <nat:80> * <var:Q> + <nat:104> * <var:E> + <nat:28> * <var:v> + <nat:54> * <var:z> + <nat:184> * <var:L> + <nat:352> * <var:l> + <nat:460> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:444> = true ) . { auto . } assert ( <genH> : Nat . even <nat:340> = true ) . { auto . } assert ( <genH> : Nat . even <nat:80> = true ) . { auto . } assert ( <genH> : Nat . even <nat:104> = true ) . { auto . } assert ( <genH> : Nat . even <nat:28> = true ) . { auto . } assert ( <genH> : Nat . even <nat:54> = true ) . { auto . } assert ( <genH> : Nat . even <nat:184> = true ) . { auto . } assert ( <genH> : Nat . even <nat:352> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:444> * <var:c> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:340> * <var:d> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:80> * <var:Q> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:104> * <var:E> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:28> * <var:v> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:54> * <var:z> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:184> * <var:L> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:352> * <var:l> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 