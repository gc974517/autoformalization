\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:Q> * <nat:360> + <nat:352> * <var:y> + <nat:60> * <var:t> + <var:k> * <nat:356> + <var:I> * <nat:336> + <nat:264> * <var:D> + <nat:385> + <nat:158> * <var:s> + <var:H> * <nat:292> $ is guaranteed to be odd given all natural numbers $ <var:Q> $ , $ <var:t> $ , $ <var:s> $ , $ <var:y> $ , $ <var:H> $ , $ <var:k> $ , $ <var:I> $ , and $ <var:D> $ . \end{theorem} \begin{proof} The pairs $ <nat:158> * <var:s> $ , $ <var:D> * <nat:264> $ , $ <nat:60> * <var:t> $ , and moreover $ <nat:292> * <var:H> $ are clearly even from the fact the multiplication of an even number in $ \mathbb{Z}^+ $ with a integer will be even . Further , the pairs $ <var:y> * <nat:352> $ and also $ <nat:356> * <var:k> $ must be even . This fact is true from the fact the multiplication of an even integer with a element of $ \mathbb{Z}^+ $ must be even . The term $ <var:Q> * <nat:360> $ is obviously an even whole number . Notice $ <var:I> * <nat:336> $ is known as even . We verify the theorem must be true . See that $ <nat:385> $ is guaranteed to be odd . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:Q> <var:t> <var:s> <var:y> <var:H> <var:k> <var:I> <var:D> : nat , Nat . odd ( <nat:360> * <var:Q> + <nat:352> * <var:y> + <nat:60> * <var:t> + <nat:356> * <var:k> + <nat:336> * <var:I> + <nat:264> * <var:D> + <nat:158> * <var:s> + <nat:292> * <var:H> + <nat:385> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:158> * <var:s> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:264> * <var:D> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:60> * <var:t> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:292> * <var:H> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:352> * <var:y> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:356> * <var:k> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:360> * <var:Q> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:336> * <var:I> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . odd <nat:385> = true ) . { auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 