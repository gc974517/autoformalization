\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:p> \cdot <nat:170> + <var:m> \cdot <nat:74> + <nat:471> + <var:B> \cdot <nat:54> + <nat:470> \cdot <var:Q> + <var:Y> \cdot <nat:10> + <nat:90> \cdot <var:d> + <var:U> \cdot <nat:218> + <var:r> \cdot <nat:438> + <nat:378> \cdot <var:V> + <nat:330> \cdot <var:a> $ must be odd taking some terms $ <var:Q> $ , $ <var:m> $ , $ <var:r> $ , $ <var:a> $ , $ <var:U> $ , $ <var:p> $ , $ <var:B> $ , $ <var:d> $ , $ <var:Y> $ , and $ <var:V> $ . \end{theorem} \begin{proof} The products $ <nat:74> <var:m> $ , $ <nat:54> <var:B> $ , $ <var:p> <nat:170> $ , $ <var:U> <nat:218> $ , $ <nat:10> <var:Y> $ , $ <var:d> <nat:90> $ , and $ <nat:438> <var:r> $ are guaranteed to be even . In addition to this , the product $ <nat:378> <var:V> $ is an even number . Additionally , observe the pair $ <nat:330> <var:a> $ is known as even . The term $ <nat:470> <var:Q> $ is obviously even from the fact taking the product between an even element of $ \mathbb{Z}^+ $ with any element of $ \mathbb{N} $ is by its very nature an even natural . See that $ <nat:471> $ is known as odd . The totaling of even naturals together with an odd number in $ \mathbb{Z}^+ $ is by its very nature an odd number . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:Q> <var:m> <var:r> <var:a> <var:U> <var:p> <var:B> <var:d> <var:Y> <var:V> : nat , Nat . odd ( <nat:170> * <var:p> + <nat:74> * <var:m> + <nat:54> * <var:B> + <nat:470> * <var:Q> + <nat:10> * <var:Y> + <nat:90> * <var:d> + <nat:218> * <var:U> + <nat:438> * <var:r> + <nat:378> * <var:V> + <nat:330> * <var:a> + <nat:471> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:74> * <var:m> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:54> * <var:B> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:170> * <var:p> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:218> * <var:U> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:10> * <var:Y> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:90> * <var:d> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:438> * <var:r> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:378> * <var:V> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:330> * <var:a> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:470> * <var:Q> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . odd <nat:471> = true ) . { auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 