\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:16> \cdot <var:H> + <var:L> \cdot <nat:14> + <var:t> \cdot <nat:436> + <var:p> \cdot <nat:180> + <nat:134> \cdot <var:l> + <nat:8> + <var:N> \cdot <nat:84> + <var:w> \cdot <nat:222> $ is guaranteed to be even using $ <var:l> $ , $ <var:H> $ , $ <var:p> $ , $ <var:w> $ , $ <var:t> $ , $ <var:N> $ , and $ <var:L> \in \mathbb{Z}^+ $ . \end{theorem} \begin{proof} Recall $ <nat:8> $ is obviously even . Remember the summing between even numbers in $ \mathbb{Z}^+ $ concurrently with an even element of $ \mathbb{Z}^+ $ will be even . The claim is true since $ <var:t> \cdot <nat:436> + <var:w> \cdot <nat:222> + <nat:180> \cdot <var:p> + <nat:134> \cdot <var:l> + <nat:84> \cdot <var:N> + <nat:14> \cdot <var:L> + <var:H> \cdot <nat:16> $ is trivially even . The pair $ <var:p> <nat:180> $ is guaranteed to be an even element of $ \mathbb{Z}^+ $ because the number $ <nat:180> $ is clearly even . Adding on , the natural number $ <nat:222> $ is trivially an even positive integer . Therefore , the product $ <nat:222> <var:w> $ is guaranteed to be even also . Observe that $ <nat:14> <var:L> $ is trivially an even positive integer . This is true from the knowledge the whole number $ <nat:14> $ is an even number in $ \mathbb{N} $ . Likewise , we know the leading term $ <nat:134> $ is obviously even . Thus , $ <nat:134> <var:l> $ will be even in addition . The pair $ <nat:84> <var:N> $ is guaranteed to be an even positive integer . This fact holds by reason that the multiplication between an even element of $ \mathbb{N} $ with some element of $ \mathbb{N} $ will be instrinsically an even element of $ \mathbb{Z}^+ $ , and holds because the leading term $ <nat:84> $ is obviously even . Remember the integer $ <nat:436> $ is guaranteed to be even . Hence , the product $ <nat:436> <var:t> $ is even too . The number $ <nat:16> $ is known as even . As a consequence , the product $ <nat:16> <var:H> $ is guaranteed to be even at the same time . This theorem holds as a consequence that the multiplication between even integers and any number in $ \mathbb{Z}^+ $ is guaranteed to be an even positive integer . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:l> <var:H> <var:p> <var:w> <var:t> <var:N> <var:L> : nat , Nat . even ( <nat:16> * <var:H> + <nat:14> * <var:L> + <nat:436> * <var:t> + <nat:180> * <var:p> + <nat:134> * <var:l> + <nat:84> * <var:N> + <nat:222> * <var:w> + <nat:8> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:8> = true ) . { auto . } rewrite Nat . even_add . assert ( <genH> : Nat . even <nat:180> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:180> * <var:p> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:222> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:222> * <var:w> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:14> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:14> * <var:L> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:134> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:134> * <var:l> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:84> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:84> * <var:N> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:436> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:436> * <var:t> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:16> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:16> * <var:H> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:16> * <var:H> + <nat:14> * <var:L> + <nat:436> * <var:t> + <nat:180> * <var:p> + <nat:134> * <var:l> + <nat:84> * <var:N> + <nat:222> * <var:w> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite <genH> . rewrite <genH> . auto . Qed . 