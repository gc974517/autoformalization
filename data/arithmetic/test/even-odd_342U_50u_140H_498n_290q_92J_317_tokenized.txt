\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:317> + <var:U> \times <nat:342> + <var:q> \times <nat:290> + <var:H> \times <nat:140> + <var:J> \times <nat:92> + <nat:50> \times <var:u> + <var:n> \times <nat:498> $ must be odd using any integers $ <var:H> $ , $ <var:U> $ , $ <var:n> $ , $ <var:u> $ , $ <var:J> $ , and $ <var:q> $ . \end{theorem} \begin{proof} We know that the addition between even whole numbers and an odd natural must be in itself an odd positive integer . Recall the products $ <var:q> \cdot <nat:290> $ plus $ <nat:50> \cdot <var:u> $ are known as even integers . This fact is true by reason that the integers $ <nat:290> $ as well as $ <nat:50> $ are trivially even . We know that the products $ <nat:342> \cdot <var:U> $ , $ <nat:92> \cdot <var:J> $ , plus $ <var:H> \cdot <nat:140> $ are known to be even elements of $ \mathbb{Z}^+ $ from the knowledge taking the product of an even natural number and a positive integer must be an even number in $ \mathbb{Z}^+ $ plus the natural numbers $ <nat:342> $ , $ <nat:92> $ , additionally $ <nat:140> $ are trivially even . The natural number $ <nat:498> $ is clearly even . For this reason , the pair $ <var:n> \cdot <nat:498> $ will be even at the same time . It can be checked that the summation $ <nat:342> \times <var:U> + <nat:50> \times <var:u> + <var:H> \times <nat:140> + <nat:317> + <var:n> \times <nat:498> + <nat:290> \times <var:q> + <nat:92> \times <var:J> $ will be odd . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:H> <var:U> <var:n> <var:u> <var:J> <var:q> : nat , Nat . odd ( <nat:342> * <var:U> + <nat:290> * <var:q> + <nat:140> * <var:H> + <nat:92> * <var:J> + <nat:50> * <var:u> + <nat:498> * <var:n> + <nat:317> ) = true . Proof . intros . rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . assert ( <genH> : Nat . even <nat:290> = true ) . { auto . } assert ( <genH> : Nat . even <nat:50> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:290> * <var:q> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:50> * <var:u> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:342> = true ) . { auto . } assert ( <genH> : Nat . even <nat:92> = true ) . { auto . } assert ( <genH> : Nat . even <nat:140> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:342> * <var:U> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:92> * <var:J> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:140> * <var:H> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:498> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:498> * <var:n> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 