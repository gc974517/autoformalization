\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:122> <var:W> + <nat:334> + <var:P> <nat:362> + <nat:288> <var:E> + <var:y> <nat:160> + <var:n> <nat:34> + <nat:256> <var:s> $ is guaranteed to be even given some unknowns $ <var:s> $ , $ <var:E> $ , $ <var:P> $ , $ <var:W> $ , $ <var:y> $ , and $ <var:n> $ . \end{theorem} \begin{proof} The term $ <var:P> \times <nat:362> $ is guaranteed to be even . This must be true as a consequence that the product between an even number in $ \mathbb{Z}^+ $ and an arbitrary positive integer is guaranteed to be even . This claim is true because the number $ <nat:362> $ is clearly even . Furthermore , the term $ <nat:256> \times <var:s> $ is known as an even element of $ \mathbb{N} $ . This fact is proven since the number $ <nat:256> $ is obviously even . Additionally , the leading term $ <nat:122> $ is known to be even . Then , the pair $ <nat:122> \times <var:W> $ will be even also . Remember that the term $ <nat:160> \times <var:y> $ is known to be even . This must be true from the fact the product of an even number and a positive integer must be even and also the integer $ <nat:160> $ is known to be even . The term $ <nat:34> \times <var:n> $ is trivially an even positive integer . This is true as a consequence that the whole number $ <nat:34> $ is obviously fundamentally an even natural number . The leading term $ <nat:288> $ is trivially an even element of $ \mathbb{Z}^+ $ . Consequently , the term $ <var:E> \times <nat:288> $ is even also . It can be proven that our claim holds . We know that $ <nat:334> $ is clearly even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:s> <var:E> <var:P> <var:W> <var:y> <var:n> : nat , Nat . even ( <nat:122> * <var:W> + <nat:362> * <var:P> + <nat:288> * <var:E> + <nat:160> * <var:y> + <nat:34> * <var:n> + <nat:256> * <var:s> + <nat:334> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:362> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:362> * <var:P> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:256> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:256> * <var:s> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:122> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:122> * <var:W> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:160> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:160> * <var:y> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:34> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:34> * <var:n> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:288> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:288> * <var:E> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:334> = true ) . { auto . } repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 