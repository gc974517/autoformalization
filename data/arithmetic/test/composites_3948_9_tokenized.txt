\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Let $ <var:c> $ , $ <var:O> $ , $ <var:f> $ , $ <var:b> $ , $ <var:w> $ , $ <var:e> $ , $ <var:n> $ , $ <var:I> $ , $ <var:t> \in \mathbb{Z}^+ $ . We define that $ <var:L> \in \mathbb{Z}^+ $ will be considered to be a <def:nine-composite> integer given $ <var:L> = <var:I> * <var:c> * <var:O> * <var:b> * <var:n> * <var:e> * <var:w> * <var:f> * <var:t> $ and where $ <var:O> $ , $ <var:e> $ , $ <var:c> $ , $ <var:n> $ , $ <var:w> $ , $ <var:t> $ , $ <var:I> $ , $ <var:f> $ , and $ <var:b> \geq <nat:2> $ . Thus the whole number <nat:207567360> is a <def:nine-composite> integer . \end{theorem} \begin{proof} Observe that $ <nat:12> $ , $ <nat:7> $ , $ <nat:4> $ , $ <nat:13> $ , $ <nat:8> $ , $ <nat:9> $ , $ <nat:10> $ , $ <nat:11> $ , $ <nat:6> $ are larger than or equivalent to <nat:2> . Further note that also $ <nat:207567360> = <nat:10> \times <nat:11> \times <nat:6> \times <nat:8> \times <nat:9> \times <nat:7> \times <nat:4> \times <nat:13> \times <nat:12> $ . As a result , $ <nat:207567360> = <var:b> \cdot <var:e> \cdot <var:O> \cdot <var:n> \cdot <var:f> \cdot <var:c> \cdot <var:t> \cdot <var:I> \cdot <var:w> $ has been verified . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:nine-composite> ( <var:L> : nat ) := exists <var:c> <var:O> <var:f> <var:b> <var:w> <var:e> <var:n> <var:I> <var:t> : nat , ( <var:L> = <var:I> * <var:c> * <var:O> * <var:b> * <var:n> * <var:e> * <var:w> * <var:f> * <var:t> ) /\ ( <var:O> >= <nat:2> ) /\ ( <var:e> >= <nat:2> ) /\ ( <var:c> >= <nat:2> ) /\ ( <var:n> >= <nat:2> ) /\ ( <var:w> >= <nat:2> ) /\ ( <var:t> >= <nat:2> ) /\ ( <var:I> >= <nat:2> ) /\ ( <var:f> >= <nat:2> ) /\ ( <var:b> >= <nat:2> ) . Theorem <genP:1> : <def:nine-composite> <nat:207567360> . Proof . unfold <def:nine-composite> . assert ( <genH> : <nat:12> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:7> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:4> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:13> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:8> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:9> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:10> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:11> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:6> >= <nat:2> ) . { lia . } exists <nat:9> . exists <nat:6> . exists <nat:4> . exists <nat:7> . exists <nat:10> . exists <nat:11> . exists <nat:8> . exists <nat:12> . exists <nat:13> . repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 