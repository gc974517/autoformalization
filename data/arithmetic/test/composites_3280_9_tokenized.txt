\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Let $ <var:r> $ , $ <var:O> $ , $ <var:d> $ , $ <var:i> $ , $ <var:R> $ , $ <var:f> $ , $ <var:h> $ , $ <var:g> $ , $ <var:M> $ be integers . Say that $ <var:t> \in \mathbb{N} $ is called a <def:nine-composite> positive integer given $ <var:t> = <var:d> * <var:M> * <var:r> * <var:i> * <var:g> * <var:O> * <var:h> * <var:f> * <var:R> $ plus such that $ <var:r> $ , $ <var:d> $ , $ <var:g> $ , $ <var:R> $ , $ <var:M> $ , $ <var:h> $ , $ <var:O> $ , $ <var:f> $ , and $ <var:i> > <nat:1> $ . Then the natural number <nat:31933440> is <def:nine-composite> . \end{theorem} \begin{proof} Assume $ <var:i> = <nat:11> $ , $ <var:M> = <nat:4> $ , $ <var:f> = <nat:9> $ , $ <var:R> = <nat:2> $ , $ <var:O> = <nat:10> $ , $ <var:r> = <nat:12> $ , $ <var:g> = <nat:8> $ , $ <var:h> = <nat:7> $ , and $ <var:d> = <nat:6> $ . Further note that $ <nat:11> $ , $ <nat:8> $ , $ <nat:12> $ , $ <nat:10> $ , $ <nat:4> $ , $ <nat:6> $ , $ <nat:2> $ , $ <nat:7> $ , and $ <nat:9> $ are more than <nat:1> . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:nine-composite> ( <var:t> : nat ) := exists <var:r> <var:O> <var:d> <var:i> <var:R> <var:f> <var:h> <var:g> <var:M> : nat , ( <var:t> = <var:d> * <var:M> * <var:r> * <var:i> * <var:g> * <var:O> * <var:h> * <var:f> * <var:R> ) /\ ( <var:r> > <nat:1> ) /\ ( <var:d> > <nat:1> ) /\ ( <var:g> > <nat:1> ) /\ ( <var:R> > <nat:1> ) /\ ( <var:M> > <nat:1> ) /\ ( <var:h> > <nat:1> ) /\ ( <var:O> > <nat:1> ) /\ ( <var:f> > <nat:1> ) /\ ( <var:i> > <nat:1> ) . Theorem <genP:1> : <def:nine-composite> <nat:31933440> . Proof . unfold <def:nine-composite> . exists <nat:12> . exists <nat:10> . exists <nat:6> . exists <nat:11> . exists <nat:2> . exists <nat:9> . exists <nat:7> . exists <nat:8> . exists <nat:4> . assert ( <genH> : <nat:11> > <nat:1> ) . { lia . } assert ( <genH> : <nat:8> > <nat:1> ) . { lia . } assert ( <genH> : <nat:12> > <nat:1> ) . { lia . } assert ( <genH> : <nat:10> > <nat:1> ) . { lia . } assert ( <genH> : <nat:4> > <nat:1> ) . { lia . } assert ( <genH> : <nat:6> > <nat:1> ) . { lia . } assert ( <genH> : <nat:2> > <nat:1> ) . { lia . } assert ( <genH> : <nat:7> > <nat:1> ) . { lia . } assert ( <genH> : <nat:9> > <nat:1> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 