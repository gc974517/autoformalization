\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} We denote that $ <var:m> $ is a <def:twelve-composite> whole number under the condition assuming some $ <var:V> $ , $ <var:y> $ , $ <var:b> $ , $ <var:l> $ , $ <var:Z> $ , $ <var:W> $ , $ <var:E> $ , $ <var:c> $ , $ <var:D> $ , $ <var:K> $ , $ <var:f> $ , $ <var:e> \in \mathbb{N} $ we have $ <var:W> $ , $ <var:y> $ , $ <var:D> $ , $ <var:E> $ , $ <var:b> $ , $ <var:V> $ , $ <var:l> $ , $ <var:f> $ , $ <var:Z> $ , $ <var:K> $ , $ <var:c> $ , and $ <var:e> \geq <nat:2> $ plus for $ <var:m> \in \mathbb{N} $ , $ <var:f> * <var:K> * <var:D> * <var:e> * <var:W> * <var:y> * <var:E> * <var:c> * <var:V> * <var:Z> * <var:l> * <var:b> = <var:m> $ . So $ <var:m> = <nat:6227020800> $ is a <def:twelve-composite> natural number . \end{theorem} \begin{proof} Recall a <def:twelve-composite> natural number is the product between whole numbers $ <var:K> $ , $ <var:V> $ , $ <var:f> $ , $ <var:Z> $ , $ <var:l> $ , $ <var:e> $ , $ <var:b> $ , $ <var:D> $ , $ <var:E> $ , $ <var:W> $ , $ <var:y> $ , and $ <var:c> $ such that $ <var:c> $ , $ <var:D> $ , $ <var:l> $ , $ <var:f> $ , $ <var:K> $ , $ <var:E> $ , $ <var:y> $ , $ <var:e> $ , $ <var:W> $ , $ <var:b> $ , $ <var:V> $ and $ <var:Z> \geq <nat:2> $ . Let $ <var:V> = <nat:13> $ , $ <var:W> = <nat:12> $ , $ <var:D> = <nat:2> $ , $ <var:E> = <nat:6> $ , $ <var:l> = <nat:10> $ , $ <var:e> = <nat:11> $ , $ <var:c> = <nat:4> $ , $ <var:K> = <nat:3> $ , $ <var:y> = <nat:8> $ , $ <var:b> = <nat:5> $ , $ <var:f> = <nat:7> $ , $ <var:Z> = <nat:9> $ . We confirm <nat:6227020800> is a <def:twelve-composite> integer . Notice $ <nat:3> $ , $ <nat:4> $ , $ <nat:11> $ , $ <nat:13> $ , $ <nat:8> $ , $ <nat:5> $ , $ <nat:7> $ , $ <nat:12> $ , $ <nat:2> $ , $ <nat:9> $ , $ <nat:10> $ , $ <nat:6> \geq <nat:2> $ . Moreover observe that as well $ <nat:7> \times <nat:12> \times <nat:2> \times <nat:9> \times <nat:5> \times <nat:8> \times <nat:3> \times <nat:4> \times <nat:13> \times <nat:10> \times <nat:11> \times <nat:6> = <nat:6227020800> = <var:f> \times <var:W> \times <var:D> \times <var:Z> \times <var:b> \times <var:y> \times <var:K> \times <var:c> \times <var:V> \times <var:l> \times <var:e> \times <var:E> $ . This hints <nat:6227020800> is a <def:twelve-composite> number . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:twelve-composite> ( <var:m> : nat ) := exists <var:V> <var:y> <var:b> <var:l> <var:Z> <var:W> <var:E> <var:c> <var:D> <var:K> <var:f> <var:e> : nat , ( <var:W> >= <nat:2> ) /\ ( <var:y> >= <nat:2> ) /\ ( <var:D> >= <nat:2> ) /\ ( <var:E> >= <nat:2> ) /\ ( <var:b> >= <nat:2> ) /\ ( <var:V> >= <nat:2> ) /\ ( <var:l> >= <nat:2> ) /\ ( <var:f> >= <nat:2> ) /\ ( <var:Z> >= <nat:2> ) /\ ( <var:K> >= <nat:2> ) /\ ( <var:c> >= <nat:2> ) /\ ( <var:e> >= <nat:2> ) /\ ( <var:f> * <var:K> * <var:D> * <var:e> * <var:W> * <var:y> * <var:E> * <var:c> * <var:V> * <var:Z> * <var:l> * <var:b> = <var:m> ) . Theorem <genP:1> : <def:twelve-composite> <nat:6227020800> . Proof . unfold <def:twelve-composite> . exists <nat:13> . exists <nat:8> . exists <nat:5> . exists <nat:10> . exists <nat:9> . exists <nat:12> . exists <nat:6> . exists <nat:4> . exists <nat:2> . exists <nat:3> . exists <nat:7> . exists <nat:11> . assert ( <genH> : <nat:3> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:4> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:11> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:13> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:8> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:5> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:7> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:12> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:2> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:9> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:10> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:6> >= <nat:2> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 