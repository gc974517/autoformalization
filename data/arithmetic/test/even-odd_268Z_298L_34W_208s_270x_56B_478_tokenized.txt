\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:478> + <nat:208> \times <var:s> + <nat:268> \times <var:Z> + <var:L> \times <nat:298> + <var:W> \times <nat:34> + <var:x> \times <nat:270> + <var:B> \times <nat:56> $ is guaranteed to be even for any $ <var:W> $ , $ <var:B> $ , $ <var:s> $ , $ <var:x> $ , $ <var:L> $ , and $ <var:Z> $ . \end{theorem} \begin{proof} The pairs $ <var:x> \cdot <nat:270> $ , $ <nat:298> \cdot <var:L> $ , $ <nat:34> \cdot <var:W> $ , and likewise $ <nat:208> \cdot <var:s> $ are guaranteed to be even . This claim is true from the fact the multiplication between an even integer with some number must be an even natural . Likewise , the term $ <nat:268> \cdot <var:Z> $ is trivially an even whole number from the fact the multiplication of an even number in $ \mathbb{N} $ and some element of $ \mathbb{Z}^+ $ will be clearly an even whole number . $ <var:B> \cdot <nat:56> $ is clearly an even positive integer . This fact is true from the knowledge taking the product between an even natural with an arbitrary number in $ \mathbb{N} $ will be even . We show $ <var:Z> \times <nat:268> + <nat:298> \times <var:L> + <var:W> \times <nat:34> + <var:s> \times <nat:208> + <nat:478> + <nat:270> \times <var:x> + <nat:56> \times <var:B> $ must be even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:W> <var:B> <var:s> <var:x> <var:L> <var:Z> : nat , Nat . even ( <nat:208> * <var:s> + <nat:268> * <var:Z> + <nat:298> * <var:L> + <nat:34> * <var:W> + <nat:270> * <var:x> + <nat:56> * <var:B> + <nat:478> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:270> * <var:x> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:298> * <var:L> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:34> * <var:W> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:208> * <var:s> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:268> * <var:Z> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:56> * <var:B> ) = true ) . { rewrite Nat . even_mul . auto . } repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 