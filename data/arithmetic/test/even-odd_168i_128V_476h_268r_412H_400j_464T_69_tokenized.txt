\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:i> <nat:168> + <var:V> <nat:128> + <nat:476> <var:h> + <var:r> <nat:268> + <nat:412> <var:H> + <var:j> <nat:400> + <var:T> <nat:464> + <nat:69> $ is guaranteed to be odd . \end{theorem} \begin{proof} See the summation between an even whole number and an odd whole number must be odd . The pairs $ <var:r> \times <nat:268> $ , $ <nat:476> \times <var:h> $ , $ <nat:464> \times <var:T> $ , $ <var:V> \times <nat:128> $ , $ <nat:412> \times <var:H> $ , as well as $ <nat:400> \times <var:j> $ are even as a consequence that taking the product between an even number in $ \mathbb{N} $ with an arbitrary number in $ \mathbb{Z}^+ $ must be instrinsically an even element of $ \mathbb{Z}^+ $ . Recall that the pair $ <var:i> \times <nat:168> $ is clearly an even natural number from the fact multiplying of an even element of $ \mathbb{Z}^+ $ and any whole number must be even . It can be proven that our theorem is proven . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:i> <var:V> <var:h> <var:r> <var:H> <var:j> <var:T> : nat , Nat . odd ( <nat:168> * <var:i> + <nat:128> * <var:V> + <nat:476> * <var:h> + <nat:268> * <var:r> + <nat:412> * <var:H> + <nat:400> * <var:j> + <nat:464> * <var:T> + <nat:69> ) = true . Proof . intros . rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . assert ( <genH> : Nat . even ( <nat:268> * <var:r> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:476> * <var:h> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:464> * <var:T> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:128> * <var:V> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:412> * <var:H> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:400> * <var:j> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:168> * <var:i> ) = true ) . { rewrite Nat . even_mul . auto . } rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 