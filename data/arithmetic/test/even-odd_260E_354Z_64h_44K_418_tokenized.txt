\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:E> \cdot <nat:260> + <nat:64> \cdot <var:h> + <nat:354> \cdot <var:Z> + <nat:418> + <var:K> \cdot <nat:44> $ is guaranteed to be even given positive numbers $ <var:E> $ , $ <var:K> $ , $ <var:h> $ , and $ <var:Z> $ . \end{theorem} \begin{proof} See $ <nat:418> $ is known to be even . The adding between even positive integers concurrently and an even number in $ \mathbb{Z}^+ $ is guaranteed to be by its very nature an even number in $ \mathbb{Z}^+ $ . Then , the summation $ <nat:418> + <var:h> * <nat:64> + <var:E> * <nat:260> + <var:K> * <nat:44> + <var:Z> * <nat:354> $ will be even . $ <nat:260> * <var:E> + <nat:354> * <var:Z> + <nat:64> * <var:h> + <nat:44> * <var:K> $ is clearly even . Likewise , the integers $ <nat:260> $ , $ <nat:354> $ , $ <nat:64> $ , and $ <nat:44> $ are obviously even . In consequence , the terms $ <nat:260> <var:E> $ , $ <nat:354> <var:Z> $ , $ <nat:64> <var:h> $ , additionally $ <nat:44> <var:K> $ is even in addition . Since the adding between an even number in $ \mathbb{Z}^+ $ with even elements of $ \mathbb{Z}^+ $ will be even , the claim must be true . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:E> <var:K> <var:h> <var:Z> : nat , Nat . even ( <nat:260> * <var:E> + <nat:64> * <var:h> + <nat:354> * <var:Z> + <nat:44> * <var:K> + <nat:418> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:418> = true ) . { auto . } rewrite Nat . even_add . assert ( <genH> : Nat . even <nat:260> = true ) . { auto . } assert ( <genH> : Nat . even <nat:354> = true ) . { auto . } assert ( <genH> : Nat . even <nat:64> = true ) . { auto . } assert ( <genH> : Nat . even <nat:44> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:260> * <var:E> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:354> * <var:Z> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:64> * <var:h> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:44> * <var:K> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:260> * <var:E> + <nat:64> * <var:h> + <nat:354> * <var:Z> + <nat:44> * <var:K> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite <genH> . rewrite <genH> . auto . Qed . 