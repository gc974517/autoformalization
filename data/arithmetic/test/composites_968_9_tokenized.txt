\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Claim that $ <var:N> $ is a <def:nine-composite> number assuming that there are $ <var:i> $ , $ <var:t> $ , $ <var:q> $ , $ <var:Y> $ , $ <var:o> $ , $ <var:K> $ , $ <var:E> $ , $ <var:b> $ , $ <var:a> \in \mathbb{Z}^+ $ so that $ <var:Y> $ , $ <var:K> $ , $ <var:i> $ , $ <var:o> $ , $ <var:b> $ , $ <var:a> $ , $ <var:E> $ , $ <var:q> $ , $ <var:t> \geq <nat:2> $ plus using some $ <var:N> $ , $ <var:N> = <var:b> \times <var:t> \times <var:Y> \times <var:K> \times <var:o> \times <var:q> \times <var:a> \times <var:i> \times <var:E> $ . Thus $ <nat:16473600> = <var:N> $ is <def:nine-composite> . \end{theorem} \begin{proof} We verify <nat:16473600> is <def:nine-composite> considering $ <nat:11> $ , $ <nat:8> $ , $ <nat:2> $ , $ <nat:3> $ , $ <nat:4> $ , $ <nat:13> $ , $ <nat:5> $ , $ <nat:10> $ , $ <nat:12> \geq <nat:2> $ as well as in view of $ <nat:16473600> = <var:q> \cdot <var:t> \cdot <var:K> \cdot <var:a> \cdot <var:E> \cdot <var:i> \cdot <var:Y> \cdot <var:b> \cdot <var:o> $ produces $ <var:t> = <nat:3> $ , $ <var:q> = <nat:12> $ , $ <var:i> = <nat:10> $ , $ <var:a> = <nat:11> $ , $ <var:b> = <nat:2> $ , $ <var:Y> = <nat:4> $ , $ <var:K> = <nat:13> $ , $ <var:E> = <nat:8> $ , and $ <var:o> = <nat:5> $ . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:nine-composite> ( <var:N> : nat ) := exists <var:i> <var:t> <var:q> <var:Y> <var:o> <var:K> <var:E> <var:b> <var:a> : nat , ( <var:Y> >= <nat:2> ) /\ ( <var:K> >= <nat:2> ) /\ ( <var:i> >= <nat:2> ) /\ ( <var:o> >= <nat:2> ) /\ ( <var:b> >= <nat:2> ) /\ ( <var:a> >= <nat:2> ) /\ ( <var:E> >= <nat:2> ) /\ ( <var:q> >= <nat:2> ) /\ ( <var:t> >= <nat:2> ) /\ ( <var:N> = <var:b> * <var:t> * <var:Y> * <var:K> * <var:o> * <var:q> * <var:a> * <var:i> * <var:E> ) . Theorem <genP:1> : <def:nine-composite> <nat:16473600> . Proof . unfold <def:nine-composite> . assert ( <genH> : <nat:11> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:8> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:2> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:3> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:4> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:13> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:5> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:10> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:12> >= <nat:2> ) . { lia . } exists <nat:10> . exists <nat:3> . exists <nat:12> . exists <nat:4> . exists <nat:5> . exists <nat:13> . exists <nat:8> . exists <nat:2> . exists <nat:11> . repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 