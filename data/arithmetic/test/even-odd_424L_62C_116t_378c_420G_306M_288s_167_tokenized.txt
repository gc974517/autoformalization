\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:424> <var:L> + <nat:62> <var:C> + <var:t> <nat:116> + <nat:167> + <nat:378> <var:c> + <var:G> <nat:420> + <nat:306> <var:M> + <nat:288> <var:s> $ is odd . \end{theorem} \begin{proof} The products $ <nat:378> \cdot <var:c> $ , $ <var:C> \cdot <nat:62> $ , $ <var:M> \cdot <nat:306> $ , $ <var:t> \cdot <nat:116> $ , as well as $ <nat:288> \cdot <var:s> $ are known as even natural numbers . The term $ <nat:420> \cdot <var:G> $ is known to be even from the knowledge the multiplication between an even number with a number in $ \mathbb{N} $ is even . On top of this , take note that $ <nat:424> \cdot <var:L> $ is even from the fact multiplying of an even natural and any number in $ \mathbb{Z}^+ $ is guaranteed to be even . By reason that the adding of even numbers successively with an odd integer is guaranteed to be an odd natural , then the main result holds . Recall that $ <nat:167> $ is known as odd . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:L> <var:C> <var:t> <var:c> <var:G> <var:M> <var:s> : nat , Nat . odd ( <nat:424> * <var:L> + <nat:62> * <var:C> + <nat:116> * <var:t> + <nat:378> * <var:c> + <nat:420> * <var:G> + <nat:306> * <var:M> + <nat:288> * <var:s> + <nat:167> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:378> * <var:c> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:62> * <var:C> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:306> * <var:M> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:116> * <var:t> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:288> * <var:s> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:420> * <var:G> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:424> * <var:L> ) = true ) . { rewrite Nat . even_mul . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . assert ( <genH> : Nat . odd <nat:167> = true ) . { auto . } rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 