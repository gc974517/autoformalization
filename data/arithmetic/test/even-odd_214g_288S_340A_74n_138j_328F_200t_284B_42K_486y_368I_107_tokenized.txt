\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Using variables $ <var:S> $ , $ <var:K> $ , $ <var:n> $ , $ <var:g> $ , $ <var:j> $ , $ <var:y> $ , $ <var:t> $ , $ <var:B> $ , $ <var:A> $ , $ <var:F> $ , and $ <var:I> $ $ <nat:138> <var:j> + <nat:42> <var:K> + <nat:214> <var:g> + <nat:368> <var:I> + <var:B> <nat:284> + <var:t> <nat:200> + <nat:74> <var:n> + <nat:486> <var:y> + <var:S> <nat:288> + <nat:328> <var:F> + <nat:107> + <nat:340> <var:A> $ must be odd . \end{theorem} \begin{proof} The totaling of even naturals successively with an odd whole number is guaranteed to be odd . See that the whole numbers $ <nat:138> $ , $ <nat:42> $ , $ <nat:214> $ , $ <nat:368> $ , $ <nat:284> $ , $ <nat:200> $ , $ <nat:74> $ , $ <nat:486> $ , $ <nat:288> $ , $ <nat:328> $ , as well as $ <nat:340> $ are guaranteed to be even . Consequently , the terms $ <nat:138> * <var:j> $ , $ <var:K> * <nat:42> $ , $ <var:g> * <nat:214> $ , $ <nat:368> * <var:I> $ , $ <var:B> * <nat:284> $ , $ <nat:200> * <var:t> $ , $ <var:n> * <nat:74> $ , $ <nat:486> * <var:y> $ , $ <nat:288> * <var:S> $ , $ <nat:328> * <var:F> $ , and also $ <var:A> * <nat:340> $ will be even at the same time . It can be justified that the formula $ <nat:107> + <nat:214> <var:g> + <nat:288> <var:S> + <var:A> <nat:340> + <var:n> <nat:74> + <nat:138> <var:j> + <var:F> <nat:328> + <nat:200> <var:t> + <var:B> <nat:284> + <var:K> <nat:42> + <var:y> <nat:486> + <var:I> <nat:368> $ will be odd . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:S> <var:K> <var:n> <var:g> <var:j> <var:y> <var:t> <var:B> <var:A> <var:F> <var:I> : nat , Nat . odd ( <nat:138> * <var:j> + <nat:42> * <var:K> + <nat:214> * <var:g> + <nat:368> * <var:I> + <nat:284> * <var:B> + <nat:200> * <var:t> + <nat:74> * <var:n> + <nat:486> * <var:y> + <nat:288> * <var:S> + <nat:328> * <var:F> + <nat:340> * <var:A> + <nat:107> ) = true . Proof . intros . rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . assert ( <genH> : Nat . even <nat:138> = true ) . { auto . } assert ( <genH> : Nat . even <nat:42> = true ) . { auto . } assert ( <genH> : Nat . even <nat:214> = true ) . { auto . } assert ( <genH> : Nat . even <nat:368> = true ) . { auto . } assert ( <genH> : Nat . even <nat:284> = true ) . { auto . } assert ( <genH> : Nat . even <nat:200> = true ) . { auto . } assert ( <genH> : Nat . even <nat:74> = true ) . { auto . } assert ( <genH> : Nat . even <nat:486> = true ) . { auto . } assert ( <genH> : Nat . even <nat:288> = true ) . { auto . } assert ( <genH> : Nat . even <nat:328> = true ) . { auto . } assert ( <genH> : Nat . even <nat:340> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:138> * <var:j> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:42> * <var:K> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:214> * <var:g> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:368> * <var:I> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:284> * <var:B> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:200> * <var:t> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:74> * <var:n> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:486> * <var:y> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:288> * <var:S> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:328> * <var:F> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:340> * <var:A> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 