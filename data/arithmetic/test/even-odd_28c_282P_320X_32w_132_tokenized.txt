\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Assuming some positive numbers $ <var:X> $ , $ <var:w> $ , $ <var:P> $ , and $ <var:c> $ the formula $ <var:X> * <nat:320> + <nat:132> + <var:c> * <nat:28> + <nat:282> * <var:P> + <nat:32> * <var:w> $ must be even . \end{theorem} \begin{proof} We verify $ <nat:28> \cdot <var:c> + <nat:320> \cdot <var:X> + <var:w> \cdot <nat:32> + <nat:132> + <nat:282> \cdot <var:P> $ is even from the knowledge $ <var:X> <nat:320> + <var:c> <nat:28> + <nat:32> <var:w> + <var:P> <nat:282> $ is known as even . Furthermore , we know the terms $ <var:X> \cdot <nat:320> $ , $ <var:c> \cdot <nat:28> $ , $ <nat:32> \cdot <var:w> $ , and also $ <var:P> \cdot <nat:282> $ are trivially even natural numbers . This is true from the knowledge the multiplication of an even number in $ \mathbb{N} $ and a number in $ \mathbb{N} $ will be even , which must be true as a consequence that the leading terms $ <nat:320> $ , $ <nat:28> $ , $ <nat:32> $ , and $ <nat:282> $ must be even . Recall that $ <nat:132> $ is even . From the knowledge the summation between an even natural with an even number must be even , as a result the expression $ <nat:28> * <var:c> + <var:P> * <nat:282> + <nat:132> + <var:X> * <nat:320> + <nat:32> * <var:w> $ is even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:X> <var:w> <var:P> <var:c> : nat , Nat . even ( <nat:320> * <var:X> + <nat:28> * <var:c> + <nat:282> * <var:P> + <nat:32> * <var:w> + <nat:132> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:320> = true ) . { auto . } assert ( <genH> : Nat . even <nat:28> = true ) . { auto . } assert ( <genH> : Nat . even <nat:32> = true ) . { auto . } assert ( <genH> : Nat . even <nat:282> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:320> * <var:X> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:28> * <var:c> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:32> * <var:w> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:282> * <var:P> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:320> * <var:X> + <nat:28> * <var:c> + <nat:282> * <var:P> + <nat:32> * <var:w> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:132> = true ) . { auto . } rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . auto . Qed . 