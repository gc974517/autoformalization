\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Given positive numbers $ <var:d> $ , $ <var:P> $ , $ <var:I> $ , $ <var:v> $ , $ <var:S> $ , $ <var:M> $ , $ <var:L> $ , and $ <var:Y> $ the sum $ <var:S> * <nat:50> + <nat:78> * <var:L> + <var:d> * <nat:178> + <var:P> * <nat:158> + <var:v> * <nat:378> + <nat:299> + <var:M> * <nat:130> + <nat:300> * <var:Y> + <var:I> * <nat:120> $ will be odd . \end{theorem} \begin{proof} See the totaling of even integers together with an odd element of $ \mathbb{N} $ is odd . Our proposition is true by reason that $ <nat:178> \times <var:d> + <var:L> \times <nat:78> + <nat:120> \times <var:I> + <nat:50> \times <var:S> + <var:P> \times <nat:158> + <var:Y> \times <nat:300> + <var:M> \times <nat:130> + <var:v> \times <nat:378> $ is known to be even . Take note that the products $ <nat:300> <var:Y> $ , $ <var:v> <nat:378> $ , $ <nat:120> <var:I> $ , $ <nat:50> <var:S> $ , $ <var:d> <nat:178> $ , and likewise $ <var:P> <nat:158> $ are trivially even from the knowledge the product of an even natural and any natural number is guaranteed to be even . In addition to this , notice the term $ <nat:78> <var:L> $ is trivially an even integer because the multiplication between an even element of $ \mathbb{Z}^+ $ and an arbitrary element of $ \mathbb{N} $ must be even . In addition to this , notice that the product $ <var:M> <nat:130> $ is guaranteed to be even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:d> <var:P> <var:I> <var:v> <var:S> <var:M> <var:L> <var:Y> : nat , Nat . odd ( <nat:50> * <var:S> + <nat:78> * <var:L> + <nat:178> * <var:d> + <nat:158> * <var:P> + <nat:378> * <var:v> + <nat:130> * <var:M> + <nat:300> * <var:Y> + <nat:120> * <var:I> + <nat:299> ) = true . Proof . intros . rewrite Nat . odd_add . assert ( <genH> : Nat . even ( <nat:300> * <var:Y> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:378> * <var:v> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:120> * <var:I> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:50> * <var:S> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:178> * <var:d> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:158> * <var:P> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:78> * <var:L> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:130> * <var:M> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:50> * <var:S> + <nat:78> * <var:L> + <nat:178> * <var:d> + <nat:158> * <var:P> + <nat:378> * <var:v> + <nat:130> * <var:M> + <nat:300> * <var:Y> + <nat:120> * <var:I> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite <- Nat . negb_even . rewrite <genH> . auto . Qed . 