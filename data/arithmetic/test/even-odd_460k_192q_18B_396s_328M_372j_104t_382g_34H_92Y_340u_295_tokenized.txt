\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Taking any whole numbers $ <var:g> $ , $ <var:s> $ , $ <var:M> $ , $ <var:j> $ , $ <var:B> $ , $ <var:k> $ , $ <var:Y> $ , $ <var:H> $ , $ <var:q> $ , $ <var:t> $ , and $ <var:u> $ the formula $ <var:k> \cdot <nat:460> + <nat:192> \cdot <var:q> + <var:B> \cdot <nat:18> + <nat:396> \cdot <var:s> + <var:M> \cdot <nat:328> + <nat:372> \cdot <var:j> + <var:t> \cdot <nat:104> + <nat:382> \cdot <var:g> + <var:H> \cdot <nat:34> + <var:Y> \cdot <nat:92> + <nat:295> + <var:u> \cdot <nat:340> $ must be odd . \end{theorem} \begin{proof} It can be checked that the main result holds . See the pairs $ <nat:460> <var:k> $ , $ <var:B> <nat:18> $ , $ <var:q> <nat:192> $ , $ <var:j> <nat:372> $ , $ <nat:382> <var:g> $ , $ <var:t> <nat:104> $ , $ <nat:328> <var:M> $ , $ <var:s> <nat:396> $ , and $ <nat:92> <var:Y> $ will be even numbers in $ \mathbb{N} $ from the knowledge the product of an even number and some natural will be an even natural . Further , notice that the term $ <var:H> <nat:34> $ is clearly an even number in $ \mathbb{N} $ . On top of this , the term $ <nat:340> <var:u> $ is an even number in $ \mathbb{Z}^+ $ . The summation of even integers with an odd number is odd . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:g> <var:s> <var:M> <var:j> <var:B> <var:k> <var:Y> <var:H> <var:q> <var:t> <var:u> : nat , Nat . odd ( <nat:460> * <var:k> + <nat:192> * <var:q> + <nat:18> * <var:B> + <nat:396> * <var:s> + <nat:328> * <var:M> + <nat:372> * <var:j> + <nat:104> * <var:t> + <nat:382> * <var:g> + <nat:34> * <var:H> + <nat:92> * <var:Y> + <nat:340> * <var:u> + <nat:295> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:460> * <var:k> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:18> * <var:B> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:192> * <var:q> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:372> * <var:j> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:382> * <var:g> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:104> * <var:t> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:328> * <var:M> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:396> * <var:s> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:92> * <var:Y> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:34> * <var:H> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:340> * <var:u> ) = true ) . { rewrite Nat . even_mul . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 