\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Using all terms $ <var:B> $ , $ <var:X> $ , $ <var:l> $ , $ <var:d> $ , $ <var:J> $ , $ <var:j> $ , $ <var:H> $ , $ <var:q> $ , $ <var:a> $ , $ <var:i> $ , and $ <var:S> $ the summation $ <var:X> \times <nat:102> + <nat:36> + <nat:474> \times <var:d> + <var:l> \times <nat:184> + <var:J> \times <nat:354> + <nat:494> \times <var:B> + <nat:470> \times <var:S> + <var:j> \times <nat:382> + <var:a> \times <nat:484> + <var:i> \times <nat:390> + <var:H> \times <nat:304> + <nat:282> \times <var:q> $ is even . \end{theorem} \begin{proof} In addition to this , the products $ <nat:102> * <var:X> $ , $ <nat:474> * <var:d> $ , $ <var:l> * <nat:184> $ , $ <nat:354> * <var:J> $ , $ <nat:494> * <var:B> $ , $ <var:S> * <nat:470> $ , $ <nat:382> * <var:j> $ , $ <nat:484> * <var:a> $ , $ <nat:390> * <var:i> $ , $ <nat:304> * <var:H> $ , plus $ <var:q> * <nat:282> $ will be even elements of $ \mathbb{Z}^+ $ . This holds by reason that taking the product of an even positive integer with any element of $ \mathbb{N} $ must be even . This must be true from the knowledge the natural numbers $ <nat:102> $ , $ <nat:474> $ , $ <nat:184> $ , $ <nat:354> $ , $ <nat:494> $ , $ <nat:470> $ , $ <nat:382> $ , $ <nat:484> $ , $ <nat:390> $ , $ <nat:304> $ , plus $ <nat:282> $ will be by definition even integers . We know $ <nat:36> $ is obviously an even positive integer . It can be demonstrated that $ <var:H> \times <nat:304> + <var:J> \times <nat:354> + <nat:282> \times <var:q> + <var:S> \times <nat:470> + <nat:102> \times <var:X> + <var:j> \times <nat:382> + <nat:36> + <nat:484> \times <var:a> + <nat:390> \times <var:i> + <nat:474> \times <var:d> + <nat:494> \times <var:B> + <nat:184> \times <var:l> $ is even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:B> <var:X> <var:l> <var:d> <var:J> <var:j> <var:H> <var:q> <var:a> <var:i> <var:S> : nat , Nat . even ( <nat:102> * <var:X> + <nat:474> * <var:d> + <nat:184> * <var:l> + <nat:354> * <var:J> + <nat:494> * <var:B> + <nat:470> * <var:S> + <nat:382> * <var:j> + <nat:484> * <var:a> + <nat:390> * <var:i> + <nat:304> * <var:H> + <nat:282> * <var:q> + <nat:36> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:102> = true ) . { auto . } assert ( <genH> : Nat . even <nat:474> = true ) . { auto . } assert ( <genH> : Nat . even <nat:184> = true ) . { auto . } assert ( <genH> : Nat . even <nat:354> = true ) . { auto . } assert ( <genH> : Nat . even <nat:494> = true ) . { auto . } assert ( <genH> : Nat . even <nat:470> = true ) . { auto . } assert ( <genH> : Nat . even <nat:382> = true ) . { auto . } assert ( <genH> : Nat . even <nat:484> = true ) . { auto . } assert ( <genH> : Nat . even <nat:390> = true ) . { auto . } assert ( <genH> : Nat . even <nat:304> = true ) . { auto . } assert ( <genH> : Nat . even <nat:282> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:102> * <var:X> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:474> * <var:d> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:184> * <var:l> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:354> * <var:J> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:494> * <var:B> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:470> * <var:S> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:382> * <var:j> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:484> * <var:a> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:390> * <var:i> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:304> * <var:H> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:282> * <var:q> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:36> = true ) . { auto . } repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 