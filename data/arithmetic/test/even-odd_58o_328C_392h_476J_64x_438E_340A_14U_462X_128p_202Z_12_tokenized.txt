\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:12> + <var:o> <nat:58> + <var:C> <nat:328> + <nat:392> <var:h> + <var:J> <nat:476> + <nat:64> <var:x> + <nat:438> <var:E> + <nat:340> <var:A> + <nat:14> <var:U> + <var:X> <nat:462> + <nat:128> <var:p> + <var:Z> <nat:202> $ will be even for positive integers $ <var:J> $ , $ <var:A> $ , $ <var:X> $ , $ <var:Z> $ , $ <var:U> $ , $ <var:o> $ , $ <var:p> $ , $ <var:E> $ , $ <var:C> $ , $ <var:h> $ , and $ <var:x> $ . \end{theorem} \begin{proof} See the summation between even elements of $ \mathbb{N} $ with an even element of $ \mathbb{Z}^+ $ is even . Remember that $ <nat:12> $ is known to be an even natural number . We know that the integers $ <nat:58> $ , $ <nat:328> $ , $ <nat:392> $ , $ <nat:476> $ , $ <nat:64> $ , $ <nat:438> $ , $ <nat:340> $ , $ <nat:14> $ , $ <nat:462> $ , $ <nat:128> $ , and $ <nat:202> $ must be even . Consequently , the products $ <var:o> * <nat:58> $ , $ <nat:328> * <var:C> $ , $ <nat:392> * <var:h> $ , $ <nat:476> * <var:J> $ , $ <var:x> * <nat:64> $ , $ <var:E> * <nat:438> $ , $ <nat:340> * <var:A> $ , $ <var:U> * <nat:14> $ , $ <nat:462> * <var:X> $ , $ <nat:128> * <var:p> $ , and moreover $ <var:Z> * <nat:202> $ is guaranteed to be even additionally . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:J> <var:A> <var:X> <var:Z> <var:U> <var:o> <var:p> <var:E> <var:C> <var:h> <var:x> : nat , Nat . even ( <nat:58> * <var:o> + <nat:328> * <var:C> + <nat:392> * <var:h> + <nat:476> * <var:J> + <nat:64> * <var:x> + <nat:438> * <var:E> + <nat:340> * <var:A> + <nat:14> * <var:U> + <nat:462> * <var:X> + <nat:128> * <var:p> + <nat:202> * <var:Z> + <nat:12> ) = true . Proof . intros . repeat rewrite Nat . even_add . assert ( <genH> : Nat . even <nat:12> = true ) . { auto . } assert ( <genH> : Nat . even <nat:58> = true ) . { auto . } assert ( <genH> : Nat . even <nat:328> = true ) . { auto . } assert ( <genH> : Nat . even <nat:392> = true ) . { auto . } assert ( <genH> : Nat . even <nat:476> = true ) . { auto . } assert ( <genH> : Nat . even <nat:64> = true ) . { auto . } assert ( <genH> : Nat . even <nat:438> = true ) . { auto . } assert ( <genH> : Nat . even <nat:340> = true ) . { auto . } assert ( <genH> : Nat . even <nat:14> = true ) . { auto . } assert ( <genH> : Nat . even <nat:462> = true ) . { auto . } assert ( <genH> : Nat . even <nat:128> = true ) . { auto . } assert ( <genH> : Nat . even <nat:202> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:58> * <var:o> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:328> * <var:C> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:392> * <var:h> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:476> * <var:J> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:64> * <var:x> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:438> * <var:E> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:340> * <var:A> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:14> * <var:U> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:462> * <var:X> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:128> * <var:p> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:202> * <var:Z> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 