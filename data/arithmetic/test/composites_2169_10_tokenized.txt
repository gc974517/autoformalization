\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Allow $ <var:G> $ , $ <var:F> $ , $ <var:n> $ , $ <var:X> $ , $ <var:E> $ , $ <var:q> $ , $ <var:Q> $ , $ <var:H> $ , $ <var:S> $ , $ <var:C> $ are numbers more than or equal to <nat:2> . Define that $ <var:s> \in \mathbb{Z}^+ $ will be considered as a <def:ten-composite> natural number if $ <var:Q> \times <var:n> \times <var:S> \times <var:H> \times <var:E> \times <var:C> \times <var:q> \times <var:G> \times <var:F> \times <var:X> = <var:s> $ . For this reason $ <var:s> = <nat:415134720> $ is <def:ten-composite> . \end{theorem} \begin{proof} Notice that $ <var:n> \cdot <var:Q> \cdot <var:E> \cdot <var:F> \cdot <var:H> \cdot <var:G> \cdot <var:S> \cdot <var:X> \cdot <var:q> \cdot <var:C> = <nat:415134720> $ shows $ <var:C> = <nat:10> $ , $ <var:H> = <nat:11> $ , $ <var:X> = <nat:9> $ , $ <var:G> = <nat:2> $ , $ <var:F> = <nat:13> $ , $ <var:Q> = <nat:6> $ , $ <var:E> = <nat:4> $ , $ <var:q> = <nat:12> $ , $ <var:S> = <nat:8> $ , $ <var:n> = <nat:7> $ . Furthermore note that $ <nat:6> $ , $ <nat:10> $ , $ <nat:12> $ , $ <nat:2> $ , $ <nat:13> $ , $ <nat:11> $ , $ <nat:7> $ , $ <nat:8> $ , $ <nat:9> $ , and $ <nat:4> $ are greater than or equivalent to <nat:2> . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:ten-composite> ( <var:s> : nat ) := exists <var:G> <var:F> <var:n> <var:X> <var:E> <var:q> <var:Q> <var:H> <var:S> <var:C> : nat , ( <var:G> >= <nat:2> ) /\ ( <var:F> >= <nat:2> ) /\ ( <var:n> >= <nat:2> ) /\ ( <var:X> >= <nat:2> ) /\ ( <var:E> >= <nat:2> ) /\ ( <var:q> >= <nat:2> ) /\ ( <var:Q> >= <nat:2> ) /\ ( <var:H> >= <nat:2> ) /\ ( <var:S> >= <nat:2> ) /\ ( <var:C> >= <nat:2> ) /\ ( <var:Q> * <var:n> * <var:S> * <var:H> * <var:E> * <var:C> * <var:q> * <var:G> * <var:F> * <var:X> = <var:s> ) . Theorem <genP:1> : <def:ten-composite> <nat:415134720> . Proof . unfold <def:ten-composite> . exists <nat:2> . exists <nat:13> . exists <nat:7> . exists <nat:9> . exists <nat:4> . exists <nat:12> . exists <nat:6> . exists <nat:11> . exists <nat:8> . exists <nat:10> . assert ( <genH> : <nat:6> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:10> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:12> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:2> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:13> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:11> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:7> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:8> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:9> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:4> >= <nat:2> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 