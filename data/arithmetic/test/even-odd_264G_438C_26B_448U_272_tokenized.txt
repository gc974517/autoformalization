\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Taking any unknowns $ <var:C> $ , $ <var:B> $ , $ <var:G> $ , and $ <var:U> $ the expression $ <nat:264> <var:G> + <nat:272> + <nat:26> <var:B> + <var:C> <nat:438> + <var:U> <nat:448> $ must be even . \end{theorem} \begin{proof} Take note that the expression $ <var:B> \cdot <nat:26> + <var:U> \cdot <nat:448> + <var:C> \cdot <nat:438> + <nat:272> + <var:G> \cdot <nat:264> $ is trivially even from the knowledge the summation $ <var:G> * <nat:264> + <nat:438> * <var:C> + <var:B> * <nat:26> + <var:U> * <nat:448> $ is known to be even . On top of this , the positive integers $ <nat:264> $ , $ <nat:438> $ , $ <nat:26> $ , plus $ <nat:448> $ are guaranteed to be even . As a consequence , the products $ <var:G> \cdot <nat:264> $ , $ <nat:438> \cdot <var:C> $ , $ <var:B> \cdot <nat:26> $ , plus $ <nat:448> \cdot <var:U> $ must be even additionally . As a consequence that the adding of even numbers in $ \mathbb{N} $ and an even number in $ \mathbb{N} $ is even , this main result holds . Remember that the summation of even whole numbers successively and an even element of $ \mathbb{Z}^+ $ must be an even whole number . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:C> <var:B> <var:G> <var:U> : nat , Nat . even ( <nat:264> * <var:G> + <nat:26> * <var:B> + <nat:438> * <var:C> + <nat:448> * <var:U> + <nat:272> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:264> = true ) . { auto . } assert ( <genH> : Nat . even <nat:438> = true ) . { auto . } assert ( <genH> : Nat . even <nat:26> = true ) . { auto . } assert ( <genH> : Nat . even <nat:448> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:264> * <var:G> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:438> * <var:C> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:26> * <var:B> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:448> * <var:U> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:264> * <var:G> + <nat:26> * <var:B> + <nat:438> * <var:C> + <nat:448> * <var:U> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . even_add . rewrite <genH> . auto . Qed . 