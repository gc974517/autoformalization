\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:488> \cdot <var:X> + <nat:355> + <nat:70> \cdot <var:B> + <var:Q> \cdot <nat:400> + <nat:304> \cdot <var:L> + <nat:176> \cdot <var:q> $ will be odd . \end{theorem} \begin{proof} $ <nat:355> + <nat:176> * <var:q> + <nat:70> * <var:B> + <var:Q> * <nat:400> + <var:L> * <nat:304> + <var:X> * <nat:488> $ is known to be odd because the expression $ <nat:304> \cdot <var:L> + <var:q> \cdot <nat:176> + <var:B> \cdot <nat:70> + <nat:488> \cdot <var:X> + <var:Q> \cdot <nat:400> $ is known as even . The pairs $ <var:X> <nat:488> $ in addition to $ <nat:400> <var:Q> $ are clearly even . Adding on , the product $ <nat:176> <var:q> $ is known to be an even natural number . This claim holds since taking the product between an even whole number and some natural number will be by its very nature an even positive integer . On top of this , the term $ <nat:304> <var:L> $ is known as an even number in $ \mathbb{Z}^+ $ . This is true because the product between an even natural number and a number in $ \mathbb{Z}^+ $ will be even . Take note the pair $ <var:B> <nat:70> $ is known to be even . This holds by reason that the multiplication of an even number in $ \mathbb{N} $ and some positive integer must be even . Our result must be true by reason that multiplying of even elements of $ \mathbb{Z}^+ $ and any whole number is guaranteed to be even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:X> <var:B> <var:Q> <var:L> <var:q> : nat , Nat . odd ( <nat:488> * <var:X> + <nat:70> * <var:B> + <nat:400> * <var:Q> + <nat:304> * <var:L> + <nat:176> * <var:q> + <nat:355> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:488> * <var:X> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:400> * <var:Q> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:176> * <var:q> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:304> * <var:L> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:70> * <var:B> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:488> * <var:X> + <nat:70> * <var:B> + <nat:400> * <var:Q> + <nat:304> * <var:L> + <nat:176> * <var:q> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . auto . Qed . 