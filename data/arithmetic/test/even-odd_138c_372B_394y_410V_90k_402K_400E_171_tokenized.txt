\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:c> * <nat:138> + <nat:372> * <var:B> + <nat:394> * <var:y> + <nat:410> * <var:V> + <nat:171> + <nat:90> * <var:k> + <var:K> * <nat:402> + <var:E> * <nat:400> $ must be odd . \end{theorem} \begin{proof} The summation between even naturals successively and an odd number in $ \mathbb{N} $ is odd . Recall $ <nat:171> $ is known to be an odd element of $ \mathbb{N} $ . See that the term $ <var:E> <nat:400> $ is obviously even . Take note that the pairs $ <nat:394> <var:y> $ , $ <nat:138> <var:c> $ , and likewise $ <var:k> <nat:90> $ are guaranteed to be even whole numbers . This claim must be true because the product between an even number in $ \mathbb{Z}^+ $ with a natural is even . The term $ <nat:410> <var:V> $ is known to be even . See the pair $ <var:B> <nat:372> $ is obviously even because the multiplication between an even number with some number is guaranteed to be even . Likewise , notice the product $ <var:K> <nat:402> $ is even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:c> <var:B> <var:y> <var:V> <var:k> <var:K> <var:E> : nat , Nat . odd ( <nat:138> * <var:c> + <nat:372> * <var:B> + <nat:394> * <var:y> + <nat:410> * <var:V> + <nat:90> * <var:k> + <nat:402> * <var:K> + <nat:400> * <var:E> + <nat:171> ) = true . Proof . intros . rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . assert ( <genH> : Nat . odd <nat:171> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:400> * <var:E> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:394> * <var:y> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:138> * <var:c> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:90> * <var:k> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:410> * <var:V> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:372> * <var:B> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:402> * <var:K> ) = true ) . { rewrite Nat . even_mul . auto . } rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 