\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:2> \times <var:f> + <nat:454> \times <var:p> + <var:Y> \times <nat:148> + <nat:88> \times <var:M> + <nat:256> \times <var:m> + <nat:38> \times <var:n> + <nat:78> \times <var:e> + <nat:380> \times <var:J> + <nat:13> $ is odd given all positive terms $ <var:p> $ , $ <var:M> $ , $ <var:e> $ , $ <var:J> $ , $ <var:f> $ , $ <var:m> $ , $ <var:n> $ , and $ <var:Y> $ . \end{theorem} \begin{proof} The positive integer $ <nat:454> $ is clearly even Recall that the leading terms $ <nat:78> $ , $ <nat:148> $ , and also $ <nat:380> $ are known to be even Furthermore , remember the natural numbers $ <nat:38> $ and also $ <nat:256> $ are clearly even numbers Likewise , the whole number $ <nat:88> $ is trivially even The whole number $ <nat:2> $ is known as even Because multiplying between an even element of $ \mathbb{Z}^+ $ with an arbitrary natural number is even , the proposition is proven . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:p> <var:M> <var:e> <var:J> <var:f> <var:m> <var:n> <var:Y> : nat , Nat . odd ( <nat:2> * <var:f> + <nat:454> * <var:p> + <nat:148> * <var:Y> + <nat:88> * <var:M> + <nat:256> * <var:m> + <nat:38> * <var:n> + <nat:78> * <var:e> + <nat:380> * <var:J> + <nat:13> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:454> = true ) . { auto . } assert ( <genH> : Nat . even <nat:78> = true ) . { auto . } assert ( <genH> : Nat . even <nat:148> = true ) . { auto . } assert ( <genH> : Nat . even <nat:380> = true ) . { auto . } assert ( <genH> : Nat . even <nat:38> = true ) . { auto . } assert ( <genH> : Nat . even <nat:256> = true ) . { auto . } assert ( <genH> : Nat . even <nat:88> = true ) . { auto . } assert ( <genH> : Nat . even <nat:2> = true ) . { auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . repeat rewrite Nat . even_mul . rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 