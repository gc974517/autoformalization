\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:54> \times <var:F> + <nat:226> \times <var:u> + <var:V> \times <nat:116> + <var:h> \times <nat:8> + <var:L> \times <nat:408> + <var:O> \times <nat:288> + <nat:200> \times <var:c> + <nat:411> + <nat:254> \times <var:r> + <var:t> \times <nat:426> $ will be odd . \end{theorem} \begin{proof} We know the pairs $ <nat:116> * <var:V> $ , $ <nat:200> * <var:c> $ , $ <nat:226> * <var:u> $ , $ <var:F> * <nat:54> $ , $ <var:L> * <nat:408> $ , $ <nat:8> * <var:h> $ , plus $ <var:t> * <nat:426> $ must be even . This must be true since multiplying of an even whole number with some element of $ \mathbb{Z}^+ $ is guaranteed to be an even natural number . Take note the pair $ <var:O> * <nat:288> $ is obviously an even element of $ \mathbb{Z}^+ $ as a consequence that the multiplication between an even number in $ \mathbb{N} $ with any integer is guaranteed to be itself an even number in $ \mathbb{Z}^+ $ . $ <nat:254> * <var:r> $ is known to be even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:F> <var:u> <var:V> <var:h> <var:L> <var:O> <var:c> <var:r> <var:t> : nat , Nat . odd ( <nat:54> * <var:F> + <nat:226> * <var:u> + <nat:116> * <var:V> + <nat:8> * <var:h> + <nat:408> * <var:L> + <nat:288> * <var:O> + <nat:200> * <var:c> + <nat:254> * <var:r> + <nat:426> * <var:t> + <nat:411> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:116> * <var:V> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:200> * <var:c> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:226> * <var:u> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:54> * <var:F> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:408> * <var:L> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:8> * <var:h> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:426> * <var:t> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:288> * <var:O> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:254> * <var:r> ) = true ) . { rewrite Nat . even_mul . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 