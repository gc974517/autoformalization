\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Given every whole numbers $ <var:A> $ , $ <var:G> $ , $ <var:k> $ , $ <var:B> $ , $ <var:o> $ , $ <var:S> $ , $ <var:J> $ , $ <var:T> $ , $ <var:y> $ , and $ <var:a> $ $ <var:k> <nat:76> + <var:B> <nat:292> + <var:G> <nat:62> + <var:y> <nat:56> + <var:o> <nat:498> + <nat:148> <var:J> + <nat:478> <var:A> + <var:T> <nat:338> + <var:a> <nat:302> + <nat:162> + <var:S> <nat:332> $ must be even . \end{theorem} \begin{proof} It can be proven that $ <nat:498> <var:o> + <nat:162> + <nat:56> <var:y> + <var:A> <nat:478> + <var:S> <nat:332> + <nat:62> <var:G> + <nat:76> <var:k> + <var:T> <nat:338> + <nat:292> <var:B> + <nat:302> <var:a> + <nat:148> <var:J> $ is guaranteed to be even . The products $ <var:T> \cdot <nat:338> $ , $ <nat:148> \cdot <var:J> $ , $ <nat:302> \cdot <var:a> $ , $ <nat:332> \cdot <var:S> $ , plus $ <var:y> \cdot <nat:56> $ are known as even elements of $ \mathbb{N} $ since the positive integers $ <nat:338> $ , $ <nat:148> $ , $ <nat:302> $ , $ <nat:332> $ , and also $ <nat:56> $ are clearly even . Remember the products $ <nat:478> \cdot <var:A> $ , $ <var:o> \cdot <nat:498> $ , and $ <nat:62> \cdot <var:G> $ are guaranteed to be even since the product of an even positive integer with some element of $ \mathbb{Z}^+ $ must be even , which is true as a consequence that the whole numbers $ <nat:478> $ , $ <nat:498> $ , additionally $ <nat:62> $ are obviously even . $ <nat:76> \cdot <var:k> $ is trivially an even number in $ \mathbb{N} $ since the integer $ <nat:76> $ is guaranteed to be an even whole number . In addition to this , the whole number $ <nat:292> $ is guaranteed to be even . Thus , the pair $ <var:B> \cdot <nat:292> $ is guaranteed to be even at the same time . Notice the adding between even numbers successively is an even natural . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:A> <var:G> <var:k> <var:B> <var:o> <var:S> <var:J> <var:T> <var:y> <var:a> : nat , Nat . even ( <nat:76> * <var:k> + <nat:292> * <var:B> + <nat:62> * <var:G> + <nat:56> * <var:y> + <nat:498> * <var:o> + <nat:148> * <var:J> + <nat:478> * <var:A> + <nat:338> * <var:T> + <nat:302> * <var:a> + <nat:332> * <var:S> + <nat:162> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:338> = true ) . { auto . } assert ( <genH> : Nat . even <nat:148> = true ) . { auto . } assert ( <genH> : Nat . even <nat:302> = true ) . { auto . } assert ( <genH> : Nat . even <nat:332> = true ) . { auto . } assert ( <genH> : Nat . even <nat:56> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:338> * <var:T> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:148> * <var:J> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:302> * <var:a> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:332> * <var:S> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:56> * <var:y> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:478> = true ) . { auto . } assert ( <genH> : Nat . even <nat:498> = true ) . { auto . } assert ( <genH> : Nat . even <nat:62> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:478> * <var:A> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:498> * <var:o> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:62> * <var:G> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:76> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:76> * <var:k> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:292> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:292> * <var:B> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 