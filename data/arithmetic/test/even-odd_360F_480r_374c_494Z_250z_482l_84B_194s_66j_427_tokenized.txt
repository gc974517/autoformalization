\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Using some positive integers $ <var:s> $ , $ <var:j> $ , $ <var:B> $ , $ <var:l> $ , $ <var:F> $ , $ <var:z> $ , $ <var:c> $ , $ <var:Z> $ , and $ <var:r> $ the expression $ <nat:494> * <var:Z> + <var:B> * <nat:84> + <var:s> * <nat:194> + <nat:66> * <var:j> + <nat:374> * <var:c> + <nat:427> + <var:r> * <nat:480> + <var:F> * <nat:360> + <var:z> * <nat:250> + <nat:482> * <var:l> $ must be odd . \end{theorem} \begin{proof} We know that the integers $ <nat:374> $ , $ <nat:360> $ , and $ <nat:84> $ must be even . Accordingly , the products $ <nat:374> \cdot <var:c> $ , $ <var:F> \cdot <nat:360> $ , and also $ <var:B> \cdot <nat:84> $ is even additionally . Further , the products $ <var:Z> \cdot <nat:494> $ plus $ <nat:250> \cdot <var:z> $ will be even elements of $ \mathbb{Z}^+ $ from the knowledge taking the product between an even natural number with an arbitrary natural must be even additionally the integers $ <nat:494> $ and likewise $ <nat:250> $ must be even . The numbers $ <nat:194> $ in addition to $ <nat:66> $ are clearly even . As a consequence , the pairs $ <nat:194> \cdot <var:s> $ and $ <var:j> \cdot <nat:66> $ must be even in addition . We know that the term $ <var:r> \cdot <nat:480> $ is even from the knowledge the coefficient $ <nat:480> $ is obviously even . In addition to this , the leading term $ <nat:482> $ is known to be an even natural . Then , the product $ <nat:482> \cdot <var:l> $ is guaranteed to be even as well . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:s> <var:j> <var:B> <var:l> <var:F> <var:z> <var:c> <var:Z> <var:r> : nat , Nat . odd ( <nat:494> * <var:Z> + <nat:84> * <var:B> + <nat:194> * <var:s> + <nat:66> * <var:j> + <nat:374> * <var:c> + <nat:480> * <var:r> + <nat:360> * <var:F> + <nat:250> * <var:z> + <nat:482> * <var:l> + <nat:427> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:374> = true ) . { auto . } assert ( <genH> : Nat . even <nat:360> = true ) . { auto . } assert ( <genH> : Nat . even <nat:84> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:374> * <var:c> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:360> * <var:F> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:84> * <var:B> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:494> = true ) . { auto . } assert ( <genH> : Nat . even <nat:250> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:494> * <var:Z> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:250> * <var:z> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:194> = true ) . { auto . } assert ( <genH> : Nat . even <nat:66> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:194> * <var:s> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:66> * <var:j> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:480> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:480> * <var:r> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:482> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:482> * <var:l> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 