\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:305> + <var:Y> * <nat:346> + <var:F> * <nat:460> + <var:H> * <nat:148> + <var:Z> * <nat:76> + <var:N> * <nat:392> + <var:G> * <nat:300> + <nat:98> * <var:L> + <nat:260> * <var:n> + <nat:156> * <var:V> + <var:y> * <nat:286> + <var:t> * <nat:24> $ is odd . \end{theorem} \begin{proof} The whole numbers $ <nat:300> $ , $ <nat:76> $ , $ <nat:148> $ , $ <nat:460> $ , $ <nat:156> $ , and also $ <nat:286> $ are guaranteed to be even natural numbers Notice the whole numbers $ <nat:346> $ and $ <nat:24> $ must be even naturals On top of this , notice that the positive integer $ <nat:260> $ is obviously an even positive integer On top of this , the natural number $ <nat:392> $ is known as an even integer The positive integer $ <nat:98> $ is an even natural \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:Y> <var:F> <var:H> <var:Z> <var:N> <var:G> <var:L> <var:n> <var:V> <var:y> <var:t> : nat , Nat . odd ( <nat:346> * <var:Y> + <nat:460> * <var:F> + <nat:148> * <var:H> + <nat:76> * <var:Z> + <nat:392> * <var:N> + <nat:300> * <var:G> + <nat:98> * <var:L> + <nat:260> * <var:n> + <nat:156> * <var:V> + <nat:286> * <var:y> + <nat:24> * <var:t> + <nat:305> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:300> = true ) . { auto . } assert ( <genH> : Nat . even <nat:76> = true ) . { auto . } assert ( <genH> : Nat . even <nat:148> = true ) . { auto . } assert ( <genH> : Nat . even <nat:460> = true ) . { auto . } assert ( <genH> : Nat . even <nat:156> = true ) . { auto . } assert ( <genH> : Nat . even <nat:286> = true ) . { auto . } assert ( <genH> : Nat . even <nat:346> = true ) . { auto . } assert ( <genH> : Nat . even <nat:24> = true ) . { auto . } assert ( <genH> : Nat . even <nat:260> = true ) . { auto . } assert ( <genH> : Nat . even <nat:392> = true ) . { auto . } assert ( <genH> : Nat . even <nat:98> = true ) . { auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . repeat rewrite Nat . even_mul . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 