\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Allow $ <var:m> $ , $ <var:O> $ , $ <var:z> $ , $ <var:D> $ , $ <var:H> $ , $ <var:i> $ , $ <var:w> $ , $ <var:h> $ , $ <var:U> $ are numbers . Denote that some number $ <var:t> $ will be considered a <def:nine-composite> positive integer when $ <var:U> \times <var:D> \times <var:H> \times <var:z> \times <var:i> \times <var:w> \times <var:m> \times <var:O> \times <var:h> = <var:t> $ as well as unique terms are larger than <nat:1> . Therefore $ <nat:9609600> = <var:t> $ is <def:nine-composite> . \end{theorem} \begin{proof} Remember that a <def:nine-composite> whole number is the multiplication of numbers $ <var:h> $ , $ <var:m> $ , $ <var:U> $ , $ <var:D> $ , $ <var:w> $ , $ <var:i> $ , $ <var:H> $ , $ <var:z> $ and $ <var:O> $ larger than <nat:1> . Allow $ <var:m> = <nat:7> $ , $ <var:h> = <nat:3> $ , $ <var:H> = <nat:13> $ , $ <var:i> = <nat:11> $ , $ <var:O> = <nat:8> $ , $ <var:U> = <nat:4> $ , $ <var:D> = <nat:5> $ , $ <var:w> = <nat:2> $ and $ <var:z> = <nat:10> $ . Observe that $ <var:H> = <nat:13> $ , $ <var:O> = <nat:8> $ , $ <var:U> = <nat:4> $ , $ <var:h> = <nat:3> $ , $ <var:z> = <nat:10> $ , $ <var:m> = <nat:7> $ , $ <var:w> = <nat:2> $ , $ <var:i> = <nat:11> $ , $ <var:D> = <nat:5> > <nat:1> $ . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:nine-composite> ( <var:t> : nat ) := exists <var:m> <var:O> <var:z> <var:D> <var:H> <var:i> <var:w> <var:h> <var:U> : nat , ( <var:U> * <var:D> * <var:H> * <var:z> * <var:i> * <var:w> * <var:m> * <var:O> * <var:h> = <var:t> ) /\ ( <var:m> > <nat:1> ) /\ ( <var:O> > <nat:1> ) /\ ( <var:z> > <nat:1> ) /\ ( <var:D> > <nat:1> ) /\ ( <var:H> > <nat:1> ) /\ ( <var:i> > <nat:1> ) /\ ( <var:w> > <nat:1> ) /\ ( <var:h> > <nat:1> ) /\ ( <var:U> > <nat:1> ) . Theorem <genP:1> : <def:nine-composite> <nat:9609600> . Proof . unfold <def:nine-composite> . exists <nat:7> . exists <nat:8> . exists <nat:10> . exists <nat:5> . exists <nat:13> . exists <nat:11> . exists <nat:2> . exists <nat:3> . exists <nat:4> . assert ( <genH> : <nat:13> > <nat:1> ) . { lia . } assert ( <genH> : <nat:8> > <nat:1> ) . { lia . } assert ( <genH> : <nat:4> > <nat:1> ) . { lia . } assert ( <genH> : <nat:3> > <nat:1> ) . { lia . } assert ( <genH> : <nat:10> > <nat:1> ) . { lia . } assert ( <genH> : <nat:7> > <nat:1> ) . { lia . } assert ( <genH> : <nat:2> > <nat:1> ) . { lia . } assert ( <genH> : <nat:11> > <nat:1> ) . { lia . } assert ( <genH> : <nat:5> > <nat:1> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 