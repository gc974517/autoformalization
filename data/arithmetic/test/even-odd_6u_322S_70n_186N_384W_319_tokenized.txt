\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:u> * <nat:6> + <var:S> * <nat:322> + <nat:70> * <var:n> + <var:N> * <nat:186> + <nat:384> * <var:W> + <nat:319> $ is odd assuming all natural terms $ <var:N> $ , $ <var:W> $ , $ <var:u> $ , $ <var:S> $ , and $ <var:n> $ . \end{theorem} \begin{proof} In addition to this , the coefficients $ <nat:6> $ , $ <nat:322> $ , $ <nat:70> $ , $ <nat:186> $ , $ <nat:384> $ , are known to be even numbers in $ \mathbb{N} $ . Thus , the products $ <nat:6> * <var:u> $ , $ <var:S> * <nat:322> $ , $ <nat:70> * <var:n> $ , $ <nat:186> * <var:N> $ , $ <nat:384> * <var:W> $ , will be even as well . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:N> <var:W> <var:u> <var:S> <var:n> : nat , Nat . odd ( <nat:6> * <var:u> + <nat:322> * <var:S> + <nat:70> * <var:n> + <nat:186> * <var:N> + <nat:384> * <var:W> + <nat:319> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:6> = true ) . { auto . } assert ( <genH> : Nat . even <nat:322> = true ) . { auto . } assert ( <genH> : Nat . even <nat:70> = true ) . { auto . } assert ( <genH> : Nat . even <nat:186> = true ) . { auto . } assert ( <genH> : Nat . even <nat:384> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:6> * <var:u> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:322> * <var:S> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:70> * <var:n> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:186> * <var:N> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:384> * <var:W> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 