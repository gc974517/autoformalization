\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:J> \times <nat:286> + <nat:309> + <nat:54> \times <var:R> + <nat:32> \times <var:o> + <var:P> \times <nat:442> + <nat:496> \times <var:X> + <nat:396> \times <var:p> + <var:H> \times <nat:154> + <nat:116> \times <var:b> + <var:h> \times <nat:290> + <nat:476> \times <var:w> $ is guaranteed to be odd assuming unknowns $ <var:w> $ , $ <var:h> $ , $ <var:P> $ , $ <var:R> $ , $ <var:X> $ , $ <var:o> $ , $ <var:H> $ , $ <var:J> $ , $ <var:p> $ , and $ <var:b> $ . \end{theorem} \begin{proof} We show this theorem holds . This main result is true from the knowledge $ <var:H> \cdot <nat:154> + <var:J> \cdot <nat:286> + <nat:116> \cdot <var:b> + <var:h> \cdot <nat:290> + <nat:496> \cdot <var:X> + <var:R> \cdot <nat:54> + <var:p> \cdot <nat:396> + <nat:442> \cdot <var:P> + <nat:32> \cdot <var:o> + <var:w> \cdot <nat:476> $ is guaranteed to be even . In addition , take note that the natural numbers $ <nat:154> $ , $ <nat:286> $ , $ <nat:116> $ , $ <nat:290> $ , $ <nat:496> $ , $ <nat:54> $ , $ <nat:396> $ , $ <nat:442> $ , $ <nat:32> $ , and $ <nat:476> $ are obviously even . In consequence , the products $ <nat:154> \times <var:H> $ , $ <nat:286> \times <var:J> $ , $ <var:b> \times <nat:116> $ , $ <nat:290> \times <var:h> $ , $ <nat:496> \times <var:X> $ , $ <nat:54> \times <var:R> $ , $ <nat:396> \times <var:p> $ , $ <var:P> \times <nat:442> $ , $ <nat:32> \times <var:o> $ , plus $ <nat:476> \times <var:w> $ is even at the same time . From the fact the adding between even integers with even integers will be even , the expression $ <var:p> <nat:396> + <nat:496> <var:X> + <var:H> <nat:154> + <nat:290> <var:h> + <var:P> <nat:442> + <var:w> <nat:476> + <nat:32> <var:o> + <var:b> <nat:116> + <nat:286> <var:J> + <var:R> <nat:54> $ is guaranteed to be trivially even . The summation between an even integer with an odd whole number is guaranteed to be odd . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:w> <var:h> <var:P> <var:R> <var:X> <var:o> <var:H> <var:J> <var:p> <var:b> : nat , Nat . odd ( <nat:286> * <var:J> + <nat:54> * <var:R> + <nat:32> * <var:o> + <nat:442> * <var:P> + <nat:496> * <var:X> + <nat:396> * <var:p> + <nat:154> * <var:H> + <nat:116> * <var:b> + <nat:290> * <var:h> + <nat:476> * <var:w> + <nat:309> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:154> = true ) . { auto . } assert ( <genH> : Nat . even <nat:286> = true ) . { auto . } assert ( <genH> : Nat . even <nat:116> = true ) . { auto . } assert ( <genH> : Nat . even <nat:290> = true ) . { auto . } assert ( <genH> : Nat . even <nat:496> = true ) . { auto . } assert ( <genH> : Nat . even <nat:54> = true ) . { auto . } assert ( <genH> : Nat . even <nat:396> = true ) . { auto . } assert ( <genH> : Nat . even <nat:442> = true ) . { auto . } assert ( <genH> : Nat . even <nat:32> = true ) . { auto . } assert ( <genH> : Nat . even <nat:476> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:154> * <var:H> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:286> * <var:J> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:116> * <var:b> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:290> * <var:h> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:496> * <var:X> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:54> * <var:R> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:396> * <var:p> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:442> * <var:P> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:32> * <var:o> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:476> * <var:w> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:286> * <var:J> + <nat:54> * <var:R> + <nat:32> * <var:o> + <nat:442> * <var:P> + <nat:496> * <var:X> + <nat:396> * <var:p> + <nat:154> * <var:H> + <nat:116> * <var:b> + <nat:290> * <var:h> + <nat:476> * <var:w> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . auto . Qed . 