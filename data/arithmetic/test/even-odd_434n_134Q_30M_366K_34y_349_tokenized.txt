\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:n> \cdot <nat:434> + <nat:366> \cdot <var:K> + <var:Q> \cdot <nat:134> + <nat:349> + <nat:34> \cdot <var:y> + <nat:30> \cdot <var:M> $ will be odd given all terms $ <var:Q> $ , $ <var:M> $ , $ <var:K> $ , $ <var:n> $ , and $ <var:y> $ . \end{theorem} \begin{proof} We work with the assumption the understanding that the expression $ <nat:434> \times <var:n> + <nat:134> \times <var:Q> + <nat:30> \times <var:M> + <nat:366> \times <var:K> + <nat:34> \times <var:y> $ is clearly even , since the multiplication of even numbers in $ \mathbb{N} $ will be even . Remember that the positive integers $ <nat:134> $ in addition to $ <nat:30> $ are obviously even In addition to this , the coefficient $ <nat:366> $ is clearly an even number in $ \mathbb{Z}^+ $ Observe that the natural number $ <nat:434> $ is obviously even In addition to this , take note that the number $ <nat:34> $ is known to be even See $ <nat:349> $ is guaranteed to be odd . The summation of an even number in $ \mathbb{Z}^+ $ and an odd element of $ \mathbb{N} $ must be in itself an odd integer . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:Q> <var:M> <var:K> <var:n> <var:y> : nat , Nat . odd ( <nat:434> * <var:n> + <nat:366> * <var:K> + <nat:134> * <var:Q> + <nat:34> * <var:y> + <nat:30> * <var:M> + <nat:349> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:134> = true ) . { auto . } assert ( <genH> : Nat . even <nat:30> = true ) . { auto . } assert ( <genH> : Nat . even <nat:366> = true ) . { auto . } assert ( <genH> : Nat . even <nat:434> = true ) . { auto . } assert ( <genH> : Nat . even <nat:34> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:434> * <var:n> + <nat:366> * <var:K> + <nat:134> * <var:Q> + <nat:34> * <var:y> + <nat:30> * <var:M> ) = true ) . { repeat rewrite Nat . even_add . repeat rewrite Nat . even_mul . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } assert ( <genH> : Nat . odd <nat:349> = true ) . { auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . rewrite <genH> . auto . Qed . 