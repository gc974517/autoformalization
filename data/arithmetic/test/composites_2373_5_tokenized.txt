\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \newtheorem{definition}{Definition} \begin{document} \begin{definition} Allow $ <var:e> $ , $ <var:A> $ , $ <var:Q> $ , $ <var:P> $ , $ <var:w> $ are integers so that $ <var:A> $ , $ <var:P> $ , $ <var:e> $ , $ <var:Q> $ , $ <var:w> \geq <nat:2> $ . Let that $ <var:W> \in \mathbb{N} $ is named a <def:five-composite> natural number assuming $ <var:A> \times <var:w> \times <var:P> \times <var:e> \times <var:Q> = <var:W> $ . \end{definition} \begin{theorem} $ <nat:13104> = <var:W> $ is a <def:five-composite> positive integer . \end{theorem} \begin{proof} Remember that a <def:five-composite> natural number is the multiplication between natural numbers $ <var:P> $ , $ <var:Q> $ , $ <var:e> $ , $ <var:A> $ and $ <var:w> $ greater than or equivalent to <nat:2> . Notice $ <var:A> * <var:w> * <var:e> * <var:Q> * <var:P> = <nat:13104> $ suggests $ <var:e> = <nat:13> $ , $ <var:Q> = <nat:3> $ , $ <var:A> = <nat:8> $ , $ <var:w> = <nat:7> $ , and $ <var:P> = <nat:6> $ . In addition notice that $ <nat:8> $ , $ <nat:7> $ , $ <nat:13> $ , $ <nat:6> $ , $ <nat:3> \geq <nat:2> $ . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:five-composite> ( <var:W> : nat ) := exists <var:e> <var:A> <var:Q> <var:P> <var:w> : nat , ( <var:A> >= <nat:2> ) /\ ( <var:P> >= <nat:2> ) /\ ( <var:e> >= <nat:2> ) /\ ( <var:Q> >= <nat:2> ) /\ ( <var:w> >= <nat:2> ) /\ ( <var:A> * <var:w> * <var:P> * <var:e> * <var:Q> = <var:W> ) . Theorem <genP:1> : <def:five-composite> <nat:13104> . Proof . unfold <def:five-composite> . exists <nat:13> . exists <nat:8> . exists <nat:3> . exists <nat:6> . exists <nat:7> . assert ( <genH> : <nat:8> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:7> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:13> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:6> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:3> >= <nat:2> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 