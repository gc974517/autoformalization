\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \newtheorem{definition}{Definition} \begin{document} \begin{definition} Assuming we get $ <var:w> \times <var:x> \times <var:e> \times <var:T> \times <var:z> \times <var:O> \times <var:m> = <var:n> $ given some $ <var:n> $ as well as so that $ <var:e> $ , $ <var:z> $ , $ <var:m> $ , $ <var:O> $ , $ <var:x> $ , $ <var:w> $ , and $ <var:T> \geq <nat:2> $ using some whole numbers $ <var:w> $ , $ <var:O> $ , $ <var:e> $ , $ <var:m> $ , $ <var:T> $ , $ <var:z> $ , $ <var:x> $ , we assume that $ <var:n> $ is a <def:seven-composite> integer . \end{definition} \begin{theorem} $ <var:n> = <nat:617760> $ is a <def:seven-composite> whole number . \end{theorem} \begin{proof} We justify our claim is true for $ <nat:2> $ , $ <nat:8> $ , $ <nat:13> $ , $ <nat:5> $ , $ <nat:11> $ , $ <nat:9> $ and $ <nat:6> $ are larger than <nat:1> and $ <nat:617760> = <var:e> \times <var:O> \times <var:m> \times <var:z> \times <var:w> \times <var:T> \times <var:x> $ implies $ <var:O> = <nat:11> $ , $ <var:e> = <nat:6> $ , $ <var:x> = <nat:5> $ , $ <var:w> = <nat:8> $ , $ <var:z> = <nat:13> $ , $ <var:T> = <nat:9> $ and $ <var:m> = <nat:2> $ . Consequently , $ <nat:617760> = <var:x> * <var:m> * <var:T> * <var:e> * <var:z> * <var:w> * <var:O> $ and $ <var:O> $ , $ <var:m> $ , $ <var:x> $ , $ <var:T> $ , $ <var:z> $ , $ <var:w> $ , and $ <var:e> $ are greater than <nat:1> is proven . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:seven-composite> ( <var:n> : nat ) := exists <var:w> <var:O> <var:e> <var:m> <var:T> <var:z> <var:x> : nat , ( <var:w> * <var:x> * <var:e> * <var:T> * <var:z> * <var:O> * <var:m> = <var:n> ) /\ ( <var:e> >= <nat:2> ) /\ ( <var:z> >= <nat:2> ) /\ ( <var:m> >= <nat:2> ) /\ ( <var:O> >= <nat:2> ) /\ ( <var:x> >= <nat:2> ) /\ ( <var:w> >= <nat:2> ) /\ ( <var:T> >= <nat:2> ) . Theorem <genP:1> : <def:seven-composite> <nat:617760> . Proof . unfold <def:seven-composite> . assert ( <genH> : <nat:2> > <nat:1> ) . { lia . } assert ( <genH> : <nat:8> > <nat:1> ) . { lia . } assert ( <genH> : <nat:13> > <nat:1> ) . { lia . } assert ( <genH> : <nat:5> > <nat:1> ) . { lia . } assert ( <genH> : <nat:11> > <nat:1> ) . { lia . } assert ( <genH> : <nat:9> > <nat:1> ) . { lia . } assert ( <genH> : <nat:6> > <nat:1> ) . { lia . } exists <nat:8> . exists <nat:11> . exists <nat:6> . exists <nat:2> . exists <nat:9> . exists <nat:13> . exists <nat:5> . repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 