\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:270> \cdot <var:c> + <var:X> \cdot <nat:436> + <var:n> \cdot <nat:252> + <nat:120> \cdot <var:D> + <nat:152> \cdot <var:U> + <nat:194> \cdot <var:g> + <var:G> \cdot <nat:412> + <nat:144> \cdot <var:J> + <nat:466> \cdot <var:a> + <var:l> \cdot <nat:158> + <nat:499> $ must be odd assuming unknowns $ <var:l> $ , $ <var:G> $ , $ <var:a> $ , $ <var:U> $ , $ <var:J> $ , $ <var:g> $ , $ <var:D> $ , $ <var:c> $ , $ <var:n> $ , and $ <var:X> $ . \end{theorem} \begin{proof} The addition of an even whole number and an odd positive integer must be odd . For this reason , the sum $ <nat:144> <var:J> + <var:a> <nat:466> + <nat:194> <var:g> + <var:G> <nat:412> + <nat:270> <var:c> + <var:D> <nat:120> + <nat:436> <var:X> + <var:U> <nat:152> + <nat:499> + <nat:158> <var:l> + <var:n> <nat:252> $ must be odd . Observe $ <nat:499> $ is odd . The products $ <var:c> <nat:270> $ and also $ <var:g> <nat:194> $ are known as even . This is true since the multiplication between an even whole number and any element of $ \mathbb{Z}^+ $ must be even . Further , we know that the pairs $ <var:l> <nat:158> $ , $ <nat:120> <var:D> $ , $ <var:U> <nat:152> $ , $ <var:J> <nat:144> $ , $ <var:G> <nat:412> $ , $ <var:X> <nat:436> $ , in addition to $ <var:a> <nat:466> $ are clearly even . The term $ <nat:252> <var:n> $ is trivially an even element of $ \mathbb{Z}^+ $ . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:l> <var:G> <var:a> <var:U> <var:J> <var:g> <var:D> <var:c> <var:n> <var:X> : nat , Nat . odd ( <nat:270> * <var:c> + <nat:436> * <var:X> + <nat:252> * <var:n> + <nat:120> * <var:D> + <nat:152> * <var:U> + <nat:194> * <var:g> + <nat:412> * <var:G> + <nat:144> * <var:J> + <nat:466> * <var:a> + <nat:158> * <var:l> + <nat:499> ) = true . Proof . intros . rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . assert ( <genH> : Nat . odd <nat:499> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:270> * <var:c> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:194> * <var:g> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:158> * <var:l> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:120> * <var:D> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:152> * <var:U> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:144> * <var:J> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:412> * <var:G> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:436> * <var:X> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:466> * <var:a> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:252> * <var:n> ) = true ) . { rewrite Nat . even_mul . auto . } rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 