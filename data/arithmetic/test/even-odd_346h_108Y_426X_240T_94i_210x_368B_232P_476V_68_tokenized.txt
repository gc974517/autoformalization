\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Taking some $ <var:x> $ , $ <var:h> $ , $ <var:B> $ , $ <var:T> $ , $ <var:V> $ , $ <var:P> $ , $ <var:X> $ , $ <var:Y> $ , and $ <var:i> \in \mathbb{Z}^+ $ the formula $ <var:h> <nat:346> + <nat:240> <var:T> + <nat:94> <var:i> + <var:B> <nat:368> + <var:X> <nat:426> + <nat:108> <var:Y> + <var:V> <nat:476> + <nat:232> <var:P> + <nat:210> <var:x> + <nat:68> $ is even . \end{theorem} \begin{proof} It can be verified that that the sum $ <nat:476> \cdot <var:V> + <nat:232> \cdot <var:P> + <var:i> \cdot <nat:94> + <nat:68> + <var:Y> \cdot <nat:108> + <nat:346> \cdot <var:h> + <var:T> \cdot <nat:240> + <var:x> \cdot <nat:210> + <nat:426> \cdot <var:X> + <nat:368> \cdot <var:B> $ is trivially even because $ <nat:346> \cdot <var:h> + <nat:108> \cdot <var:Y> + <var:X> \cdot <nat:426> + <nat:240> \cdot <var:T> + <nat:94> \cdot <var:i> + <nat:210> \cdot <var:x> + <nat:368> \cdot <var:B> + <var:P> \cdot <nat:232> + <var:V> \cdot <nat:476> $ is even , from the knowledge the totaling of an even element of $ \mathbb{N} $ and an even number in $ \mathbb{N} $ is guaranteed to be instrinsically an even number . In addition to this , we know the pairs $ <var:h> * <nat:346> $ , $ <var:Y> * <nat:108> $ , $ <var:X> * <nat:426> $ , $ <nat:240> * <var:T> $ , $ <nat:94> * <var:i> $ , $ <nat:210> * <var:x> $ , $ <var:B> * <nat:368> $ , $ <nat:232> * <var:P> $ , in addition to $ <nat:476> * <var:V> $ are clearly even positive integers by reason that the whole numbers $ <nat:346> $ , $ <nat:108> $ , $ <nat:426> $ , $ <nat:240> $ , $ <nat:94> $ , $ <nat:210> $ , $ <nat:368> $ , $ <nat:232> $ , and $ <nat:476> $ are clearly even . It can be demonstrated that our lemma must be true . See $ <nat:68> $ is known as even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:x> <var:h> <var:B> <var:T> <var:V> <var:P> <var:X> <var:Y> <var:i> : nat , Nat . even ( <nat:346> * <var:h> + <nat:240> * <var:T> + <nat:94> * <var:i> + <nat:368> * <var:B> + <nat:426> * <var:X> + <nat:108> * <var:Y> + <nat:476> * <var:V> + <nat:232> * <var:P> + <nat:210> * <var:x> + <nat:68> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:346> = true ) . { auto . } assert ( <genH> : Nat . even <nat:108> = true ) . { auto . } assert ( <genH> : Nat . even <nat:426> = true ) . { auto . } assert ( <genH> : Nat . even <nat:240> = true ) . { auto . } assert ( <genH> : Nat . even <nat:94> = true ) . { auto . } assert ( <genH> : Nat . even <nat:210> = true ) . { auto . } assert ( <genH> : Nat . even <nat:368> = true ) . { auto . } assert ( <genH> : Nat . even <nat:232> = true ) . { auto . } assert ( <genH> : Nat . even <nat:476> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:346> * <var:h> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:108> * <var:Y> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:426> * <var:X> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:240> * <var:T> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:94> * <var:i> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:210> * <var:x> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:368> * <var:B> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:232> * <var:P> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:476> * <var:V> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:346> * <var:h> + <nat:240> * <var:T> + <nat:94> * <var:i> + <nat:368> * <var:B> + <nat:426> * <var:X> + <nat:108> * <var:Y> + <nat:476> * <var:V> + <nat:232> * <var:P> + <nat:210> * <var:x> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:68> = true ) . { auto . } rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . auto . Qed . 