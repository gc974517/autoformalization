\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:344> <var:i> + <var:O> <nat:442> + <var:Z> <nat:148> + <nat:218> <var:d> + <nat:316> <var:n> + <var:b> <nat:130> + <nat:96> <var:h> + <nat:296> + <var:Y> <nat:198> + <nat:430> <var:w> + <nat:60> <var:u> $ will be even . \end{theorem} \begin{proof} See that $ <nat:296> $ is guaranteed to be even . It can be shown that our lemma is proven . The terms $ <var:i> <nat:344> $ , $ <nat:442> <var:O> $ , $ <var:Z> <nat:148> $ , $ <nat:218> <var:d> $ , $ <var:n> <nat:316> $ , $ <var:b> <nat:130> $ , $ <var:h> <nat:96> $ , $ <nat:198> <var:Y> $ , $ <nat:430> <var:w> $ , plus $ <var:u> <nat:60> $ are clearly even natural numbers . This is proven as a consequence that the whole numbers $ <nat:344> $ , $ <nat:442> $ , $ <nat:148> $ , $ <nat:218> $ , $ <nat:316> $ , $ <nat:130> $ , $ <nat:96> $ , $ <nat:198> $ , $ <nat:430> $ , plus $ <nat:60> $ will be even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:i> <var:O> <var:Z> <var:d> <var:n> <var:b> <var:h> <var:Y> <var:w> <var:u> : nat , Nat . even ( <nat:344> * <var:i> + <nat:442> * <var:O> + <nat:148> * <var:Z> + <nat:218> * <var:d> + <nat:316> * <var:n> + <nat:130> * <var:b> + <nat:96> * <var:h> + <nat:198> * <var:Y> + <nat:430> * <var:w> + <nat:60> * <var:u> + <nat:296> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:296> = true ) . { auto . } assert ( <genH> : Nat . even <nat:344> = true ) . { auto . } assert ( <genH> : Nat . even <nat:442> = true ) . { auto . } assert ( <genH> : Nat . even <nat:148> = true ) . { auto . } assert ( <genH> : Nat . even <nat:218> = true ) . { auto . } assert ( <genH> : Nat . even <nat:316> = true ) . { auto . } assert ( <genH> : Nat . even <nat:130> = true ) . { auto . } assert ( <genH> : Nat . even <nat:96> = true ) . { auto . } assert ( <genH> : Nat . even <nat:198> = true ) . { auto . } assert ( <genH> : Nat . even <nat:430> = true ) . { auto . } assert ( <genH> : Nat . even <nat:60> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:344> * <var:i> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:442> * <var:O> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:148> * <var:Z> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:218> * <var:d> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:316> * <var:n> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:130> * <var:b> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:96> * <var:h> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:198> * <var:Y> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:430> * <var:w> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:60> * <var:u> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 