\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} For all positive terms $ <var:P> $ , $ <var:v> $ , $ <var:R> $ , $ <var:L> $ , $ <var:j> $ , $ <var:T> $ , $ <var:A> $ , $ <var:w> $ , $ <var:r> $ , $ <var:O> $ , and $ <var:u> $ the summation $ <nat:184> * <var:v> + <var:R> * <nat:112> + <nat:336> * <var:u> + <nat:338> * <var:L> + <nat:192> * <var:j> + <var:A> * <nat:36> + <var:w> * <nat:152> + <var:r> * <nat:238> + <var:T> * <nat:10> + <nat:331> + <var:P> * <nat:168> + <var:O> * <nat:370> $ is guaranteed to be odd . \end{theorem} \begin{proof} The formula $ <var:O> \cdot <nat:370> + <var:T> \cdot <nat:10> + <nat:152> \cdot <var:w> + <var:r> \cdot <nat:238> + <nat:168> \cdot <var:P> + <nat:184> \cdot <var:v> + <nat:338> \cdot <var:L> + <nat:331> + <nat:192> \cdot <var:j> + <var:A> \cdot <nat:36> + <var:u> \cdot <nat:336> + <var:R> \cdot <nat:112> $ is clearly odd because $ <var:u> \times <nat:336> + <nat:238> \times <var:r> + <nat:338> \times <var:L> + <nat:112> \times <var:R> + <nat:152> \times <var:w> + <var:P> \times <nat:168> + <var:j> \times <nat:192> + <var:O> \times <nat:370> + <var:T> \times <nat:10> + <nat:184> \times <var:v> + <nat:36> \times <var:A> $ is known to be even . The positive integer $ <nat:152> $ is known to be even . For this reason , $ <nat:152> \cdot <var:w> $ is guaranteed to be even as well . What's more , the number $ <nat:238> $ is obviously even . Hence , the term $ <nat:238> \cdot <var:r> $ is even additionally . The leading term $ <nat:338> $ is guaranteed to be even . Consequently , $ <nat:338> \cdot <var:L> $ must be even in addition . Adding on , we know that the pair $ <var:v> \cdot <nat:184> $ is guaranteed to be even . This fact must be true as a consequence that the multiplication between an even integer and some element of $ \mathbb{N} $ is guaranteed to be even , which must be true by reason that the number $ <nat:184> $ is even . Building on , the term $ <var:O> \cdot <nat:370> $ is known as an even natural number . This claim is proven since the number $ <nat:370> $ is known to be even . Additionally , we know the leading term $ <nat:112> $ is clearly even . Thus , the term $ <nat:112> \cdot <var:R> $ must be even as well . The positive integer $ <nat:36> $ is an even element of $ \mathbb{Z}^+ $ . So , the product $ <var:A> \cdot <nat:36> $ is even at the same time . Furthermore , take note that the pair $ <var:u> \cdot <nat:336> $ is an even element of $ \mathbb{Z}^+ $ since the positive integer $ <nat:336> $ is an even positive integer . Additionally , $ <var:j> \cdot <nat:192> $ is guaranteed to be even . This fact must be true by reason that the product of an even positive integer with any element of $ \mathbb{N} $ is by definition an even integer . This fact holds as a consequence that the coefficient $ <nat:192> $ is trivially even . Additionally , take note that the natural number $ <nat:10> $ is known as even . So , $ <nat:10> \cdot <var:T> $ must be even in addition . Further , we know that the term $ <var:P> \cdot <nat:168> $ is known to be an even element of $ \mathbb{N} $ from the fact the leading term $ <nat:168> $ is known as even . This theorem must be true since taking the product of even elements of $ \mathbb{Z}^+ $ and some element of $ \mathbb{N} $ will be by its very nature an even whole number . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:P> <var:v> <var:R> <var:L> <var:j> <var:T> <var:A> <var:w> <var:r> <var:O> <var:u> : nat , Nat . odd ( <nat:184> * <var:v> + <nat:112> * <var:R> + <nat:336> * <var:u> + <nat:338> * <var:L> + <nat:192> * <var:j> + <nat:36> * <var:A> + <nat:152> * <var:w> + <nat:238> * <var:r> + <nat:10> * <var:T> + <nat:168> * <var:P> + <nat:370> * <var:O> + <nat:331> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:152> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:152> * <var:w> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:238> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:238> * <var:r> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:338> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:338> * <var:L> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:184> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:184> * <var:v> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:370> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:370> * <var:O> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:112> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:112> * <var:R> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:36> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:36> * <var:A> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:336> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:336> * <var:u> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:192> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:192> * <var:j> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:10> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:10> * <var:T> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:168> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:168> * <var:P> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:184> * <var:v> + <nat:112> * <var:R> + <nat:336> * <var:u> + <nat:338> * <var:L> + <nat:192> * <var:j> + <nat:36> * <var:A> + <nat:152> * <var:w> + <nat:238> * <var:r> + <nat:10> * <var:T> + <nat:168> * <var:P> + <nat:370> * <var:O> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . auto . Qed . 