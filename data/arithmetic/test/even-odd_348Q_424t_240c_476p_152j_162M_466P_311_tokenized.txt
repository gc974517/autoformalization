\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} With any positive terms $ <var:c> $ , $ <var:P> $ , $ <var:j> $ , $ <var:t> $ , $ <var:p> $ , $ <var:M> $ , and $ <var:Q> $ the sum $ <nat:348> <var:Q> + <nat:424> <var:t> + <var:c> <nat:240> + <nat:476> <var:p> + <nat:311> + <nat:152> <var:j> + <var:M> <nat:162> + <var:P> <nat:466> $ will be odd . \end{theorem} \begin{proof} The pairs $ <nat:424> <var:t> $ , $ <var:Q> <nat:348> $ , and likewise $ <nat:152> <var:j> $ are known to be even elements of $ \mathbb{N} $ . What's more , $ <nat:162> <var:M> $ is obviously an even element of $ \mathbb{N} $ from the fact multiplying of an even number in $ \mathbb{N} $ with any natural number must be even . Additionally , notice the pair $ <var:P> <nat:466> $ is obviously an even positive integer . Building on , observe the pair $ <var:p> <nat:476> $ is trivially an even element of $ \mathbb{N} $ by reason that the product between an even number in $ \mathbb{N} $ and some whole number must be even . $ <var:c> <nat:240> $ is known to be even . This fact must be true since the product of an even number with a number in $ \mathbb{Z}^+ $ must be even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:c> <var:P> <var:j> <var:t> <var:p> <var:M> <var:Q> : nat , Nat . odd ( <nat:348> * <var:Q> + <nat:424> * <var:t> + <nat:240> * <var:c> + <nat:476> * <var:p> + <nat:152> * <var:j> + <nat:162> * <var:M> + <nat:466> * <var:P> + <nat:311> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:424> * <var:t> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:348> * <var:Q> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:152> * <var:j> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:162> * <var:M> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:466> * <var:P> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:476> * <var:p> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:240> * <var:c> ) = true ) . { rewrite Nat . even_mul . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 