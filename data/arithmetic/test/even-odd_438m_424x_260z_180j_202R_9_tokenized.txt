\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:9> + <var:m> <nat:438> + <nat:424> <var:x> + <var:j> <nat:180> + <var:z> <nat:260> + <var:R> <nat:202> $ will be odd for all $ <var:m> $ , $ <var:R> $ , $ <var:z> $ , $ <var:x> $ , and $ <var:j> $ . \end{theorem} \begin{proof} It can be justified that $ <nat:424> * <var:x> + <var:z> * <nat:260> + <nat:202> * <var:R> + <nat:180> * <var:j> + <nat:9> + <var:m> * <nat:438> $ must be odd . The theorem holds from the fact $ <var:j> \times <nat:180> + <var:z> \times <nat:260> + <nat:438> \times <var:m> + <nat:424> \times <var:x> + <var:R> \times <nat:202> $ is clearly even . Furthermore , see the terms $ <var:j> <nat:180> $ , $ <var:z> <nat:260> $ , $ <var:m> <nat:438> $ , $ <nat:424> <var:x> $ , plus $ <var:R> <nat:202> $ must be even numbers in $ \mathbb{Z}^+ $ by reason that the whole numbers $ <nat:180> $ , $ <nat:260> $ , $ <nat:438> $ , $ <nat:424> $ , and also $ <nat:202> $ are known as even . Since the totaling between an even natural and an even element of $ \mathbb{Z}^+ $ is even , the formula $ <var:m> \cdot <nat:438> + <nat:424> \cdot <var:x> + <nat:260> \cdot <var:z> + <var:j> \cdot <nat:180> + <var:R> \cdot <nat:202> $ is guaranteed to be even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:m> <var:R> <var:z> <var:x> <var:j> : nat , Nat . odd ( <nat:438> * <var:m> + <nat:424> * <var:x> + <nat:180> * <var:j> + <nat:260> * <var:z> + <nat:202> * <var:R> + <nat:9> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:180> = true ) . { auto . } assert ( <genH> : Nat . even <nat:260> = true ) . { auto . } assert ( <genH> : Nat . even <nat:438> = true ) . { auto . } assert ( <genH> : Nat . even <nat:424> = true ) . { auto . } assert ( <genH> : Nat . even <nat:202> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:180> * <var:j> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:260> * <var:z> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:438> * <var:m> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:424> * <var:x> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:202> * <var:R> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:438> * <var:m> + <nat:424> * <var:x> + <nat:180> * <var:j> + <nat:260> * <var:z> + <nat:202> * <var:R> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . auto . Qed . 