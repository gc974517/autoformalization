\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Take $ <var:x> $ , $ <var:u> $ , $ <var:H> $ , $ <var:t> $ , $ <var:h> $ , $ <var:m> $ , $ <var:P> $ are integers . Define that some positive integer $ <var:O> $ is said to be a <def:seven-composite> natural number assuming $ <var:x> \times <var:u> \times <var:t> \times <var:P> \times <var:h> \times <var:m> \times <var:H> = <var:O> $ plus so that $ <var:H> $ , $ <var:h> $ , $ <var:t> $ , $ <var:x> $ , $ <var:m> $ , $ <var:P> $ , $ <var:u> \geq <nat:2> $ . Accordingly the integer <nat:221760> is <def:seven-composite> . \end{theorem} \begin{proof} Take $ <var:P> = <nat:2> $ , $ <var:t> = <nat:12> $ , $ <var:H> = <nat:7> $ , $ <var:u> = <nat:4> $ , $ <var:x> = <nat:6> $ , $ <var:h> = <nat:11> $ , $ <var:m> = <nat:5> $ . Note $ <nat:221760> = <var:P> \cdot <var:h> \cdot <var:t> \cdot <var:H> \cdot <var:x> \cdot <var:u> \cdot <var:m> $ . In addition notice that $ <var:u> = <nat:4> $ , $ <var:H> = <nat:7> $ , $ <var:t> = <nat:12> $ , $ <var:x> = <nat:6> $ , $ <var:m> = <nat:5> $ , $ <var:P> = <nat:2> $ and $ <var:h> = <nat:11> \geq <nat:2> $ . Thus , $ <var:P> \times <var:t> \times <var:H> \times <var:u> \times <var:m> \times <var:h> \times <var:x> = <nat:221760> $ plus $ <var:x> $ , $ <var:h> $ , $ <var:t> $ , $ <var:u> $ , $ <var:m> $ , $ <var:P> $ and $ <var:H> $ are greater than or equivalent to <nat:2> has been validated . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:seven-composite> ( <var:O> : nat ) := exists <var:x> <var:u> <var:H> <var:t> <var:h> <var:m> <var:P> : nat , ( <var:x> * <var:u> * <var:t> * <var:P> * <var:h> * <var:m> * <var:H> = <var:O> ) /\ ( <var:H> >= <nat:2> ) /\ ( <var:h> >= <nat:2> ) /\ ( <var:t> >= <nat:2> ) /\ ( <var:x> >= <nat:2> ) /\ ( <var:m> >= <nat:2> ) /\ ( <var:P> >= <nat:2> ) /\ ( <var:u> >= <nat:2> ) . Theorem <genP:1> : <def:seven-composite> <nat:221760> . Proof . unfold <def:seven-composite> . exists <nat:6> . exists <nat:4> . exists <nat:7> . exists <nat:12> . exists <nat:11> . exists <nat:5> . exists <nat:2> . assert ( <genH> : <nat:4> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:7> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:12> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:6> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:5> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:2> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:11> >= <nat:2> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 