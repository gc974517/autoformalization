\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Given some integers $ <var:d> $ , $ <var:S> $ , $ <var:m> $ , $ <var:c> $ , $ <var:L> $ , $ <var:G> $ , and $ <var:w> $ the sum $ <var:w> <nat:114> + <nat:494> <var:m> + <var:c> <nat:490> + <nat:304> <var:d> + <var:L> <nat:438> + <var:G> <nat:430> + <nat:86> <var:S> + <nat:284> $ will be even . \end{theorem} \begin{proof} We show our proposition is proven . The terms $ <var:m> \times <nat:494> $ , $ <nat:114> \times <var:w> $ , $ <nat:438> \times <var:L> $ , $ <var:d> \times <nat:304> $ , and moreover $ <var:c> \times <nat:490> $ are known as even . The term $ <nat:86> \times <var:S> $ is guaranteed to be an even integer since taking the product between an even natural number and an arbitrary number in $ \mathbb{Z}^+ $ must be even . On top of this , $ <nat:430> \times <var:G> $ is an even element of $ \mathbb{Z}^+ $ by reason that the multiplication between an even element of $ \mathbb{Z}^+ $ and an arbitrary number will be an even whole number . The adding between an even element of $ \mathbb{Z}^+ $ and an even natural number will be an even element of $ \mathbb{Z}^+ $ . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:d> <var:S> <var:m> <var:c> <var:L> <var:G> <var:w> : nat , Nat . even ( <nat:114> * <var:w> + <nat:494> * <var:m> + <nat:490> * <var:c> + <nat:304> * <var:d> + <nat:438> * <var:L> + <nat:430> * <var:G> + <nat:86> * <var:S> + <nat:284> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:494> * <var:m> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:114> * <var:w> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:438> * <var:L> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:304> * <var:d> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:490> * <var:c> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:86> * <var:S> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:430> * <var:G> ) = true ) . { rewrite Nat . even_mul . auto . } repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 