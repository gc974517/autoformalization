\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Take $ <var:n> $ , $ <var:u> $ , $ <var:f> $ , $ <var:T> $ , $ <var:N> $ , $ <var:K> $ , $ <var:P> $ , $ <var:L> $ and $ <var:S> $ as whole numbers so that $ <var:N> $ , $ <var:n> $ , $ <var:T> $ , $ <var:f> $ , $ <var:P> $ , $ <var:u> $ , $ <var:K> $ , $ <var:S> $ , and $ <var:L> \geq <nat:2> $ as well as where the integer <nat:18532800> is the multiplication of numbers $ <var:n> $ , $ <var:u> $ , $ <var:f> $ , $ <var:T> $ , $ <var:N> $ , $ <var:K> $ , $ <var:P> $ , $ <var:L> $ and $ <var:S> $ . \end{theorem} \begin{proof} Notice $ <nat:5> $ , $ <nat:11> $ , $ <nat:8> $ , $ <nat:2> $ , $ <nat:6> $ , $ <nat:9> $ , $ <nat:3> $ , $ <nat:10> $ , and $ <nat:13> \geq <nat:2> $ . Moreover notice further $ <nat:18532800> = <nat:6> * <nat:3> * <nat:5> * <nat:8> * <nat:10> * <nat:2> * <nat:11> * <nat:9> * <nat:13> = <var:f> * <var:S> * <var:N> * <var:K> * <var:P> * <var:L> * <var:T> * <var:n> * <var:u> $ . This implies the proposition is valid . Hence , $ <nat:18532800> = <var:u> * <var:N> * <var:f> * <var:K> * <var:S> * <var:L> * <var:P> * <var:n> * <var:T> $ is true has been proven . \end{proof} \end{document} 
~
Require Import Lia . Theorem <genP:1> : exists <var:n> <var:u> <var:f> <var:T> <var:N> <var:K> <var:P> <var:L> <var:S> : nat , ( <var:N> >= <nat:2> ) /\ ( <var:n> >= <nat:2> ) /\ ( <var:T> >= <nat:2> ) /\ ( <var:f> >= <nat:2> ) /\ ( <var:P> >= <nat:2> ) /\ ( <var:u> >= <nat:2> ) /\ ( <var:K> >= <nat:2> ) /\ ( <var:S> >= <nat:2> ) /\ ( <var:L> >= <nat:2> ) /\ ( <nat:18532800> = <var:n> * <var:u> * <var:f> * <var:T> * <var:N> * <var:K> * <var:P> * <var:L> * <var:S> ) . Proof . assert ( <genH> : <nat:5> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:11> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:8> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:2> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:6> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:9> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:3> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:10> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:13> >= <nat:2> ) . { lia . } exists <nat:9> . exists <nat:13> . exists <nat:6> . exists <nat:11> . exists <nat:5> . exists <nat:8> . exists <nat:10> . exists <nat:2> . exists <nat:3> . repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 