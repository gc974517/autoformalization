\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Granted we have $ <var:f> $ , $ <var:K> $ , $ <var:u> $ , $ <var:Z> $ , $ <var:d> $ and $ <var:i> \geq <nat:2> $ such that using some natural number $ <var:j> $ , $ <var:j> = <var:d> * <var:f> * <var:Z> * <var:u> * <var:i> * <var:K> $ taking some $ <var:f> $ , $ <var:Z> $ , $ <var:i> $ , $ <var:u> $ , $ <var:d> $ , $ <var:K> \in \mathbb{Z}^+ $ , then we define that $ <var:j> $ is a <def:six-composite> integer . Then the natural number <nat:46200> is a <def:six-composite> integer . \end{theorem} \begin{proof} Recall <nat:46200> is <def:six-composite> given that <nat:46200> is the multiplication between natural numbers $ <var:f> $ , $ <var:i> $ , $ <var:K> $ , $ <var:Z> $ , $ <var:d> $ , and $ <var:u> $ satisfying the condition that $ <var:d> $ , $ <var:i> $ , $ <var:Z> $ , $ <var:u> $ , $ <var:f> $ , and $ <var:K> \geq <nat:2> $ . Allow $ <var:Z> = <nat:7> $ , $ <var:i> = <nat:11> $ , $ <var:d> = <nat:3> $ , $ <var:K> = <nat:5> $ , $ <var:u> = <nat:4> $ and $ <var:f> = <nat:10> $ . We justify <nat:46200> is a <def:six-composite> whole number . Notice $ <nat:46200> = <var:f> * <var:K> * <var:i> * <var:u> * <var:Z> * <var:d> = <nat:10> * <nat:5> * <nat:11> * <nat:4> * <nat:7> * <nat:3> $ . Moreover observe $ <var:i> = <nat:11> $ , $ <var:d> = <nat:3> $ , $ <var:K> = <nat:5> $ , $ <var:u> = <nat:4> $ , $ <var:Z> = <nat:7> $ and $ <var:f> = <nat:10> $ are larger than or equivalent to <nat:2> . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:six-composite> ( <var:j> : nat ) := exists <var:f> <var:Z> <var:i> <var:u> <var:d> <var:K> : nat , ( <var:f> >= <nat:2> ) /\ ( <var:K> >= <nat:2> ) /\ ( <var:u> >= <nat:2> ) /\ ( <var:Z> >= <nat:2> ) /\ ( <var:d> >= <nat:2> ) /\ ( <var:i> >= <nat:2> ) /\ ( <var:j> = <var:d> * <var:f> * <var:Z> * <var:u> * <var:i> * <var:K> ) . Theorem <genP:1> : <def:six-composite> <nat:46200> . Proof . unfold <def:six-composite> . exists <nat:10> . exists <nat:7> . exists <nat:11> . exists <nat:4> . exists <nat:3> . exists <nat:5> . assert ( <genH> : <nat:11> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:3> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:5> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:4> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:7> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:10> >= <nat:2> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 