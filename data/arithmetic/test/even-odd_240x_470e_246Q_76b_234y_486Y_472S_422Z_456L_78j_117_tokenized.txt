\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:456> <var:L> + <nat:117> + <nat:470> <var:e> + <nat:486> <var:Y> + <var:y> <nat:234> + <nat:78> <var:j> + <var:b> <nat:76> + <nat:422> <var:Z> + <nat:246> <var:Q> + <var:S> <nat:472> + <nat:240> <var:x> $ must be odd with $ <var:j> $ , $ <var:Q> $ , $ <var:x> $ , $ <var:S> $ , $ <var:y> $ , $ <var:b> $ , $ <var:Z> $ , $ <var:e> $ , $ <var:Y> $ , and $ <var:L> \in \mathbb{Z}^+ $ . \end{theorem} \begin{proof} Building on , take note the numbers $ <nat:456> $ , $ <nat:470> $ , $ <nat:486> $ , $ <nat:234> $ , $ <nat:78> $ , $ <nat:76> $ , $ <nat:422> $ , $ <nat:246> $ , $ <nat:472> $ , as well as $ <nat:240> $ are clearly even . Hence , the pairs $ <nat:456> \times <var:L> $ , $ <var:e> \times <nat:470> $ , $ <var:Y> \times <nat:486> $ , $ <nat:234> \times <var:y> $ , $ <nat:78> \times <var:j> $ , $ <nat:76> \times <var:b> $ , $ <var:Z> \times <nat:422> $ , $ <nat:246> \times <var:Q> $ , $ <nat:472> \times <var:S> $ , in addition to $ <var:x> \times <nat:240> $ will be even also . We know that $ <nat:117> $ is known to be an odd number in $ \mathbb{N} $ . We verify the sum $ <nat:240> \cdot <var:x> + <nat:117> + <var:e> \cdot <nat:470> + <nat:246> \cdot <var:Q> + <var:b> \cdot <nat:76> + <nat:234> \cdot <var:y> + <var:Y> \cdot <nat:486> + <nat:472> \cdot <var:S> + <var:Z> \cdot <nat:422> + <var:L> \cdot <nat:456> + <nat:78> \cdot <var:j> $ must be odd . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:j> <var:Q> <var:x> <var:S> <var:y> <var:b> <var:Z> <var:e> <var:Y> <var:L> : nat , Nat . odd ( <nat:456> * <var:L> + <nat:470> * <var:e> + <nat:486> * <var:Y> + <nat:234> * <var:y> + <nat:78> * <var:j> + <nat:76> * <var:b> + <nat:422> * <var:Z> + <nat:246> * <var:Q> + <nat:472> * <var:S> + <nat:240> * <var:x> + <nat:117> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:456> = true ) . { auto . } assert ( <genH> : Nat . even <nat:470> = true ) . { auto . } assert ( <genH> : Nat . even <nat:486> = true ) . { auto . } assert ( <genH> : Nat . even <nat:234> = true ) . { auto . } assert ( <genH> : Nat . even <nat:78> = true ) . { auto . } assert ( <genH> : Nat . even <nat:76> = true ) . { auto . } assert ( <genH> : Nat . even <nat:422> = true ) . { auto . } assert ( <genH> : Nat . even <nat:246> = true ) . { auto . } assert ( <genH> : Nat . even <nat:472> = true ) . { auto . } assert ( <genH> : Nat . even <nat:240> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:456> * <var:L> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:470> * <var:e> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:486> * <var:Y> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:234> * <var:y> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:78> * <var:j> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:76> * <var:b> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:422> * <var:Z> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:246> * <var:Q> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:472> * <var:S> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:240> * <var:x> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . odd <nat:117> = true ) . { auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 