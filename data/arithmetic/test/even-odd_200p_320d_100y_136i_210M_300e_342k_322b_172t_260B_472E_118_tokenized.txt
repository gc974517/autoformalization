\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:200> * <var:p> + <nat:320> * <var:d> + <nat:100> * <var:y> + <nat:136> * <var:i> + <nat:210> * <var:M> + <var:e> * <nat:300> + <nat:342> * <var:k> + <nat:118> + <nat:322> * <var:b> + <var:t> * <nat:172> + <nat:260> * <var:B> + <var:E> * <nat:472> $ is even assuming every terms $ <var:k> $ , $ <var:M> $ , $ <var:d> $ , $ <var:y> $ , $ <var:E> $ , $ <var:t> $ , $ <var:B> $ , $ <var:e> $ , $ <var:i> $ , $ <var:b> $ , and $ <var:p> $ . \end{theorem} \begin{proof} Notice $ <nat:118> $ is trivially even . The multiplication between an even whole number and an arbitrary whole number must be clearly an even whole number . The natural numbers $ <nat:210> $ , $ <nat:260> $ , $ <nat:300> $ , $ <nat:172> $ , additionally $ <nat:320> $ are obviously even whole numbers Adding on , the integers $ <nat:472> $ , $ <nat:200> $ , and moreover $ <nat:136> $ must be even positive integers The positive integer $ <nat:100> $ is guaranteed to be an even number See the positive integer $ <nat:342> $ is clearly even The leading term $ <nat:322> $ is known as an even number in $ \mathbb{Z}^+ $ \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:k> <var:M> <var:d> <var:y> <var:E> <var:t> <var:B> <var:e> <var:i> <var:b> <var:p> : nat , Nat . even ( <nat:200> * <var:p> + <nat:320> * <var:d> + <nat:100> * <var:y> + <nat:136> * <var:i> + <nat:210> * <var:M> + <nat:300> * <var:e> + <nat:342> * <var:k> + <nat:322> * <var:b> + <nat:172> * <var:t> + <nat:260> * <var:B> + <nat:472> * <var:E> + <nat:118> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:118> = true ) . { auto . } repeat rewrite Nat . even_add . repeat rewrite Nat . even_mul . assert ( <genH> : Nat . even <nat:210> = true ) . { auto . } assert ( <genH> : Nat . even <nat:260> = true ) . { auto . } assert ( <genH> : Nat . even <nat:300> = true ) . { auto . } assert ( <genH> : Nat . even <nat:172> = true ) . { auto . } assert ( <genH> : Nat . even <nat:320> = true ) . { auto . } assert ( <genH> : Nat . even <nat:472> = true ) . { auto . } assert ( <genH> : Nat . even <nat:200> = true ) . { auto . } assert ( <genH> : Nat . even <nat:136> = true ) . { auto . } assert ( <genH> : Nat . even <nat:100> = true ) . { auto . } assert ( <genH> : Nat . even <nat:342> = true ) . { auto . } assert ( <genH> : Nat . even <nat:322> = true ) . { auto . } repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 