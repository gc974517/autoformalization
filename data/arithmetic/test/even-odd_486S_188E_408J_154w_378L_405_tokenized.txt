\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:378> <var:L> + <var:S> <nat:486> + <nat:188> <var:E> + <nat:154> <var:w> + <nat:405> + <var:J> <nat:408> $ will be odd . \end{theorem} \begin{proof} The expression $ <var:E> \cdot <nat:188> + <nat:154> \cdot <var:w> + <var:J> \cdot <nat:408> + <nat:378> \cdot <var:L> + <var:S> \cdot <nat:486> $ is guaranteed to be even . The natural numbers $ <nat:486> $ , $ <nat:408> $ , as well as $ <nat:188> $ are clearly even numbers Furthermore , the coefficient $ <nat:154> $ is known to be even Remember the number $ <nat:378> $ is trivially even The formula $ <nat:154> \cdot <var:w> + <nat:408> \cdot <var:J> + <var:E> \cdot <nat:188> + <nat:378> \cdot <var:L> + <nat:486> \cdot <var:S> $ must be obviously even by reason that the adding between an even natural and even natural numbers must be by definition an even number in $ \mathbb{N} $ . We demonstrate the sum $ <var:S> * <nat:486> + <nat:188> * <var:E> + <var:J> * <nat:408> + <var:w> * <nat:154> + <nat:405> + <nat:378> * <var:L> $ will be odd . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:L> <var:S> <var:E> <var:w> <var:J> : nat , Nat . odd ( <nat:378> * <var:L> + <nat:486> * <var:S> + <nat:188> * <var:E> + <nat:154> * <var:w> + <nat:408> * <var:J> + <nat:405> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:486> = true ) . { auto . } assert ( <genH> : Nat . even <nat:408> = true ) . { auto . } assert ( <genH> : Nat . even <nat:188> = true ) . { auto . } assert ( <genH> : Nat . even <nat:154> = true ) . { auto . } assert ( <genH> : Nat . even <nat:378> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:378> * <var:L> + <nat:486> * <var:S> + <nat:188> * <var:E> + <nat:154> * <var:w> + <nat:408> * <var:J> ) = true ) . { repeat rewrite Nat . even_add . repeat rewrite Nat . even_mul . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . auto . Qed . 