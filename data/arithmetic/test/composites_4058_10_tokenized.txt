\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} We define that $ <var:Y> $ is a <def:ten-composite> positive integer under the condition that for some $ <var:X> $ , $ <var:i> $ , $ <var:q> $ , $ <var:w> $ , $ <var:S> $ , $ <var:D> $ , $ <var:G> $ , $ <var:L> $ , $ <var:v> $ , $ <var:b> \in \mathbb{N} $ we get where $ <var:i> $ , $ <var:G> $ , $ <var:v> $ , $ <var:w> $ , $ <var:D> $ , $ <var:q> $ , $ <var:X> $ , $ <var:L> $ , $ <var:b> $ , $ <var:S> > <nat:1> $ plus with some integer $ <var:Y> $ , $ <var:Y> = <var:D> \cdot <var:q> \cdot <var:b> \cdot <var:L> \cdot <var:G> \cdot <var:X> \cdot <var:i> \cdot <var:w> \cdot <var:v> \cdot <var:S> $ . Therefore $ <var:Y> = <nat:155675520> $ is a <def:ten-composite> whole number . \end{theorem} \begin{proof} Recollect that <nat:155675520> is a <def:ten-composite> whole number wherever it is the multiplication between integers $ <var:w> $ , $ <var:v> $ , $ <var:D> $ , $ <var:S> $ , $ <var:q> $ , $ <var:X> $ , $ <var:G> $ , $ <var:i> $ , $ <var:L> $ and $ <var:b> $ more than <nat:1> . Take $ <var:L> = <nat:4> $ , $ <var:X> = <nat:13> $ , $ <var:G> = <nat:7> $ , $ <var:b> = <nat:12> $ , $ <var:S> = <nat:6> $ , $ <var:w> = <nat:3> $ , $ <var:D> = <nat:11> $ , $ <var:i> = <nat:10> $ , $ <var:v> = <nat:2> $ , $ <var:q> = <nat:9> $ . Note that $ <var:L> = <nat:4> $ , $ <var:w> = <nat:3> $ , $ <var:G> = <nat:7> $ , $ <var:b> = <nat:12> $ , $ <var:D> = <nat:11> $ , $ <var:S> = <nat:6> $ , $ <var:X> = <nat:13> $ , $ <var:q> = <nat:9> $ , $ <var:v> = <nat:2> $ and $ <var:i> = <nat:10> $ are more than <nat:1> . Plus note that likewise $ <nat:6> \times <nat:2> \times <nat:9> \times <nat:7> \times <nat:12> \times <nat:10> \times <nat:3> \times <nat:4> \times <nat:11> \times <nat:13> = <nat:155675520> $ . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:ten-composite> ( <var:Y> : nat ) := exists <var:X> <var:i> <var:q> <var:w> <var:S> <var:D> <var:G> <var:L> <var:v> <var:b> : nat , ( <var:i> > <nat:1> ) /\ ( <var:G> > <nat:1> ) /\ ( <var:v> > <nat:1> ) /\ ( <var:w> > <nat:1> ) /\ ( <var:D> > <nat:1> ) /\ ( <var:q> > <nat:1> ) /\ ( <var:X> > <nat:1> ) /\ ( <var:L> > <nat:1> ) /\ ( <var:b> > <nat:1> ) /\ ( <var:S> > <nat:1> ) /\ ( <var:Y> = <var:D> * <var:q> * <var:b> * <var:L> * <var:G> * <var:X> * <var:i> * <var:w> * <var:v> * <var:S> ) . Theorem <genP:1> : <def:ten-composite> <nat:155675520> . Proof . unfold <def:ten-composite> . exists <nat:13> . exists <nat:10> . exists <nat:9> . exists <nat:3> . exists <nat:6> . exists <nat:11> . exists <nat:7> . exists <nat:4> . exists <nat:2> . exists <nat:12> . assert ( <genH> : <nat:4> > <nat:1> ) . { lia . } assert ( <genH> : <nat:3> > <nat:1> ) . { lia . } assert ( <genH> : <nat:7> > <nat:1> ) . { lia . } assert ( <genH> : <nat:12> > <nat:1> ) . { lia . } assert ( <genH> : <nat:11> > <nat:1> ) . { lia . } assert ( <genH> : <nat:6> > <nat:1> ) . { lia . } assert ( <genH> : <nat:13> > <nat:1> ) . { lia . } assert ( <genH> : <nat:9> > <nat:1> ) . { lia . } assert ( <genH> : <nat:2> > <nat:1> ) . { lia . } assert ( <genH> : <nat:10> > <nat:1> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 