\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Assuming we have satisfying the condition that $ <var:D> $ , $ <var:Q> $ , $ <var:J> $ , $ <var:T> $ , $ <var:e> $ , $ <var:N> $ , $ <var:b> $ , $ <var:E> $ and $ <var:p> > <nat:1> $ so that assuming some natural number $ <var:S> $ , $ <var:S> = <var:D> \cdot <var:p> \cdot <var:T> \cdot <var:e> \cdot <var:b> \cdot <var:J> \cdot <var:N> \cdot <var:Q> \cdot <var:E> $ assuming some $ <var:J> $ , $ <var:D> $ , $ <var:E> $ , $ <var:T> $ , $ <var:e> $ , $ <var:p> $ , $ <var:b> $ , $ <var:Q> $ , $ <var:N> \in \mathbb{N} $ , take that $ <var:S> $ is a <def:nine-composite> natural number . Consequently the natural number <nat:13305600> is a <def:nine-composite> number . \end{theorem} \begin{proof} Let $ <var:D> = <nat:11> $ , $ <var:J> = <nat:3> $ , $ <var:N> = <nat:8> $ , $ <var:e> = <nat:7> $ , $ <var:E> = <nat:6> $ , $ <var:Q> = <nat:5> $ , $ <var:b> = <nat:2> $ , $ <var:p> = <nat:12> $ and $ <var:T> = <nat:10> $ . Moreover notice $ <var:E> = <nat:6> $ , $ <var:J> = <nat:3> $ , $ <var:p> = <nat:12> $ , $ <var:b> = <nat:2> $ , $ <var:N> = <nat:8> $ , $ <var:D> = <nat:11> $ , $ <var:Q> = <nat:5> $ , $ <var:T> = <nat:10> $ , and $ <var:e> = <nat:7> > <nat:1> $ . This yields <nat:13305600> is a <def:nine-composite> natural number . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:nine-composite> ( <var:S> : nat ) := exists <var:J> <var:D> <var:E> <var:T> <var:e> <var:p> <var:b> <var:Q> <var:N> : nat , ( <var:D> > <nat:1> ) /\ ( <var:Q> > <nat:1> ) /\ ( <var:J> > <nat:1> ) /\ ( <var:T> > <nat:1> ) /\ ( <var:e> > <nat:1> ) /\ ( <var:N> > <nat:1> ) /\ ( <var:b> > <nat:1> ) /\ ( <var:E> > <nat:1> ) /\ ( <var:p> > <nat:1> ) /\ ( <var:S> = <var:D> * <var:p> * <var:T> * <var:e> * <var:b> * <var:J> * <var:N> * <var:Q> * <var:E> ) . Theorem <genP:1> : <def:nine-composite> <nat:13305600> . Proof . unfold <def:nine-composite> . exists <nat:3> . exists <nat:11> . exists <nat:6> . exists <nat:10> . exists <nat:7> . exists <nat:12> . exists <nat:2> . exists <nat:5> . exists <nat:8> . assert ( <genH> : <nat:6> > <nat:1> ) . { lia . } assert ( <genH> : <nat:3> > <nat:1> ) . { lia . } assert ( <genH> : <nat:12> > <nat:1> ) . { lia . } assert ( <genH> : <nat:2> > <nat:1> ) . { lia . } assert ( <genH> : <nat:8> > <nat:1> ) . { lia . } assert ( <genH> : <nat:11> > <nat:1> ) . { lia . } assert ( <genH> : <nat:5> > <nat:1> ) . { lia . } assert ( <genH> : <nat:10> > <nat:1> ) . { lia . } assert ( <genH> : <nat:7> > <nat:1> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 