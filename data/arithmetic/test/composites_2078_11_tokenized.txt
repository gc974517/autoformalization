\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \newtheorem{definition}{Definition} \begin{document} \begin{definition} Define that $ <var:X> $ is a <def:eleven-composite> integer with the condition that there are $ <var:h> $ , $ <var:s> $ , $ <var:C> $ , $ <var:E> $ , $ <var:T> $ , $ <var:c> $ , $ <var:B> $ , $ <var:N> $ , $ <var:A> $ , $ <var:U> $ , $ <var:k> \in \mathbb{Z}^+ $ where $ <var:s> $ , $ <var:T> $ , $ <var:B> $ , $ <var:U> $ , $ <var:C> $ , $ <var:N> $ , $ <var:k> $ , $ <var:c> $ , $ <var:E> $ , $ <var:A> $ , $ <var:h> \geq <nat:2> $ plus using some integer $ <var:X> $ , $ <var:s> \cdot <var:h> \cdot <var:E> \cdot <var:k> \cdot <var:c> \cdot <var:N> \cdot <var:U> \cdot <var:B> \cdot <var:C> \cdot <var:T> \cdot <var:A> = <var:X> $ . \end{definition} \begin{theorem} $ <var:X> = <nat:3113510400> $ is a <def:eleven-composite> integer . \end{theorem} \begin{proof} Note that $ <nat:3113510400> = <var:h> \cdot <var:s> \cdot <var:C> \cdot <var:N> \cdot <var:E> \cdot <var:k> \cdot <var:B> \cdot <var:A> \cdot <var:c> \cdot <var:U> \cdot <var:T> $ produces $ <var:U> = <nat:3> $ , $ <var:N> = <nat:9> $ , $ <var:s> = <nat:4> $ , $ <var:C> = <nat:5> $ , $ <var:k> = <nat:12> $ , $ <var:h> = <nat:8> $ , $ <var:c> = <nat:7> $ , $ <var:E> = <nat:6> $ , $ <var:B> = <nat:11> $ , $ <var:T> = <nat:13> $ and $ <var:A> = <nat:10> $ . What's more notice $ <nat:3> $ , $ <nat:8> $ , $ <nat:9> $ , $ <nat:10> $ , $ <nat:6> $ , $ <nat:7> $ , $ <nat:12> $ , $ <nat:11> $ , $ <nat:5> $ , $ <nat:13> $ and $ <nat:4> $ are larger than or equal to <nat:2> . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:eleven-composite> ( <var:X> : nat ) := exists <var:h> <var:s> <var:C> <var:E> <var:T> <var:c> <var:B> <var:N> <var:A> <var:U> <var:k> : nat , ( <var:s> >= <nat:2> ) /\ ( <var:T> >= <nat:2> ) /\ ( <var:B> >= <nat:2> ) /\ ( <var:U> >= <nat:2> ) /\ ( <var:C> >= <nat:2> ) /\ ( <var:N> >= <nat:2> ) /\ ( <var:k> >= <nat:2> ) /\ ( <var:c> >= <nat:2> ) /\ ( <var:E> >= <nat:2> ) /\ ( <var:A> >= <nat:2> ) /\ ( <var:h> >= <nat:2> ) /\ ( <var:s> * <var:h> * <var:E> * <var:k> * <var:c> * <var:N> * <var:U> * <var:B> * <var:C> * <var:T> * <var:A> = <var:X> ) . Theorem <genP:1> : <def:eleven-composite> <nat:3113510400> . Proof . unfold <def:eleven-composite> . exists <nat:8> . exists <nat:4> . exists <nat:5> . exists <nat:6> . exists <nat:13> . exists <nat:7> . exists <nat:11> . exists <nat:9> . exists <nat:10> . exists <nat:3> . exists <nat:12> . assert ( <genH> : <nat:3> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:8> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:9> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:10> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:6> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:7> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:12> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:11> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:5> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:13> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:4> >= <nat:2> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 