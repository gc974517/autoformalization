\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Given natural numbers $ <var:h> $ , $ <var:M> $ , $ <var:A> $ , $ <var:r> $ , $ <var:C> $ , $ <var:W> $ , $ <var:X> $ , $ <var:Y> $ , $ <var:R> $ , and $ <var:F> $ $ <var:r> * <nat:294> + <var:M> * <nat:44> + <var:A> * <nat:196> + <nat:85> + <nat:468> * <var:F> + <nat:198> * <var:h> + <nat:394> * <var:W> + <nat:100> * <var:Y> + <nat:208> * <var:X> + <nat:168> * <var:R> + <nat:380> * <var:C> $ is odd . \end{theorem} \begin{proof} Take note that the whole numbers $ <nat:394> $ , $ <nat:168> $ , $ <nat:208> $ , $ <nat:100> $ , additionally $ <nat:44> $ are trivially even numbers in $ \mathbb{N} $ In addition to this , remember the whole number $ <nat:196> $ is guaranteed to be an even number The leading terms $ <nat:294> $ additionally $ <nat:198> $ are even Likewise , the leading term $ <nat:468> $ is even See the natural number $ <nat:380> $ is even \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:h> <var:M> <var:A> <var:r> <var:C> <var:W> <var:X> <var:Y> <var:R> <var:F> : nat , Nat . odd ( <nat:294> * <var:r> + <nat:44> * <var:M> + <nat:196> * <var:A> + <nat:468> * <var:F> + <nat:198> * <var:h> + <nat:394> * <var:W> + <nat:100> * <var:Y> + <nat:208> * <var:X> + <nat:168> * <var:R> + <nat:380> * <var:C> + <nat:85> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:394> = true ) . { auto . } assert ( <genH> : Nat . even <nat:168> = true ) . { auto . } assert ( <genH> : Nat . even <nat:208> = true ) . { auto . } assert ( <genH> : Nat . even <nat:100> = true ) . { auto . } assert ( <genH> : Nat . even <nat:44> = true ) . { auto . } assert ( <genH> : Nat . even <nat:196> = true ) . { auto . } assert ( <genH> : Nat . even <nat:294> = true ) . { auto . } assert ( <genH> : Nat . even <nat:198> = true ) . { auto . } assert ( <genH> : Nat . even <nat:468> = true ) . { auto . } assert ( <genH> : Nat . even <nat:380> = true ) . { auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . repeat rewrite Nat . even_mul . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 