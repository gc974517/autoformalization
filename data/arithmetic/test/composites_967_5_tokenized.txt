\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Claim that $ <var:g> $ is a <def:five-composite> whole number when for some $ <var:d> $ , $ <var:w> $ , $ <var:F> $ , $ <var:s> $ , $ <var:a> $ we get $ <var:a> \cdot <var:d> \cdot <var:w> \cdot <var:s> \cdot <var:F> = <var:g> $ given $ <var:g> \in \mathbb{N} $ plus so that $ <var:a> $ , $ <var:F> $ , $ <var:s> $ , $ <var:d> $ , and $ <var:w> \geq <nat:2> $ . So the number <nat:20160> is a <def:five-composite> positive integer . \end{theorem} \begin{proof} Recall <nat:20160> is a <def:five-composite> number if it is the product of natural numbers $ <var:s> $ , $ <var:a> $ , $ <var:w> $ , $ <var:d> $ and $ <var:F> $ more than or equivalent to <nat:2> . Allow $ <var:w> = <nat:10> $ , $ <var:s> = <nat:8> $ , $ <var:a> = <nat:12> $ , $ <var:F> = <nat:3> $ , and $ <var:d> = <nat:7> $ . Notice that $ <var:s> = <nat:8> $ , $ <var:a> = <nat:12> $ , $ <var:F> = <nat:3> $ , $ <var:d> = <nat:7> $ and $ <var:w> = <nat:10> $ are larger than or equivalent to <nat:2> . Further notice that as well $ <nat:12> * <nat:3> * <nat:10> * <nat:7> * <nat:8> = <nat:20160> = <var:a> * <var:F> * <var:w> * <var:d> * <var:s> $ . Consequently , <nat:20160> is a <def:five-composite> positive integer has been verified . So , $ <var:s> \times <var:w> \times <var:F> \times <var:d> \times <var:a> = <nat:20160> $ and $ <var:F> $ , $ <var:s> $ , $ <var:a> $ , $ <var:w> $ and $ <var:d> $ are larger than or equivalent to <nat:2> is verified . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:five-composite> ( <var:g> : nat ) := exists <var:d> <var:w> <var:F> <var:s> <var:a> : nat , ( <var:a> * <var:d> * <var:w> * <var:s> * <var:F> = <var:g> ) /\ ( <var:a> >= <nat:2> ) /\ ( <var:F> >= <nat:2> ) /\ ( <var:s> >= <nat:2> ) /\ ( <var:d> >= <nat:2> ) /\ ( <var:w> >= <nat:2> ) . Theorem <genP:1> : <def:five-composite> <nat:20160> . Proof . unfold <def:five-composite> . exists <nat:7> . exists <nat:10> . exists <nat:3> . exists <nat:8> . exists <nat:12> . assert ( <genH> : <nat:8> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:12> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:3> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:7> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:10> >= <nat:2> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 