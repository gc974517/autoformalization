\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} The positive integer <nat:57657600> is the product of numbers $ <var:m> $ , $ <var:F> $ , $ <var:q> $ , $ <var:B> $ , $ <var:P> $ , $ <var:y> $ , $ <var:J> $ , $ <var:u> $ , $ <var:C> $ , and $ <var:v> \in \mathbb{Z}^+ $ so that $ <var:P> $ , $ <var:C> $ , $ <var:F> $ , $ <var:u> $ , $ <var:J> $ , $ <var:q> $ , $ <var:m> $ , $ <var:B> $ , $ <var:y> $ , $ <var:v> > <nat:1> $ . \end{theorem} \begin{proof} Take $ <var:B> = <nat:7> $ , $ <var:P> = <nat:5> $ , $ <var:q> = <nat:11> $ , $ <var:u> = <nat:2> $ , $ <var:y> = <nat:8> $ , $ <var:C> = <nat:13> $ , $ <var:F> = <nat:6> $ , $ <var:J> = <nat:4> $ , $ <var:v> = <nat:3> $ , and $ <var:m> = <nat:10> $ . Note that $ <nat:6> $ , $ <nat:2> $ , $ <nat:8> $ , $ <nat:5> $ , $ <nat:4> $ , $ <nat:11> $ , $ <nat:10> $ , $ <nat:13> $ , $ <nat:3> $ , $ <nat:7> > <nat:1> $ . Further notice that further $ <nat:11> * <nat:3> * <nat:5> * <nat:10> * <nat:8> * <nat:7> * <nat:13> * <nat:6> * <nat:2> * <nat:4> = <nat:57657600> $ . \end{proof} \end{document} 
~
Require Import Lia . Theorem <genP:1> : exists <var:m> <var:F> <var:q> <var:B> <var:P> <var:y> <var:J> <var:u> <var:C> <var:v> : nat , ( <nat:57657600> = <var:m> * <var:F> * <var:q> * <var:B> * <var:P> * <var:y> * <var:J> * <var:u> * <var:C> * <var:v> ) /\ ( <var:P> > <nat:1> ) /\ ( <var:C> > <nat:1> ) /\ ( <var:F> > <nat:1> ) /\ ( <var:u> > <nat:1> ) /\ ( <var:J> > <nat:1> ) /\ ( <var:q> > <nat:1> ) /\ ( <var:m> > <nat:1> ) /\ ( <var:B> > <nat:1> ) /\ ( <var:y> > <nat:1> ) /\ ( <var:v> > <nat:1> ) . Proof . exists <nat:10> . exists <nat:6> . exists <nat:11> . exists <nat:7> . exists <nat:5> . exists <nat:8> . exists <nat:4> . exists <nat:2> . exists <nat:13> . exists <nat:3> . assert ( <genH> : <nat:6> > <nat:1> ) . { lia . } assert ( <genH> : <nat:2> > <nat:1> ) . { lia . } assert ( <genH> : <nat:8> > <nat:1> ) . { lia . } assert ( <genH> : <nat:5> > <nat:1> ) . { lia . } assert ( <genH> : <nat:4> > <nat:1> ) . { lia . } assert ( <genH> : <nat:11> > <nat:1> ) . { lia . } assert ( <genH> : <nat:10> > <nat:1> ) . { lia . } assert ( <genH> : <nat:13> > <nat:1> ) . { lia . } assert ( <genH> : <nat:3> > <nat:1> ) . { lia . } assert ( <genH> : <nat:7> > <nat:1> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 