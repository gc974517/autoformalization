\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:420> <var:A> + <var:d> <nat:442> + <var:w> <nat:86> + <var:z> <nat:324> + <var:C> <nat:490> + <nat:489> + <nat:444> <var:I> + <var:R> <nat:330> $ is odd for all $ <var:I> $ , $ <var:A> $ , $ <var:R> $ , $ <var:d> $ , $ <var:C> $ , $ <var:z> $ , and $ <var:w> $ . \end{theorem} \begin{proof} Recall the formula $ <var:I> * <nat:444> + <var:A> * <nat:420> + <nat:490> * <var:C> + <nat:86> * <var:w> + <var:d> * <nat:442> + <var:z> * <nat:324> + <var:R> * <nat:330> $ is obviously even . Adding on , the terms $ <var:I> \times <nat:444> $ , $ <nat:420> \times <var:A> $ , $ <nat:490> \times <var:C> $ , $ <var:w> \times <nat:86> $ , $ <var:d> \times <nat:442> $ , $ <var:z> \times <nat:324> $ , and $ <nat:330> \times <var:R> $ are clearly even from the fact the numbers $ <nat:444> $ , $ <nat:420> $ , $ <nat:490> $ , $ <nat:86> $ , $ <nat:442> $ , $ <nat:324> $ , and also $ <nat:330> $ are obviously even . By reason that the summing between an even number with even numbers must be an even positive integer , our lemma must be true . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:I> <var:A> <var:R> <var:d> <var:C> <var:z> <var:w> : nat , Nat . odd ( <nat:420> * <var:A> + <nat:442> * <var:d> + <nat:86> * <var:w> + <nat:324> * <var:z> + <nat:490> * <var:C> + <nat:444> * <var:I> + <nat:330> * <var:R> + <nat:489> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:444> = true ) . { auto . } assert ( <genH> : Nat . even <nat:420> = true ) . { auto . } assert ( <genH> : Nat . even <nat:490> = true ) . { auto . } assert ( <genH> : Nat . even <nat:86> = true ) . { auto . } assert ( <genH> : Nat . even <nat:442> = true ) . { auto . } assert ( <genH> : Nat . even <nat:324> = true ) . { auto . } assert ( <genH> : Nat . even <nat:330> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:444> * <var:I> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:420> * <var:A> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:490> * <var:C> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:86> * <var:w> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:442> * <var:d> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:324> * <var:z> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:330> * <var:R> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:420> * <var:A> + <nat:442> * <var:d> + <nat:86> * <var:w> + <nat:324> * <var:z> + <nat:490> * <var:C> + <nat:444> * <var:I> + <nat:330> * <var:R> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . auto . Qed . 