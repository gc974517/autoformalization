\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} With all integers $ <var:T> $ , $ <var:v> $ , $ <var:C> $ , $ <var:l> $ , $ <var:q> $ , $ <var:k> $ , $ <var:x> $ , and $ <var:m> $ the expression $ <var:k> <nat:270> + <var:m> <nat:288> + <var:v> <nat:398> + <nat:482> <var:q> + <var:T> <nat:460> + <nat:138> <var:C> + <var:l> <nat:322> + <nat:108> <var:x> + <nat:390> $ will be even . \end{theorem} \begin{proof} We work with the assumption the understanding the sum $ <var:k> * <nat:270> + <nat:138> * <var:C> + <nat:482> * <var:q> + <nat:398> * <var:v> + <nat:288> * <var:m> + <nat:390> + <var:x> * <nat:108> + <var:l> * <nat:322> + <nat:460> * <var:T> $ is known as even because the sum $ <nat:460> * <var:T> + <var:m> * <nat:288> + <nat:398> * <var:v> + <var:k> * <nat:270> + <nat:482> * <var:q> + <var:C> * <nat:138> + <nat:322> * <var:l> + <var:x> * <nat:108> $ is guaranteed to be even . What's more , observe the coefficients $ <nat:460> $ , $ <nat:288> $ , $ <nat:398> $ , $ <nat:270> $ , $ <nat:482> $ , $ <nat:138> $ , $ <nat:322> $ , and moreover $ <nat:108> $ will be even naturals . Hence , the products $ <var:T> <nat:460> $ , $ <nat:288> <var:m> $ , $ <nat:398> <var:v> $ , $ <var:k> <nat:270> $ , $ <nat:482> <var:q> $ , $ <nat:138> <var:C> $ , $ <nat:322> <var:l> $ , and $ <var:x> <nat:108> $ is even additionally . The formula $ <var:x> * <nat:108> + <var:v> * <nat:398> + <nat:322> * <var:l> + <var:k> * <nat:270> + <nat:482> * <var:q> + <var:m> * <nat:288> + <var:T> * <nat:460> + <var:C> * <nat:138> $ is guaranteed to be even from the fact taking the product of even naturals and a integer is guaranteed to be even . Notice that $ <nat:390> $ is trivially even . The totaling between even natural numbers successively is guaranteed to be an even number . Thus , the proposition holds . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:T> <var:v> <var:C> <var:l> <var:q> <var:k> <var:x> <var:m> : nat , Nat . even ( <nat:270> * <var:k> + <nat:288> * <var:m> + <nat:398> * <var:v> + <nat:482> * <var:q> + <nat:460> * <var:T> + <nat:138> * <var:C> + <nat:322> * <var:l> + <nat:108> * <var:x> + <nat:390> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:460> = true ) . { auto . } assert ( <genH> : Nat . even <nat:288> = true ) . { auto . } assert ( <genH> : Nat . even <nat:398> = true ) . { auto . } assert ( <genH> : Nat . even <nat:270> = true ) . { auto . } assert ( <genH> : Nat . even <nat:482> = true ) . { auto . } assert ( <genH> : Nat . even <nat:138> = true ) . { auto . } assert ( <genH> : Nat . even <nat:322> = true ) . { auto . } assert ( <genH> : Nat . even <nat:108> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:460> * <var:T> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:288> * <var:m> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:398> * <var:v> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:270> * <var:k> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:482> * <var:q> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:138> * <var:C> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:322> * <var:l> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:108> * <var:x> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:270> * <var:k> + <nat:288> * <var:m> + <nat:398> * <var:v> + <nat:482> * <var:q> + <nat:460> * <var:T> + <nat:138> * <var:C> + <nat:322> * <var:l> + <nat:108> * <var:x> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:390> = true ) . { auto . } rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . auto . Qed . 