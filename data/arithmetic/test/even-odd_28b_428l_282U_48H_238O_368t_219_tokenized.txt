\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Given all unknowns $ <var:U> $ , $ <var:H> $ , $ <var:b> $ , $ <var:t> $ , $ <var:O> $ , and $ <var:l> $ the formula $ <nat:238> <var:O> + <var:b> <nat:28> + <nat:282> <var:U> + <nat:368> <var:t> + <nat:219> + <var:H> <nat:48> + <var:l> <nat:428> $ must be odd . \end{theorem} \begin{proof} The summation $ <var:b> * <nat:28> + <nat:428> * <var:l> + <nat:282> * <var:U> + <var:H> * <nat:48> + <var:O> * <nat:238> + <nat:368> * <var:t> $ is even , since the summation between even integers together with an even number in $ \mathbb{Z}^+ $ will be even . Additionally , the leading terms $ <nat:28> $ , $ <nat:428> $ , $ <nat:282> $ , $ <nat:48> $ , $ <nat:238> $ , additionally $ <nat:368> $ are obviously even numbers . For this reason , the products $ <var:b> <nat:28> $ , $ <nat:428> <var:l> $ , $ <var:U> <nat:282> $ , $ <nat:48> <var:H> $ , $ <var:O> <nat:238> $ , and likewise $ <nat:368> <var:t> $ is even as well . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:U> <var:H> <var:b> <var:t> <var:O> <var:l> : nat , Nat . odd ( <nat:238> * <var:O> + <nat:28> * <var:b> + <nat:282> * <var:U> + <nat:368> * <var:t> + <nat:48> * <var:H> + <nat:428> * <var:l> + <nat:219> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:28> = true ) . { auto . } assert ( <genH> : Nat . even <nat:428> = true ) . { auto . } assert ( <genH> : Nat . even <nat:282> = true ) . { auto . } assert ( <genH> : Nat . even <nat:48> = true ) . { auto . } assert ( <genH> : Nat . even <nat:238> = true ) . { auto . } assert ( <genH> : Nat . even <nat:368> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:28> * <var:b> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:428> * <var:l> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:282> * <var:U> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:48> * <var:H> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:238> * <var:O> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:368> * <var:t> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:238> * <var:O> + <nat:28> * <var:b> + <nat:282> * <var:U> + <nat:368> * <var:t> + <nat:48> * <var:H> + <nat:428> * <var:l> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . auto . Qed . 