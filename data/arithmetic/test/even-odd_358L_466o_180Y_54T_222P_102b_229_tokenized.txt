\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Given every positive numbers $ <var:T> $ , $ <var:b> $ , $ <var:o> $ , $ <var:P> $ , $ <var:L> $ , and $ <var:Y> $ $ <nat:222> * <var:P> + <var:L> * <nat:358> + <var:Y> * <nat:180> + <var:b> * <nat:102> + <nat:54> * <var:T> + <var:o> * <nat:466> + <nat:229> $ must be odd . \end{theorem} \begin{proof} The formula $ <nat:54> <var:T> + <var:Y> <nat:180> + <nat:222> <var:P> + <var:b> <nat:102> + <nat:466> <var:o> + <var:L> <nat:358> $ is known to be even . We know that the pair $ <nat:222> <var:P> $ is obviously even . This fact must be true as a consequence that the multiplication between an even element of $ \mathbb{Z}^+ $ and an arbitrary positive integer is guaranteed to be even . Notice that the products $ <nat:102> <var:b> $ , $ <var:o> <nat:466> $ , $ <var:L> <nat:358> $ , and likewise $ <nat:54> <var:T> $ must be even . The product $ <var:Y> <nat:180> $ is even . This is proven because the multiplication between an even positive integer with an arbitrary natural will be even . The summation $ <var:L> \times <nat:358> + <var:o> \times <nat:466> + <var:Y> \times <nat:180> + <nat:54> \times <var:T> + <nat:222> \times <var:P> + <var:b> \times <nat:102> $ must be even since taking the product of even whole numbers and any element of $ \mathbb{Z}^+ $ is guaranteed to be even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:T> <var:b> <var:o> <var:P> <var:L> <var:Y> : nat , Nat . odd ( <nat:222> * <var:P> + <nat:358> * <var:L> + <nat:180> * <var:Y> + <nat:102> * <var:b> + <nat:54> * <var:T> + <nat:466> * <var:o> + <nat:229> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:222> * <var:P> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:102> * <var:b> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:466> * <var:o> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:358> * <var:L> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:54> * <var:T> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:180> * <var:Y> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:222> * <var:P> + <nat:358> * <var:L> + <nat:180> * <var:Y> + <nat:102> * <var:b> + <nat:54> * <var:T> + <nat:466> * <var:o> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . auto . Qed . 