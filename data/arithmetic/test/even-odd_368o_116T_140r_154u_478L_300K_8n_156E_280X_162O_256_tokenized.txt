\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:162> <var:O> + <nat:256> + <nat:368> <var:o> + <nat:116> <var:T> + <var:n> <nat:8> + <var:r> <nat:140> + <nat:154> <var:u> + <var:L> <nat:478> + <nat:156> <var:E> + <nat:280> <var:X> + <nat:300> <var:K> $ will be even . \end{theorem} \begin{proof} This lemma must be true because $ <var:o> <nat:368> + <var:T> <nat:116> + <nat:140> <var:r> + <var:u> <nat:154> + <var:L> <nat:478> + <nat:300> <var:K> + <var:n> <nat:8> + <var:E> <nat:156> + <var:X> <nat:280> + <var:O> <nat:162> $ is obviously even . The product $ <var:r> * <nat:140> $ is guaranteed to be an even whole number . Furthermore , remember the terms $ <var:X> * <nat:280> $ , $ <nat:162> * <var:O> $ , $ <nat:154> * <var:u> $ , $ <nat:300> * <var:K> $ , $ <var:o> * <nat:368> $ , $ <nat:156> * <var:E> $ , $ <var:n> * <nat:8> $ , and also $ <var:T> * <nat:116> $ are obviously even . Adding on , the product $ <var:L> * <nat:478> $ is obviously an even natural number since the product of an even element of $ \mathbb{N} $ with an arbitrary integer must be an even integer . Notice the summation of even whole numbers together with an even natural number is even . See $ <nat:256> $ is known as an even element of $ \mathbb{N} $ . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:O> <var:o> <var:T> <var:n> <var:r> <var:u> <var:L> <var:E> <var:X> <var:K> : nat , Nat . even ( <nat:162> * <var:O> + <nat:368> * <var:o> + <nat:116> * <var:T> + <nat:8> * <var:n> + <nat:140> * <var:r> + <nat:154> * <var:u> + <nat:478> * <var:L> + <nat:156> * <var:E> + <nat:280> * <var:X> + <nat:300> * <var:K> + <nat:256> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:140> * <var:r> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:280> * <var:X> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:162> * <var:O> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:154> * <var:u> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:300> * <var:K> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:368> * <var:o> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:156> * <var:E> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:8> * <var:n> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:116> * <var:T> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:478> * <var:L> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:162> * <var:O> + <nat:368> * <var:o> + <nat:116> * <var:T> + <nat:8> * <var:n> + <nat:140> * <var:r> + <nat:154> * <var:u> + <nat:478> * <var:L> + <nat:156> * <var:E> + <nat:280> * <var:X> + <nat:300> * <var:K> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . even_add . assert ( <genH> : Nat . even <nat:256> = true ) . { auto . } rewrite <genH> . rewrite <genH> . auto . Qed . 