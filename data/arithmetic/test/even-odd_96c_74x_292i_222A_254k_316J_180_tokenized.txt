\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:i> <nat:292> + <nat:316> <var:J> + <nat:180> + <nat:254> <var:k> + <nat:74> <var:x> + <nat:222> <var:A> + <nat:96> <var:c> $ is guaranteed to be even using some unknowns $ <var:A> $ , $ <var:k> $ , $ <var:J> $ , $ <var:i> $ , $ <var:c> $ , and $ <var:x> $ . \end{theorem} \begin{proof} The pairs $ <var:i> <nat:292> $ , $ <nat:316> <var:J> $ , $ <var:k> <nat:254> $ , $ <var:x> <nat:74> $ , $ <nat:222> <var:A> $ , and moreover $ <nat:96> <var:c> $ are even from the fact multiplying between an even natural and a natural number is even as well as the positive integers $ <nat:292> $ , $ <nat:316> $ , $ <nat:254> $ , $ <nat:74> $ , $ <nat:222> $ , in addition to $ <nat:96> $ are trivially even . See that $ <nat:180> $ is trivially an even natural . It can be demonstrated that the sum $ <nat:96> \times <var:c> + <var:x> \times <nat:74> + <nat:180> + <var:i> \times <nat:292> + <var:A> \times <nat:222> + <var:k> \times <nat:254> + <var:J> \times <nat:316> $ is even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:A> <var:k> <var:J> <var:i> <var:c> <var:x> : nat , Nat . even ( <nat:292> * <var:i> + <nat:316> * <var:J> + <nat:254> * <var:k> + <nat:74> * <var:x> + <nat:222> * <var:A> + <nat:96> * <var:c> + <nat:180> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:292> = true ) . { auto . } assert ( <genH> : Nat . even <nat:316> = true ) . { auto . } assert ( <genH> : Nat . even <nat:254> = true ) . { auto . } assert ( <genH> : Nat . even <nat:74> = true ) . { auto . } assert ( <genH> : Nat . even <nat:222> = true ) . { auto . } assert ( <genH> : Nat . even <nat:96> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:292> * <var:i> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:316> * <var:J> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:254> * <var:k> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:74> * <var:x> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:222> * <var:A> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:96> * <var:c> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:180> = true ) . { auto . } repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 