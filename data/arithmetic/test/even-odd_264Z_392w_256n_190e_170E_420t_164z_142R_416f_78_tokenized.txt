\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:142> \cdot <var:R> + <var:f> \cdot <nat:416> + <nat:78> + <var:E> \cdot <nat:170> + <nat:264> \cdot <var:Z> + <nat:256> \cdot <var:n> + <var:z> \cdot <nat:164> + <nat:392> \cdot <var:w> + <nat:190> \cdot <var:e> + <var:t> \cdot <nat:420> $ will be even . \end{theorem} \begin{proof} We use the assumption the understanding that the summation $ <var:e> \times <nat:190> + <nat:392> \times <var:w> + <var:R> \times <nat:142> + <nat:164> \times <var:z> + <nat:420> \times <var:t> + <nat:170> \times <var:E> + <var:f> \times <nat:416> + <nat:264> \times <var:Z> + <nat:256> \times <var:n> $ is even . Notice that the integers $ <nat:170> $ , $ <nat:142> $ , $ <nat:164> $ , $ <nat:416> $ , $ <nat:190> $ , $ <nat:256> $ , $ <nat:420> $ , additionally $ <nat:392> $ are obviously even numbers in $ \mathbb{Z}^+ $ . As a consequence , the terms $ <nat:170> \cdot <var:E> $ , $ <var:R> \cdot <nat:142> $ , $ <nat:164> \cdot <var:z> $ , $ <nat:416> \cdot <var:f> $ , $ <nat:190> \cdot <var:e> $ , $ <var:n> \cdot <nat:256> $ , $ <nat:420> \cdot <var:t> $ , as well as $ <var:w> \cdot <nat:392> $ is even in addition . Adding on , the leading term $ <nat:264> $ is an even integer . For this reason , the pair $ <nat:264> \cdot <var:Z> $ must be even as well . From the knowledge the adding between even integers and an even positive integer must be an even element of $ \mathbb{Z}^+ $ , and also as a consequence that the product between even whole numbers and some number in $ \mathbb{N} $ must be even . It can be proven that the result is proven . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:R> <var:f> <var:E> <var:Z> <var:n> <var:z> <var:w> <var:e> <var:t> : nat , Nat . even ( <nat:142> * <var:R> + <nat:416> * <var:f> + <nat:170> * <var:E> + <nat:264> * <var:Z> + <nat:256> * <var:n> + <nat:164> * <var:z> + <nat:392> * <var:w> + <nat:190> * <var:e> + <nat:420> * <var:t> + <nat:78> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:170> = true ) . { auto . } assert ( <genH> : Nat . even <nat:142> = true ) . { auto . } assert ( <genH> : Nat . even <nat:164> = true ) . { auto . } assert ( <genH> : Nat . even <nat:416> = true ) . { auto . } assert ( <genH> : Nat . even <nat:190> = true ) . { auto . } assert ( <genH> : Nat . even <nat:256> = true ) . { auto . } assert ( <genH> : Nat . even <nat:420> = true ) . { auto . } assert ( <genH> : Nat . even <nat:392> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:170> * <var:E> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:142> * <var:R> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:164> * <var:z> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:416> * <var:f> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:190> * <var:e> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:256> * <var:n> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:420> * <var:t> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:392> * <var:w> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:264> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:264> * <var:Z> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:142> * <var:R> + <nat:416> * <var:f> + <nat:170> * <var:E> + <nat:264> * <var:Z> + <nat:256> * <var:n> + <nat:164> * <var:z> + <nat:392> * <var:w> + <nat:190> * <var:e> + <nat:420> * <var:t> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . even_add . rewrite <genH> . auto . Qed . 