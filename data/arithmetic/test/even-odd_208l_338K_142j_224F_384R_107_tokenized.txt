\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:F> <nat:224> + <var:j> <nat:142> + <nat:338> <var:K> + <nat:208> <var:l> + <var:R> <nat:384> + <nat:107> $ will be odd taking unknowns $ <var:j> $ , $ <var:R> $ , $ <var:F> $ , $ <var:K> $ , and $ <var:l> $ . \end{theorem} \begin{proof} The number $ <nat:208> $ is clearly even . Then , the pair $ <nat:208> \cdot <var:l> $ is guaranteed to be even also . The leading term $ <nat:338> $ is clearly even . Then , the pair $ <var:K> \cdot <nat:338> $ will be even in addition . Take note the coefficient $ <nat:142> $ is known as even . So , the product $ <nat:142> \cdot <var:j> $ is even as well . What's more , the integer $ <nat:224> $ is known as an even whole number . Then , the product $ <nat:224> \cdot <var:F> $ is even too . What's more , recall that $ <nat:384> \cdot <var:R> $ is clearly even from the knowledge multiplying of an even whole number and any element of $ \mathbb{N} $ will be an even number in $ \mathbb{Z}^+ $ . This fact is true from the knowledge the integer $ <nat:384> $ is obviously by definition an even number . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:j> <var:R> <var:F> <var:K> <var:l> : nat , Nat . odd ( <nat:224> * <var:F> + <nat:142> * <var:j> + <nat:338> * <var:K> + <nat:208> * <var:l> + <nat:384> * <var:R> + <nat:107> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:208> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:208> * <var:l> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:338> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:338> * <var:K> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:142> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:142> * <var:j> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:224> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:224> * <var:F> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:384> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:384> * <var:R> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 