\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:12> \times <var:Z> + <nat:248> \times <var:J> + <var:L> \times <nat:190> + <nat:390> \times <var:A> + <var:v> \times <nat:330> + <var:e> \times <nat:64> + <var:T> \times <nat:198> + <nat:478> \times <var:H> + <var:r> \times <nat:172> + <nat:191> $ is odd . \end{theorem} \begin{proof} We justify that the expression $ <var:e> * <nat:64> + <nat:478> * <var:H> + <nat:191> + <var:L> * <nat:190> + <var:J> * <nat:248> + <var:T> * <nat:198> + <var:A> * <nat:390> + <var:r> * <nat:172> + <var:Z> * <nat:12> + <var:v> * <nat:330> $ is known as odd since the expression $ <nat:190> * <var:L> + <var:v> * <nat:330> + <var:Z> * <nat:12> + <var:A> * <nat:390> + <nat:478> * <var:H> + <nat:64> * <var:e> + <var:T> * <nat:198> + <var:r> * <nat:172> + <nat:248> * <var:J> $ is clearly even . $ <nat:64> <var:e> + <nat:12> <var:Z> + <var:v> <nat:330> + <nat:478> <var:H> + <var:J> <nat:248> + <var:T> <nat:198> + <var:L> <nat:190> + <var:r> <nat:172> + <nat:390> <var:A> $ is guaranteed to be even by reason that the summing between an even natural number and even numbers will be an even number . We know that $ <nat:191> $ is trivially an odd natural . We know that the totaling of even elements of $ \mathbb{N} $ with an odd number will be odd . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:Z> <var:J> <var:L> <var:A> <var:v> <var:e> <var:T> <var:H> <var:r> : nat , Nat . odd ( <nat:12> * <var:Z> + <nat:248> * <var:J> + <nat:190> * <var:L> + <nat:390> * <var:A> + <nat:330> * <var:v> + <nat:64> * <var:e> + <nat:198> * <var:T> + <nat:478> * <var:H> + <nat:172> * <var:r> + <nat:191> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:12> * <var:Z> + <nat:248> * <var:J> + <nat:190> * <var:L> + <nat:390> * <var:A> + <nat:330> * <var:v> + <nat:64> * <var:e> + <nat:198> * <var:T> + <nat:478> * <var:H> + <nat:172> * <var:r> ) = true ) . { repeat rewrite Nat . even_add . repeat rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . odd <nat:191> = true ) . { auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . rewrite <genH> . auto . Qed . 