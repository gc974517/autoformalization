\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \newtheorem{definition}{Definition} \begin{document} \begin{definition} Define that $ <var:y> $ is a <def:five-composite> whole number assuming that given some $ <var:C> $ , $ <var:Y> $ , $ <var:q> $ , $ <var:h> $ , $ <var:B> \in \mathbb{N} $ we get $ <var:h> \times <var:C> \times <var:B> \times <var:q> \times <var:Y> = <var:y> $ given $ <var:y> \in \mathbb{N} $ and so that $ <var:h> $ , $ <var:q> $ , $ <var:B> $ , $ <var:Y> $ , $ <var:C> \geq <nat:2> $ . \end{definition} \begin{theorem} $ <var:y> = <nat:85800> $ is a <def:five-composite> positive integer . \end{theorem} \begin{proof} Remember that <nat:85800> is a <def:five-composite> positive integer assuming <nat:85800> is the multiplication of positive integers $ <var:q> $ , $ <var:h> $ , $ <var:B> $ , $ <var:Y> $ , and $ <var:C> $ greater than or equivalent to <nat:2> . Allow $ <var:q> = <nat:13> $ , $ <var:h> = <nat:11> $ , $ <var:B> = <nat:10> $ , $ <var:C> = <nat:12> $ , $ <var:Y> = <nat:5> $ . Similarly observe $ <nat:5> $ , $ <nat:10> $ , $ <nat:12> $ , $ <nat:13> $ and $ <nat:11> \geq <nat:2> $ . This hints the formula is true . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:five-composite> ( <var:y> : nat ) := exists <var:C> <var:Y> <var:q> <var:h> <var:B> : nat , ( <var:h> * <var:C> * <var:B> * <var:q> * <var:Y> = <var:y> ) /\ ( <var:h> >= <nat:2> ) /\ ( <var:q> >= <nat:2> ) /\ ( <var:B> >= <nat:2> ) /\ ( <var:Y> >= <nat:2> ) /\ ( <var:C> >= <nat:2> ) . Theorem <genP:1> : <def:five-composite> <nat:85800> . Proof . unfold <def:five-composite> . exists <nat:12> . exists <nat:5> . exists <nat:13> . exists <nat:11> . exists <nat:10> . assert ( <genH> : <nat:5> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:10> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:12> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:13> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:11> >= <nat:2> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 