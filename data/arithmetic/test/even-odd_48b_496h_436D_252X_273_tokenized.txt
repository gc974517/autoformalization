\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:48> \times <var:b> + <var:X> \times <nat:252> + <nat:436> \times <var:D> + <nat:273> + <var:h> \times <nat:496> $ is guaranteed to be odd . \end{theorem} \begin{proof} It can be checked that the theorem must be true . Our main result is proven by reason that $ <var:b> <nat:48> + <var:h> <nat:496> + <nat:436> <var:D> + <nat:252> <var:X> $ is known as even . Additionally , the whole numbers $ <nat:48> $ , $ <nat:496> $ , $ <nat:436> $ , and $ <nat:252> $ are trivially even . Therefore , the terms $ <nat:48> \times <var:b> $ , $ <nat:496> \times <var:h> $ , $ <nat:436> \times <var:D> $ , and also $ <nat:252> \times <var:X> $ must be even at the same time . As a consequence that multiplying of an even number in $ \mathbb{Z}^+ $ and a natural number will be by itself an even element of $ \mathbb{N} $ the theorem holds . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:b> <var:X> <var:D> <var:h> : nat , Nat . odd ( <nat:48> * <var:b> + <nat:252> * <var:X> + <nat:436> * <var:D> + <nat:496> * <var:h> + <nat:273> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:48> = true ) . { auto . } assert ( <genH> : Nat . even <nat:496> = true ) . { auto . } assert ( <genH> : Nat . even <nat:436> = true ) . { auto . } assert ( <genH> : Nat . even <nat:252> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:48> * <var:b> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:496> * <var:h> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:436> * <var:D> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:252> * <var:X> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:48> * <var:b> + <nat:252> * <var:X> + <nat:436> * <var:D> + <nat:496> * <var:h> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . auto . Qed . 