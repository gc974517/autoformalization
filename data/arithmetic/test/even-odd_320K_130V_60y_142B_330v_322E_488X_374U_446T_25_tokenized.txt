\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:446> \times <var:T> + <nat:60> \times <var:y> + <var:E> \times <nat:322> + <var:K> \times <nat:320> + <var:X> \times <nat:488> + <var:V> \times <nat:130> + <nat:142> \times <var:B> + <var:v> \times <nat:330> + <nat:374> \times <var:U> + <nat:25> $ will be odd with any natural numbers $ <var:K> $ , $ <var:V> $ , $ <var:T> $ , $ <var:B> $ , $ <var:y> $ , $ <var:U> $ , $ <var:X> $ , $ <var:v> $ , and $ <var:E> $ . \end{theorem} \begin{proof} It can be verified that the summation $ <var:V> \cdot <nat:130> + <nat:142> \cdot <var:B> + <var:E> \cdot <nat:322> + <nat:320> \cdot <var:K> + <nat:374> \cdot <var:U> + <var:y> \cdot <nat:60> + <nat:488> \cdot <var:X> + <var:v> \cdot <nat:330> + <nat:25> + <nat:446> \cdot <var:T> $ is guaranteed to be odd . Take note that the adding between an even natural and an odd natural number is an odd number . Remember that $ <nat:25> $ is known to be an odd element of $ \mathbb{N} $ . Our claim is proven since $ <var:K> <nat:320> + <nat:130> <var:V> + <nat:60> <var:y> + <nat:142> <var:B> + <nat:330> <var:v> + <nat:322> <var:E> + <nat:488> <var:X> + <nat:374> <var:U> + <nat:446> <var:T> $ is known to be even . The terms $ <var:v> <nat:330> $ , $ <var:y> <nat:60> $ , $ <var:V> <nat:130> $ , as well as $ <nat:320> <var:K> $ are guaranteed to be even . Notice the term $ <var:T> <nat:446> $ is guaranteed to be even . Likewise , the pairs $ <var:X> <nat:488> $ additionally $ <nat:322> <var:E> $ are known as even . This holds since the product between an even number in $ \mathbb{N} $ with any whole number must be by its very nature an even natural . In addition to this , the term $ <nat:142> <var:B> $ is known as an even natural number because the multiplication of an even number in $ \mathbb{N} $ with any element of $ \mathbb{Z}^+ $ is guaranteed to be an even number . In addition , $ <var:U> <nat:374> $ is clearly even because multiplying between an even positive integer and any natural number must be an even number in $ \mathbb{N} $ . The claim is proven because multiplying of an even whole number with a element of $ \mathbb{Z}^+ $ must be even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:K> <var:V> <var:T> <var:B> <var:y> <var:U> <var:X> <var:v> <var:E> : nat , Nat . odd ( <nat:446> * <var:T> + <nat:60> * <var:y> + <nat:322> * <var:E> + <nat:320> * <var:K> + <nat:488> * <var:X> + <nat:130> * <var:V> + <nat:142> * <var:B> + <nat:330> * <var:v> + <nat:374> * <var:U> + <nat:25> ) = true . Proof . intros . rewrite Nat . odd_add . assert ( <genH> : Nat . odd <nat:25> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:330> * <var:v> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:60> * <var:y> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:130> * <var:V> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:320> * <var:K> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:446> * <var:T> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:488> * <var:X> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:322> * <var:E> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:142> * <var:B> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:374> * <var:U> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:446> * <var:T> + <nat:60> * <var:y> + <nat:322> * <var:E> + <nat:320> * <var:K> + <nat:488> * <var:X> + <nat:130> * <var:V> + <nat:142> * <var:B> + <nat:330> * <var:v> + <nat:374> * <var:U> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite <- Nat . negb_even . rewrite <genH> . rewrite <genH> . auto . Qed . 