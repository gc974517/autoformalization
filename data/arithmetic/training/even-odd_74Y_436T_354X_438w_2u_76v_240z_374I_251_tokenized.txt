\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:374> <var:I> + <var:z> <nat:240> + <nat:74> <var:Y> + <nat:76> <var:v> + <var:w> <nat:438> + <nat:2> <var:u> + <nat:251> + <var:T> <nat:436> + <nat:354> <var:X> $ is guaranteed to be odd . \end{theorem} \begin{proof} This claim is proven from the fact $ <nat:354> \times <var:X> + <nat:436> \times <var:T> + <var:w> \times <nat:438> + <nat:2> \times <var:u> + <nat:74> \times <var:Y> + <var:I> \times <nat:374> + <var:z> \times <nat:240> + <var:v> \times <nat:76> $ is guaranteed to be even . The integers $ <nat:74> $ , $ <nat:374> $ , $ <nat:240> $ , $ <nat:76> $ , as well as $ <nat:436> $ are obviously even . In consequence , the pairs $ <nat:74> \cdot <var:Y> $ , $ <nat:374> \cdot <var:I> $ , $ <nat:240> \cdot <var:z> $ , $ <var:v> \cdot <nat:76> $ , additionally $ <var:T> \cdot <nat:436> $ must be even in addition . On top of this , the product $ <var:X> \cdot <nat:354> $ is known to be an even number since multiplying between an even whole number with some natural will be even and the natural number $ <nat:354> $ is obviously trivially an even natural . Adding on , the pair $ <var:u> \cdot <nat:2> $ is known as even from the fact multiplying between an even element of $ \mathbb{Z}^+ $ with any number in $ \mathbb{Z}^+ $ is even . This fact holds from the fact the leading term $ <nat:2> $ is trivially an even number in $ \mathbb{Z}^+ $ . The coefficient $ <nat:438> $ is an even natural number . Consequently , the term $ <var:w> \cdot <nat:438> $ must be even in addition . Since the addition between even numbers in $ \mathbb{Z}^+ $ and even naturals must be even , the result is proven . See $ <nat:251> $ is trivially odd . The addition of an even natural with an odd number is guaranteed to be odd . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:I> <var:z> <var:Y> <var:v> <var:w> <var:u> <var:T> <var:X> : nat , Nat . odd ( <nat:374> * <var:I> + <nat:240> * <var:z> + <nat:74> * <var:Y> + <nat:76> * <var:v> + <nat:438> * <var:w> + <nat:2> * <var:u> + <nat:436> * <var:T> + <nat:354> * <var:X> + <nat:251> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:74> = true ) . { auto . } assert ( <genH> : Nat . even <nat:374> = true ) . { auto . } assert ( <genH> : Nat . even <nat:240> = true ) . { auto . } assert ( <genH> : Nat . even <nat:76> = true ) . { auto . } assert ( <genH> : Nat . even <nat:436> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:74> * <var:Y> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:374> * <var:I> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:240> * <var:z> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:76> * <var:v> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:436> * <var:T> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:354> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:354> * <var:X> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:2> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:2> * <var:u> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:438> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:438> * <var:w> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:374> * <var:I> + <nat:240> * <var:z> + <nat:74> * <var:Y> + <nat:76> * <var:v> + <nat:438> * <var:w> + <nat:2> * <var:u> + <nat:436> * <var:T> + <nat:354> * <var:X> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } assert ( <genH> : Nat . odd <nat:251> = true ) . { auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . rewrite <genH> . auto . Qed . 