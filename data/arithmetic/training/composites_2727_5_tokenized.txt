\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \newtheorem{definition}{Definition} \begin{document} \begin{definition} We assume that $ <var:a> $ is a <def:five-composite> whole number when with some $ <var:V> $ , $ <var:J> $ , $ <var:l> $ , $ <var:m> $ , $ <var:d> \in \mathbb{N} $ we have such that $ <var:m> $ , $ <var:d> $ , $ <var:l> $ , $ <var:V> $ and $ <var:J> > <nat:1> $ as well as given some $ <var:a> $ , $ <var:a> = <var:l> * <var:J> * <var:m> * <var:V> * <var:d> $ . \end{definition} \begin{theorem} The positive integer <nat:22680> is a <def:five-composite> number . \end{theorem} \begin{proof} Remember a <def:five-composite> integer is the product of $ <var:d> $ , $ <var:V> $ , $ <var:J> $ , $ <var:l> $ and $ <var:m> $ such that $ <var:d> $ , $ <var:J> $ , $ <var:l> $ , $ <var:V> $ , $ <var:m> > <nat:1> $ . We present the proposition is true considering $ <var:V> * <var:l> * <var:d> * <var:J> * <var:m> = <nat:22680> $ shows $ <var:V> = <nat:10> $ , $ <var:m> = <nat:12> $ , $ <var:d> = <nat:3> $ , $ <var:J> = <nat:9> $ and $ <var:l> = <nat:7> $ plus because $ <nat:9> $ , $ <nat:7> $ , $ <nat:10> $ , $ <nat:3> $ , and $ <nat:12> > <nat:1> $ . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:five-composite> ( <var:a> : nat ) := exists <var:V> <var:J> <var:l> <var:m> <var:d> : nat , ( <var:m> > <nat:1> ) /\ ( <var:d> > <nat:1> ) /\ ( <var:l> > <nat:1> ) /\ ( <var:V> > <nat:1> ) /\ ( <var:J> > <nat:1> ) /\ ( <var:a> = <var:l> * <var:J> * <var:m> * <var:V> * <var:d> ) . Theorem <genP:1> : <def:five-composite> <nat:22680> . Proof . unfold <def:five-composite> . exists <nat:10> . exists <nat:9> . exists <nat:7> . exists <nat:12> . exists <nat:3> . assert ( <genH> : <nat:9> > <nat:1> ) . { lia . } assert ( <genH> : <nat:7> > <nat:1> ) . { lia . } assert ( <genH> : <nat:10> > <nat:1> ) . { lia . } assert ( <genH> : <nat:3> > <nat:1> ) . { lia . } assert ( <genH> : <nat:12> > <nat:1> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 