\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Denote that granted that there exist $ <var:O> $ , $ <var:T> $ , $ <var:b> $ , $ <var:J> $ , $ <var:m> $ , $ <var:d> $ , $ <var:G> \in \mathbb{Z}^+ $ larger than <nat:1> . Assume that $ <var:W> \in \mathbb{N} $ will be considered as a <def:seven-composite> number if $ <var:W> = <var:b> \cdot <var:J> \cdot <var:m> \cdot <var:T> \cdot <var:d> \cdot <var:O> \cdot <var:G> $ . Then $ <var:W> = <nat:725760> $ is a <def:seven-composite> number . \end{theorem} \begin{proof} Recall a <def:seven-composite> number is the product between integers $ <var:O> $ , $ <var:T> $ , $ <var:G> $ , $ <var:b> $ , $ <var:m> $ , $ <var:d> $ , $ <var:J> $ greater than <nat:1> . Take $ <var:O> = <nat:4> $ , $ <var:G> = <nat:5> $ , $ <var:b> = <nat:6> $ , $ <var:m> = <nat:9> $ , $ <var:d> = <nat:12> $ , $ <var:J> = <nat:8> $ and $ <var:T> = <nat:7> $ . We confirm <nat:725760> is a <def:seven-composite> natural number . Notice that $ <nat:6> \times <nat:7> \times <nat:4> \times <nat:5> \times <nat:12> \times <nat:8> \times <nat:9> = <nat:725760> $ . Also notice $ <nat:6> $ , $ <nat:12> $ , $ <nat:7> $ , $ <nat:9> $ , $ <nat:8> $ , $ <nat:5> $ , $ <nat:4> $ are greater than <nat:1> . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:seven-composite> ( <var:W> : nat ) := exists <var:O> <var:T> <var:b> <var:J> <var:m> <var:d> <var:G> : nat , ( <var:O> > <nat:1> ) /\ ( <var:T> > <nat:1> ) /\ ( <var:b> > <nat:1> ) /\ ( <var:J> > <nat:1> ) /\ ( <var:m> > <nat:1> ) /\ ( <var:d> > <nat:1> ) /\ ( <var:G> > <nat:1> ) /\ ( <var:W> = <var:b> * <var:J> * <var:m> * <var:T> * <var:d> * <var:O> * <var:G> ) . Theorem <genP:1> : <def:seven-composite> <nat:725760> . Proof . unfold <def:seven-composite> . exists <nat:4> . exists <nat:7> . exists <nat:6> . exists <nat:8> . exists <nat:9> . exists <nat:12> . exists <nat:5> . assert ( <genH> : <nat:6> > <nat:1> ) . { lia . } assert ( <genH> : <nat:12> > <nat:1> ) . { lia . } assert ( <genH> : <nat:7> > <nat:1> ) . { lia . } assert ( <genH> : <nat:9> > <nat:1> ) . { lia . } assert ( <genH> : <nat:8> > <nat:1> ) . { lia . } assert ( <genH> : <nat:5> > <nat:1> ) . { lia . } assert ( <genH> : <nat:4> > <nat:1> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 