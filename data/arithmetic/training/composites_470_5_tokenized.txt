\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Take as given that $ <var:v> $ is a <def:five-composite> positive integer if for some $ <var:h> $ , $ <var:W> $ , $ <var:u> $ , $ <var:B> $ , $ <var:J> \in \mathbb{Z}^+ $ we get $ <var:B> * <var:W> * <var:u> * <var:h> * <var:J> = <var:v> $ given some integer $ <var:v> $ plus such that $ <var:u> $ , $ <var:J> $ , $ <var:W> $ , $ <var:h> $ , $ <var:B> \geq <nat:2> $ . Then the number <nat:36960> is a <def:five-composite> positive integer . \end{theorem} \begin{proof} Recollect that a <def:five-composite> positive integer is the product of $ <var:W> $ , $ <var:J> $ , $ <var:B> $ , $ <var:u> $ and $ <var:h> $ larger than or equivalent to <nat:2> . Allow $ <var:B> = <nat:11> $ , $ <var:h> = <nat:6> $ , $ <var:u> = <nat:10> $ , $ <var:W> = <nat:7> $ and $ <var:J> = <nat:8> $ . Note $ <var:h> * <var:W> * <var:J> * <var:u> * <var:B> = <nat:36960> $ . Additionally observe that $ <var:B> = <nat:11> $ , $ <var:h> = <nat:6> $ , $ <var:J> = <nat:8> $ , $ <var:W> = <nat:7> $ , and $ <var:u> = <nat:10> \geq <nat:2> $ . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:five-composite> ( <var:v> : nat ) := exists <var:h> <var:W> <var:u> <var:B> <var:J> : nat , ( <var:B> * <var:W> * <var:u> * <var:h> * <var:J> = <var:v> ) /\ ( <var:u> >= <nat:2> ) /\ ( <var:J> >= <nat:2> ) /\ ( <var:W> >= <nat:2> ) /\ ( <var:h> >= <nat:2> ) /\ ( <var:B> >= <nat:2> ) . Theorem <genP:1> : <def:five-composite> <nat:36960> . Proof . unfold <def:five-composite> . exists <nat:6> . exists <nat:7> . exists <nat:10> . exists <nat:11> . exists <nat:8> . assert ( <genH> : <nat:11> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:6> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:8> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:7> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:10> >= <nat:2> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 