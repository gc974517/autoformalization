\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:390> * <var:j> + <nat:330> * <var:D> + <nat:40> * <var:x> + <var:a> * <nat:294> + <nat:142> * <var:h> + <var:l> * <nat:498> + <nat:424> * <var:A> + <var:K> * <nat:118> + <nat:363> $ must be odd . \end{theorem} \begin{proof} Take note that the products $ <nat:390> <var:j> $ , $ <nat:330> <var:D> $ , $ <nat:40> <var:x> $ , $ <nat:294> <var:a> $ , $ <var:h> <nat:142> $ , $ <var:l> <nat:498> $ , $ <var:A> <nat:424> $ , $ <var:K> <nat:118> $ , are guaranteed to be even numbers in $ \mathbb{Z}^+ $ . This holds as a consequence that the coefficients $ <nat:390> $ , $ <nat:330> $ , $ <nat:40> $ , $ <nat:294> $ , $ <nat:142> $ , $ <nat:498> $ , $ <nat:424> $ , $ <nat:118> $ , are clearly even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:j> <var:D> <var:x> <var:a> <var:h> <var:l> <var:A> <var:K> : nat , Nat . odd ( <nat:390> * <var:j> + <nat:330> * <var:D> + <nat:40> * <var:x> + <nat:294> * <var:a> + <nat:142> * <var:h> + <nat:498> * <var:l> + <nat:424> * <var:A> + <nat:118> * <var:K> + <nat:363> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:390> = true ) . { auto . } assert ( <genH> : Nat . even <nat:330> = true ) . { auto . } assert ( <genH> : Nat . even <nat:40> = true ) . { auto . } assert ( <genH> : Nat . even <nat:294> = true ) . { auto . } assert ( <genH> : Nat . even <nat:142> = true ) . { auto . } assert ( <genH> : Nat . even <nat:498> = true ) . { auto . } assert ( <genH> : Nat . even <nat:424> = true ) . { auto . } assert ( <genH> : Nat . even <nat:118> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:390> * <var:j> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:330> * <var:D> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:40> * <var:x> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:294> * <var:a> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:142> * <var:h> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:498> * <var:l> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:424> * <var:A> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:118> * <var:K> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 