\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Claim that $ <var:R> $ is a <def:two-composite> positive integer supposing that there are some numbers $ <var:g> $ , $ <var:O> $ satisfying the condition that $ <var:R> = <var:g> \times <var:O> $ with $ <var:R> \in \mathbb{N} $ as well as such that $ <var:O> $ , and $ <var:g> \geq <nat:2> $ . Thus $ <var:R> = <nat:30> $ is a <def:two-composite> integer . \end{theorem} \begin{proof} Recall a <def:two-composite> is the product between numbers $ <var:g> $ and $ <var:O> $ greater than or equivalent to <nat:2> . Observe $ <nat:3> $ , and $ <nat:10> \geq <nat:2> $ . Also notice too $ <var:g> * <var:O> = <nat:30> $ yields $ <var:O> = <nat:10> $ and $ <var:g> = <nat:3> $ . Consequently , <nat:30> is a <def:two-composite> number has been verified . Thus , $ <nat:30> = <var:O> \times <var:g> $ has been verified . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:two-composite> ( <var:R> : nat ) := exists <var:g> <var:O> : nat , ( <var:R> = <var:g> * <var:O> ) /\ ( <var:O> >= <nat:2> ) /\ ( <var:g> >= <nat:2> ) . Theorem <genP:1> : <def:two-composite> <nat:30> . Proof . unfold <def:two-composite> . assert ( <genH> : <nat:3> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:10> >= <nat:2> ) . { lia . } exists <nat:3> . exists <nat:10> . repeat split . all : try apply <genH> . all : try apply <genH> . Qed . 