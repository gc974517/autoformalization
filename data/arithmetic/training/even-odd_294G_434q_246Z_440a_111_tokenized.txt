\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:294> \cdot <var:G> + <var:q> \cdot <nat:434> + <nat:440> \cdot <var:a> + <nat:111> + <nat:246> \cdot <var:Z> $ is guaranteed to be odd . \end{theorem} \begin{proof} Recall $ <nat:111> $ is clearly an odd number in $ \mathbb{Z}^+ $ . We prove our theorem holds . $ <nat:294> <var:G> + <nat:434> <var:q> + <var:Z> <nat:246> + <nat:440> <var:a> $ is trivially even . Recall the product $ <var:G> \times <nat:294> $ is clearly even . Building on , $ <var:a> \times <nat:440> $ is known as even because taking the product of an even whole number with any integer must be instrinsically an even positive integer . The product $ <var:Z> \times <nat:246> $ is clearly an even integer . Furthermore , the product $ <nat:434> \times <var:q> $ is clearly even . This must be true as a consequence that taking the product of an even element of $ \mathbb{Z}^+ $ with an arbitrary positive integer is even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:G> <var:q> <var:a> <var:Z> : nat , Nat . odd ( <nat:294> * <var:G> + <nat:434> * <var:q> + <nat:440> * <var:a> + <nat:246> * <var:Z> + <nat:111> ) = true . Proof . intros . assert ( <genH> : Nat . odd <nat:111> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:294> * <var:G> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:440> * <var:a> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:246> * <var:Z> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:434> * <var:q> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:294> * <var:G> + <nat:434> * <var:q> + <nat:440> * <var:a> + <nat:246> * <var:Z> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . rewrite <genH> . auto . Qed . 