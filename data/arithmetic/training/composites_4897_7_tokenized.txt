\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Claim that $ <var:W> $ is <def:seven-composite> with the condition that there exist some whole numbers $ <var:R> $ , $ <var:l> $ , $ <var:n> $ , $ <var:m> $ , $ <var:Z> $ , $ <var:F> $ , $ <var:g> $ where such that $ <var:n> $ , $ <var:F> $ , $ <var:Z> $ , $ <var:l> $ , $ <var:R> $ , $ <var:m> $ , $ <var:g> > <nat:1> $ as well as for $ <var:W> \in \mathbb{N} $ , $ <var:W> = <var:Z> \cdot <var:l> \cdot <var:n> \cdot <var:F> \cdot <var:g> \cdot <var:R> \cdot <var:m> $ . For this reason the integer <nat:138240> is a <def:seven-composite> whole number . \end{theorem} \begin{proof} Allow $ <var:Z> = <nat:4> $ , $ <var:m> = <nat:2> $ , $ <var:F> = <nat:3> $ , $ <var:n> = <nat:8> $ , $ <var:g> = <nat:12> $ , $ <var:R> = <nat:10> $ , and $ <var:l> = <nat:6> $ . Plus observe that $ <nat:10> $ , $ <nat:2> $ , $ <nat:8> $ , $ <nat:4> $ , $ <nat:6> $ , $ <nat:3> $ , $ <nat:12> > <nat:1> $ . Thus , <nat:138240> is the product between $ <var:Z> $ , $ <var:F> $ , $ <var:n> $ , $ <var:l> $ , $ <var:g> $ , $ <var:R> $ , $ <var:m> \in \mathbb{Z}^+ $ is validated . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:seven-composite> ( <var:W> : nat ) := exists <var:R> <var:l> <var:n> <var:m> <var:Z> <var:F> <var:g> : nat , ( <var:n> > <nat:1> ) /\ ( <var:F> > <nat:1> ) /\ ( <var:Z> > <nat:1> ) /\ ( <var:l> > <nat:1> ) /\ ( <var:R> > <nat:1> ) /\ ( <var:m> > <nat:1> ) /\ ( <var:g> > <nat:1> ) /\ ( <var:W> = <var:Z> * <var:l> * <var:n> * <var:F> * <var:g> * <var:R> * <var:m> ) . Theorem <genP:1> : <def:seven-composite> <nat:138240> . Proof . unfold <def:seven-composite> . exists <nat:10> . exists <nat:6> . exists <nat:8> . exists <nat:2> . exists <nat:4> . exists <nat:3> . exists <nat:12> . assert ( <genH> : <nat:10> > <nat:1> ) . { lia . } assert ( <genH> : <nat:2> > <nat:1> ) . { lia . } assert ( <genH> : <nat:8> > <nat:1> ) . { lia . } assert ( <genH> : <nat:4> > <nat:1> ) . { lia . } assert ( <genH> : <nat:6> > <nat:1> ) . { lia . } assert ( <genH> : <nat:3> > <nat:1> ) . { lia . } assert ( <genH> : <nat:12> > <nat:1> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 