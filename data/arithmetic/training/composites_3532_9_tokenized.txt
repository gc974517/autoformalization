\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Allow $ <var:D> $ , $ <var:U> $ , $ <var:C> $ , $ <var:i> $ , $ <var:I> $ , $ <var:T> $ , $ <var:u> $ , $ <var:z> $ and $ <var:r> $ as positive integers such that $ <var:U> $ , $ <var:u> $ , $ <var:r> $ , $ <var:T> $ , $ <var:I> $ , $ <var:C> $ , $ <var:i> $ , $ <var:D> $ , $ <var:z> $ larger than or equal to <nat:2> plus satisfying the condition that the number <nat:39916800> is the product of whole numbers $ <var:D> $ , $ <var:U> $ , $ <var:C> $ , $ <var:i> $ , $ <var:I> $ , $ <var:T> $ , $ <var:u> $ , $ <var:z> $ , and $ <var:r> $ . \end{theorem} \begin{proof} Let $ <var:u> = <nat:8> $ , $ <var:D> = <nat:7> $ , $ <var:i> = <nat:9> $ , $ <var:T> = <nat:10> $ , $ <var:U> = <nat:5> $ , $ <var:C> = <nat:12> $ , $ <var:z> = <nat:4> $ , $ <var:r> = <nat:11> $ and $ <var:I> = <nat:3> $ . Observe $ <nat:7> $ , $ <nat:5> $ , $ <nat:12> $ , $ <nat:11> $ , $ <nat:9> $ , $ <nat:10> $ , $ <nat:8> $ , $ <nat:3> $ , and $ <nat:4> \geq <nat:2> $ . \end{proof} \end{document} 
~
Require Import Lia . Theorem <genP:1> : exists <var:D> <var:U> <var:C> <var:i> <var:I> <var:T> <var:u> <var:z> <var:r> : nat , ( <var:U> >= <nat:2> ) /\ ( <var:u> >= <nat:2> ) /\ ( <var:r> >= <nat:2> ) /\ ( <var:T> >= <nat:2> ) /\ ( <var:I> >= <nat:2> ) /\ ( <var:C> >= <nat:2> ) /\ ( <var:i> >= <nat:2> ) /\ ( <var:D> >= <nat:2> ) /\ ( <var:z> >= <nat:2> ) /\ ( <nat:39916800> = <var:D> * <var:U> * <var:C> * <var:i> * <var:I> * <var:T> * <var:u> * <var:z> * <var:r> ) . Proof . exists <nat:7> . exists <nat:5> . exists <nat:12> . exists <nat:9> . exists <nat:3> . exists <nat:10> . exists <nat:8> . exists <nat:4> . exists <nat:11> . assert ( <genH> : <nat:7> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:5> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:12> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:11> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:9> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:10> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:8> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:3> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:4> >= <nat:2> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 