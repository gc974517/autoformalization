\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:166320> $ is $ <var:L> * <var:O> * <var:E> * <var:w> * <var:C> * <var:W> * <var:s> $ given $ <var:s> $ , $ <var:E> $ , $ <var:C> $ , $ <var:W> $ , $ <var:O> $ , $ <var:L> $ and $ <var:w> $ satisfying the condition that $ <var:O> $ , $ <var:W> $ , $ <var:C> $ , $ <var:L> $ , $ <var:s> $ , $ <var:w> $ , $ <var:E> \geq <nat:2> $ . \end{theorem} \begin{proof} Observe $ <var:w> \times <var:L> \times <var:O> \times <var:C> \times <var:E> \times <var:W> \times <var:s> = <nat:166320> $ produces $ <var:E> = <nat:5> $ , $ <var:w> = <nat:7> $ , $ <var:O> = <nat:9> $ , $ <var:W> = <nat:3> $ , $ <var:s> = <nat:2> $ , $ <var:L> = <nat:11> $ and $ <var:C> = <nat:8> $ . Plus observe that $ <nat:3> $ , $ <nat:5> $ , $ <nat:2> $ , $ <nat:7> $ , $ <nat:11> $ , $ <nat:8> $ and $ <nat:9> \geq <nat:2> $ . As a consequence , $ <nat:166320> = <var:E> * <var:w> * <var:s> * <var:O> * <var:C> * <var:L> * <var:W> $ as well as $ <var:w> $ , $ <var:L> $ , $ <var:E> $ , $ <var:O> $ , $ <var:W> $ , $ <var:s> $ and $ <var:C> $ are larger than or equivalent to <nat:2> has been validated . \end{proof} \end{document} 
~
Require Import Lia . Theorem <genP:1> : exists <var:s> <var:E> <var:C> <var:W> <var:O> <var:L> <var:w> : nat , ( <nat:166320> = <var:L> * <var:O> * <var:E> * <var:w> * <var:C> * <var:W> * <var:s> ) /\ ( <var:O> >= <nat:2> ) /\ ( <var:W> >= <nat:2> ) /\ ( <var:C> >= <nat:2> ) /\ ( <var:L> >= <nat:2> ) /\ ( <var:s> >= <nat:2> ) /\ ( <var:w> >= <nat:2> ) /\ ( <var:E> >= <nat:2> ) . Proof . exists <nat:2> . exists <nat:5> . exists <nat:8> . exists <nat:3> . exists <nat:9> . exists <nat:11> . exists <nat:7> . assert ( <genH> : <nat:3> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:5> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:2> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:7> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:11> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:8> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:9> >= <nat:2> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 