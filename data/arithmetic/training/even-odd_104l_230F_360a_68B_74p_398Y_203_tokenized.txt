\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:68> \cdot <var:B> + <var:p> \cdot <nat:74> + <var:a> \cdot <nat:360> + <var:l> \cdot <nat:104> + <nat:203> + <var:F> \cdot <nat:230> + <var:Y> \cdot <nat:398> $ is guaranteed to be odd . \end{theorem} \begin{proof} We apply the knowledge that $ <nat:68> <var:B> + <var:F> <nat:230> + <var:p> <nat:74> + <var:a> <nat:360> + <nat:398> <var:Y> + <nat:203> + <var:l> <nat:104> $ is odd as a consequence that the expression $ <var:Y> <nat:398> + <var:B> <nat:68> + <nat:360> <var:a> + <nat:230> <var:F> + <var:l> <nat:104> + <nat:74> <var:p> $ is guaranteed to be even . Notice that the summing of an even number in $ \mathbb{Z}^+ $ and an even number in $ \mathbb{N} $ is even . $ <nat:104> \cdot <var:l> $ is an even natural number . This holds from the knowledge the multiplication of an even natural and any natural number is even . This fact must be true from the fact the whole number $ <nat:104> $ is obviously even . The product $ <nat:230> \cdot <var:F> $ is obviously even . This is true from the fact multiplying between an even number in $ \mathbb{N} $ and any integer must be itself an even element of $ \mathbb{Z}^+ $ and also the integer $ <nat:230> $ is guaranteed to be an even number in $ \mathbb{Z}^+ $ . The number $ <nat:360> $ is an even natural . Consequently , $ <var:a> \cdot <nat:360> $ is guaranteed to be even at the same time . Notice the natural number $ <nat:68> $ is obviously an even integer . Then , the pair $ <var:B> \cdot <nat:68> $ is even at the same time . On top of this , the coefficient $ <nat:74> $ is known as an even element of $ \mathbb{N} $ . As a consequence , the term $ <var:p> \cdot <nat:74> $ will be even too . Additionally , the positive integer $ <nat:398> $ is even . For this reason , $ <nat:398> \cdot <var:Y> $ will be even as well . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:B> <var:p> <var:a> <var:l> <var:F> <var:Y> : nat , Nat . odd ( <nat:68> * <var:B> + <nat:74> * <var:p> + <nat:360> * <var:a> + <nat:104> * <var:l> + <nat:230> * <var:F> + <nat:398> * <var:Y> + <nat:203> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:104> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:104> * <var:l> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:230> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:230> * <var:F> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:360> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:360> * <var:a> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:68> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:68> * <var:B> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:74> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:74> * <var:p> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:398> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:398> * <var:Y> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:68> * <var:B> + <nat:74> * <var:p> + <nat:360> * <var:a> + <nat:104> * <var:l> + <nat:230> * <var:F> + <nat:398> * <var:Y> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . auto . Qed . 