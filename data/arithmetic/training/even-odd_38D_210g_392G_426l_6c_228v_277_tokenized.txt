\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} For any whole numbers $ <var:G> $ , $ <var:D> $ , $ <var:c> $ , $ <var:l> $ , $ <var:v> $ , and $ <var:g> $ the summation $ <var:v> \times <nat:228> + <var:l> \times <nat:426> + <nat:38> \times <var:D> + <var:G> \times <nat:392> + <nat:210> \times <var:g> + <nat:277> + <nat:6> \times <var:c> $ will be odd . \end{theorem} \begin{proof} We apply the assumption that $ <var:v> <nat:228> + <var:G> <nat:392> + <var:g> <nat:210> + <var:l> <nat:426> + <var:c> <nat:6> + <nat:277> + <var:D> <nat:38> $ is trivially odd as a consequence that $ <nat:38> \cdot <var:D> + <var:g> \cdot <nat:210> + <nat:392> \cdot <var:G> + <var:l> \cdot <nat:426> + <var:c> \cdot <nat:6> + <nat:228> \cdot <var:v> $ is guaranteed to be even . Remember that the products $ <nat:228> \times <var:v> $ , $ <var:D> \times <nat:38> $ , $ <var:G> \times <nat:392> $ , $ <nat:426> \times <var:l> $ , and $ <nat:210> \times <var:g> $ are obviously even . Likewise , the term $ <var:c> \times <nat:6> $ is guaranteed to be even as a consequence that the product between an even integer with any positive integer is guaranteed to be trivially an even positive integer . By reason that the multiplication of an even number and any whole number is guaranteed to be in itself an even natural the proposition is true . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:G> <var:D> <var:c> <var:l> <var:v> <var:g> : nat , Nat . odd ( <nat:228> * <var:v> + <nat:426> * <var:l> + <nat:38> * <var:D> + <nat:392> * <var:G> + <nat:210> * <var:g> + <nat:6> * <var:c> + <nat:277> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:228> * <var:v> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:38> * <var:D> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:392> * <var:G> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:426> * <var:l> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:210> * <var:g> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:6> * <var:c> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:228> * <var:v> + <nat:426> * <var:l> + <nat:38> * <var:D> + <nat:392> * <var:G> + <nat:210> * <var:g> + <nat:6> * <var:c> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . auto . Qed . 