\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:544320> $ is equivalent to $ <var:D> * <var:S> * <var:O> * <var:F> * <var:b> * <var:y> * <var:a> $ assuming $ <var:O> $ , $ <var:D> $ , $ <var:a> $ , $ <var:y> $ , $ <var:F> $ , $ <var:b> $ , $ <var:S> $ satisfying the condition that $ <var:D> $ , $ <var:F> $ , $ <var:y> $ , $ <var:a> $ , $ <var:b> $ , $ <var:S> $ , $ <var:O> $ more than <nat:1> . \end{theorem} \begin{proof} Take $ <var:b> = <nat:6> $ , $ <var:O> = <nat:9> $ , $ <var:D> = <nat:3> $ , $ <var:a> = <nat:7> $ , $ <var:F> = <nat:12> $ , $ <var:y> = <nat:10> $ and $ <var:S> = <nat:4> $ . Notice that $ <var:S> \cdot <var:b> \cdot <var:F> \cdot <var:D> \cdot <var:O> \cdot <var:y> \cdot <var:a> = <nat:544320> $ . What's more notice that $ <nat:9> $ , $ <nat:10> $ , $ <nat:6> $ , $ <nat:7> $ , $ <nat:3> $ , $ <nat:12> $ , $ <nat:4> $ are larger than <nat:1> . As a result , <nat:544320> is the multiplication of some positive integers $ <var:a> $ , $ <var:y> $ , $ <var:O> $ , $ <var:D> $ , $ <var:S> $ , $ <var:b> $ , $ <var:F> $ has been validated . \end{proof} \end{document} 
~
Require Import Lia . Theorem <genP:1> : exists <var:O> <var:D> <var:a> <var:y> <var:F> <var:b> <var:S> : nat , ( <nat:544320> = <var:D> * <var:S> * <var:O> * <var:F> * <var:b> * <var:y> * <var:a> ) /\ ( <var:D> > <nat:1> ) /\ ( <var:F> > <nat:1> ) /\ ( <var:y> > <nat:1> ) /\ ( <var:a> > <nat:1> ) /\ ( <var:b> > <nat:1> ) /\ ( <var:S> > <nat:1> ) /\ ( <var:O> > <nat:1> ) . Proof . exists <nat:9> . exists <nat:3> . exists <nat:7> . exists <nat:10> . exists <nat:12> . exists <nat:6> . exists <nat:4> . assert ( <genH> : <nat:9> > <nat:1> ) . { lia . } assert ( <genH> : <nat:10> > <nat:1> ) . { lia . } assert ( <genH> : <nat:6> > <nat:1> ) . { lia . } assert ( <genH> : <nat:7> > <nat:1> ) . { lia . } assert ( <genH> : <nat:3> > <nat:1> ) . { lia . } assert ( <genH> : <nat:12> > <nat:1> ) . { lia . } assert ( <genH> : <nat:4> > <nat:1> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 