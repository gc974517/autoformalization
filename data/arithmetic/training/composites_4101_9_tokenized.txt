\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Claim that $ <var:a> $ is <def:nine-composite> if and only if using some $ <var:B> $ , $ <var:W> $ , $ <var:Y> $ , $ <var:h> $ , $ <var:f> $ , $ <var:m> $ , $ <var:T> $ , $ <var:g> $ , $ <var:Q> \in \mathbb{N} $ we get $ <var:T> * <var:B> * <var:m> * <var:Q> * <var:Y> * <var:W> * <var:h> * <var:g> * <var:f> = <var:a> $ with $ <var:a> \in \mathbb{Z}^+ $ as well as where $ <var:m> $ , $ <var:T> $ , $ <var:B> $ , $ <var:f> $ , $ <var:Y> $ , $ <var:h> $ , $ <var:W> $ , $ <var:Q> $ , $ <var:g> \geq <nat:2> $ . So $ <nat:13305600> = <var:a> $ is a <def:nine-composite> whole number . \end{theorem} \begin{proof} Remember a <def:nine-composite> number is the multiplication between integers $ <var:f> $ , $ <var:Q> $ , $ <var:g> $ , $ <var:Y> $ , $ <var:B> $ , $ <var:m> $ , $ <var:W> $ , $ <var:h> $ , and $ <var:T> $ greater than or equal to <nat:2> . Assume $ <var:W> = <nat:2> $ , $ <var:Y> = <nat:8> $ , $ <var:g> = <nat:12> $ , $ <var:f> = <nat:5> $ , $ <var:m> = <nat:3> $ , $ <var:Q> = <nat:10> $ , $ <var:B> = <nat:11> $ , $ <var:T> = <nat:7> $ , and $ <var:h> = <nat:6> $ . Observe $ <nat:12> \cdot <nat:10> \cdot <nat:3> \cdot <nat:2> \cdot <nat:11> \cdot <nat:6> \cdot <nat:5> \cdot <nat:7> \cdot <nat:8> = <var:g> \cdot <var:Q> \cdot <var:m> \cdot <var:W> \cdot <var:B> \cdot <var:h> \cdot <var:f> \cdot <var:T> \cdot <var:Y> = <nat:13305600> $ . Similarly note that $ <var:m> = <nat:3> $ , $ <var:B> = <nat:11> $ , $ <var:h> = <nat:6> $ , $ <var:T> = <nat:7> $ , $ <var:Y> = <nat:8> $ , $ <var:f> = <nat:5> $ , $ <var:W> = <nat:2> $ , $ <var:Q> = <nat:10> $ , and $ <var:g> = <nat:12> $ are greater than or equal to <nat:2> . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:nine-composite> ( <var:a> : nat ) := exists <var:B> <var:W> <var:Y> <var:h> <var:f> <var:m> <var:T> <var:g> <var:Q> : nat , ( <var:T> * <var:B> * <var:m> * <var:Q> * <var:Y> * <var:W> * <var:h> * <var:g> * <var:f> = <var:a> ) /\ ( <var:m> >= <nat:2> ) /\ ( <var:T> >= <nat:2> ) /\ ( <var:B> >= <nat:2> ) /\ ( <var:f> >= <nat:2> ) /\ ( <var:Y> >= <nat:2> ) /\ ( <var:h> >= <nat:2> ) /\ ( <var:W> >= <nat:2> ) /\ ( <var:Q> >= <nat:2> ) /\ ( <var:g> >= <nat:2> ) . Theorem <genP:1> : <def:nine-composite> <nat:13305600> . Proof . unfold <def:nine-composite> . exists <nat:11> . exists <nat:2> . exists <nat:8> . exists <nat:6> . exists <nat:5> . exists <nat:3> . exists <nat:7> . exists <nat:12> . exists <nat:10> . assert ( <genH> : <nat:3> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:11> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:6> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:7> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:8> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:5> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:2> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:10> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:12> >= <nat:2> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 