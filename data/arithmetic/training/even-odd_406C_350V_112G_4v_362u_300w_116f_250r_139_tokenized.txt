\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Taking unknowns $ <var:V> $ , $ <var:C> $ , $ <var:u> $ , $ <var:f> $ , $ <var:w> $ , $ <var:v> $ , $ <var:G> $ , and $ <var:r> $ the expression $ <var:u> \times <nat:362> + <var:C> \times <nat:406> + <var:w> \times <nat:300> + <var:v> \times <nat:4> + <nat:139> + <nat:112> \times <var:G> + <nat:116> \times <var:f> + <nat:250> \times <var:r> + <nat:350> \times <var:V> $ is guaranteed to be odd . \end{theorem} \begin{proof} We check our result must be true . See the summation $ <nat:406> * <var:C> + <var:V> * <nat:350> + <var:G> * <nat:112> + <nat:4> * <var:v> + <nat:362> * <var:u> + <nat:300> * <var:w> + <nat:116> * <var:f> + <var:r> * <nat:250> $ is trivially even . Take note the product $ <var:v> * <nat:4> $ is an even number in $ \mathbb{Z}^+ $ . This is proven because multiplying of an even natural with an arbitrary number in $ \mathbb{N} $ will be even . Observe the pairs $ <var:C> * <nat:406> $ , $ <var:G> * <nat:112> $ , $ <var:w> * <nat:300> $ , $ <nat:350> * <var:V> $ , additionally $ <var:f> * <nat:116> $ are trivially even integers by reason that taking the product of an even number in $ \mathbb{Z}^+ $ and a positive integer will be obviously an even natural number . The pair $ <var:u> * <nat:362> $ is known as an even positive integer as a consequence that multiplying between an even number in $ \mathbb{Z}^+ $ and a element of $ \mathbb{Z}^+ $ is itself an even integer . Take note that $ <var:r> * <nat:250> $ is trivially even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:V> <var:C> <var:u> <var:f> <var:w> <var:v> <var:G> <var:r> : nat , Nat . odd ( <nat:362> * <var:u> + <nat:406> * <var:C> + <nat:300> * <var:w> + <nat:4> * <var:v> + <nat:112> * <var:G> + <nat:116> * <var:f> + <nat:250> * <var:r> + <nat:350> * <var:V> + <nat:139> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:4> * <var:v> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:406> * <var:C> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:112> * <var:G> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:300> * <var:w> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:350> * <var:V> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:116> * <var:f> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:362> * <var:u> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:250> * <var:r> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:362> * <var:u> + <nat:406> * <var:C> + <nat:300> * <var:w> + <nat:4> * <var:v> + <nat:112> * <var:G> + <nat:116> * <var:f> + <nat:250> * <var:r> + <nat:350> * <var:V> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . auto . Qed . 