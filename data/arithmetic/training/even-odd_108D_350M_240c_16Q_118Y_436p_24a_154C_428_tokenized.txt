\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:D> * <nat:108> + <nat:350> * <var:M> + <var:c> * <nat:240> + <nat:16> * <var:Q> + <nat:118> * <var:Y> + <var:p> * <nat:436> + <nat:24> * <var:a> + <nat:428> + <nat:154> * <var:C> $ is even . \end{theorem} \begin{proof} We know the adding of even naturals concurrently with an even whole number is obviously an even element of $ \mathbb{N} $ . Further , the products $ <nat:108> \cdot <var:D> $ , $ <nat:350> \cdot <var:M> $ , $ <var:c> \cdot <nat:240> $ , $ <nat:16> \cdot <var:Q> $ , $ <var:Y> \cdot <nat:118> $ , $ <var:p> \cdot <nat:436> $ , $ <nat:24> \cdot <var:a> $ , and also $ <nat:154> \cdot <var:C> $ are known to be even from the knowledge the multiplication of an even element of $ \mathbb{Z}^+ $ with a whole number will be even . This claim is proven from the knowledge the numbers $ <nat:108> $ , $ <nat:350> $ , $ <nat:240> $ , $ <nat:16> $ , $ <nat:118> $ , $ <nat:436> $ , $ <nat:24> $ , and moreover $ <nat:154> $ are even elements of $ \mathbb{Z}^+ $ . It can be demonstrated that our lemma is proven . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:D> <var:M> <var:c> <var:Q> <var:Y> <var:p> <var:a> <var:C> : nat , Nat . even ( <nat:108> * <var:D> + <nat:350> * <var:M> + <nat:240> * <var:c> + <nat:16> * <var:Q> + <nat:118> * <var:Y> + <nat:436> * <var:p> + <nat:24> * <var:a> + <nat:154> * <var:C> + <nat:428> ) = true . Proof . intros . repeat rewrite Nat . even_add . assert ( <genH> : Nat . even <nat:108> = true ) . { auto . } assert ( <genH> : Nat . even <nat:350> = true ) . { auto . } assert ( <genH> : Nat . even <nat:240> = true ) . { auto . } assert ( <genH> : Nat . even <nat:16> = true ) . { auto . } assert ( <genH> : Nat . even <nat:118> = true ) . { auto . } assert ( <genH> : Nat . even <nat:436> = true ) . { auto . } assert ( <genH> : Nat . even <nat:24> = true ) . { auto . } assert ( <genH> : Nat . even <nat:154> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:108> * <var:D> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:350> * <var:M> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:240> * <var:c> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:16> * <var:Q> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:118> * <var:Y> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:436> * <var:p> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:24> * <var:a> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:154> * <var:C> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 