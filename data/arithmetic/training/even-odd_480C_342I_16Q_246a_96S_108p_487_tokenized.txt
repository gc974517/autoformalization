\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:S> \cdot <nat:96> + <var:C> \cdot <nat:480> + <nat:342> \cdot <var:I> + <nat:246> \cdot <var:a> + <nat:16> \cdot <var:Q> + <nat:108> \cdot <var:p> + <nat:487> $ will be odd for any positive terms $ <var:S> $ , $ <var:C> $ , $ <var:a> $ , $ <var:p> $ , $ <var:I> $ , and $ <var:Q> $ . \end{theorem} \begin{proof} The formula $ <nat:480> * <var:C> + <nat:342> * <var:I> + <nat:16> * <var:Q> + <nat:246> * <var:a> + <nat:96> * <var:S> + <var:p> * <nat:108> $ is trivially even . The products $ <var:p> * <nat:108> $ , $ <nat:246> * <var:a> $ , $ <var:Q> * <nat:16> $ , additionally $ <var:I> * <nat:342> $ will be even by reason that taking the product between an even number and any number in $ \mathbb{N} $ must be even . In addition to this , $ <var:C> * <nat:480> $ is even . In addition , notice the product $ <nat:96> * <var:S> $ is known to be an even element of $ \mathbb{N} $ . The addition between an even number with an odd number is guaranteed to be by definition an odd number . Remember that $ <nat:487> $ is an odd element of $ \mathbb{Z}^+ $ . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:S> <var:C> <var:a> <var:p> <var:I> <var:Q> : nat , Nat . odd ( <nat:96> * <var:S> + <nat:480> * <var:C> + <nat:342> * <var:I> + <nat:246> * <var:a> + <nat:16> * <var:Q> + <nat:108> * <var:p> + <nat:487> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:108> * <var:p> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:246> * <var:a> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:16> * <var:Q> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:342> * <var:I> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:480> * <var:C> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:96> * <var:S> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:96> * <var:S> + <nat:480> * <var:C> + <nat:342> * <var:I> + <nat:246> * <var:a> + <nat:16> * <var:Q> + <nat:108> * <var:p> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . assert ( <genH> : Nat . odd <nat:487> = true ) . { auto . } rewrite <- Nat . negb_even . rewrite <genH> . rewrite <genH> . auto . Qed . 