\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:24> + <var:U> * <nat:266> + <nat:446> * <var:G> + <nat:174> * <var:V> + <nat:442> * <var:K> + <var:e> * <nat:162> + <var:b> * <nat:260> $ must be even for unknowns $ <var:G> $ , $ <var:U> $ , $ <var:K> $ , $ <var:b> $ , $ <var:e> $ , and $ <var:V> $ . \end{theorem} \begin{proof} The pairs $ <var:G> \cdot <nat:446> $ , $ <nat:162> \cdot <var:e> $ , $ <nat:260> \cdot <var:b> $ , and likewise $ <var:U> \cdot <nat:266> $ must be even since taking the product of an even number in $ \mathbb{Z}^+ $ and some natural is guaranteed to be by definition an even number . Building on , the product $ <var:V> \cdot <nat:174> $ is obviously even as a consequence that the product between an even element of $ \mathbb{Z}^+ $ and an arbitrary element of $ \mathbb{Z}^+ $ is itself an even natural . Adding on , observe that the term $ <var:K> \cdot <nat:442> $ is known to be even . The summing between even numbers with an even natural number is guaranteed to be an even number in $ \mathbb{Z}^+ $ . We know $ <nat:24> $ is an even natural . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:G> <var:U> <var:K> <var:b> <var:e> <var:V> : nat , Nat . even ( <nat:266> * <var:U> + <nat:446> * <var:G> + <nat:174> * <var:V> + <nat:442> * <var:K> + <nat:162> * <var:e> + <nat:260> * <var:b> + <nat:24> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:446> * <var:G> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:162> * <var:e> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:260> * <var:b> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:266> * <var:U> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:174> * <var:V> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:442> * <var:K> ) = true ) . { rewrite Nat . even_mul . auto . } repeat rewrite Nat . even_add . assert ( <genH> : Nat . even <nat:24> = true ) . { auto . } rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 