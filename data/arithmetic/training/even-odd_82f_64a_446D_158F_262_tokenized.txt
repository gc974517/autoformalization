\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:82> <var:f> + <nat:262> + <nat:64> <var:a> + <var:D> <nat:446> + <nat:158> <var:F> $ must be even using terms $ <var:D> $ , $ <var:a> $ , $ <var:F> $ , and $ <var:f> $ . \end{theorem} \begin{proof} The totaling of an even number in $ \mathbb{N} $ and an even number in $ \mathbb{Z}^+ $ is guaranteed to be even . The number $ <nat:82> $ is clearly even . Then , the product $ <var:f> <nat:82> $ is even also . The product $ <nat:64> <var:a> $ is known to be an even positive integer . This claim is proven because the product between an even positive integer and a natural is even additionally the whole number $ <nat:64> $ is clearly an even positive integer . On top of this , $ <var:D> <nat:446> $ is obviously an even number in $ \mathbb{Z}^+ $ from the fact multiplying of an even whole number with an arbitrary whole number must be an even element of $ \mathbb{N} $ . This must be true from the fact the leading term $ <nat:446> $ is obviously even . The whole number $ <nat:158> $ is obviously even . In consequence , the term $ <var:F> <nat:158> $ is guaranteed to be even also . We show our theorem must be true . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:D> <var:a> <var:F> <var:f> : nat , Nat . even ( <nat:82> * <var:f> + <nat:64> * <var:a> + <nat:446> * <var:D> + <nat:158> * <var:F> + <nat:262> ) = true . Proof . intros . repeat rewrite Nat . even_add . assert ( <genH> : Nat . even <nat:82> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:82> * <var:f> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:64> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:64> * <var:a> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:446> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:446> * <var:D> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:158> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:158> * <var:F> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 