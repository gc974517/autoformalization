\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:218> \times <var:v> + <nat:234> \times <var:V> + <nat:358> \times <var:P> + <nat:99> + <nat:344> \times <var:B> + <nat:84> \times <var:a> + <var:x> \times <nat:268> $ is odd . \end{theorem} \begin{proof} The summation $ <nat:344> <var:B> + <nat:99> + <var:a> <nat:84> + <var:x> <nat:268> + <nat:234> <var:V> + <nat:218> <var:v> + <nat:358> <var:P> $ is odd since the formula $ <var:P> \cdot <nat:358> + <nat:84> \cdot <var:a> + <var:v> \cdot <nat:218> + <var:B> \cdot <nat:344> + <nat:234> \cdot <var:V> + <var:x> \cdot <nat:268> $ is trivially even . Recall the pair $ <var:B> \cdot <nat:344> $ is clearly even . What's more , the products $ <var:x> \cdot <nat:268> $ , $ <var:v> \cdot <nat:218> $ , and moreover $ <var:P> \cdot <nat:358> $ must be even elements of $ \mathbb{N} $ . This fact is proven from the knowledge taking the product of an even number with some element of $ \mathbb{Z}^+ $ is guaranteed to be fundamentally an even number in $ \mathbb{N} $ . On top of this , the product $ <nat:234> \cdot <var:V> $ is trivially an even integer . Adding on , the term $ <nat:84> \cdot <var:a> $ is clearly even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:v> <var:V> <var:P> <var:B> <var:a> <var:x> : nat , Nat . odd ( <nat:218> * <var:v> + <nat:234> * <var:V> + <nat:358> * <var:P> + <nat:344> * <var:B> + <nat:84> * <var:a> + <nat:268> * <var:x> + <nat:99> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:344> * <var:B> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:268> * <var:x> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:218> * <var:v> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:358> * <var:P> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:234> * <var:V> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:84> * <var:a> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:218> * <var:v> + <nat:234> * <var:V> + <nat:358> * <var:P> + <nat:344> * <var:B> + <nat:84> * <var:a> + <nat:268> * <var:x> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . auto . Qed . 