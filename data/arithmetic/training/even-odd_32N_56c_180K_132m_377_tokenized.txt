\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} For every natural numbers $ <var:K> $ , $ <var:N> $ , $ <var:m> $ , and $ <var:c> $ the sum $ <nat:32> \times <var:N> + <var:c> \times <nat:56> + <var:K> \times <nat:180> + <var:m> \times <nat:132> + <nat:377> $ will be odd . \end{theorem} \begin{proof} Remember that the positive integers $ <nat:132> $ as well as $ <nat:32> $ are even numbers . Therefore , the products $ <var:m> * <nat:132> $ in addition to $ <var:N> * <nat:32> $ must be even too . The term $ <nat:56> * <var:c> $ is even . This holds from the fact multiplying between an even number in $ \mathbb{N} $ and a positive integer must be clearly an even natural number , and holds as a consequence that the leading term $ <nat:56> $ is clearly even . Notice that the product $ <var:K> * <nat:180> $ is obviously even from the fact the multiplication between an even number in $ \mathbb{N} $ and a number in $ \mathbb{N} $ is instrinsically an even integer in addition to the number $ <nat:180> $ is obviously an even element of $ \mathbb{N} $ . We show this theorem is true making use of the fact that the summing of an even positive integer with an odd number is guaranteed to be odd . See $ <nat:377> $ is guaranteed to be an odd number in $ \mathbb{N} $ . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:K> <var:N> <var:m> <var:c> : nat , Nat . odd ( <nat:32> * <var:N> + <nat:56> * <var:c> + <nat:180> * <var:K> + <nat:132> * <var:m> + <nat:377> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:132> = true ) . { auto . } assert ( <genH> : Nat . even <nat:32> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:132> * <var:m> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:32> * <var:N> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:56> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:56> * <var:c> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:180> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:180> * <var:K> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . assert ( <genH> : Nat . odd <nat:377> = true ) . { auto . } rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 