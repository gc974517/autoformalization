\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:346> * <var:H> + <nat:2> * <var:E> + <var:O> * <nat:238> + <nat:491> + <nat:468> * <var:t> $ must be odd given some positive terms $ <var:H> $ , $ <var:t> $ , $ <var:E> $ , and $ <var:O> $ . \end{theorem} \begin{proof} We verify $ <nat:238> \cdot <var:O> + <nat:346> \cdot <var:H> + <nat:2> \cdot <var:E> + <var:t> \cdot <nat:468> + <nat:491> $ will be odd . It can be shown that that the summation $ <var:H> \times <nat:346> + <var:E> \times <nat:2> + <nat:238> \times <var:O> + <nat:468> \times <var:t> $ is trivially even . The pair $ <var:E> \cdot <nat:2> $ is clearly even . This claim must be true from the fact the whole number $ <nat:2> $ is fundamentally an even integer . Additionally , observe that $ <nat:468> \cdot <var:t> $ is an even number in $ \mathbb{Z}^+ $ as a consequence that the natural number $ <nat:468> $ is guaranteed to be even . The term $ <var:O> \cdot <nat:238> $ is known to be an even number in $ \mathbb{N} $ from the fact the natural number $ <nat:238> $ is trivially even . Observe that the number $ <nat:346> $ is clearly even . So , the term $ <var:H> \cdot <nat:346> $ must be even additionally . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:H> <var:t> <var:E> <var:O> : nat , Nat . odd ( <nat:346> * <var:H> + <nat:2> * <var:E> + <nat:238> * <var:O> + <nat:468> * <var:t> + <nat:491> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:2> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:2> * <var:E> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:468> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:468> * <var:t> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:238> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:238> * <var:O> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:346> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:346> * <var:H> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:346> * <var:H> + <nat:2> * <var:E> + <nat:238> * <var:O> + <nat:468> * <var:t> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . auto . Qed . 