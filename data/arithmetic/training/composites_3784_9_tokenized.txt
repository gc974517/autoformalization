\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ \exists <var:o> $ , $ <var:a> $ , $ <var:c> $ , $ <var:g> $ , $ <var:Z> $ , $ <var:x> $ , $ <var:b> $ , $ <var:Q> $ , $ <var:y> \in \mathbb{N} $ where $ <var:x> $ , $ <var:o> $ , $ <var:b> $ , $ <var:y> $ , $ <var:a> $ , $ <var:Z> $ , $ <var:c> $ , $ <var:Q> $ , $ <var:g> > <nat:1> $ and so that the positive integer <nat:7603200> is the multiplication between numbers $ <var:o> $ , $ <var:a> $ , $ <var:c> $ , $ <var:g> $ , $ <var:Z> $ , $ <var:x> $ , $ <var:b> $ , $ <var:Q> $ and $ <var:y> \in \mathbb{N} $ . \end{theorem} \begin{proof} We confirm $ <var:o> \times <var:g> \times <var:x> \times <var:y> \times <var:a> \times <var:b> \times <var:Z> \times <var:c> \times <var:Q> = <nat:7603200> $ . Note that $ <nat:7603200> = <nat:8> \cdot <nat:3> \cdot <nat:11> \cdot <nat:10> \cdot <nat:2> \cdot <nat:12> \cdot <nat:6> \cdot <nat:4> \cdot <nat:5> $ . What's more note $ <nat:10> $ , $ <nat:11> $ , $ <nat:6> $ , $ <nat:8> $ , $ <nat:2> $ , $ <nat:3> $ , $ <nat:12> $ , $ <nat:4> $ and $ <nat:5> > <nat:1> $ . This shows the theory is valid . \end{proof} \end{document} 
~
Require Import Lia . Theorem <genP:1> : exists <var:o> <var:a> <var:c> <var:g> <var:Z> <var:x> <var:b> <var:Q> <var:y> : nat , ( <var:x> > <nat:1> ) /\ ( <var:o> > <nat:1> ) /\ ( <var:b> > <nat:1> ) /\ ( <var:y> > <nat:1> ) /\ ( <var:a> > <nat:1> ) /\ ( <var:Z> > <nat:1> ) /\ ( <var:c> > <nat:1> ) /\ ( <var:Q> > <nat:1> ) /\ ( <var:g> > <nat:1> ) /\ ( <nat:7603200> = <var:o> * <var:a> * <var:c> * <var:g> * <var:Z> * <var:x> * <var:b> * <var:Q> * <var:y> ) . Proof . exists <nat:3> . exists <nat:10> . exists <nat:4> . exists <nat:8> . exists <nat:5> . exists <nat:11> . exists <nat:2> . exists <nat:12> . exists <nat:6> . assert ( <genH> : <nat:10> > <nat:1> ) . { lia . } assert ( <genH> : <nat:11> > <nat:1> ) . { lia . } assert ( <genH> : <nat:6> > <nat:1> ) . { lia . } assert ( <genH> : <nat:8> > <nat:1> ) . { lia . } assert ( <genH> : <nat:2> > <nat:1> ) . { lia . } assert ( <genH> : <nat:3> > <nat:1> ) . { lia . } assert ( <genH> : <nat:12> > <nat:1> ) . { lia . } assert ( <genH> : <nat:4> > <nat:1> ) . { lia . } assert ( <genH> : <nat:5> > <nat:1> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 