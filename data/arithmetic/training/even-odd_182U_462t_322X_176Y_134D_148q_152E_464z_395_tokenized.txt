\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} With some variables $ <var:Y> $ , $ <var:E> $ , $ <var:X> $ , $ <var:D> $ , $ <var:z> $ , $ <var:U> $ , $ <var:t> $ , and $ <var:q> $ the formula $ <nat:152> <var:E> + <nat:176> <var:Y> + <nat:462> <var:t> + <nat:134> <var:D> + <nat:182> <var:U> + <var:X> <nat:322> + <nat:464> <var:z> + <nat:148> <var:q> + <nat:395> $ must be odd . \end{theorem} \begin{proof} It can be checked that $ <nat:182> \cdot <var:U> + <var:t> \cdot <nat:462> + <var:X> \cdot <nat:322> + <nat:176> \cdot <var:Y> + <var:D> \cdot <nat:134> + <var:q> \cdot <nat:148> + <nat:395> + <var:E> \cdot <nat:152> + <var:z> \cdot <nat:464> $ is guaranteed to be odd . We know the numbers $ <nat:462> $ , $ <nat:134> $ , $ <nat:152> $ , $ <nat:322> $ , $ <nat:148> $ , in addition to $ <nat:176> $ will be even elements of $ \mathbb{N} $ Notice the whole number $ <nat:182> $ is trivially even Furthermore , take note that the natural number $ <nat:464> $ is clearly an even natural number Observe that taking the product of even integers is guaranteed to be trivially an even element of $ \mathbb{N} $ . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:Y> <var:E> <var:X> <var:D> <var:z> <var:U> <var:t> <var:q> : nat , Nat . odd ( <nat:152> * <var:E> + <nat:176> * <var:Y> + <nat:462> * <var:t> + <nat:134> * <var:D> + <nat:182> * <var:U> + <nat:322> * <var:X> + <nat:464> * <var:z> + <nat:148> * <var:q> + <nat:395> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:462> = true ) . { auto . } assert ( <genH> : Nat . even <nat:134> = true ) . { auto . } assert ( <genH> : Nat . even <nat:152> = true ) . { auto . } assert ( <genH> : Nat . even <nat:322> = true ) . { auto . } assert ( <genH> : Nat . even <nat:148> = true ) . { auto . } assert ( <genH> : Nat . even <nat:176> = true ) . { auto . } assert ( <genH> : Nat . even <nat:182> = true ) . { auto . } assert ( <genH> : Nat . even <nat:464> = true ) . { auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . repeat rewrite Nat . even_mul . rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 