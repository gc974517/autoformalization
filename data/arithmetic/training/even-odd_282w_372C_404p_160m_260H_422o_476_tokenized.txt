\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:260> * <var:H> + <nat:404> * <var:p> + <var:C> * <nat:372> + <nat:160> * <var:m> + <nat:282> * <var:w> + <nat:422> * <var:o> + <nat:476> $ is even . \end{theorem} \begin{proof} Observe that the summation $ <nat:160> <var:m> + <var:C> <nat:372> + <nat:422> <var:o> + <nat:476> + <nat:404> <var:p> + <nat:260> <var:H> + <nat:282> <var:w> $ is guaranteed to be even since $ <var:H> \times <nat:260> + <nat:404> \times <var:p> + <var:w> \times <nat:282> + <nat:160> \times <var:m> + <nat:372> \times <var:C> + <var:o> \times <nat:422> $ is obviously even . Adding on , see that the leading terms $ <nat:260> $ , $ <nat:404> $ , $ <nat:282> $ , $ <nat:160> $ , $ <nat:372> $ , in addition to $ <nat:422> $ must be even . Hence , the pairs $ <var:H> * <nat:260> $ , $ <nat:404> * <var:p> $ , $ <var:w> * <nat:282> $ , $ <var:m> * <nat:160> $ , $ <var:C> * <nat:372> $ , and moreover $ <nat:422> * <var:o> $ must be even additionally . By reason that the addition between even elements of $ \mathbb{N} $ and an even integer is guaranteed to be even , $ <nat:282> * <var:w> + <var:C> * <nat:372> + <nat:404> * <var:p> + <nat:160> * <var:m> + <var:H> * <nat:260> + <var:o> * <nat:422> $ must be by definition even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:H> <var:p> <var:C> <var:m> <var:w> <var:o> : nat , Nat . even ( <nat:260> * <var:H> + <nat:404> * <var:p> + <nat:372> * <var:C> + <nat:160> * <var:m> + <nat:282> * <var:w> + <nat:422> * <var:o> + <nat:476> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:260> = true ) . { auto . } assert ( <genH> : Nat . even <nat:404> = true ) . { auto . } assert ( <genH> : Nat . even <nat:282> = true ) . { auto . } assert ( <genH> : Nat . even <nat:160> = true ) . { auto . } assert ( <genH> : Nat . even <nat:372> = true ) . { auto . } assert ( <genH> : Nat . even <nat:422> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:260> * <var:H> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:404> * <var:p> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:282> * <var:w> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:160> * <var:m> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:372> * <var:C> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:422> * <var:o> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:260> * <var:H> + <nat:404> * <var:p> + <nat:372> * <var:C> + <nat:160> * <var:m> + <nat:282> * <var:w> + <nat:422> * <var:o> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . even_add . rewrite <genH> . auto . Qed . 