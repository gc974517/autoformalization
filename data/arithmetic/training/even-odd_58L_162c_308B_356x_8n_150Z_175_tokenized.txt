\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Assuming all natural terms $ <var:x> $ , $ <var:c> $ , $ <var:L> $ , $ <var:Z> $ , $ <var:n> $ , and $ <var:B> $ the formula $ <nat:8> \cdot <var:n> + <var:x> \cdot <nat:356> + <nat:175> + <var:c> \cdot <nat:162> + <var:Z> \cdot <nat:150> + <var:L> \cdot <nat:58> + <var:B> \cdot <nat:308> $ is guaranteed to be odd . \end{theorem} \begin{proof} The addition of even elements of $ \mathbb{N} $ together and an odd integer is an odd number . See that the number $ <nat:58> $ is obviously an even integer . Accordingly , the product $ <var:L> \times <nat:58> $ is guaranteed to be even at the same time . The coefficient $ <nat:162> $ is known as an even element of $ \mathbb{N} $ . As a consequence , the product $ <nat:162> \times <var:c> $ must be even additionally . Further , the pair $ <nat:308> \times <var:B> $ is known as an even number in $ \mathbb{N} $ . This must be true by reason that the natural number $ <nat:308> $ is clearly an even whole number . In addition to this , the coefficient $ <nat:356> $ is trivially even . For this reason , $ <var:x> \times <nat:356> $ is even also . Recall that the number $ <nat:8> $ is clearly an even element of $ \mathbb{N} $ . For this reason , the pair $ <nat:8> \times <var:n> $ must be even too . Building on , remember the term $ <var:Z> \times <nat:150> $ is trivially even . This holds as a consequence that the positive integer $ <nat:150> $ is trivially instrinsically an even element of $ \mathbb{N} $ . It can be checked that this theorem is proven . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:x> <var:c> <var:L> <var:Z> <var:n> <var:B> : nat , Nat . odd ( <nat:8> * <var:n> + <nat:356> * <var:x> + <nat:162> * <var:c> + <nat:150> * <var:Z> + <nat:58> * <var:L> + <nat:308> * <var:B> + <nat:175> ) = true . Proof . intros . rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . assert ( <genH> : Nat . even <nat:58> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:58> * <var:L> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:162> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:162> * <var:c> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:308> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:308> * <var:B> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:356> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:356> * <var:x> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:8> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:8> * <var:n> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:150> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:150> * <var:Z> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 