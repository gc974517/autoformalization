\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:w> * <nat:270> + <nat:46> + <var:t> * <nat:136> + <var:C> * <nat:430> + <var:h> * <nat:130> + <nat:142> * <var:a> + <nat:46> * <var:z> + <var:r> * <nat:154> + <nat:480> * <var:D> $ will be even . \end{theorem} \begin{proof} See that $ <nat:46> $ is obviously an even natural number . It can be verified that the result is proven . The formula $ <nat:142> <var:a> + <var:z> <nat:46> + <nat:136> <var:t> + <nat:154> <var:r> + <nat:46> + <nat:130> <var:h> + <nat:430> <var:C> + <nat:480> <var:D> + <var:w> <nat:270> $ is even as a consequence that $ <nat:46> \times <var:z> + <nat:430> \times <var:C> + <nat:142> \times <var:a> + <nat:270> \times <var:w> + <var:r> \times <nat:154> + <nat:130> \times <var:h> + <nat:136> \times <var:t> + <var:D> \times <nat:480> $ is known as even . Remember that the products $ <var:D> \cdot <nat:480> $ additionally $ <var:r> \cdot <nat:154> $ are obviously even . This claim is proven by reason that the whole numbers $ <nat:480> $ plus $ <nat:154> $ are trivially even . On top of this , the pairs $ <var:C> \cdot <nat:430> $ , $ <nat:142> \cdot <var:a> $ , $ <var:t> \cdot <nat:136> $ , $ <nat:270> \cdot <var:w> $ , as well as $ <var:z> \cdot <nat:46> $ are known to be even because the product of an even natural with a natural will be even and also the integers $ <nat:430> $ , $ <nat:142> $ , $ <nat:136> $ , $ <nat:270> $ , plus $ <nat:46> $ are known to be even . Likewise , the term $ <nat:130> \cdot <var:h> $ is known to be even . This fact is proven as a consequence that taking the product between an even whole number and a positive integer must be even , which must be true from the fact the integer $ <nat:130> $ is obviously an even whole number . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:w> <var:t> <var:C> <var:h> <var:a> <var:z> <var:r> <var:D> : nat , Nat . even ( <nat:270> * <var:w> + <nat:136> * <var:t> + <nat:430> * <var:C> + <nat:130> * <var:h> + <nat:142> * <var:a> + <nat:46> * <var:z> + <nat:154> * <var:r> + <nat:480> * <var:D> + <nat:46> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:46> = true ) . { auto . } assert ( <genH> : Nat . even <nat:480> = true ) . { auto . } assert ( <genH> : Nat . even <nat:154> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:480> * <var:D> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:154> * <var:r> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:430> = true ) . { auto . } assert ( <genH> : Nat . even <nat:142> = true ) . { auto . } assert ( <genH> : Nat . even <nat:136> = true ) . { auto . } assert ( <genH> : Nat . even <nat:270> = true ) . { auto . } assert ( <genH> : Nat . even <nat:46> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:430> * <var:C> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:142> * <var:a> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:136> * <var:t> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:270> * <var:w> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:46> * <var:z> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:130> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:130> * <var:h> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:270> * <var:w> + <nat:136> * <var:t> + <nat:430> * <var:C> + <nat:130> * <var:h> + <nat:142> * <var:a> + <nat:46> * <var:z> + <nat:154> * <var:r> + <nat:480> * <var:D> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . auto . Qed . 