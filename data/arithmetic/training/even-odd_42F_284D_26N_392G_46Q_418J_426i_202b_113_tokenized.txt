\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:N> <nat:26> + <var:Q> <nat:46> + <var:J> <nat:418> + <nat:284> <var:D> + <nat:42> <var:F> + <nat:113> + <nat:392> <var:G> + <var:b> <nat:202> + <var:i> <nat:426> $ is odd . \end{theorem} \begin{proof} The summing between an even number and an odd natural number must be an odd natural number . Remember the formula $ <nat:418> <var:J> + <var:D> <nat:284> + <var:i> <nat:426> + <var:N> <nat:26> + <var:F> <nat:42> + <nat:113> + <nat:202> <var:b> + <var:G> <nat:392> + <nat:46> <var:Q> $ is odd as a consequence that the formula $ <nat:42> \times <var:F> + <nat:284> \times <var:D> + <var:N> \times <nat:26> + <var:G> \times <nat:392> + <nat:46> \times <var:Q> + <nat:418> \times <var:J> + <var:i> \times <nat:426> + <var:b> \times <nat:202> $ is clearly even . Notice the adding of even naturals concurrently and an even positive integer must be even . Remember that the terms $ <var:G> <nat:392> $ , $ <var:N> <nat:26> $ , $ <nat:42> <var:F> $ , $ <nat:284> <var:D> $ , $ <nat:418> <var:J> $ , $ <var:Q> <nat:46> $ , as well as $ <var:b> <nat:202> $ are known to be even elements of $ \mathbb{N} $ . $ <var:i> <nat:426> $ is guaranteed to be an even number as a consequence that taking the product between an even element of $ \mathbb{Z}^+ $ and some number is even . as well as since the product between even numbers and some positive integer must be an even positive integer . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:N> <var:Q> <var:J> <var:D> <var:F> <var:G> <var:b> <var:i> : nat , Nat . odd ( <nat:26> * <var:N> + <nat:46> * <var:Q> + <nat:418> * <var:J> + <nat:284> * <var:D> + <nat:42> * <var:F> + <nat:392> * <var:G> + <nat:202> * <var:b> + <nat:426> * <var:i> + <nat:113> ) = true . Proof . intros . rewrite Nat . odd_add . assert ( <genH> : Nat . even ( <nat:392> * <var:G> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:26> * <var:N> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:42> * <var:F> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:284> * <var:D> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:418> * <var:J> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:46> * <var:Q> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:202> * <var:b> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:426> * <var:i> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:26> * <var:N> + <nat:46> * <var:Q> + <nat:418> * <var:J> + <nat:284> * <var:D> + <nat:42> * <var:F> + <nat:392> * <var:G> + <nat:202> * <var:b> + <nat:426> * <var:i> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite <- Nat . negb_even . rewrite <genH> . auto . Qed . 