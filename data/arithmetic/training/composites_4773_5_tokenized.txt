\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \newtheorem{definition}{Definition} \begin{document} \begin{definition} Whenever we get $ <var:L> $ , $ <var:k> $ , $ <var:W> $ , $ <var:S> $ , and $ <var:a> \geq <nat:2> $ such that using $ <var:w> \in \mathbb{N} $ , $ <var:a> * <var:S> * <var:W> * <var:k> * <var:L> = <var:w> $ using some $ <var:a> $ , $ <var:L> $ , $ <var:S> $ , $ <var:W> $ , $ <var:k> $ , then let that $ <var:w> $ is a <def:five-composite> positive integer . \end{definition} \begin{theorem} The natural number <nat:55440> is a <def:five-composite> whole number . \end{theorem} \begin{proof} Remember that a <def:five-composite> integer is the multiplication of integers $ <var:a> $ , $ <var:k> $ , $ <var:L> $ , $ <var:S> $ , $ <var:W> $ so that $ <var:a> $ , $ <var:W> $ , $ <var:S> $ , $ <var:k> $ , and $ <var:L> \geq <nat:2> $ . Assume $ <var:k> = <nat:10> $ , $ <var:a> = <nat:6> $ , $ <var:S> = <nat:12> $ , $ <var:L> = <nat:7> $ , and $ <var:W> = <nat:11> $ . Note $ <var:a> = <nat:6> $ , $ <var:L> = <nat:7> $ , $ <var:k> = <nat:10> $ , $ <var:S> = <nat:12> $ , and $ <var:W> = <nat:11> \geq <nat:2> $ . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:five-composite> ( <var:w> : nat ) := exists <var:a> <var:L> <var:S> <var:W> <var:k> : nat , ( <var:L> >= <nat:2> ) /\ ( <var:k> >= <nat:2> ) /\ ( <var:W> >= <nat:2> ) /\ ( <var:S> >= <nat:2> ) /\ ( <var:a> >= <nat:2> ) /\ ( <var:a> * <var:S> * <var:W> * <var:k> * <var:L> = <var:w> ) . Theorem <genP:1> : <def:five-composite> <nat:55440> . Proof . unfold <def:five-composite> . exists <nat:6> . exists <nat:7> . exists <nat:12> . exists <nat:11> . exists <nat:10> . assert ( <genH> : <nat:6> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:7> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:10> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:12> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:11> >= <nat:2> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 