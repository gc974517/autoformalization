\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} With all positive numbers $ <var:X> $ , $ <var:d> $ , $ <var:e> $ , $ <var:I> $ , $ <var:P> $ , $ <var:g> $ , $ <var:B> $ , and $ <var:r> $ $ <nat:88> <var:r> + <var:g> <nat:332> + <var:e> <nat:492> + <nat:262> <var:P> + <nat:40> + <var:B> <nat:422> + <nat:76> <var:d> + <nat:286> <var:I> + <nat:466> <var:X> $ will be even . \end{theorem} \begin{proof} It can be justified that the formula $ <nat:332> \times <var:g> + <nat:286> \times <var:I> + <var:X> \times <nat:466> + <var:d> \times <nat:76> + <var:e> \times <nat:492> + <nat:40> + <nat:422> \times <var:B> + <nat:262> \times <var:P> + <nat:88> \times <var:r> $ must be even . Take note $ <nat:40> $ is known to be an even integer . Notice the coefficients $ <nat:88> $ , $ <nat:76> $ , and moreover $ <nat:286> $ are guaranteed to be even We know that the integers $ <nat:492> $ , $ <nat:466> $ , in addition to $ <nat:332> $ must be even numbers Take note that the coefficient $ <nat:422> $ is known as an even positive integer Further , the integer $ <nat:262> $ is guaranteed to be an even natural number \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:X> <var:d> <var:e> <var:I> <var:P> <var:g> <var:B> <var:r> : nat , Nat . even ( <nat:88> * <var:r> + <nat:332> * <var:g> + <nat:492> * <var:e> + <nat:262> * <var:P> + <nat:422> * <var:B> + <nat:76> * <var:d> + <nat:286> * <var:I> + <nat:466> * <var:X> + <nat:40> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:40> = true ) . { auto . } assert ( <genH> : Nat . even <nat:88> = true ) . { auto . } assert ( <genH> : Nat . even <nat:76> = true ) . { auto . } assert ( <genH> : Nat . even <nat:286> = true ) . { auto . } assert ( <genH> : Nat . even <nat:492> = true ) . { auto . } assert ( <genH> : Nat . even <nat:466> = true ) . { auto . } assert ( <genH> : Nat . even <nat:332> = true ) . { auto . } assert ( <genH> : Nat . even <nat:422> = true ) . { auto . } assert ( <genH> : Nat . even <nat:262> = true ) . { auto . } repeat rewrite Nat . even_add . repeat rewrite Nat . even_mul . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 