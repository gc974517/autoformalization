\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \newtheorem{definition}{Definition} \begin{document} \begin{definition} Assume $ <var:i> $ , $ <var:e> $ , $ <var:o> $ , $ <var:l> $ , $ <var:K> $ , $ <var:F> $ , $ <var:G> \in \mathbb{N} $ . Say that $ <var:X> \in \mathbb{N} $ is <def:seven-composite> given $ <var:o> \times <var:K> \times <var:e> \times <var:F> \times <var:G> \times <var:l> \times <var:i> = <var:X> $ and factors are more than <nat:1> . \end{definition} \begin{theorem} $ <var:X> = <nat:184800> $ is <def:seven-composite> . \end{theorem} \begin{proof} Recall that <nat:184800> is <def:seven-composite> iff <nat:184800> is the multiplication of natural numbers $ <var:e> $ , $ <var:o> $ , $ <var:G> $ , $ <var:K> $ , $ <var:i> $ , $ <var:F> $ , and $ <var:l> $ where $ <var:K> $ , $ <var:G> $ , $ <var:F> $ , $ <var:l> $ , $ <var:i> $ , $ <var:e> $ and $ <var:o> > <nat:1> $ . Notice $ <nat:184800> = <var:K> \times <var:i> \times <var:e> \times <var:G> \times <var:F> \times <var:o> \times <var:l> $ shows $ <var:o> = <nat:2> $ , $ <var:F> = <nat:8> $ , $ <var:l> = <nat:3> $ , $ <var:e> = <nat:5> $ , $ <var:K> = <nat:10> $ , $ <var:G> = <nat:11> $ , $ <var:i> = <nat:7> $ . Plus notice $ <nat:8> $ , $ <nat:10> $ , $ <nat:7> $ , $ <nat:3> $ , $ <nat:11> $ , $ <nat:2> $ , and $ <nat:5> > <nat:1> $ . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:seven-composite> ( <var:X> : nat ) := exists <var:i> <var:e> <var:o> <var:l> <var:K> <var:F> <var:G> : nat , ( <var:o> * <var:K> * <var:e> * <var:F> * <var:G> * <var:l> * <var:i> = <var:X> ) /\ ( <var:i> > <nat:1> ) /\ ( <var:e> > <nat:1> ) /\ ( <var:o> > <nat:1> ) /\ ( <var:l> > <nat:1> ) /\ ( <var:K> > <nat:1> ) /\ ( <var:F> > <nat:1> ) /\ ( <var:G> > <nat:1> ) . Theorem <genP:1> : <def:seven-composite> <nat:184800> . Proof . unfold <def:seven-composite> . exists <nat:7> . exists <nat:5> . exists <nat:2> . exists <nat:3> . exists <nat:10> . exists <nat:8> . exists <nat:11> . assert ( <genH> : <nat:8> > <nat:1> ) . { lia . } assert ( <genH> : <nat:10> > <nat:1> ) . { lia . } assert ( <genH> : <nat:7> > <nat:1> ) . { lia . } assert ( <genH> : <nat:3> > <nat:1> ) . { lia . } assert ( <genH> : <nat:11> > <nat:1> ) . { lia . } assert ( <genH> : <nat:2> > <nat:1> ) . { lia . } assert ( <genH> : <nat:5> > <nat:1> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 