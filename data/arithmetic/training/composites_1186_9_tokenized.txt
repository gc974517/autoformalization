\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Assume $ <var:M> $ , $ <var:R> $ , $ <var:W> $ , $ <var:n> $ , $ <var:N> $ , $ <var:a> $ , $ <var:h> $ , $ <var:f> $ , $ <var:z> \in \mathbb{Z}^+ $ larger than <nat:1> . Take that some whole number $ <var:i> $ will be considered as <def:nine-composite> given $ <var:i> = <var:M> \times <var:R> \times <var:n> \times <var:W> \times <var:f> \times <var:a> \times <var:h> \times <var:z> \times <var:N> $ . Thus $ <nat:7257600> = <var:i> $ is <def:nine-composite> . \end{theorem} \begin{proof} Recollect that <nat:7257600> is a <def:nine-composite> whole number if <nat:7257600> is the product between numbers $ <var:h> $ , $ <var:f> $ , $ <var:M> $ , $ <var:W> $ , $ <var:a> $ , $ <var:n> $ , $ <var:N> $ , $ <var:R> $ , $ <var:z> $ so that $ <var:h> $ , $ <var:a> $ , $ <var:W> $ , $ <var:R> $ , $ <var:n> $ , $ <var:N> $ , $ <var:f> $ , $ <var:M> $ , $ <var:z> > <nat:1> $ . Take $ <var:z> = <nat:5> $ , $ <var:W> = <nat:2> $ , $ <var:M> = <nat:4> $ , $ <var:a> = <nat:9> $ , $ <var:f> = <nat:7> $ , $ <var:h> = <nat:12> $ , $ <var:N> = <nat:8> $ , $ <var:n> = <nat:3> $ and $ <var:R> = <nat:10> $ . We present the theorem holds considering As $ <nat:10> $ , $ <nat:8> $ , $ <nat:9> $ , $ <nat:2> $ , $ <nat:3> $ , $ <nat:4> $ , $ <nat:7> $ , $ <nat:12> $ and $ <nat:5> $ are greater than <nat:1> . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:nine-composite> ( <var:i> : nat ) := exists <var:M> <var:R> <var:W> <var:n> <var:N> <var:a> <var:h> <var:f> <var:z> : nat , ( <var:M> > <nat:1> ) /\ ( <var:R> > <nat:1> ) /\ ( <var:W> > <nat:1> ) /\ ( <var:n> > <nat:1> ) /\ ( <var:N> > <nat:1> ) /\ ( <var:a> > <nat:1> ) /\ ( <var:h> > <nat:1> ) /\ ( <var:f> > <nat:1> ) /\ ( <var:z> > <nat:1> ) /\ ( <var:i> = <var:M> * <var:R> * <var:n> * <var:W> * <var:f> * <var:a> * <var:h> * <var:z> * <var:N> ) . Theorem <genP:1> : <def:nine-composite> <nat:7257600> . Proof . unfold <def:nine-composite> . exists <nat:4> . exists <nat:10> . exists <nat:2> . exists <nat:3> . exists <nat:8> . exists <nat:9> . exists <nat:12> . exists <nat:7> . exists <nat:5> . assert ( <genH> : <nat:10> > <nat:1> ) . { lia . } assert ( <genH> : <nat:8> > <nat:1> ) . { lia . } assert ( <genH> : <nat:9> > <nat:1> ) . { lia . } assert ( <genH> : <nat:2> > <nat:1> ) . { lia . } assert ( <genH> : <nat:3> > <nat:1> ) . { lia . } assert ( <genH> : <nat:4> > <nat:1> ) . { lia . } assert ( <genH> : <nat:7> > <nat:1> ) . { lia . } assert ( <genH> : <nat:12> > <nat:1> ) . { lia . } assert ( <genH> : <nat:5> > <nat:1> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 