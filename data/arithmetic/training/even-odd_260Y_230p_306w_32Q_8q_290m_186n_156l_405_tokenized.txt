\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:405> + <var:n> * <nat:186> + <var:q> * <nat:8> + <nat:156> * <var:l> + <var:m> * <nat:290> + <nat:32> * <var:Q> + <nat:306> * <var:w> + <nat:230> * <var:p> + <nat:260> * <var:Y> $ will be odd . \end{theorem} \begin{proof} We check this lemma is proven . We make use the fact the formula $ <var:Q> <nat:32> + <nat:290> <var:m> + <var:l> <nat:156> + <nat:405> + <nat:230> <var:p> + <var:n> <nat:186> + <var:Y> <nat:260> + <var:q> <nat:8> + <nat:306> <var:w> $ is guaranteed to be odd since the expression $ <nat:186> \cdot <var:n> + <var:q> \cdot <nat:8> + <nat:156> \cdot <var:l> + <nat:230> \cdot <var:p> + <var:Y> \cdot <nat:260> + <nat:32> \cdot <var:Q> + <var:m> \cdot <nat:290> + <var:w> \cdot <nat:306> $ is known to be even . The term $ <var:Y> <nat:260> $ is an even positive integer as a consequence that multiplying between an even natural number and an arbitrary element of $ \mathbb{Z}^+ $ is even as well as the natural number $ <nat:260> $ is obviously even . On top of this , notice that the number $ <nat:230> $ is known to be an even whole number . Accordingly , the term $ <var:p> <nat:230> $ will be even additionally . Building on , the natural number $ <nat:306> $ is obviously an even number in $ \mathbb{N} $ . Consequently , $ <nat:306> <var:w> $ must be even too . The product $ <var:Q> <nat:32> $ is obviously an even integer . This holds from the knowledge taking the product between an even number in $ \mathbb{N} $ with any whole number is guaranteed to be an even number in $ \mathbb{Z}^+ $ . This claim holds by reason that the whole number $ <nat:32> $ is trivially even . On top of this , the leading term $ <nat:8> $ is guaranteed to be an even element of $ \mathbb{Z}^+ $ . So , the term $ <nat:8> <var:q> $ must be even at the same time . See the product $ <nat:290> <var:m> $ is even as a consequence that the positive integer $ <nat:290> $ is known to be even . $ <nat:186> <var:n> $ is guaranteed to be an even whole number from the knowledge multiplying of an even element of $ \mathbb{Z}^+ $ with a element of $ \mathbb{N} $ will be by its very nature an even whole number . This claim is proven as a consequence that the whole number $ <nat:186> $ is known as an even positive integer . On top of this , the whole number $ <nat:156> $ is known to be even . So , the pair $ <var:l> <nat:156> $ is even too . Because the summing of an even number and even numbers is guaranteed to be an even number in $ \mathbb{N} $ , plus by reason that multiplying of even integers with some element of $ \mathbb{Z}^+ $ will be even . The totaling between even numbers in $ \mathbb{Z}^+ $ concurrently and an odd whole number will be trivially an odd natural number . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:n> <var:q> <var:l> <var:m> <var:Q> <var:w> <var:p> <var:Y> : nat , Nat . odd ( <nat:186> * <var:n> + <nat:8> * <var:q> + <nat:156> * <var:l> + <nat:290> * <var:m> + <nat:32> * <var:Q> + <nat:306> * <var:w> + <nat:230> * <var:p> + <nat:260> * <var:Y> + <nat:405> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:260> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:260> * <var:Y> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:230> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:230> * <var:p> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:306> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:306> * <var:w> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:32> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:32> * <var:Q> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:8> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:8> * <var:q> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:290> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:290> * <var:m> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:186> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:186> * <var:n> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:156> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:156> * <var:l> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:186> * <var:n> + <nat:8> * <var:q> + <nat:156> * <var:l> + <nat:290> * <var:m> + <nat:32> * <var:Q> + <nat:306> * <var:w> + <nat:230> * <var:p> + <nat:260> * <var:Y> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . auto . Qed . 