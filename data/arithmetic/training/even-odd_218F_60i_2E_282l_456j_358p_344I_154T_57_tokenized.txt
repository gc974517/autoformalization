\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Taking any natural numbers $ <var:p> $ , $ <var:l> $ , $ <var:T> $ , $ <var:F> $ , $ <var:I> $ , $ <var:E> $ , $ <var:i> $ , and $ <var:j> $ $ <nat:2> \times <var:E> + <nat:218> \times <var:F> + <var:p> \times <nat:358> + <var:j> \times <nat:456> + <nat:154> \times <var:T> + <nat:57> + <var:l> \times <nat:282> + <nat:344> \times <var:I> + <nat:60> \times <var:i> $ is odd . \end{theorem} \begin{proof} Remember the formula $ <nat:2> * <var:E> + <nat:358> * <var:p> + <var:j> * <nat:456> + <var:l> * <nat:282> + <var:i> * <nat:60> + <var:I> * <nat:344> + <var:F> * <nat:218> + <nat:154> * <var:T> $ is known to be even . Further , observe the integers $ <nat:2> $ , $ <nat:358> $ , $ <nat:456> $ , $ <nat:282> $ , $ <nat:60> $ , $ <nat:344> $ , $ <nat:218> $ , and likewise $ <nat:154> $ are guaranteed to be even . So , the products $ <nat:2> \cdot <var:E> $ , $ <var:p> \cdot <nat:358> $ , $ <nat:456> \cdot <var:j> $ , $ <var:l> \cdot <nat:282> $ , $ <var:i> \cdot <nat:60> $ , $ <nat:344> \cdot <var:I> $ , $ <nat:218> \cdot <var:F> $ , and likewise $ <var:T> \cdot <nat:154> $ is even as well . $ <var:F> <nat:218> + <var:i> <nat:60> + <nat:2> <var:E> + <var:l> <nat:282> + <nat:456> <var:j> + <nat:358> <var:p> + <var:I> <nat:344> + <nat:154> <var:T> $ will be even from the fact the totaling of an even element of $ \mathbb{N} $ and an even integer is even and also from the knowledge the product of even numbers in $ \mathbb{Z}^+ $ and some natural number must be an even number in $ \mathbb{N} $ . The addition between an even element of $ \mathbb{N} $ with an odd number in $ \mathbb{Z}^+ $ is by its very nature an odd element of $ \mathbb{Z}^+ $ . Then , the lemma is proven . Remember $ <nat:57> $ is trivially odd . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:p> <var:l> <var:T> <var:F> <var:I> <var:E> <var:i> <var:j> : nat , Nat . odd ( <nat:2> * <var:E> + <nat:218> * <var:F> + <nat:358> * <var:p> + <nat:456> * <var:j> + <nat:154> * <var:T> + <nat:282> * <var:l> + <nat:344> * <var:I> + <nat:60> * <var:i> + <nat:57> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:2> = true ) . { auto . } assert ( <genH> : Nat . even <nat:358> = true ) . { auto . } assert ( <genH> : Nat . even <nat:456> = true ) . { auto . } assert ( <genH> : Nat . even <nat:282> = true ) . { auto . } assert ( <genH> : Nat . even <nat:60> = true ) . { auto . } assert ( <genH> : Nat . even <nat:344> = true ) . { auto . } assert ( <genH> : Nat . even <nat:218> = true ) . { auto . } assert ( <genH> : Nat . even <nat:154> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:2> * <var:E> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:358> * <var:p> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:456> * <var:j> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:282> * <var:l> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:60> * <var:i> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:344> * <var:I> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:218> * <var:F> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:154> * <var:T> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:2> * <var:E> + <nat:218> * <var:F> + <nat:358> * <var:p> + <nat:456> * <var:j> + <nat:154> * <var:T> + <nat:282> * <var:l> + <nat:344> * <var:I> + <nat:60> * <var:i> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . assert ( <genH> : Nat . odd <nat:57> = true ) . { auto . } rewrite <- Nat . negb_even . rewrite <genH> . rewrite <genH> . auto . Qed . 