\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:422> \cdot <var:G> + <var:v> \cdot <nat:16> + <var:n> \cdot <nat:90> + <nat:324> + <nat:60> \cdot <var:V> + <var:p> \cdot <nat:76> + <nat:358> \cdot <var:C> + <nat:326> \cdot <var:S> + <var:i> \cdot <nat:208> $ is even given any $ <var:C> $ , $ <var:v> $ , $ <var:S> $ , $ <var:p> $ , $ <var:n> $ , $ <var:V> $ , $ <var:i> $ , and $ <var:G> \in \mathbb{N} $ . \end{theorem} \begin{proof} The whole numbers $ <nat:422> $ , $ <nat:16> $ , $ <nat:90> $ , $ <nat:60> $ , $ <nat:76> $ , $ <nat:358> $ , $ <nat:326> $ , and $ <nat:208> $ are even integers . For this reason , the products $ <var:G> * <nat:422> $ , $ <nat:16> * <var:v> $ , $ <var:n> * <nat:90> $ , $ <nat:60> * <var:V> $ , $ <nat:76> * <var:p> $ , $ <var:C> * <nat:358> $ , $ <nat:326> * <var:S> $ , and moreover $ <var:i> * <nat:208> $ will be even in addition . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:C> <var:v> <var:S> <var:p> <var:n> <var:V> <var:i> <var:G> : nat , Nat . even ( <nat:422> * <var:G> + <nat:16> * <var:v> + <nat:90> * <var:n> + <nat:60> * <var:V> + <nat:76> * <var:p> + <nat:358> * <var:C> + <nat:326> * <var:S> + <nat:208> * <var:i> + <nat:324> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:422> = true ) . { auto . } assert ( <genH> : Nat . even <nat:16> = true ) . { auto . } assert ( <genH> : Nat . even <nat:90> = true ) . { auto . } assert ( <genH> : Nat . even <nat:60> = true ) . { auto . } assert ( <genH> : Nat . even <nat:76> = true ) . { auto . } assert ( <genH> : Nat . even <nat:358> = true ) . { auto . } assert ( <genH> : Nat . even <nat:326> = true ) . { auto . } assert ( <genH> : Nat . even <nat:208> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:422> * <var:G> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:16> * <var:v> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:90> * <var:n> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:60> * <var:V> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:76> * <var:p> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:358> * <var:C> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:326> * <var:S> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:208> * <var:i> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 