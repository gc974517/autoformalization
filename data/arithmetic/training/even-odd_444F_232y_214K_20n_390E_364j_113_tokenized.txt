\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Taking $ <var:F> $ , $ <var:n> $ , $ <var:j> $ , $ <var:E> $ , $ <var:K> $ , and $ <var:y> $ the expression $ <var:j> <nat:364> + <nat:232> <var:y> + <nat:20> <var:n> + <var:F> <nat:444> + <nat:113> + <nat:390> <var:E> + <nat:214> <var:K> $ is guaranteed to be odd . \end{theorem} \begin{proof} Remember the expression $ <var:j> * <nat:364> + <var:y> * <nat:232> + <nat:390> * <var:E> + <nat:214> * <var:K> + <nat:113> + <var:n> * <nat:20> + <nat:444> * <var:F> $ is clearly odd since the sum $ <var:F> * <nat:444> + <var:y> * <nat:232> + <nat:214> * <var:K> + <var:n> * <nat:20> + <nat:390> * <var:E> + <var:j> * <nat:364> $ is known as even . Further , we know that the pairs $ <nat:444> * <var:F> $ , $ <var:y> * <nat:232> $ , $ <nat:214> * <var:K> $ , $ <var:n> * <nat:20> $ , $ <nat:390> * <var:E> $ , additionally $ <nat:364> * <var:j> $ are obviously even elements of $ \mathbb{Z}^+ $ . This claim holds because the numbers $ <nat:444> $ , $ <nat:232> $ , $ <nat:214> $ , $ <nat:20> $ , $ <nat:390> $ , and moreover $ <nat:364> $ are known to be even numbers . The claim must be true since the multiplication between an even element of $ \mathbb{N} $ and a integer must be an even element of $ \mathbb{Z}^+ $ . Notice $ <nat:113> $ is odd . We justify the lemma holds . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:F> <var:n> <var:j> <var:E> <var:K> <var:y> : nat , Nat . odd ( <nat:364> * <var:j> + <nat:232> * <var:y> + <nat:20> * <var:n> + <nat:444> * <var:F> + <nat:390> * <var:E> + <nat:214> * <var:K> + <nat:113> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:444> = true ) . { auto . } assert ( <genH> : Nat . even <nat:232> = true ) . { auto . } assert ( <genH> : Nat . even <nat:214> = true ) . { auto . } assert ( <genH> : Nat . even <nat:20> = true ) . { auto . } assert ( <genH> : Nat . even <nat:390> = true ) . { auto . } assert ( <genH> : Nat . even <nat:364> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:444> * <var:F> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:232> * <var:y> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:214> * <var:K> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:20> * <var:n> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:390> * <var:E> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:364> * <var:j> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:364> * <var:j> + <nat:232> * <var:y> + <nat:20> * <var:n> + <nat:444> * <var:F> + <nat:390> * <var:E> + <nat:214> * <var:K> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } assert ( <genH> : Nat . odd <nat:113> = true ) . { auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . rewrite <genH> . auto . Qed . 