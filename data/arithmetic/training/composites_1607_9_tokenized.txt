\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \newtheorem{definition}{Definition} \begin{document} \begin{definition} Supposing that we have $ <var:K> = <var:l> * <var:f> * <var:b> * <var:t> * <var:k> * <var:e> * <var:X> * <var:T> * <var:S> $ for some positive integer $ <var:K> $ and so that $ <var:b> $ , $ <var:X> $ , $ <var:f> $ , $ <var:S> $ , $ <var:t> $ , $ <var:k> $ , $ <var:l> $ , $ <var:e> $ and $ <var:T> \geq <nat:2> $ using some $ <var:T> $ , $ <var:X> $ , $ <var:b> $ , $ <var:l> $ , $ <var:e> $ , $ <var:t> $ , $ <var:k> $ , $ <var:S> $ , $ <var:f> \in \mathbb{Z}^+ $ , then define that $ <var:K> $ is a <def:nine-composite> number . \end{definition} \begin{theorem} The integer <nat:6652800> is a <def:nine-composite> positive integer . \end{theorem} \begin{proof} We justify $ <var:k> \times <var:l> \times <var:b> \times <var:T> \times <var:S> \times <var:X> \times <var:f> \times <var:t> \times <var:e> = <nat:6652800> $ as well as $ <var:S> $ , $ <var:T> $ , $ <var:k> $ , $ <var:t> $ , $ <var:f> $ , $ <var:e> $ , $ <var:X> $ , $ <var:l> $ , $ <var:b> \geq <nat:2> $ . We verify <nat:6652800> is <def:nine-composite> considering $ <nat:6652800> = <var:b> \times <var:k> \times <var:T> \times <var:e> \times <var:l> \times <var:f> \times <var:X> \times <var:t> \times <var:S> $ yields $ <var:f> = <nat:9> $ , $ <var:k> = <nat:10> $ , $ <var:X> = <nat:3> $ , $ <var:t> = <nat:7> $ , $ <var:e> = <nat:11> $ , $ <var:S> = <nat:5> $ , $ <var:T> = <nat:8> $ , $ <var:l> = <nat:4> $ and $ <var:b> = <nat:2> $ and for $ <nat:4> $ , $ <nat:11> $ , $ <nat:5> $ , $ <nat:10> $ , $ <nat:8> $ , $ <nat:9> $ , $ <nat:7> $ , $ <nat:2> $ , $ <nat:3> \geq <nat:2> $ . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:nine-composite> ( <var:K> : nat ) := exists <var:T> <var:X> <var:b> <var:l> <var:e> <var:t> <var:k> <var:S> <var:f> : nat , ( <var:K> = <var:l> * <var:f> * <var:b> * <var:t> * <var:k> * <var:e> * <var:X> * <var:T> * <var:S> ) /\ ( <var:b> >= <nat:2> ) /\ ( <var:X> >= <nat:2> ) /\ ( <var:f> >= <nat:2> ) /\ ( <var:S> >= <nat:2> ) /\ ( <var:t> >= <nat:2> ) /\ ( <var:k> >= <nat:2> ) /\ ( <var:l> >= <nat:2> ) /\ ( <var:e> >= <nat:2> ) /\ ( <var:T> >= <nat:2> ) . Theorem <genP:1> : <def:nine-composite> <nat:6652800> . Proof . unfold <def:nine-composite> . exists <nat:8> . exists <nat:3> . exists <nat:2> . exists <nat:4> . exists <nat:11> . exists <nat:7> . exists <nat:10> . exists <nat:5> . exists <nat:9> . assert ( <genH> : <nat:4> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:11> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:5> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:10> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:8> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:9> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:7> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:2> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:3> >= <nat:2> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 