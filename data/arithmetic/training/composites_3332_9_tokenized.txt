\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \newtheorem{definition}{Definition} \begin{document} \begin{definition} We assume that $ <var:v> $ is <def:nine-composite> only if there are some natural numbers $ <var:p> $ , $ <var:K> $ , $ <var:J> $ , $ <var:P> $ , $ <var:g> $ , $ <var:T> $ , $ <var:U> $ , $ <var:A> $ , $ <var:d> $ so that $ <var:g> \cdot <var:p> \cdot <var:J> \cdot <var:K> \cdot <var:U> \cdot <var:d> \cdot <var:A> \cdot <var:P> \cdot <var:T> = <var:v> $ for some number $ <var:v> $ plus satisfying the condition that $ <var:J> $ , $ <var:T> $ , $ <var:g> $ , $ <var:A> $ , $ <var:P> $ , $ <var:p> $ , $ <var:d> $ , $ <var:K> $ , $ <var:U> \geq <nat:2> $ . \end{definition} \begin{theorem} $ <var:v> = <nat:15966720> $ is a <def:nine-composite> number . \end{theorem} \begin{proof} Notice $ <nat:11> $ , $ <nat:6> $ , $ <nat:2> $ , $ <nat:4> $ , $ <nat:5> $ , $ <nat:8> $ , $ <nat:12> $ , $ <nat:9> $ , $ <nat:7> $ are greater than <nat:1> . Additionally note still $ <var:U> * <var:d> * <var:J> * <var:p> * <var:K> * <var:T> * <var:A> * <var:P> * <var:g> = <nat:2> * <nat:11> * <nat:6> * <nat:8> * <nat:12> * <nat:5> * <nat:9> * <nat:7> * <nat:4> = <nat:15966720> $ . This indicates the thesis is valid . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:nine-composite> ( <var:v> : nat ) := exists <var:p> <var:K> <var:J> <var:P> <var:g> <var:T> <var:U> <var:A> <var:d> : nat , ( <var:g> * <var:p> * <var:J> * <var:K> * <var:U> * <var:d> * <var:A> * <var:P> * <var:T> = <var:v> ) /\ ( <var:J> >= <nat:2> ) /\ ( <var:T> >= <nat:2> ) /\ ( <var:g> >= <nat:2> ) /\ ( <var:A> >= <nat:2> ) /\ ( <var:P> >= <nat:2> ) /\ ( <var:p> >= <nat:2> ) /\ ( <var:d> >= <nat:2> ) /\ ( <var:K> >= <nat:2> ) /\ ( <var:U> >= <nat:2> ) . Theorem <genP:1> : <def:nine-composite> <nat:15966720> . Proof . unfold <def:nine-composite> . assert ( <genH> : <nat:11> > <nat:1> ) . { lia . } assert ( <genH> : <nat:6> > <nat:1> ) . { lia . } assert ( <genH> : <nat:2> > <nat:1> ) . { lia . } assert ( <genH> : <nat:4> > <nat:1> ) . { lia . } assert ( <genH> : <nat:5> > <nat:1> ) . { lia . } assert ( <genH> : <nat:8> > <nat:1> ) . { lia . } assert ( <genH> : <nat:12> > <nat:1> ) . { lia . } assert ( <genH> : <nat:9> > <nat:1> ) . { lia . } assert ( <genH> : <nat:7> > <nat:1> ) . { lia . } exists <nat:8> . exists <nat:12> . exists <nat:6> . exists <nat:7> . exists <nat:4> . exists <nat:5> . exists <nat:2> . exists <nat:9> . exists <nat:11> . repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 