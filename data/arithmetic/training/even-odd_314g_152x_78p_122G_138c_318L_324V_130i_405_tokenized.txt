\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Taking positive integers $ <var:G> $ , $ <var:L> $ , $ <var:i> $ , $ <var:c> $ , $ <var:x> $ , $ <var:p> $ , $ <var:V> $ , and $ <var:g> $ $ <var:p> \cdot <nat:78> + <nat:405> + <nat:324> \cdot <var:V> + <nat:122> \cdot <var:G> + <var:x> \cdot <nat:152> + <var:L> \cdot <nat:318> + <nat:314> \cdot <var:g> + <nat:138> \cdot <var:c> + <var:i> \cdot <nat:130> $ is odd . \end{theorem} \begin{proof} $ <var:G> \cdot <nat:122> + <var:i> \cdot <nat:130> + <nat:138> \cdot <var:c> + <var:g> \cdot <nat:314> + <nat:318> \cdot <var:L> + <var:p> \cdot <nat:78> + <var:V> \cdot <nat:324> + <var:x> \cdot <nat:152> + <nat:405> $ is known as odd since the expression $ <nat:314> * <var:g> + <var:x> * <nat:152> + <nat:78> * <var:p> + <var:G> * <nat:122> + <var:c> * <nat:138> + <nat:318> * <var:L> + <nat:324> * <var:V> + <nat:130> * <var:i> $ is guaranteed to be even . Take note that the product between even positive integers will be even . The positive integers $ <nat:318> $ , $ <nat:122> $ , $ <nat:138> $ , $ <nat:130> $ , $ <nat:78> $ , and $ <nat:324> $ are known as even positive integers See the whole number $ <nat:152> $ is obviously an even number Building on , the number $ <nat:314> $ is an even natural number We check our result is proven . Observe $ <nat:405> $ is known as an odd element of $ \mathbb{Z}^+ $ . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:G> <var:L> <var:i> <var:c> <var:x> <var:p> <var:V> <var:g> : nat , Nat . odd ( <nat:78> * <var:p> + <nat:324> * <var:V> + <nat:122> * <var:G> + <nat:152> * <var:x> + <nat:318> * <var:L> + <nat:314> * <var:g> + <nat:138> * <var:c> + <nat:130> * <var:i> + <nat:405> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:318> = true ) . { auto . } assert ( <genH> : Nat . even <nat:122> = true ) . { auto . } assert ( <genH> : Nat . even <nat:138> = true ) . { auto . } assert ( <genH> : Nat . even <nat:130> = true ) . { auto . } assert ( <genH> : Nat . even <nat:78> = true ) . { auto . } assert ( <genH> : Nat . even <nat:324> = true ) . { auto . } assert ( <genH> : Nat . even <nat:152> = true ) . { auto . } assert ( <genH> : Nat . even <nat:314> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:78> * <var:p> + <nat:324> * <var:V> + <nat:122> * <var:G> + <nat:152> * <var:x> + <nat:318> * <var:L> + <nat:314> * <var:g> + <nat:138> * <var:c> + <nat:130> * <var:i> ) = true ) . { repeat rewrite Nat . even_add . repeat rewrite Nat . even_mul . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } assert ( <genH> : Nat . odd <nat:405> = true ) . { auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . rewrite <genH> . auto . Qed . 