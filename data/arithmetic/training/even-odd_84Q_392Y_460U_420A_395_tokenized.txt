\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:Q> <nat:84> + <nat:420> <var:A> + <nat:395> + <nat:392> <var:Y> + <nat:460> <var:U> $ must be odd for every integers $ <var:Y> $ , $ <var:A> $ , $ <var:U> $ , and $ <var:Q> $ . \end{theorem} \begin{proof} We check our claim is true . This main result is true since $ <nat:460> <var:U> + <nat:392> <var:Y> + <nat:84> <var:Q> + <var:A> <nat:420> $ is known as even . The products $ <nat:420> * <var:A> $ additionally $ <nat:392> * <var:Y> $ are guaranteed to be even elements of $ \mathbb{Z}^+ $ . We know that $ <var:Q> * <nat:84> $ is known to be even as a consequence that multiplying between an even whole number and an arbitrary element of $ \mathbb{N} $ is guaranteed to be in itself an even number in $ \mathbb{N} $ . $ <nat:460> * <var:U> $ is clearly an even whole number . By reason that the addition between even positive integers with an even integer is even , the summation $ <var:Q> * <nat:84> + <nat:392> * <var:Y> + <var:U> * <nat:460> + <var:A> * <nat:420> $ must be even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:Y> <var:A> <var:U> <var:Q> : nat , Nat . odd ( <nat:84> * <var:Q> + <nat:420> * <var:A> + <nat:392> * <var:Y> + <nat:460> * <var:U> + <nat:395> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:420> * <var:A> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:392> * <var:Y> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:84> * <var:Q> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:460> * <var:U> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:84> * <var:Q> + <nat:420> * <var:A> + <nat:392> * <var:Y> + <nat:460> * <var:U> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . auto . Qed . 