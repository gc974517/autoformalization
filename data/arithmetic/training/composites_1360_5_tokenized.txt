\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \newtheorem{definition}{Definition} \begin{document} \begin{definition} Whenever we have such that $ <var:m> $ , $ <var:l> $ , $ <var:X> $ , $ <var:e> $ , $ <var:H> > <nat:1> $ where given some integer $ <var:I> $ , $ <var:H> \times <var:m> \times <var:e> \times <var:l> \times <var:X> = <var:I> $ with some positive integers $ <var:e> $ , $ <var:X> $ , $ <var:l> $ , $ <var:m> $ , $ <var:H> $ , then we say that $ <var:I> $ is a <def:five-composite> number . \end{definition} \begin{theorem} The number <nat:1080> is <def:five-composite> . \end{theorem} \begin{proof} We confirm $ <var:l> \times <var:m> \times <var:X> \times <var:H> \times <var:e> = <nat:1080> $ . We demonstrate <nat:1080> is a <def:five-composite> natural number considering $ <nat:3> $ , $ <nat:4> $ , $ <nat:5> $ , $ <nat:9> $ and $ <nat:2> $ are greater than <nat:1> as well as seeing that $ <nat:1080> = <var:H> \times <var:l> \times <var:X> \times <var:m> \times <var:e> $ yields $ <var:H> = <nat:2> $ , $ <var:e> = <nat:9> $ , $ <var:l> = <nat:5> $ , $ <var:m> = <nat:3> $ and $ <var:X> = <nat:4> $ . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:five-composite> ( <var:I> : nat ) := exists <var:e> <var:X> <var:l> <var:m> <var:H> : nat , ( <var:m> > <nat:1> ) /\ ( <var:l> > <nat:1> ) /\ ( <var:X> > <nat:1> ) /\ ( <var:e> > <nat:1> ) /\ ( <var:H> > <nat:1> ) /\ ( <var:H> * <var:m> * <var:e> * <var:l> * <var:X> = <var:I> ) . Theorem <genP:1> : <def:five-composite> <nat:1080> . Proof . unfold <def:five-composite> . assert ( <genH> : <nat:3> > <nat:1> ) . { lia . } assert ( <genH> : <nat:4> > <nat:1> ) . { lia . } assert ( <genH> : <nat:5> > <nat:1> ) . { lia . } assert ( <genH> : <nat:9> > <nat:1> ) . { lia . } assert ( <genH> : <nat:2> > <nat:1> ) . { lia . } exists <nat:9> . exists <nat:4> . exists <nat:5> . exists <nat:3> . exists <nat:2> . repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 