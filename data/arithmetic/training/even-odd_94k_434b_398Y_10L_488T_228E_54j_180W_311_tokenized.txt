\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:k> \times <nat:94> + <var:b> \times <nat:434> + <var:Y> \times <nat:398> + <nat:10> \times <var:L> + <var:T> \times <nat:488> + <nat:228> \times <var:E> + <nat:54> \times <var:j> + <var:W> \times <nat:180> + <nat:311> $ is odd for any positive terms $ <var:b> $ , $ <var:T> $ , $ <var:L> $ , $ <var:k> $ , $ <var:Y> $ , $ <var:W> $ , $ <var:E> $ , and $ <var:j> $ . \end{theorem} \begin{proof} We know $ <nat:311> $ is known as odd . The summation between even numbers together and an odd positive integer will be an odd integer . Notice the pairs $ <var:W> \cdot <nat:180> $ , $ <nat:398> \cdot <var:Y> $ , $ <var:k> \cdot <nat:94> $ , $ <nat:54> \cdot <var:j> $ , $ <nat:228> \cdot <var:E> $ , additionally $ <var:T> \cdot <nat:488> $ are clearly even elements of $ \mathbb{Z}^+ $ . Adding on , the product $ <var:b> \cdot <nat:434> $ is trivially an even element of $ \mathbb{N} $ . This claim holds because the multiplication between an even number in $ \mathbb{N} $ and an arbitrary number in $ \mathbb{N} $ must be even . Take note the term $ <nat:10> \cdot <var:L> $ is known to be even . This is proven as a consequence that taking the product of an even number and a positive integer will be even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:b> <var:T> <var:L> <var:k> <var:Y> <var:W> <var:E> <var:j> : nat , Nat . odd ( <nat:94> * <var:k> + <nat:434> * <var:b> + <nat:398> * <var:Y> + <nat:10> * <var:L> + <nat:488> * <var:T> + <nat:228> * <var:E> + <nat:54> * <var:j> + <nat:180> * <var:W> + <nat:311> ) = true . Proof . intros . assert ( <genH> : Nat . odd <nat:311> = true ) . { auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . assert ( <genH> : Nat . even ( <nat:180> * <var:W> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:398> * <var:Y> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:94> * <var:k> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:54> * <var:j> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:228> * <var:E> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:488> * <var:T> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:434> * <var:b> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:10> * <var:L> ) = true ) . { rewrite Nat . even_mul . auto . } rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 