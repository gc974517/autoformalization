\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Let $ <var:Q> $ , $ <var:S> $ , $ <var:c> $ , $ <var:x> $ , $ <var:A> $ , $ <var:C> $ , $ <var:E> \in \mathbb{Z}^+ $ where $ <var:A> $ , $ <var:Q> $ , $ <var:C> $ , $ <var:E> $ , $ <var:c> $ , $ <var:S> $ , $ <var:x> \geq <nat:2> $ plus such that $ <var:c> * <var:x> * <var:E> * <var:S> * <var:C> * <var:Q> * <var:A> $ is the same as $ <nat:237600> $ . \end{theorem} \begin{proof} Observe $ <var:C> \cdot <var:E> \cdot <var:S> \cdot <var:x> \cdot <var:A> \cdot <var:c> \cdot <var:Q> = <nat:237600> $ gives $ <var:c> = <nat:6> $ , $ <var:x> = <nat:10> $ , $ <var:E> = <nat:5> $ , $ <var:S> = <nat:4> $ , $ <var:C> = <nat:11> $ , $ <var:A> = <nat:2> $ , $ <var:Q> = <nat:9> $ . Moreover notice $ <nat:10> $ , $ <nat:6> $ , $ <nat:9> $ , $ <nat:4> $ , $ <nat:2> $ , $ <nat:5> $ , and $ <nat:11> $ are greater than or equivalent to <nat:2> . \end{proof} \end{document} 
~
Require Import Lia . Theorem <genP:1> : exists <var:Q> <var:S> <var:c> <var:x> <var:A> <var:C> <var:E> : nat , ( <var:A> >= <nat:2> ) /\ ( <var:Q> >= <nat:2> ) /\ ( <var:C> >= <nat:2> ) /\ ( <var:E> >= <nat:2> ) /\ ( <var:c> >= <nat:2> ) /\ ( <var:S> >= <nat:2> ) /\ ( <var:x> >= <nat:2> ) /\ ( <var:c> * <var:x> * <var:E> * <var:S> * <var:C> * <var:Q> * <var:A> = <nat:237600> ) . Proof . exists <nat:9> . exists <nat:4> . exists <nat:6> . exists <nat:10> . exists <nat:2> . exists <nat:11> . exists <nat:5> . assert ( <genH> : <nat:10> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:6> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:9> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:4> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:2> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:5> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:11> >= <nat:2> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 