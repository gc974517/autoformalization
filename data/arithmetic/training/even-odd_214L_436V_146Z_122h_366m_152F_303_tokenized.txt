\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} With every positive numbers $ <var:L> $ , $ <var:m> $ , $ <var:F> $ , $ <var:V> $ , $ <var:Z> $ , and $ <var:h> $ $ <nat:366> \times <var:m> + <var:V> \times <nat:436> + <var:h> \times <nat:122> + <var:Z> \times <nat:146> + <var:F> \times <nat:152> + <nat:214> \times <var:L> + <nat:303> $ is odd . \end{theorem} \begin{proof} See $ <nat:303> $ is an odd positive integer . It can be checked that the expression $ <nat:122> <var:h> + <var:Z> <nat:146> + <nat:303> + <var:F> <nat:152> + <nat:366> <var:m> + <var:L> <nat:214> + <nat:436> <var:V> $ is odd . We employ the sum $ <nat:214> \cdot <var:L> + <var:Z> \cdot <nat:146> + <nat:366> \cdot <var:m> + <var:h> \cdot <nat:122> + <nat:303> + <nat:152> \cdot <var:F> + <var:V> \cdot <nat:436> $ is known as odd from the fact $ <nat:152> <var:F> + <var:V> <nat:436> + <nat:366> <var:m> + <var:Z> <nat:146> + <nat:122> <var:h> + <var:L> <nat:214> $ is known to be even . We know that the terms $ <var:Z> \times <nat:146> $ , $ <nat:152> \times <var:F> $ , $ <nat:436> \times <var:V> $ , and moreover $ <nat:366> \times <var:m> $ are guaranteed to be even . Further , notice the term $ <var:h> \times <nat:122> $ is an even element of $ \mathbb{N} $ . Adding on , remember the product $ <nat:214> \times <var:L> $ is obviously an even number . This claim must be true from the fact the multiplication between an even number in $ \mathbb{N} $ with a whole number must be by definition an even positive integer . The summation $ <var:L> <nat:214> + <nat:436> <var:V> + <var:Z> <nat:146> + <var:h> <nat:122> + <nat:366> <var:m> + <nat:152> <var:F> $ is guaranteed to be trivially even from the fact taking the product between even elements of $ \mathbb{Z}^+ $ and some natural number is an even natural number . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:L> <var:m> <var:F> <var:V> <var:Z> <var:h> : nat , Nat . odd ( <nat:366> * <var:m> + <nat:436> * <var:V> + <nat:122> * <var:h> + <nat:146> * <var:Z> + <nat:152> * <var:F> + <nat:214> * <var:L> + <nat:303> ) = true . Proof . intros . assert ( <genH> : Nat . odd <nat:303> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:146> * <var:Z> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:152> * <var:F> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:436> * <var:V> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:366> * <var:m> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:122> * <var:h> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:214> * <var:L> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:366> * <var:m> + <nat:436> * <var:V> + <nat:122> * <var:h> + <nat:146> * <var:Z> + <nat:152> * <var:F> + <nat:214> * <var:L> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . rewrite <genH> . auto . Qed . 