\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \newtheorem{definition}{Definition} \begin{document} \begin{definition} We assume that $ <var:r> $ is a <def:five-composite> positive integer under the condition that there are $ <var:K> $ , $ <var:p> $ , $ <var:G> $ , $ <var:Y> $ , $ <var:d> \in \mathbb{Z}^+ $ such that $ <var:K> $ , $ <var:G> $ , $ <var:p> $ , $ <var:d> $ , $ <var:Y> \geq <nat:2> $ and with $ <var:r> \in \mathbb{N} $ , $ <var:Y> \times <var:p> \times <var:d> \times <var:K> \times <var:G> = <var:r> $ . \end{definition} \begin{theorem} The positive integer <nat:20160> is a <def:five-composite> integer . \end{theorem} \begin{proof} Allow $ <var:K> = <nat:10> $ , $ <var:G> = <nat:9> $ , $ <var:d> = <nat:4> $ , $ <var:Y> = <nat:7> $ , $ <var:p> = <nat:8> $ . Note that $ <var:d> = <nat:4> $ , $ <var:Y> = <nat:7> $ , $ <var:K> = <nat:10> $ , $ <var:p> = <nat:8> $ and $ <var:G> = <nat:9> \geq <nat:2> $ . Also observe still $ <nat:20160> = <var:Y> \times <var:d> \times <var:K> \times <var:p> \times <var:G> = <nat:7> \times <nat:4> \times <nat:10> \times <nat:8> \times <nat:9> $ . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:five-composite> ( <var:r> : nat ) := exists <var:K> <var:p> <var:G> <var:Y> <var:d> : nat , ( <var:K> >= <nat:2> ) /\ ( <var:G> >= <nat:2> ) /\ ( <var:p> >= <nat:2> ) /\ ( <var:d> >= <nat:2> ) /\ ( <var:Y> >= <nat:2> ) /\ ( <var:Y> * <var:p> * <var:d> * <var:K> * <var:G> = <var:r> ) . Theorem <genP:1> : <def:five-composite> <nat:20160> . Proof . unfold <def:five-composite> . exists <nat:10> . exists <nat:8> . exists <nat:9> . exists <nat:7> . exists <nat:4> . assert ( <genH> : <nat:4> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:7> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:10> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:8> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:9> >= <nat:2> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 