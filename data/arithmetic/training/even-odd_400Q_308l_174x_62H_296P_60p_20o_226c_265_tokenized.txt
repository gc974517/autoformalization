\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:l> \cdot <nat:308> + <var:p> \cdot <nat:60> + <nat:400> \cdot <var:Q> + <nat:62> \cdot <var:H> + <nat:265> + <nat:174> \cdot <var:x> + <nat:20> \cdot <var:o> + <var:P> \cdot <nat:296> + <var:c> \cdot <nat:226> $ is guaranteed to be odd . \end{theorem} \begin{proof} See that the addition of even natural numbers collectively with an odd element of $ \mathbb{N} $ will be an odd natural number . Take note $ <nat:265> $ is obviously odd . Our main result holds since $ <nat:400> <var:Q> + <var:l> <nat:308> + <var:x> <nat:174> + <nat:62> <var:H> + <nat:296> <var:P> + <nat:60> <var:p> + <var:o> <nat:20> + <nat:226> <var:c> $ is guaranteed to be even , by reason that the totaling of an even number in $ \mathbb{Z}^+ $ with an even natural number is even . The integers $ <nat:174> $ , $ <nat:60> $ , $ <nat:400> $ , $ <nat:20> $ , and $ <nat:226> $ must be even integers Further , the leading term $ <nat:308> $ is even Notice the coefficient $ <nat:296> $ is obviously even The positive integer $ <nat:62> $ is even \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:l> <var:p> <var:Q> <var:H> <var:x> <var:o> <var:P> <var:c> : nat , Nat . odd ( <nat:308> * <var:l> + <nat:60> * <var:p> + <nat:400> * <var:Q> + <nat:62> * <var:H> + <nat:174> * <var:x> + <nat:20> * <var:o> + <nat:296> * <var:P> + <nat:226> * <var:c> + <nat:265> ) = true . Proof . intros . rewrite Nat . odd_add . assert ( <genH> : Nat . odd <nat:265> = true ) . { auto . } assert ( <genH> : Nat . even <nat:174> = true ) . { auto . } assert ( <genH> : Nat . even <nat:60> = true ) . { auto . } assert ( <genH> : Nat . even <nat:400> = true ) . { auto . } assert ( <genH> : Nat . even <nat:20> = true ) . { auto . } assert ( <genH> : Nat . even <nat:226> = true ) . { auto . } assert ( <genH> : Nat . even <nat:308> = true ) . { auto . } assert ( <genH> : Nat . even <nat:296> = true ) . { auto . } assert ( <genH> : Nat . even <nat:62> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:308> * <var:l> + <nat:60> * <var:p> + <nat:400> * <var:Q> + <nat:62> * <var:H> + <nat:174> * <var:x> + <nat:20> * <var:o> + <nat:296> * <var:P> + <nat:226> * <var:c> ) = true ) . { repeat rewrite Nat . even_add . repeat rewrite Nat . even_mul . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite <- Nat . negb_even . rewrite <genH> . rewrite <genH> . auto . Qed . 