\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:116> \times <var:B> + <var:C> \times <nat:228> + <nat:171> + <nat:302> \times <var:D> + <var:R> \times <nat:258> + <var:n> \times <nat:130> + <var:S> \times <nat:420> + <nat:120> \times <var:w> + <var:d> \times <nat:342> $ is odd . \end{theorem} \begin{proof} Take note the summation $ <var:D> * <nat:302> + <nat:171> + <nat:228> * <var:C> + <var:B> * <nat:116> + <var:R> * <nat:258> + <nat:130> * <var:n> + <nat:420> * <var:S> + <nat:120> * <var:w> + <nat:342> * <var:d> $ is trivially odd by reason that the expression $ <var:R> \times <nat:258> + <var:C> \times <nat:228> + <nat:120> \times <var:w> + <var:D> \times <nat:302> + <var:B> \times <nat:116> + <var:d> \times <nat:342> + <nat:130> \times <var:n> + <nat:420> \times <var:S> $ is clearly even . Building on , see the products $ <nat:258> \cdot <var:R> $ , $ <var:C> \cdot <nat:228> $ , $ <var:w> \cdot <nat:120> $ , $ <var:D> \cdot <nat:302> $ , $ <nat:116> \cdot <var:B> $ , $ <nat:342> \cdot <var:d> $ , $ <nat:130> \cdot <var:n> $ , as well as $ <nat:420> \cdot <var:S> $ are guaranteed to be even elements of $ \mathbb{Z}^+ $ . This claim holds from the fact the leading terms $ <nat:258> $ , $ <nat:228> $ , $ <nat:120> $ , $ <nat:302> $ , $ <nat:116> $ , $ <nat:342> $ , $ <nat:130> $ , additionally $ <nat:420> $ are known as even . We check this proposition must be true . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:B> <var:C> <var:D> <var:R> <var:n> <var:S> <var:w> <var:d> : nat , Nat . odd ( <nat:116> * <var:B> + <nat:228> * <var:C> + <nat:302> * <var:D> + <nat:258> * <var:R> + <nat:130> * <var:n> + <nat:420> * <var:S> + <nat:120> * <var:w> + <nat:342> * <var:d> + <nat:171> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:258> = true ) . { auto . } assert ( <genH> : Nat . even <nat:228> = true ) . { auto . } assert ( <genH> : Nat . even <nat:120> = true ) . { auto . } assert ( <genH> : Nat . even <nat:302> = true ) . { auto . } assert ( <genH> : Nat . even <nat:116> = true ) . { auto . } assert ( <genH> : Nat . even <nat:342> = true ) . { auto . } assert ( <genH> : Nat . even <nat:130> = true ) . { auto . } assert ( <genH> : Nat . even <nat:420> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:258> * <var:R> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:228> * <var:C> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:120> * <var:w> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:302> * <var:D> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:116> * <var:B> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:342> * <var:d> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:130> * <var:n> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:420> * <var:S> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:116> * <var:B> + <nat:228> * <var:C> + <nat:302> * <var:D> + <nat:258> * <var:R> + <nat:130> * <var:n> + <nat:420> * <var:S> + <nat:120> * <var:w> + <nat:342> * <var:d> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . auto . Qed . 