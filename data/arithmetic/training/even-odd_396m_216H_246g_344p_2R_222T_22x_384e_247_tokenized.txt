\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Given some natural numbers $ <var:R> $ , $ <var:H> $ , $ <var:m> $ , $ <var:x> $ , $ <var:p> $ , $ <var:e> $ , $ <var:g> $ , and $ <var:T> $ $ <nat:222> * <var:T> + <nat:246> * <var:g> + <var:H> * <nat:216> + <nat:22> * <var:x> + <var:m> * <nat:396> + <nat:344> * <var:p> + <nat:247> + <var:e> * <nat:384> + <var:R> * <nat:2> $ is guaranteed to be odd . \end{theorem} \begin{proof} We show the expression $ <nat:396> \times <var:m> + <nat:216> \times <var:H> + <var:g> \times <nat:246> + <nat:344> \times <var:p> + <nat:2> \times <var:R> + <nat:247> + <nat:222> \times <var:T> + <nat:22> \times <var:x> + <nat:384> \times <var:e> $ is guaranteed to be odd . We know the pairs $ <var:e> * <nat:384> $ , $ <nat:2> * <var:R> $ , $ <nat:344> * <var:p> $ , $ <nat:22> * <var:x> $ , $ <nat:222> * <var:T> $ , $ <var:H> * <nat:216> $ , and also $ <var:m> * <nat:396> $ will be even integers . The product $ <var:g> * <nat:246> $ is obviously even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:R> <var:H> <var:m> <var:x> <var:p> <var:e> <var:g> <var:T> : nat , Nat . odd ( <nat:222> * <var:T> + <nat:246> * <var:g> + <nat:216> * <var:H> + <nat:22> * <var:x> + <nat:396> * <var:m> + <nat:344> * <var:p> + <nat:384> * <var:e> + <nat:2> * <var:R> + <nat:247> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:384> * <var:e> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:2> * <var:R> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:344> * <var:p> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:22> * <var:x> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:222> * <var:T> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:216> * <var:H> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:396> * <var:m> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:246> * <var:g> ) = true ) . { rewrite Nat . even_mul . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 