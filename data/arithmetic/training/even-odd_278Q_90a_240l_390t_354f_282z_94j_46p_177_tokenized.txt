\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} With some variables $ <var:l> $ , $ <var:z> $ , $ <var:p> $ , $ <var:Q> $ , $ <var:j> $ , $ <var:a> $ , $ <var:t> $ , and $ <var:f> $ the summation $ <var:Q> \cdot <nat:278> + <nat:90> \cdot <var:a> + <nat:240> \cdot <var:l> + <nat:177> + <nat:390> \cdot <var:t> + <var:f> \cdot <nat:354> + <nat:282> \cdot <var:z> + <nat:94> \cdot <var:j> + <nat:46> \cdot <var:p> $ must be odd . \end{theorem} \begin{proof} Remember that $ <nat:177> $ is clearly an odd number . The summing between even naturals together with an odd number is guaranteed to be odd . On top of this , the integers $ <nat:278> $ , $ <nat:90> $ , $ <nat:240> $ , $ <nat:390> $ , $ <nat:354> $ , $ <nat:282> $ , $ <nat:94> $ , and moreover $ <nat:46> $ are known to be even elements of $ \mathbb{Z}^+ $ . As a consequence , the terms $ <var:Q> * <nat:278> $ , $ <nat:90> * <var:a> $ , $ <nat:240> * <var:l> $ , $ <nat:390> * <var:t> $ , $ <nat:354> * <var:f> $ , $ <var:z> * <nat:282> $ , $ <nat:94> * <var:j> $ , and also $ <nat:46> * <var:p> $ is guaranteed to be even also . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:l> <var:z> <var:p> <var:Q> <var:j> <var:a> <var:t> <var:f> : nat , Nat . odd ( <nat:278> * <var:Q> + <nat:90> * <var:a> + <nat:240> * <var:l> + <nat:390> * <var:t> + <nat:354> * <var:f> + <nat:282> * <var:z> + <nat:94> * <var:j> + <nat:46> * <var:p> + <nat:177> ) = true . Proof . intros . assert ( <genH> : Nat . odd <nat:177> = true ) . { auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . assert ( <genH> : Nat . even <nat:278> = true ) . { auto . } assert ( <genH> : Nat . even <nat:90> = true ) . { auto . } assert ( <genH> : Nat . even <nat:240> = true ) . { auto . } assert ( <genH> : Nat . even <nat:390> = true ) . { auto . } assert ( <genH> : Nat . even <nat:354> = true ) . { auto . } assert ( <genH> : Nat . even <nat:282> = true ) . { auto . } assert ( <genH> : Nat . even <nat:94> = true ) . { auto . } assert ( <genH> : Nat . even <nat:46> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:278> * <var:Q> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:90> * <var:a> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:240> * <var:l> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:390> * <var:t> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:354> * <var:f> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:282> * <var:z> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:94> * <var:j> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:46> * <var:p> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 