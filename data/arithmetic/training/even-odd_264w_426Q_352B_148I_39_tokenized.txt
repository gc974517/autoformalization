\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:352> \times <var:B> + <nat:39> + <nat:264> \times <var:w> + <nat:148> \times <var:I> + <var:Q> \times <nat:426> $ is guaranteed to be odd for any positive numbers $ <var:w> $ , $ <var:B> $ , $ <var:I> $ , and $ <var:Q> $ . \end{theorem} \begin{proof} We check $ <var:Q> * <nat:426> + <nat:39> + <var:I> * <nat:148> + <nat:264> * <var:w> + <var:B> * <nat:352> $ must be odd . The theorem holds from the fact $ <nat:148> * <var:I> + <nat:352> * <var:B> + <var:Q> * <nat:426> + <nat:264> * <var:w> $ is clearly even . In addition to this , observe the positive integer $ <nat:264> $ is clearly an even natural . For this reason , the term $ <var:w> * <nat:264> $ is even in addition . Building on , the pair $ <nat:426> * <var:Q> $ is known as even since multiplying between an even whole number and an arbitrary number must be an even natural number . This fact is proven from the knowledge the coefficient $ <nat:426> $ is clearly an even number in $ \mathbb{N} $ . Furthermore , the pair $ <nat:352> * <var:B> $ is known to be even by reason that the integer $ <nat:352> $ is guaranteed to be even . The natural number $ <nat:148> $ is clearly an even integer . Then , the pair $ <var:I> * <nat:148> $ is even too . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:w> <var:B> <var:I> <var:Q> : nat , Nat . odd ( <nat:352> * <var:B> + <nat:264> * <var:w> + <nat:148> * <var:I> + <nat:426> * <var:Q> + <nat:39> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:264> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:264> * <var:w> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:426> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:426> * <var:Q> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:352> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:352> * <var:B> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:148> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:148> * <var:I> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:352> * <var:B> + <nat:264> * <var:w> + <nat:148> * <var:I> + <nat:426> * <var:Q> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . auto . Qed . 