\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} With all terms $ <var:o> $ , $ <var:a> $ , $ <var:A> $ , and $ <var:R> $ the expression $ <nat:9> + <var:R> * <nat:94> + <nat:164> * <var:o> + <var:A> * <nat:338> + <var:a> * <nat:116> $ will be odd . \end{theorem} \begin{proof} The adding between even naturals concurrently and an odd number in $ \mathbb{Z}^+ $ is odd . Remember $ <nat:9> $ is clearly an odd element of $ \mathbb{N} $ . It can be checked that that the sum $ <nat:164> <var:o> + <var:a> <nat:116> + <var:A> <nat:338> + <var:R> <nat:94> $ is guaranteed to be even , as a consequence that the summing between an even natural number and an even element of $ \mathbb{N} $ is even . The pairs $ <var:R> <nat:94> $ in addition to $ <nat:164> <var:o> $ are known to be even from the knowledge taking the product between an even number in $ \mathbb{N} $ and any natural must be by itself an even integer , and must be true from the fact the integers $ <nat:94> $ and moreover $ <nat:164> $ are known as even elements of $ \mathbb{Z}^+ $ . The positive integer $ <nat:338> $ is guaranteed to be even . So , the pair $ <var:A> <nat:338> $ must be even at the same time . Furthermore , observe that $ <nat:116> <var:a> $ is an even number in $ \mathbb{N} $ as a consequence that the integer $ <nat:116> $ is trivially by definition an even natural . additionally since taking the product of an even number in $ \mathbb{N} $ and any natural number must be even our claim is proven . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:o> <var:a> <var:A> <var:R> : nat , Nat . odd ( <nat:94> * <var:R> + <nat:164> * <var:o> + <nat:338> * <var:A> + <nat:116> * <var:a> + <nat:9> ) = true . Proof . intros . rewrite Nat . odd_add . assert ( <genH> : Nat . odd <nat:9> = true ) . { auto . } assert ( <genH> : Nat . even <nat:94> = true ) . { auto . } assert ( <genH> : Nat . even <nat:164> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:94> * <var:R> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:164> * <var:o> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:338> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:338> * <var:A> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:116> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:116> * <var:a> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:94> * <var:R> + <nat:164> * <var:o> + <nat:338> * <var:A> + <nat:116> * <var:a> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite <- Nat . negb_even . rewrite <genH> . rewrite <genH> . auto . Qed . 