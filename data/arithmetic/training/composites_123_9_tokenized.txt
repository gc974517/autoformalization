\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} The integer <nat:26611200> is the product of positive integers $ <var:g> $ , $ <var:X> $ , $ <var:M> $ , $ <var:f> $ , $ <var:p> $ , $ <var:c> $ , $ <var:W> $ , $ <var:T> $ , and $ <var:O> \in \mathbb{Z}^+ $ satisfying the condition that $ <var:O> $ , $ <var:W> $ , $ <var:f> $ , $ <var:p> $ , $ <var:c> $ , $ <var:g> $ , $ <var:M> $ , $ <var:X> $ , and $ <var:T> \geq <nat:2> $ . \end{theorem} \begin{proof} Note $ <nat:5> $ , $ <nat:9> $ , $ <nat:2> $ , $ <nat:12> $ , $ <nat:11> $ , $ <nat:10> $ , $ <nat:4> $ , $ <nat:8> $ , $ <nat:7> \geq <nat:2> $ . Additionally note that likewise $ <nat:26611200> = <var:O> * <var:c> * <var:f> * <var:g> * <var:T> * <var:X> * <var:p> * <var:M> * <var:W> $ hints $ <var:W> = <nat:11> $ , $ <var:X> = <nat:10> $ , $ <var:O> = <nat:5> $ , $ <var:f> = <nat:2> $ , $ <var:c> = <nat:12> $ , $ <var:p> = <nat:9> $ , $ <var:M> = <nat:7> $ , $ <var:g> = <nat:8> $ and $ <var:T> = <nat:4> $ . \end{proof} \end{document} 
~
Require Import Lia . Theorem <genP:1> : exists <var:g> <var:X> <var:M> <var:f> <var:p> <var:c> <var:W> <var:T> <var:O> : nat , ( <nat:26611200> = <var:g> * <var:X> * <var:M> * <var:f> * <var:p> * <var:c> * <var:W> * <var:T> * <var:O> ) /\ ( <var:O> >= <nat:2> ) /\ ( <var:W> >= <nat:2> ) /\ ( <var:f> >= <nat:2> ) /\ ( <var:p> >= <nat:2> ) /\ ( <var:c> >= <nat:2> ) /\ ( <var:g> >= <nat:2> ) /\ ( <var:M> >= <nat:2> ) /\ ( <var:X> >= <nat:2> ) /\ ( <var:T> >= <nat:2> ) . Proof . assert ( <genH> : <nat:5> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:9> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:2> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:12> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:11> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:10> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:4> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:8> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:7> >= <nat:2> ) . { lia . } exists <nat:8> . exists <nat:10> . exists <nat:7> . exists <nat:2> . exists <nat:9> . exists <nat:12> . exists <nat:11> . exists <nat:4> . exists <nat:5> . repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 