\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:306> \cdot <var:Z> + <nat:116> \cdot <var:K> + <nat:160> \cdot <var:A> + <var:d> \cdot <nat:60> + <var:X> \cdot <nat:114> + <nat:473> + <var:V> \cdot <nat:258> $ is odd . \end{theorem} \begin{proof} This proposition must be true by reason that $ <nat:116> \times <var:K> + <nat:306> \times <var:Z> + <nat:114> \times <var:X> + <var:A> \times <nat:160> + <nat:258> \times <var:V> + <nat:60> \times <var:d> $ is trivially even . Notice that $ <nat:60> \times <var:d> $ is trivially even . This is true from the knowledge multiplying between an even element of $ \mathbb{Z}^+ $ and a element of $ \mathbb{Z}^+ $ will be by itself an even element of $ \mathbb{N} $ in addition to the positive integer $ <nat:60> $ is clearly an even natural number . Take note the positive integer $ <nat:116> $ is guaranteed to be an even natural . For this reason , the product $ <var:K> \times <nat:116> $ is guaranteed to be even additionally . Building on , the terms $ <nat:306> \times <var:Z> $ in addition to $ <var:V> \times <nat:258> $ must be even as a consequence that taking the product of an even element of $ \mathbb{N} $ with some positive integer is guaranteed to be even and moreover the natural numbers $ <nat:306> $ and also $ <nat:258> $ will be even . On top of this , $ <var:A> \times <nat:160> $ is known to be an even positive integer from the knowledge the natural number $ <nat:160> $ is guaranteed to be even . We know that the product $ <nat:114> \times <var:X> $ is clearly even by reason that the whole number $ <nat:114> $ is known as even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:Z> <var:K> <var:A> <var:d> <var:X> <var:V> : nat , Nat . odd ( <nat:306> * <var:Z> + <nat:116> * <var:K> + <nat:160> * <var:A> + <nat:60> * <var:d> + <nat:114> * <var:X> + <nat:258> * <var:V> + <nat:473> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:60> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:60> * <var:d> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:116> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:116> * <var:K> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:306> = true ) . { auto . } assert ( <genH> : Nat . even <nat:258> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:306> * <var:Z> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:258> * <var:V> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:160> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:160> * <var:A> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:114> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:114> * <var:X> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:306> * <var:Z> + <nat:116> * <var:K> + <nat:160> * <var:A> + <nat:60> * <var:d> + <nat:114> * <var:X> + <nat:258> * <var:V> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . auto . Qed . 