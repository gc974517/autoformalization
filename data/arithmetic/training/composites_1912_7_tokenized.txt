\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \newtheorem{definition}{Definition} \begin{document} \begin{definition} Let $ <var:d> $ , $ <var:T> $ , $ <var:o> $ , $ <var:P> $ , $ <var:Q> $ , $ <var:W> $ , $ <var:G> $ be whole numbers more than or equivalent to <nat:2> . Denote that $ <var:I> \in \mathbb{Z}^+ $ will be <def:seven-composite> assuming $ <var:I> = <var:d> \cdot <var:W> \cdot <var:G> \cdot <var:P> \cdot <var:T> \cdot <var:o> \cdot <var:Q> $ . \end{definition} \begin{theorem} $ <var:I> = <nat:295680> $ is a <def:seven-composite> whole number . \end{theorem} \begin{proof} Recollect that <nat:295680> is a <def:seven-composite> natural number granted <nat:295680> is the product of numbers $ <var:G> $ , $ <var:T> $ , $ <var:d> $ , $ <var:o> $ , $ <var:W> $ , $ <var:Q> $ and $ <var:P> $ satisfying the condition that $ <var:Q> $ , $ <var:d> $ , $ <var:W> $ , $ <var:o> $ , $ <var:P> $ , $ <var:T> $ , $ <var:G> \geq <nat:2> $ . Take $ <var:W> = <nat:8> $ , $ <var:d> = <nat:11> $ , $ <var:G> = <nat:10> $ , $ <var:T> = <nat:2> $ , $ <var:Q> = <nat:7> $ , $ <var:P> = <nat:4> $ and $ <var:o> = <nat:6> $ . We demonstrate <nat:295680> is a <def:seven-composite> number . We prove our statement holds on account of $ <var:d> = <nat:11> $ , $ <var:Q> = <nat:7> $ , $ <var:o> = <nat:6> $ , $ <var:G> = <nat:10> $ , $ <var:T> = <nat:2> $ , $ <var:P> = <nat:4> $ , $ <var:W> = <nat:8> \geq <nat:2> $ . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:seven-composite> ( <var:I> : nat ) := exists <var:d> <var:T> <var:o> <var:P> <var:Q> <var:W> <var:G> : nat , ( <var:d> >= <nat:2> ) /\ ( <var:T> >= <nat:2> ) /\ ( <var:o> >= <nat:2> ) /\ ( <var:P> >= <nat:2> ) /\ ( <var:Q> >= <nat:2> ) /\ ( <var:W> >= <nat:2> ) /\ ( <var:G> >= <nat:2> ) /\ ( <var:I> = <var:d> * <var:W> * <var:G> * <var:P> * <var:T> * <var:o> * <var:Q> ) . Theorem <genP:1> : <def:seven-composite> <nat:295680> . Proof . unfold <def:seven-composite> . exists <nat:11> . exists <nat:2> . exists <nat:6> . exists <nat:4> . exists <nat:7> . exists <nat:8> . exists <nat:10> . assert ( <genH> : <nat:11> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:7> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:6> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:10> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:2> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:4> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:8> >= <nat:2> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 