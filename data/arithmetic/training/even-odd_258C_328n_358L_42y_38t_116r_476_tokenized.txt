\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:38> * <var:t> + <nat:358> * <var:L> + <nat:328> * <var:n> + <nat:258> * <var:C> + <var:y> * <nat:42> + <nat:476> + <nat:116> * <var:r> $ is guaranteed to be even taking some positive terms $ <var:r> $ , $ <var:L> $ , $ <var:y> $ , $ <var:n> $ , $ <var:C> $ , and $ <var:t> $ . \end{theorem} \begin{proof} This result is true from the fact $ <var:C> <nat:258> + <var:y> <nat:42> + <nat:116> <var:r> + <var:L> <nat:358> + <nat:328> <var:n> + <nat:38> <var:t> $ is trivially even . We know the pairs $ <var:t> <nat:38> $ and $ <var:C> <nat:258> $ are clearly even . The terms $ <nat:42> <var:y> $ and $ <var:n> <nat:328> $ are obviously even . The term $ <nat:358> <var:L> $ is known to be an even number . This fact must be true from the knowledge taking the product between an even number and an arbitrary positive integer will be even . Remember the product $ <var:r> <nat:116> $ is known as an even element of $ \mathbb{Z}^+ $ . We demonstrate the formula $ <nat:258> * <var:C> + <var:n> * <nat:328> + <nat:358> * <var:L> + <var:y> * <nat:42> + <nat:38> * <var:t> + <nat:476> + <nat:116> * <var:r> $ will be even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:r> <var:L> <var:y> <var:n> <var:C> <var:t> : nat , Nat . even ( <nat:38> * <var:t> + <nat:358> * <var:L> + <nat:328> * <var:n> + <nat:258> * <var:C> + <nat:42> * <var:y> + <nat:116> * <var:r> + <nat:476> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:38> * <var:t> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:258> * <var:C> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:42> * <var:y> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:328> * <var:n> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:358> * <var:L> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:116> * <var:r> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:38> * <var:t> + <nat:358> * <var:L> + <nat:328> * <var:n> + <nat:258> * <var:C> + <nat:42> * <var:y> + <nat:116> * <var:r> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . even_add . rewrite <genH> . auto . Qed . 