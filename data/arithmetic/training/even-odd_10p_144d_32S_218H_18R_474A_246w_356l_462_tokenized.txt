\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Given all positive integers $ <var:p> $ , $ <var:S> $ , $ <var:H> $ , $ <var:A> $ , $ <var:d> $ , $ <var:w> $ , $ <var:R> $ , and $ <var:l> $ the sum $ <nat:10> \times <var:p> + <nat:144> \times <var:d> + <nat:32> \times <var:S> + <nat:462> + <var:H> \times <nat:218> + <nat:18> \times <var:R> + <var:A> \times <nat:474> + <nat:246> \times <var:w> + <var:l> \times <nat:356> $ is guaranteed to be even . \end{theorem} \begin{proof} The terms $ <nat:246> <var:w> $ , $ <var:d> <nat:144> $ , $ <var:p> <nat:10> $ , $ <var:A> <nat:474> $ , $ <nat:32> <var:S> $ , $ <var:H> <nat:218> $ , as well as $ <nat:18> <var:R> $ are obviously even . This is true since the product between an even whole number and any natural number is guaranteed to be an even element of $ \mathbb{Z}^+ $ . In addition to this , the product $ <var:l> <nat:356> $ is trivially an even natural number because multiplying between an even element of $ \mathbb{Z}^+ $ with an arbitrary whole number will be fundamentally an even integer . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:p> <var:S> <var:H> <var:A> <var:d> <var:w> <var:R> <var:l> : nat , Nat . even ( <nat:10> * <var:p> + <nat:144> * <var:d> + <nat:32> * <var:S> + <nat:218> * <var:H> + <nat:18> * <var:R> + <nat:474> * <var:A> + <nat:246> * <var:w> + <nat:356> * <var:l> + <nat:462> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:246> * <var:w> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:144> * <var:d> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:10> * <var:p> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:474> * <var:A> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:32> * <var:S> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:218> * <var:H> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:18> * <var:R> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:356> * <var:l> ) = true ) . { rewrite Nat . even_mul . auto . } repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 