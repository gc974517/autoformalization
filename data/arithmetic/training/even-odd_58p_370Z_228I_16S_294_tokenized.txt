\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:16> \cdot <var:S> + <nat:228> \cdot <var:I> + <var:Z> \cdot <nat:370> + <nat:58> \cdot <var:p> + <nat:294> $ will be even using every positive integers $ <var:I> $ , $ <var:S> $ , $ <var:Z> $ , and $ <var:p> $ . \end{theorem} \begin{proof} We prove our result is true . This claim holds from the fact $ <nat:58> \cdot <var:p> + <nat:228> \cdot <var:I> + <nat:16> \cdot <var:S> + <nat:370> \cdot <var:Z> $ is obviously even . Observe the natural numbers $ <nat:228> $ , $ <nat:58> $ , and also $ <nat:370> $ are trivially even natural numbers . Accordingly , the products $ <var:I> \times <nat:228> $ , $ <var:p> \times <nat:58> $ , and moreover $ <nat:370> \times <var:Z> $ is guaranteed to be even at the same time . Further , $ <var:S> \times <nat:16> $ is known as even from the fact multiplying of an even integer with an arbitrary number must be an even positive integer and likewise the natural number $ <nat:16> $ is even . From the fact the summing between even elements of $ \mathbb{Z}^+ $ and an even natural number must be even , as well as since taking the product of even numbers in $ \mathbb{N} $ and any whole number is an even number in $ \mathbb{N} $ . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:I> <var:S> <var:Z> <var:p> : nat , Nat . even ( <nat:16> * <var:S> + <nat:228> * <var:I> + <nat:370> * <var:Z> + <nat:58> * <var:p> + <nat:294> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:228> = true ) . { auto . } assert ( <genH> : Nat . even <nat:58> = true ) . { auto . } assert ( <genH> : Nat . even <nat:370> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:228> * <var:I> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:58> * <var:p> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:370> * <var:Z> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:16> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:16> * <var:S> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:16> * <var:S> + <nat:228> * <var:I> + <nat:370> * <var:Z> + <nat:58> * <var:p> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . even_add . rewrite <genH> . auto . Qed . 