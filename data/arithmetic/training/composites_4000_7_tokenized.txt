\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \newtheorem{definition}{Definition} \begin{document} \begin{definition} Whenever we have $ <var:x> \cdot <var:i> \cdot <var:I> \cdot <var:M> \cdot <var:q> \cdot <var:g> \cdot <var:Y> = <var:O> $ with $ <var:O> \in \mathbb{Z}^+ $ as well as where $ <var:i> $ , $ <var:q> $ , $ <var:x> $ , $ <var:Y> $ , $ <var:I> $ , $ <var:g> $ , and $ <var:M> \geq <nat:2> $ , then let that $ <var:O> $ is a <def:seven-composite> natural number with some $ <var:I> $ , $ <var:x> $ , $ <var:i> $ , $ <var:M> $ , $ <var:q> $ , $ <var:g> $ , $ <var:Y> \in \mathbb{N} $ . \end{definition} \begin{theorem} The natural number <nat:1710720> is a <def:seven-composite> whole number . \end{theorem} \begin{proof} Take $ <var:q> = <nat:10> $ , $ <var:x> = <nat:3> $ , $ <var:M> = <nat:8> $ , $ <var:g> = <nat:9> $ , $ <var:i> = <nat:12> $ , $ <var:Y> = <nat:11> $ , $ <var:I> = <nat:6> $ . In addition observe $ <nat:11> $ , $ <nat:6> $ , $ <nat:8> $ , $ <nat:9> $ , $ <nat:10> $ , $ <nat:12> $ , $ <nat:3> $ are greater than or equivalent to <nat:2> . This shows the statement is true . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:seven-composite> ( <var:O> : nat ) := exists <var:I> <var:x> <var:i> <var:M> <var:q> <var:g> <var:Y> : nat , ( <var:x> * <var:i> * <var:I> * <var:M> * <var:q> * <var:g> * <var:Y> = <var:O> ) /\ ( <var:i> >= <nat:2> ) /\ ( <var:q> >= <nat:2> ) /\ ( <var:x> >= <nat:2> ) /\ ( <var:Y> >= <nat:2> ) /\ ( <var:I> >= <nat:2> ) /\ ( <var:g> >= <nat:2> ) /\ ( <var:M> >= <nat:2> ) . Theorem <genP:1> : <def:seven-composite> <nat:1710720> . Proof . unfold <def:seven-composite> . exists <nat:6> . exists <nat:3> . exists <nat:12> . exists <nat:8> . exists <nat:10> . exists <nat:9> . exists <nat:11> . assert ( <genH> : <nat:11> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:6> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:8> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:9> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:10> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:12> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:3> >= <nat:2> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 