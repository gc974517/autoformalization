\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Assuming positive terms $ <var:M> $ , $ <var:g> $ , $ <var:p> $ , $ <var:F> $ , $ <var:c> $ , and $ <var:k> $ the sum $ <nat:360> \cdot <var:k> + <nat:88> \cdot <var:g> + <nat:407> + <var:c> \cdot <nat:474> + <nat:74> \cdot <var:M> + <var:p> \cdot <nat:326> + <nat:434> \cdot <var:F> $ is guaranteed to be odd . \end{theorem} \begin{proof} Observe the sum $ <var:M> \cdot <nat:74> + <nat:474> \cdot <var:c> + <nat:326> \cdot <var:p> + <nat:88> \cdot <var:g> + <nat:434> \cdot <var:F> + <nat:360> \cdot <var:k> $ is obviously even , as a consequence that the summation between even numbers in $ \mathbb{N} $ together and an even whole number is guaranteed to be even . Take note in addition that the product between even numbers in $ \mathbb{Z}^+ $ must be an even integer . The coefficients $ <nat:88> $ , $ <nat:434> $ , $ <nat:74> $ , $ <nat:326> $ , additionally $ <nat:360> $ are known as even numbers in $ \mathbb{N} $ Recall that the integer $ <nat:474> $ is an even natural number See that $ <nat:407> $ is guaranteed to be odd . It can be checked that this claim is true . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:M> <var:g> <var:p> <var:F> <var:c> <var:k> : nat , Nat . odd ( <nat:360> * <var:k> + <nat:88> * <var:g> + <nat:474> * <var:c> + <nat:74> * <var:M> + <nat:326> * <var:p> + <nat:434> * <var:F> + <nat:407> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:88> = true ) . { auto . } assert ( <genH> : Nat . even <nat:434> = true ) . { auto . } assert ( <genH> : Nat . even <nat:74> = true ) . { auto . } assert ( <genH> : Nat . even <nat:326> = true ) . { auto . } assert ( <genH> : Nat . even <nat:360> = true ) . { auto . } assert ( <genH> : Nat . even <nat:474> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:360> * <var:k> + <nat:88> * <var:g> + <nat:474> * <var:c> + <nat:74> * <var:M> + <nat:326> * <var:p> + <nat:434> * <var:F> ) = true ) . { repeat rewrite Nat . even_add . repeat rewrite Nat . even_mul . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } assert ( <genH> : Nat . odd <nat:407> = true ) . { auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . rewrite <genH> . auto . Qed . 