\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} With natural terms $ <var:J> $ , $ <var:S> $ , $ <var:g> $ , $ <var:H> $ , $ <var:b> $ , $ <var:e> $ , $ <var:x> $ , and $ <var:X> $ $ <var:X> * <nat:300> + <nat:251> + <var:H> * <nat:46> + <nat:44> * <var:x> + <nat:318> * <var:J> + <var:e> * <nat:266> + <nat:432> * <var:g> + <nat:210> * <var:b> + <var:S> * <nat:108> $ will be odd . \end{theorem} \begin{proof} We make use that the expression $ <nat:266> \times <var:e> + <nat:44> \times <var:x> + <var:X> \times <nat:300> + <nat:210> \times <var:b> + <nat:432> \times <var:g> + <nat:46> \times <var:H> + <nat:251> + <var:J> \times <nat:318> + <nat:108> \times <var:S> $ is obviously odd from the knowledge the formula $ <var:X> <nat:300> + <nat:108> <var:S> + <var:g> <nat:432> + <nat:266> <var:e> + <nat:318> <var:J> + <var:x> <nat:44> + <var:H> <nat:46> + <var:b> <nat:210> $ is trivially even . From the knowledge the summing of even natural numbers and even elements of $ \mathbb{N} $ must be even , the formula $ <nat:266> \cdot <var:e> + <nat:210> \cdot <var:b> + <var:g> \cdot <nat:432> + <nat:300> \cdot <var:X> + <var:H> \cdot <nat:46> + <var:x> \cdot <nat:44> + <nat:318> \cdot <var:J> + <var:S> \cdot <nat:108> $ must be trivially even . Observe $ <nat:251> $ is guaranteed to be odd . It can be verified that this main result must be true . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:J> <var:S> <var:g> <var:H> <var:b> <var:e> <var:x> <var:X> : nat , Nat . odd ( <nat:300> * <var:X> + <nat:46> * <var:H> + <nat:44> * <var:x> + <nat:318> * <var:J> + <nat:266> * <var:e> + <nat:432> * <var:g> + <nat:210> * <var:b> + <nat:108> * <var:S> + <nat:251> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:300> * <var:X> + <nat:46> * <var:H> + <nat:44> * <var:x> + <nat:318> * <var:J> + <nat:266> * <var:e> + <nat:432> * <var:g> + <nat:210> * <var:b> + <nat:108> * <var:S> ) = true ) . { repeat rewrite Nat . even_add . repeat rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . odd <nat:251> = true ) . { auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . rewrite <genH> . auto . Qed . 