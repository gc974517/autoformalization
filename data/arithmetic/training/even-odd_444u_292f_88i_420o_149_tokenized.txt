\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:292> * <var:f> + <var:o> * <nat:420> + <nat:88> * <var:i> + <nat:149> + <nat:444> * <var:u> $ will be odd . \end{theorem} \begin{proof} The totaling of an even number in $ \mathbb{N} $ with an odd whole number must be an odd number . We apply that the formula $ <nat:444> <var:u> + <nat:292> <var:f> + <nat:88> <var:i> + <var:o> <nat:420> $ is obviously even . Remember that the integers $ <nat:420> $ additionally $ <nat:292> $ will be even . In consequence , the terms $ <var:o> <nat:420> $ in addition to $ <nat:292> <var:f> $ must be even in addition . Remember the leading term $ <nat:444> $ is obviously even . In consequence , the term $ <var:u> <nat:444> $ is guaranteed to be even also . Likewise , the product $ <nat:88> <var:i> $ is known to be an even natural number . This fact must be true from the fact the product of an even element of $ \mathbb{Z}^+ $ with a element of $ \mathbb{N} $ must be even . This fact is true by reason that the positive integer $ <nat:88> $ is guaranteed to be an even element of $ \mathbb{Z}^+ $ . The claim holds by reason that the multiplication between an even integer and an arbitrary whole number will be an even natural . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:f> <var:o> <var:i> <var:u> : nat , Nat . odd ( <nat:292> * <var:f> + <nat:420> * <var:o> + <nat:88> * <var:i> + <nat:444> * <var:u> + <nat:149> ) = true . Proof . intros . rewrite Nat . odd_add . assert ( <genH> : Nat . even <nat:420> = true ) . { auto . } assert ( <genH> : Nat . even <nat:292> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:420> * <var:o> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:292> * <var:f> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:444> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:444> * <var:u> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:88> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:88> * <var:i> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:292> * <var:f> + <nat:420> * <var:o> + <nat:88> * <var:i> + <nat:444> * <var:u> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite <- Nat . negb_even . rewrite <genH> . auto . Qed . 