\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:482> * <var:e> + <var:E> * <nat:32> + <nat:162> * <var:l> + <var:U> * <nat:312> + <var:u> * <nat:78> + <nat:97> + <nat:192> * <var:c> + <nat:376> * <var:j> + <nat:40> * <var:y> $ will be odd given every unknowns $ <var:e> $ , $ <var:y> $ , $ <var:u> $ , $ <var:j> $ , $ <var:U> $ , $ <var:l> $ , $ <var:E> $ , and $ <var:c> $ . \end{theorem} \begin{proof} Observe the summation between even natural numbers and an odd positive integer is guaranteed to be odd . Recall $ <nat:97> $ is guaranteed to be odd . Notice that the terms $ <var:j> * <nat:376> $ , $ <nat:482> * <var:e> $ , $ <var:U> * <nat:312> $ , $ <var:E> * <nat:32> $ , $ <nat:192> * <var:c> $ , as well as $ <nat:40> * <var:y> $ are trivially even . The product $ <nat:78> * <var:u> $ is guaranteed to be an even whole number . This fact is proven because the product of an even number in $ \mathbb{N} $ and some natural number is guaranteed to be even . The pair $ <nat:162> * <var:l> $ is trivially an even integer . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:e> <var:y> <var:u> <var:j> <var:U> <var:l> <var:E> <var:c> : nat , Nat . odd ( <nat:482> * <var:e> + <nat:32> * <var:E> + <nat:162> * <var:l> + <nat:312> * <var:U> + <nat:78> * <var:u> + <nat:192> * <var:c> + <nat:376> * <var:j> + <nat:40> * <var:y> + <nat:97> ) = true . Proof . intros . rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . assert ( <genH> : Nat . odd <nat:97> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:376> * <var:j> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:482> * <var:e> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:312> * <var:U> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:32> * <var:E> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:192> * <var:c> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:40> * <var:y> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:78> * <var:u> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:162> * <var:l> ) = true ) . { rewrite Nat . even_mul . auto . } rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 