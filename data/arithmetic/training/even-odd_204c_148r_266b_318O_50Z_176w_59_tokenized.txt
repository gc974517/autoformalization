\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:204> \times <var:c> + <nat:50> \times <var:Z> + <nat:59> + <var:r> \times <nat:148> + <nat:318> \times <var:O> + <nat:266> \times <var:b> + <var:w> \times <nat:176> $ must be odd . \end{theorem} \begin{proof} Remember the positive integer $ <nat:204> $ is clearly an even number . Then , the term $ <nat:204> \cdot <var:c> $ must be even in addition . Likewise , we know the positive integer $ <nat:148> $ is an even natural number . So , the term $ <nat:148> \cdot <var:r> $ must be even at the same time . See the term $ <var:b> \cdot <nat:266> $ is trivially an even whole number because the number $ <nat:266> $ is guaranteed to be an even number in $ \mathbb{Z}^+ $ . Additionally , take note the leading term $ <nat:318> $ is clearly even . Thus , $ <nat:318> \cdot <var:O> $ is guaranteed to be even too . The product $ <nat:50> \cdot <var:Z> $ is clearly an even integer because multiplying of an even number in $ \mathbb{N} $ with an arbitrary natural number is guaranteed to be even . This fact is proven since the whole number $ <nat:50> $ is known as fundamentally an even number in $ \mathbb{Z}^+ $ . Recall that the term $ <var:w> \cdot <nat:176> $ is even from the fact the number $ <nat:176> $ is even . See that $ <nat:59> $ is clearly odd . Recall the addition between even elements of $ \mathbb{Z}^+ $ concurrently and an odd positive integer is odd . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:c> <var:Z> <var:r> <var:O> <var:b> <var:w> : nat , Nat . odd ( <nat:204> * <var:c> + <nat:50> * <var:Z> + <nat:148> * <var:r> + <nat:318> * <var:O> + <nat:266> * <var:b> + <nat:176> * <var:w> + <nat:59> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:204> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:204> * <var:c> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:148> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:148> * <var:r> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:266> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:266> * <var:b> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:318> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:318> * <var:O> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:50> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:50> * <var:Z> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:176> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:176> * <var:w> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . odd <nat:59> = true ) . { auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 