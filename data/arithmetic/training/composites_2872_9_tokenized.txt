\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \newtheorem{definition}{Definition} \begin{document} \begin{definition} There exist integers $ <var:a> $ , $ <var:u> $ , $ <var:U> $ , $ <var:G> $ , $ <var:k> $ , $ <var:J> $ , $ <var:x> $ , $ <var:E> $ , $ <var:e> $ such that $ <var:U> $ , $ <var:x> $ , $ <var:J> $ , $ <var:u> $ , $ <var:e> $ , $ <var:E> $ , $ <var:a> $ , $ <var:k> $ , and $ <var:G> \geq <nat:2> $ . Claim that some positive integer $ <var:y> $ will be considered as a <def:nine-composite> whole number given $ <var:y> = <var:u> * <var:a> * <var:E> * <var:U> * <var:x> * <var:k> * <var:e> * <var:G> * <var:J> $ . \end{definition} \begin{theorem} The number <nat:10886400> is a <def:nine-composite> natural number . \end{theorem} \begin{proof} Remember that <nat:10886400> is a <def:nine-composite> whole number when it is the multiplication between positive integers $ <var:a> $ , $ <var:U> $ , $ <var:J> $ , $ <var:E> $ , $ <var:k> $ , $ <var:u> $ , $ <var:e> $ , $ <var:x> $ , and $ <var:G> $ so that $ <var:U> $ , $ <var:k> $ , $ <var:G> $ , $ <var:e> $ , $ <var:u> $ , $ <var:a> $ , $ <var:J> $ , $ <var:E> $ , and $ <var:x> \geq <nat:2> $ . Allow $ <var:U> = <nat:2> $ , $ <var:a> = <nat:12> $ , $ <var:G> = <nat:9> $ , $ <var:x> = <nat:6> $ , $ <var:J> = <nat:10> $ , $ <var:u> = <nat:7> $ , $ <var:e> = <nat:8> $ , $ <var:E> = <nat:5> $ and $ <var:k> = <nat:3> $ . We prove <nat:10886400> is a <def:nine-composite> whole number . We prove <nat:10886400> is a <def:nine-composite> positive integer in consideration of $ <var:U> \cdot <var:a> \cdot <var:e> \cdot <var:G> \cdot <var:k> \cdot <var:u> \cdot <var:J> \cdot <var:E> \cdot <var:x> = <nat:2> \cdot <nat:12> \cdot <nat:8> \cdot <nat:9> \cdot <nat:3> \cdot <nat:7> \cdot <nat:10> \cdot <nat:5> \cdot <nat:6> = <nat:10886400> $ plus for $ <nat:3> $ , $ <nat:2> $ , $ <nat:6> $ , $ <nat:8> $ , $ <nat:7> $ , $ <nat:10> $ , $ <nat:12> $ , $ <nat:9> $ , and $ <nat:5> \geq <nat:2> $ . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:nine-composite> ( <var:y> : nat ) := exists <var:a> <var:u> <var:U> <var:G> <var:k> <var:J> <var:x> <var:E> <var:e> : nat , ( <var:U> >= <nat:2> ) /\ ( <var:x> >= <nat:2> ) /\ ( <var:J> >= <nat:2> ) /\ ( <var:u> >= <nat:2> ) /\ ( <var:e> >= <nat:2> ) /\ ( <var:E> >= <nat:2> ) /\ ( <var:a> >= <nat:2> ) /\ ( <var:k> >= <nat:2> ) /\ ( <var:G> >= <nat:2> ) /\ ( <var:y> = <var:u> * <var:a> * <var:E> * <var:U> * <var:x> * <var:k> * <var:e> * <var:G> * <var:J> ) . Theorem <genP:1> : <def:nine-composite> <nat:10886400> . Proof . unfold <def:nine-composite> . exists <nat:12> . exists <nat:7> . exists <nat:2> . exists <nat:9> . exists <nat:3> . exists <nat:10> . exists <nat:6> . exists <nat:5> . exists <nat:8> . assert ( <genH> : <nat:3> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:2> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:6> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:8> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:7> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:10> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:12> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:9> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:5> >= <nat:2> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 