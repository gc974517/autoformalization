\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:378> <var:w> + <var:e> <nat:48> + <nat:435> + <nat:24> <var:T> + <var:c> <nat:140> + <var:v> <nat:264> + <var:o> <nat:150> $ must be odd assuming every whole numbers $ <var:T> $ , $ <var:w> $ , $ <var:v> $ , $ <var:o> $ , $ <var:e> $ , and $ <var:c> $ . \end{theorem} \begin{proof} We work with the assumption the understanding that $ <nat:378> <var:w> + <var:T> <nat:24> + <var:v> <nat:264> + <nat:435> + <var:c> <nat:140> + <nat:150> <var:o> + <var:e> <nat:48> $ is guaranteed to be odd because the summation $ <nat:378> \times <var:w> + <var:c> \times <nat:140> + <var:e> \times <nat:48> + <nat:264> \times <var:v> + <var:T> \times <nat:24> + <nat:150> \times <var:o> $ is trivially even . Observe the products $ <var:v> * <nat:264> $ , $ <nat:150> * <var:o> $ , $ <var:e> * <nat:48> $ , additionally $ <nat:24> * <var:T> $ are guaranteed to be even whole numbers . In addition , recall the term $ <var:c> * <nat:140> $ is obviously even . Additionally , remember $ <nat:378> * <var:w> $ is known to be an even whole number . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:T> <var:w> <var:v> <var:o> <var:e> <var:c> : nat , Nat . odd ( <nat:378> * <var:w> + <nat:48> * <var:e> + <nat:24> * <var:T> + <nat:140> * <var:c> + <nat:264> * <var:v> + <nat:150> * <var:o> + <nat:435> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:264> * <var:v> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:150> * <var:o> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:48> * <var:e> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:24> * <var:T> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:140> * <var:c> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:378> * <var:w> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:378> * <var:w> + <nat:48> * <var:e> + <nat:24> * <var:T> + <nat:140> * <var:c> + <nat:264> * <var:v> + <nat:150> * <var:o> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . auto . Qed . 