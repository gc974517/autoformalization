\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \newtheorem{definition}{Definition} \begin{document} \begin{definition} Wherever we have where $ <var:U> $ , $ <var:T> $ , $ <var:j> $ , $ <var:Q> $ , $ <var:r> $ , $ <var:a> $ , and $ <var:P> > <nat:1> $ where using $ <var:Y> \in \mathbb{N} $ , $ <var:Y> = <var:T> \times <var:Q> \times <var:j> \times <var:P> \times <var:U> \times <var:r> \times <var:a> $ , then we claim that $ <var:Y> $ is a <def:seven-composite> whole number using some $ <var:T> $ , $ <var:a> $ , $ <var:j> $ , $ <var:Q> $ , $ <var:r> $ , $ <var:P> $ , $ <var:U> \in \mathbb{Z}^+ $ . \end{definition} \begin{theorem} The whole number <nat:158400> is a <def:seven-composite> number . \end{theorem} \begin{proof} Recall that <nat:158400> is a <def:seven-composite> positive integer under the condition it is the multiplication of numbers $ <var:Q> $ , $ <var:T> $ , $ <var:j> $ , $ <var:P> $ , $ <var:r> $ , $ <var:a> $ , and $ <var:U> $ such that $ <var:Q> $ , $ <var:a> $ , $ <var:T> $ , $ <var:U> $ , $ <var:r> $ , $ <var:j> $ , and $ <var:P> > <nat:1> $ . Note $ <nat:10> $ , $ <nat:3> $ , $ <nat:4> $ , $ <nat:11> $ , $ <nat:2> $ , $ <nat:12> $ and $ <nat:5> > <nat:1> $ . Moreover observe that also $ <nat:158400> = <nat:5> \times <nat:4> \times <nat:10> \times <nat:2> \times <nat:12> \times <nat:3> \times <nat:11> $ . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:seven-composite> ( <var:Y> : nat ) := exists <var:T> <var:a> <var:j> <var:Q> <var:r> <var:P> <var:U> : nat , ( <var:U> > <nat:1> ) /\ ( <var:T> > <nat:1> ) /\ ( <var:j> > <nat:1> ) /\ ( <var:Q> > <nat:1> ) /\ ( <var:r> > <nat:1> ) /\ ( <var:a> > <nat:1> ) /\ ( <var:P> > <nat:1> ) /\ ( <var:Y> = <var:T> * <var:Q> * <var:j> * <var:P> * <var:U> * <var:r> * <var:a> ) . Theorem <genP:1> : <def:seven-composite> <nat:158400> . Proof . unfold <def:seven-composite> . assert ( <genH> : <nat:10> > <nat:1> ) . { lia . } assert ( <genH> : <nat:3> > <nat:1> ) . { lia . } assert ( <genH> : <nat:4> > <nat:1> ) . { lia . } assert ( <genH> : <nat:11> > <nat:1> ) . { lia . } assert ( <genH> : <nat:2> > <nat:1> ) . { lia . } assert ( <genH> : <nat:12> > <nat:1> ) . { lia . } assert ( <genH> : <nat:5> > <nat:1> ) . { lia . } exists <nat:5> . exists <nat:3> . exists <nat:2> . exists <nat:4> . exists <nat:10> . exists <nat:12> . exists <nat:11> . repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 