\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:K> * <nat:264> + <var:a> * <nat:250> + <nat:292> * <var:x> + <var:Z> * <nat:220> + <nat:418> * <var:k> + <nat:463> + <var:J> * <nat:384> + <nat:236> * <var:S> + <nat:146> * <var:W> $ is odd . \end{theorem} \begin{proof} Take note the pairs $ <nat:146> <var:W> $ , $ <var:S> <nat:236> $ , $ <nat:220> <var:Z> $ , and moreover $ <var:k> <nat:418> $ are obviously even elements of $ \mathbb{Z}^+ $ . This must be true as a consequence that the multiplication of an even element of $ \mathbb{N} $ and any number will be an even number in $ \mathbb{N} $ . $ <var:x> <nat:292> $ is clearly even . This claim is proven because multiplying of an even natural and an arbitrary whole number will be even . Likewise , the terms $ <var:J> <nat:384> $ in addition to $ <nat:250> <var:a> $ must be even since the multiplication of an even number in $ \mathbb{N} $ and some natural is clearly an even element of $ \mathbb{N} $ . Furthermore , we know the product $ <var:K> <nat:264> $ is an even integer . Recall $ <nat:463> $ is clearly an odd element of $ \mathbb{N} $ . The summation between even elements of $ \mathbb{Z}^+ $ and an odd positive integer must be odd . Then , this claim must be true . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:K> <var:a> <var:x> <var:Z> <var:k> <var:J> <var:S> <var:W> : nat , Nat . odd ( <nat:264> * <var:K> + <nat:250> * <var:a> + <nat:292> * <var:x> + <nat:220> * <var:Z> + <nat:418> * <var:k> + <nat:384> * <var:J> + <nat:236> * <var:S> + <nat:146> * <var:W> + <nat:463> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:146> * <var:W> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:236> * <var:S> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:220> * <var:Z> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:418> * <var:k> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:292> * <var:x> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:384> * <var:J> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:250> * <var:a> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:264> * <var:K> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . odd <nat:463> = true ) . { auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 