\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:J> * <var:Q> * <var:T> * <var:A> * <var:C> * <var:S> * <var:f> * <var:z> * <var:V> $ is $ <nat:8870400> $ so that $ <var:C> $ , $ <var:Q> $ , $ <var:S> $ , $ <var:f> $ , $ <var:z> $ , $ <var:V> $ , $ <var:A> $ , $ <var:J> $ , $ <var:T> \geq <nat:2> $ . \end{theorem} \begin{proof} Take $ <var:Q> = <nat:4> $ , $ <var:J> = <nat:2> $ , $ <var:V> = <nat:8> $ , $ <var:C> = <nat:3> $ , $ <var:z> = <nat:10> $ , $ <var:S> = <nat:12> $ , $ <var:T> = <nat:7> $ , $ <var:A> = <nat:5> $ , and $ <var:f> = <nat:11> $ . We verify $ <nat:8870400> = <var:Q> \times <var:C> \times <var:z> \times <var:V> \times <var:S> \times <var:J> \times <var:A> \times <var:f> \times <var:T> $ plus $ <var:z> $ , $ <var:T> $ , $ <var:C> $ , $ <var:Q> $ , $ <var:A> $ , $ <var:f> $ , $ <var:V> $ , $ <var:J> $ , $ <var:S> $ are larger than or equivalent to <nat:2> . Moreover notice $ <var:Q> = <nat:4> $ , $ <var:T> = <nat:7> $ , $ <var:f> = <nat:11> $ , $ <var:C> = <nat:3> $ , $ <var:A> = <nat:5> $ , $ <var:z> = <nat:10> $ , $ <var:S> = <nat:12> $ , $ <var:J> = <nat:2> $ , and $ <var:V> = <nat:8> \geq <nat:2> $ . \end{proof} \end{document} 
~
Require Import Lia . Theorem <genP:1> : exists <var:f> <var:C> <var:S> <var:A> <var:V> <var:z> <var:J> <var:Q> <var:T> : nat , ( <var:J> * <var:Q> * <var:T> * <var:A> * <var:C> * <var:S> * <var:f> * <var:z> * <var:V> = <nat:8870400> ) /\ ( <var:C> >= <nat:2> ) /\ ( <var:Q> >= <nat:2> ) /\ ( <var:S> >= <nat:2> ) /\ ( <var:f> >= <nat:2> ) /\ ( <var:z> >= <nat:2> ) /\ ( <var:V> >= <nat:2> ) /\ ( <var:A> >= <nat:2> ) /\ ( <var:J> >= <nat:2> ) /\ ( <var:T> >= <nat:2> ) . Proof . exists <nat:11> . exists <nat:3> . exists <nat:12> . exists <nat:5> . exists <nat:8> . exists <nat:10> . exists <nat:2> . exists <nat:4> . exists <nat:7> . assert ( <genH> : <nat:4> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:7> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:11> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:3> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:5> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:10> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:12> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:2> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:8> >= <nat:2> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 