\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \newtheorem{definition}{Definition} \begin{document} \begin{definition} $ \exists <var:E> $ , $ <var:w> $ , $ <var:p> $ , $ <var:Q> $ , $ <var:T> \in \mathbb{Z}^+ $ more than <nat:1> . Let that some positive integer $ <var:i> $ is considered to be a <def:five-composite> positive integer if $ <var:i> = <var:p> \cdot <var:Q> \cdot <var:w> \cdot <var:T> \cdot <var:E> $ . \end{definition} \begin{theorem} <nat:13860> is a <def:five-composite> whole number . \end{theorem} \begin{proof} Recollect that a <def:five-composite> natural number is the product of positive integers $ <var:w> $ , $ <var:E> $ , $ <var:T> $ , $ <var:p> $ and $ <var:Q> $ greater than <nat:1> . We prove <nat:13860> is a <def:five-composite> number considering $ <nat:13860> = <var:p> \times <var:Q> \times <var:E> \times <var:T> \times <var:w> $ indicates $ <var:p> = <nat:12> $ , $ <var:T> = <nat:11> $ , $ <var:E> = <nat:3> $ , $ <var:Q> = <nat:7> $ , $ <var:w> = <nat:5> $ and by reason of $ <nat:7> $ , $ <nat:11> $ , $ <nat:3> $ , $ <nat:5> $ , and $ <nat:12> > <nat:1> $ . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:five-composite> ( <var:i> : nat ) := exists <var:E> <var:w> <var:p> <var:Q> <var:T> : nat , ( <var:E> > <nat:1> ) /\ ( <var:w> > <nat:1> ) /\ ( <var:p> > <nat:1> ) /\ ( <var:Q> > <nat:1> ) /\ ( <var:T> > <nat:1> ) /\ ( <var:i> = <var:p> * <var:Q> * <var:w> * <var:T> * <var:E> ) . Theorem <genP:1> : <def:five-composite> <nat:13860> . Proof . unfold <def:five-composite> . exists <nat:3> . exists <nat:5> . exists <nat:12> . exists <nat:7> . exists <nat:11> . assert ( <genH> : <nat:7> > <nat:1> ) . { lia . } assert ( <genH> : <nat:11> > <nat:1> ) . { lia . } assert ( <genH> : <nat:3> > <nat:1> ) . { lia . } assert ( <genH> : <nat:5> > <nat:1> ) . { lia . } assert ( <genH> : <nat:12> > <nat:1> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 