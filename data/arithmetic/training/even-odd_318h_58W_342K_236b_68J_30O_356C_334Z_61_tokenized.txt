\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:J> \cdot <nat:68> + <nat:342> \cdot <var:K> + <nat:236> \cdot <var:b> + <nat:356> \cdot <var:C> + <nat:61> + <var:Z> \cdot <nat:334> + <nat:318> \cdot <var:h> + <nat:30> \cdot <var:O> + <var:W> \cdot <nat:58> $ must be odd given every $ <var:J> $ , $ <var:O> $ , $ <var:h> $ , $ <var:W> $ , $ <var:Z> $ , $ <var:K> $ , $ <var:C> $ , and $ <var:b> $ . \end{theorem} \begin{proof} The terms $ <var:Z> * <nat:334> $ in addition to $ <nat:30> * <var:O> $ are obviously even integers . This fact is true from the knowledge the positive integers $ <nat:334> $ additionally $ <nat:30> $ must be even . Building on , the natural numbers $ <nat:58> $ , $ <nat:68> $ , $ <nat:342> $ , $ <nat:318> $ , additionally $ <nat:356> $ will be even . Thus , the terms $ <nat:58> * <var:W> $ , $ <var:J> * <nat:68> $ , $ <nat:342> * <var:K> $ , $ <var:h> * <nat:318> $ , as well as $ <var:C> * <nat:356> $ will be even also . The coefficient $ <nat:236> $ is known as an even positive integer . For this reason , the term $ <var:b> * <nat:236> $ is even also . Observe $ <nat:61> $ is obviously odd . See the summing between an even element of $ \mathbb{Z}^+ $ and an odd positive integer will be odd . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:J> <var:O> <var:h> <var:W> <var:Z> <var:K> <var:C> <var:b> : nat , Nat . odd ( <nat:68> * <var:J> + <nat:342> * <var:K> + <nat:236> * <var:b> + <nat:356> * <var:C> + <nat:334> * <var:Z> + <nat:318> * <var:h> + <nat:30> * <var:O> + <nat:58> * <var:W> + <nat:61> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:334> = true ) . { auto . } assert ( <genH> : Nat . even <nat:30> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:334> * <var:Z> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:30> * <var:O> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:58> = true ) . { auto . } assert ( <genH> : Nat . even <nat:68> = true ) . { auto . } assert ( <genH> : Nat . even <nat:342> = true ) . { auto . } assert ( <genH> : Nat . even <nat:318> = true ) . { auto . } assert ( <genH> : Nat . even <nat:356> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:58> * <var:W> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:68> * <var:J> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:342> * <var:K> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:318> * <var:h> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:356> * <var:C> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:236> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:236> * <var:b> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . odd <nat:61> = true ) . { auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 