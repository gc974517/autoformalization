\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} We denote that granted that there are natural numbers $ <var:c> $ , $ <var:i> $ , $ <var:x> $ , $ <var:v> $ , $ <var:h> $ , $ <var:W> $ , $ <var:H> $ where $ <var:v> $ , $ <var:W> $ , $ <var:i> $ , $ <var:H> $ , $ <var:x> $ , $ <var:c> $ , and $ <var:h> > <nat:1> $ . Denote that $ <var:I> \in \mathbb{Z}^+ $ is called a <def:seven-composite> positive integer if $ <var:I> = <var:h> \times <var:H> \times <var:i> \times <var:W> \times <var:x> \times <var:c> \times <var:v> $ . Consequently $ <nat:997920> = <var:I> $ is <def:seven-composite> . \end{theorem} \begin{proof} Recall that <nat:997920> is a <def:seven-composite> natural number granted it is the product between integers $ <var:W> $ , $ <var:x> $ , $ <var:c> $ , $ <var:i> $ , $ <var:h> $ , $ <var:v> $ , and $ <var:H> $ larger than <nat:1> . Assume $ <var:c> = <nat:10> $ , $ <var:v> = <nat:9> $ , $ <var:H> = <nat:11> $ , $ <var:W> = <nat:3> $ , $ <var:i> = <nat:8> $ , $ <var:h> = <nat:7> $ , and $ <var:x> = <nat:6> $ . We justify <nat:997920> is a <def:seven-composite> number . Moreover note that $ <var:h> = <nat:7> $ , $ <var:x> = <nat:6> $ , $ <var:c> = <nat:10> $ , $ <var:W> = <nat:3> $ , $ <var:H> = <nat:11> $ , $ <var:v> = <nat:9> $ and $ <var:i> = <nat:8> $ are more than <nat:1> . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:seven-composite> ( <var:I> : nat ) := exists <var:c> <var:i> <var:x> <var:v> <var:h> <var:W> <var:H> : nat , ( <var:v> > <nat:1> ) /\ ( <var:W> > <nat:1> ) /\ ( <var:i> > <nat:1> ) /\ ( <var:H> > <nat:1> ) /\ ( <var:x> > <nat:1> ) /\ ( <var:c> > <nat:1> ) /\ ( <var:h> > <nat:1> ) /\ ( <var:I> = <var:h> * <var:H> * <var:i> * <var:W> * <var:x> * <var:c> * <var:v> ) . Theorem <genP:1> : <def:seven-composite> <nat:997920> . Proof . unfold <def:seven-composite> . exists <nat:10> . exists <nat:8> . exists <nat:6> . exists <nat:9> . exists <nat:7> . exists <nat:3> . exists <nat:11> . assert ( <genH> : <nat:7> > <nat:1> ) . { lia . } assert ( <genH> : <nat:6> > <nat:1> ) . { lia . } assert ( <genH> : <nat:10> > <nat:1> ) . { lia . } assert ( <genH> : <nat:3> > <nat:1> ) . { lia . } assert ( <genH> : <nat:11> > <nat:1> ) . { lia . } assert ( <genH> : <nat:9> > <nat:1> ) . { lia . } assert ( <genH> : <nat:8> > <nat:1> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 