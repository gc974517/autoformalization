\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Given some positive numbers $ <var:K> $ , $ <var:W> $ , $ <var:g> $ , $ <var:j> $ , $ <var:V> $ , $ <var:J> $ , $ <var:B> $ , and $ <var:I> $ the summation $ <nat:136> * <var:g> + <nat:64> * <var:I> + <var:K> * <nat:244> + <nat:216> * <var:J> + <var:B> * <nat:86> + <var:W> * <nat:314> + <var:V> * <nat:30> + <nat:106> + <nat:26> * <var:j> $ will be even . \end{theorem} \begin{proof} The sum $ <nat:64> * <var:I> + <nat:314> * <var:W> + <nat:136> * <var:g> + <nat:86> * <var:B> + <nat:26> * <var:j> + <var:K> * <nat:244> + <var:V> * <nat:30> + <var:J> * <nat:216> $ is known to be even . Observe the totaling between an even number and an even element of $ \mathbb{N} $ is guaranteed to be itself an even natural number . Observe that $ <nat:30> \times <var:V> $ is known to be an even natural number because the product between an even integer and some number will be an even element of $ \mathbb{Z}^+ $ . This fact is proven as a consequence that the number $ <nat:30> $ is known as by itself an even positive integer . The coefficients $ <nat:26> $ , $ <nat:86> $ , $ <nat:244> $ , plus $ <nat:136> $ will be even . In consequence , the pairs $ <var:j> \times <nat:26> $ , $ <nat:86> \times <var:B> $ , $ <var:K> \times <nat:244> $ , additionally $ <nat:136> \times <var:g> $ is guaranteed to be even in addition . On top of this , recall the product $ <var:W> \times <nat:314> $ is known to be an even element of $ \mathbb{Z}^+ $ . This fact is true from the fact taking the product of an even integer with a element of $ \mathbb{N} $ is guaranteed to be even . This is proven by reason that the integer $ <nat:314> $ is known to be instrinsically an even natural . In addition , the natural number $ <nat:216> $ is clearly even . Therefore , the product $ <nat:216> \times <var:J> $ is guaranteed to be even as well . $ <var:I> \times <nat:64> $ is trivially even since the coefficient $ <nat:64> $ is trivially even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:K> <var:W> <var:g> <var:j> <var:V> <var:J> <var:B> <var:I> : nat , Nat . even ( <nat:136> * <var:g> + <nat:64> * <var:I> + <nat:244> * <var:K> + <nat:216> * <var:J> + <nat:86> * <var:B> + <nat:314> * <var:W> + <nat:30> * <var:V> + <nat:26> * <var:j> + <nat:106> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:30> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:30> * <var:V> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:26> = true ) . { auto . } assert ( <genH> : Nat . even <nat:86> = true ) . { auto . } assert ( <genH> : Nat . even <nat:244> = true ) . { auto . } assert ( <genH> : Nat . even <nat:136> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:26> * <var:j> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:86> * <var:B> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:244> * <var:K> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:136> * <var:g> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:314> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:314> * <var:W> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:216> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:216> * <var:J> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:64> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:64> * <var:I> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:136> * <var:g> + <nat:64> * <var:I> + <nat:244> * <var:K> + <nat:216> * <var:J> + <nat:86> * <var:B> + <nat:314> * <var:W> + <nat:30> * <var:V> + <nat:26> * <var:j> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . even_add . rewrite <genH> . auto . Qed . 