\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Given some terms $ <var:v> $ , $ <var:S> $ , $ <var:t> $ , $ <var:l> $ , $ <var:n> $ , $ <var:s> $ , $ <var:x> $ , and $ <var:O> $ the formula $ <var:x> \cdot <nat:32> + <nat:191> + <nat:420> \cdot <var:l> + <var:n> \cdot <nat:224> + <nat:52> \cdot <var:v> + <var:O> \cdot <nat:136> + <nat:142> \cdot <var:t> + <nat:338> \cdot <var:S> + <nat:122> \cdot <var:s> $ is guaranteed to be odd . \end{theorem} \begin{proof} The products $ <var:s> <nat:122> $ , $ <var:x> <nat:32> $ , $ <var:t> <nat:142> $ , $ <var:l> <nat:420> $ , $ <var:n> <nat:224> $ , and likewise $ <var:O> <nat:136> $ are guaranteed to be even elements of $ \mathbb{Z}^+ $ . What's more , observe the product $ <var:S> <nat:338> $ is guaranteed to be an even number in $ \mathbb{N} $ . Further , the pair $ <nat:52> <var:v> $ is obviously an even whole number . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:v> <var:S> <var:t> <var:l> <var:n> <var:s> <var:x> <var:O> : nat , Nat . odd ( <nat:32> * <var:x> + <nat:420> * <var:l> + <nat:224> * <var:n> + <nat:52> * <var:v> + <nat:136> * <var:O> + <nat:142> * <var:t> + <nat:338> * <var:S> + <nat:122> * <var:s> + <nat:191> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:122> * <var:s> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:32> * <var:x> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:142> * <var:t> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:420> * <var:l> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:224> * <var:n> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:136> * <var:O> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:338> * <var:S> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:52> * <var:v> ) = true ) . { rewrite Nat . even_mul . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 