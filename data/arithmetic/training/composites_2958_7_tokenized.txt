\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} There exist $ <var:P> $ , $ <var:B> $ , $ <var:x> $ , $ <var:Q> $ , $ <var:H> $ , $ <var:W> $ , and $ <var:Z> \in \mathbb{Z}^+ $ where $ <var:Q> $ , $ <var:W> $ , $ <var:P> $ , $ <var:H> $ , $ <var:x> $ , $ <var:B> $ , $ <var:Z> > <nat:1> $ as well as satisfying the condition that the positive integer <nat:161280> is the multiplication between $ <var:P> $ , $ <var:B> $ , $ <var:x> $ , $ <var:Q> $ , $ <var:H> $ , $ <var:W> $ , and $ <var:Z> \in \mathbb{Z}^+ $ . \end{theorem} \begin{proof} Assume $ <var:Z> = <nat:5> $ , $ <var:H> = <nat:7> $ , $ <var:x> = <nat:2> $ , $ <var:P> = <nat:6> $ , $ <var:B> = <nat:12> $ , $ <var:Q> = <nat:4> $ , $ <var:W> = <nat:8> $ . Notice that $ <var:H> = <nat:7> $ , $ <var:Z> = <nat:5> $ , $ <var:W> = <nat:8> $ , $ <var:x> = <nat:2> $ , $ <var:B> = <nat:12> $ , $ <var:P> = <nat:6> $ , $ <var:Q> = <nat:4> > <nat:1> $ . Consequently , <nat:161280> is the multiplication of some whole numbers $ <var:Z> $ , $ <var:Q> $ , $ <var:B> $ , $ <var:P> $ , $ <var:H> $ , $ <var:W> $ , $ <var:x> $ as well as $ <var:Z> $ , $ <var:Q> $ , $ <var:x> $ , $ <var:W> $ , $ <var:H> $ , $ <var:B> $ , $ <var:P> > <nat:1> $ is proven . \end{proof} \end{document} 
~
Require Import Lia . Theorem <genP:1> : exists <var:P> <var:B> <var:x> <var:Q> <var:H> <var:W> <var:Z> : nat , ( <var:Q> > <nat:1> ) /\ ( <var:W> > <nat:1> ) /\ ( <var:P> > <nat:1> ) /\ ( <var:H> > <nat:1> ) /\ ( <var:x> > <nat:1> ) /\ ( <var:B> > <nat:1> ) /\ ( <var:Z> > <nat:1> ) /\ ( <nat:161280> = <var:P> * <var:B> * <var:x> * <var:Q> * <var:H> * <var:W> * <var:Z> ) . Proof . exists <nat:6> . exists <nat:12> . exists <nat:2> . exists <nat:4> . exists <nat:7> . exists <nat:8> . exists <nat:5> . assert ( <genH> : <nat:7> > <nat:1> ) . { lia . } assert ( <genH> : <nat:5> > <nat:1> ) . { lia . } assert ( <genH> : <nat:8> > <nat:1> ) . { lia . } assert ( <genH> : <nat:2> > <nat:1> ) . { lia . } assert ( <genH> : <nat:12> > <nat:1> ) . { lia . } assert ( <genH> : <nat:6> > <nat:1> ) . { lia . } assert ( <genH> : <nat:4> > <nat:1> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 