\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:c> <nat:150> + <var:O> <nat:252> + <var:E> <nat:434> + <nat:26> <var:l> + <var:y> <nat:138> + <nat:420> <var:z> + <nat:174> + <var:a> <nat:236> + <nat:240> <var:q> $ will be even given some terms $ <var:c> $ , $ <var:q> $ , $ <var:O> $ , $ <var:a> $ , $ <var:l> $ , $ <var:z> $ , $ <var:y> $ , and $ <var:E> $ . \end{theorem} \begin{proof} Recall the coefficients $ <nat:150> $ , $ <nat:252> $ , $ <nat:434> $ , $ <nat:26> $ , $ <nat:138> $ , $ <nat:420> $ , $ <nat:236> $ , additionally $ <nat:240> $ must be even . Consequently , the pairs $ <nat:150> \times <var:c> $ , $ <var:O> \times <nat:252> $ , $ <var:E> \times <nat:434> $ , $ <var:l> \times <nat:26> $ , $ <nat:138> \times <var:y> $ , $ <var:z> \times <nat:420> $ , $ <nat:236> \times <var:a> $ , in addition to $ <var:q> \times <nat:240> $ is guaranteed to be even too . As a consequence that the summing of even positive integers is an even integer , as a result this claim holds . Recall that $ <nat:174> $ is clearly even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:c> <var:q> <var:O> <var:a> <var:l> <var:z> <var:y> <var:E> : nat , Nat . even ( <nat:150> * <var:c> + <nat:252> * <var:O> + <nat:434> * <var:E> + <nat:26> * <var:l> + <nat:138> * <var:y> + <nat:420> * <var:z> + <nat:236> * <var:a> + <nat:240> * <var:q> + <nat:174> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:150> = true ) . { auto . } assert ( <genH> : Nat . even <nat:252> = true ) . { auto . } assert ( <genH> : Nat . even <nat:434> = true ) . { auto . } assert ( <genH> : Nat . even <nat:26> = true ) . { auto . } assert ( <genH> : Nat . even <nat:138> = true ) . { auto . } assert ( <genH> : Nat . even <nat:420> = true ) . { auto . } assert ( <genH> : Nat . even <nat:236> = true ) . { auto . } assert ( <genH> : Nat . even <nat:240> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:150> * <var:c> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:252> * <var:O> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:434> * <var:E> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:26> * <var:l> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:138> * <var:y> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:420> * <var:z> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:236> * <var:a> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:240> * <var:q> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } repeat rewrite Nat . even_add . assert ( <genH> : Nat . even <nat:174> = true ) . { auto . } rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 