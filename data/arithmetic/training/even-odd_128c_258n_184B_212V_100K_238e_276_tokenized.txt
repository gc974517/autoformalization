\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} For every $ <var:e> $ , $ <var:V> $ , $ <var:c> $ , $ <var:K> $ , $ <var:B> $ , and $ <var:n> \in \mathbb{N} $ the formula $ <nat:128> <var:c> + <var:K> <nat:100> + <nat:276> + <nat:258> <var:n> + <nat:238> <var:e> + <var:V> <nat:212> + <nat:184> <var:B> $ is even . \end{theorem} \begin{proof} We know $ <nat:276> $ is known to be even . We justify $ <var:c> * <nat:128> + <nat:276> + <nat:258> * <var:n> + <nat:184> * <var:B> + <nat:212> * <var:V> + <nat:100> * <var:K> + <nat:238> * <var:e> $ is even . Take note that the addition of even elements of $ \mathbb{N} $ successively is even . Take note the product $ <nat:238> \cdot <var:e> $ is clearly an even positive integer . This is true from the knowledge multiplying of an even natural and some integer is even . The pairs $ <var:n> \cdot <nat:258> $ as well as $ <nat:100> \cdot <var:K> $ are known as even . This claim must be true because the product of an even whole number with some positive integer is guaranteed to be instrinsically an even integer . Recall the term $ <nat:184> \cdot <var:B> $ is even . This fact holds from the knowledge the multiplication between an even whole number with an arbitrary whole number is even . Notice that the term $ <nat:128> \cdot <var:c> $ is trivially even . In addition , we know the term $ <nat:212> \cdot <var:V> $ is guaranteed to be an even number . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:e> <var:V> <var:c> <var:K> <var:B> <var:n> : nat , Nat . even ( <nat:128> * <var:c> + <nat:100> * <var:K> + <nat:258> * <var:n> + <nat:238> * <var:e> + <nat:212> * <var:V> + <nat:184> * <var:B> + <nat:276> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:276> = true ) . { auto . } repeat rewrite Nat . even_add . assert ( <genH> : Nat . even ( <nat:238> * <var:e> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:258> * <var:n> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:100> * <var:K> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:184> * <var:B> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:128> * <var:c> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:212> * <var:V> ) = true ) . { rewrite Nat . even_mul . auto . } rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 