\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \newtheorem{definition}{Definition} \begin{document} \begin{definition} Granted that we get such that $ <var:l> $ , $ <var:O> $ , $ <var:Z> $ , $ <var:K> $ , $ <var:j> $ , $ <var:g> $ and $ <var:I> > <nat:1> $ satisfying the condition that taking $ <var:z> \in \mathbb{Z}^+ $ , $ <var:z> = <var:K> * <var:I> * <var:g> * <var:l> * <var:O> * <var:Z> * <var:j> $ with some whole numbers $ <var:I> $ , $ <var:g> $ , $ <var:K> $ , $ <var:l> $ , $ <var:j> $ , $ <var:O> $ , $ <var:Z> $ , then take that $ <var:z> $ is a <def:seven-composite> number . \end{definition} \begin{theorem} $ <nat:259200> = <var:z> $ is a <def:seven-composite> integer . \end{theorem} \begin{proof} Remember that <nat:259200> is <def:seven-composite> if it is the multiplication of natural numbers $ <var:I> $ , $ <var:O> $ , $ <var:j> $ , $ <var:g> $ , $ <var:l> $ , $ <var:Z> $ , and $ <var:K> $ more than <nat:1> . Allow $ <var:l> = <nat:12> $ , $ <var:g> = <nat:8> $ , $ <var:O> = <nat:5> $ , $ <var:Z> = <nat:3> $ , $ <var:I> = <nat:2> $ , $ <var:j> = <nat:10> $ , and $ <var:K> = <nat:9> $ . We prove our result is true because $ <nat:5> $ , $ <nat:3> $ , $ <nat:12> $ , $ <nat:8> $ , $ <nat:10> $ , $ <nat:2> $ , $ <nat:9> $ are larger than <nat:1> . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:seven-composite> ( <var:z> : nat ) := exists <var:I> <var:g> <var:K> <var:l> <var:j> <var:O> <var:Z> : nat , ( <var:l> > <nat:1> ) /\ ( <var:O> > <nat:1> ) /\ ( <var:Z> > <nat:1> ) /\ ( <var:K> > <nat:1> ) /\ ( <var:j> > <nat:1> ) /\ ( <var:g> > <nat:1> ) /\ ( <var:I> > <nat:1> ) /\ ( <var:z> = <var:K> * <var:I> * <var:g> * <var:l> * <var:O> * <var:Z> * <var:j> ) . Theorem <genP:1> : <def:seven-composite> <nat:259200> . Proof . unfold <def:seven-composite> . exists <nat:2> . exists <nat:8> . exists <nat:9> . exists <nat:12> . exists <nat:10> . exists <nat:5> . exists <nat:3> . assert ( <genH> : <nat:5> > <nat:1> ) . { lia . } assert ( <genH> : <nat:3> > <nat:1> ) . { lia . } assert ( <genH> : <nat:12> > <nat:1> ) . { lia . } assert ( <genH> : <nat:8> > <nat:1> ) . { lia . } assert ( <genH> : <nat:10> > <nat:1> ) . { lia . } assert ( <genH> : <nat:2> > <nat:1> ) . { lia . } assert ( <genH> : <nat:9> > <nat:1> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 