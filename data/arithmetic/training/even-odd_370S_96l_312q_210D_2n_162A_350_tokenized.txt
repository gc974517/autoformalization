\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Assuming some terms $ <var:A> $ , $ <var:D> $ , $ <var:S> $ , $ <var:l> $ , $ <var:n> $ , and $ <var:q> $ the formula $ <nat:350> + <nat:96> * <var:l> + <nat:370> * <var:S> + <nat:210> * <var:D> + <nat:312> * <var:q> + <var:n> * <nat:2> + <nat:162> * <var:A> $ is even . \end{theorem} \begin{proof} Remember $ <nat:350> $ is known as even . We demonstrate $ <nat:210> <var:D> + <nat:2> <var:n> + <var:q> <nat:312> + <var:A> <nat:162> + <nat:350> + <nat:96> <var:l> + <nat:370> <var:S> $ is guaranteed to be even . Observe that the term $ <nat:370> \cdot <var:S> $ is clearly even from the knowledge the whole number $ <nat:370> $ is known as even . The natural number $ <nat:96> $ is obviously even . Then , the product $ <var:l> \cdot <nat:96> $ must be even at the same time . Take note that the number $ <nat:312> $ is known to be even . Thus , the pair $ <var:q> \cdot <nat:312> $ is even as well . Observe that the positive integer $ <nat:210> $ is guaranteed to be an even element of $ \mathbb{N} $ . As a consequence , $ <nat:210> \cdot <var:D> $ must be even additionally . In addition to this , we know that the leading term $ <nat:2> $ is obviously even . As a consequence , the term $ <var:n> \cdot <nat:2> $ is guaranteed to be even at the same time . We know the product $ <var:A> \cdot <nat:162> $ is an even number in $ \mathbb{Z}^+ $ from the knowledge the leading term $ <nat:162> $ is known as an even number in $ \mathbb{N} $ . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:A> <var:D> <var:S> <var:l> <var:n> <var:q> : nat , Nat . even ( <nat:96> * <var:l> + <nat:370> * <var:S> + <nat:210> * <var:D> + <nat:312> * <var:q> + <nat:2> * <var:n> + <nat:162> * <var:A> + <nat:350> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:350> = true ) . { auto . } assert ( <genH> : Nat . even <nat:370> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:370> * <var:S> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:96> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:96> * <var:l> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:312> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:312> * <var:q> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:210> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:210> * <var:D> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:2> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:2> * <var:n> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:162> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:162> * <var:A> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 