\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Assuming all $ <var:E> $ , $ <var:y> $ , $ <var:j> $ , $ <var:T> $ , $ <var:S> $ , $ <var:C> $ , $ <var:t> $ , and $ <var:w> $ the sum $ <var:w> <nat:482> + <var:C> <nat:474> + <var:S> <nat:472> + <nat:173> + <var:T> <nat:428> + <var:t> <nat:60> + <var:j> <nat:156> + <nat:212> <var:y> + <var:E> <nat:202> $ is odd . \end{theorem} \begin{proof} The summing between an even natural and an odd integer must be odd . We know that $ <nat:173> $ is trivially an odd number . The summation $ <var:w> <nat:482> + <nat:474> <var:C> + <var:E> <nat:202> + <var:t> <nat:60> + <nat:156> <var:j> + <nat:212> <var:y> + <var:S> <nat:472> + <var:T> <nat:428> $ is clearly even . See that the multiplication of an even element of $ \mathbb{N} $ with any number must be instrinsically an even positive integer . The numbers $ <nat:212> $ and likewise $ <nat:472> $ are obviously even numbers in $ \mathbb{Z}^+ $ Notice that the coefficients $ <nat:60> $ , $ <nat:482> $ , and likewise $ <nat:202> $ are trivially even whole numbers What's more , recall that the coefficient $ <nat:428> $ is an even number Additionally , the whole number $ <nat:474> $ is known as even In addition to this , the positive integer $ <nat:156> $ is guaranteed to be even $ <nat:212> * <var:y> + <nat:428> * <var:T> + <var:E> * <nat:202> + <var:S> * <nat:472> + <var:C> * <nat:474> + <var:t> * <nat:60> + <var:w> * <nat:482> + <nat:156> * <var:j> $ is in itself even by reason that the totaling between an even whole number and even numbers in $ \mathbb{N} $ is even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:E> <var:y> <var:j> <var:T> <var:S> <var:C> <var:t> <var:w> : nat , Nat . odd ( <nat:482> * <var:w> + <nat:474> * <var:C> + <nat:472> * <var:S> + <nat:428> * <var:T> + <nat:60> * <var:t> + <nat:156> * <var:j> + <nat:212> * <var:y> + <nat:202> * <var:E> + <nat:173> ) = true . Proof . intros . rewrite Nat . odd_add . assert ( <genH> : Nat . odd <nat:173> = true ) . { auto . } assert ( <genH> : Nat . even <nat:212> = true ) . { auto . } assert ( <genH> : Nat . even <nat:472> = true ) . { auto . } assert ( <genH> : Nat . even <nat:60> = true ) . { auto . } assert ( <genH> : Nat . even <nat:482> = true ) . { auto . } assert ( <genH> : Nat . even <nat:202> = true ) . { auto . } assert ( <genH> : Nat . even <nat:428> = true ) . { auto . } assert ( <genH> : Nat . even <nat:474> = true ) . { auto . } assert ( <genH> : Nat . even <nat:156> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:482> * <var:w> + <nat:474> * <var:C> + <nat:472> * <var:S> + <nat:428> * <var:T> + <nat:60> * <var:t> + <nat:156> * <var:j> + <nat:212> * <var:y> + <nat:202> * <var:E> ) = true ) . { repeat rewrite Nat . even_add . repeat rewrite Nat . even_mul . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite <- Nat . negb_even . rewrite <genH> . rewrite <genH> . auto . Qed . 