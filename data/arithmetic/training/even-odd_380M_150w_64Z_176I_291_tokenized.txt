\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:291> + <var:M> \times <nat:380> + <nat:150> \times <var:w> + <nat:64> \times <var:Z> + <var:I> \times <nat:176> $ is odd . \end{theorem} \begin{proof} Notice $ <nat:291> $ is trivially an odd natural . It can be checked that this lemma is proven . The natural numbers $ <nat:380> $ , $ <nat:150> $ , $ <nat:64> $ , plus $ <nat:176> $ must be even . So , the pairs $ <nat:380> <var:M> $ , $ <nat:150> <var:w> $ , $ <var:Z> <nat:64> $ , and also $ <nat:176> <var:I> $ is guaranteed to be even at the same time . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:M> <var:w> <var:Z> <var:I> : nat , Nat . odd ( <nat:380> * <var:M> + <nat:150> * <var:w> + <nat:64> * <var:Z> + <nat:176> * <var:I> + <nat:291> ) = true . Proof . intros . assert ( <genH> : Nat . odd <nat:291> = true ) . { auto . } assert ( <genH> : Nat . even <nat:380> = true ) . { auto . } assert ( <genH> : Nat . even <nat:150> = true ) . { auto . } assert ( <genH> : Nat . even <nat:64> = true ) . { auto . } assert ( <genH> : Nat . even <nat:176> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:380> * <var:M> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:150> * <var:w> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:64> * <var:Z> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:176> * <var:I> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 