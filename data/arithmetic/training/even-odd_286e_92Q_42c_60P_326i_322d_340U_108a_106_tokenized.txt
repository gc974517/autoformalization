\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Using unknowns $ <var:Q> $ , $ <var:U> $ , $ <var:e> $ , $ <var:a> $ , $ <var:P> $ , $ <var:c> $ , $ <var:i> $ , and $ <var:d> $ the expression $ <nat:286> <var:e> + <nat:92> <var:Q> + <var:c> <nat:42> + <nat:60> <var:P> + <nat:326> <var:i> + <nat:106> + <nat:322> <var:d> + <var:U> <nat:340> + <var:a> <nat:108> $ will be even . \end{theorem} \begin{proof} Likewise , the whole numbers $ <nat:286> $ , $ <nat:92> $ , $ <nat:42> $ , $ <nat:60> $ , $ <nat:326> $ , $ <nat:322> $ , $ <nat:340> $ , and likewise $ <nat:108> $ are clearly even elements of $ \mathbb{Z}^+ $ . Accordingly , the products $ <nat:286> \times <var:e> $ , $ <var:Q> \times <nat:92> $ , $ <var:c> \times <nat:42> $ , $ <var:P> \times <nat:60> $ , $ <nat:326> \times <var:i> $ , $ <var:d> \times <nat:322> $ , $ <var:U> \times <nat:340> $ , as well as $ <nat:108> \times <var:a> $ is guaranteed to be even too . The summation of even numbers in $ \mathbb{Z}^+ $ together will be fundamentally an even positive integer . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:Q> <var:U> <var:e> <var:a> <var:P> <var:c> <var:i> <var:d> : nat , Nat . even ( <nat:286> * <var:e> + <nat:92> * <var:Q> + <nat:42> * <var:c> + <nat:60> * <var:P> + <nat:326> * <var:i> + <nat:322> * <var:d> + <nat:340> * <var:U> + <nat:108> * <var:a> + <nat:106> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:286> = true ) . { auto . } assert ( <genH> : Nat . even <nat:92> = true ) . { auto . } assert ( <genH> : Nat . even <nat:42> = true ) . { auto . } assert ( <genH> : Nat . even <nat:60> = true ) . { auto . } assert ( <genH> : Nat . even <nat:326> = true ) . { auto . } assert ( <genH> : Nat . even <nat:322> = true ) . { auto . } assert ( <genH> : Nat . even <nat:340> = true ) . { auto . } assert ( <genH> : Nat . even <nat:108> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:286> * <var:e> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:92> * <var:Q> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:42> * <var:c> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:60> * <var:P> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:326> * <var:i> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:322> * <var:d> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:340> * <var:U> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:108> * <var:a> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 