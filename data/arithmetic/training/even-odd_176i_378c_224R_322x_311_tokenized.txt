\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:176> \times <var:i> + <nat:224> \times <var:R> + <nat:378> \times <var:c> + <var:x> \times <nat:322> + <nat:311> $ is guaranteed to be odd . \end{theorem} \begin{proof} It can be proven that that the formula $ <var:i> <nat:176> + <var:x> <nat:322> + <nat:378> <var:c> + <var:R> <nat:224> $ is known to be even . Remember the term $ <var:i> \times <nat:176> $ is known to be an even natural number from the knowledge taking the product between an even integer with some number in $ \mathbb{N} $ will be even , which holds from the knowledge the whole number $ <nat:176> $ is guaranteed to be by definition an even number . The product $ <nat:378> \times <var:c> $ is guaranteed to be an even element of $ \mathbb{N} $ . This claim is true by reason that the coefficient $ <nat:378> $ is clearly by itself an even element of $ \mathbb{N} $ . Building on , remember that $ <var:R> \times <nat:224> $ is guaranteed to be an even natural number from the fact the product of an even natural with a positive integer is guaranteed to be even , and is proven since the positive integer $ <nat:224> $ is trivially an even number . What's more , the whole number $ <nat:322> $ is clearly even . Consequently , the pair $ <nat:322> \times <var:x> $ must be even in addition . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:i> <var:R> <var:c> <var:x> : nat , Nat . odd ( <nat:176> * <var:i> + <nat:224> * <var:R> + <nat:378> * <var:c> + <nat:322> * <var:x> + <nat:311> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:176> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:176> * <var:i> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:378> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:378> * <var:c> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:224> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:224> * <var:R> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:322> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:322> * <var:x> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:176> * <var:i> + <nat:224> * <var:R> + <nat:378> * <var:c> + <nat:322> * <var:x> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . auto . Qed . 