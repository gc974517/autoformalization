\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \newtheorem{definition}{Definition} \begin{document} \begin{definition} Claim that $ <var:D> $ is a <def:nine-composite> number given that given some $ <var:w> $ , $ <var:H> $ , $ <var:P> $ , $ <var:S> $ , $ <var:T> $ , $ <var:i> $ , $ <var:l> $ , $ <var:a> $ , $ <var:I> \in \mathbb{Z}^+ $ we get $ <var:H> * <var:a> * <var:w> * <var:T> * <var:P> * <var:l> * <var:I> * <var:S> * <var:i> = <var:D> $ assuming $ <var:D> \in \mathbb{N} $ and where $ <var:T> $ , $ <var:i> $ , $ <var:S> $ , $ <var:l> $ , $ <var:I> $ , $ <var:a> $ , $ <var:w> $ , $ <var:H> $ , $ <var:P> \geq <nat:2> $ . \end{definition} \begin{theorem} $ <nat:15966720> = <var:D> $ is a <def:nine-composite> integer . \end{theorem} \begin{proof} We verify our principle is true considering $ <nat:7> $ , $ <nat:12> $ , $ <nat:11> $ , $ <nat:2> $ , $ <nat:4> $ , $ <nat:8> $ , $ <nat:5> $ , $ <nat:9> $ and $ <nat:6> \geq <nat:2> $ and for $ <var:l> \times <var:i> \times <var:T> \times <var:I> \times <var:w> \times <var:a> \times <var:H> \times <var:S> \times <var:P> = <nat:15966720> $ implies $ <var:T> = <nat:12> $ , $ <var:I> = <nat:6> $ , $ <var:S> = <nat:4> $ , $ <var:P> = <nat:9> $ , $ <var:l> = <nat:11> $ , $ <var:w> = <nat:8> $ , $ <var:i> = <nat:5> $ , $ <var:a> = <nat:2> $ and $ <var:H> = <nat:7> $ . Because of this , <nat:15966720> is the product of some $ <var:P> $ , $ <var:l> $ , $ <var:i> $ , $ <var:a> $ , $ <var:H> $ , $ <var:T> $ , $ <var:S> $ , $ <var:I> $ , and $ <var:w> $ as well as $ <var:S> $ , $ <var:a> $ , $ <var:w> $ , $ <var:i> $ , $ <var:l> $ , $ <var:I> $ , $ <var:P> $ , $ <var:H> $ and $ <var:T> \geq <nat:2> $ is validated . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:nine-composite> ( <var:D> : nat ) := exists <var:w> <var:H> <var:P> <var:S> <var:T> <var:i> <var:l> <var:a> <var:I> : nat , ( <var:H> * <var:a> * <var:w> * <var:T> * <var:P> * <var:l> * <var:I> * <var:S> * <var:i> = <var:D> ) /\ ( <var:T> >= <nat:2> ) /\ ( <var:i> >= <nat:2> ) /\ ( <var:S> >= <nat:2> ) /\ ( <var:l> >= <nat:2> ) /\ ( <var:I> >= <nat:2> ) /\ ( <var:a> >= <nat:2> ) /\ ( <var:w> >= <nat:2> ) /\ ( <var:H> >= <nat:2> ) /\ ( <var:P> >= <nat:2> ) . Theorem <genP:1> : <def:nine-composite> <nat:15966720> . Proof . unfold <def:nine-composite> . assert ( <genH> : <nat:7> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:12> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:11> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:2> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:4> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:8> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:5> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:9> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:6> >= <nat:2> ) . { lia . } exists <nat:8> . exists <nat:7> . exists <nat:9> . exists <nat:4> . exists <nat:12> . exists <nat:5> . exists <nat:11> . exists <nat:2> . exists <nat:6> . repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 