\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:334> \times <var:U> + <nat:385> + <nat:438> \times <var:x> + <var:v> \times <nat:8> + <var:C> \times <nat:28> + <var:V> \times <nat:20> + <nat:454> \times <var:Y> + <var:E> \times <nat:302> + <var:l> \times <nat:78> $ is odd . \end{theorem} \begin{proof} Furthermore , $ <var:U> \cdot <nat:334> $ is guaranteed to be even . This fact is true because the whole number $ <nat:334> $ is obviously by definition an even element of $ \mathbb{N} $ . In addition to this , the whole number $ <nat:454> $ is clearly even . Consequently , the term $ <nat:454> \cdot <var:Y> $ is guaranteed to be even additionally . Remember that $ <var:C> \cdot <nat:28> $ is trivially an even integer from the fact the positive integer $ <nat:28> $ is known as by its very nature an even positive integer . The natural number $ <nat:78> $ is clearly an even number in $ \mathbb{N} $ . Hence , $ <var:l> \cdot <nat:78> $ is guaranteed to be even at the same time . What's more , the term $ <nat:438> \cdot <var:x> $ is clearly an even integer . This claim holds because the product between an even element of $ \mathbb{N} $ with any whole number is guaranteed to be even and also the integer $ <nat:438> $ is clearly in itself an even natural number . In addition to this , observe the whole number $ <nat:8> $ is obviously even . Accordingly , $ <nat:8> \cdot <var:v> $ is even in addition . What's more , the product $ <var:E> \cdot <nat:302> $ is guaranteed to be even . This claim is true because multiplying of an even integer and some integer is guaranteed to be an even number and also the coefficient $ <nat:302> $ is guaranteed to be an even natural . Adding on , recall the pair $ <var:V> \cdot <nat:20> $ is obviously an even element of $ \mathbb{N} $ . This fact must be true since the leading term $ <nat:20> $ is clearly even . It can be justified that the expression $ <var:E> * <nat:302> + <nat:385> + <nat:454> * <var:Y> + <var:U> * <nat:334> + <nat:78> * <var:l> + <nat:28> * <var:C> + <nat:8> * <var:v> + <var:V> * <nat:20> + <var:x> * <nat:438> $ is guaranteed to be odd . We know that $ <nat:385> $ is trivially odd . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:U> <var:x> <var:v> <var:C> <var:V> <var:Y> <var:E> <var:l> : nat , Nat . odd ( <nat:334> * <var:U> + <nat:438> * <var:x> + <nat:8> * <var:v> + <nat:28> * <var:C> + <nat:20> * <var:V> + <nat:454> * <var:Y> + <nat:302> * <var:E> + <nat:78> * <var:l> + <nat:385> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:334> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:334> * <var:U> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:454> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:454> * <var:Y> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:28> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:28> * <var:C> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:78> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:78> * <var:l> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:438> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:438> * <var:x> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:8> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:8> * <var:v> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:302> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:302> * <var:E> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:20> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:20> * <var:V> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . odd <nat:385> = true ) . { auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 