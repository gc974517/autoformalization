\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} If we get $ <var:q> $ , $ <var:V> $ , $ <var:e> $ , $ <var:M> $ , and $ <var:n> \geq <nat:2> $ so that using some $ <var:D> $ , $ <var:V> \times <var:M> \times <var:e> \times <var:n> \times <var:q> = <var:D> $ , then we claim that $ <var:D> $ is a <def:five-composite> number with some $ <var:q> $ , $ <var:e> $ , $ <var:n> $ , $ <var:V> $ , $ <var:M> \in \mathbb{N} $ . Thus $ <var:D> = <nat:63360> $ is <def:five-composite> . \end{theorem} \begin{proof} Remember that a <def:five-composite> is the multiplication of natural numbers $ <var:n> $ , $ <var:M> $ , $ <var:V> $ , $ <var:e> $ , and $ <var:q> $ so that $ <var:q> $ , $ <var:V> $ , $ <var:e> $ , $ <var:n> $ , and $ <var:M> \geq <nat:2> $ . Let $ <var:V> = <nat:6> $ , $ <var:q> = <nat:10> $ , $ <var:n> = <nat:11> $ , $ <var:e> = <nat:12> $ and $ <var:M> = <nat:8> $ . We justify <nat:63360> is a <def:five-composite> number . We present <nat:63360> is a <def:five-composite> integer considering As $ <nat:10> $ , $ <nat:6> $ , $ <nat:8> $ , $ <nat:11> $ and $ <nat:12> $ are more than or equivalent to <nat:2> . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:five-composite> ( <var:D> : nat ) := exists <var:q> <var:e> <var:n> <var:V> <var:M> : nat , ( <var:q> >= <nat:2> ) /\ ( <var:V> >= <nat:2> ) /\ ( <var:e> >= <nat:2> ) /\ ( <var:M> >= <nat:2> ) /\ ( <var:n> >= <nat:2> ) /\ ( <var:V> * <var:M> * <var:e> * <var:n> * <var:q> = <var:D> ) . Theorem <genP:1> : <def:five-composite> <nat:63360> . Proof . unfold <def:five-composite> . exists <nat:10> . exists <nat:12> . exists <nat:11> . exists <nat:6> . exists <nat:8> . assert ( <genH> : <nat:10> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:6> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:8> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:11> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:12> >= <nat:2> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 