\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:B> \times <nat:376> + <var:Y> \times <nat:30> + <var:d> \times <nat:176> + <var:a> \times <nat:42> + <nat:339> + <var:n> \times <nat:112> + <var:F> \times <nat:266> $ must be odd using any unknowns $ <var:F> $ , $ <var:Y> $ , $ <var:a> $ , $ <var:n> $ , $ <var:B> $ , and $ <var:d> $ . \end{theorem} \begin{proof} The terms $ <nat:376> * <var:B> $ , $ <nat:30> * <var:Y> $ , $ <nat:176> * <var:d> $ , $ <nat:42> * <var:a> $ , $ <var:n> * <nat:112> $ , as well as $ <var:F> * <nat:266> $ are known as even as a consequence that the coefficients $ <nat:376> $ , $ <nat:30> $ , $ <nat:176> $ , $ <nat:42> $ , $ <nat:112> $ , and likewise $ <nat:266> $ will be even numbers in $ \mathbb{N} $ . See that $ <nat:339> $ is obviously an odd number in $ \mathbb{Z}^+ $ . The totaling between even numbers collectively with an odd positive integer will be an odd element of $ \mathbb{N} $ . Thus , the sum $ <var:a> \cdot <nat:42> + <nat:30> \cdot <var:Y> + <var:F> \cdot <nat:266> + <nat:339> + <nat:176> \cdot <var:d> + <nat:112> \cdot <var:n> + <var:B> \cdot <nat:376> $ must be odd . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:F> <var:Y> <var:a> <var:n> <var:B> <var:d> : nat , Nat . odd ( <nat:376> * <var:B> + <nat:30> * <var:Y> + <nat:176> * <var:d> + <nat:42> * <var:a> + <nat:112> * <var:n> + <nat:266> * <var:F> + <nat:339> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:376> = true ) . { auto . } assert ( <genH> : Nat . even <nat:30> = true ) . { auto . } assert ( <genH> : Nat . even <nat:176> = true ) . { auto . } assert ( <genH> : Nat . even <nat:42> = true ) . { auto . } assert ( <genH> : Nat . even <nat:112> = true ) . { auto . } assert ( <genH> : Nat . even <nat:266> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:376> * <var:B> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:30> * <var:Y> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:176> * <var:d> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:42> * <var:a> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:112> * <var:n> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:266> * <var:F> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . odd <nat:339> = true ) . { auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 