\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:134> <var:e> + <var:q> <nat:348> + <var:V> <nat:6> + <nat:298> <var:P> + <var:t> <nat:240> + <var:c> <nat:322> + <nat:180> $ will be even . \end{theorem} \begin{proof} Take note the addition between even naturals and an even number in $ \mathbb{N} $ is guaranteed to be an even number . Observe that the sum $ <var:c> * <nat:322> + <nat:6> * <var:V> + <nat:240> * <var:t> + <nat:180> + <nat:298> * <var:P> + <var:q> * <nat:348> + <nat:134> * <var:e> $ is even from the fact $ <var:P> <nat:298> + <nat:348> <var:q> + <var:t> <nat:240> + <nat:322> <var:c> + <nat:134> <var:e> + <nat:6> <var:V> $ is obviously even , as a consequence that the multiplication of an even number with an arbitrary positive integer is guaranteed to be even . Remember the leading terms $ <nat:240> $ , $ <nat:134> $ , and moreover $ <nat:322> $ are known as even positive integers On top of this , the leading terms $ <nat:298> $ and moreover $ <nat:6> $ are trivially even The natural number $ <nat:348> $ is trivially even \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:e> <var:q> <var:V> <var:P> <var:t> <var:c> : nat , Nat . even ( <nat:134> * <var:e> + <nat:348> * <var:q> + <nat:6> * <var:V> + <nat:298> * <var:P> + <nat:240> * <var:t> + <nat:322> * <var:c> + <nat:180> ) = true . Proof . intros . rewrite Nat . even_add . assert ( <genH> : Nat . even <nat:240> = true ) . { auto . } assert ( <genH> : Nat . even <nat:134> = true ) . { auto . } assert ( <genH> : Nat . even <nat:322> = true ) . { auto . } assert ( <genH> : Nat . even <nat:298> = true ) . { auto . } assert ( <genH> : Nat . even <nat:6> = true ) . { auto . } assert ( <genH> : Nat . even <nat:348> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:134> * <var:e> + <nat:348> * <var:q> + <nat:6> * <var:V> + <nat:298> * <var:P> + <nat:240> * <var:t> + <nat:322> * <var:c> ) = true ) . { repeat rewrite Nat . even_add . repeat rewrite Nat . even_mul . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite <genH> . auto . Qed . 