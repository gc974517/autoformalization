\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \newtheorem{definition}{Definition} \begin{document} \begin{definition} If $ \exists <var:n> $ , $ <var:X> $ , $ <var:I> $ , $ <var:J> $ , $ <var:G> $ , $ <var:a> $ , $ <var:S> $ , $ <var:f> $ , $ <var:T> \in \mathbb{Z}^+ $ then denote that some whole number $ <var:h> $ is said to be <def:nine-composite> if $ <var:h> = <var:T> \cdot <var:S> \cdot <var:J> \cdot <var:n> \cdot <var:G> \cdot <var:f> \cdot <var:X> \cdot <var:I> \cdot <var:a> $ as well as factors are greater than or equivalent to <nat:2> . \end{definition} \begin{theorem} The integer <nat:15966720> is a <def:nine-composite> natural number . \end{theorem} \begin{proof} Remember <nat:15966720> is <def:nine-composite> supposing <nat:15966720> is the product of integers $ <var:S> $ , $ <var:X> $ , $ <var:G> $ , $ <var:f> $ , $ <var:J> $ , $ <var:I> $ , $ <var:T> $ , $ <var:a> $ , $ <var:n> $ such that $ <var:J> $ , $ <var:I> $ , $ <var:G> $ , $ <var:n> $ , $ <var:f> $ , $ <var:a> $ , $ <var:S> $ , $ <var:X> $ and $ <var:T> \geq <nat:2> $ . Observe $ <nat:15966720> = <var:I> * <var:f> * <var:n> * <var:S> * <var:X> * <var:T> * <var:J> * <var:G> * <var:a> $ gives $ <var:G> = <nat:4> $ , $ <var:f> = <nat:10> $ , $ <var:X> = <nat:8> $ , $ <var:I> = <nat:7> $ , $ <var:T> = <nat:11> $ , $ <var:n> = <nat:2> $ , $ <var:S> = <nat:12> $ , $ <var:a> = <nat:3> $ , $ <var:J> = <nat:9> $ . Moreover notice $ <nat:4> $ , $ <nat:3> $ , $ <nat:7> $ , $ <nat:10> $ , $ <nat:9> $ , $ <nat:8> $ , $ <nat:12> $ , $ <nat:2> $ , and $ <nat:11> $ are more than or equal to <nat:2> . This implies <nat:15966720> is <def:nine-composite> . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:nine-composite> ( <var:h> : nat ) := exists <var:n> <var:X> <var:I> <var:J> <var:G> <var:a> <var:S> <var:f> <var:T> : nat , ( <var:h> = <var:T> * <var:S> * <var:J> * <var:n> * <var:G> * <var:f> * <var:X> * <var:I> * <var:a> ) /\ ( <var:n> >= <nat:2> ) /\ ( <var:X> >= <nat:2> ) /\ ( <var:I> >= <nat:2> ) /\ ( <var:J> >= <nat:2> ) /\ ( <var:G> >= <nat:2> ) /\ ( <var:a> >= <nat:2> ) /\ ( <var:S> >= <nat:2> ) /\ ( <var:f> >= <nat:2> ) /\ ( <var:T> >= <nat:2> ) . Theorem <genP:1> : <def:nine-composite> <nat:15966720> . Proof . unfold <def:nine-composite> . exists <nat:2> . exists <nat:8> . exists <nat:7> . exists <nat:9> . exists <nat:4> . exists <nat:3> . exists <nat:12> . exists <nat:10> . exists <nat:11> . assert ( <genH> : <nat:4> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:3> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:7> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:10> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:9> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:8> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:12> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:2> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:11> >= <nat:2> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 