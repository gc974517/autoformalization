\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:a> \times <nat:144> + <nat:476> \times <var:C> + <nat:91> + <var:W> \times <nat:132> + <var:I> \times <nat:34> $ must be odd . \end{theorem} \begin{proof} We use the fact that the summation $ <nat:476> \times <var:C> + <nat:34> \times <var:I> + <var:W> \times <nat:132> + <var:a> \times <nat:144> + <nat:91> $ is trivially odd as a consequence that the formula $ <nat:144> \times <var:a> + <nat:476> \times <var:C> + <var:W> \times <nat:132> + <var:I> \times <nat:34> $ is known as even , by reason that the addition of even natural numbers collectively with an even element of $ \mathbb{Z}^+ $ is even . The products $ <nat:132> <var:W> $ and also $ <var:a> <nat:144> $ are obviously even integers . This is proven from the fact multiplying of an even natural with an arbitrary element of $ \mathbb{N} $ will be an even whole number . The pair $ <var:I> <nat:34> $ is known to be even by reason that taking the product of an even natural number and any number must be even . Recall $ <var:C> <nat:476> $ is known to be even by reason that the product of an even number in $ \mathbb{N} $ and an arbitrary natural number must be even . Recall that $ <nat:91> $ is obviously odd . The totaling between an even element of $ \mathbb{Z}^+ $ with an odd element of $ \mathbb{Z}^+ $ is odd . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:a> <var:C> <var:W> <var:I> : nat , Nat . odd ( <nat:144> * <var:a> + <nat:476> * <var:C> + <nat:132> * <var:W> + <nat:34> * <var:I> + <nat:91> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:132> * <var:W> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:144> * <var:a> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:34> * <var:I> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:476> * <var:C> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:144> * <var:a> + <nat:476> * <var:C> + <nat:132> * <var:W> + <nat:34> * <var:I> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } assert ( <genH> : Nat . odd <nat:91> = true ) . { auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . rewrite <genH> . auto . Qed . 