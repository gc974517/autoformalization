\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Take $ <var:f> $ , $ <var:Q> $ , $ <var:y> $ , $ <var:O> $ , $ <var:I> $ , $ <var:R> $ and $ <var:N> \in \mathbb{N} $ satisfying the condition that $ <var:Q> $ , $ <var:O> $ , $ <var:R> $ , $ <var:I> $ , $ <var:y> $ , $ <var:N> $ , $ <var:f> $ larger than or equivalent to <nat:2> plus such that <nat:475200> is the multiplication of whole numbers $ <var:f> $ , $ <var:Q> $ , $ <var:y> $ , $ <var:O> $ , $ <var:I> $ , $ <var:R> $ and $ <var:N> \in \mathbb{N} $ . \end{theorem} \begin{proof} Allow $ <var:f> = <nat:8> $ , $ <var:N> = <nat:5> $ , $ <var:O> = <nat:9> $ , $ <var:y> = <nat:10> $ , $ <var:I> = <nat:11> $ , $ <var:R> = <nat:6> $ , $ <var:Q> = <nat:2> $ . We show our formula is valid on account of $ <var:y> * <var:R> * <var:I> * <var:f> * <var:Q> * <var:N> * <var:O> = <nat:475200> $ plus in view of $ <var:O> = <nat:9> $ , $ <var:I> = <nat:11> $ , $ <var:N> = <nat:5> $ , $ <var:R> = <nat:6> $ , $ <var:y> = <nat:10> $ , $ <var:f> = <nat:8> $ , and $ <var:Q> = <nat:2> \geq <nat:2> $ . \end{proof} \end{document} 
~
Require Import Lia . Theorem <genP:1> : exists <var:f> <var:Q> <var:y> <var:O> <var:I> <var:R> <var:N> : nat , ( <var:Q> >= <nat:2> ) /\ ( <var:O> >= <nat:2> ) /\ ( <var:R> >= <nat:2> ) /\ ( <var:I> >= <nat:2> ) /\ ( <var:y> >= <nat:2> ) /\ ( <var:N> >= <nat:2> ) /\ ( <var:f> >= <nat:2> ) /\ ( <nat:475200> = <var:f> * <var:Q> * <var:y> * <var:O> * <var:I> * <var:R> * <var:N> ) . Proof . exists <nat:8> . exists <nat:2> . exists <nat:10> . exists <nat:9> . exists <nat:11> . exists <nat:6> . exists <nat:5> . assert ( <genH> : <nat:9> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:11> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:5> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:6> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:10> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:8> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:2> >= <nat:2> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 