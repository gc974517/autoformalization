\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} With all integers $ <var:y> $ , $ <var:H> $ , $ <var:G> $ , $ <var:W> $ , $ <var:o> $ , and $ <var:A> $ $ <var:A> <nat:372> + <var:W> <nat:406> + <nat:9> + <nat:36> <var:o> + <nat:442> <var:H> + <var:G> <nat:298> + <nat:30> <var:y> $ must be odd . \end{theorem} \begin{proof} Take note the terms $ <var:y> * <nat:30> $ and also $ <var:H> * <nat:442> $ are obviously even numbers from the knowledge the multiplication between an even whole number and some natural number is in itself an even whole number . Building on , the pairs $ <var:G> * <nat:298> $ as well as $ <nat:36> * <var:o> $ are trivially even elements of $ \mathbb{N} $ as a consequence that taking the product of an even number in $ \mathbb{Z}^+ $ and an arbitrary natural must be even . The product $ <nat:372> * <var:A> $ is known to be even by reason that the multiplication between an even number in $ \mathbb{Z}^+ $ and an arbitrary natural will be even . The term $ <var:W> * <nat:406> $ is clearly even . This is proven by reason that the multiplication between an even element of $ \mathbb{Z}^+ $ with any element of $ \mathbb{N} $ will be an even element of $ \mathbb{N} $ . It can be justified that this main result is true . Observe that $ <nat:9> $ is guaranteed to be an odd natural number . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:y> <var:H> <var:G> <var:W> <var:o> <var:A> : nat , Nat . odd ( <nat:372> * <var:A> + <nat:406> * <var:W> + <nat:36> * <var:o> + <nat:442> * <var:H> + <nat:298> * <var:G> + <nat:30> * <var:y> + <nat:9> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:30> * <var:y> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:442> * <var:H> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:298> * <var:G> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:36> * <var:o> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:372> * <var:A> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:406> * <var:W> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . odd <nat:9> = true ) . { auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 