\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:52> * <var:f> + <var:S> * <nat:96> + <var:W> * <nat:4> + <var:H> * <nat:196> + <nat:244> * <var:U> + <var:w> * <nat:168> + <var:t> * <nat:2> + <nat:169> + <var:c> * <nat:314> $ is guaranteed to be odd using some unknowns $ <var:S> $ , $ <var:f> $ , $ <var:t> $ , $ <var:c> $ , $ <var:w> $ , $ <var:W> $ , $ <var:H> $ , and $ <var:U> $ . \end{theorem} \begin{proof} The expression $ <var:S> \cdot <nat:96> + <var:f> \cdot <nat:52> + <nat:4> \cdot <var:W> + <var:t> \cdot <nat:2> + <nat:196> \cdot <var:H> + <var:c> \cdot <nat:314> + <var:U> \cdot <nat:244> + <var:w> \cdot <nat:168> $ is obviously even . Additionally , the leading terms $ <nat:96> $ , $ <nat:52> $ , $ <nat:4> $ , $ <nat:2> $ , $ <nat:196> $ , $ <nat:314> $ , $ <nat:244> $ , and $ <nat:168> $ are known as even . Then , the terms $ <var:S> * <nat:96> $ , $ <var:f> * <nat:52> $ , $ <var:W> * <nat:4> $ , $ <nat:2> * <var:t> $ , $ <var:H> * <nat:196> $ , $ <nat:314> * <var:c> $ , $ <nat:244> * <var:U> $ , plus $ <nat:168> * <var:w> $ must be even too . By reason that taking the product of an even natural and an arbitrary integer will be an even number in $ \mathbb{N} $ the summation $ <var:t> <nat:2> + <var:w> <nat:168> + <nat:196> <var:H> + <nat:4> <var:W> + <nat:52> <var:f> + <nat:244> <var:U> + <nat:96> <var:S> + <var:c> <nat:314> $ is guaranteed to be even . We verify the formula $ <var:U> <nat:244> + <nat:96> <var:S> + <nat:314> <var:c> + <nat:169> + <nat:4> <var:W> + <nat:52> <var:f> + <var:w> <nat:168> + <nat:196> <var:H> + <nat:2> <var:t> $ is guaranteed to be odd . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:S> <var:f> <var:t> <var:c> <var:w> <var:W> <var:H> <var:U> : nat , Nat . odd ( <nat:52> * <var:f> + <nat:96> * <var:S> + <nat:4> * <var:W> + <nat:196> * <var:H> + <nat:244> * <var:U> + <nat:168> * <var:w> + <nat:2> * <var:t> + <nat:314> * <var:c> + <nat:169> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:96> = true ) . { auto . } assert ( <genH> : Nat . even <nat:52> = true ) . { auto . } assert ( <genH> : Nat . even <nat:4> = true ) . { auto . } assert ( <genH> : Nat . even <nat:2> = true ) . { auto . } assert ( <genH> : Nat . even <nat:196> = true ) . { auto . } assert ( <genH> : Nat . even <nat:314> = true ) . { auto . } assert ( <genH> : Nat . even <nat:244> = true ) . { auto . } assert ( <genH> : Nat . even <nat:168> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:96> * <var:S> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:52> * <var:f> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:4> * <var:W> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:2> * <var:t> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:196> * <var:H> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:314> * <var:c> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:244> * <var:U> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:168> * <var:w> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:52> * <var:f> + <nat:96> * <var:S> + <nat:4> * <var:W> + <nat:196> * <var:H> + <nat:244> * <var:U> + <nat:168> * <var:w> + <nat:2> * <var:t> + <nat:314> * <var:c> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . auto . Qed . 