\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Taking every $ <var:j> $ , $ <var:u> $ , $ <var:K> $ , and $ <var:A> \in \mathbb{Z}^+ $ the sum $ <var:j> \times <nat:38> + <nat:312> \times <var:u> + <var:K> \times <nat:68> + <nat:15> + <var:A> \times <nat:344> $ must be odd . \end{theorem} \begin{proof} Notice the adding between even elements of $ \mathbb{N} $ successively and an odd element of $ \mathbb{Z}^+ $ is guaranteed to be odd . The formula $ <nat:344> \cdot <var:A> + <nat:68> \cdot <var:K> + <nat:15> + <var:u> \cdot <nat:312> + <var:j> \cdot <nat:38> $ is obviously odd by reason that the summation $ <var:K> <nat:68> + <nat:312> <var:u> + <nat:344> <var:A> + <var:j> <nat:38> $ is known as even . Adding on , the terms $ <nat:68> \times <var:K> $ , $ <nat:312> \times <var:u> $ , $ <nat:344> \times <var:A> $ , and likewise $ <nat:38> \times <var:j> $ must be even whole numbers . This claim is proven as a consequence that multiplying of an even natural and a whole number is an even positive integer as well as the positive integers $ <nat:68> $ , $ <nat:312> $ , $ <nat:344> $ , and also $ <nat:38> $ are by definition even natural numbers . From the fact taking the product of even numbers and an arbitrary integer is guaranteed to be an even positive integer our theorem holds . It can be proven that the sum $ <nat:15> + <var:A> \cdot <nat:344> + <var:u> \cdot <nat:312> + <nat:68> \cdot <var:K> + <nat:38> \cdot <var:j> $ is odd . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:j> <var:u> <var:K> <var:A> : nat , Nat . odd ( <nat:38> * <var:j> + <nat:312> * <var:u> + <nat:68> * <var:K> + <nat:344> * <var:A> + <nat:15> ) = true . Proof . intros . rewrite Nat . odd_add . assert ( <genH> : Nat . even <nat:68> = true ) . { auto . } assert ( <genH> : Nat . even <nat:312> = true ) . { auto . } assert ( <genH> : Nat . even <nat:344> = true ) . { auto . } assert ( <genH> : Nat . even <nat:38> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:68> * <var:K> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:312> * <var:u> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:344> * <var:A> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:38> * <var:j> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:38> * <var:j> + <nat:312> * <var:u> + <nat:68> * <var:K> + <nat:344> * <var:A> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite <- Nat . negb_even . rewrite <genH> . auto . Qed . 