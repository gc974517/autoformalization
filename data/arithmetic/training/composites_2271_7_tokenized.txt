\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \newtheorem{definition}{Definition} \begin{document} \begin{definition} If we have $ <var:d> $ , $ <var:k> $ , $ <var:U> $ , $ <var:M> $ , $ <var:z> $ , $ <var:E> $ and $ <var:u> \geq <nat:2> $ where assuming $ <var:Y> \in \mathbb{N} $ , $ <var:E> \times <var:k> \times <var:U> \times <var:M> \times <var:z> \times <var:d> \times <var:u> = <var:Y> $ , let that $ <var:Y> $ is a <def:seven-composite> integer with some $ <var:U> $ , $ <var:u> $ , $ <var:M> $ , $ <var:z> $ , $ <var:E> $ , $ <var:d> $ , $ <var:k> \in \mathbb{N} $ . \end{definition} \begin{theorem} $ <var:Y> = <nat:40320> $ is <def:seven-composite> . \end{theorem} \begin{proof} We present the formula holds in consideration of $ <nat:7> $ , $ <nat:2> $ , $ <nat:5> $ , $ <nat:6> $ , $ <nat:4> $ , $ <nat:3> $ and $ <nat:8> $ are more than or equal to <nat:2> and by reason of $ <var:d> * <var:k> * <var:M> * <var:z> * <var:U> * <var:u> * <var:E> = <nat:40320> $ implies $ <var:M> = <nat:3> $ , $ <var:u> = <nat:7> $ , $ <var:U> = <nat:8> $ , $ <var:E> = <nat:4> $ , $ <var:z> = <nat:6> $ , $ <var:k> = <nat:5> $ , and $ <var:d> = <nat:2> $ . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:seven-composite> ( <var:Y> : nat ) := exists <var:U> <var:u> <var:M> <var:z> <var:E> <var:d> <var:k> : nat , ( <var:d> >= <nat:2> ) /\ ( <var:k> >= <nat:2> ) /\ ( <var:U> >= <nat:2> ) /\ ( <var:M> >= <nat:2> ) /\ ( <var:z> >= <nat:2> ) /\ ( <var:E> >= <nat:2> ) /\ ( <var:u> >= <nat:2> ) /\ ( <var:E> * <var:k> * <var:U> * <var:M> * <var:z> * <var:d> * <var:u> = <var:Y> ) . Theorem <genP:1> : <def:seven-composite> <nat:40320> . Proof . unfold <def:seven-composite> . assert ( <genH> : <nat:7> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:2> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:5> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:6> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:4> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:3> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:8> >= <nat:2> ) . { lia . } exists <nat:8> . exists <nat:7> . exists <nat:3> . exists <nat:6> . exists <nat:4> . exists <nat:2> . exists <nat:5> . repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 