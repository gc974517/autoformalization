\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:490> <var:J> + <nat:93> + <var:v> <nat:224> + <var:W> <nat:38> + <nat:426> <var:H> + <var:T> <nat:202> + <nat:356> <var:i> + <var:e> <nat:8> + <var:h> <nat:420> $ is odd . \end{theorem} \begin{proof} The summation between an even integer with an odd whole number will be by its very nature an odd element of $ \mathbb{Z}^+ $ . Observe that the coefficient $ <nat:202> $ is clearly even . Consequently , $ <nat:202> <var:T> $ is guaranteed to be even at the same time . Recall the positive integer $ <nat:426> $ is obviously an even positive integer . As a consequence , the pair $ <var:H> <nat:426> $ will be even at the same time . Take note the numbers $ <nat:356> $ , $ <nat:224> $ , as well as $ <nat:38> $ are even numbers in $ \mathbb{N} $ . Therefore , the terms $ <var:i> <nat:356> $ , $ <nat:224> <var:v> $ , plus $ <var:W> <nat:38> $ must be even also . In addition to this , the term $ <var:e> <nat:8> $ is guaranteed to be an even number in $ \mathbb{Z}^+ $ . This claim holds as a consequence that the positive integer $ <nat:8> $ is guaranteed to be instrinsically an even element of $ \mathbb{N} $ . We know that the positive integer $ <nat:490> $ is obviously even . As a consequence , the pair $ <var:J> <nat:490> $ is even too . Likewise , $ <var:h> <nat:420> $ is known as an even number in $ \mathbb{Z}^+ $ from the knowledge the leading term $ <nat:420> $ is even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:J> <var:v> <var:W> <var:H> <var:T> <var:i> <var:e> <var:h> : nat , Nat . odd ( <nat:490> * <var:J> + <nat:224> * <var:v> + <nat:38> * <var:W> + <nat:426> * <var:H> + <nat:202> * <var:T> + <nat:356> * <var:i> + <nat:8> * <var:e> + <nat:420> * <var:h> + <nat:93> ) = true . Proof . intros . rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . assert ( <genH> : Nat . even <nat:202> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:202> * <var:T> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:426> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:426> * <var:H> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:356> = true ) . { auto . } assert ( <genH> : Nat . even <nat:224> = true ) . { auto . } assert ( <genH> : Nat . even <nat:38> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:356> * <var:i> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:224> * <var:v> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:38> * <var:W> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:8> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:8> * <var:e> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:490> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:490> * <var:J> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:420> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:420> * <var:h> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 