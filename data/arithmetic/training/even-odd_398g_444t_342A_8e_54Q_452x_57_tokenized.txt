\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:452> * <var:x> + <nat:57> + <nat:8> * <var:e> + <nat:444> * <var:t> + <nat:342> * <var:A> + <nat:398> * <var:g> + <var:Q> * <nat:54> $ will be odd using any positive numbers $ <var:x> $ , $ <var:g> $ , $ <var:A> $ , $ <var:e> $ , $ <var:Q> $ , and $ <var:t> $ . \end{theorem} \begin{proof} We utilize that the summation $ <var:t> \times <nat:444> + <nat:57> + <nat:452> \times <var:x> + <var:g> \times <nat:398> + <var:e> \times <nat:8> + <nat:54> \times <var:Q> + <nat:342> \times <var:A> $ is guaranteed to be odd from the fact the summation $ <var:t> \cdot <nat:444> + <nat:398> \cdot <var:g> + <var:e> \cdot <nat:8> + <var:Q> \cdot <nat:54> + <var:A> \cdot <nat:342> + <var:x> \cdot <nat:452> $ is trivially even . The natural numbers $ <nat:444> $ , $ <nat:398> $ , $ <nat:8> $ , $ <nat:54> $ , $ <nat:342> $ , additionally $ <nat:452> $ must be even numbers in $ \mathbb{Z}^+ $ . So , the pairs $ <nat:444> * <var:t> $ , $ <nat:398> * <var:g> $ , $ <nat:8> * <var:e> $ , $ <var:Q> * <nat:54> $ , $ <var:A> * <nat:342> $ , plus $ <nat:452> * <var:x> $ is guaranteed to be even in addition . See $ <nat:57> $ is obviously odd . It can be demonstrated that $ <nat:398> <var:g> + <nat:57> + <var:t> <nat:444> + <var:A> <nat:342> + <nat:8> <var:e> + <nat:54> <var:Q> + <var:x> <nat:452> $ must be odd . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:x> <var:g> <var:A> <var:e> <var:Q> <var:t> : nat , Nat . odd ( <nat:452> * <var:x> + <nat:8> * <var:e> + <nat:444> * <var:t> + <nat:342> * <var:A> + <nat:398> * <var:g> + <nat:54> * <var:Q> + <nat:57> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:444> = true ) . { auto . } assert ( <genH> : Nat . even <nat:398> = true ) . { auto . } assert ( <genH> : Nat . even <nat:8> = true ) . { auto . } assert ( <genH> : Nat . even <nat:54> = true ) . { auto . } assert ( <genH> : Nat . even <nat:342> = true ) . { auto . } assert ( <genH> : Nat . even <nat:452> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:444> * <var:t> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:398> * <var:g> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:8> * <var:e> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:54> * <var:Q> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:342> * <var:A> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:452> * <var:x> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:452> * <var:x> + <nat:8> * <var:e> + <nat:444> * <var:t> + <nat:342> * <var:A> + <nat:398> * <var:g> + <nat:54> * <var:Q> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } assert ( <genH> : Nat . odd <nat:57> = true ) . { auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . rewrite <genH> . auto . Qed . 