\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:N> \times <nat:304> + <var:q> \times <nat:232> + <nat:189> + <var:x> \times <nat:450> + <nat:144> \times <var:c> + <var:I> \times <nat:120> + <var:y> \times <nat:362> + <var:X> \times <nat:158> + <nat:74> \times <var:l> $ must be odd . \end{theorem} \begin{proof} See that the totaling between an even natural number and an odd whole number is by itself an odd whole number . We employ the formula $ <nat:120> \cdot <var:I> + <var:x> \cdot <nat:450> + <nat:189> + <var:l> \cdot <nat:74> + <var:y> \cdot <nat:362> + <nat:232> \cdot <var:q> + <var:X> \cdot <nat:158> + <var:c> \cdot <nat:144> + <var:N> \cdot <nat:304> $ is odd from the knowledge the expression $ <nat:362> \cdot <var:y> + <var:I> \cdot <nat:120> + <nat:158> \cdot <var:X> + <nat:232> \cdot <var:q> + <nat:450> \cdot <var:x> + <nat:74> \cdot <var:l> + <nat:304> \cdot <var:N> + <var:c> \cdot <nat:144> $ is guaranteed to be even . The expression $ <var:N> \times <nat:304> + <nat:450> \times <var:x> + <nat:120> \times <var:I> + <var:c> \times <nat:144> + <var:q> \times <nat:232> + <nat:74> \times <var:l> + <nat:362> \times <var:y> + <var:X> \times <nat:158> $ will be even from the knowledge the summing between an even element of $ \mathbb{Z}^+ $ and an even positive integer is instrinsically an even number in $ \mathbb{Z}^+ $ . We show the formula $ <nat:304> \times <var:N> + <var:c> \times <nat:144> + <nat:158> \times <var:X> + <nat:450> \times <var:x> + <var:I> \times <nat:120> + <var:q> \times <nat:232> + <nat:189> + <var:l> \times <nat:74> + <var:y> \times <nat:362> $ must be odd . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:N> <var:q> <var:x> <var:c> <var:I> <var:y> <var:X> <var:l> : nat , Nat . odd ( <nat:304> * <var:N> + <nat:232> * <var:q> + <nat:450> * <var:x> + <nat:144> * <var:c> + <nat:120> * <var:I> + <nat:362> * <var:y> + <nat:158> * <var:X> + <nat:74> * <var:l> + <nat:189> ) = true . Proof . intros . rewrite Nat . odd_add . assert ( <genH> : Nat . even ( <nat:304> * <var:N> + <nat:232> * <var:q> + <nat:450> * <var:x> + <nat:144> * <var:c> + <nat:120> * <var:I> + <nat:362> * <var:y> + <nat:158> * <var:X> + <nat:74> * <var:l> ) = true ) . { repeat rewrite Nat . even_add . repeat rewrite Nat . even_mul . auto . } rewrite <- Nat . negb_even . rewrite <genH> . auto . Qed . 