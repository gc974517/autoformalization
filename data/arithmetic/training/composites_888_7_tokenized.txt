\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Take as given that $ <var:F> $ is a <def:seven-composite> natural number under the condition that given some $ <var:u> $ , $ <var:R> $ , $ <var:J> $ , $ <var:A> $ , $ <var:C> $ , $ <var:W> $ , $ <var:i> \in \mathbb{N} $ we get $ <var:F> = <var:u> \times <var:C> \times <var:J> \times <var:A> \times <var:W> \times <var:i> \times <var:R> $ with some integer $ <var:F> $ plus so that $ <var:R> $ , $ <var:i> $ , $ <var:J> $ , $ <var:A> $ , $ <var:C> $ , $ <var:u> $ and $ <var:W> \geq <nat:2> $ . Therefore $ <var:F> = <nat:190080> $ is a <def:seven-composite> positive integer . \end{theorem} \begin{proof} Notice that $ <nat:190080> = <var:A> \times <var:W> \times <var:R> \times <var:i> \times <var:u> \times <var:J> \times <var:C> = <nat:10> \times <nat:11> \times <nat:3> \times <nat:2> \times <nat:4> \times <nat:9> \times <nat:8> $ . Additionally notice that $ <nat:3> $ , $ <nat:4> $ , $ <nat:11> $ , $ <nat:9> $ , $ <nat:10> $ , $ <nat:8> $ and $ <nat:2> \geq <nat:2> $ . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:seven-composite> ( <var:F> : nat ) := exists <var:u> <var:R> <var:J> <var:A> <var:C> <var:W> <var:i> : nat , ( <var:F> = <var:u> * <var:C> * <var:J> * <var:A> * <var:W> * <var:i> * <var:R> ) /\ ( <var:R> >= <nat:2> ) /\ ( <var:i> >= <nat:2> ) /\ ( <var:J> >= <nat:2> ) /\ ( <var:A> >= <nat:2> ) /\ ( <var:C> >= <nat:2> ) /\ ( <var:u> >= <nat:2> ) /\ ( <var:W> >= <nat:2> ) . Theorem <genP:1> : <def:seven-composite> <nat:190080> . Proof . unfold <def:seven-composite> . exists <nat:4> . exists <nat:3> . exists <nat:9> . exists <nat:10> . exists <nat:8> . exists <nat:11> . exists <nat:2> . assert ( <genH> : <nat:3> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:4> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:11> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:9> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:10> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:8> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:2> >= <nat:2> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 