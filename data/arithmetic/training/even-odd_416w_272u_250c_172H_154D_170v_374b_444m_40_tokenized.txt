\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:416> \times <var:w> + <nat:272> \times <var:u> + <var:H> \times <nat:172> + <var:m> \times <nat:444> + <nat:250> \times <var:c> + <nat:374> \times <var:b> + <nat:40> + <var:D> \times <nat:154> + <var:v> \times <nat:170> $ must be even using every $ <var:D> $ , $ <var:v> $ , $ <var:H> $ , $ <var:c> $ , $ <var:w> $ , $ <var:b> $ , $ <var:m> $ , and $ <var:u> $ . \end{theorem} \begin{proof} Our proposition holds from the knowledge $ <var:w> * <nat:416> + <nat:272> * <var:u> + <nat:250> * <var:c> + <var:H> * <nat:172> + <nat:154> * <var:D> + <nat:170> * <var:v> + <nat:374> * <var:b> + <nat:444> * <var:m> $ is known to be even . See that the totaling between even elements of $ \mathbb{Z}^+ $ successively is guaranteed to be obviously an even whole number . The products $ <nat:170> <var:v> $ , $ <nat:416> <var:w> $ , $ <nat:272> <var:u> $ , $ <nat:374> <var:b> $ , $ <var:m> <nat:444> $ , $ <nat:172> <var:H> $ , plus $ <nat:250> <var:c> $ are known to be even from the knowledge taking the product between an even element of $ \mathbb{Z}^+ $ and a element of $ \mathbb{Z}^+ $ will be an even number . The product $ <nat:154> <var:D> $ is known as an even element of $ \mathbb{Z}^+ $ from the fact the product of an even element of $ \mathbb{N} $ and any element of $ \mathbb{Z}^+ $ will be an even positive integer . and from the knowledge the product of an even element of $ \mathbb{N} $ with an arbitrary whole number is clearly an even natural number . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:D> <var:v> <var:H> <var:c> <var:w> <var:b> <var:m> <var:u> : nat , Nat . even ( <nat:416> * <var:w> + <nat:272> * <var:u> + <nat:172> * <var:H> + <nat:444> * <var:m> + <nat:250> * <var:c> + <nat:374> * <var:b> + <nat:154> * <var:D> + <nat:170> * <var:v> + <nat:40> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:170> * <var:v> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:416> * <var:w> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:272> * <var:u> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:374> * <var:b> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:444> * <var:m> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:172> * <var:H> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:250> * <var:c> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:154> * <var:D> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:416> * <var:w> + <nat:272> * <var:u> + <nat:172> * <var:H> + <nat:444> * <var:m> + <nat:250> * <var:c> + <nat:374> * <var:b> + <nat:154> * <var:D> + <nat:170> * <var:v> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . even_add . rewrite <genH> . auto . Qed . 