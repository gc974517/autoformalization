\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \newtheorem{definition}{Definition} \begin{document} \begin{definition} There exist $ <var:E> $ , $ <var:a> $ , $ <var:P> $ , $ <var:f> $ , $ <var:S> \in \mathbb{N} $ larger than or equal to <nat:2> . We say that some positive integer $ <var:B> $ will be named a <def:five-composite> natural number when $ <var:f> \cdot <var:E> \cdot <var:P> \cdot <var:S> \cdot <var:a> = <var:B> $ . \end{definition} \begin{theorem} The integer <nat:28512> is <def:five-composite> . \end{theorem} \begin{proof} Remember that a <def:five-composite> integer is the multiplication between natural numbers $ <var:S> $ , $ <var:E> $ , $ <var:a> $ , $ <var:f> $ and $ <var:P> $ where $ <var:E> $ , $ <var:f> $ , $ <var:a> $ , $ <var:S> $ , and $ <var:P> \geq <nat:2> $ . Take $ <var:S> = <nat:9> $ , $ <var:f> = <nat:8> $ , $ <var:P> = <nat:11> $ , $ <var:a> = <nat:3> $ and $ <var:E> = <nat:12> $ . Observe that $ <nat:28512> = <var:f> \times <var:a> \times <var:S> \times <var:E> \times <var:P> $ . Further note $ <nat:12> $ , $ <nat:8> $ , $ <nat:11> $ , $ <nat:3> $ , $ <nat:9> \geq <nat:2> $ . This suggests the thesis is true . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:five-composite> ( <var:B> : nat ) := exists <var:E> <var:a> <var:P> <var:f> <var:S> : nat , ( <var:E> >= <nat:2> ) /\ ( <var:a> >= <nat:2> ) /\ ( <var:P> >= <nat:2> ) /\ ( <var:f> >= <nat:2> ) /\ ( <var:S> >= <nat:2> ) /\ ( <var:f> * <var:E> * <var:P> * <var:S> * <var:a> = <var:B> ) . Theorem <genP:1> : <def:five-composite> <nat:28512> . Proof . unfold <def:five-composite> . exists <nat:12> . exists <nat:3> . exists <nat:11> . exists <nat:8> . exists <nat:9> . assert ( <genH> : <nat:12> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:8> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:11> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:3> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:9> >= <nat:2> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 