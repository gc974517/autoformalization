\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:Y> \cdot <nat:254> + <var:H> \cdot <nat:324> + <var:O> \cdot <nat:16> + <nat:242> + <var:z> \cdot <nat:2> + <var:Z> \cdot <nat:172> + <var:t> \cdot <nat:378> + <var:v> \cdot <nat:130> + <var:o> \cdot <nat:226> $ is even taking positive numbers $ <var:H> $ , $ <var:t> $ , $ <var:z> $ , $ <var:v> $ , $ <var:Z> $ , $ <var:o> $ , $ <var:Y> $ , and $ <var:O> $ . \end{theorem} \begin{proof} The pairs $ <var:O> <nat:16> $ , $ <nat:226> <var:o> $ , $ <var:z> <nat:2> $ , $ <nat:130> <var:v> $ , $ <var:Y> <nat:254> $ , $ <nat:378> <var:t> $ , in addition to $ <nat:172> <var:Z> $ are obviously even . This claim holds by reason that the product between an even number in $ \mathbb{Z}^+ $ and a whole number is guaranteed to be by its very nature an even whole number . On top of this , $ <var:H> <nat:324> $ is known to be an even natural . This must be true from the knowledge the multiplication of an even integer and a element of $ \mathbb{Z}^+ $ is guaranteed to be by definition an even positive integer . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:H> <var:t> <var:z> <var:v> <var:Z> <var:o> <var:Y> <var:O> : nat , Nat . even ( <nat:254> * <var:Y> + <nat:324> * <var:H> + <nat:16> * <var:O> + <nat:2> * <var:z> + <nat:172> * <var:Z> + <nat:378> * <var:t> + <nat:130> * <var:v> + <nat:226> * <var:o> + <nat:242> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:16> * <var:O> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:226> * <var:o> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:2> * <var:z> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:130> * <var:v> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:254> * <var:Y> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:378> * <var:t> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:172> * <var:Z> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:324> * <var:H> ) = true ) . { rewrite Nat . even_mul . auto . } repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 