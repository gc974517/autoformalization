\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:232> \times <var:E> + <var:Z> \times <nat:330> + <nat:22> \times <var:V> + <nat:62> \times <var:y> + <nat:257> + <nat:210> \times <var:O> + <nat:34> \times <var:U> $ will be odd for any natural numbers $ <var:O> $ , $ <var:Z> $ , $ <var:V> $ , $ <var:U> $ , $ <var:y> $ , and $ <var:E> $ . \end{theorem} \begin{proof} Notice that the products $ <var:V> \cdot <nat:22> $ , $ <nat:34> \cdot <var:U> $ , as well as $ <nat:232> \cdot <var:E> $ are obviously even . The product $ <var:Z> \cdot <nat:330> $ is obviously an even element of $ \mathbb{Z}^+ $ . The pair $ <var:O> \cdot <nat:210> $ is known as an even element of $ \mathbb{Z}^+ $ . This claim holds because the product of an even natural with any integer must be an even whole number . What's more , the product $ <nat:62> \cdot <var:y> $ is guaranteed to be an even element of $ \mathbb{N} $ . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:O> <var:Z> <var:V> <var:U> <var:y> <var:E> : nat , Nat . odd ( <nat:232> * <var:E> + <nat:330> * <var:Z> + <nat:22> * <var:V> + <nat:62> * <var:y> + <nat:210> * <var:O> + <nat:34> * <var:U> + <nat:257> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:22> * <var:V> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:34> * <var:U> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:232> * <var:E> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:330> * <var:Z> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:210> * <var:O> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:62> * <var:y> ) = true ) . { rewrite Nat . even_mul . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 