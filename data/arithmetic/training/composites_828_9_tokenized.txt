\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} <nat:13305600> is the product between $ <var:c> $ , $ <var:T> $ , $ <var:v> $ , $ <var:l> $ , $ <var:f> $ , $ <var:U> $ , $ <var:i> $ , $ <var:J> $ , and $ <var:F> \in \mathbb{Z}^+ $ where $ <var:U> $ , $ <var:i> $ , $ <var:l> $ , $ <var:v> $ , $ <var:f> $ , $ <var:c> $ , $ <var:F> $ , $ <var:T> $ and $ <var:J> > <nat:1> $ . \end{theorem} \begin{proof} Allow $ <var:v> = <nat:11> $ , $ <var:f> = <nat:8> $ , $ <var:l> = <nat:7> $ , $ <var:F> = <nat:3> $ , $ <var:T> = <nat:12> $ , $ <var:U> = <nat:2> $ , $ <var:i> = <nat:6> $ , $ <var:c> = <nat:5> $ , $ <var:J> = <nat:10> $ . Note $ <var:J> = <nat:10> $ , $ <var:v> = <nat:11> $ , $ <var:c> = <nat:5> $ , $ <var:T> = <nat:12> $ , $ <var:l> = <nat:7> $ , $ <var:U> = <nat:2> $ , $ <var:i> = <nat:6> $ , $ <var:F> = <nat:3> $ and $ <var:f> = <nat:8> > <nat:1> $ . \end{proof} \end{document} 
~
Require Import Lia . Theorem <genP:1> : exists <var:c> <var:T> <var:v> <var:l> <var:f> <var:U> <var:i> <var:J> <var:F> : nat , ( <nat:13305600> = <var:c> * <var:T> * <var:v> * <var:l> * <var:f> * <var:U> * <var:i> * <var:J> * <var:F> ) /\ ( <var:U> > <nat:1> ) /\ ( <var:i> > <nat:1> ) /\ ( <var:l> > <nat:1> ) /\ ( <var:v> > <nat:1> ) /\ ( <var:f> > <nat:1> ) /\ ( <var:c> > <nat:1> ) /\ ( <var:F> > <nat:1> ) /\ ( <var:T> > <nat:1> ) /\ ( <var:J> > <nat:1> ) . Proof . exists <nat:5> . exists <nat:12> . exists <nat:11> . exists <nat:7> . exists <nat:8> . exists <nat:2> . exists <nat:6> . exists <nat:10> . exists <nat:3> . assert ( <genH> : <nat:10> > <nat:1> ) . { lia . } assert ( <genH> : <nat:11> > <nat:1> ) . { lia . } assert ( <genH> : <nat:5> > <nat:1> ) . { lia . } assert ( <genH> : <nat:12> > <nat:1> ) . { lia . } assert ( <genH> : <nat:7> > <nat:1> ) . { lia . } assert ( <genH> : <nat:2> > <nat:1> ) . { lia . } assert ( <genH> : <nat:6> > <nat:1> ) . { lia . } assert ( <genH> : <nat:3> > <nat:1> ) . { lia . } assert ( <genH> : <nat:8> > <nat:1> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 