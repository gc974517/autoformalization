\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Take $ <var:b> $ , $ <var:u> $ , $ <var:M> $ , $ <var:Z> $ , $ <var:K> $ , $ <var:S> $ and $ <var:V> $ are positive integers such that $ <var:S> $ , $ <var:V> $ , $ <var:K> $ , $ <var:b> $ , $ <var:M> $ , $ <var:u> $ and $ <var:Z> \geq <nat:2> $ plus satisfying the condition that the integer <nat:126720> is the product of integers $ <var:b> $ , $ <var:u> $ , $ <var:M> $ , $ <var:Z> $ , $ <var:K> $ , $ <var:S> $ , $ <var:V> $ . \end{theorem} \begin{proof} Assume $ <var:V> = <nat:8> $ , $ <var:M> = <nat:2> $ , $ <var:u> = <nat:12> $ , $ <var:S> = <nat:4> $ , $ <var:K> = <nat:11> $ , $ <var:b> = <nat:3> $ , $ <var:Z> = <nat:5> $ . We present $ <var:M> $ , $ <var:Z> $ , $ <var:V> $ , $ <var:S> $ , $ <var:K> $ , $ <var:b> $ , $ <var:u> \geq <nat:2> $ and $ <nat:126720> = <var:Z> \times <var:u> \times <var:b> \times <var:M> \times <var:K> \times <var:S> \times <var:V> $ . Note $ <nat:4> $ , $ <nat:5> $ , $ <nat:11> $ , $ <nat:12> $ , $ <nat:8> $ , $ <nat:2> $ , $ <nat:3> \geq <nat:2> $ . This implies our formula is valid . \end{proof} \end{document} 
~
Require Import Lia . Theorem <genP:1> : exists <var:b> <var:u> <var:M> <var:Z> <var:K> <var:S> <var:V> : nat , ( <var:S> >= <nat:2> ) /\ ( <var:V> >= <nat:2> ) /\ ( <var:K> >= <nat:2> ) /\ ( <var:b> >= <nat:2> ) /\ ( <var:M> >= <nat:2> ) /\ ( <var:u> >= <nat:2> ) /\ ( <var:Z> >= <nat:2> ) /\ ( <nat:126720> = <var:b> * <var:u> * <var:M> * <var:Z> * <var:K> * <var:S> * <var:V> ) . Proof . exists <nat:3> . exists <nat:12> . exists <nat:2> . exists <nat:5> . exists <nat:11> . exists <nat:4> . exists <nat:8> . assert ( <genH> : <nat:4> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:5> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:11> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:12> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:8> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:2> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:3> >= <nat:2> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 