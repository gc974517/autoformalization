\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} For unknowns $ <var:o> $ , $ <var:J> $ , $ <var:I> $ , $ <var:N> $ , $ <var:u> $ , and $ <var:V> $ the summation $ <nat:76> \cdot <var:u> + <nat:428> \cdot <var:J> + <nat:160> \cdot <var:V> + <nat:318> \cdot <var:N> + <nat:183> + <var:o> \cdot <nat:32> + <var:I> \cdot <nat:194> $ must be odd . \end{theorem} \begin{proof} Remember that the sum $ <var:J> <nat:428> + <nat:318> <var:N> + <var:o> <nat:32> + <var:u> <nat:76> + <var:I> <nat:194> + <var:V> <nat:160> $ is trivially even , from the fact the product between even numbers must be even . Notice the integers $ <nat:76> $ and also $ <nat:194> $ are even Adding on , we know the numbers $ <nat:32> $ and likewise $ <nat:318> $ will be even numbers in $ \mathbb{Z}^+ $ The whole number $ <nat:428> $ is trivially even The whole number $ <nat:160> $ is known as even Our main result is proven because the totaling of an even positive integer with an even element of $ \mathbb{Z}^+ $ is an even natural . Recall that $ <nat:183> $ is trivially odd . We check our main result is true . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:o> <var:J> <var:I> <var:N> <var:u> <var:V> : nat , Nat . odd ( <nat:76> * <var:u> + <nat:428> * <var:J> + <nat:160> * <var:V> + <nat:318> * <var:N> + <nat:32> * <var:o> + <nat:194> * <var:I> + <nat:183> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:76> = true ) . { auto . } assert ( <genH> : Nat . even <nat:194> = true ) . { auto . } assert ( <genH> : Nat . even <nat:32> = true ) . { auto . } assert ( <genH> : Nat . even <nat:318> = true ) . { auto . } assert ( <genH> : Nat . even <nat:428> = true ) . { auto . } assert ( <genH> : Nat . even <nat:160> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:76> * <var:u> + <nat:428> * <var:J> + <nat:160> * <var:V> + <nat:318> * <var:N> + <nat:32> * <var:o> + <nat:194> * <var:I> ) = true ) . { repeat rewrite Nat . even_add . repeat rewrite Nat . even_mul . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } assert ( <genH> : Nat . odd <nat:183> = true ) . { auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . rewrite <genH> . auto . Qed . 