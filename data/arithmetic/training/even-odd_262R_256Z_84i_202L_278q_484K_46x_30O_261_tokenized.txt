\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Taking some natural numbers $ <var:L> $ , $ <var:Z> $ , $ <var:R> $ , $ <var:K> $ , $ <var:i> $ , $ <var:O> $ , $ <var:q> $ , and $ <var:x> $ the summation $ <var:R> \times <nat:262> + <nat:261> + <nat:256> \times <var:Z> + <nat:84> \times <var:i> + <nat:202> \times <var:L> + <var:q> \times <nat:278> + <var:K> \times <nat:484> + <var:x> \times <nat:46> + <var:O> \times <nat:30> $ will be odd . \end{theorem} \begin{proof} Observe that the pairs $ <var:R> * <nat:262> $ , $ <nat:46> * <var:x> $ , $ <nat:202> * <var:L> $ , as well as $ <var:O> * <nat:30> $ are obviously even whole numbers . Furthermore , remember that the pairs $ <var:q> * <nat:278> $ and also $ <var:i> * <nat:84> $ will be even . Likewise , we know that the pair $ <nat:484> * <var:K> $ is trivially even because multiplying of an even whole number with any number must be fundamentally an even integer . Recall the product $ <nat:256> * <var:Z> $ is clearly even from the knowledge taking the product of an even element of $ \mathbb{Z}^+ $ and an arbitrary number in $ \mathbb{N} $ is an even number in $ \mathbb{Z}^+ $ . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:L> <var:Z> <var:R> <var:K> <var:i> <var:O> <var:q> <var:x> : nat , Nat . odd ( <nat:262> * <var:R> + <nat:256> * <var:Z> + <nat:84> * <var:i> + <nat:202> * <var:L> + <nat:278> * <var:q> + <nat:484> * <var:K> + <nat:46> * <var:x> + <nat:30> * <var:O> + <nat:261> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:262> * <var:R> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:46> * <var:x> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:202> * <var:L> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:30> * <var:O> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:278> * <var:q> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:84> * <var:i> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:484> * <var:K> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:256> * <var:Z> ) = true ) . { rewrite Nat . even_mul . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 