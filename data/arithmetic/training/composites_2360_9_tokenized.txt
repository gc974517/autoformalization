\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \newtheorem{definition}{Definition} \begin{document} \begin{definition} Assuming that we have where $ <var:b> $ , $ <var:s> $ , $ <var:D> $ , $ <var:u> $ , $ <var:P> $ , $ <var:G> $ , $ <var:I> $ , $ <var:d> $ and $ <var:L> > <nat:1> $ such that given $ <var:e> \in \mathbb{Z}^+ $ , $ <var:u> \times <var:I> \times <var:P> \times <var:G> \times <var:d> \times <var:D> \times <var:s> \times <var:L> \times <var:b> = <var:e> $ , then claim that $ <var:e> $ is a <def:nine-composite> natural number for some $ <var:d> $ , $ <var:G> $ , $ <var:u> $ , $ <var:s> $ , $ <var:b> $ , $ <var:I> $ , $ <var:L> $ , $ <var:D> $ , $ <var:P> \in \mathbb{Z}^+ $ . \end{definition} \begin{theorem} $ <nat:17107200> = <var:e> $ is a <def:nine-composite> integer . \end{theorem} \begin{proof} Note that $ <nat:17107200> = <var:d> * <var:G> * <var:D> * <var:s> * <var:I> * <var:b> * <var:L> * <var:u> * <var:P> $ shows $ <var:b> = <nat:11> $ , $ <var:d> = <nat:9> $ , $ <var:u> = <nat:8> $ , $ <var:G> = <nat:10> $ , $ <var:D> = <nat:5> $ , $ <var:I> = <nat:12> $ , $ <var:P> = <nat:2> $ , $ <var:L> = <nat:3> $ , and $ <var:s> = <nat:6> $ . What's more note $ <nat:2> $ , $ <nat:10> $ , $ <nat:8> $ , $ <nat:5> $ , $ <nat:3> $ , $ <nat:12> $ , $ <nat:9> $ , $ <nat:6> $ , $ <nat:11> > <nat:1> $ . This implies <nat:17107200> is a <def:nine-composite> positive integer . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:nine-composite> ( <var:e> : nat ) := exists <var:d> <var:G> <var:u> <var:s> <var:b> <var:I> <var:L> <var:D> <var:P> : nat , ( <var:b> > <nat:1> ) /\ ( <var:s> > <nat:1> ) /\ ( <var:D> > <nat:1> ) /\ ( <var:u> > <nat:1> ) /\ ( <var:P> > <nat:1> ) /\ ( <var:G> > <nat:1> ) /\ ( <var:I> > <nat:1> ) /\ ( <var:d> > <nat:1> ) /\ ( <var:L> > <nat:1> ) /\ ( <var:u> * <var:I> * <var:P> * <var:G> * <var:d> * <var:D> * <var:s> * <var:L> * <var:b> = <var:e> ) . Theorem <genP:1> : <def:nine-composite> <nat:17107200> . Proof . unfold <def:nine-composite> . exists <nat:9> . exists <nat:10> . exists <nat:8> . exists <nat:6> . exists <nat:11> . exists <nat:12> . exists <nat:3> . exists <nat:5> . exists <nat:2> . assert ( <genH> : <nat:2> > <nat:1> ) . { lia . } assert ( <genH> : <nat:10> > <nat:1> ) . { lia . } assert ( <genH> : <nat:8> > <nat:1> ) . { lia . } assert ( <genH> : <nat:5> > <nat:1> ) . { lia . } assert ( <genH> : <nat:3> > <nat:1> ) . { lia . } assert ( <genH> : <nat:12> > <nat:1> ) . { lia . } assert ( <genH> : <nat:9> > <nat:1> ) . { lia . } assert ( <genH> : <nat:6> > <nat:1> ) . { lia . } assert ( <genH> : <nat:11> > <nat:1> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 