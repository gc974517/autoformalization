\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:34> \times <var:Y> + <nat:82> \times <var:H> + <var:k> \times <nat:466> + <nat:271> + <nat:130> \times <var:F> + <nat:310> \times <var:D> + <nat:444> \times <var:P> + <var:E> \times <nat:430> + <nat:410> \times <var:r> $ must be odd . \end{theorem} \begin{proof} The pairs $ <nat:410> \cdot <var:r> $ , $ <nat:310> \cdot <var:D> $ , $ <var:Y> \cdot <nat:34> $ , $ <nat:444> \cdot <var:P> $ , $ <nat:82> \cdot <var:H> $ , plus $ <var:F> \cdot <nat:130> $ will be even elements of $ \mathbb{N} $ . Adding on , recall that the term $ <nat:430> \cdot <var:E> $ is guaranteed to be an even natural . The product $ <var:k> \cdot <nat:466> $ is clearly an even natural . Notice that the summation between even natural numbers with an odd natural must be odd . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:Y> <var:H> <var:k> <var:F> <var:D> <var:P> <var:E> <var:r> : nat , Nat . odd ( <nat:34> * <var:Y> + <nat:82> * <var:H> + <nat:466> * <var:k> + <nat:130> * <var:F> + <nat:310> * <var:D> + <nat:444> * <var:P> + <nat:430> * <var:E> + <nat:410> * <var:r> + <nat:271> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:410> * <var:r> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:310> * <var:D> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:34> * <var:Y> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:444> * <var:P> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:82> * <var:H> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:130> * <var:F> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:430> * <var:E> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:466> * <var:k> ) = true ) . { rewrite Nat . even_mul . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 