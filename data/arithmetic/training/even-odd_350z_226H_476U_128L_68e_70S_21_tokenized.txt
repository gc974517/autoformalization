\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:128> \cdot <var:L> + <nat:226> \cdot <var:H> + <nat:70> \cdot <var:S> + <nat:350> \cdot <var:z> + <nat:21> + <var:U> \cdot <nat:476> + <var:e> \cdot <nat:68> $ must be odd . \end{theorem} \begin{proof} We use the assumption the understanding that the formula $ <nat:128> \times <var:L> + <nat:21> + <nat:70> \times <var:S> + <var:e> \times <nat:68> + <nat:476> \times <var:U> + <nat:226> \times <var:H> + <nat:350> \times <var:z> $ is trivially odd because $ <nat:350> * <var:z> + <nat:226> * <var:H> + <nat:476> * <var:U> + <var:L> * <nat:128> + <nat:68> * <var:e> + <var:S> * <nat:70> $ is clearly even . The natural number $ <nat:68> $ is clearly an even number in $ \mathbb{N} $ See that the natural numbers $ <nat:226> $ and likewise $ <nat:128> $ are trivially even Take note that the leading terms $ <nat:350> $ additionally $ <nat:70> $ are known as even numbers in $ \mathbb{N} $ In addition to this , remember that the natural number $ <nat:476> $ is obviously even Observe that $ <nat:21> $ is clearly odd . Take note the adding of an even natural number and an odd integer is guaranteed to be odd . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:L> <var:H> <var:S> <var:z> <var:U> <var:e> : nat , Nat . odd ( <nat:128> * <var:L> + <nat:226> * <var:H> + <nat:70> * <var:S> + <nat:350> * <var:z> + <nat:476> * <var:U> + <nat:68> * <var:e> + <nat:21> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:68> = true ) . { auto . } assert ( <genH> : Nat . even <nat:226> = true ) . { auto . } assert ( <genH> : Nat . even <nat:128> = true ) . { auto . } assert ( <genH> : Nat . even <nat:350> = true ) . { auto . } assert ( <genH> : Nat . even <nat:70> = true ) . { auto . } assert ( <genH> : Nat . even <nat:476> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:128> * <var:L> + <nat:226> * <var:H> + <nat:70> * <var:S> + <nat:350> * <var:z> + <nat:476> * <var:U> + <nat:68> * <var:e> ) = true ) . { repeat rewrite Nat . even_add . repeat rewrite Nat . even_mul . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } assert ( <genH> : Nat . odd <nat:21> = true ) . { auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . rewrite <genH> . auto . Qed . 