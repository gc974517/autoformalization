\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} We assume that $ <var:B> $ is a <def:seven-composite> number when $ \exists <var:b> $ , $ <var:P> $ , $ <var:d> $ , $ <var:o> $ , $ <var:X> $ , $ <var:G> $ , $ <var:N> \in \mathbb{Z}^+ $ such that such that $ <var:P> $ , $ <var:o> $ , $ <var:d> $ , $ <var:N> $ , $ <var:X> $ , $ <var:b> $ , and $ <var:G> > <nat:1> $ and with some $ <var:B> $ , $ <var:B> = <var:G> \cdot <var:o> \cdot <var:N> \cdot <var:d> \cdot <var:X> \cdot <var:P> \cdot <var:b> $ . Thus $ <var:B> = <nat:126720> $ is a <def:seven-composite> natural number . \end{theorem} \begin{proof} Note that $ <var:G> \times <var:X> \times <var:P> \times <var:d> \times <var:b> \times <var:N> \times <var:o> = <nat:126720> = <nat:12> \times <nat:4> \times <nat:3> \times <nat:8> \times <nat:2> \times <nat:11> \times <nat:5> $ . Moreover observe that $ <nat:11> $ , $ <nat:4> $ , $ <nat:12> $ , $ <nat:2> $ , $ <nat:8> $ , $ <nat:3> $ and $ <nat:5> > <nat:1> $ . This implies <nat:126720> is a <def:seven-composite> whole number . Therefore , $ <nat:126720> = <var:b> \cdot <var:o> \cdot <var:G> \cdot <var:X> \cdot <var:P> \cdot <var:d> \cdot <var:N> $ has been validated . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:seven-composite> ( <var:B> : nat ) := exists <var:b> <var:P> <var:d> <var:o> <var:X> <var:G> <var:N> : nat , ( <var:P> > <nat:1> ) /\ ( <var:o> > <nat:1> ) /\ ( <var:d> > <nat:1> ) /\ ( <var:N> > <nat:1> ) /\ ( <var:X> > <nat:1> ) /\ ( <var:b> > <nat:1> ) /\ ( <var:G> > <nat:1> ) /\ ( <var:B> = <var:G> * <var:o> * <var:N> * <var:d> * <var:X> * <var:P> * <var:b> ) . Theorem <genP:1> : <def:seven-composite> <nat:126720> . Proof . unfold <def:seven-composite> . exists <nat:2> . exists <nat:3> . exists <nat:8> . exists <nat:5> . exists <nat:4> . exists <nat:12> . exists <nat:11> . assert ( <genH> : <nat:11> > <nat:1> ) . { lia . } assert ( <genH> : <nat:4> > <nat:1> ) . { lia . } assert ( <genH> : <nat:12> > <nat:1> ) . { lia . } assert ( <genH> : <nat:2> > <nat:1> ) . { lia . } assert ( <genH> : <nat:8> > <nat:1> ) . { lia . } assert ( <genH> : <nat:3> > <nat:1> ) . { lia . } assert ( <genH> : <nat:5> > <nat:1> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 