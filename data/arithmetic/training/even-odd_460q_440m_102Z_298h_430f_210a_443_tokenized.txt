\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} For some whole numbers $ <var:f> $ , $ <var:h> $ , $ <var:m> $ , $ <var:q> $ , $ <var:Z> $ , and $ <var:a> $ the formula $ <var:a> \cdot <nat:210> + <var:f> \cdot <nat:430> + <nat:102> \cdot <var:Z> + <var:m> \cdot <nat:440> + <nat:443> + <var:q> \cdot <nat:460> + <nat:298> \cdot <var:h> $ is guaranteed to be odd . \end{theorem} \begin{proof} The natural numbers $ <nat:298> $ , $ <nat:430> $ , and $ <nat:460> $ are known to be even numbers in $ \mathbb{Z}^+ $ . Then , the terms $ <nat:298> \times <var:h> $ , $ <nat:430> \times <var:f> $ , and $ <nat:460> \times <var:q> $ is even at the same time . We know the pair $ <var:m> \times <nat:440> $ is guaranteed to be an even natural as a consequence that the integer $ <nat:440> $ is clearly even . The natural number $ <nat:210> $ is known to be an even natural number . For this reason , the term $ <nat:210> \times <var:a> $ must be even in addition . Additionally , the whole number $ <nat:102> $ is trivially even . Therefore , the product $ <var:Z> \times <nat:102> $ is even too . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:f> <var:h> <var:m> <var:q> <var:Z> <var:a> : nat , Nat . odd ( <nat:210> * <var:a> + <nat:430> * <var:f> + <nat:102> * <var:Z> + <nat:440> * <var:m> + <nat:460> * <var:q> + <nat:298> * <var:h> + <nat:443> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:298> = true ) . { auto . } assert ( <genH> : Nat . even <nat:430> = true ) . { auto . } assert ( <genH> : Nat . even <nat:460> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:298> * <var:h> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:430> * <var:f> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:460> * <var:q> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:440> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:440> * <var:m> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:210> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:210> * <var:a> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:102> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:102> * <var:Z> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 