\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:y> \cdot <nat:310> + <nat:148> \cdot <var:M> + <var:p> \cdot <nat:198> + <nat:55> + <nat:280> \cdot <var:P> $ is odd . \end{theorem} \begin{proof} Remember the formula $ <nat:55> + <var:P> \times <nat:280> + <var:M> \times <nat:148> + <var:p> \times <nat:198> + <nat:310> \times <var:y> $ is known to be odd because the summation $ <nat:148> <var:M> + <nat:198> <var:p> + <var:y> <nat:310> + <nat:280> <var:P> $ is even . Recall the product $ <nat:198> * <var:p> $ is obviously an even integer . This fact is true as a consequence that the multiplication between an even positive integer and an arbitrary number in $ \mathbb{Z}^+ $ will be by itself an even whole number . The products $ <var:y> * <nat:310> $ and $ <nat:280> * <var:P> $ will be even . The term $ <nat:148> * <var:M> $ is trivially an even positive integer . This claim is proven since multiplying of an even element of $ \mathbb{N} $ with any integer is even . Notice $ <nat:55> $ is guaranteed to be odd . We prove the main result holds . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:y> <var:M> <var:p> <var:P> : nat , Nat . odd ( <nat:310> * <var:y> + <nat:148> * <var:M> + <nat:198> * <var:p> + <nat:280> * <var:P> + <nat:55> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:198> * <var:p> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:310> * <var:y> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:280> * <var:P> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:148> * <var:M> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:310> * <var:y> + <nat:148> * <var:M> + <nat:198> * <var:p> + <nat:280> * <var:P> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } assert ( <genH> : Nat . odd <nat:55> = true ) . { auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . rewrite <genH> . auto . Qed . 