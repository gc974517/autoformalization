\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:352> * <var:c> + <nat:378> * <var:a> + <var:e> * <nat:162> + <nat:185> + <var:D> * <nat:68> $ is odd taking all terms $ <var:D> $ , $ <var:a> $ , $ <var:c> $ , and $ <var:e> $ . \end{theorem} \begin{proof} We justify the formula $ <nat:185> + <var:D> * <nat:68> + <nat:162> * <var:e> + <nat:378> * <var:a> + <nat:352> * <var:c> $ is odd . The sum $ <nat:378> \times <var:a> + <var:e> \times <nat:162> + <nat:352> \times <var:c> + <nat:185> + <var:D> \times <nat:68> $ is odd by reason that the formula $ <var:c> <nat:352> + <nat:378> <var:a> + <nat:68> <var:D> + <nat:162> <var:e> $ is even . Observe that the pairs $ <var:c> * <nat:352> $ , $ <var:e> * <nat:162> $ , and moreover $ <var:D> * <nat:68> $ are even because taking the product of an even positive integer and a element of $ \mathbb{Z}^+ $ is guaranteed to be an even positive integer . Remember that the pair $ <var:a> * <nat:378> $ is known to be an even number since the product between an even element of $ \mathbb{Z}^+ $ with any number in $ \mathbb{N} $ is even . From the fact multiplying between an even number and some number in $ \mathbb{N} $ must be even the expression $ <var:a> * <nat:378> + <nat:162> * <var:e> + <var:c> * <nat:352> + <var:D> * <nat:68> $ is even . The adding between an even number and an odd number in $ \mathbb{N} $ is odd . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:D> <var:a> <var:c> <var:e> : nat , Nat . odd ( <nat:352> * <var:c> + <nat:378> * <var:a> + <nat:162> * <var:e> + <nat:68> * <var:D> + <nat:185> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:352> * <var:c> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:162> * <var:e> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:68> * <var:D> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:378> * <var:a> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:352> * <var:c> + <nat:378> * <var:a> + <nat:162> * <var:e> + <nat:68> * <var:D> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . auto . Qed . 