\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:288> * <var:x> + <var:n> * <nat:336> + <nat:10> * <var:L> + <nat:368> * <var:v> + <var:D> * <nat:192> + <var:h> * <nat:410> + <nat:282> + <var:s> * <nat:260> + <var:e> * <nat:34> $ is even assuming all $ <var:v> $ , $ <var:h> $ , $ <var:e> $ , $ <var:s> $ , $ <var:x> $ , $ <var:L> $ , $ <var:n> $ , and $ <var:D> \in \mathbb{N} $ . \end{theorem} \begin{proof} We apply the assumption the knowledge that the expression $ <var:v> <nat:368> + <var:e> <nat:34> + <nat:282> + <nat:260> <var:s> + <nat:336> <var:n> + <nat:410> <var:h> + <var:D> <nat:192> + <nat:10> <var:L> + <nat:288> <var:x> $ is guaranteed to be even from the knowledge $ <var:e> \cdot <nat:34> + <nat:410> \cdot <var:h> + <var:D> \cdot <nat:192> + <nat:10> \cdot <var:L> + <nat:260> \cdot <var:s> + <var:x> \cdot <nat:288> + <var:n> \cdot <nat:336> + <var:v> \cdot <nat:368> $ is guaranteed to be even . In addition , recall that the pairs $ <nat:34> * <var:e> $ , $ <nat:410> * <var:h> $ , $ <nat:192> * <var:D> $ , $ <var:L> * <nat:10> $ , $ <var:s> * <nat:260> $ , $ <var:x> * <nat:288> $ , $ <var:n> * <nat:336> $ , $ <nat:368> * <var:v> $ , must be even numbers in $ \mathbb{Z}^+ $ . This must be true as a consequence that the multiplication of an even number with an arbitrary element of $ \mathbb{N} $ must be even and the leading terms $ <nat:34> $ , $ <nat:410> $ , $ <nat:192> $ , $ <nat:10> $ , $ <nat:260> $ , $ <nat:288> $ , $ <nat:336> $ , $ <nat:368> $ , will be even . Because multiplying of even integers with any integer is an even number in $ \mathbb{N} $ our lemma must be true . Since the adding of even numbers successively is guaranteed to be by its very nature an even positive integer , as a result the summation $ <var:n> \times <nat:336> + <var:s> \times <nat:260> + <nat:282> + <nat:368> \times <var:v> + <var:e> \times <nat:34> + <nat:410> \times <var:h> + <nat:10> \times <var:L> + <var:x> \times <nat:288> + <nat:192> \times <var:D> $ is guaranteed to be even . Remember that $ <nat:282> $ is clearly even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:v> <var:h> <var:e> <var:s> <var:x> <var:L> <var:n> <var:D> : nat , Nat . even ( <nat:288> * <var:x> + <nat:336> * <var:n> + <nat:10> * <var:L> + <nat:368> * <var:v> + <nat:192> * <var:D> + <nat:410> * <var:h> + <nat:260> * <var:s> + <nat:34> * <var:e> + <nat:282> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:34> = true ) . { auto . } assert ( <genH> : Nat . even <nat:410> = true ) . { auto . } assert ( <genH> : Nat . even <nat:192> = true ) . { auto . } assert ( <genH> : Nat . even <nat:10> = true ) . { auto . } assert ( <genH> : Nat . even <nat:260> = true ) . { auto . } assert ( <genH> : Nat . even <nat:288> = true ) . { auto . } assert ( <genH> : Nat . even <nat:336> = true ) . { auto . } assert ( <genH> : Nat . even <nat:368> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:34> * <var:e> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:410> * <var:h> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:192> * <var:D> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:10> * <var:L> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:260> * <var:s> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:288> * <var:x> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:336> * <var:n> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:368> * <var:v> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:288> * <var:x> + <nat:336> * <var:n> + <nat:10> * <var:L> + <nat:368> * <var:v> + <nat:192> * <var:D> + <nat:410> * <var:h> + <nat:260> * <var:s> + <nat:34> * <var:e> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . even_add . assert ( <genH> : Nat . even <nat:282> = true ) . { auto . } rewrite <genH> . rewrite <genH> . auto . Qed . 