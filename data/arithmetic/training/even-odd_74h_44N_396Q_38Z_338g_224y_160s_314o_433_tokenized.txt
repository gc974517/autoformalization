\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:433> + <nat:74> <var:h> + <nat:44> <var:N> + <var:Q> <nat:396> + <nat:38> <var:Z> + <var:g> <nat:338> + <var:y> <nat:224> + <var:s> <nat:160> + <var:o> <nat:314> $ will be odd . \end{theorem} \begin{proof} The addition between an even element of $ \mathbb{Z}^+ $ and an odd positive integer is an odd natural number . The pairs $ <var:g> <nat:338> $ , $ <nat:74> <var:h> $ , $ <nat:44> <var:N> $ , additionally $ <nat:38> <var:Z> $ are known to be even from the knowledge taking the product of an even number in $ \mathbb{Z}^+ $ with an arbitrary natural is guaranteed to be an even number . We know that the terms $ <var:Q> <nat:396> $ and $ <nat:224> <var:y> $ are trivially even by reason that taking the product of an even integer and any natural is guaranteed to be an even integer . Additionally , $ <nat:314> <var:o> $ is obviously an even natural since taking the product of an even whole number and some integer must be even . What's more , the product $ <nat:160> <var:s> $ is guaranteed to be an even whole number . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:h> <var:N> <var:Q> <var:Z> <var:g> <var:y> <var:s> <var:o> : nat , Nat . odd ( <nat:74> * <var:h> + <nat:44> * <var:N> + <nat:396> * <var:Q> + <nat:38> * <var:Z> + <nat:338> * <var:g> + <nat:224> * <var:y> + <nat:160> * <var:s> + <nat:314> * <var:o> + <nat:433> ) = true . Proof . intros . rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . assert ( <genH> : Nat . even ( <nat:338> * <var:g> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:74> * <var:h> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:44> * <var:N> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:38> * <var:Z> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:396> * <var:Q> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:224> * <var:y> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:314> * <var:o> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:160> * <var:s> ) = true ) . { rewrite Nat . even_mul . auto . } rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 