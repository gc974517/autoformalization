\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Claim that $ <var:Z> $ is a <def:five-composite> integer iff there are $ <var:O> $ , $ <var:H> $ , $ <var:t> $ , $ <var:i> $ , $ <var:s> \in \mathbb{N} $ so that $ <var:Z> = <var:t> \times <var:s> \times <var:O> \times <var:i> \times <var:H> $ with $ <var:Z> \in \mathbb{Z}^+ $ as well as satisfying the condition that $ <var:i> $ , $ <var:s> $ , $ <var:t> $ , $ <var:H> $ , and $ <var:O> \geq <nat:2> $ . Thus $ <nat:6160> = <var:Z> $ is <def:five-composite> . \end{theorem} \begin{proof} Recollect that <nat:6160> is a <def:five-composite> natural number granted it is the product of numbers $ <var:i> $ , $ <var:O> $ , $ <var:t> $ , $ <var:s> $ and $ <var:H> $ such that $ <var:i> $ , $ <var:t> $ , $ <var:O> $ , $ <var:s> $ and $ <var:H> > <nat:1> $ . Assume $ <var:s> = <nat:11> $ , $ <var:t> = <nat:4> $ , $ <var:H> = <nat:10> $ , $ <var:i> = <nat:2> $ , $ <var:O> = <nat:7> $ . We confirm <nat:6160> is a <def:five-composite> whole number . Notice that $ <nat:2> $ , $ <nat:11> $ , $ <nat:4> $ , $ <nat:10> $ , and $ <nat:7> $ are more than <nat:1> . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:five-composite> ( <var:Z> : nat ) := exists <var:O> <var:H> <var:t> <var:i> <var:s> : nat , ( <var:Z> = <var:t> * <var:s> * <var:O> * <var:i> * <var:H> ) /\ ( <var:i> >= <nat:2> ) /\ ( <var:s> >= <nat:2> ) /\ ( <var:t> >= <nat:2> ) /\ ( <var:H> >= <nat:2> ) /\ ( <var:O> >= <nat:2> ) . Theorem <genP:1> : <def:five-composite> <nat:6160> . Proof . unfold <def:five-composite> . exists <nat:7> . exists <nat:10> . exists <nat:4> . exists <nat:2> . exists <nat:11> . assert ( <genH> : <nat:2> > <nat:1> ) . { lia . } assert ( <genH> : <nat:11> > <nat:1> ) . { lia . } assert ( <genH> : <nat:4> > <nat:1> ) . { lia . } assert ( <genH> : <nat:10> > <nat:1> ) . { lia . } assert ( <genH> : <nat:7> > <nat:1> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 