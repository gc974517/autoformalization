\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \newtheorem{definition}{Definition} \begin{document} \begin{definition} There exist integers $ <var:o> $ , $ <var:D> $ , $ <var:T> $ , $ <var:z> $ , $ <var:y> $ so that $ <var:z> $ , $ <var:y> $ , $ <var:D> $ , $ <var:T> $ , $ <var:o> \geq <nat:2> $ . We denote that some integer $ <var:O> $ is named a <def:five-composite> whole number given $ <var:z> \cdot <var:T> \cdot <var:o> \cdot <var:D> \cdot <var:y> = <var:O> $ . \end{definition} \begin{theorem} $ <var:O> = <nat:7560> $ is a <def:five-composite> positive integer . \end{theorem} \begin{proof} Remember a <def:five-composite> integer is the multiplication of $ <var:z> $ , $ <var:T> $ , $ <var:D> $ , $ <var:o> $ , $ <var:y> $ more than or equivalent to <nat:2> . We justify <nat:7560> is a <def:five-composite> integer . Note that $ <nat:3> $ , $ <nat:7> $ , $ <nat:5> $ , $ <nat:6> $ and $ <nat:12> \geq <nat:2> $ . Similarly notice additionally $ <var:o> \cdot <var:D> \cdot <var:T> \cdot <var:z> \cdot <var:y> = <nat:3> \cdot <nat:6> \cdot <nat:5> \cdot <nat:12> \cdot <nat:7> = <nat:7560> $ . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:five-composite> ( <var:O> : nat ) := exists <var:o> <var:D> <var:T> <var:z> <var:y> : nat , ( <var:z> >= <nat:2> ) /\ ( <var:y> >= <nat:2> ) /\ ( <var:D> >= <nat:2> ) /\ ( <var:T> >= <nat:2> ) /\ ( <var:o> >= <nat:2> ) /\ ( <var:z> * <var:T> * <var:o> * <var:D> * <var:y> = <var:O> ) . Theorem <genP:1> : <def:five-composite> <nat:7560> . Proof . unfold <def:five-composite> . assert ( <genH> : <nat:3> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:7> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:5> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:6> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:12> >= <nat:2> ) . { lia . } exists <nat:3> . exists <nat:6> . exists <nat:5> . exists <nat:12> . exists <nat:7> . repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 