\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Taking every natural numbers $ <var:e> $ , $ <var:d> $ , $ <var:H> $ , and $ <var:C> $ the expression $ <var:e> * <nat:280> + <nat:241> + <var:d> * <nat:4> + <var:H> * <nat:98> + <var:C> * <nat:490> $ must be odd . \end{theorem} \begin{proof} Recall that the summation of an even number and an odd integer will be odd . The products $ <nat:280> \times <var:e> $ , $ <var:d> \times <nat:4> $ , $ <var:H> \times <nat:98> $ , as well as $ <var:C> \times <nat:490> $ are even elements of $ \mathbb{Z}^+ $ . This is proven as a consequence that the natural numbers $ <nat:280> $ , $ <nat:4> $ , $ <nat:98> $ , and moreover $ <nat:490> $ are known as even numbers . We verify the formula $ <nat:490> \cdot <var:C> + <var:e> \cdot <nat:280> + <nat:241> + <var:d> \cdot <nat:4> + <nat:98> \cdot <var:H> $ must be odd . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:e> <var:d> <var:H> <var:C> : nat , Nat . odd ( <nat:280> * <var:e> + <nat:4> * <var:d> + <nat:98> * <var:H> + <nat:490> * <var:C> + <nat:241> ) = true . Proof . intros . rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . assert ( <genH> : Nat . even <nat:280> = true ) . { auto . } assert ( <genH> : Nat . even <nat:4> = true ) . { auto . } assert ( <genH> : Nat . even <nat:98> = true ) . { auto . } assert ( <genH> : Nat . even <nat:490> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:280> * <var:e> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:4> * <var:d> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:98> * <var:H> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:490> * <var:C> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 