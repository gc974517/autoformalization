\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:198> \times <var:b> + <nat:330> \times <var:i> + <var:r> \times <nat:478> + <var:S> \times <nat:216> + <nat:392> \times <var:H> + <nat:287> + <var:I> \times <nat:166> $ is guaranteed to be odd . \end{theorem} \begin{proof} Observe the terms $ <nat:198> \times <var:b> $ , $ <var:i> \times <nat:330> $ , $ <nat:478> \times <var:r> $ , $ <nat:216> \times <var:S> $ , $ <nat:392> \times <var:H> $ , and $ <nat:166> \times <var:I> $ are even numbers from the knowledge the numbers $ <nat:198> $ , $ <nat:330> $ , $ <nat:478> $ , $ <nat:216> $ , $ <nat:392> $ , and likewise $ <nat:166> $ are trivially by definition even integers . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:b> <var:i> <var:r> <var:S> <var:H> <var:I> : nat , Nat . odd ( <nat:198> * <var:b> + <nat:330> * <var:i> + <nat:478> * <var:r> + <nat:216> * <var:S> + <nat:392> * <var:H> + <nat:166> * <var:I> + <nat:287> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:198> = true ) . { auto . } assert ( <genH> : Nat . even <nat:330> = true ) . { auto . } assert ( <genH> : Nat . even <nat:478> = true ) . { auto . } assert ( <genH> : Nat . even <nat:216> = true ) . { auto . } assert ( <genH> : Nat . even <nat:392> = true ) . { auto . } assert ( <genH> : Nat . even <nat:166> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:198> * <var:b> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:330> * <var:i> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:478> * <var:r> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:216> * <var:S> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:392> * <var:H> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:166> * <var:I> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 