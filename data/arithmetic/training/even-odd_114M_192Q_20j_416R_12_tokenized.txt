\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Using every $ <var:R> $ , $ <var:Q> $ , $ <var:M> $ , and $ <var:j> $ the expression $ <var:M> \times <nat:114> + <nat:416> \times <var:R> + <var:j> \times <nat:20> + <nat:12> + <var:Q> \times <nat:192> $ must be even . \end{theorem} \begin{proof} It can be shown that this result is proven . Our lemma is proven because $ <nat:114> <var:M> + <var:Q> <nat:192> + <var:j> <nat:20> + <nat:416> <var:R> $ is even . Additionally , take note the coefficients $ <nat:114> $ , $ <nat:192> $ , $ <nat:20> $ , plus $ <nat:416> $ are guaranteed to be even numbers . As a consequence , the pairs $ <var:M> \cdot <nat:114> $ , $ <nat:192> \cdot <var:Q> $ , $ <var:j> \cdot <nat:20> $ , in addition to $ <var:R> \cdot <nat:416> $ must be even as well . The summing of even positive integers with an even positive integer will be even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:R> <var:Q> <var:M> <var:j> : nat , Nat . even ( <nat:114> * <var:M> + <nat:416> * <var:R> + <nat:20> * <var:j> + <nat:192> * <var:Q> + <nat:12> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:114> = true ) . { auto . } assert ( <genH> : Nat . even <nat:192> = true ) . { auto . } assert ( <genH> : Nat . even <nat:20> = true ) . { auto . } assert ( <genH> : Nat . even <nat:416> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:114> * <var:M> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:192> * <var:Q> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:20> * <var:j> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:416> * <var:R> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:114> * <var:M> + <nat:416> * <var:R> + <nat:20> * <var:j> + <nat:192> * <var:Q> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . even_add . rewrite <genH> . auto . Qed . 