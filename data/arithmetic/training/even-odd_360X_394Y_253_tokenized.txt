\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:253> + <var:X> * <nat:360> + <nat:394> * <var:Y> $ will be odd given every integers $ <var:X> $ , and $ <var:Y> $ . \end{theorem} \begin{proof} Notice the formula $ <var:Y> * <nat:394> + <nat:253> + <nat:360> * <var:X> $ is obviously odd as a consequence that the expression $ <nat:360> \times <var:X> + <nat:394> \times <var:Y> $ is guaranteed to be even , because the addition between an even element of $ \mathbb{Z}^+ $ and an even whole number must be an even element of $ \mathbb{N} $ . Remember that the products $ <nat:360> * <var:X> $ $ <var:Y> * <nat:394> $ are guaranteed to be even by reason that the product of an even natural number with some number in $ \mathbb{N} $ is an even number in $ \mathbb{N} $ as well as the integers $ <nat:360> $ $ <nat:394> $ are trivially even . plus from the fact taking the product between an even whole number and some element of $ \mathbb{Z}^+ $ is guaranteed to be an even integer the claim is true . The addition of even naturals successively with an odd positive integer is itself an odd natural number . See that $ <nat:253> $ is an odd element of $ \mathbb{N} $ . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:X> <var:Y> : nat , Nat . odd ( <nat:360> * <var:X> + <nat:394> * <var:Y> + <nat:253> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:360> = true ) . { auto . } assert ( <genH> : Nat . even <nat:394> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:360> * <var:X> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:394> * <var:Y> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:360> * <var:X> + <nat:394> * <var:Y> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . assert ( <genH> : Nat . odd <nat:253> = true ) . { auto . } rewrite <- Nat . negb_even . rewrite <genH> . rewrite <genH> . auto . Qed . 