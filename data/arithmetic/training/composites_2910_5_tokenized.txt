\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Take that with the condition there are integers $ <var:A> $ , $ <var:i> $ , $ <var:x> $ , $ <var:D> $ , $ <var:B> $ we claim that some whole number $ <var:b> $ is considered to be a <def:five-composite> positive integer if $ <var:B> \cdot <var:i> \cdot <var:D> \cdot <var:A> \cdot <var:x> = <var:b> $ as well as such that $ <var:x> $ , $ <var:D> $ , $ <var:B> $ , $ <var:A> $ and $ <var:i> \geq <nat:2> $ . Thus the natural number <nat:25200> is <def:five-composite> . \end{theorem} \begin{proof} Recall that <nat:25200> is a <def:five-composite> positive integer granted that <nat:25200> is the multiplication of positive integers $ <var:i> $ , $ <var:x> $ , $ <var:A> $ , $ <var:B> $ , and $ <var:D> $ more than or equal to <nat:2> . We verify our principle is valid on account of $ <nat:5> $ , $ <nat:10> $ , $ <nat:7> $ , $ <nat:8> $ and $ <nat:9> \geq <nat:2> $ and for $ <nat:25200> = <var:x> \times <var:B> \times <var:A> \times <var:i> \times <var:D> $ hints $ <var:B> = <nat:9> $ , $ <var:i> = <nat:5> $ , $ <var:D> = <nat:8> $ , $ <var:A> = <nat:10> $ and $ <var:x> = <nat:7> $ . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:five-composite> ( <var:b> : nat ) := exists <var:A> <var:i> <var:x> <var:D> <var:B> : nat , ( <var:B> * <var:i> * <var:D> * <var:A> * <var:x> = <var:b> ) /\ ( <var:x> >= <nat:2> ) /\ ( <var:D> >= <nat:2> ) /\ ( <var:B> >= <nat:2> ) /\ ( <var:A> >= <nat:2> ) /\ ( <var:i> >= <nat:2> ) . Theorem <genP:1> : <def:five-composite> <nat:25200> . Proof . unfold <def:five-composite> . assert ( <genH> : <nat:5> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:10> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:7> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:8> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:9> >= <nat:2> ) . { lia . } exists <nat:10> . exists <nat:5> . exists <nat:7> . exists <nat:8> . exists <nat:9> . repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 