\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Assume $ <var:v> $ , $ <var:f> $ , $ <var:a> $ , $ <var:A> $ , $ <var:B> $ , $ <var:O> $ , $ <var:G> $ , $ <var:o> $ , $ <var:x> $ as positive integers satisfying the condition that $ <var:G> $ , $ <var:x> $ , $ <var:o> $ , $ <var:A> $ , $ <var:a> $ , $ <var:f> $ , $ <var:v> $ , $ <var:B> $ , and $ <var:O> > <nat:1> $ and so that $ <nat:10644480> $ is the same as $ <var:x> * <var:f> * <var:B> * <var:a> * <var:v> * <var:G> * <var:A> * <var:o> * <var:O> $ . \end{theorem} \begin{proof} We prove $ <nat:10644480> = <var:f> \times <var:o> \times <var:A> \times <var:O> \times <var:x> \times <var:v> \times <var:G> \times <var:a> \times <var:B> $ . Observe that $ <nat:4> \times <nat:3> \times <nat:10> \times <nat:8> \times <nat:6> \times <nat:12> \times <nat:2> \times <nat:7> \times <nat:11> = <nat:10644480> $ . Also note that $ <nat:8> $ , $ <nat:12> $ , $ <nat:7> $ , $ <nat:11> $ , $ <nat:3> $ , $ <nat:2> $ , $ <nat:6> $ , $ <nat:4> $ , $ <nat:10> > <nat:1> $ . This hints our result is true . \end{proof} \end{document} 
~
Require Import Lia . Theorem <genP:1> : exists <var:v> <var:f> <var:a> <var:A> <var:B> <var:O> <var:G> <var:o> <var:x> : nat , ( <var:G> > <nat:1> ) /\ ( <var:x> > <nat:1> ) /\ ( <var:o> > <nat:1> ) /\ ( <var:A> > <nat:1> ) /\ ( <var:a> > <nat:1> ) /\ ( <var:f> > <nat:1> ) /\ ( <var:v> > <nat:1> ) /\ ( <var:B> > <nat:1> ) /\ ( <var:O> > <nat:1> ) /\ ( <nat:10644480> = <var:x> * <var:f> * <var:B> * <var:a> * <var:v> * <var:G> * <var:A> * <var:o> * <var:O> ) . Proof . exists <nat:2> . exists <nat:11> . exists <nat:10> . exists <nat:6> . exists <nat:3> . exists <nat:7> . exists <nat:4> . exists <nat:8> . exists <nat:12> . assert ( <genH> : <nat:8> > <nat:1> ) . { lia . } assert ( <genH> : <nat:12> > <nat:1> ) . { lia . } assert ( <genH> : <nat:7> > <nat:1> ) . { lia . } assert ( <genH> : <nat:11> > <nat:1> ) . { lia . } assert ( <genH> : <nat:3> > <nat:1> ) . { lia . } assert ( <genH> : <nat:2> > <nat:1> ) . { lia . } assert ( <genH> : <nat:6> > <nat:1> ) . { lia . } assert ( <genH> : <nat:4> > <nat:1> ) . { lia . } assert ( <genH> : <nat:10> > <nat:1> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 