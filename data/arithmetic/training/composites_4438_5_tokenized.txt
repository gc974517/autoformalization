\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Say that $ <var:J> $ is a <def:five-composite> integer granted for some $ <var:m> $ , $ <var:L> $ , $ <var:E> $ , $ <var:F> $ , $ <var:l> \in \mathbb{N} $ we have $ <var:m> \times <var:F> \times <var:l> \times <var:E> \times <var:L> = <var:J> $ with $ <var:J> \in \mathbb{Z}^+ $ and so that $ <var:E> $ , $ <var:m> $ , $ <var:l> $ , $ <var:F> $ and $ <var:L> \geq <nat:2> $ . Hence $ <var:J> = <nat:4224> $ is a <def:five-composite> whole number . \end{theorem} \begin{proof} Recall <nat:4224> is a <def:five-composite> integer if it is the product between $ <var:m> $ , $ <var:E> $ , $ <var:l> $ , $ <var:L> $ and $ <var:F> $ larger than or equivalent to <nat:2> . Assume $ <var:F> = <nat:11> $ , $ <var:E> = <nat:4> $ , $ <var:L> = <nat:6> $ , $ <var:l> = <nat:2> $ and $ <var:m> = <nat:8> $ . Note that $ <var:E> = <nat:4> $ , $ <var:F> = <nat:11> $ , $ <var:l> = <nat:2> $ , $ <var:L> = <nat:6> $ and $ <var:m> = <nat:8> \geq <nat:2> $ . Plus note still $ <var:L> * <var:l> * <var:E> * <var:F> * <var:m> = <nat:6> * <nat:2> * <nat:4> * <nat:11> * <nat:8> = <nat:4224> $ . This implies <nat:4224> is a <def:five-composite> whole number . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:five-composite> ( <var:J> : nat ) := exists <var:m> <var:L> <var:E> <var:F> <var:l> : nat , ( <var:m> * <var:F> * <var:l> * <var:E> * <var:L> = <var:J> ) /\ ( <var:E> >= <nat:2> ) /\ ( <var:m> >= <nat:2> ) /\ ( <var:l> >= <nat:2> ) /\ ( <var:F> >= <nat:2> ) /\ ( <var:L> >= <nat:2> ) . Theorem <genP:1> : <def:five-composite> <nat:4224> . Proof . unfold <def:five-composite> . exists <nat:8> . exists <nat:6> . exists <nat:4> . exists <nat:11> . exists <nat:2> . assert ( <genH> : <nat:4> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:11> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:2> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:6> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:8> >= <nat:2> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 