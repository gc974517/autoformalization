\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Take $ <var:q> $ , $ <var:f> $ , $ <var:h> $ , $ <var:U> $ , $ <var:W> $ , $ <var:D> $ , $ <var:F> $ , $ <var:c> $ , $ <var:i> \in \mathbb{N} $ . Say that $ <var:b> \in \mathbb{N} $ will be named a <def:nine-composite> whole number assuming $ <var:b> = <var:h> * <var:c> * <var:q> * <var:W> * <var:U> * <var:f> * <var:i> * <var:F> * <var:D> $ as well as factors are greater than <nat:1> . So $ <nat:39916800> = <var:b> $ is a <def:nine-composite> integer . \end{theorem} \begin{proof} Recall <nat:39916800> is <def:nine-composite> supposing that it is the product between numbers $ <var:i> $ , $ <var:U> $ , $ <var:c> $ , $ <var:F> $ , $ <var:q> $ , $ <var:W> $ , $ <var:D> $ , $ <var:h> $ , and $ <var:f> $ more than <nat:1> . Allow $ <var:c> = <nat:11> $ , $ <var:F> = <nat:6> $ , $ <var:U> = <nat:5> $ , $ <var:D> = <nat:10> $ , $ <var:q> = <nat:7> $ , $ <var:W> = <nat:2> $ , $ <var:i> = <nat:9> $ , $ <var:f> = <nat:12> $ , and $ <var:h> = <nat:8> $ . Note that $ <var:f> \times <var:F> \times <var:c> \times <var:U> \times <var:h> \times <var:W> \times <var:D> \times <var:i> \times <var:q> = <nat:39916800> $ . What's more observe $ <nat:2> $ , $ <nat:12> $ , $ <nat:10> $ , $ <nat:6> $ , $ <nat:7> $ , $ <nat:5> $ , $ <nat:8> $ , $ <nat:11> $ , $ <nat:9> > <nat:1> $ . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:nine-composite> ( <var:b> : nat ) := exists <var:q> <var:f> <var:h> <var:U> <var:W> <var:D> <var:F> <var:c> <var:i> : nat , ( <var:b> = <var:h> * <var:c> * <var:q> * <var:W> * <var:U> * <var:f> * <var:i> * <var:F> * <var:D> ) /\ ( <var:q> > <nat:1> ) /\ ( <var:f> > <nat:1> ) /\ ( <var:h> > <nat:1> ) /\ ( <var:U> > <nat:1> ) /\ ( <var:W> > <nat:1> ) /\ ( <var:D> > <nat:1> ) /\ ( <var:F> > <nat:1> ) /\ ( <var:c> > <nat:1> ) /\ ( <var:i> > <nat:1> ) . Theorem <genP:1> : <def:nine-composite> <nat:39916800> . Proof . unfold <def:nine-composite> . exists <nat:7> . exists <nat:12> . exists <nat:8> . exists <nat:5> . exists <nat:2> . exists <nat:10> . exists <nat:6> . exists <nat:11> . exists <nat:9> . assert ( <genH> : <nat:2> > <nat:1> ) . { lia . } assert ( <genH> : <nat:12> > <nat:1> ) . { lia . } assert ( <genH> : <nat:10> > <nat:1> ) . { lia . } assert ( <genH> : <nat:6> > <nat:1> ) . { lia . } assert ( <genH> : <nat:7> > <nat:1> ) . { lia . } assert ( <genH> : <nat:5> > <nat:1> ) . { lia . } assert ( <genH> : <nat:8> > <nat:1> ) . { lia . } assert ( <genH> : <nat:11> > <nat:1> ) . { lia . } assert ( <genH> : <nat:9> > <nat:1> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 