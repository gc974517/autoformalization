\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Assuming any positive integers $ <var:o> $ , $ <var:U> $ , $ <var:a> $ , $ <var:W> $ , $ <var:Q> $ , and $ <var:h> $ the expression $ <nat:176> \cdot <var:a> + <nat:364> \cdot <var:o> + <nat:51> + <nat:102> \cdot <var:Q> + <var:W> \cdot <nat:246> + <nat:16> \cdot <var:U> + <nat:88> \cdot <var:h> $ is odd . \end{theorem} \begin{proof} This theorem must be true by reason that $ <nat:16> <var:U> + <var:W> <nat:246> + <var:Q> <nat:102> + <nat:176> <var:a> + <nat:88> <var:h> + <var:o> <nat:364> $ is even . Further , observe the products $ <nat:16> \times <var:U> $ , $ <nat:246> \times <var:W> $ , $ <var:Q> \times <nat:102> $ , $ <var:a> \times <nat:176> $ , $ <nat:88> \times <var:h> $ , in addition to $ <var:o> \times <nat:364> $ are trivially even . This claim is true because the coefficients $ <nat:16> $ , $ <nat:246> $ , $ <nat:102> $ , $ <nat:176> $ , $ <nat:88> $ , and moreover $ <nat:364> $ are known as by their very nature even numbers . The summation $ <var:U> \times <nat:16> + <var:Q> \times <nat:102> + <nat:176> \times <var:a> + <var:W> \times <nat:246> + <nat:364> \times <var:o> + <var:h> \times <nat:88> $ is guaranteed to be fundamentally even from the knowledge the multiplication of an even integer and a number is guaranteed to be even . The summing between an even whole number with an odd element of $ \mathbb{N} $ must be by itself an odd element of $ \mathbb{Z}^+ $ . Then , $ <nat:51> + <var:Q> \cdot <nat:102> + <nat:88> \cdot <var:h> + <nat:16> \cdot <var:U> + <var:W> \cdot <nat:246> + <nat:176> \cdot <var:a> + <var:o> \cdot <nat:364> $ by itself will be odd . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:o> <var:U> <var:a> <var:W> <var:Q> <var:h> : nat , Nat . odd ( <nat:176> * <var:a> + <nat:364> * <var:o> + <nat:102> * <var:Q> + <nat:246> * <var:W> + <nat:16> * <var:U> + <nat:88> * <var:h> + <nat:51> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:16> = true ) . { auto . } assert ( <genH> : Nat . even <nat:246> = true ) . { auto . } assert ( <genH> : Nat . even <nat:102> = true ) . { auto . } assert ( <genH> : Nat . even <nat:176> = true ) . { auto . } assert ( <genH> : Nat . even <nat:88> = true ) . { auto . } assert ( <genH> : Nat . even <nat:364> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:16> * <var:U> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:246> * <var:W> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:102> * <var:Q> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:176> * <var:a> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:88> * <var:h> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:364> * <var:o> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:176> * <var:a> + <nat:364> * <var:o> + <nat:102> * <var:Q> + <nat:246> * <var:W> + <nat:16> * <var:U> + <nat:88> * <var:h> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . auto . Qed . 