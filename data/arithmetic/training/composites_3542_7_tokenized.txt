\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \newtheorem{definition}{Definition} \begin{document} \begin{definition} Assuming that there exist numbers $ <var:c> $ , $ <var:H> $ , $ <var:n> $ , $ <var:Y> $ , $ <var:x> $ , $ <var:j> $ , $ <var:m> $ we denote that $ <var:a> \in \mathbb{N} $ is said to be a <def:seven-composite> positive integer assuming $ <var:a> = <var:Y> \times <var:m> \times <var:H> \times <var:j> \times <var:n> \times <var:x> \times <var:c> $ as well as terms are greater than or equal to <nat:2> . \end{definition} \begin{theorem} The natural number <nat:443520> is a <def:seven-composite> natural number . \end{theorem} \begin{proof} Recall that a <def:seven-composite> natural number is the product of natural numbers $ <var:m> $ , $ <var:j> $ , $ <var:c> $ , $ <var:n> $ , $ <var:Y> $ , $ <var:H> $ , $ <var:x> $ where $ <var:Y> $ , $ <var:H> $ , $ <var:j> $ , $ <var:c> $ , $ <var:x> $ , $ <var:n> $ and $ <var:m> \geq <nat:2> $ . Notice that $ <var:m> \times <var:H> \times <var:Y> \times <var:c> \times <var:x> \times <var:j> \times <var:n> = <nat:443520> $ indicates $ <var:Y> = <nat:4> $ , $ <var:c> = <nat:8> $ , $ <var:n> = <nat:7> $ , $ <var:x> = <nat:11> $ , $ <var:H> = <nat:3> $ , $ <var:j> = <nat:6> $ , and $ <var:m> = <nat:10> $ . Furthermore note $ <nat:3> $ , $ <nat:6> $ , $ <nat:4> $ , $ <nat:10> $ , $ <nat:8> $ , $ <nat:11> $ , and $ <nat:7> \geq <nat:2> $ . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:seven-composite> ( <var:a> : nat ) := exists <var:c> <var:H> <var:n> <var:Y> <var:x> <var:j> <var:m> : nat , ( <var:a> = <var:Y> * <var:m> * <var:H> * <var:j> * <var:n> * <var:x> * <var:c> ) /\ ( <var:c> >= <nat:2> ) /\ ( <var:H> >= <nat:2> ) /\ ( <var:n> >= <nat:2> ) /\ ( <var:Y> >= <nat:2> ) /\ ( <var:x> >= <nat:2> ) /\ ( <var:j> >= <nat:2> ) /\ ( <var:m> >= <nat:2> ) . Theorem <genP:1> : <def:seven-composite> <nat:443520> . Proof . unfold <def:seven-composite> . exists <nat:8> . exists <nat:3> . exists <nat:7> . exists <nat:4> . exists <nat:11> . exists <nat:6> . exists <nat:10> . assert ( <genH> : <nat:3> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:6> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:4> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:10> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:8> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:11> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:7> >= <nat:2> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 