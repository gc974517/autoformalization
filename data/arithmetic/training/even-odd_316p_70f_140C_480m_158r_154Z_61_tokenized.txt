\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:m> * <nat:480> + <var:p> * <nat:316> + <nat:61> + <nat:70> * <var:f> + <var:r> * <nat:158> + <nat:154> * <var:Z> + <nat:140> * <var:C> $ is odd . \end{theorem} \begin{proof} We utilize the knowledge the formula $ <var:C> * <nat:140> + <var:p> * <nat:316> + <var:Z> * <nat:154> + <var:f> * <nat:70> + <var:r> * <nat:158> + <nat:480> * <var:m> + <nat:61> $ is obviously odd since the formula $ <nat:154> \times <var:Z> + <var:p> \times <nat:316> + <var:f> \times <nat:70> + <var:C> \times <nat:140> + <nat:158> \times <var:r> + <nat:480> \times <var:m> $ is known as even , by reason that multiplying of even naturals must be even . Notice the positive integers $ <nat:158> $ , $ <nat:140> $ , $ <nat:154> $ , and also $ <nat:316> $ are trivially even See the natural number $ <nat:480> $ is even We know that the integer $ <nat:70> $ is guaranteed to be an even element of $ \mathbb{Z}^+ $ Recall $ <nat:61> $ is obviously odd . Because the summation between even numbers in $ \mathbb{Z}^+ $ concurrently with an odd number will be odd , $ <var:p> * <nat:316> + <nat:61> + <var:f> * <nat:70> + <nat:140> * <var:C> + <var:m> * <nat:480> + <nat:158> * <var:r> + <nat:154> * <var:Z> $ must be odd . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:m> <var:p> <var:f> <var:r> <var:Z> <var:C> : nat , Nat . odd ( <nat:480> * <var:m> + <nat:316> * <var:p> + <nat:70> * <var:f> + <nat:158> * <var:r> + <nat:154> * <var:Z> + <nat:140> * <var:C> + <nat:61> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:158> = true ) . { auto . } assert ( <genH> : Nat . even <nat:140> = true ) . { auto . } assert ( <genH> : Nat . even <nat:154> = true ) . { auto . } assert ( <genH> : Nat . even <nat:316> = true ) . { auto . } assert ( <genH> : Nat . even <nat:480> = true ) . { auto . } assert ( <genH> : Nat . even <nat:70> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:480> * <var:m> + <nat:316> * <var:p> + <nat:70> * <var:f> + <nat:158> * <var:r> + <nat:154> * <var:Z> + <nat:140> * <var:C> ) = true ) . { repeat rewrite Nat . even_add . repeat rewrite Nat . even_mul . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } assert ( <genH> : Nat . odd <nat:61> = true ) . { auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . rewrite <genH> . auto . Qed . 