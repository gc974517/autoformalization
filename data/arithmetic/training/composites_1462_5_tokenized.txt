\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} We define that wherever there exist integers $ <var:y> $ , $ <var:D> $ , $ <var:T> $ , $ <var:t> $ , $ <var:B> $ take as given that $ <var:d> \in \mathbb{N} $ will be named a <def:five-composite> natural number assuming $ <var:y> \cdot <var:B> \cdot <var:D> \cdot <var:T> \cdot <var:t> = <var:d> $ and more than or equal to <nat:2> . For this reason the integer <nat:57024> is <def:five-composite> . \end{theorem} \begin{proof} Recall <nat:57024> is a <def:five-composite> positive integer only if <nat:57024> is the product between numbers $ <var:D> $ , $ <var:y> $ , $ <var:B> $ , $ <var:T> $ , and $ <var:t> $ satisfying the condition that $ <var:B> $ , $ <var:t> $ , $ <var:D> $ , $ <var:T> $ and $ <var:y> \geq <nat:2> $ . Assume $ <var:t> = <nat:11> $ , $ <var:y> = <nat:12> $ , $ <var:B> = <nat:9> $ , $ <var:T> = <nat:8> $ and $ <var:D> = <nat:6> $ . Notice that $ <var:y> = <nat:12> $ , $ <var:T> = <nat:8> $ , $ <var:D> = <nat:6> $ , $ <var:B> = <nat:9> $ , $ <var:t> = <nat:11> $ are greater than or equal to <nat:2> . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:five-composite> ( <var:d> : nat ) := exists <var:y> <var:D> <var:T> <var:t> <var:B> : nat , ( <var:y> * <var:B> * <var:D> * <var:T> * <var:t> = <var:d> ) /\ ( <var:y> >= <nat:2> ) /\ ( <var:D> >= <nat:2> ) /\ ( <var:T> >= <nat:2> ) /\ ( <var:t> >= <nat:2> ) /\ ( <var:B> >= <nat:2> ) . Theorem <genP:1> : <def:five-composite> <nat:57024> . Proof . unfold <def:five-composite> . exists <nat:12> . exists <nat:6> . exists <nat:8> . exists <nat:11> . exists <nat:9> . assert ( <genH> : <nat:12> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:8> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:6> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:9> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:11> >= <nat:2> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 