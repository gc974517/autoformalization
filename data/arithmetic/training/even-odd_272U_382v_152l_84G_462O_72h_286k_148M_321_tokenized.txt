\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:272> * <var:U> + <var:v> * <nat:382> + <nat:152> * <var:l> + <nat:84> * <var:G> + <nat:321> + <nat:462> * <var:O> + <var:h> * <nat:72> + <var:k> * <nat:286> + <var:M> * <nat:148> $ must be odd using every $ <var:U> $ , $ <var:G> $ , $ <var:k> $ , $ <var:O> $ , $ <var:l> $ , $ <var:M> $ , $ <var:v> $ , and $ <var:h> \in \mathbb{Z}^+ $ . \end{theorem} \begin{proof} The terms $ <var:G> <nat:84> $ , $ <nat:272> <var:U> $ , and also $ <var:l> <nat:152> $ will be even . The terms $ <var:O> <nat:462> $ additionally $ <var:v> <nat:382> $ are clearly even . The pairs $ <nat:72> <var:h> $ and also $ <nat:148> <var:M> $ are known to be even positive integers . Recall the pair $ <var:k> <nat:286> $ is obviously an even number in $ \mathbb{N} $ . This claim must be true by reason that the product of an even number with any number in $ \mathbb{Z}^+ $ is guaranteed to be even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:U> <var:G> <var:k> <var:O> <var:l> <var:M> <var:v> <var:h> : nat , Nat . odd ( <nat:272> * <var:U> + <nat:382> * <var:v> + <nat:152> * <var:l> + <nat:84> * <var:G> + <nat:462> * <var:O> + <nat:72> * <var:h> + <nat:286> * <var:k> + <nat:148> * <var:M> + <nat:321> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:84> * <var:G> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:272> * <var:U> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:152> * <var:l> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:462> * <var:O> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:382> * <var:v> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:72> * <var:h> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:148> * <var:M> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:286> * <var:k> ) = true ) . { rewrite Nat . even_mul . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 