\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:122> * <var:q> + <nat:169> + <nat:264> * <var:g> + <nat:170> * <var:Q> + <var:c> * <nat:424> + <var:a> * <nat:294> + <nat:10> * <var:j> + <var:e> * <nat:398> + <var:f> * <nat:102> $ is guaranteed to be odd . \end{theorem} \begin{proof} $ <nat:398> <var:e> + <nat:10> <var:j> + <nat:424> <var:c> + <var:q> <nat:122> + <nat:264> <var:g> + <var:Q> <nat:170> + <var:f> <nat:102> + <var:a> <nat:294> $ is known as even . The product $ <nat:170> * <var:Q> $ is known to be even since taking the product of an even natural number with some element of $ \mathbb{N} $ will be even and also the whole number $ <nat:170> $ is obviously obviously an even number in $ \mathbb{N} $ . The natural number $ <nat:102> $ is guaranteed to be even . Therefore , the term $ <var:f> * <nat:102> $ must be even also . Observe that the leading term $ <nat:424> $ is known to be even . For this reason , the pair $ <var:c> * <nat:424> $ will be even also . The number $ <nat:398> $ is obviously even . Consequently , $ <nat:398> * <var:e> $ will be even in addition . Recall that the term $ <var:q> * <nat:122> $ is known as even from the fact multiplying between an even element of $ \mathbb{N} $ and an arbitrary number in $ \mathbb{Z}^+ $ is in itself an even integer , and must be true from the knowledge the whole number $ <nat:122> $ is guaranteed to be an even natural . Further , observe that the pair $ <var:j> * <nat:10> $ is guaranteed to be even . This must be true as a consequence that taking the product between an even integer with some number must be even . This fact is true from the knowledge the natural number $ <nat:10> $ is obviously an even number in $ \mathbb{Z}^+ $ . Building on , recall that $ <nat:264> * <var:g> $ is guaranteed to be even . This fact is true by reason that the positive integer $ <nat:264> $ is guaranteed to be even . Notice $ <var:a> * <nat:294> $ is known to be an even natural . This fact is proven from the fact taking the product of an even whole number and a natural number will be even , and is true since the natural number $ <nat:294> $ is known as an even whole number . Since the multiplication of an even positive integer with some element of $ \mathbb{Z}^+ $ is guaranteed to be even this theorem holds . The summation of an even integer and an odd number is an odd number in $ \mathbb{N} $ . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:q> <var:g> <var:Q> <var:c> <var:a> <var:j> <var:e> <var:f> : nat , Nat . odd ( <nat:122> * <var:q> + <nat:264> * <var:g> + <nat:170> * <var:Q> + <nat:424> * <var:c> + <nat:294> * <var:a> + <nat:10> * <var:j> + <nat:398> * <var:e> + <nat:102> * <var:f> + <nat:169> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:170> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:170> * <var:Q> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:102> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:102> * <var:f> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:424> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:424> * <var:c> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:398> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:398> * <var:e> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:122> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:122> * <var:q> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:10> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:10> * <var:j> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:264> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:264> * <var:g> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:294> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:294> * <var:a> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:122> * <var:q> + <nat:264> * <var:g> + <nat:170> * <var:Q> + <nat:424> * <var:c> + <nat:294> * <var:a> + <nat:10> * <var:j> + <nat:398> * <var:e> + <nat:102> * <var:f> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . auto . Qed . 