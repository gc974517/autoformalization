\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:329> + <nat:460> <var:Z> + <var:a> <nat:154> + <nat:444> <var:Y> + <var:r> <nat:374> + <var:f> <nat:168> + <var:e> <nat:194> + <var:s> <nat:218> + <nat:110> <var:S> $ must be odd . \end{theorem} \begin{proof} Observe the sum $ <nat:110> <var:S> + <nat:218> <var:s> + <nat:154> <var:a> + <var:Z> <nat:460> + <nat:444> <var:Y> + <nat:194> <var:e> + <nat:168> <var:f> + <var:r> <nat:374> $ is obviously even . See that the numbers $ <nat:460> $ , $ <nat:168> $ , $ <nat:374> $ , additionally $ <nat:110> $ are trivially even The positive integer $ <nat:218> $ is even What's more , we know that the positive integer $ <nat:154> $ is an even integer Recall the coefficient $ <nat:444> $ is trivially an even number in $ \mathbb{N} $ Additionally , the positive integer $ <nat:194> $ is clearly even As a consequence that the summing of an even integer and even integers is an even integer , and likewise since the multiplication of even positive integers and an arbitrary element of $ \mathbb{Z}^+ $ must be an even natural . Notice that the totaling of even elements of $ \mathbb{N} $ together with an odd element of $ \mathbb{Z}^+ $ will be itself an odd integer . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:Z> <var:a> <var:Y> <var:r> <var:f> <var:e> <var:s> <var:S> : nat , Nat . odd ( <nat:460> * <var:Z> + <nat:154> * <var:a> + <nat:444> * <var:Y> + <nat:374> * <var:r> + <nat:168> * <var:f> + <nat:194> * <var:e> + <nat:218> * <var:s> + <nat:110> * <var:S> + <nat:329> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:460> = true ) . { auto . } assert ( <genH> : Nat . even <nat:168> = true ) . { auto . } assert ( <genH> : Nat . even <nat:374> = true ) . { auto . } assert ( <genH> : Nat . even <nat:110> = true ) . { auto . } assert ( <genH> : Nat . even <nat:218> = true ) . { auto . } assert ( <genH> : Nat . even <nat:154> = true ) . { auto . } assert ( <genH> : Nat . even <nat:444> = true ) . { auto . } assert ( <genH> : Nat . even <nat:194> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:460> * <var:Z> + <nat:154> * <var:a> + <nat:444> * <var:Y> + <nat:374> * <var:r> + <nat:168> * <var:f> + <nat:194> * <var:e> + <nat:218> * <var:s> + <nat:110> * <var:S> ) = true ) . { repeat rewrite Nat . even_add . repeat rewrite Nat . even_mul . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . auto . Qed . 