\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:192> * <var:W> + <nat:388> * <var:d> + <var:u> * <nat:400> + <var:H> * <nat:240> + <nat:399> + <nat:280> * <var:r> + <nat:410> * <var:k> $ must be odd . \end{theorem} \begin{proof} Furthermore , the whole number $ <nat:400> $ is trivially an even element of $ \mathbb{Z}^+ $ . As a consequence , the pair $ <nat:400> \times <var:u> $ is guaranteed to be even in addition . The positive integer $ <nat:410> $ is obviously even . In consequence , the term $ <nat:410> \times <var:k> $ is even at the same time . The product $ <var:r> \times <nat:280> $ is known as an even number because the multiplication of an even number in $ \mathbb{Z}^+ $ and an arbitrary natural must be even . This fact is proven because the whole number $ <nat:280> $ is trivially an even number . We know the number $ <nat:240> $ is obviously an even number . Accordingly , the term $ <nat:240> \times <var:H> $ is even as well . Building on , the leading term $ <nat:388> $ is known to be an even natural number . In consequence , the term $ <var:d> \times <nat:388> $ will be even in addition . The coefficient $ <nat:192> $ is guaranteed to be an even number in $ \mathbb{Z}^+ $ . Hence , the term $ <nat:192> \times <var:W> $ will be even at the same time . See that $ <nat:399> $ is obviously an odd natural number . The totaling between even natural numbers together and an odd element of $ \mathbb{N} $ will be by its very nature an odd positive integer . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:W> <var:d> <var:u> <var:H> <var:r> <var:k> : nat , Nat . odd ( <nat:192> * <var:W> + <nat:388> * <var:d> + <nat:400> * <var:u> + <nat:240> * <var:H> + <nat:280> * <var:r> + <nat:410> * <var:k> + <nat:399> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:400> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:400> * <var:u> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:410> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:410> * <var:k> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:280> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:280> * <var:r> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:240> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:240> * <var:H> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:388> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:388> * <var:d> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:192> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:192> * <var:W> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . odd <nat:399> = true ) . { auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 