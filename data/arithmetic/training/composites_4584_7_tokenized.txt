\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \newtheorem{definition}{Definition} \begin{document} \begin{definition} Supposing that there exist positive integers $ <var:R> $ , $ <var:m> $ , $ <var:x> $ , $ <var:a> $ , $ <var:O> $ , $ <var:t> $ , $ <var:y> $ then claim that $ <var:K> \in \mathbb{Z}^+ $ will be considered as a <def:seven-composite> positive integer given $ <var:K> = <var:x> \cdot <var:O> \cdot <var:y> \cdot <var:a> \cdot <var:m> \cdot <var:R> \cdot <var:t> $ plus terms are greater than <nat:1> . \end{definition} \begin{theorem} $ <var:K> = <nat:498960> $ is a <def:seven-composite> number . \end{theorem} \begin{proof} Let $ <var:m> = <nat:3> $ , $ <var:O> = <nat:5> $ , $ <var:y> = <nat:7> $ , $ <var:R> = <nat:11> $ , $ <var:x> = <nat:6> $ , $ <var:t> = <nat:8> $ , $ <var:a> = <nat:9> $ . Note that $ <var:a> = <nat:9> $ , $ <var:R> = <nat:11> $ , $ <var:m> = <nat:3> $ , $ <var:y> = <nat:7> $ , $ <var:x> = <nat:6> $ , $ <var:O> = <nat:5> $ , $ <var:t> = <nat:8> $ are more than <nat:1> . Furthermore observe that further $ <nat:498960> = <var:x> * <var:y> * <var:t> * <var:m> * <var:a> * <var:O> * <var:R> $ . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:seven-composite> ( <var:K> : nat ) := exists <var:R> <var:m> <var:x> <var:a> <var:O> <var:t> <var:y> : nat , ( <var:K> = <var:x> * <var:O> * <var:y> * <var:a> * <var:m> * <var:R> * <var:t> ) /\ ( <var:R> > <nat:1> ) /\ ( <var:m> > <nat:1> ) /\ ( <var:x> > <nat:1> ) /\ ( <var:a> > <nat:1> ) /\ ( <var:O> > <nat:1> ) /\ ( <var:t> > <nat:1> ) /\ ( <var:y> > <nat:1> ) . Theorem <genP:1> : <def:seven-composite> <nat:498960> . Proof . unfold <def:seven-composite> . exists <nat:11> . exists <nat:3> . exists <nat:6> . exists <nat:9> . exists <nat:5> . exists <nat:8> . exists <nat:7> . assert ( <genH> : <nat:9> > <nat:1> ) . { lia . } assert ( <genH> : <nat:11> > <nat:1> ) . { lia . } assert ( <genH> : <nat:3> > <nat:1> ) . { lia . } assert ( <genH> : <nat:7> > <nat:1> ) . { lia . } assert ( <genH> : <nat:6> > <nat:1> ) . { lia . } assert ( <genH> : <nat:5> > <nat:1> ) . { lia . } assert ( <genH> : <nat:8> > <nat:1> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 