\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Assuming all positive terms $ <var:Z> $ , $ <var:G> $ , $ <var:A> $ , $ <var:p> $ , $ <var:H> $ , $ <var:i> $ , $ <var:z> $ , and $ <var:Y> $ the summation $ <var:H> <nat:208> + <nat:366> <var:G> + <nat:136> <var:A> + <nat:12> <var:i> + <var:z> <nat:498> + <nat:228> <var:Y> + <nat:14> <var:Z> + <nat:438> <var:p> + <nat:239> $ will be odd . \end{theorem} \begin{proof} Recall $ <nat:239> $ is odd . It can be checked that the expression $ <var:Y> * <nat:228> + <nat:208> * <var:H> + <var:i> * <nat:12> + <var:A> * <nat:136> + <var:G> * <nat:366> + <var:p> * <nat:438> + <var:Z> * <nat:14> + <nat:239> + <var:z> * <nat:498> $ must be odd . Observe that the pair $ <nat:14> * <var:Z> $ is trivially an even positive integer from the knowledge multiplying of an even positive integer and a positive integer is by its very nature an even natural number . The terms $ <var:H> * <nat:208> $ , $ <nat:228> * <var:Y> $ , $ <var:A> * <nat:136> $ , $ <var:z> * <nat:498> $ , in addition to $ <nat:366> * <var:G> $ will be even positive integers since multiplying of an even number in $ \mathbb{N} $ and any natural number is guaranteed to be an even number in $ \mathbb{Z}^+ $ . On top of this , the term $ <nat:438> * <var:p> $ is even . $ <var:i> * <nat:12> $ is clearly even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:Z> <var:G> <var:A> <var:p> <var:H> <var:i> <var:z> <var:Y> : nat , Nat . odd ( <nat:208> * <var:H> + <nat:366> * <var:G> + <nat:136> * <var:A> + <nat:12> * <var:i> + <nat:498> * <var:z> + <nat:228> * <var:Y> + <nat:14> * <var:Z> + <nat:438> * <var:p> + <nat:239> ) = true . Proof . intros . assert ( <genH> : Nat . odd <nat:239> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:14> * <var:Z> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:208> * <var:H> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:228> * <var:Y> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:136> * <var:A> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:498> * <var:z> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:366> * <var:G> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:438> * <var:p> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:12> * <var:i> ) = true ) . { rewrite Nat . even_mul . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 