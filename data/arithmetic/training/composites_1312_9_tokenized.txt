\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \newtheorem{definition}{Definition} \begin{document} \begin{definition} Given we get $ <var:r> = <var:o> \cdot <var:U> \cdot <var:Q> \cdot <var:J> \cdot <var:T> \cdot <var:x> \cdot <var:b> \cdot <var:G> \cdot <var:V> $ given some positive integer $ <var:r> $ as well as such that $ <var:J> $ , $ <var:T> $ , $ <var:o> $ , $ <var:Q> $ , $ <var:b> $ , $ <var:V> $ , $ <var:U> $ , $ <var:x> $ , $ <var:G> \geq <nat:2> $ , we claim that $ <var:r> $ is <def:nine-composite> assuming some $ <var:b> $ , $ <var:T> $ , $ <var:G> $ , $ <var:V> $ , $ <var:x> $ , $ <var:U> $ , $ <var:Q> $ , $ <var:J> $ , $ <var:o> \in \mathbb{N} $ . \end{definition} \begin{theorem} $ <nat:15966720> = <var:r> $ is a <def:nine-composite> whole number . \end{theorem} \begin{proof} Take $ <var:U> = <nat:9> $ , $ <var:b> = <nat:11> $ , $ <var:x> = <nat:6> $ , $ <var:T> = <nat:2> $ , $ <var:V> = <nat:7> $ , $ <var:Q> = <nat:8> $ , $ <var:o> = <nat:5> $ , $ <var:G> = <nat:12> $ , and $ <var:J> = <nat:4> $ . Observe $ <var:G> = <nat:12> $ , $ <var:x> = <nat:6> $ , $ <var:V> = <nat:7> $ , $ <var:U> = <nat:9> $ , $ <var:b> = <nat:11> $ , $ <var:J> = <nat:4> $ , $ <var:Q> = <nat:8> $ , $ <var:o> = <nat:5> $ , and $ <var:T> = <nat:2> $ are greater than or equivalent to <nat:2> . Furthermore observe that still $ <nat:15966720> = <nat:2> \times <nat:6> \times <nat:12> \times <nat:11> \times <nat:5> \times <nat:9> \times <nat:4> \times <nat:7> \times <nat:8> $ . This hints the claim is valid . Because of this , <nat:15966720> is the multiplication between some $ <var:J> $ , $ <var:Q> $ , $ <var:V> $ , $ <var:b> $ , $ <var:o> $ , $ <var:G> $ , $ <var:T> $ , $ <var:U> $ , $ <var:x> $ has been verified . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:nine-composite> ( <var:r> : nat ) := exists <var:b> <var:T> <var:G> <var:V> <var:x> <var:U> <var:Q> <var:J> <var:o> : nat , ( <var:r> = <var:o> * <var:U> * <var:Q> * <var:J> * <var:T> * <var:x> * <var:b> * <var:G> * <var:V> ) /\ ( <var:J> >= <nat:2> ) /\ ( <var:T> >= <nat:2> ) /\ ( <var:o> >= <nat:2> ) /\ ( <var:Q> >= <nat:2> ) /\ ( <var:b> >= <nat:2> ) /\ ( <var:V> >= <nat:2> ) /\ ( <var:U> >= <nat:2> ) /\ ( <var:x> >= <nat:2> ) /\ ( <var:G> >= <nat:2> ) . Theorem <genP:1> : <def:nine-composite> <nat:15966720> . Proof . unfold <def:nine-composite> . exists <nat:11> . exists <nat:2> . exists <nat:12> . exists <nat:7> . exists <nat:6> . exists <nat:9> . exists <nat:8> . exists <nat:4> . exists <nat:5> . assert ( <genH> : <nat:12> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:6> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:7> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:9> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:11> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:4> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:8> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:5> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:2> >= <nat:2> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 