\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Take as given that assuming that there are positive integers $ <var:b> $ , $ <var:J> $ , $ <var:d> $ , $ <var:R> $ , $ <var:t> $ , $ <var:q> $ , $ <var:A> $ , $ <var:I> $ , $ <var:X> $ where $ <var:A> $ , $ <var:t> $ , $ <var:R> $ , $ <var:I> $ , $ <var:q> $ , $ <var:b> $ , $ <var:d> $ , $ <var:X> $ and $ <var:J> \geq <nat:2> $ . We say that some positive integer $ <var:L> $ is called a <def:nine-composite> positive integer if $ <var:A> * <var:X> * <var:d> * <var:b> * <var:q> * <var:J> * <var:R> * <var:t> * <var:I> = <var:L> $ . Hence the natural number <nat:79833600> is a <def:nine-composite> positive integer . \end{theorem} \begin{proof} Assume $ <var:A> = <nat:11> $ , $ <var:q> = <nat:7> $ , $ <var:J> = <nat:8> $ , $ <var:t> = <nat:4> $ , $ <var:I> = <nat:10> $ , $ <var:d> = <nat:12> $ , $ <var:X> = <nat:9> $ , $ <var:R> = <nat:5> $ , and $ <var:b> = <nat:6> $ . Notice $ <var:d> * <var:t> * <var:b> * <var:I> * <var:X> * <var:A> * <var:R> * <var:q> * <var:J> = <nat:79833600> $ . Further observe $ <nat:6> $ , $ <nat:10> $ , $ <nat:4> $ , $ <nat:11> $ , $ <nat:9> $ , $ <nat:7> $ , $ <nat:8> $ , $ <nat:12> $ , and $ <nat:5> $ are greater than or equivalent to <nat:2> . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:nine-composite> ( <var:L> : nat ) := exists <var:b> <var:J> <var:d> <var:R> <var:t> <var:q> <var:A> <var:I> <var:X> : nat , ( <var:A> >= <nat:2> ) /\ ( <var:t> >= <nat:2> ) /\ ( <var:R> >= <nat:2> ) /\ ( <var:I> >= <nat:2> ) /\ ( <var:q> >= <nat:2> ) /\ ( <var:b> >= <nat:2> ) /\ ( <var:d> >= <nat:2> ) /\ ( <var:X> >= <nat:2> ) /\ ( <var:J> >= <nat:2> ) /\ ( <var:A> * <var:X> * <var:d> * <var:b> * <var:q> * <var:J> * <var:R> * <var:t> * <var:I> = <var:L> ) . Theorem <genP:1> : <def:nine-composite> <nat:79833600> . Proof . unfold <def:nine-composite> . exists <nat:6> . exists <nat:8> . exists <nat:12> . exists <nat:5> . exists <nat:4> . exists <nat:7> . exists <nat:11> . exists <nat:10> . exists <nat:9> . assert ( <genH> : <nat:6> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:10> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:4> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:11> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:9> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:7> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:8> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:12> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:5> >= <nat:2> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 