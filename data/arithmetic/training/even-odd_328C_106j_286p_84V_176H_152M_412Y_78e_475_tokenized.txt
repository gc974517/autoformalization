\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:176> <var:H> + <nat:328> <var:C> + <nat:78> <var:e> + <nat:412> <var:Y> + <var:V> <nat:84> + <var:M> <nat:152> + <var:p> <nat:286> + <nat:106> <var:j> + <nat:475> $ will be odd given some natural terms $ <var:M> $ , $ <var:p> $ , $ <var:C> $ , $ <var:e> $ , $ <var:H> $ , $ <var:V> $ , $ <var:j> $ , and $ <var:Y> $ . \end{theorem} \begin{proof} The term $ <var:C> \times <nat:328> $ is known to be an even element of $ \mathbb{N} $ . This must be true as a consequence that the natural number $ <nat:328> $ is by its very nature an even number . Building on , the term $ <nat:106> \times <var:j> $ is obviously even . This is proven since the product of an even number in $ \mathbb{N} $ and any whole number must be even , which is proven from the knowledge the leading term $ <nat:106> $ is guaranteed to be fundamentally an even positive integer . Further , the product $ <nat:286> \times <var:p> $ is known to be an even integer from the knowledge the positive integer $ <nat:286> $ is an even element of $ \mathbb{Z}^+ $ . $ <var:V> \times <nat:84> $ is trivially even from the knowledge the positive integer $ <nat:84> $ is trivially an even number in $ \mathbb{N} $ . On top of this , notice the pair $ <var:H> \times <nat:176> $ is obviously an even element of $ \mathbb{Z}^+ $ . This fact is proven from the knowledge the multiplication of an even number in $ \mathbb{Z}^+ $ with any natural number is guaranteed to be an even natural number plus the natural number $ <nat:176> $ is obviously by its very nature an even number . The positive integer $ <nat:152> $ is known to be an even whole number . Hence , the product $ <nat:152> \times <var:M> $ must be even too . Likewise , the pair $ <var:Y> \times <nat:412> $ is known as even from the knowledge taking the product of an even natural number with any positive integer must be in itself an even positive integer , which is true as a consequence that the number $ <nat:412> $ is guaranteed to be even . The coefficient $ <nat:78> $ is trivially even . Then , the term $ <nat:78> \times <var:e> $ must be even in addition . Remember that the totaling between even naturals collectively with an odd number is guaranteed to be odd . Notice $ <nat:475> $ is known to be odd . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:M> <var:p> <var:C> <var:e> <var:H> <var:V> <var:j> <var:Y> : nat , Nat . odd ( <nat:176> * <var:H> + <nat:328> * <var:C> + <nat:78> * <var:e> + <nat:412> * <var:Y> + <nat:84> * <var:V> + <nat:152> * <var:M> + <nat:286> * <var:p> + <nat:106> * <var:j> + <nat:475> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:328> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:328> * <var:C> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:106> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:106> * <var:j> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:286> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:286> * <var:p> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:84> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:84> * <var:V> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:176> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:176> * <var:H> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:152> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:152> * <var:M> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:412> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:412> * <var:Y> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:78> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:78> * <var:e> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . assert ( <genH> : Nat . odd <nat:475> = true ) . { auto . } rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 