\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:150> \cdot <var:D> + <nat:464> \cdot <var:I> + <var:b> \cdot <nat:310> + <nat:139> + <var:X> \cdot <nat:42> + <nat:22> \cdot <var:v> + <var:R> \cdot <nat:466> + <nat:66> \cdot <var:q> + <var:k> \cdot <nat:84> $ must be odd taking every unknowns $ <var:X> $ , $ <var:v> $ , $ <var:k> $ , $ <var:D> $ , $ <var:I> $ , $ <var:b> $ , $ <var:q> $ , and $ <var:R> $ . \end{theorem} \begin{proof} The formula $ <nat:22> \cdot <var:v> + <var:I> \cdot <nat:464> + <var:k> \cdot <nat:84> + <nat:66> \cdot <var:q> + <var:R> \cdot <nat:466> + <nat:310> \cdot <var:b> + <nat:150> \cdot <var:D> + <nat:42> \cdot <var:X> $ is known to be even . The coefficients $ <nat:22> $ , $ <nat:464> $ , $ <nat:84> $ , $ <nat:66> $ , $ <nat:466> $ , $ <nat:310> $ , $ <nat:150> $ , plus $ <nat:42> $ are even natural numbers . Thus , the pairs $ <nat:22> \cdot <var:v> $ , $ <var:I> \cdot <nat:464> $ , $ <var:k> \cdot <nat:84> $ , $ <nat:66> \cdot <var:q> $ , $ <var:R> \cdot <nat:466> $ , $ <nat:310> \cdot <var:b> $ , $ <var:D> \cdot <nat:150> $ , and $ <nat:42> \cdot <var:X> $ is guaranteed to be even too . From the fact taking the product between an even number with any element of $ \mathbb{Z}^+ $ is guaranteed to be even the claim is true . The summation of even positive integers successively with an odd element of $ \mathbb{N} $ is odd . Remember that $ <nat:139> $ is guaranteed to be odd . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:X> <var:v> <var:k> <var:D> <var:I> <var:b> <var:q> <var:R> : nat , Nat . odd ( <nat:150> * <var:D> + <nat:464> * <var:I> + <nat:310> * <var:b> + <nat:42> * <var:X> + <nat:22> * <var:v> + <nat:466> * <var:R> + <nat:66> * <var:q> + <nat:84> * <var:k> + <nat:139> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:22> = true ) . { auto . } assert ( <genH> : Nat . even <nat:464> = true ) . { auto . } assert ( <genH> : Nat . even <nat:84> = true ) . { auto . } assert ( <genH> : Nat . even <nat:66> = true ) . { auto . } assert ( <genH> : Nat . even <nat:466> = true ) . { auto . } assert ( <genH> : Nat . even <nat:310> = true ) . { auto . } assert ( <genH> : Nat . even <nat:150> = true ) . { auto . } assert ( <genH> : Nat . even <nat:42> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:22> * <var:v> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:464> * <var:I> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:84> * <var:k> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:66> * <var:q> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:466> * <var:R> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:310> * <var:b> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:150> * <var:D> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:42> * <var:X> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:150> * <var:D> + <nat:464> * <var:I> + <nat:310> * <var:b> + <nat:42> * <var:X> + <nat:22> * <var:v> + <nat:466> * <var:R> + <nat:66> * <var:q> + <nat:84> * <var:k> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . assert ( <genH> : Nat . odd <nat:139> = true ) . { auto . } rewrite <- Nat . negb_even . rewrite <genH> . rewrite <genH> . auto . Qed . 