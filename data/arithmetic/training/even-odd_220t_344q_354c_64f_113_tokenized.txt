\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} For all terms $ <var:f> $ , $ <var:q> $ , $ <var:t> $ , and $ <var:c> $ the expression $ <nat:113> + <nat:220> <var:t> + <var:c> <nat:354> + <nat:64> <var:f> + <nat:344> <var:q> $ is odd . \end{theorem} \begin{proof} The addition between even elements of $ \mathbb{N} $ together and an odd element of $ \mathbb{N} $ will be odd . So , our theorem is true . We know $ <nat:113> $ is guaranteed to be an odd natural number . Our lemma must be true as a consequence that $ <var:t> \cdot <nat:220> + <var:q> \cdot <nat:344> + <nat:354> \cdot <var:c> + <nat:64> \cdot <var:f> $ is obviously even . Remember that the products $ <var:t> <nat:220> $ , $ <var:q> <nat:344> $ , $ <var:c> <nat:354> $ , and $ <var:f> <nat:64> $ are known to be even from the knowledge the integers $ <nat:220> $ , $ <nat:344> $ , $ <nat:354> $ , additionally $ <nat:64> $ are obviously by themselves even elements of $ \mathbb{Z}^+ $ . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:f> <var:q> <var:t> <var:c> : nat , Nat . odd ( <nat:220> * <var:t> + <nat:354> * <var:c> + <nat:64> * <var:f> + <nat:344> * <var:q> + <nat:113> ) = true . Proof . intros . rewrite Nat . odd_add . assert ( <genH> : Nat . odd <nat:113> = true ) . { auto . } assert ( <genH> : Nat . even <nat:220> = true ) . { auto . } assert ( <genH> : Nat . even <nat:344> = true ) . { auto . } assert ( <genH> : Nat . even <nat:354> = true ) . { auto . } assert ( <genH> : Nat . even <nat:64> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:220> * <var:t> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:344> * <var:q> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:354> * <var:c> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:64> * <var:f> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:220> * <var:t> + <nat:354> * <var:c> + <nat:64> * <var:f> + <nat:344> * <var:q> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite <- Nat . negb_even . rewrite <genH> . rewrite <genH> . auto . Qed . 