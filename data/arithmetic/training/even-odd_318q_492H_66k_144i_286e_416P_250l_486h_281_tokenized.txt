\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:q> * <nat:318> + <nat:281> + <nat:492> * <var:H> + <var:k> * <nat:66> + <var:i> * <nat:144> + <nat:286> * <var:e> + <var:P> * <nat:416> + <var:l> * <nat:250> + <var:h> * <nat:486> $ is odd given some unknowns $ <var:l> $ , $ <var:h> $ , $ <var:P> $ , $ <var:H> $ , $ <var:e> $ , $ <var:q> $ , $ <var:i> $ , and $ <var:k> $ . \end{theorem} \begin{proof} It can be proven that the proposition must be true . We know $ <nat:281> $ is known as an odd integer . The terms $ <nat:286> \times <var:e> $ , $ <nat:318> \times <var:q> $ , $ <var:h> \times <nat:486> $ , $ <var:i> \times <nat:144> $ , and moreover $ <var:k> \times <nat:66> $ must be even . This must be true as a consequence that multiplying between an even natural and any number in $ \mathbb{Z}^+ $ is guaranteed to be even . What's more , observe that the term $ <nat:492> \times <var:H> $ is known to be even . In addition , remember the pair $ <var:P> \times <nat:416> $ is trivially an even element of $ \mathbb{N} $ . Further , the term $ <var:l> \times <nat:250> $ is an even integer . This must be true from the knowledge the product of an even element of $ \mathbb{N} $ with any number in $ \mathbb{N} $ must be even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:l> <var:h> <var:P> <var:H> <var:e> <var:q> <var:i> <var:k> : nat , Nat . odd ( <nat:318> * <var:q> + <nat:492> * <var:H> + <nat:66> * <var:k> + <nat:144> * <var:i> + <nat:286> * <var:e> + <nat:416> * <var:P> + <nat:250> * <var:l> + <nat:486> * <var:h> + <nat:281> ) = true . Proof . intros . assert ( <genH> : Nat . odd <nat:281> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:286> * <var:e> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:318> * <var:q> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:486> * <var:h> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:144> * <var:i> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:66> * <var:k> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:492> * <var:H> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:416> * <var:P> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:250> * <var:l> ) = true ) . { rewrite Nat . even_mul . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 