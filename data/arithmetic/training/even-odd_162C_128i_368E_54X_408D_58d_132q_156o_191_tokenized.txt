\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:162> * <var:C> + <nat:128> * <var:i> + <nat:191> + <nat:368> * <var:E> + <var:X> * <nat:54> + <nat:408> * <var:D> + <var:d> * <nat:58> + <var:q> * <nat:132> + <var:o> * <nat:156> $ is odd . \end{theorem} \begin{proof} The pairs $ <nat:162> \times <var:C> $ , $ <nat:156> \times <var:o> $ , $ <var:q> \times <nat:132> $ , $ <var:d> \times <nat:58> $ , $ <var:X> \times <nat:54> $ , $ <nat:368> \times <var:E> $ , and likewise $ <var:i> \times <nat:128> $ will be even numbers in $ \mathbb{N} $ because the product of an even number in $ \mathbb{Z}^+ $ with any number will be itself an even natural number . The product $ <var:D> \times <nat:408> $ is obviously even . Recall that the totaling between an even number in $ \mathbb{Z}^+ $ with an odd element of $ \mathbb{Z}^+ $ is odd . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:C> <var:i> <var:E> <var:X> <var:D> <var:d> <var:q> <var:o> : nat , Nat . odd ( <nat:162> * <var:C> + <nat:128> * <var:i> + <nat:368> * <var:E> + <nat:54> * <var:X> + <nat:408> * <var:D> + <nat:58> * <var:d> + <nat:132> * <var:q> + <nat:156> * <var:o> + <nat:191> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:162> * <var:C> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:156> * <var:o> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:132> * <var:q> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:58> * <var:d> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:54> * <var:X> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:368> * <var:E> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:128> * <var:i> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:408> * <var:D> ) = true ) . { rewrite Nat . even_mul . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 