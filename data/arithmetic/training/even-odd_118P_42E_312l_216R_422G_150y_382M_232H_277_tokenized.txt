\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:G> * <nat:422> + <nat:118> * <var:P> + <nat:277> + <var:y> * <nat:150> + <nat:216> * <var:R> + <nat:382> * <var:M> + <var:H> * <nat:232> + <nat:312> * <var:l> + <var:E> * <nat:42> $ will be odd . \end{theorem} \begin{proof} We utilize the understanding that the formula $ <nat:118> <var:P> + <var:E> <nat:42> + <nat:277> + <var:M> <nat:382> + <var:y> <nat:150> + <var:H> <nat:232> + <var:R> <nat:216> + <nat:422> <var:G> + <var:l> <nat:312> $ is obviously odd from the knowledge the formula $ <var:H> <nat:232> + <var:P> <nat:118> + <nat:382> <var:M> + <nat:42> <var:E> + <nat:422> <var:G> + <var:R> <nat:216> + <var:l> <nat:312> + <nat:150> <var:y> $ is guaranteed to be even , because the product of even positive integers must be by its very nature an even natural . The leading terms $ <nat:118> $ , $ <nat:382> $ , $ <nat:312> $ , $ <nat:232> $ , $ <nat:150> $ , as well as $ <nat:422> $ will be even naturals In addition , we know that the positive integer $ <nat:216> $ is obviously even Building on , the whole number $ <nat:42> $ is trivially even We verify the expression $ <nat:118> <var:P> + <var:E> <nat:42> + <var:l> <nat:312> + <nat:216> <var:R> + <nat:277> + <nat:422> <var:G> + <nat:150> <var:y> + <nat:382> <var:M> + <nat:232> <var:H> $ is odd by employing that the summing of an even natural number and an odd natural number will be odd . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:G> <var:P> <var:y> <var:R> <var:M> <var:H> <var:l> <var:E> : nat , Nat . odd ( <nat:422> * <var:G> + <nat:118> * <var:P> + <nat:150> * <var:y> + <nat:216> * <var:R> + <nat:382> * <var:M> + <nat:232> * <var:H> + <nat:312> * <var:l> + <nat:42> * <var:E> + <nat:277> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:118> = true ) . { auto . } assert ( <genH> : Nat . even <nat:382> = true ) . { auto . } assert ( <genH> : Nat . even <nat:312> = true ) . { auto . } assert ( <genH> : Nat . even <nat:232> = true ) . { auto . } assert ( <genH> : Nat . even <nat:150> = true ) . { auto . } assert ( <genH> : Nat . even <nat:422> = true ) . { auto . } assert ( <genH> : Nat . even <nat:216> = true ) . { auto . } assert ( <genH> : Nat . even <nat:42> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:422> * <var:G> + <nat:118> * <var:P> + <nat:150> * <var:y> + <nat:216> * <var:R> + <nat:382> * <var:M> + <nat:232> * <var:H> + <nat:312> * <var:l> + <nat:42> * <var:E> ) = true ) . { repeat rewrite Nat . even_add . repeat rewrite Nat . even_mul . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . auto . Qed . 