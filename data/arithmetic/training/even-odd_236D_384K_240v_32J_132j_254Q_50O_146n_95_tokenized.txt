\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Given some $ <var:O> $ , $ <var:j> $ , $ <var:J> $ , $ <var:Q> $ , $ <var:n> $ , $ <var:v> $ , $ <var:D> $ , and $ <var:K> \in \mathbb{N} $ the summation $ <nat:384> <var:K> + <var:n> <nat:146> + <nat:50> <var:O> + <nat:254> <var:Q> + <nat:95> + <var:D> <nat:236> + <nat:240> <var:v> + <nat:32> <var:J> + <var:j> <nat:132> $ will be odd . \end{theorem} \begin{proof} $ <nat:50> * <var:O> + <var:J> * <nat:32> + <nat:384> * <var:K> + <var:n> * <nat:146> + <nat:95> + <var:D> * <nat:236> + <var:Q> * <nat:254> + <nat:240> * <var:v> + <var:j> * <nat:132> $ is clearly odd by reason that $ <nat:236> <var:D> + <var:K> <nat:384> + <var:v> <nat:240> + <nat:32> <var:J> + <var:j> <nat:132> + <var:Q> <nat:254> + <nat:50> <var:O> + <nat:146> <var:n> $ is even . The products $ <var:O> \times <nat:50> $ , $ <nat:254> \times <var:Q> $ , in addition to $ <var:D> \times <nat:236> $ are known to be even . What's more , see the product $ <nat:32> \times <var:J> $ is known as even . Take note that the pair $ <nat:384> \times <var:K> $ is even . The product $ <var:v> \times <nat:240> $ is guaranteed to be even from the fact taking the product between an even number in $ \mathbb{N} $ and a natural must be an even number in $ \mathbb{N} $ . Recall that the term $ <nat:132> \times <var:j> $ is known as even . Furthermore , see that the product $ <var:n> \times <nat:146> $ is known as even since taking the product between an even element of $ \mathbb{Z}^+ $ and a number in $ \mathbb{Z}^+ $ is even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:O> <var:j> <var:J> <var:Q> <var:n> <var:v> <var:D> <var:K> : nat , Nat . odd ( <nat:384> * <var:K> + <nat:146> * <var:n> + <nat:50> * <var:O> + <nat:254> * <var:Q> + <nat:236> * <var:D> + <nat:240> * <var:v> + <nat:32> * <var:J> + <nat:132> * <var:j> + <nat:95> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:50> * <var:O> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:254> * <var:Q> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:236> * <var:D> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:32> * <var:J> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:384> * <var:K> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:240> * <var:v> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:132> * <var:j> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:146> * <var:n> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:384> * <var:K> + <nat:146> * <var:n> + <nat:50> * <var:O> + <nat:254> * <var:Q> + <nat:236> * <var:D> + <nat:240> * <var:v> + <nat:32> * <var:J> + <nat:132> * <var:j> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . auto . Qed . 