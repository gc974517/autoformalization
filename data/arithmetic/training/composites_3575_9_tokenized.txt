\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \newtheorem{definition}{Definition} \begin{document} \begin{definition} $ \exists <var:V> $ , $ <var:v> $ , $ <var:C> $ , $ <var:P> $ , $ <var:m> $ , $ <var:T> $ , $ <var:a> $ , $ <var:L> $ , $ <var:t> \in \mathbb{N} $ greater than <nat:1> . Define that some integer $ <var:U> $ will be considered a <def:nine-composite> whole number if $ <var:T> \times <var:a> \times <var:V> \times <var:t> \times <var:P> \times <var:C> \times <var:m> \times <var:L> \times <var:v> = <var:U> $ . \end{definition} \begin{theorem} The whole number <nat:23950080> is a <def:nine-composite> natural number . \end{theorem} \begin{proof} Allow $ <var:t> = <nat:9> $ , $ <var:v> = <nat:3> $ , $ <var:m> = <nat:11> $ , $ <var:P> = <nat:2> $ , $ <var:a> = <nat:12> $ , $ <var:L> = <nat:8> $ , $ <var:T> = <nat:7> $ , $ <var:V> = <nat:6> $ , and $ <var:C> = <nat:10> $ . We demonstrate $ <nat:23950080> = <var:C> \cdot <var:V> \cdot <var:P> \cdot <var:t> \cdot <var:L> \cdot <var:v> \cdot <var:a> \cdot <var:m> \cdot <var:T> $ . Observe $ <nat:9> $ , $ <nat:8> $ , $ <nat:2> $ , $ <nat:11> $ , $ <nat:12> $ , $ <nat:3> $ , $ <nat:7> $ , $ <nat:6> $ , and $ <nat:10> > <nat:1> $ . Additionally notice that moreover $ <nat:23950080> = <var:t> \cdot <var:L> \cdot <var:v> \cdot <var:a> \cdot <var:m> \cdot <var:T> \cdot <var:C> \cdot <var:V> \cdot <var:P> $ . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:nine-composite> ( <var:U> : nat ) := exists <var:V> <var:v> <var:C> <var:P> <var:m> <var:T> <var:a> <var:L> <var:t> : nat , ( <var:V> > <nat:1> ) /\ ( <var:v> > <nat:1> ) /\ ( <var:C> > <nat:1> ) /\ ( <var:P> > <nat:1> ) /\ ( <var:m> > <nat:1> ) /\ ( <var:T> > <nat:1> ) /\ ( <var:a> > <nat:1> ) /\ ( <var:L> > <nat:1> ) /\ ( <var:t> > <nat:1> ) /\ ( <var:T> * <var:a> * <var:V> * <var:t> * <var:P> * <var:C> * <var:m> * <var:L> * <var:v> = <var:U> ) . Theorem <genP:1> : <def:nine-composite> <nat:23950080> . Proof . unfold <def:nine-composite> . exists <nat:6> . exists <nat:3> . exists <nat:10> . exists <nat:2> . exists <nat:11> . exists <nat:7> . exists <nat:12> . exists <nat:8> . exists <nat:9> . assert ( <genH> : <nat:9> > <nat:1> ) . { lia . } assert ( <genH> : <nat:8> > <nat:1> ) . { lia . } assert ( <genH> : <nat:2> > <nat:1> ) . { lia . } assert ( <genH> : <nat:11> > <nat:1> ) . { lia . } assert ( <genH> : <nat:12> > <nat:1> ) . { lia . } assert ( <genH> : <nat:3> > <nat:1> ) . { lia . } assert ( <genH> : <nat:7> > <nat:1> ) . { lia . } assert ( <genH> : <nat:6> > <nat:1> ) . { lia . } assert ( <genH> : <nat:10> > <nat:1> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 