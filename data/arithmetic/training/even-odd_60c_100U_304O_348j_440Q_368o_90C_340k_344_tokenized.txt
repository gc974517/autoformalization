\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:c> * <nat:60> + <nat:100> * <var:U> + <var:O> * <nat:304> + <nat:344> + <var:j> * <nat:348> + <nat:440> * <var:Q> + <var:o> * <nat:368> + <var:C> * <nat:90> + <var:k> * <nat:340> $ is even . \end{theorem} \begin{proof} On top of this , the positive integers $ <nat:60> $ , $ <nat:100> $ , $ <nat:304> $ , $ <nat:348> $ , $ <nat:440> $ , $ <nat:368> $ , $ <nat:90> $ , as well as $ <nat:340> $ will be even . Then , the products $ <nat:60> \cdot <var:c> $ , $ <nat:100> \cdot <var:U> $ , $ <var:O> \cdot <nat:304> $ , $ <nat:348> \cdot <var:j> $ , $ <var:Q> \cdot <nat:440> $ , $ <var:o> \cdot <nat:368> $ , $ <var:C> \cdot <nat:90> $ , as well as $ <var:k> \cdot <nat:340> $ is guaranteed to be even in addition . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:c> <var:U> <var:O> <var:j> <var:Q> <var:o> <var:C> <var:k> : nat , Nat . even ( <nat:60> * <var:c> + <nat:100> * <var:U> + <nat:304> * <var:O> + <nat:348> * <var:j> + <nat:440> * <var:Q> + <nat:368> * <var:o> + <nat:90> * <var:C> + <nat:340> * <var:k> + <nat:344> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:60> = true ) . { auto . } assert ( <genH> : Nat . even <nat:100> = true ) . { auto . } assert ( <genH> : Nat . even <nat:304> = true ) . { auto . } assert ( <genH> : Nat . even <nat:348> = true ) . { auto . } assert ( <genH> : Nat . even <nat:440> = true ) . { auto . } assert ( <genH> : Nat . even <nat:368> = true ) . { auto . } assert ( <genH> : Nat . even <nat:90> = true ) . { auto . } assert ( <genH> : Nat . even <nat:340> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:60> * <var:c> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:100> * <var:U> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:304> * <var:O> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:348> * <var:j> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:440> * <var:Q> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:368> * <var:o> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:90> * <var:C> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:340> * <var:k> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 