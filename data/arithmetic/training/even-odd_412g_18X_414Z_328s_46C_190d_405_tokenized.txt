\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:190> \cdot <var:d> + <nat:412> \cdot <var:g> + <var:X> \cdot <nat:18> + <var:Z> \cdot <nat:414> + <nat:405> + <nat:328> \cdot <var:s> + <var:C> \cdot <nat:46> $ is guaranteed to be odd for all terms $ <var:g> $ , $ <var:d> $ , $ <var:X> $ , $ <var:s> $ , $ <var:Z> $ , and $ <var:C> $ . \end{theorem} \begin{proof} The totaling of even elements of $ \mathbb{Z}^+ $ collectively and an odd whole number is an odd natural number . Hence , this claim must be true . Notice that $ <nat:405> $ is clearly odd . The coefficients $ <nat:190> $ and moreover $ <nat:412> $ are obviously even integers . Accordingly , the pairs $ <var:d> \cdot <nat:190> $ in addition to $ <nat:412> \cdot <var:g> $ is even additionally . We know the natural numbers $ <nat:414> $ and also $ <nat:46> $ are obviously even . In consequence , the products $ <nat:414> \cdot <var:Z> $ and $ <var:C> \cdot <nat:46> $ must be even at the same time . See the number $ <nat:18> $ is guaranteed to be an even number . Accordingly , $ <nat:18> \cdot <var:X> $ must be even as well . Take note the number $ <nat:328> $ is known as an even number in $ \mathbb{Z}^+ $ . Hence , the product $ <var:s> \cdot <nat:328> $ is even in addition . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:g> <var:d> <var:X> <var:s> <var:Z> <var:C> : nat , Nat . odd ( <nat:190> * <var:d> + <nat:412> * <var:g> + <nat:18> * <var:X> + <nat:414> * <var:Z> + <nat:328> * <var:s> + <nat:46> * <var:C> + <nat:405> ) = true . Proof . intros . rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . assert ( <genH> : Nat . odd <nat:405> = true ) . { auto . } assert ( <genH> : Nat . even <nat:190> = true ) . { auto . } assert ( <genH> : Nat . even <nat:412> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:190> * <var:d> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:412> * <var:g> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:414> = true ) . { auto . } assert ( <genH> : Nat . even <nat:46> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:414> * <var:Z> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:46> * <var:C> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:18> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:18> * <var:X> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:328> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:328> * <var:s> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 