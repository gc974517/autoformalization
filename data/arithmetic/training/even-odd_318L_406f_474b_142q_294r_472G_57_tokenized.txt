\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:472> <var:G> + <var:q> <nat:142> + <var:b> <nat:474> + <nat:57> + <var:r> <nat:294> + <var:f> <nat:406> + <var:L> <nat:318> $ will be odd using any positive integers $ <var:b> $ , $ <var:L> $ , $ <var:G> $ , $ <var:r> $ , $ <var:q> $ , and $ <var:f> $ . \end{theorem} \begin{proof} We demonstrate $ <var:f> \cdot <nat:406> + <nat:472> \cdot <var:G> + <nat:318> \cdot <var:L> + <nat:142> \cdot <var:q> + <var:b> \cdot <nat:474> + <nat:57> + <var:r> \cdot <nat:294> $ must be odd . $ <nat:406> <var:f> + <nat:57> + <var:G> <nat:472> + <var:L> <nat:318> + <var:b> <nat:474> + <nat:142> <var:q> + <var:r> <nat:294> $ is known as odd from the knowledge the sum $ <nat:318> <var:L> + <nat:406> <var:f> + <var:b> <nat:474> + <var:q> <nat:142> + <var:r> <nat:294> + <var:G> <nat:472> $ is trivially even . What's more , notice the pairs $ <nat:318> \cdot <var:L> $ , $ <nat:406> \cdot <var:f> $ , $ <var:b> \cdot <nat:474> $ , $ <nat:142> \cdot <var:q> $ , $ <var:r> \cdot <nat:294> $ , additionally $ <nat:472> \cdot <var:G> $ are guaranteed to be even natural numbers since the coefficients $ <nat:318> $ , $ <nat:406> $ , $ <nat:474> $ , $ <nat:142> $ , $ <nat:294> $ , additionally $ <nat:472> $ are obviously even . Our lemma is proven from the knowledge the multiplication between an even number in $ \mathbb{N} $ and a positive integer is trivially an even whole number . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:b> <var:L> <var:G> <var:r> <var:q> <var:f> : nat , Nat . odd ( <nat:472> * <var:G> + <nat:142> * <var:q> + <nat:474> * <var:b> + <nat:294> * <var:r> + <nat:406> * <var:f> + <nat:318> * <var:L> + <nat:57> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:318> = true ) . { auto . } assert ( <genH> : Nat . even <nat:406> = true ) . { auto . } assert ( <genH> : Nat . even <nat:474> = true ) . { auto . } assert ( <genH> : Nat . even <nat:142> = true ) . { auto . } assert ( <genH> : Nat . even <nat:294> = true ) . { auto . } assert ( <genH> : Nat . even <nat:472> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:318> * <var:L> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:406> * <var:f> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:474> * <var:b> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:142> * <var:q> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:294> * <var:r> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:472> * <var:G> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:472> * <var:G> + <nat:142> * <var:q> + <nat:474> * <var:b> + <nat:294> * <var:r> + <nat:406> * <var:f> + <nat:318> * <var:L> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . auto . Qed . 