\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:156> <var:V> + <nat:7> + <var:R> <nat:288> + <var:A> <nat:166> + <var:H> <nat:416> $ must be odd for some $ <var:H> $ , $ <var:A> $ , $ <var:V> $ , and $ <var:R> \in \mathbb{N} $ . \end{theorem} \begin{proof} We show the proposition is proven . We know $ <nat:7> $ is clearly odd . The term $ <nat:166> \times <var:A> $ is an even number in $ \mathbb{Z}^+ $ as a consequence that the product between an even number with an arbitrary element of $ \mathbb{N} $ will be even as well as the coefficient $ <nat:166> $ is trivially an even number . Recall that the leading term $ <nat:288> $ is known as an even number in $ \mathbb{Z}^+ $ . Then , the term $ <nat:288> \times <var:R> $ is even too . Building on , we know that the coefficient $ <nat:156> $ is guaranteed to be an even element of $ \mathbb{N} $ . In consequence , the pair $ <var:V> \times <nat:156> $ is guaranteed to be even also . In addition to this , remember that the pair $ <var:H> \times <nat:416> $ is obviously even . This fact must be true because taking the product between an even number and an arbitrary number will be fundamentally an even integer , which is proven by reason that the whole number $ <nat:416> $ is clearly even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:H> <var:A> <var:V> <var:R> : nat , Nat . odd ( <nat:156> * <var:V> + <nat:288> * <var:R> + <nat:166> * <var:A> + <nat:416> * <var:H> + <nat:7> ) = true . Proof . intros . assert ( <genH> : Nat . odd <nat:7> = true ) . { auto . } assert ( <genH> : Nat . even <nat:166> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:166> * <var:A> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:288> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:288> * <var:R> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:156> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:156> * <var:V> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:416> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:416> * <var:H> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 