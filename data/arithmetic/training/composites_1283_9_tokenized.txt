\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \newtheorem{definition}{Definition} \begin{document} \begin{definition} Let $ <var:r> $ , $ <var:I> $ , $ <var:e> $ , $ <var:k> $ , $ <var:S> $ , $ <var:b> $ , $ <var:x> $ , $ <var:t> $ , $ <var:Q> $ be natural numbers . We define that some positive integer $ <var:C> $ will be considered as a <def:nine-composite> number assuming $ <var:S> * <var:b> * <var:t> * <var:x> * <var:I> * <var:Q> * <var:r> * <var:k> * <var:e> = <var:C> $ plus greater than <nat:1> . \end{definition} \begin{theorem} The positive integer <nat:23950080> is a <def:nine-composite> number . \end{theorem} \begin{proof} Recall a <def:nine-composite> positive integer is the product between $ <var:x> $ , $ <var:r> $ , $ <var:t> $ , $ <var:k> $ , $ <var:I> $ , $ <var:e> $ , $ <var:b> $ , $ <var:Q> $ and $ <var:S> $ such that $ <var:k> $ , $ <var:r> $ , $ <var:Q> $ , $ <var:t> $ , $ <var:S> $ , $ <var:I> $ , $ <var:x> $ , $ <var:b> $ , $ <var:e> > <nat:1> $ . Notice $ <nat:6> $ , $ <nat:3> $ , $ <nat:12> $ , $ <nat:8> $ , $ <nat:7> $ , $ <nat:4> $ , $ <nat:9> $ , $ <nat:5> $ , and $ <nat:11> $ are greater than <nat:1> . Further observe additionally $ <nat:5> * <nat:3> * <nat:12> * <nat:8> * <nat:11> * <nat:9> * <nat:4> * <nat:7> * <nat:6> = <nat:23950080> $ . This shows <nat:23950080> is a <def:nine-composite> whole number . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:nine-composite> ( <var:C> : nat ) := exists <var:r> <var:I> <var:e> <var:k> <var:S> <var:b> <var:x> <var:t> <var:Q> : nat , ( <var:S> * <var:b> * <var:t> * <var:x> * <var:I> * <var:Q> * <var:r> * <var:k> * <var:e> = <var:C> ) /\ ( <var:r> > <nat:1> ) /\ ( <var:I> > <nat:1> ) /\ ( <var:e> > <nat:1> ) /\ ( <var:k> > <nat:1> ) /\ ( <var:S> > <nat:1> ) /\ ( <var:b> > <nat:1> ) /\ ( <var:x> > <nat:1> ) /\ ( <var:t> > <nat:1> ) /\ ( <var:Q> > <nat:1> ) . Theorem <genP:1> : <def:nine-composite> <nat:23950080> . Proof . unfold <def:nine-composite> . assert ( <genH> : <nat:6> > <nat:1> ) . { lia . } assert ( <genH> : <nat:3> > <nat:1> ) . { lia . } assert ( <genH> : <nat:12> > <nat:1> ) . { lia . } assert ( <genH> : <nat:8> > <nat:1> ) . { lia . } assert ( <genH> : <nat:7> > <nat:1> ) . { lia . } assert ( <genH> : <nat:4> > <nat:1> ) . { lia . } assert ( <genH> : <nat:9> > <nat:1> ) . { lia . } assert ( <genH> : <nat:5> > <nat:1> ) . { lia . } assert ( <genH> : <nat:11> > <nat:1> ) . { lia . } exists <nat:6> . exists <nat:9> . exists <nat:8> . exists <nat:4> . exists <nat:5> . exists <nat:3> . exists <nat:7> . exists <nat:11> . exists <nat:12> . repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 