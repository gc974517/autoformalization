\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:L> \cdot <nat:336> + <var:q> \cdot <nat:74> + <nat:342> + <nat:496> \cdot <var:m> + <nat:50> \cdot <var:i> + <nat:18> \cdot <var:r> + <nat:480> \cdot <var:C> $ will be even assuming every $ <var:m> $ , $ <var:r> $ , $ <var:L> $ , $ <var:C> $ , $ <var:i> $ , and $ <var:q> \in \mathbb{N} $ . \end{theorem} \begin{proof} Building on , observe the natural numbers $ <nat:336> $ , $ <nat:74> $ , $ <nat:496> $ , $ <nat:50> $ , $ <nat:18> $ , plus $ <nat:480> $ are known to be even positive integers . For this reason , the pairs $ <nat:336> <var:L> $ , $ <nat:74> <var:q> $ , $ <nat:496> <var:m> $ , $ <var:i> <nat:50> $ , $ <nat:18> <var:r> $ , and moreover $ <nat:480> <var:C> $ must be even also . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:m> <var:r> <var:L> <var:C> <var:i> <var:q> : nat , Nat . even ( <nat:336> * <var:L> + <nat:74> * <var:q> + <nat:496> * <var:m> + <nat:50> * <var:i> + <nat:18> * <var:r> + <nat:480> * <var:C> + <nat:342> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:336> = true ) . { auto . } assert ( <genH> : Nat . even <nat:74> = true ) . { auto . } assert ( <genH> : Nat . even <nat:496> = true ) . { auto . } assert ( <genH> : Nat . even <nat:50> = true ) . { auto . } assert ( <genH> : Nat . even <nat:18> = true ) . { auto . } assert ( <genH> : Nat . even <nat:480> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:336> * <var:L> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:74> * <var:q> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:496> * <var:m> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:50> * <var:i> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:18> * <var:r> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:480> * <var:C> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 