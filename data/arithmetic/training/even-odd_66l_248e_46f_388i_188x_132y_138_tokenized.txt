\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:188> <var:x> + <nat:248> <var:e> + <var:f> <nat:46> + <var:l> <nat:66> + <nat:132> <var:y> + <nat:138> + <var:i> <nat:388> $ is even . \end{theorem} \begin{proof} $ <nat:188> <var:x> + <nat:138> + <var:y> <nat:132> + <var:f> <nat:46> + <nat:388> <var:i> + <nat:66> <var:l> + <var:e> <nat:248> $ is obviously even from the knowledge the formula $ <nat:66> \times <var:l> + <var:e> \times <nat:248> + <var:f> \times <nat:46> + <nat:388> \times <var:i> + <nat:188> \times <var:x> + <var:y> \times <nat:132> $ is guaranteed to be even . The whole numbers $ <nat:66> $ , $ <nat:248> $ , $ <nat:46> $ , $ <nat:388> $ , $ <nat:188> $ , plus $ <nat:132> $ must be even . Hence , the products $ <var:l> \times <nat:66> $ , $ <var:e> \times <nat:248> $ , $ <nat:46> \times <var:f> $ , $ <var:i> \times <nat:388> $ , $ <nat:188> \times <var:x> $ , and moreover $ <var:y> \times <nat:132> $ is even additionally . The proposition is true from the knowledge the totaling of even elements of $ \mathbb{Z}^+ $ and an even natural must be even additionally from the knowledge the product between an even integer with any element of $ \mathbb{N} $ is guaranteed to be even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:x> <var:e> <var:f> <var:l> <var:y> <var:i> : nat , Nat . even ( <nat:188> * <var:x> + <nat:248> * <var:e> + <nat:46> * <var:f> + <nat:66> * <var:l> + <nat:132> * <var:y> + <nat:388> * <var:i> + <nat:138> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:66> = true ) . { auto . } assert ( <genH> : Nat . even <nat:248> = true ) . { auto . } assert ( <genH> : Nat . even <nat:46> = true ) . { auto . } assert ( <genH> : Nat . even <nat:388> = true ) . { auto . } assert ( <genH> : Nat . even <nat:188> = true ) . { auto . } assert ( <genH> : Nat . even <nat:132> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:66> * <var:l> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:248> * <var:e> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:46> * <var:f> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:388> * <var:i> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:188> * <var:x> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:132> * <var:y> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:188> * <var:x> + <nat:248> * <var:e> + <nat:46> * <var:f> + <nat:66> * <var:l> + <nat:132> * <var:y> + <nat:388> * <var:i> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . even_add . rewrite <genH> . auto . Qed . 