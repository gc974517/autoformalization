\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:U> * <nat:18> + <nat:324> * <var:i> + <var:Y> * <nat:60> + <nat:482> * <var:s> + <var:B> * <nat:92> + <var:v> * <nat:182> + <nat:21> $ will be odd given every positive terms $ <var:v> $ , $ <var:i> $ , $ <var:B> $ , $ <var:s> $ , $ <var:Y> $ , and $ <var:U> $ . \end{theorem} \begin{proof} Take note the positive integers $ <nat:182> $ , $ <nat:18> $ , $ <nat:60> $ , $ <nat:324> $ , and moreover $ <nat:92> $ are even natural numbers . Hence , the terms $ <var:v> * <nat:182> $ , $ <var:U> * <nat:18> $ , $ <var:Y> * <nat:60> $ , $ <nat:324> * <var:i> $ , in addition to $ <nat:92> * <var:B> $ must be even at the same time . The term $ <nat:482> * <var:s> $ is even by reason that taking the product of an even element of $ \mathbb{N} $ and some positive integer must be an even element of $ \mathbb{N} $ , and holds as a consequence that the number $ <nat:482> $ is known as obviously an even positive integer . Take note that $ <nat:21> $ is obviously an odd number in $ \mathbb{N} $ . It can be verified that this result is true . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:v> <var:i> <var:B> <var:s> <var:Y> <var:U> : nat , Nat . odd ( <nat:18> * <var:U> + <nat:324> * <var:i> + <nat:60> * <var:Y> + <nat:482> * <var:s> + <nat:92> * <var:B> + <nat:182> * <var:v> + <nat:21> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:182> = true ) . { auto . } assert ( <genH> : Nat . even <nat:18> = true ) . { auto . } assert ( <genH> : Nat . even <nat:60> = true ) . { auto . } assert ( <genH> : Nat . even <nat:324> = true ) . { auto . } assert ( <genH> : Nat . even <nat:92> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:182> * <var:v> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:18> * <var:U> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:60> * <var:Y> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:324> * <var:i> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:92> * <var:B> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:482> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:482> * <var:s> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . odd <nat:21> = true ) . { auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 