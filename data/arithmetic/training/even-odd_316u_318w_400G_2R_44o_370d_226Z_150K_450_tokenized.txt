\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:2> \cdot <var:R> + <nat:370> \cdot <var:d> + <var:Z> \cdot <nat:226> + <var:K> \cdot <nat:150> + <nat:450> + <nat:400> \cdot <var:G> + <nat:318> \cdot <var:w> + <var:u> \cdot <nat:316> + <var:o> \cdot <nat:44> $ must be even with any positive integers $ <var:Z> $ , $ <var:o> $ , $ <var:R> $ , $ <var:K> $ , $ <var:u> $ , $ <var:d> $ , $ <var:w> $ , and $ <var:G> $ . \end{theorem} \begin{proof} The addition between even numbers collectively with an even whole number will be even . We know that the positive integers $ <nat:316> $ , $ <nat:2> $ , $ <nat:226> $ , $ <nat:400> $ , $ <nat:150> $ , plus $ <nat:44> $ are known as even See the positive integer $ <nat:318> $ is clearly even Furthermore , remember that the leading term $ <nat:370> $ is trivially even It can be justified that the summation $ <nat:450> + <var:u> * <nat:316> + <var:w> * <nat:318> + <var:G> * <nat:400> + <var:R> * <nat:2> + <nat:44> * <var:o> + <var:d> * <nat:370> + <var:Z> * <nat:226> + <var:K> * <nat:150> $ will be even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:Z> <var:o> <var:R> <var:K> <var:u> <var:d> <var:w> <var:G> : nat , Nat . even ( <nat:2> * <var:R> + <nat:370> * <var:d> + <nat:226> * <var:Z> + <nat:150> * <var:K> + <nat:400> * <var:G> + <nat:318> * <var:w> + <nat:316> * <var:u> + <nat:44> * <var:o> + <nat:450> ) = true . Proof . intros . repeat rewrite Nat . even_add . assert ( <genH> : Nat . even <nat:316> = true ) . { auto . } assert ( <genH> : Nat . even <nat:2> = true ) . { auto . } assert ( <genH> : Nat . even <nat:226> = true ) . { auto . } assert ( <genH> : Nat . even <nat:400> = true ) . { auto . } assert ( <genH> : Nat . even <nat:150> = true ) . { auto . } assert ( <genH> : Nat . even <nat:44> = true ) . { auto . } assert ( <genH> : Nat . even <nat:318> = true ) . { auto . } assert ( <genH> : Nat . even <nat:370> = true ) . { auto . } repeat rewrite Nat . even_mul . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 