\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:190> \cdot <var:Y> + <nat:36> \cdot <var:k> + <nat:445> + <var:t> \cdot <nat:368> + <nat:110> \cdot <var:p> $ will be odd using every unknowns $ <var:p> $ , $ <var:t> $ , $ <var:k> $ , and $ <var:Y> $ . \end{theorem} \begin{proof} Recall the summation between an even number with an odd number in $ \mathbb{N} $ will be an odd natural number . Observe the summation $ <var:k> <nat:36> + <var:t> <nat:368> + <nat:110> <var:p> + <nat:190> <var:Y> $ is trivially even . We know that the whole numbers $ <nat:36> $ , $ <nat:368> $ , $ <nat:110> $ , and moreover $ <nat:190> $ are known to be even . As a consequence , the products $ <nat:36> * <var:k> $ , $ <nat:368> * <var:t> $ , $ <var:p> * <nat:110> $ , plus $ <nat:190> * <var:Y> $ is guaranteed to be even as well . Since the summation of even numbers in $ \mathbb{N} $ and an even whole number is even , additionally by reason that multiplying of an even element of $ \mathbb{N} $ with some number in $ \mathbb{N} $ must be even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:p> <var:t> <var:k> <var:Y> : nat , Nat . odd ( <nat:190> * <var:Y> + <nat:36> * <var:k> + <nat:368> * <var:t> + <nat:110> * <var:p> + <nat:445> ) = true . Proof . intros . rewrite Nat . odd_add . assert ( <genH> : Nat . even <nat:36> = true ) . { auto . } assert ( <genH> : Nat . even <nat:368> = true ) . { auto . } assert ( <genH> : Nat . even <nat:110> = true ) . { auto . } assert ( <genH> : Nat . even <nat:190> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:36> * <var:k> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:368> * <var:t> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:110> * <var:p> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:190> * <var:Y> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:190> * <var:Y> + <nat:36> * <var:k> + <nat:368> * <var:t> + <nat:110> * <var:p> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite <- Nat . negb_even . rewrite <genH> . auto . Qed . 