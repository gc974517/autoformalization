\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \newtheorem{definition}{Definition} \begin{document} \begin{definition} Under the condition that we have $ <var:Y> $ , $ <var:M> $ , $ <var:p> $ , $ <var:x> $ , $ <var:f> $ , $ <var:R> $ , $ <var:i> $ , $ <var:Z> $ , and $ <var:l> \geq <nat:2> $ where assuming $ <var:w> \in \mathbb{N} $ , $ <var:w> = <var:i> * <var:p> * <var:f> * <var:Z> * <var:Y> * <var:x> * <var:M> * <var:l> * <var:R> $ assuming some $ <var:f> $ , $ <var:i> $ , $ <var:M> $ , $ <var:Z> $ , $ <var:l> $ , $ <var:R> $ , $ <var:x> $ , $ <var:Y> $ , $ <var:p> \in \mathbb{Z}^+ $ , denote that $ <var:w> $ is a <def:nine-composite> whole number . \end{definition} \begin{theorem} The positive integer <nat:9979200> is a <def:nine-composite> number . \end{theorem} \begin{proof} Assume $ <var:i> = <nat:5> $ , $ <var:l> = <nat:3> $ , $ <var:Z> = <nat:12> $ , $ <var:f> = <nat:2> $ , $ <var:x> = <nat:10> $ , $ <var:Y> = <nat:4> $ , $ <var:R> = <nat:9> $ , $ <var:p> = <nat:11> $ , and $ <var:M> = <nat:7> $ . We confirm the belief holds seeing that $ <var:l> \cdot <var:Y> \cdot <var:f> \cdot <var:p> \cdot <var:x> \cdot <var:R> \cdot <var:Z> \cdot <var:M> \cdot <var:i> = <nat:9979200> $ and in consideration of $ <nat:7> $ , $ <nat:2> $ , $ <nat:11> $ , $ <nat:5> $ , $ <nat:9> $ , $ <nat:10> $ , $ <nat:3> $ , $ <nat:12> $ and $ <nat:4> \geq <nat:2> $ . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:nine-composite> ( <var:w> : nat ) := exists <var:f> <var:i> <var:M> <var:Z> <var:l> <var:R> <var:x> <var:Y> <var:p> : nat , ( <var:Y> >= <nat:2> ) /\ ( <var:M> >= <nat:2> ) /\ ( <var:p> >= <nat:2> ) /\ ( <var:x> >= <nat:2> ) /\ ( <var:f> >= <nat:2> ) /\ ( <var:R> >= <nat:2> ) /\ ( <var:i> >= <nat:2> ) /\ ( <var:Z> >= <nat:2> ) /\ ( <var:l> >= <nat:2> ) /\ ( <var:w> = <var:i> * <var:p> * <var:f> * <var:Z> * <var:Y> * <var:x> * <var:M> * <var:l> * <var:R> ) . Theorem <genP:1> : <def:nine-composite> <nat:9979200> . Proof . unfold <def:nine-composite> . exists <nat:2> . exists <nat:5> . exists <nat:7> . exists <nat:12> . exists <nat:3> . exists <nat:9> . exists <nat:10> . exists <nat:4> . exists <nat:11> . assert ( <genH> : <nat:7> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:2> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:11> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:5> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:9> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:10> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:3> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:12> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:4> >= <nat:2> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 