\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \newtheorem{definition}{Definition} \begin{document} \begin{definition} Assume $ <var:q> $ , $ <var:W> $ , $ <var:N> $ , $ <var:L> $ , $ <var:J> \in \mathbb{Z}^+ $ . Claim that some positive integer $ <var:C> $ is called a <def:five-composite> integer when $ <var:N> \cdot <var:q> \cdot <var:L> \cdot <var:J> \cdot <var:W> = <var:C> $ as well as unique terms are greater than or equivalent to <nat:2> . \end{definition} \begin{theorem} $ <var:C> = <nat:2880> $ is a <def:five-composite> number . \end{theorem} \begin{proof} Observe that $ <nat:2880> = <var:N> \cdot <var:W> \cdot <var:J> \cdot <var:L> \cdot <var:q> $ shows $ <var:J> = <nat:5> $ , $ <var:N> = <nat:8> $ , $ <var:L> = <nat:3> $ , $ <var:q> = <nat:2> $ , $ <var:W> = <nat:12> $ . Additionally notice that $ <nat:8> $ , $ <nat:5> $ , $ <nat:12> $ , $ <nat:2> $ , and $ <nat:3> $ are larger than or equivalent to <nat:2> . As a consequence , <nat:2880> is the product of some whole numbers $ <var:J> $ , $ <var:q> $ , $ <var:L> $ , $ <var:W> $ , $ <var:N> $ is validated . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:five-composite> ( <var:C> : nat ) := exists <var:q> <var:W> <var:N> <var:L> <var:J> : nat , ( <var:N> * <var:q> * <var:L> * <var:J> * <var:W> = <var:C> ) /\ ( <var:q> >= <nat:2> ) /\ ( <var:W> >= <nat:2> ) /\ ( <var:N> >= <nat:2> ) /\ ( <var:L> >= <nat:2> ) /\ ( <var:J> >= <nat:2> ) . Theorem <genP:1> : <def:five-composite> <nat:2880> . Proof . unfold <def:five-composite> . exists <nat:2> . exists <nat:12> . exists <nat:8> . exists <nat:3> . exists <nat:5> . assert ( <genH> : <nat:8> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:5> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:12> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:2> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:3> >= <nat:2> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 