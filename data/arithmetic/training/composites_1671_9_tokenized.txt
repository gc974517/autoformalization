\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \newtheorem{definition}{Definition} \begin{document} \begin{definition} There exist positive integers $ <var:O> $ , $ <var:k> $ , $ <var:B> $ , $ <var:Q> $ , $ <var:A> $ , $ <var:p> $ , $ <var:r> $ , $ <var:X> $ , $ <var:V> $ so that $ <var:A> $ , $ <var:X> $ , $ <var:O> $ , $ <var:r> $ , $ <var:k> $ , $ <var:V> $ , $ <var:B> $ , $ <var:Q> $ , $ <var:p> \geq <nat:2> $ . Let that $ <var:H> \in \mathbb{Z}^+ $ is considered to be a <def:nine-composite> integer if $ <var:A> \cdot <var:B> \cdot <var:X> \cdot <var:r> \cdot <var:k> \cdot <var:O> \cdot <var:Q> \cdot <var:V> \cdot <var:p> = <var:H> $ . \end{definition} \begin{theorem} $ <var:H> = <nat:15966720> $ is a <def:nine-composite> number . \end{theorem} \begin{proof} Recall that <nat:15966720> is a <def:nine-composite> whole number given that it is the multiplication between integers $ <var:r> $ , $ <var:k> $ , $ <var:V> $ , $ <var:X> $ , $ <var:p> $ , $ <var:B> $ , $ <var:O> $ , $ <var:A> $ , $ <var:Q> $ greater than or equal to <nat:2> . Notice that $ <nat:15966720> = <var:k> * <var:V> * <var:r> * <var:Q> * <var:B> * <var:X> * <var:A> * <var:O> * <var:p> $ gives $ <var:X> = <nat:2> $ , $ <var:p> = <nat:6> $ , $ <var:r> = <nat:5> $ , $ <var:k> = <nat:8> $ , $ <var:O> = <nat:12> $ , $ <var:Q> = <nat:9> $ , $ <var:A> = <nat:4> $ , $ <var:B> = <nat:11> $ , and $ <var:V> = <nat:7> $ . Moreover note $ <nat:6> $ , $ <nat:7> $ , $ <nat:9> $ , $ <nat:2> $ , $ <nat:12> $ , $ <nat:5> $ , $ <nat:4> $ , $ <nat:11> $ , $ <nat:8> \geq <nat:2> $ . Consequently , <nat:15966720> is <def:nine-composite> is proven . As a consequence , $ <var:r> $ , $ <var:O> $ , $ <var:k> $ , $ <var:X> $ , $ <var:Q> $ , $ <var:B> $ , $ <var:V> $ , $ <var:p> $ , $ <var:A> \geq <nat:2> $ and <nat:15966720> is the product of some positive integers $ <var:V> $ , $ <var:Q> $ , $ <var:r> $ , $ <var:p> $ , $ <var:A> $ , $ <var:B> $ , $ <var:X> $ , $ <var:k> $ , $ <var:O> $ has been validated . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:nine-composite> ( <var:H> : nat ) := exists <var:O> <var:k> <var:B> <var:Q> <var:A> <var:p> <var:r> <var:X> <var:V> : nat , ( <var:A> >= <nat:2> ) /\ ( <var:X> >= <nat:2> ) /\ ( <var:O> >= <nat:2> ) /\ ( <var:r> >= <nat:2> ) /\ ( <var:k> >= <nat:2> ) /\ ( <var:V> >= <nat:2> ) /\ ( <var:B> >= <nat:2> ) /\ ( <var:Q> >= <nat:2> ) /\ ( <var:p> >= <nat:2> ) /\ ( <var:A> * <var:B> * <var:X> * <var:r> * <var:k> * <var:O> * <var:Q> * <var:V> * <var:p> = <var:H> ) . Theorem <genP:1> : <def:nine-composite> <nat:15966720> . Proof . unfold <def:nine-composite> . exists <nat:12> . exists <nat:8> . exists <nat:11> . exists <nat:9> . exists <nat:4> . exists <nat:6> . exists <nat:5> . exists <nat:2> . exists <nat:7> . assert ( <genH> : <nat:6> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:7> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:9> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:2> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:12> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:5> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:4> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:11> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:8> >= <nat:2> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 