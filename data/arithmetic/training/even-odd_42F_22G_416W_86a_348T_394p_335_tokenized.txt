\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:22> <var:G> + <var:a> <nat:86> + <nat:42> <var:F> + <nat:335> + <var:T> <nat:348> + <nat:394> <var:p> + <nat:416> <var:W> $ will be odd using all positive terms $ <var:F> $ , $ <var:p> $ , $ <var:W> $ , $ <var:T> $ , $ <var:G> $ , and $ <var:a> $ . \end{theorem} \begin{proof} This result holds by reason that $ <nat:416> <var:W> + <var:a> <nat:86> + <nat:42> <var:F> + <nat:22> <var:G> + <var:p> <nat:394> + <nat:348> <var:T> $ is known as even . Take note the products $ <var:W> * <nat:416> $ , $ <nat:86> * <var:a> $ , $ <nat:42> * <var:F> $ , $ <nat:22> * <var:G> $ , $ <nat:394> * <var:p> $ , and $ <var:T> * <nat:348> $ will be even as a consequence that the numbers $ <nat:416> $ , $ <nat:86> $ , $ <nat:42> $ , $ <nat:22> $ , $ <nat:394> $ , and $ <nat:348> $ are known as even . From the knowledge the summing of an even number in $ \mathbb{Z}^+ $ with an even integer must be clearly an even natural number , the formula $ <var:F> \cdot <nat:42> + <nat:22> \cdot <var:G> + <nat:416> \cdot <var:W> + <var:a> \cdot <nat:86> + <nat:348> \cdot <var:T> + <nat:394> \cdot <var:p> $ must be fundamentally even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:F> <var:p> <var:W> <var:T> <var:G> <var:a> : nat , Nat . odd ( <nat:22> * <var:G> + <nat:86> * <var:a> + <nat:42> * <var:F> + <nat:348> * <var:T> + <nat:394> * <var:p> + <nat:416> * <var:W> + <nat:335> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:416> = true ) . { auto . } assert ( <genH> : Nat . even <nat:86> = true ) . { auto . } assert ( <genH> : Nat . even <nat:42> = true ) . { auto . } assert ( <genH> : Nat . even <nat:22> = true ) . { auto . } assert ( <genH> : Nat . even <nat:394> = true ) . { auto . } assert ( <genH> : Nat . even <nat:348> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:416> * <var:W> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:86> * <var:a> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:42> * <var:F> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:22> * <var:G> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:394> * <var:p> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:348> * <var:T> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:22> * <var:G> + <nat:86> * <var:a> + <nat:42> * <var:F> + <nat:348> * <var:T> + <nat:394> * <var:p> + <nat:416> * <var:W> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . auto . Qed . 