\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:160> + <nat:362> * <var:a> + <var:F> * <nat:446> + <var:H> * <nat:394> + <var:k> * <nat:260> + <var:K> * <nat:224> + <var:J> * <nat:146> $ is guaranteed to be even . \end{theorem} \begin{proof} Recall $ <var:J> \cdot <nat:146> + <nat:362> \cdot <var:a> + <var:F> \cdot <nat:446> + <var:k> \cdot <nat:260> + <var:K> \cdot <nat:224> + <nat:394> \cdot <var:H> $ is trivially even . The natural number $ <nat:224> $ is clearly even . So , the product $ <nat:224> <var:K> $ is even also . The product $ <nat:446> <var:F> $ is obviously an even integer as a consequence that the multiplication between an even natural with a whole number is an even natural and likewise the positive integer $ <nat:446> $ is trivially an even integer . Remember that the pairs $ <var:J> <nat:146> $ , $ <nat:362> <var:a> $ , and $ <nat:260> <var:k> $ are clearly even integers by reason that the numbers $ <nat:146> $ , $ <nat:362> $ , and likewise $ <nat:260> $ are even . Further , observe that the term $ <var:H> <nat:394> $ is guaranteed to be an even natural number from the knowledge the number $ <nat:394> $ is clearly in itself an even number in $ \mathbb{Z}^+ $ . Our result must be true as a consequence that taking the product between even numbers in $ \mathbb{N} $ and some natural is an even integer . The adding of an even integer with an even positive integer is fundamentally an even number in $ \mathbb{Z}^+ $ . Take note $ <nat:160> $ is even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:a> <var:F> <var:H> <var:k> <var:K> <var:J> : nat , Nat . even ( <nat:362> * <var:a> + <nat:446> * <var:F> + <nat:394> * <var:H> + <nat:260> * <var:k> + <nat:224> * <var:K> + <nat:146> * <var:J> + <nat:160> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:224> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:224> * <var:K> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:446> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:446> * <var:F> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:146> = true ) . { auto . } assert ( <genH> : Nat . even <nat:362> = true ) . { auto . } assert ( <genH> : Nat . even <nat:260> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:146> * <var:J> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:362> * <var:a> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:260> * <var:k> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:394> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:394> * <var:H> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:362> * <var:a> + <nat:446> * <var:F> + <nat:394> * <var:H> + <nat:260> * <var:k> + <nat:224> * <var:K> + <nat:146> * <var:J> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . even_add . assert ( <genH> : Nat . even <nat:160> = true ) . { auto . } rewrite <genH> . rewrite <genH> . auto . Qed . 