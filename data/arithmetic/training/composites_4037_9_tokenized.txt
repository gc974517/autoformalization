\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} There are $ <var:e> $ , $ <var:R> $ , $ <var:F> $ , $ <var:A> $ , $ <var:z> $ , $ <var:k> $ , $ <var:Q> $ , $ <var:x> $ and $ <var:C> \in \mathbb{N} $ where $ <var:A> $ , $ <var:C> $ , $ <var:e> $ , $ <var:F> $ , $ <var:k> $ , $ <var:z> $ , $ <var:R> $ , $ <var:x> $ , and $ <var:Q> $ more than or equivalent to <nat:2> plus such that $ <nat:79833600> $ is the same as $ <var:e> * <var:k> * <var:x> * <var:R> * <var:Q> * <var:z> * <var:F> * <var:A> * <var:C> $ . \end{theorem} \begin{proof} Take $ <var:F> = <nat:9> $ , $ <var:C> = <nat:7> $ , $ <var:k> = <nat:11> $ , $ <var:Q> = <nat:8> $ , $ <var:e> = <nat:10> $ , $ <var:R> = <nat:6> $ , $ <var:A> = <nat:4> $ , $ <var:x> = <nat:5> $ , $ <var:z> = <nat:12> $ . Similarly notice $ <nat:11> $ , $ <nat:9> $ , $ <nat:10> $ , $ <nat:12> $ , $ <nat:7> $ , $ <nat:8> $ , $ <nat:4> $ , $ <nat:6> $ , and $ <nat:5> \geq <nat:2> $ . This yields the principle is true . \end{proof} \end{document} 
~
Require Import Lia . Theorem <genP:1> : exists <var:e> <var:R> <var:F> <var:A> <var:z> <var:k> <var:Q> <var:x> <var:C> : nat , ( <var:A> >= <nat:2> ) /\ ( <var:C> >= <nat:2> ) /\ ( <var:e> >= <nat:2> ) /\ ( <var:F> >= <nat:2> ) /\ ( <var:k> >= <nat:2> ) /\ ( <var:z> >= <nat:2> ) /\ ( <var:R> >= <nat:2> ) /\ ( <var:x> >= <nat:2> ) /\ ( <var:Q> >= <nat:2> ) /\ ( <nat:79833600> = <var:e> * <var:k> * <var:x> * <var:R> * <var:Q> * <var:z> * <var:F> * <var:A> * <var:C> ) . Proof . exists <nat:10> . exists <nat:6> . exists <nat:9> . exists <nat:4> . exists <nat:12> . exists <nat:11> . exists <nat:8> . exists <nat:5> . exists <nat:7> . assert ( <genH> : <nat:11> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:9> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:10> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:12> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:7> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:8> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:4> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:6> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:5> >= <nat:2> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 