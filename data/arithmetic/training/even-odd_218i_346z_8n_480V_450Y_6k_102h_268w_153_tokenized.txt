\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} For any positive terms $ <var:w> $ , $ <var:i> $ , $ <var:V> $ , $ <var:Y> $ , $ <var:n> $ , $ <var:h> $ , $ <var:z> $ , and $ <var:k> $ the expression $ <nat:8> * <var:n> + <var:k> * <nat:6> + <nat:153> + <var:i> * <nat:218> + <nat:450> * <var:Y> + <var:z> * <nat:346> + <nat:480> * <var:V> + <nat:102> * <var:h> + <nat:268> * <var:w> $ will be odd . \end{theorem} \begin{proof} We verify this result holds . Observe that $ <nat:153> $ is known as an odd number . It can be demonstrated that the summation $ <var:i> \times <nat:218> + <var:z> \times <nat:346> + <var:n> \times <nat:8> + <var:V> \times <nat:480> + <var:Y> \times <nat:450> + <var:k> \times <nat:6> + <var:h> \times <nat:102> + <nat:268> \times <var:w> $ is trivially even . See the product between even naturals is trivially an even integer . See the integers $ <nat:346> $ and also $ <nat:218> $ will be even numbers in $ \mathbb{Z}^+ $ Further , we know that the natural numbers $ <nat:8> $ plus $ <nat:102> $ are clearly even What's more , the leading terms $ <nat:268> $ , $ <nat:6> $ , and moreover $ <nat:450> $ must be even The number $ <nat:480> $ is obviously even \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:w> <var:i> <var:V> <var:Y> <var:n> <var:h> <var:z> <var:k> : nat , Nat . odd ( <nat:8> * <var:n> + <nat:6> * <var:k> + <nat:218> * <var:i> + <nat:450> * <var:Y> + <nat:346> * <var:z> + <nat:480> * <var:V> + <nat:102> * <var:h> + <nat:268> * <var:w> + <nat:153> ) = true . Proof . intros . assert ( <genH> : Nat . odd <nat:153> = true ) . { auto . } assert ( <genH> : Nat . even <nat:346> = true ) . { auto . } assert ( <genH> : Nat . even <nat:218> = true ) . { auto . } assert ( <genH> : Nat . even <nat:8> = true ) . { auto . } assert ( <genH> : Nat . even <nat:102> = true ) . { auto . } assert ( <genH> : Nat . even <nat:268> = true ) . { auto . } assert ( <genH> : Nat . even <nat:6> = true ) . { auto . } assert ( <genH> : Nat . even <nat:450> = true ) . { auto . } assert ( <genH> : Nat . even <nat:480> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:8> * <var:n> + <nat:6> * <var:k> + <nat:218> * <var:i> + <nat:450> * <var:Y> + <nat:346> * <var:z> + <nat:480> * <var:V> + <nat:102> * <var:h> + <nat:268> * <var:w> ) = true ) . { repeat rewrite Nat . even_add . repeat rewrite Nat . even_mul . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . rewrite <genH> . auto . Qed . 