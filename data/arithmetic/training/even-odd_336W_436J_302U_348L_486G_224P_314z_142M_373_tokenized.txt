\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Assuming integers $ <var:z> $ , $ <var:L> $ , $ <var:G> $ , $ <var:P> $ , $ <var:U> $ , $ <var:W> $ , $ <var:J> $ , and $ <var:M> $ the formula $ <nat:336> \times <var:W> + <var:J> \times <nat:436> + <var:U> \times <nat:302> + <nat:373> + <nat:348> \times <var:L> + <nat:486> \times <var:G> + <var:P> \times <nat:224> + <nat:314> \times <var:z> + <var:M> \times <nat:142> $ is odd . \end{theorem} \begin{proof} The summation of an even number in $ \mathbb{N} $ and an odd integer must be odd . In consequence , our theorem is true . We know $ <nat:373> $ is known to be odd . In addition to this , the positive integers $ <nat:336> $ , $ <nat:436> $ , $ <nat:302> $ , $ <nat:348> $ , $ <nat:486> $ , $ <nat:224> $ , $ <nat:314> $ , and likewise $ <nat:142> $ are obviously even . So , the products $ <var:W> * <nat:336> $ , $ <var:J> * <nat:436> $ , $ <var:U> * <nat:302> $ , $ <var:L> * <nat:348> $ , $ <var:G> * <nat:486> $ , $ <nat:224> * <var:P> $ , $ <var:z> * <nat:314> $ , in addition to $ <var:M> * <nat:142> $ is guaranteed to be even in addition . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:z> <var:L> <var:G> <var:P> <var:U> <var:W> <var:J> <var:M> : nat , Nat . odd ( <nat:336> * <var:W> + <nat:436> * <var:J> + <nat:302> * <var:U> + <nat:348> * <var:L> + <nat:486> * <var:G> + <nat:224> * <var:P> + <nat:314> * <var:z> + <nat:142> * <var:M> + <nat:373> ) = true . Proof . intros . rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . assert ( <genH> : Nat . odd <nat:373> = true ) . { auto . } assert ( <genH> : Nat . even <nat:336> = true ) . { auto . } assert ( <genH> : Nat . even <nat:436> = true ) . { auto . } assert ( <genH> : Nat . even <nat:302> = true ) . { auto . } assert ( <genH> : Nat . even <nat:348> = true ) . { auto . } assert ( <genH> : Nat . even <nat:486> = true ) . { auto . } assert ( <genH> : Nat . even <nat:224> = true ) . { auto . } assert ( <genH> : Nat . even <nat:314> = true ) . { auto . } assert ( <genH> : Nat . even <nat:142> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:336> * <var:W> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:436> * <var:J> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:302> * <var:U> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:348> * <var:L> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:486> * <var:G> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:224> * <var:P> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:314> * <var:z> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:142> * <var:M> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 