\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} For every terms $ <var:P> $ , $ <var:j> $ , $ <var:v> $ , $ <var:X> $ , $ <var:C> $ , and $ <var:g> $ the formula $ <var:P> \times <nat:146> + <nat:150> \times <var:j> + <nat:245> + <var:g> \times <nat:462> + <var:X> \times <nat:308> + <var:C> \times <nat:492> + <var:v> \times <nat:396> $ is odd . \end{theorem} \begin{proof} We know that the totaling between an even natural with an odd element of $ \mathbb{N} $ must be in itself an odd number . Observe $ <nat:245> $ is trivially odd . Notice the pairs $ <var:j> \cdot <nat:150> $ , $ <nat:308> \cdot <var:X> $ , $ <var:v> \cdot <nat:396> $ , additionally $ <nat:492> \cdot <var:C> $ are clearly even elements of $ \mathbb{Z}^+ $ . This fact holds from the fact multiplying of an even whole number with some element of $ \mathbb{N} $ will be obviously an even whole number . On top of this , the product $ <var:P> \cdot <nat:146> $ is an even natural . In addition , see $ <var:g> \cdot <nat:462> $ is guaranteed to be an even element of $ \mathbb{N} $ . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:P> <var:j> <var:v> <var:X> <var:C> <var:g> : nat , Nat . odd ( <nat:146> * <var:P> + <nat:150> * <var:j> + <nat:462> * <var:g> + <nat:308> * <var:X> + <nat:492> * <var:C> + <nat:396> * <var:v> + <nat:245> ) = true . Proof . intros . rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . assert ( <genH> : Nat . odd <nat:245> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:150> * <var:j> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:308> * <var:X> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:396> * <var:v> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:492> * <var:C> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:146> * <var:P> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:462> * <var:g> ) = true ) . { rewrite Nat . even_mul . auto . } rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 