\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:K> \times <nat:208> + <var:k> \times <nat:282> + <nat:145> + <var:l> \times <nat:120> + <nat:194> \times <var:B> + <nat:284> \times <var:s> + <nat:218> \times <var:c> + <nat:202> \times <var:Y> + <nat:382> \times <var:a> $ will be odd . \end{theorem} \begin{proof} We check the summation $ <nat:382> \times <var:a> + <nat:282> \times <var:k> + <nat:120> \times <var:l> + <nat:202> \times <var:Y> + <var:B> \times <nat:194> + <nat:218> \times <var:c> + <nat:284> \times <var:s> + <nat:208> \times <var:K> $ is known to be even . See the coefficients $ <nat:382> $ , $ <nat:282> $ , $ <nat:120> $ , $ <nat:202> $ , $ <nat:194> $ , $ <nat:218> $ , $ <nat:284> $ , additionally $ <nat:208> $ are even . Thus , the terms $ <var:a> \times <nat:382> $ , $ <var:k> \times <nat:282> $ , $ <nat:120> \times <var:l> $ , $ <var:Y> \times <nat:202> $ , $ <var:B> \times <nat:194> $ , $ <nat:218> \times <var:c> $ , $ <var:s> \times <nat:284> $ , additionally $ <var:K> \times <nat:208> $ is guaranteed to be even at the same time . The main result holds by reason that taking the product between an even positive integer with an arbitrary whole number is guaranteed to be by definition an even number . It can be justified that our claim is true . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:K> <var:k> <var:l> <var:B> <var:s> <var:c> <var:Y> <var:a> : nat , Nat . odd ( <nat:208> * <var:K> + <nat:282> * <var:k> + <nat:120> * <var:l> + <nat:194> * <var:B> + <nat:284> * <var:s> + <nat:218> * <var:c> + <nat:202> * <var:Y> + <nat:382> * <var:a> + <nat:145> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:382> = true ) . { auto . } assert ( <genH> : Nat . even <nat:282> = true ) . { auto . } assert ( <genH> : Nat . even <nat:120> = true ) . { auto . } assert ( <genH> : Nat . even <nat:202> = true ) . { auto . } assert ( <genH> : Nat . even <nat:194> = true ) . { auto . } assert ( <genH> : Nat . even <nat:218> = true ) . { auto . } assert ( <genH> : Nat . even <nat:284> = true ) . { auto . } assert ( <genH> : Nat . even <nat:208> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:382> * <var:a> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:282> * <var:k> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:120> * <var:l> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:202> * <var:Y> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:194> * <var:B> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:218> * <var:c> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:284> * <var:s> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:208> * <var:K> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:208> * <var:K> + <nat:282> * <var:k> + <nat:120> * <var:l> + <nat:194> * <var:B> + <nat:284> * <var:s> + <nat:218> * <var:c> + <nat:202> * <var:Y> + <nat:382> * <var:a> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . auto . Qed . 