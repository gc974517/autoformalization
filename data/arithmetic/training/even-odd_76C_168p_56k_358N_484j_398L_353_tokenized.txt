\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:j> <nat:484> + <nat:358> <var:N> + <nat:76> <var:C> + <nat:56> <var:k> + <nat:398> <var:L> + <var:p> <nat:168> + <nat:353> $ is guaranteed to be odd taking integers $ <var:p> $ , $ <var:C> $ , $ <var:L> $ , $ <var:N> $ , $ <var:k> $ , and $ <var:j> $ . \end{theorem} \begin{proof} We know the summing between even numbers and an odd number in $ \mathbb{N} $ is by itself an odd element of $ \mathbb{Z}^+ $ . See that the integers $ <nat:76> $ , $ <nat:168> $ , $ <nat:56> $ , $ <nat:484> $ , plus $ <nat:398> $ are clearly even . For this reason , the pairs $ <nat:76> * <var:C> $ , $ <nat:168> * <var:p> $ , $ <var:k> * <nat:56> $ , $ <nat:484> * <var:j> $ , and moreover $ <nat:398> * <var:L> $ must be even at the same time . The term $ <var:N> * <nat:358> $ is obviously an even number in $ \mathbb{N} $ from the knowledge the positive integer $ <nat:358> $ is trivially an even element of $ \mathbb{N} $ . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:p> <var:C> <var:L> <var:N> <var:k> <var:j> : nat , Nat . odd ( <nat:484> * <var:j> + <nat:358> * <var:N> + <nat:76> * <var:C> + <nat:56> * <var:k> + <nat:398> * <var:L> + <nat:168> * <var:p> + <nat:353> ) = true . Proof . intros . rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . assert ( <genH> : Nat . even <nat:76> = true ) . { auto . } assert ( <genH> : Nat . even <nat:168> = true ) . { auto . } assert ( <genH> : Nat . even <nat:56> = true ) . { auto . } assert ( <genH> : Nat . even <nat:484> = true ) . { auto . } assert ( <genH> : Nat . even <nat:398> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:76> * <var:C> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:168> * <var:p> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:56> * <var:k> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:484> * <var:j> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:398> * <var:L> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:358> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:358> * <var:N> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 