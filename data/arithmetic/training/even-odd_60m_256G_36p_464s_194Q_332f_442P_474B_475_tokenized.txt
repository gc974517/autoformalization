\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:60> \times <var:m> + <var:G> \times <nat:256> + <var:p> \times <nat:36> + <nat:464> \times <var:s> + <var:Q> \times <nat:194> + <nat:332> \times <var:f> + <nat:475> + <nat:442> \times <var:P> + <nat:474> \times <var:B> $ will be odd . \end{theorem} \begin{proof} We know that multiplying between even elements of $ \mathbb{N} $ will be even . The whole numbers $ <nat:256> $ , $ <nat:36> $ , $ <nat:442> $ , in addition to $ <nat:194> $ are known to be even The numbers $ <nat:60> $ and also $ <nat:464> $ are guaranteed to be even Likewise , the natural number $ <nat:474> $ is known to be an even whole number Further , observe the number $ <nat:332> $ is known as even We verify this main result is proven . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:m> <var:G> <var:p> <var:s> <var:Q> <var:f> <var:P> <var:B> : nat , Nat . odd ( <nat:60> * <var:m> + <nat:256> * <var:G> + <nat:36> * <var:p> + <nat:464> * <var:s> + <nat:194> * <var:Q> + <nat:332> * <var:f> + <nat:442> * <var:P> + <nat:474> * <var:B> + <nat:475> ) = true . Proof . intros . rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . repeat rewrite Nat . even_mul . assert ( <genH> : Nat . even <nat:256> = true ) . { auto . } assert ( <genH> : Nat . even <nat:36> = true ) . { auto . } assert ( <genH> : Nat . even <nat:442> = true ) . { auto . } assert ( <genH> : Nat . even <nat:194> = true ) . { auto . } assert ( <genH> : Nat . even <nat:60> = true ) . { auto . } assert ( <genH> : Nat . even <nat:464> = true ) . { auto . } assert ( <genH> : Nat . even <nat:474> = true ) . { auto . } assert ( <genH> : Nat . even <nat:332> = true ) . { auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 