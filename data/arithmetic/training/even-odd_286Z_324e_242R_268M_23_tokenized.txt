\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Taking $ <var:Z> $ , $ <var:R> $ , $ <var:M> $ , and $ <var:e> \in \mathbb{N} $ the formula $ <nat:268> \times <var:M> + <nat:23> + <var:e> \times <nat:324> + <var:Z> \times <nat:286> + <var:R> \times <nat:242> $ is guaranteed to be odd . \end{theorem} \begin{proof} We justify that $ <nat:23> + <var:e> \times <nat:324> + <var:M> \times <nat:268> + <var:Z> \times <nat:286> + <nat:242> \times <var:R> $ is guaranteed to be odd because the sum $ <nat:268> \cdot <var:M> + <var:e> \cdot <nat:324> + <nat:286> \cdot <var:Z> + <nat:242> \cdot <var:R> $ is known as even . Observe the integer $ <nat:286> $ is guaranteed to be an even number in $ \mathbb{Z}^+ $ . So , the pair $ <nat:286> \cdot <var:Z> $ is even also . In addition to this , remember that the product $ <var:e> \cdot <nat:324> $ is known to be even by reason that the natural number $ <nat:324> $ is an even natural . Building on , recall the coefficient $ <nat:242> $ is trivially an even whole number . Then , $ <var:R> \cdot <nat:242> $ will be even also . The coefficient $ <nat:268> $ is guaranteed to be even . As a consequence , $ <nat:268> \cdot <var:M> $ is guaranteed to be even at the same time . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:Z> <var:R> <var:M> <var:e> : nat , Nat . odd ( <nat:268> * <var:M> + <nat:324> * <var:e> + <nat:286> * <var:Z> + <nat:242> * <var:R> + <nat:23> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:286> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:286> * <var:Z> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:324> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:324> * <var:e> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:242> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:242> * <var:R> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:268> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:268> * <var:M> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:268> * <var:M> + <nat:324> * <var:e> + <nat:286> * <var:Z> + <nat:242> * <var:R> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . auto . Qed . 