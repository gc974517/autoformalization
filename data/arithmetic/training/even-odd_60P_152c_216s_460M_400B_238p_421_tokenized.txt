\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:s> <nat:216> + <var:p> <nat:238> + <var:B> <nat:400> + <var:M> <nat:460> + <nat:60> <var:P> + <nat:152> <var:c> + <nat:421> $ is guaranteed to be odd . \end{theorem} \begin{proof} We demonstrate this theorem is proven . Recall the expression $ <var:s> <nat:216> + <nat:60> <var:P> + <nat:400> <var:B> + <var:M> <nat:460> + <var:c> <nat:152> + <nat:238> <var:p> $ is obviously even . The terms $ <nat:238> \times <var:p> $ , $ <nat:60> \times <var:P> $ , $ <var:B> \times <nat:400> $ , $ <nat:152> \times <var:c> $ , in addition to $ <nat:460> \times <var:M> $ are known to be even numbers . See the term $ <var:s> \times <nat:216> $ is known to be an even integer . From the knowledge taking the product between even whole numbers with any number will be an even element of $ \mathbb{N} $ the formula $ <nat:60> \cdot <var:P> + <nat:152> \cdot <var:c> + <var:s> \cdot <nat:216> + <nat:460> \cdot <var:M> + <nat:400> \cdot <var:B> + <var:p> \cdot <nat:238> $ must be even . Notice that the addition between an even number in $ \mathbb{N} $ with an odd whole number will be an odd natural . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:s> <var:p> <var:B> <var:M> <var:P> <var:c> : nat , Nat . odd ( <nat:216> * <var:s> + <nat:238> * <var:p> + <nat:400> * <var:B> + <nat:460> * <var:M> + <nat:60> * <var:P> + <nat:152> * <var:c> + <nat:421> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:238> * <var:p> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:60> * <var:P> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:400> * <var:B> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:152> * <var:c> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:460> * <var:M> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:216> * <var:s> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:216> * <var:s> + <nat:238> * <var:p> + <nat:400> * <var:B> + <nat:460> * <var:M> + <nat:60> * <var:P> + <nat:152> * <var:c> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . auto . Qed . 