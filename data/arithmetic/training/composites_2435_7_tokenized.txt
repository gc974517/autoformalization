\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \newtheorem{definition}{Definition} \begin{document} \begin{definition} Assume $ <var:x> $ , $ <var:A> $ , $ <var:J> $ , $ <var:m> $ , $ <var:i> $ , $ <var:M> $ , $ <var:D> \in \mathbb{N} $ satisfying the condition that $ <var:i> $ , $ <var:M> $ , $ <var:J> $ , $ <var:D> $ , $ <var:m> $ , $ <var:A> $ , $ <var:x> > <nat:1> $ . Claim that some integer $ <var:z> $ is a <def:seven-composite> positive integer given $ <var:J> \times <var:i> \times <var:A> \times <var:m> \times <var:x> \times <var:M> \times <var:D> = <var:z> $ . \end{definition} \begin{theorem} The natural number <nat:483840> is <def:seven-composite> . \end{theorem} \begin{proof} Assume $ <var:J> = <nat:8> $ , $ <var:D> = <nat:12> $ , $ <var:A> = <nat:7> $ , $ <var:m> = <nat:4> $ , $ <var:i> = <nat:6> $ , $ <var:M> = <nat:10> $ , and $ <var:x> = <nat:3> $ . Further observe that $ <var:m> = <nat:4> $ , $ <var:M> = <nat:10> $ , $ <var:D> = <nat:12> $ , $ <var:x> = <nat:3> $ , $ <var:J> = <nat:8> $ , $ <var:i> = <nat:6> $ , and $ <var:A> = <nat:7> $ are larger than <nat:1> . Hence , $ <nat:483840> = <var:m> \times <var:M> \times <var:J> \times <var:A> \times <var:x> \times <var:i> \times <var:D> $ is verified . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:seven-composite> ( <var:z> : nat ) := exists <var:x> <var:A> <var:J> <var:m> <var:i> <var:M> <var:D> : nat , ( <var:i> > <nat:1> ) /\ ( <var:M> > <nat:1> ) /\ ( <var:J> > <nat:1> ) /\ ( <var:D> > <nat:1> ) /\ ( <var:m> > <nat:1> ) /\ ( <var:A> > <nat:1> ) /\ ( <var:x> > <nat:1> ) /\ ( <var:J> * <var:i> * <var:A> * <var:m> * <var:x> * <var:M> * <var:D> = <var:z> ) . Theorem <genP:1> : <def:seven-composite> <nat:483840> . Proof . unfold <def:seven-composite> . exists <nat:3> . exists <nat:7> . exists <nat:8> . exists <nat:4> . exists <nat:6> . exists <nat:10> . exists <nat:12> . assert ( <genH> : <nat:4> > <nat:1> ) . { lia . } assert ( <genH> : <nat:10> > <nat:1> ) . { lia . } assert ( <genH> : <nat:12> > <nat:1> ) . { lia . } assert ( <genH> : <nat:3> > <nat:1> ) . { lia . } assert ( <genH> : <nat:8> > <nat:1> ) . { lia . } assert ( <genH> : <nat:6> > <nat:1> ) . { lia . } assert ( <genH> : <nat:7> > <nat:1> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 