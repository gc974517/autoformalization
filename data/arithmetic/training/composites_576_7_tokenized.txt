\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Supposing that we get $ <var:l> = <var:c> * <var:X> * <var:P> * <var:u> * <var:A> * <var:Y> * <var:G> $ given some positive integer $ <var:l> $ and where $ <var:X> $ , $ <var:Y> $ , $ <var:A> $ , $ <var:c> $ , $ <var:P> $ , $ <var:u> $ and $ <var:G> \geq <nat:2> $ , we define that $ <var:l> $ is a <def:seven-composite> natural number assuming some numbers $ <var:G> $ , $ <var:Y> $ , $ <var:X> $ , $ <var:u> $ , $ <var:A> $ , $ <var:c> $ , $ <var:P> $ . Then $ <nat:498960> = <var:l> $ is a <def:seven-composite> natural number . \end{theorem} \begin{proof} Recollect that <nat:498960> is a <def:seven-composite> positive integer when <nat:498960> is the multiplication of integers $ <var:P> $ , $ <var:Y> $ , $ <var:A> $ , $ <var:u> $ , $ <var:c> $ , $ <var:X> $ , $ <var:G> $ such that $ <var:G> $ , $ <var:P> $ , $ <var:A> $ , $ <var:u> $ , $ <var:X> $ , $ <var:c> $ and $ <var:Y> \geq <nat:2> $ . Note $ <nat:12> $ , $ <nat:9> $ , $ <nat:6> $ , $ <nat:2> $ , $ <nat:5> $ , $ <nat:11> $ , $ <nat:7> \geq <nat:2> $ . What's more note also $ <nat:498960> = <var:G> \times <var:c> \times <var:u> \times <var:P> \times <var:X> \times <var:Y> \times <var:A> $ produces $ <var:A> = <nat:5> $ , $ <var:u> = <nat:11> $ , $ <var:P> = <nat:12> $ , $ <var:X> = <nat:9> $ , $ <var:Y> = <nat:2> $ , $ <var:c> = <nat:6> $ and $ <var:G> = <nat:7> $ . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:seven-composite> ( <var:l> : nat ) := exists <var:G> <var:Y> <var:X> <var:u> <var:A> <var:c> <var:P> : nat , ( <var:l> = <var:c> * <var:X> * <var:P> * <var:u> * <var:A> * <var:Y> * <var:G> ) /\ ( <var:X> >= <nat:2> ) /\ ( <var:Y> >= <nat:2> ) /\ ( <var:A> >= <nat:2> ) /\ ( <var:c> >= <nat:2> ) /\ ( <var:P> >= <nat:2> ) /\ ( <var:u> >= <nat:2> ) /\ ( <var:G> >= <nat:2> ) . Theorem <genP:1> : <def:seven-composite> <nat:498960> . Proof . unfold <def:seven-composite> . assert ( <genH> : <nat:12> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:9> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:6> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:2> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:5> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:11> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:7> >= <nat:2> ) . { lia . } exists <nat:7> . exists <nat:2> . exists <nat:9> . exists <nat:11> . exists <nat:5> . exists <nat:6> . exists <nat:12> . repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 