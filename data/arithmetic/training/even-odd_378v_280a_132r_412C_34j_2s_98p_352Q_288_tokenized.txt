\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:r> * <nat:132> + <nat:288> + <nat:280> * <var:a> + <nat:98> * <var:p> + <nat:352> * <var:Q> + <var:C> * <nat:412> + <var:v> * <nat:378> + <nat:2> * <var:s> + <var:j> * <nat:34> $ will be even with whole numbers $ <var:j> $ , $ <var:s> $ , $ <var:r> $ , $ <var:v> $ , $ <var:a> $ , $ <var:C> $ , $ <var:Q> $ , and $ <var:p> $ . \end{theorem} \begin{proof} We make use the knowledge that the formula $ <nat:2> <var:s> + <nat:98> <var:p> + <var:r> <nat:132> + <var:j> <nat:34> + <var:Q> <nat:352> + <var:v> <nat:378> + <nat:280> <var:a> + <nat:412> <var:C> $ is clearly even , because the adding between even positive integers together is guaranteed to be an even integer . Additionally , the positive integers $ <nat:2> $ , $ <nat:98> $ , $ <nat:132> $ , $ <nat:34> $ , $ <nat:352> $ , $ <nat:378> $ , $ <nat:280> $ , plus $ <nat:412> $ must be even whole numbers . As a consequence , the products $ <nat:2> * <var:s> $ , $ <nat:98> * <var:p> $ , $ <nat:132> * <var:r> $ , $ <nat:34> * <var:j> $ , $ <var:Q> * <nat:352> $ , $ <nat:378> * <var:v> $ , $ <nat:280> * <var:a> $ , and $ <var:C> * <nat:412> $ must be even additionally . additionally because the product of an even element of $ \mathbb{Z}^+ $ with some whole number is guaranteed to be even the formula $ <var:Q> \times <nat:352> + <var:C> \times <nat:412> + <var:j> \times <nat:34> + <nat:132> \times <var:r> + <var:a> \times <nat:280> + <var:v> \times <nat:378> + <nat:98> \times <var:p> + <nat:2> \times <var:s> $ must be clearly even . We demonstrate $ <var:v> <nat:378> + <var:a> <nat:280> + <nat:132> <var:r> + <nat:412> <var:C> + <nat:34> <var:j> + <nat:288> + <nat:2> <var:s> + <var:p> <nat:98> + <var:Q> <nat:352> $ will be even . Recall $ <nat:288> $ is obviously even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:j> <var:s> <var:r> <var:v> <var:a> <var:C> <var:Q> <var:p> : nat , Nat . even ( <nat:132> * <var:r> + <nat:280> * <var:a> + <nat:98> * <var:p> + <nat:352> * <var:Q> + <nat:412> * <var:C> + <nat:378> * <var:v> + <nat:2> * <var:s> + <nat:34> * <var:j> + <nat:288> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:2> = true ) . { auto . } assert ( <genH> : Nat . even <nat:98> = true ) . { auto . } assert ( <genH> : Nat . even <nat:132> = true ) . { auto . } assert ( <genH> : Nat . even <nat:34> = true ) . { auto . } assert ( <genH> : Nat . even <nat:352> = true ) . { auto . } assert ( <genH> : Nat . even <nat:378> = true ) . { auto . } assert ( <genH> : Nat . even <nat:280> = true ) . { auto . } assert ( <genH> : Nat . even <nat:412> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:2> * <var:s> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:98> * <var:p> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:132> * <var:r> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:34> * <var:j> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:352> * <var:Q> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:378> * <var:v> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:280> * <var:a> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:412> * <var:C> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:132> * <var:r> + <nat:280> * <var:a> + <nat:98> * <var:p> + <nat:352> * <var:Q> + <nat:412> * <var:C> + <nat:378> * <var:v> + <nat:2> * <var:s> + <nat:34> * <var:j> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:288> = true ) . { auto . } rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . auto . Qed . 