\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Taking all integers $ <var:P> $ , $ <var:u> $ , $ <var:C> $ , $ <var:f> $ , $ <var:G> $ , and $ <var:x> $ the expression $ <var:C> * <nat:408> + <var:u> * <nat:366> + <var:P> * <nat:314> + <var:f> * <nat:104> + <nat:256> * <var:G> + <var:x> * <nat:364> + <nat:351> $ is odd . \end{theorem} \begin{proof} It can be checked that the sum $ <var:x> \cdot <nat:364> + <nat:408> \cdot <var:C> + <var:G> \cdot <nat:256> + <nat:314> \cdot <var:P> + <var:u> \cdot <nat:366> + <nat:104> \cdot <var:f> + <nat:351> $ will be odd . The claim is true from the knowledge $ <nat:104> \times <var:f> + <nat:366> \times <var:u> + <var:x> \times <nat:364> + <nat:314> \times <var:P> + <nat:256> \times <var:G> + <nat:408> \times <var:C> $ is obviously even . The terms $ <nat:256> * <var:G> $ , $ <nat:364> * <var:x> $ , $ <var:C> * <nat:408> $ , in addition to $ <nat:104> * <var:f> $ are obviously even . This claim holds since multiplying of an even integer with an arbitrary element of $ \mathbb{N} $ must be even . The term $ <var:u> * <nat:366> $ is known as even because multiplying of an even natural and an arbitrary natural number is even . In addition , notice the product $ <nat:314> * <var:P> $ is guaranteed to be an even number in $ \mathbb{Z}^+ $ . The totaling between an even positive integer and an odd natural number is an odd positive integer . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:P> <var:u> <var:C> <var:f> <var:G> <var:x> : nat , Nat . odd ( <nat:408> * <var:C> + <nat:366> * <var:u> + <nat:314> * <var:P> + <nat:104> * <var:f> + <nat:256> * <var:G> + <nat:364> * <var:x> + <nat:351> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:256> * <var:G> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:364> * <var:x> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:408> * <var:C> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:104> * <var:f> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:366> * <var:u> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:314> * <var:P> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:408> * <var:C> + <nat:366> * <var:u> + <nat:314> * <var:P> + <nat:104> * <var:f> + <nat:256> * <var:G> + <nat:364> * <var:x> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . auto . Qed . 