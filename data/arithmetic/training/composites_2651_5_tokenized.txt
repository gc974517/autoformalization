\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \newtheorem{definition}{Definition} \begin{document} \begin{definition} We claim that $ <var:t> $ is a <def:five-composite> number assuming that $ \exists <var:e> $ , $ <var:O> $ , $ <var:K> $ , $ <var:A> $ , $ <var:q> \in \mathbb{N} $ so that $ <var:A> \cdot <var:O> \cdot <var:K> \cdot <var:e> \cdot <var:q> = <var:t> $ with some integer $ <var:t> $ as well as so that $ <var:A> $ , $ <var:O> $ , $ <var:q> $ , $ <var:K> $ , and $ <var:e> \geq <nat:2> $ . \end{definition} \begin{theorem} $ <var:t> = <nat:25200> $ is a <def:five-composite> positive integer . \end{theorem} \begin{proof} Remember that a <def:five-composite> is the multiplication between whole numbers $ <var:K> $ , $ <var:e> $ , $ <var:q> $ , $ <var:O> $ and $ <var:A> $ more than or equal to <nat:2> . Let $ <var:A> = <nat:6> $ , $ <var:e> = <nat:7> $ , $ <var:K> = <nat:12> $ , $ <var:q> = <nat:10> $ and $ <var:O> = <nat:5> $ . Furthermore observe $ <var:K> = <nat:12> $ , $ <var:e> = <nat:7> $ , $ <var:q> = <nat:10> $ , $ <var:A> = <nat:6> $ and $ <var:O> = <nat:5> \geq <nat:2> $ . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:five-composite> ( <var:t> : nat ) := exists <var:e> <var:O> <var:K> <var:A> <var:q> : nat , ( <var:A> * <var:O> * <var:K> * <var:e> * <var:q> = <var:t> ) /\ ( <var:A> >= <nat:2> ) /\ ( <var:O> >= <nat:2> ) /\ ( <var:q> >= <nat:2> ) /\ ( <var:K> >= <nat:2> ) /\ ( <var:e> >= <nat:2> ) . Theorem <genP:1> : <def:five-composite> <nat:25200> . Proof . unfold <def:five-composite> . exists <nat:7> . exists <nat:5> . exists <nat:12> . exists <nat:6> . exists <nat:10> . assert ( <genH> : <nat:12> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:7> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:10> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:6> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:5> >= <nat:2> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 