\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:F> \times <nat:198> + <nat:151> + <var:N> \times <nat:168> + <var:o> \times <nat:452> + <nat:362> \times <var:j> $ is odd . \end{theorem} \begin{proof} It can be demonstrated that that the sum $ <nat:452> \times <var:o> + <nat:168> \times <var:N> + <nat:151> + <var:j> \times <nat:362> + <var:F> \times <nat:198> $ is odd because $ <var:N> <nat:168> + <var:F> <nat:198> + <nat:362> <var:j> + <nat:452> <var:o> $ is even . The number $ <nat:452> $ is obviously an even whole number . Then , the product $ <var:o> <nat:452> $ must be even additionally . The integer $ <nat:168> $ is an even number in $ \mathbb{Z}^+ $ . Consequently , the product $ <var:N> <nat:168> $ is even as well . Building on , the integer $ <nat:198> $ is clearly an even element of $ \mathbb{Z}^+ $ . Thus , the term $ <nat:198> <var:F> $ is guaranteed to be even as well . In addition to this , notice the integer $ <nat:362> $ is clearly an even natural number . Hence , the term $ <var:j> <nat:362> $ will be even in addition . This lemma must be true as a consequence that multiplying between even natural numbers with an arbitrary integer is guaranteed to be even . Notice that $ <nat:151> $ is known to be odd . It can be justified that the proposition is true . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:F> <var:N> <var:o> <var:j> : nat , Nat . odd ( <nat:198> * <var:F> + <nat:168> * <var:N> + <nat:452> * <var:o> + <nat:362> * <var:j> + <nat:151> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:452> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:452> * <var:o> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:168> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:168> * <var:N> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:198> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:198> * <var:F> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:362> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:362> * <var:j> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:198> * <var:F> + <nat:168> * <var:N> + <nat:452> * <var:o> + <nat:362> * <var:j> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } assert ( <genH> : Nat . odd <nat:151> = true ) . { auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . rewrite <genH> . auto . Qed . 