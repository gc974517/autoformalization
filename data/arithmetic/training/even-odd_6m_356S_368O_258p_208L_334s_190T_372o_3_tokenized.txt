\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:6> \times <var:m> + <nat:356> \times <var:S> + <nat:368> \times <var:O> + <nat:258> \times <var:p> + <var:L> \times <nat:208> + <var:s> \times <nat:334> + <var:T> \times <nat:190> + <nat:3> + <var:o> \times <nat:372> $ will be odd . \end{theorem} \begin{proof} The products $ <var:s> \cdot <nat:334> $ , $ <nat:190> \cdot <var:T> $ , additionally $ <var:o> \cdot <nat:372> $ are clearly even elements of $ \mathbb{N} $ . The terms $ <nat:356> \cdot <var:S> $ plus $ <nat:6> \cdot <var:m> $ are guaranteed to be even numbers in $ \mathbb{Z}^+ $ . Take note the products $ <nat:368> \cdot <var:O> $ as well as $ <nat:258> \cdot <var:p> $ are known to be even from the knowledge multiplying of an even whole number with a number in $ \mathbb{N} $ will be obviously an even element of $ \mathbb{Z}^+ $ . Take note $ <nat:208> \cdot <var:L> $ is known as an even element of $ \mathbb{Z}^+ $ by reason that the product of an even natural and a number in $ \mathbb{Z}^+ $ is guaranteed to be an even element of $ \mathbb{Z}^+ $ . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:m> <var:S> <var:O> <var:p> <var:L> <var:s> <var:T> <var:o> : nat , Nat . odd ( <nat:6> * <var:m> + <nat:356> * <var:S> + <nat:368> * <var:O> + <nat:258> * <var:p> + <nat:208> * <var:L> + <nat:334> * <var:s> + <nat:190> * <var:T> + <nat:372> * <var:o> + <nat:3> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:334> * <var:s> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:190> * <var:T> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:372> * <var:o> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:356> * <var:S> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:6> * <var:m> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:368> * <var:O> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:258> * <var:p> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:208> * <var:L> ) = true ) . { rewrite Nat . even_mul . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 