\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:I> * <nat:334> + <nat:495> + <var:G> * <nat:108> + <var:V> * <nat:268> + <nat:430> * <var:Q> $ is guaranteed to be odd taking any $ <var:Q> $ , $ <var:V> $ , $ <var:I> $ , and $ <var:G> \in \mathbb{N} $ . \end{theorem} \begin{proof} The pair $ <var:V> \times <nat:268> $ is even . This claim is proven because the positive integer $ <nat:268> $ is obviously by definition an even number in $ \mathbb{N} $ . Notice that the pair $ <var:Q> \times <nat:430> $ is trivially an even element of $ \mathbb{Z}^+ $ . This fact is proven since multiplying of an even number in $ \mathbb{N} $ with an arbitrary number in $ \mathbb{Z}^+ $ is even and likewise the number $ <nat:430> $ is by its very nature an even natural . In addition , the term $ <nat:108> \times <var:G> $ is known to be even . This claim must be true by reason that the multiplication of an even element of $ \mathbb{Z}^+ $ and any number in $ \mathbb{N} $ is guaranteed to be an even number in $ \mathbb{N} $ , and holds because the leading term $ <nat:108> $ is known as an even integer . Furthermore , remember the pair $ <nat:334> \times <var:I> $ is an even natural number . This holds from the knowledge taking the product between an even number in $ \mathbb{Z}^+ $ with any natural number will be an even whole number and also the leading term $ <nat:334> $ is clearly an even natural . It can be justified that $ <var:G> \cdot <nat:108> + <nat:268> \cdot <var:V> + <nat:495> + <var:I> \cdot <nat:334> + <nat:430> \cdot <var:Q> $ will be odd . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:Q> <var:V> <var:I> <var:G> : nat , Nat . odd ( <nat:334> * <var:I> + <nat:108> * <var:G> + <nat:268> * <var:V> + <nat:430> * <var:Q> + <nat:495> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:268> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:268> * <var:V> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:430> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:430> * <var:Q> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:108> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:108> * <var:G> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:334> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:334> * <var:I> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 