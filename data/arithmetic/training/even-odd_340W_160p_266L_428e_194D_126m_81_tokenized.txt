\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Using all natural numbers $ <var:e> $ , $ <var:p> $ , $ <var:L> $ , $ <var:m> $ , $ <var:W> $ , and $ <var:D> $ the expression $ <nat:266> \cdot <var:L> + <nat:194> \cdot <var:D> + <var:e> \cdot <nat:428> + <nat:160> \cdot <var:p> + <nat:340> \cdot <var:W> + <var:m> \cdot <nat:126> + <nat:81> $ must be odd . \end{theorem} \begin{proof} It can be demonstrated that $ <var:W> <nat:340> + <nat:81> + <nat:160> <var:p> + <var:L> <nat:266> + <nat:428> <var:e> + <var:D> <nat:194> + <var:m> <nat:126> $ is odd . In addition to this , take note that the products $ <nat:340> \times <var:W> $ , $ <nat:160> \times <var:p> $ , $ <var:L> \times <nat:266> $ , $ <nat:428> \times <var:e> $ , $ <var:D> \times <nat:194> $ , additionally $ <nat:126> \times <var:m> $ will be even since the numbers $ <nat:340> $ , $ <nat:160> $ , $ <nat:266> $ , $ <nat:428> $ , $ <nat:194> $ , as well as $ <nat:126> $ will be even . Remember that the totaling between an even natural and an odd natural is odd . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:e> <var:p> <var:L> <var:m> <var:W> <var:D> : nat , Nat . odd ( <nat:266> * <var:L> + <nat:194> * <var:D> + <nat:428> * <var:e> + <nat:160> * <var:p> + <nat:340> * <var:W> + <nat:126> * <var:m> + <nat:81> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:340> = true ) . { auto . } assert ( <genH> : Nat . even <nat:160> = true ) . { auto . } assert ( <genH> : Nat . even <nat:266> = true ) . { auto . } assert ( <genH> : Nat . even <nat:428> = true ) . { auto . } assert ( <genH> : Nat . even <nat:194> = true ) . { auto . } assert ( <genH> : Nat . even <nat:126> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:340> * <var:W> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:160> * <var:p> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:266> * <var:L> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:428> * <var:e> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:194> * <var:D> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:126> * <var:m> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 