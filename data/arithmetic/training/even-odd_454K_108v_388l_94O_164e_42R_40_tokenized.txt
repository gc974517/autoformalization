\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:40> + <var:K> * <nat:454> + <nat:108> * <var:v> + <var:l> * <nat:388> + <var:O> * <nat:94> + <var:e> * <nat:164> + <var:R> * <nat:42> $ will be even . \end{theorem} \begin{proof} Observe that the pairs $ <var:R> \cdot <nat:42> $ and also $ <nat:164> \cdot <var:e> $ will be even . This claim holds because the multiplication of an even integer and some number will be even . Adding on , we know the pair $ <nat:108> \cdot <var:v> $ is known as an even positive integer . We know the terms $ <nat:94> \cdot <var:O> $ and also $ <var:K> \cdot <nat:454> $ are trivially even naturals . On top of this , observe the product $ <nat:388> \cdot <var:l> $ is guaranteed to be even . It can be checked that this lemma is proven . Observe $ <nat:40> $ is known as an even number in $ \mathbb{N} $ . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:K> <var:v> <var:l> <var:O> <var:e> <var:R> : nat , Nat . even ( <nat:454> * <var:K> + <nat:108> * <var:v> + <nat:388> * <var:l> + <nat:94> * <var:O> + <nat:164> * <var:e> + <nat:42> * <var:R> + <nat:40> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:42> * <var:R> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:164> * <var:e> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:108> * <var:v> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:94> * <var:O> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:454> * <var:K> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:388> * <var:l> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even <nat:40> = true ) . { auto . } repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 