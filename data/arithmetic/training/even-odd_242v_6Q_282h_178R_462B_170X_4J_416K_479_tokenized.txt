\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:h> \times <nat:282> + <var:B> \times <nat:462> + <nat:178> \times <var:R> + <nat:6> \times <var:Q> + <nat:479> + <var:v> \times <nat:242> + <nat:416> \times <var:K> + <nat:4> \times <var:J> + <nat:170> \times <var:X> $ is guaranteed to be odd using some $ <var:v> $ , $ <var:h> $ , $ <var:B> $ , $ <var:K> $ , $ <var:J> $ , $ <var:X> $ , $ <var:R> $ , and $ <var:Q> \in \mathbb{Z}^+ $ . \end{theorem} \begin{proof} The pair $ <nat:242> <var:v> $ is known as even . This fact must be true from the knowledge the positive integer $ <nat:242> $ is known as an even positive integer . Likewise , see that the positive integers $ <nat:416> $ , $ <nat:462> $ , plus $ <nat:282> $ must be even . Hence , the pairs $ <nat:416> <var:K> $ , $ <var:B> <nat:462> $ , in addition to $ <var:h> <nat:282> $ is even too . The coefficients $ <nat:4> $ , $ <nat:178> $ , and likewise $ <nat:170> $ are guaranteed to be even elements of $ \mathbb{N} $ . Hence , the pairs $ <nat:4> <var:J> $ , $ <nat:178> <var:R> $ , plus $ <var:X> <nat:170> $ must be even as well . Furthermore , the positive integer $ <nat:6> $ is an even element of $ \mathbb{N} $ . For this reason , the product $ <nat:6> <var:Q> $ is guaranteed to be even also . We justify this theorem holds . Take note $ <nat:479> $ is obviously odd . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:v> <var:h> <var:B> <var:K> <var:J> <var:X> <var:R> <var:Q> : nat , Nat . odd ( <nat:282> * <var:h> + <nat:462> * <var:B> + <nat:178> * <var:R> + <nat:6> * <var:Q> + <nat:242> * <var:v> + <nat:416> * <var:K> + <nat:4> * <var:J> + <nat:170> * <var:X> + <nat:479> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:242> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:242> * <var:v> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:416> = true ) . { auto . } assert ( <genH> : Nat . even <nat:462> = true ) . { auto . } assert ( <genH> : Nat . even <nat:282> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:416> * <var:K> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:462> * <var:B> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:282> * <var:h> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:4> = true ) . { auto . } assert ( <genH> : Nat . even <nat:178> = true ) . { auto . } assert ( <genH> : Nat . even <nat:170> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:4> * <var:J> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:178> * <var:R> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:170> * <var:X> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:6> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:6> * <var:Q> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . odd <nat:479> = true ) . { auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 