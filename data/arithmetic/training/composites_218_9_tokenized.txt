\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \newtheorem{definition}{Definition} \begin{document} \begin{definition} Claim that $ <var:x> $ is a <def:nine-composite> integer supposing taking some $ <var:X> $ , $ <var:O> $ , $ <var:J> $ , $ <var:w> $ , $ <var:A> $ , $ <var:I> $ , $ <var:L> $ , $ <var:C> $ , $ <var:o> \in \mathbb{Z}^+ $ we have $ <var:x> = <var:A> \cdot <var:L> \cdot <var:I> \cdot <var:J> \cdot <var:o> \cdot <var:O> \cdot <var:X> \cdot <var:w> \cdot <var:C> $ given $ <var:x> \in \mathbb{Z}^+ $ plus such that $ <var:w> $ , $ <var:A> $ , $ <var:I> $ , $ <var:C> $ , $ <var:L> $ , $ <var:X> $ , $ <var:J> $ , $ <var:O> $ and $ <var:o> \geq <nat:2> $ . \end{definition} \begin{theorem} The number <nat:26611200> is a <def:nine-composite> natural number . \end{theorem} \begin{proof} Allow $ <var:O> = <nat:10> $ , $ <var:A> = <nat:11> $ , $ <var:C> = <nat:7> $ , $ <var:I> = <nat:8> $ , $ <var:o> = <nat:4> $ , $ <var:J> = <nat:12> $ , $ <var:L> = <nat:6> $ , $ <var:w> = <nat:3> $ and $ <var:X> = <nat:5> $ . Plus note that $ <var:o> = <nat:4> $ , $ <var:J> = <nat:12> $ , $ <var:X> = <nat:5> $ , $ <var:C> = <nat:7> $ , $ <var:w> = <nat:3> $ , $ <var:L> = <nat:6> $ , $ <var:O> = <nat:10> $ , $ <var:I> = <nat:8> $ , $ <var:A> = <nat:11> \geq <nat:2> $ . This gives <nat:26611200> is a <def:nine-composite> natural number . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:nine-composite> ( <var:x> : nat ) := exists <var:X> <var:O> <var:J> <var:w> <var:A> <var:I> <var:L> <var:C> <var:o> : nat , ( <var:x> = <var:A> * <var:L> * <var:I> * <var:J> * <var:o> * <var:O> * <var:X> * <var:w> * <var:C> ) /\ ( <var:w> >= <nat:2> ) /\ ( <var:A> >= <nat:2> ) /\ ( <var:I> >= <nat:2> ) /\ ( <var:C> >= <nat:2> ) /\ ( <var:L> >= <nat:2> ) /\ ( <var:X> >= <nat:2> ) /\ ( <var:J> >= <nat:2> ) /\ ( <var:O> >= <nat:2> ) /\ ( <var:o> >= <nat:2> ) . Theorem <genP:1> : <def:nine-composite> <nat:26611200> . Proof . unfold <def:nine-composite> . exists <nat:5> . exists <nat:10> . exists <nat:12> . exists <nat:3> . exists <nat:11> . exists <nat:8> . exists <nat:6> . exists <nat:7> . exists <nat:4> . assert ( <genH> : <nat:4> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:12> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:5> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:7> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:3> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:6> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:10> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:8> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:11> >= <nat:2> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 