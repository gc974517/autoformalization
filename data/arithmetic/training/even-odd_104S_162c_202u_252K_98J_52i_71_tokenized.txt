\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:S> * <nat:104> + <nat:252> * <var:K> + <var:u> * <nat:202> + <var:J> * <nat:98> + <nat:162> * <var:c> + <nat:52> * <var:i> + <nat:71> $ is odd taking any whole numbers $ <var:J> $ , $ <var:c> $ , $ <var:K> $ , $ <var:i> $ , $ <var:S> $ , and $ <var:u> $ . \end{theorem} \begin{proof} The totaling between even natural numbers concurrently with an odd element of $ \mathbb{N} $ must be odd . The integer $ <nat:252> $ is an even number in $ \mathbb{Z}^+ $ . Accordingly , the term $ <nat:252> <var:K> $ will be even also . The products $ <nat:52> <var:i> $ , $ <nat:162> <var:c> $ , $ <nat:98> <var:J> $ , as well as $ <var:u> <nat:202> $ are known to be even . This claim is proven since the product of an even positive integer with an arbitrary natural must be an even number . This holds since the leading terms $ <nat:52> $ , $ <nat:162> $ , $ <nat:98> $ , and moreover $ <nat:202> $ are known to be themselves even numbers in $ \mathbb{Z}^+ $ . In addition , we know that the pair $ <var:S> <nat:104> $ is known as even . This fact is true from the knowledge multiplying of an even number in $ \mathbb{Z}^+ $ with a integer is an even natural , and must be true from the fact the leading term $ <nat:104> $ is guaranteed to be an even natural . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:J> <var:c> <var:K> <var:i> <var:S> <var:u> : nat , Nat . odd ( <nat:104> * <var:S> + <nat:252> * <var:K> + <nat:202> * <var:u> + <nat:98> * <var:J> + <nat:162> * <var:c> + <nat:52> * <var:i> + <nat:71> ) = true . Proof . intros . rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . assert ( <genH> : Nat . even <nat:252> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:252> * <var:K> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:52> = true ) . { auto . } assert ( <genH> : Nat . even <nat:162> = true ) . { auto . } assert ( <genH> : Nat . even <nat:98> = true ) . { auto . } assert ( <genH> : Nat . even <nat:202> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:52> * <var:i> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:162> * <var:c> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:98> * <var:J> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:202> * <var:u> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:104> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:104> * <var:S> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 