\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:104> \times <var:U> + <nat:426> \times <var:r> + <nat:118> \times <var:L> + <nat:321> + <var:b> \times <nat:92> + <var:c> \times <nat:26> + <nat:156> \times <var:S> + <nat:136> \times <var:e> + <nat:236> \times <var:y> $ must be odd using some unknowns $ <var:S> $ , $ <var:U> $ , $ <var:r> $ , $ <var:b> $ , $ <var:L> $ , $ <var:e> $ , $ <var:y> $ , and $ <var:c> $ . \end{theorem} \begin{proof} The summation $ <var:e> \cdot <nat:136> + <nat:118> \cdot <var:L> + <var:S> \cdot <nat:156> + <nat:92> \cdot <var:b> + <nat:26> \cdot <var:c> + <nat:236> \cdot <var:y> + <nat:321> + <var:U> \cdot <nat:104> + <nat:426> \cdot <var:r> $ is guaranteed to be odd since the summation $ <var:y> <nat:236> + <nat:26> <var:c> + <nat:136> <var:e> + <var:U> <nat:104> + <nat:426> <var:r> + <var:L> <nat:118> + <nat:156> <var:S> + <nat:92> <var:b> $ is known as even , from the fact the totaling between an even number in $ \mathbb{N} $ and an even whole number is guaranteed to be even . The natural numbers $ <nat:236> $ , $ <nat:426> $ , as well as $ <nat:118> $ will be even Notice that the integers $ <nat:92> $ and moreover $ <nat:104> $ are obviously even In addition , see that the integer $ <nat:26> $ is an even number in $ \mathbb{Z}^+ $ Notice the positive integer $ <nat:136> $ is obviously an even number The coefficient $ <nat:156> $ is known to be even \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:S> <var:U> <var:r> <var:b> <var:L> <var:e> <var:y> <var:c> : nat , Nat . odd ( <nat:104> * <var:U> + <nat:426> * <var:r> + <nat:118> * <var:L> + <nat:92> * <var:b> + <nat:26> * <var:c> + <nat:156> * <var:S> + <nat:136> * <var:e> + <nat:236> * <var:y> + <nat:321> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:236> = true ) . { auto . } assert ( <genH> : Nat . even <nat:426> = true ) . { auto . } assert ( <genH> : Nat . even <nat:118> = true ) . { auto . } assert ( <genH> : Nat . even <nat:92> = true ) . { auto . } assert ( <genH> : Nat . even <nat:104> = true ) . { auto . } assert ( <genH> : Nat . even <nat:26> = true ) . { auto . } assert ( <genH> : Nat . even <nat:136> = true ) . { auto . } assert ( <genH> : Nat . even <nat:156> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:104> * <var:U> + <nat:426> * <var:r> + <nat:118> * <var:L> + <nat:92> * <var:b> + <nat:26> * <var:c> + <nat:156> * <var:S> + <nat:136> * <var:e> + <nat:236> * <var:y> ) = true ) . { repeat rewrite Nat . even_add . repeat rewrite Nat . even_mul . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . auto . Qed . 