\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:18> <var:o> + <nat:177> + <var:z> <nat:24> + <nat:34> <var:V> + <var:u> <nat:180> $ is odd for any $ <var:u> $ , $ <var:V> $ , $ <var:z> $ , and $ <var:o> \in \mathbb{N} $ . \end{theorem} \begin{proof} Take note $ <nat:177> $ is trivially an odd number in $ \mathbb{N} $ . The summing between even elements of $ \mathbb{N} $ collectively and an odd positive integer must be an odd whole number . So , $ <var:u> <nat:180> + <var:V> <nat:34> + <var:o> <nat:18> + <nat:177> + <nat:24> <var:z> $ by its very nature is guaranteed to be odd . Recall that the positive integer $ <nat:34> $ is guaranteed to be an even number in $ \mathbb{N} $ . Then , the term $ <var:V> \times <nat:34> $ is guaranteed to be even also . We know that the term $ <var:u> \times <nat:180> $ is an even positive integer . This fact is true from the knowledge multiplying between an even natural number with an arbitrary natural is guaranteed to be an even natural number and moreover the number $ <nat:180> $ is clearly an even number in $ \mathbb{N} $ . The product $ <nat:18> \times <var:o> $ is clearly an even number in $ \mathbb{Z}^+ $ . This must be true by reason that taking the product of an even number in $ \mathbb{N} $ with some natural number is guaranteed to be even . This fact holds from the knowledge the integer $ <nat:18> $ is clearly even . Additionally , the coefficient $ <nat:24> $ is an even natural . Therefore , the term $ <nat:24> \times <var:z> $ is even as well . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:u> <var:V> <var:z> <var:o> : nat , Nat . odd ( <nat:18> * <var:o> + <nat:24> * <var:z> + <nat:34> * <var:V> + <nat:180> * <var:u> + <nat:177> ) = true . Proof . intros . assert ( <genH> : Nat . odd <nat:177> = true ) . { auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . assert ( <genH> : Nat . even <nat:34> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:34> * <var:V> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:180> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:180> * <var:u> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:18> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:18> * <var:o> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:24> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:24> * <var:z> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 