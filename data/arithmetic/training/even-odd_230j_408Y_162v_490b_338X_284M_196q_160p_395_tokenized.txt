\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} With unknowns $ <var:p> $ , $ <var:b> $ , $ <var:Y> $ , $ <var:j> $ , $ <var:v> $ , $ <var:X> $ , $ <var:M> $ , and $ <var:q> $ the expression $ <var:j> \times <nat:230> + <var:Y> \times <nat:408> + <var:v> \times <nat:162> + <nat:395> + <var:b> \times <nat:490> + <var:X> \times <nat:338> + <nat:284> \times <var:M> + <nat:196> \times <var:q> + <var:p> \times <nat:160> $ will be odd . \end{theorem} \begin{proof} The summing of even numbers together and an odd element of $ \mathbb{Z}^+ $ will be itself an odd element of $ \mathbb{N} $ . Take note that the products $ <var:Y> \cdot <nat:408> $ , $ <var:b> \cdot <nat:490> $ , plus $ <var:X> \cdot <nat:338> $ must be even as a consequence that the multiplication between an even integer and an arbitrary number in $ \mathbb{Z}^+ $ is even . Building on , the pairs $ <nat:284> \cdot <var:M> $ , $ <var:v> \cdot <nat:162> $ , and $ <var:q> \cdot <nat:196> $ will be even since the multiplication between an even whole number and a element of $ \mathbb{N} $ is guaranteed to be even . The pair $ <nat:230> \cdot <var:j> $ is even from the fact the product between an even number in $ \mathbb{Z}^+ $ and a number in $ \mathbb{Z}^+ $ must be even . The term $ <var:p> \cdot <nat:160> $ is trivially an even number in $ \mathbb{N} $ . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:p> <var:b> <var:Y> <var:j> <var:v> <var:X> <var:M> <var:q> : nat , Nat . odd ( <nat:230> * <var:j> + <nat:408> * <var:Y> + <nat:162> * <var:v> + <nat:490> * <var:b> + <nat:338> * <var:X> + <nat:284> * <var:M> + <nat:196> * <var:q> + <nat:160> * <var:p> + <nat:395> ) = true . Proof . intros . rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . assert ( <genH> : Nat . even ( <nat:408> * <var:Y> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:490> * <var:b> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:338> * <var:X> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:284> * <var:M> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:162> * <var:v> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:196> * <var:q> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:230> * <var:j> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:160> * <var:p> ) = true ) . { rewrite Nat . even_mul . auto . } rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 