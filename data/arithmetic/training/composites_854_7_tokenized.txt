\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Wherever we get $ <var:j> = <var:S> \times <var:Z> \times <var:C> \times <var:i> \times <var:Y> \times <var:n> \times <var:e> $ for $ <var:j> \in \mathbb{Z}^+ $ as well as satisfying the condition that $ <var:C> $ , $ <var:S> $ , $ <var:n> $ , $ <var:i> $ , $ <var:Z> $ , $ <var:Y> $ , $ <var:e> \geq <nat:2> $ taking some natural numbers $ <var:Z> $ , $ <var:S> $ , $ <var:n> $ , $ <var:e> $ , $ <var:C> $ , $ <var:i> $ , $ <var:Y> $ , then denote that $ <var:j> $ is <def:seven-composite> . So $ <nat:285120> = <var:j> $ is a <def:seven-composite> positive integer . \end{theorem} \begin{proof} Take $ <var:n> = <nat:12> $ , $ <var:S> = <nat:4> $ , $ <var:i> = <nat:3> $ , $ <var:e> = <nat:9> $ , $ <var:Y> = <nat:10> $ , $ <var:C> = <nat:11> $ , $ <var:Z> = <nat:2> $ . We prove <nat:285120> is <def:seven-composite> by reason of $ <nat:3> $ , $ <nat:2> $ , $ <nat:11> $ , $ <nat:9> $ , $ <nat:10> $ , $ <nat:12> $ and $ <nat:4> $ are larger than <nat:1> as well as on account of $ <nat:285120> = <var:e> \times <var:C> \times <var:S> \times <var:i> \times <var:Z> \times <var:Y> \times <var:n> $ . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:seven-composite> ( <var:j> : nat ) := exists <var:Z> <var:S> <var:n> <var:e> <var:C> <var:i> <var:Y> : nat , ( <var:j> = <var:S> * <var:Z> * <var:C> * <var:i> * <var:Y> * <var:n> * <var:e> ) /\ ( <var:C> >= <nat:2> ) /\ ( <var:S> >= <nat:2> ) /\ ( <var:n> >= <nat:2> ) /\ ( <var:i> >= <nat:2> ) /\ ( <var:Z> >= <nat:2> ) /\ ( <var:Y> >= <nat:2> ) /\ ( <var:e> >= <nat:2> ) . Theorem <genP:1> : <def:seven-composite> <nat:285120> . Proof . unfold <def:seven-composite> . exists <nat:2> . exists <nat:4> . exists <nat:12> . exists <nat:9> . exists <nat:11> . exists <nat:3> . exists <nat:10> . assert ( <genH> : <nat:3> > <nat:1> ) . { lia . } assert ( <genH> : <nat:2> > <nat:1> ) . { lia . } assert ( <genH> : <nat:11> > <nat:1> ) . { lia . } assert ( <genH> : <nat:9> > <nat:1> ) . { lia . } assert ( <genH> : <nat:10> > <nat:1> ) . { lia . } assert ( <genH> : <nat:12> > <nat:1> ) . { lia . } assert ( <genH> : <nat:4> > <nat:1> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 