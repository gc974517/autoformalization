\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Let $ <var:A> $ , $ <var:Y> $ , $ <var:t> $ , $ <var:O> $ , $ <var:H> $ , $ <var:J> $ and $ <var:r> \in \mathbb{Z}^+ $ so that $ <var:t> $ , $ <var:J> $ , $ <var:H> $ , $ <var:r> $ , $ <var:A> $ , $ <var:O> $ and $ <var:Y> > <nat:1> $ . $ <var:H> \times <var:t> \times <var:Y> \times <var:r> \times <var:J> \times <var:O> \times <var:A> = <nat:90720> $ . \end{theorem} \begin{proof} Assume $ <var:t> = <nat:9> $ , $ <var:r> = <nat:2> $ , $ <var:H> = <nat:3> $ , $ <var:Y> = <nat:12> $ , $ <var:O> = <nat:7> $ , $ <var:J> = <nat:4> $ and $ <var:A> = <nat:5> $ . We confirm $ <var:J> \times <var:A> \times <var:r> \times <var:t> \times <var:H> \times <var:O> \times <var:Y> = <nat:90720> $ and $ <var:Y> $ , $ <var:O> $ , $ <var:A> $ , $ <var:J> $ , $ <var:H> $ , $ <var:t> $ and $ <var:r> $ are more than <nat:1> . Observe $ <var:H> = <nat:3> $ , $ <var:A> = <nat:5> $ , $ <var:Y> = <nat:12> $ , $ <var:J> = <nat:4> $ , $ <var:r> = <nat:2> $ , $ <var:t> = <nat:9> $ and $ <var:O> = <nat:7> $ are larger than <nat:1> . \end{proof} \end{document} 
~
Require Import Lia . Theorem <genP:1> : exists <var:A> <var:Y> <var:t> <var:O> <var:H> <var:J> <var:r> : nat , ( <var:t> > <nat:1> ) /\ ( <var:J> > <nat:1> ) /\ ( <var:H> > <nat:1> ) /\ ( <var:r> > <nat:1> ) /\ ( <var:A> > <nat:1> ) /\ ( <var:O> > <nat:1> ) /\ ( <var:Y> > <nat:1> ) /\ ( <var:H> * <var:t> * <var:Y> * <var:r> * <var:J> * <var:O> * <var:A> = <nat:90720> ) . Proof . exists <nat:5> . exists <nat:12> . exists <nat:9> . exists <nat:7> . exists <nat:3> . exists <nat:4> . exists <nat:2> . assert ( <genH> : <nat:3> > <nat:1> ) . { lia . } assert ( <genH> : <nat:5> > <nat:1> ) . { lia . } assert ( <genH> : <nat:12> > <nat:1> ) . { lia . } assert ( <genH> : <nat:4> > <nat:1> ) . { lia . } assert ( <genH> : <nat:2> > <nat:1> ) . { lia . } assert ( <genH> : <nat:9> > <nat:1> ) . { lia . } assert ( <genH> : <nat:7> > <nat:1> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 