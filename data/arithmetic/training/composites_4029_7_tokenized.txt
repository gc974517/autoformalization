\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:798336> $ is the same as $ <var:i> \cdot <var:n> \cdot <var:z> \cdot <var:g> \cdot <var:o> \cdot <var:x> \cdot <var:a> $ given $ <var:o> $ , $ <var:a> $ , $ <var:z> $ , $ <var:g> $ , $ <var:i> $ , $ <var:n> $ , and $ <var:x> $ where $ <var:o> $ , $ <var:x> $ , $ <var:z> $ , $ <var:i> $ , $ <var:a> $ , $ <var:g> $ , $ <var:n> > <nat:1> $ . \end{theorem} \begin{proof} Take $ <var:g> = <nat:12> $ , $ <var:n> = <nat:9> $ , $ <var:x> = <nat:7> $ , $ <var:a> = <nat:6> $ , $ <var:i> = <nat:8> $ , $ <var:z> = <nat:11> $ and $ <var:o> = <nat:2> $ . We prove $ <var:g> \cdot <var:z> \cdot <var:i> \cdot <var:n> \cdot <var:a> \cdot <var:o> \cdot <var:x> = <nat:798336> $ . We confirm the theorem holds by reason of $ <var:o> \times <var:i> \times <var:z> \times <var:x> \times <var:n> \times <var:g> \times <var:a> = <nat:798336> $ and as $ <var:n> = <nat:9> $ , $ <var:o> = <nat:2> $ , $ <var:x> = <nat:7> $ , $ <var:g> = <nat:12> $ , $ <var:z> = <nat:11> $ , $ <var:i> = <nat:8> $ , and $ <var:a> = <nat:6> > <nat:1> $ . \end{proof} \end{document} 
~
Require Import Lia . Theorem <genP:1> : exists <var:o> <var:a> <var:z> <var:g> <var:i> <var:n> <var:x> : nat , ( <nat:798336> = <var:i> * <var:n> * <var:z> * <var:g> * <var:o> * <var:x> * <var:a> ) /\ ( <var:o> > <nat:1> ) /\ ( <var:x> > <nat:1> ) /\ ( <var:z> > <nat:1> ) /\ ( <var:i> > <nat:1> ) /\ ( <var:a> > <nat:1> ) /\ ( <var:g> > <nat:1> ) /\ ( <var:n> > <nat:1> ) . Proof . exists <nat:2> . exists <nat:6> . exists <nat:11> . exists <nat:12> . exists <nat:8> . exists <nat:9> . exists <nat:7> . assert ( <genH> : <nat:9> > <nat:1> ) . { lia . } assert ( <genH> : <nat:2> > <nat:1> ) . { lia . } assert ( <genH> : <nat:7> > <nat:1> ) . { lia . } assert ( <genH> : <nat:12> > <nat:1> ) . { lia . } assert ( <genH> : <nat:11> > <nat:1> ) . { lia . } assert ( <genH> : <nat:8> > <nat:1> ) . { lia . } assert ( <genH> : <nat:6> > <nat:1> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 