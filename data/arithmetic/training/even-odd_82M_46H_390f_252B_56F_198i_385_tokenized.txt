\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:M> <nat:82> + <nat:46> <var:H> + <nat:390> <var:f> + <var:B> <nat:252> + <nat:56> <var:F> + <nat:385> + <nat:198> <var:i> $ is guaranteed to be odd . \end{theorem} \begin{proof} The natural numbers $ <nat:82> $ , $ <nat:46> $ , $ <nat:390> $ , $ <nat:252> $ , $ <nat:56> $ , additionally $ <nat:198> $ are even positive integers . As a consequence , the terms $ <nat:82> \cdot <var:M> $ , $ <var:H> \cdot <nat:46> $ , $ <nat:390> \cdot <var:f> $ , $ <var:B> \cdot <nat:252> $ , $ <var:F> \cdot <nat:56> $ , and $ <var:i> \cdot <nat:198> $ will be even also . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:M> <var:H> <var:f> <var:B> <var:F> <var:i> : nat , Nat . odd ( <nat:82> * <var:M> + <nat:46> * <var:H> + <nat:390> * <var:f> + <nat:252> * <var:B> + <nat:56> * <var:F> + <nat:198> * <var:i> + <nat:385> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:82> = true ) . { auto . } assert ( <genH> : Nat . even <nat:46> = true ) . { auto . } assert ( <genH> : Nat . even <nat:390> = true ) . { auto . } assert ( <genH> : Nat . even <nat:252> = true ) . { auto . } assert ( <genH> : Nat . even <nat:56> = true ) . { auto . } assert ( <genH> : Nat . even <nat:198> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:82> * <var:M> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:46> * <var:H> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:390> * <var:f> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:252> * <var:B> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:56> * <var:F> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:198> * <var:i> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 