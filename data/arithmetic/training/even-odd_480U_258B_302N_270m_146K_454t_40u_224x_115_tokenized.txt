\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:N> <nat:302> + <var:U> <nat:480> + <var:x> <nat:224> + <var:m> <nat:270> + <nat:258> <var:B> + <nat:454> <var:t> + <nat:115> + <nat:146> <var:K> + <nat:40> <var:u> $ will be odd . \end{theorem} \begin{proof} Our result must be true from the fact $ <var:U> \times <nat:480> + <var:B> \times <nat:258> + <var:N> \times <nat:302> + <nat:270> \times <var:m> + <nat:146> \times <var:K> + <nat:454> \times <var:t> + <var:u> \times <nat:40> + <var:x> \times <nat:224> $ is obviously even . We know that the products $ <nat:480> \times <var:U> $ , $ <nat:258> \times <var:B> $ , $ <var:N> \times <nat:302> $ , $ <var:m> \times <nat:270> $ , $ <nat:146> \times <var:K> $ , $ <nat:454> \times <var:t> $ , $ <var:u> \times <nat:40> $ , plus $ <nat:224> \times <var:x> $ are trivially even by reason that the coefficients $ <nat:480> $ , $ <nat:258> $ , $ <nat:302> $ , $ <nat:270> $ , $ <nat:146> $ , $ <nat:454> $ , $ <nat:40> $ , and likewise $ <nat:224> $ must be even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:N> <var:U> <var:x> <var:m> <var:B> <var:t> <var:K> <var:u> : nat , Nat . odd ( <nat:302> * <var:N> + <nat:480> * <var:U> + <nat:224> * <var:x> + <nat:270> * <var:m> + <nat:258> * <var:B> + <nat:454> * <var:t> + <nat:146> * <var:K> + <nat:40> * <var:u> + <nat:115> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:480> = true ) . { auto . } assert ( <genH> : Nat . even <nat:258> = true ) . { auto . } assert ( <genH> : Nat . even <nat:302> = true ) . { auto . } assert ( <genH> : Nat . even <nat:270> = true ) . { auto . } assert ( <genH> : Nat . even <nat:146> = true ) . { auto . } assert ( <genH> : Nat . even <nat:454> = true ) . { auto . } assert ( <genH> : Nat . even <nat:40> = true ) . { auto . } assert ( <genH> : Nat . even <nat:224> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:480> * <var:U> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:258> * <var:B> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:302> * <var:N> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:270> * <var:m> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:146> * <var:K> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:454> * <var:t> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:40> * <var:u> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:224> * <var:x> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:302> * <var:N> + <nat:480> * <var:U> + <nat:224> * <var:x> + <nat:270> * <var:m> + <nat:258> * <var:B> + <nat:454> * <var:t> + <nat:146> * <var:K> + <nat:40> * <var:u> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . auto . Qed . 