\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:252> \times <var:q> + <nat:437> + <var:p> \times <nat:136> + <nat:72> \times <var:z> + <nat:416> \times <var:d> $ will be odd . \end{theorem} \begin{proof} The pairs $ <nat:252> * <var:q> $ and moreover $ <var:d> * <nat:416> $ will be even . This claim is true from the fact the integers $ <nat:252> $ additionally $ <nat:416> $ are clearly even elements of $ \mathbb{Z}^+ $ . Remember that the term $ <var:z> * <nat:72> $ is an even natural number by reason that taking the product between an even natural number with an arbitrary number will be trivially an even positive integer plus the natural number $ <nat:72> $ is even . Building on , we know $ <nat:136> * <var:p> $ is obviously even since the multiplication of an even integer and a element of $ \mathbb{N} $ will be even . This holds from the fact the number $ <nat:136> $ is guaranteed to be an even whole number . Notice that $ <nat:437> $ is trivially odd . Notice that the totaling of even numbers together with an odd positive integer is in itself an odd whole number . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:q> <var:p> <var:z> <var:d> : nat , Nat . odd ( <nat:252> * <var:q> + <nat:136> * <var:p> + <nat:72> * <var:z> + <nat:416> * <var:d> + <nat:437> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:252> = true ) . { auto . } assert ( <genH> : Nat . even <nat:416> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:252> * <var:q> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:416> * <var:d> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:72> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:72> * <var:z> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:136> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:136> * <var:p> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . odd <nat:437> = true ) . { auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 