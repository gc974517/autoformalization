\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} If and only if we get so that $ <var:b> $ , $ <var:l> $ , $ <var:i> $ , $ <var:g> $ , $ <var:k> $ , $ <var:v> $ and $ <var:u> > <nat:1> $ satisfying the condition that with some integer $ <var:o> $ , $ <var:b> * <var:i> * <var:l> * <var:k> * <var:v> * <var:g> * <var:u> = <var:o> $ , take as given that $ <var:o> $ is a <def:seven-composite> number using some natural numbers $ <var:b> $ , $ <var:k> $ , $ <var:i> $ , $ <var:v> $ , $ <var:l> $ , $ <var:g> $ , $ <var:u> $ . Hence the natural number <nat:142560> is a <def:seven-composite> whole number . \end{theorem} \begin{proof} Recall that a <def:seven-composite> number is the multiplication between natural numbers $ <var:b> $ , $ <var:v> $ , $ <var:u> $ , $ <var:l> $ , $ <var:g> $ , $ <var:k> $ and $ <var:i> $ greater than <nat:1> . Assume $ <var:i> = <nat:10> $ , $ <var:v> = <nat:9> $ , $ <var:l> = <nat:11> $ , $ <var:g> = <nat:3> $ , $ <var:k> = <nat:4> $ , $ <var:u> = <nat:2> $ and $ <var:b> = <nat:6> $ . We justify <nat:142560> is a <def:seven-composite> whole number . Note that $ <nat:4> $ , $ <nat:3> $ , $ <nat:6> $ , $ <nat:2> $ , $ <nat:9> $ , $ <nat:11> $ and $ <nat:10> $ are greater than <nat:1> . In addition notice further $ <nat:142560> = <var:b> \times <var:l> \times <var:v> \times <var:u> \times <var:i> \times <var:g> \times <var:k> $ . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:seven-composite> ( <var:o> : nat ) := exists <var:b> <var:k> <var:i> <var:v> <var:l> <var:g> <var:u> : nat , ( <var:b> > <nat:1> ) /\ ( <var:l> > <nat:1> ) /\ ( <var:i> > <nat:1> ) /\ ( <var:g> > <nat:1> ) /\ ( <var:k> > <nat:1> ) /\ ( <var:v> > <nat:1> ) /\ ( <var:u> > <nat:1> ) /\ ( <var:b> * <var:i> * <var:l> * <var:k> * <var:v> * <var:g> * <var:u> = <var:o> ) . Theorem <genP:1> : <def:seven-composite> <nat:142560> . Proof . unfold <def:seven-composite> . exists <nat:6> . exists <nat:4> . exists <nat:10> . exists <nat:9> . exists <nat:11> . exists <nat:3> . exists <nat:2> . assert ( <genH> : <nat:4> > <nat:1> ) . { lia . } assert ( <genH> : <nat:3> > <nat:1> ) . { lia . } assert ( <genH> : <nat:6> > <nat:1> ) . { lia . } assert ( <genH> : <nat:2> > <nat:1> ) . { lia . } assert ( <genH> : <nat:9> > <nat:1> ) . { lia . } assert ( <genH> : <nat:11> > <nat:1> ) . { lia . } assert ( <genH> : <nat:10> > <nat:1> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 