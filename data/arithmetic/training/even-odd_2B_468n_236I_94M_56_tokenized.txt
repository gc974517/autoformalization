\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Assuming variables $ <var:n> $ , $ <var:I> $ , $ <var:B> $ , and $ <var:M> $ the sum $ <nat:56> + <nat:94> * <var:M> + <nat:468> * <var:n> + <var:I> * <nat:236> + <nat:2> * <var:B> $ will be even . \end{theorem} \begin{proof} We prove the formula $ <nat:468> \cdot <var:n> + <nat:236> \cdot <var:I> + <nat:56> + <var:B> \cdot <nat:2> + <var:M> \cdot <nat:94> $ is even . Observe the addition of an even integer with an even number in $ \mathbb{N} $ must be instrinsically an even number in $ \mathbb{Z}^+ $ . $ <var:I> <nat:236> + <var:M> <nat:94> + <nat:468> <var:n> + <nat:56> + <var:B> <nat:2> $ is known as even because the sum $ <nat:236> <var:I> + <var:M> <nat:94> + <nat:468> <var:n> + <nat:2> <var:B> $ is trivially even . Furthermore , the whole numbers $ <nat:236> $ , $ <nat:94> $ , $ <nat:468> $ , and moreover $ <nat:2> $ are guaranteed to be even whole numbers . As a consequence , the terms $ <var:I> \times <nat:236> $ , $ <nat:94> \times <var:M> $ , $ <var:n> \times <nat:468> $ , as well as $ <nat:2> \times <var:B> $ is guaranteed to be even too . The summation $ <var:B> * <nat:2> + <nat:468> * <var:n> + <var:I> * <nat:236> + <nat:94> * <var:M> $ must be even from the fact multiplying between an even element of $ \mathbb{Z}^+ $ and some element of $ \mathbb{Z}^+ $ is by itself an even whole number . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:n> <var:I> <var:B> <var:M> : nat , Nat . even ( <nat:94> * <var:M> + <nat:468> * <var:n> + <nat:236> * <var:I> + <nat:2> * <var:B> + <nat:56> ) = true . Proof . intros . rewrite Nat . even_add . assert ( <genH> : Nat . even <nat:236> = true ) . { auto . } assert ( <genH> : Nat . even <nat:94> = true ) . { auto . } assert ( <genH> : Nat . even <nat:468> = true ) . { auto . } assert ( <genH> : Nat . even <nat:2> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:236> * <var:I> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:94> * <var:M> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:468> * <var:n> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:2> * <var:B> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:94> * <var:M> + <nat:468> * <var:n> + <nat:236> * <var:I> + <nat:2> * <var:B> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite <genH> . auto . Qed . 