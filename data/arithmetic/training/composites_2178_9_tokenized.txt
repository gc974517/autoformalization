\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \newtheorem{definition}{Definition} \begin{document} \begin{definition} Let that $ <var:z> $ is a <def:nine-composite> positive integer under the condition with some $ <var:L> $ , $ <var:Z> $ , $ <var:l> $ , $ <var:v> $ , $ <var:M> $ , $ <var:H> $ , $ <var:C> $ , $ <var:I> $ , $ <var:T> \in \mathbb{Z}^+ $ we have $ <var:v> $ , $ <var:H> $ , $ <var:C> $ , $ <var:L> $ , $ <var:I> $ , $ <var:l> $ , $ <var:M> $ , $ <var:Z> $ and $ <var:T> \geq <nat:2> $ plus with some natural number $ <var:z> $ , $ <var:v> \cdot <var:L> \cdot <var:H> \cdot <var:T> \cdot <var:I> \cdot <var:Z> \cdot <var:M> \cdot <var:C> \cdot <var:l> = <var:z> $ . \end{definition} \begin{theorem} The integer <nat:29937600> is a <def:nine-composite> positive integer . \end{theorem} \begin{proof} Recall a <def:nine-composite> natural number is the product between natural numbers $ <var:l> $ , $ <var:Z> $ , $ <var:C> $ , $ <var:H> $ , $ <var:I> $ , $ <var:T> $ , $ <var:M> $ , $ <var:L> $ and $ <var:v> $ greater than or equal to <nat:2> . We verify <nat:29937600> is a <def:nine-composite> integer . Observe $ <nat:5> $ , $ <nat:4> $ , $ <nat:7> $ , $ <nat:12> $ , $ <nat:10> $ , $ <nat:3> $ , $ <nat:11> $ , $ <nat:9> $ , and $ <nat:6> \geq <nat:2> $ . Plus observe that additionally $ <var:L> \cdot <var:C> \cdot <var:v> \cdot <var:I> \cdot <var:l> \cdot <var:T> \cdot <var:H> \cdot <var:M> \cdot <var:Z> = <nat:29937600> $ yields $ <var:I> = <nat:7> $ , $ <var:H> = <nat:3> $ , $ <var:v> = <nat:10> $ , $ <var:L> = <nat:11> $ , $ <var:M> = <nat:4> $ , $ <var:C> = <nat:12> $ , $ <var:l> = <nat:5> $ , $ <var:T> = <nat:9> $ and $ <var:Z> = <nat:6> $ . This yields the proposition is valid . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:nine-composite> ( <var:z> : nat ) := exists <var:L> <var:Z> <var:l> <var:v> <var:M> <var:H> <var:C> <var:I> <var:T> : nat , ( <var:v> >= <nat:2> ) /\ ( <var:H> >= <nat:2> ) /\ ( <var:C> >= <nat:2> ) /\ ( <var:L> >= <nat:2> ) /\ ( <var:I> >= <nat:2> ) /\ ( <var:l> >= <nat:2> ) /\ ( <var:M> >= <nat:2> ) /\ ( <var:Z> >= <nat:2> ) /\ ( <var:T> >= <nat:2> ) /\ ( <var:v> * <var:L> * <var:H> * <var:T> * <var:I> * <var:Z> * <var:M> * <var:C> * <var:l> = <var:z> ) . Theorem <genP:1> : <def:nine-composite> <nat:29937600> . Proof . unfold <def:nine-composite> . assert ( <genH> : <nat:5> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:4> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:7> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:12> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:10> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:3> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:11> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:9> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:6> >= <nat:2> ) . { lia . } exists <nat:11> . exists <nat:6> . exists <nat:5> . exists <nat:10> . exists <nat:4> . exists <nat:3> . exists <nat:12> . exists <nat:7> . exists <nat:9> . repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 