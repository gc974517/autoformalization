\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \newtheorem{definition}{Definition} \begin{document} \begin{definition} Whenever we get $ <var:t> $ , $ <var:P> $ , $ <var:o> $ , $ <var:g> $ , $ <var:w> $ , $ <var:K> $ , $ <var:J> $ , $ <var:u> $ and $ <var:n> \geq <nat:2> $ where assuming $ <var:h> \in \mathbb{N} $ , $ <var:P> \cdot <var:o> \cdot <var:t> \cdot <var:w> \cdot <var:g> \cdot <var:n> \cdot <var:K> \cdot <var:u> \cdot <var:J> = <var:h> $ for some $ <var:K> $ , $ <var:w> $ , $ <var:P> $ , $ <var:o> $ , $ <var:g> $ , $ <var:J> $ , $ <var:n> $ , $ <var:t> $ , $ <var:u> \in \mathbb{Z}^+ $ , we denote that $ <var:h> $ is a <def:nine-composite> positive integer . \end{definition} \begin{theorem} $ <nat:34214400> = <var:h> $ is a <def:nine-composite> positive integer . \end{theorem} \begin{proof} Remember a <def:nine-composite> integer is the multiplication between whole numbers $ <var:g> $ , $ <var:o> $ , $ <var:n> $ , $ <var:t> $ , $ <var:P> $ , $ <var:u> $ , $ <var:K> $ , $ <var:J> $ , $ <var:w> $ greater than or equal to <nat:2> . Let $ <var:w> = <nat:5> $ , $ <var:J> = <nat:3> $ , $ <var:K> = <nat:4> $ , $ <var:o> = <nat:11> $ , $ <var:P> = <nat:9> $ , $ <var:g> = <nat:10> $ , $ <var:t> = <nat:12> $ , $ <var:u> = <nat:6> $ and $ <var:n> = <nat:8> $ . Note that $ <nat:9> $ , $ <nat:12> $ , $ <nat:3> $ , $ <nat:8> $ , $ <nat:5> $ , $ <nat:6> $ , $ <nat:10> $ , $ <nat:4> $ , $ <nat:11> \geq <nat:2> $ . Hence , <nat:34214400> is <def:nine-composite> has been validated . So , $ <var:K> $ , $ <var:n> $ , $ <var:J> $ , $ <var:u> $ , $ <var:t> $ , $ <var:w> $ , $ <var:o> $ , $ <var:P> $ , and $ <var:g> \geq <nat:2> $ as well as $ <var:K> \times <var:w> \times <var:n> \times <var:o> \times <var:t> \times <var:J> \times <var:u> \times <var:g> \times <var:P> = <nat:34214400> $ has been validated . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:nine-composite> ( <var:h> : nat ) := exists <var:K> <var:w> <var:P> <var:o> <var:g> <var:J> <var:n> <var:t> <var:u> : nat , ( <var:t> >= <nat:2> ) /\ ( <var:P> >= <nat:2> ) /\ ( <var:o> >= <nat:2> ) /\ ( <var:g> >= <nat:2> ) /\ ( <var:w> >= <nat:2> ) /\ ( <var:K> >= <nat:2> ) /\ ( <var:J> >= <nat:2> ) /\ ( <var:u> >= <nat:2> ) /\ ( <var:n> >= <nat:2> ) /\ ( <var:P> * <var:o> * <var:t> * <var:w> * <var:g> * <var:n> * <var:K> * <var:u> * <var:J> = <var:h> ) . Theorem <genP:1> : <def:nine-composite> <nat:34214400> . Proof . unfold <def:nine-composite> . exists <nat:4> . exists <nat:5> . exists <nat:9> . exists <nat:11> . exists <nat:10> . exists <nat:3> . exists <nat:8> . exists <nat:12> . exists <nat:6> . assert ( <genH> : <nat:9> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:12> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:3> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:8> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:5> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:6> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:10> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:4> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:11> >= <nat:2> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 