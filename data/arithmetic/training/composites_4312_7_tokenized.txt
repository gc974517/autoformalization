\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \newtheorem{definition}{Definition} \begin{document} \begin{definition} Wherever there exist $ <var:d> $ , $ <var:p> $ , $ <var:L> $ , $ <var:U> $ , $ <var:h> $ , $ <var:J> $ , $ <var:R> \in \mathbb{N} $ then define that $ <var:T> \in \mathbb{N} $ will be considered to be a <def:seven-composite> number when $ <var:T> = <var:h> \cdot <var:L> \cdot <var:p> \cdot <var:R> \cdot <var:U> \cdot <var:d> \cdot <var:J> $ and unique factors are more than or equal to <nat:2> . \end{definition} \begin{theorem} $ <nat:86400> = <var:T> $ is a <def:seven-composite> whole number . \end{theorem} \begin{proof} Recall that a <def:seven-composite> natural number is the multiplication between numbers $ <var:L> $ , $ <var:U> $ , $ <var:h> $ , $ <var:J> $ , $ <var:d> $ , $ <var:R> $ and $ <var:p> $ larger than or equivalent to <nat:2> . Let $ <var:J> = <nat:10> $ , $ <var:h> = <nat:2> $ , $ <var:R> = <nat:8> $ , $ <var:U> = <nat:5> $ , $ <var:L> = <nat:9> $ , $ <var:p> = <nat:3> $ , $ <var:d> = <nat:4> $ . Notice $ <var:d> = <nat:4> $ , $ <var:U> = <nat:5> $ , $ <var:J> = <nat:10> $ , $ <var:L> = <nat:9> $ , $ <var:R> = <nat:8> $ , $ <var:p> = <nat:3> $ , $ <var:h> = <nat:2> $ are larger than or equivalent to <nat:2> . Furthermore notice also $ <var:L> \cdot <var:J> \cdot <var:h> \cdot <var:U> \cdot <var:p> \cdot <var:d> \cdot <var:R> = <nat:86400> $ . This yields our statement is valid . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:seven-composite> ( <var:T> : nat ) := exists <var:d> <var:p> <var:L> <var:U> <var:h> <var:J> <var:R> : nat , ( <var:T> = <var:h> * <var:L> * <var:p> * <var:R> * <var:U> * <var:d> * <var:J> ) /\ ( <var:d> >= <nat:2> ) /\ ( <var:p> >= <nat:2> ) /\ ( <var:L> >= <nat:2> ) /\ ( <var:U> >= <nat:2> ) /\ ( <var:h> >= <nat:2> ) /\ ( <var:J> >= <nat:2> ) /\ ( <var:R> >= <nat:2> ) . Theorem <genP:1> : <def:seven-composite> <nat:86400> . Proof . unfold <def:seven-composite> . exists <nat:4> . exists <nat:3> . exists <nat:9> . exists <nat:5> . exists <nat:2> . exists <nat:10> . exists <nat:8> . assert ( <genH> : <nat:4> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:5> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:10> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:9> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:8> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:3> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:2> >= <nat:2> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 