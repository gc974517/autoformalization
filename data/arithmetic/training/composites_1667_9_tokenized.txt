\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} <nat:17107200> is the multiplication between integers $ <var:t> $ , $ <var:y> $ , $ <var:N> $ , $ <var:w> $ , $ <var:J> $ , $ <var:M> $ , $ <var:C> $ , $ <var:A> $ , and $ <var:T> \in \mathbb{N} $ satisfying the condition that $ <var:T> $ , $ <var:y> $ , $ <var:w> $ , $ <var:J> $ , $ <var:t> $ , $ <var:C> $ , $ <var:M> $ , $ <var:A> $ and $ <var:N> $ more than or equal to <nat:2> . \end{theorem} \begin{proof} Allow $ <var:A> = <nat:10> $ , $ <var:N> = <nat:9> $ , $ <var:J> = <nat:8> $ , $ <var:t> = <nat:2> $ , $ <var:y> = <nat:12> $ , $ <var:w> = <nat:3> $ , $ <var:C> = <nat:11> $ , $ <var:T> = <nat:5> $ and $ <var:M> = <nat:6> $ . We present $ <nat:17107200> = <var:T> \cdot <var:M> \cdot <var:A> \cdot <var:C> \cdot <var:t> \cdot <var:N> \cdot <var:w> \cdot <var:J> \cdot <var:y> $ plus $ <var:N> $ , $ <var:w> $ , $ <var:C> $ , $ <var:J> $ , $ <var:T> $ , $ <var:y> $ , $ <var:t> $ , $ <var:M> $ , $ <var:A> $ are larger than or equivalent to <nat:2> . Note that $ <nat:5> $ , $ <nat:11> $ , $ <nat:10> $ , $ <nat:8> $ , $ <nat:2> $ , $ <nat:3> $ , $ <nat:12> $ , $ <nat:6> $ , $ <nat:9> \geq <nat:2> $ . \end{proof} \end{document} 
~
Require Import Lia . Theorem <genP:1> : exists <var:t> <var:y> <var:N> <var:w> <var:J> <var:M> <var:C> <var:A> <var:T> : nat , ( <nat:17107200> = <var:t> * <var:y> * <var:N> * <var:w> * <var:J> * <var:M> * <var:C> * <var:A> * <var:T> ) /\ ( <var:T> >= <nat:2> ) /\ ( <var:y> >= <nat:2> ) /\ ( <var:w> >= <nat:2> ) /\ ( <var:J> >= <nat:2> ) /\ ( <var:t> >= <nat:2> ) /\ ( <var:C> >= <nat:2> ) /\ ( <var:M> >= <nat:2> ) /\ ( <var:A> >= <nat:2> ) /\ ( <var:N> >= <nat:2> ) . Proof . exists <nat:2> . exists <nat:12> . exists <nat:9> . exists <nat:3> . exists <nat:8> . exists <nat:6> . exists <nat:11> . exists <nat:10> . exists <nat:5> . assert ( <genH> : <nat:5> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:11> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:10> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:8> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:2> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:3> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:12> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:6> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:9> >= <nat:2> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 