\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:410> \cdot <var:S> + <var:p> \cdot <nat:90> + <nat:414> \cdot <var:m> + <nat:20> \cdot <var:H> + <var:j> \cdot <nat:228> + <nat:326> \cdot <var:C> + <var:e> \cdot <nat:406> + <nat:104> \cdot <var:Q> + <nat:37> $ must be odd . \end{theorem} \begin{proof} See that the pairs $ <var:p> \cdot <nat:90> $ and likewise $ <nat:406> \cdot <var:e> $ are clearly even elements of $ \mathbb{N} $ . This is proven by reason that the multiplication between an even positive integer with some number in $ \mathbb{N} $ must be in itself an even element of $ \mathbb{Z}^+ $ . The pairs $ <nat:414> \cdot <var:m> $ , $ <var:j> \cdot <nat:228> $ , $ <var:C> \cdot <nat:326> $ , $ <var:S> \cdot <nat:410> $ , and likewise $ <var:H> \cdot <nat:20> $ are known to be even from the fact taking the product between an even integer and some number in $ \mathbb{Z}^+ $ is even . We know that the product $ <var:Q> \cdot <nat:104> $ is known as an even integer . We show $ <nat:90> \times <var:p> + <nat:410> \times <var:S> + <nat:228> \times <var:j> + <var:e> \times <nat:406> + <var:Q> \times <nat:104> + <var:C> \times <nat:326> + <nat:37> + <nat:414> \times <var:m> + <var:H> \times <nat:20> $ will be odd . Observe that the summing of even elements of $ \mathbb{N} $ successively with an odd natural must be itself an odd number in $ \mathbb{N} $ . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:S> <var:p> <var:m> <var:H> <var:j> <var:C> <var:e> <var:Q> : nat , Nat . odd ( <nat:410> * <var:S> + <nat:90> * <var:p> + <nat:414> * <var:m> + <nat:20> * <var:H> + <nat:228> * <var:j> + <nat:326> * <var:C> + <nat:406> * <var:e> + <nat:104> * <var:Q> + <nat:37> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:90> * <var:p> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:406> * <var:e> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:414> * <var:m> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:228> * <var:j> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:326> * <var:C> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:410> * <var:S> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:20> * <var:H> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:104> * <var:Q> ) = true ) . { rewrite Nat . even_mul . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 