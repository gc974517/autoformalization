\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} For positive terms $ <var:Y> $ , $ <var:A> $ , $ <var:R> $ , $ <var:W> $ , $ <var:y> $ , $ <var:M> $ , $ <var:G> $ , and $ <var:q> $ the expression $ <nat:320> * <var:M> + <nat:456> * <var:Y> + <nat:341> + <var:G> * <nat:166> + <var:A> * <nat:346> + <var:q> * <nat:82> + <var:y> * <nat:340> + <nat:228> * <var:W> + <var:R> * <nat:90> $ is guaranteed to be odd . \end{theorem} \begin{proof} Remember the summation between even numbers in $ \mathbb{Z}^+ $ concurrently and an odd natural number is guaranteed to be odd . This result holds since $ <nat:90> <var:R> + <var:Y> <nat:456> + <nat:228> <var:W> + <nat:82> <var:q> + <nat:340> <var:y> + <nat:320> <var:M> + <var:A> <nat:346> + <nat:166> <var:G> $ is guaranteed to be even . The whole numbers $ <nat:456> $ , $ <nat:166> $ , $ <nat:90> $ , and also $ <nat:340> $ will be even integers In addition to this , the whole numbers $ <nat:346> $ and also $ <nat:82> $ are trivially even The number $ <nat:228> $ is obviously even Observe the coefficient $ <nat:320> $ is obviously an even number in $ \mathbb{Z}^+ $ \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:Y> <var:A> <var:R> <var:W> <var:y> <var:M> <var:G> <var:q> : nat , Nat . odd ( <nat:320> * <var:M> + <nat:456> * <var:Y> + <nat:166> * <var:G> + <nat:346> * <var:A> + <nat:82> * <var:q> + <nat:340> * <var:y> + <nat:228> * <var:W> + <nat:90> * <var:R> + <nat:341> ) = true . Proof . intros . rewrite Nat . odd_add . assert ( <genH> : Nat . even <nat:456> = true ) . { auto . } assert ( <genH> : Nat . even <nat:166> = true ) . { auto . } assert ( <genH> : Nat . even <nat:90> = true ) . { auto . } assert ( <genH> : Nat . even <nat:340> = true ) . { auto . } assert ( <genH> : Nat . even <nat:346> = true ) . { auto . } assert ( <genH> : Nat . even <nat:82> = true ) . { auto . } assert ( <genH> : Nat . even <nat:228> = true ) . { auto . } assert ( <genH> : Nat . even <nat:320> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:320> * <var:M> + <nat:456> * <var:Y> + <nat:166> * <var:G> + <nat:346> * <var:A> + <nat:82> * <var:q> + <nat:340> * <var:y> + <nat:228> * <var:W> + <nat:90> * <var:R> ) = true ) . { repeat rewrite Nat . even_add . repeat rewrite Nat . even_mul . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite <- Nat . negb_even . rewrite <genH> . auto . Qed . 