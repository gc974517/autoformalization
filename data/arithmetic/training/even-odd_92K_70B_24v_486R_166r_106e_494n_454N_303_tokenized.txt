\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Assuming terms $ <var:v> $ , $ <var:K> $ , $ <var:r> $ , $ <var:e> $ , $ <var:B> $ , $ <var:N> $ , $ <var:n> $ , and $ <var:R> $ the expression $ <var:K> <nat:92> + <var:B> <nat:70> + <var:v> <nat:24> + <var:R> <nat:486> + <var:r> <nat:166> + <nat:303> + <var:e> <nat:106> + <nat:494> <var:n> + <var:N> <nat:454> $ must be odd . \end{theorem} \begin{proof} We check our main result is proven . Notice the whole numbers $ <nat:92> $ , $ <nat:454> $ , and likewise $ <nat:166> $ are clearly even In addition to this , the whole number $ <nat:24> $ is known to be an even element of $ \mathbb{N} $ In addition to this , the leading term $ <nat:70> $ is obviously even The integer $ <nat:106> $ is obviously even Furthermore , take note that the integer $ <nat:494> $ is clearly even Take note that the whole number $ <nat:486> $ is even Remember that taking the product of an even natural number with any number in $ \mathbb{N} $ must be even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:v> <var:K> <var:r> <var:e> <var:B> <var:N> <var:n> <var:R> : nat , Nat . odd ( <nat:92> * <var:K> + <nat:70> * <var:B> + <nat:24> * <var:v> + <nat:486> * <var:R> + <nat:166> * <var:r> + <nat:106> * <var:e> + <nat:494> * <var:n> + <nat:454> * <var:N> + <nat:303> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:92> = true ) . { auto . } assert ( <genH> : Nat . even <nat:454> = true ) . { auto . } assert ( <genH> : Nat . even <nat:166> = true ) . { auto . } assert ( <genH> : Nat . even <nat:24> = true ) . { auto . } assert ( <genH> : Nat . even <nat:70> = true ) . { auto . } assert ( <genH> : Nat . even <nat:106> = true ) . { auto . } assert ( <genH> : Nat . even <nat:494> = true ) . { auto . } assert ( <genH> : Nat . even <nat:486> = true ) . { auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . repeat rewrite Nat . even_mul . rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 