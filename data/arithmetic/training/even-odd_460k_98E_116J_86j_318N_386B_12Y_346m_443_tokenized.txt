\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} For whole numbers $ <var:j> $ , $ <var:m> $ , $ <var:J> $ , $ <var:N> $ , $ <var:k> $ , $ <var:B> $ , $ <var:Y> $ , and $ <var:E> $ the summation $ <var:k> \cdot <nat:460> + <nat:98> \cdot <var:E> + <var:J> \cdot <nat:116> + <var:j> \cdot <nat:86> + <nat:318> \cdot <var:N> + <nat:386> \cdot <var:B> + <nat:12> \cdot <var:Y> + <nat:346> \cdot <var:m> + <nat:443> $ is odd . \end{theorem} \begin{proof} It can be checked that our claim is proven . The terms $ <nat:86> \times <var:j> $ , $ <var:Y> \times <nat:12> $ , $ <var:B> \times <nat:386> $ , and likewise $ <nat:460> \times <var:k> $ are obviously even . Building on , the products $ <nat:318> \times <var:N> $ in addition to $ <var:J> \times <nat:116> $ must be even . The product $ <var:E> \times <nat:98> $ is obviously even . This fact holds because taking the product of an even natural and some positive integer is guaranteed to be even . The pair $ <nat:346> \times <var:m> $ is known as even because multiplying of an even positive integer and a number must be instrinsically an even element of $ \mathbb{N} $ . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:j> <var:m> <var:J> <var:N> <var:k> <var:B> <var:Y> <var:E> : nat , Nat . odd ( <nat:460> * <var:k> + <nat:98> * <var:E> + <nat:116> * <var:J> + <nat:86> * <var:j> + <nat:318> * <var:N> + <nat:386> * <var:B> + <nat:12> * <var:Y> + <nat:346> * <var:m> + <nat:443> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:86> * <var:j> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:12> * <var:Y> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:386> * <var:B> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:460> * <var:k> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:318> * <var:N> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:116> * <var:J> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:98> * <var:E> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:346> * <var:m> ) = true ) . { rewrite Nat . even_mul . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 