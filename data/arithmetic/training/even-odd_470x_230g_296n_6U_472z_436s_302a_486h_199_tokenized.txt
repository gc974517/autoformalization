\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} For all $ <var:U> $ , $ <var:h> $ , $ <var:s> $ , $ <var:a> $ , $ <var:x> $ , $ <var:g> $ , $ <var:z> $ , and $ <var:n> $ the formula $ <var:g> <nat:230> + <nat:296> <var:n> + <nat:199> + <nat:472> <var:z> + <nat:486> <var:h> + <nat:302> <var:a> + <var:U> <nat:6> + <nat:436> <var:s> + <nat:470> <var:x> $ will be odd . \end{theorem} \begin{proof} Recall $ <nat:199> $ is clearly odd . The totaling of even elements of $ \mathbb{Z}^+ $ concurrently and an odd number must be odd . Recall that the formula $ <nat:470> * <var:x> + <nat:230> * <var:g> + <nat:296> * <var:n> + <nat:6> * <var:U> + <nat:472> * <var:z> + <var:s> * <nat:436> + <var:a> * <nat:302> + <var:h> * <nat:486> $ is known to be even . The terms $ <nat:302> \times <var:a> $ , $ <var:z> \times <nat:472> $ , $ <var:s> \times <nat:436> $ , $ <var:x> \times <nat:470> $ , in addition to $ <nat:230> \times <var:g> $ are guaranteed to be even . This claim must be true because taking the product of an even number in $ \mathbb{N} $ and a element of $ \mathbb{N} $ must be an even integer . Further , observe that the pairs $ <nat:6> \times <var:U> $ in addition to $ <var:n> \times <nat:296> $ are known to be even numbers in $ \mathbb{Z}^+ $ . The product $ <var:h> \times <nat:486> $ is guaranteed to be an even element of $ \mathbb{N} $ . This fact is true as a consequence that the multiplication between an even integer and some number must be even . The theorem must be true from the fact taking the product of an even positive integer with any natural will be even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:U> <var:h> <var:s> <var:a> <var:x> <var:g> <var:z> <var:n> : nat , Nat . odd ( <nat:230> * <var:g> + <nat:296> * <var:n> + <nat:472> * <var:z> + <nat:486> * <var:h> + <nat:302> * <var:a> + <nat:6> * <var:U> + <nat:436> * <var:s> + <nat:470> * <var:x> + <nat:199> ) = true . Proof . intros . assert ( <genH> : Nat . odd <nat:199> = true ) . { auto . } rewrite Nat . odd_add . assert ( <genH> : Nat . even ( <nat:302> * <var:a> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:472> * <var:z> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:436> * <var:s> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:470> * <var:x> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:230> * <var:g> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:6> * <var:U> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:296> * <var:n> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:486> * <var:h> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:230> * <var:g> + <nat:296> * <var:n> + <nat:472> * <var:z> + <nat:486> * <var:h> + <nat:302> * <var:a> + <nat:6> * <var:U> + <nat:436> * <var:s> + <nat:470> * <var:x> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite <- Nat . negb_even . rewrite <genH> . rewrite <genH> . auto . Qed . 