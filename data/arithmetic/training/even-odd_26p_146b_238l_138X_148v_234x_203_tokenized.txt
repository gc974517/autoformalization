\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} For every $ <var:p> $ , $ <var:v> $ , $ <var:l> $ , $ <var:x> $ , $ <var:b> $ , and $ <var:X> $ the expression $ <nat:203> + <var:p> \times <nat:26> + <nat:146> \times <var:b> + <nat:238> \times <var:l> + <var:X> \times <nat:138> + <var:v> \times <nat:148> + <var:x> \times <nat:234> $ will be odd . \end{theorem} \begin{proof} The terms $ <var:l> \times <nat:238> $ , $ <nat:26> \times <var:p> $ , $ <var:b> \times <nat:146> $ , $ <nat:234> \times <var:x> $ , and likewise $ <var:X> \times <nat:138> $ are clearly even from the knowledge taking the product between an even element of $ \mathbb{Z}^+ $ and a whole number is guaranteed to be an even number . On top of this , see the term $ <nat:148> \times <var:v> $ is known as even . This fact must be true as a consequence that the product between an even number in $ \mathbb{N} $ and a natural number will be an even number in $ \mathbb{Z}^+ $ . Take note that the summing between an even natural with an odd element of $ \mathbb{N} $ must be odd . Observe $ <nat:203> $ is clearly odd . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:p> <var:v> <var:l> <var:x> <var:b> <var:X> : nat , Nat . odd ( <nat:26> * <var:p> + <nat:146> * <var:b> + <nat:238> * <var:l> + <nat:138> * <var:X> + <nat:148> * <var:v> + <nat:234> * <var:x> + <nat:203> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:238> * <var:l> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:26> * <var:p> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:146> * <var:b> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:234> * <var:x> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:138> * <var:X> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:148> * <var:v> ) = true ) . { rewrite Nat . even_mul . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . assert ( <genH> : Nat . odd <nat:203> = true ) . { auto . } rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 