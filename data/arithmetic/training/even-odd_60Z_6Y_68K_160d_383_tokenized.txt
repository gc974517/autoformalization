\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:160> \cdot <var:d> + <nat:383> + <nat:68> \cdot <var:K> + <nat:60> \cdot <var:Z> + <nat:6> \cdot <var:Y> $ will be odd using natural numbers $ <var:Y> $ , $ <var:K> $ , $ <var:Z> $ , and $ <var:d> $ . \end{theorem} \begin{proof} We demonstrate the theorem is true . Observe that $ <nat:383> $ is guaranteed to be an odd whole number . The formula $ <nat:383> + <nat:60> \times <var:Z> + <nat:68> \times <var:K> + <var:Y> \times <nat:6> + <nat:160> \times <var:d> $ is odd because the sum $ <var:Z> * <nat:60> + <var:Y> * <nat:6> + <nat:68> * <var:K> + <var:d> * <nat:160> $ is guaranteed to be even . Building on , the natural numbers $ <nat:60> $ , $ <nat:6> $ , $ <nat:68> $ , and also $ <nat:160> $ are clearly even . In consequence , the pairs $ <var:Z> * <nat:60> $ , $ <nat:6> * <var:Y> $ , $ <nat:68> * <var:K> $ , and $ <var:d> * <nat:160> $ will be even as well . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:Y> <var:K> <var:Z> <var:d> : nat , Nat . odd ( <nat:160> * <var:d> + <nat:68> * <var:K> + <nat:60> * <var:Z> + <nat:6> * <var:Y> + <nat:383> ) = true . Proof . intros . assert ( <genH> : Nat . odd <nat:383> = true ) . { auto . } assert ( <genH> : Nat . even <nat:60> = true ) . { auto . } assert ( <genH> : Nat . even <nat:6> = true ) . { auto . } assert ( <genH> : Nat . even <nat:68> = true ) . { auto . } assert ( <genH> : Nat . even <nat:160> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:60> * <var:Z> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:6> * <var:Y> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:68> * <var:K> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:160> * <var:d> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:160> * <var:d> + <nat:68> * <var:K> + <nat:60> * <var:Z> + <nat:6> * <var:Y> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . rewrite <genH> . auto . Qed . 