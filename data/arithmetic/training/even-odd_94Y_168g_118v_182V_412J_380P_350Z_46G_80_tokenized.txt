\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} For positive terms $ <var:g> $ , $ <var:P> $ , $ <var:v> $ , $ <var:Z> $ , $ <var:J> $ , $ <var:G> $ , $ <var:V> $ , and $ <var:Y> $ $ <nat:94> * <var:Y> + <var:g> * <nat:168> + <nat:118> * <var:v> + <nat:182> * <var:V> + <nat:412> * <var:J> + <nat:80> + <nat:380> * <var:P> + <nat:350> * <var:Z> + <var:G> * <nat:46> $ must be even . \end{theorem} \begin{proof} We know the coefficients $ <nat:94> $ , $ <nat:168> $ , $ <nat:118> $ , $ <nat:182> $ , $ <nat:412> $ , $ <nat:380> $ , $ <nat:350> $ , and also $ <nat:46> $ are trivially even . So , the pairs $ <var:Y> \cdot <nat:94> $ , $ <nat:168> \cdot <var:g> $ , $ <nat:118> \cdot <var:v> $ , $ <var:V> \cdot <nat:182> $ , $ <nat:412> \cdot <var:J> $ , $ <nat:380> \cdot <var:P> $ , $ <var:Z> \cdot <nat:350> $ , plus $ <var:G> \cdot <nat:46> $ will be even also . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:g> <var:P> <var:v> <var:Z> <var:J> <var:G> <var:V> <var:Y> : nat , Nat . even ( <nat:94> * <var:Y> + <nat:168> * <var:g> + <nat:118> * <var:v> + <nat:182> * <var:V> + <nat:412> * <var:J> + <nat:380> * <var:P> + <nat:350> * <var:Z> + <nat:46> * <var:G> + <nat:80> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:94> = true ) . { auto . } assert ( <genH> : Nat . even <nat:168> = true ) . { auto . } assert ( <genH> : Nat . even <nat:118> = true ) . { auto . } assert ( <genH> : Nat . even <nat:182> = true ) . { auto . } assert ( <genH> : Nat . even <nat:412> = true ) . { auto . } assert ( <genH> : Nat . even <nat:380> = true ) . { auto . } assert ( <genH> : Nat . even <nat:350> = true ) . { auto . } assert ( <genH> : Nat . even <nat:46> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:94> * <var:Y> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:168> * <var:g> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:118> * <var:v> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:182> * <var:V> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:412> * <var:J> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:380> * <var:P> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:350> * <var:Z> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:46> * <var:G> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 