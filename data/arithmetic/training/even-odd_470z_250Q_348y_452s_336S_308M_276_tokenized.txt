\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:336> \times <var:S> + <nat:276> + <nat:250> \times <var:Q> + <nat:348> \times <var:y> + <nat:452> \times <var:s> + <nat:470> \times <var:z> + <var:M> \times <nat:308> $ must be even assuming every positive integers $ <var:Q> $ , $ <var:y> $ , $ <var:S> $ , $ <var:M> $ , $ <var:z> $ , and $ <var:s> $ . \end{theorem} \begin{proof} The totaling of even integers successively is by definition an even element of $ \mathbb{Z}^+ $ . We know $ <nat:276> $ is clearly even . Our main result is true from the knowledge $ <nat:470> \cdot <var:z> + <var:Q> \cdot <nat:250> + <nat:348> \cdot <var:y> + <nat:452> \cdot <var:s> + <var:S> \cdot <nat:336> + <var:M> \cdot <nat:308> $ is clearly even . Remember that the leading terms $ <nat:470> $ , $ <nat:250> $ , $ <nat:348> $ , $ <nat:452> $ , $ <nat:336> $ , plus $ <nat:308> $ are trivially even . Accordingly , the products $ <var:z> \cdot <nat:470> $ , $ <var:Q> \cdot <nat:250> $ , $ <nat:348> \cdot <var:y> $ , $ <nat:452> \cdot <var:s> $ , $ <var:S> \cdot <nat:336> $ , and also $ <var:M> \cdot <nat:308> $ must be even in addition . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:Q> <var:y> <var:S> <var:M> <var:z> <var:s> : nat , Nat . even ( <nat:336> * <var:S> + <nat:250> * <var:Q> + <nat:348> * <var:y> + <nat:452> * <var:s> + <nat:470> * <var:z> + <nat:308> * <var:M> + <nat:276> ) = true . Proof . intros . rewrite Nat . even_add . assert ( <genH> : Nat . even <nat:276> = true ) . { auto . } assert ( <genH> : Nat . even <nat:470> = true ) . { auto . } assert ( <genH> : Nat . even <nat:250> = true ) . { auto . } assert ( <genH> : Nat . even <nat:348> = true ) . { auto . } assert ( <genH> : Nat . even <nat:452> = true ) . { auto . } assert ( <genH> : Nat . even <nat:336> = true ) . { auto . } assert ( <genH> : Nat . even <nat:308> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:470> * <var:z> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:250> * <var:Q> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:348> * <var:y> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:452> * <var:s> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:336> * <var:S> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:308> * <var:M> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:336> * <var:S> + <nat:250> * <var:Q> + <nat:348> * <var:y> + <nat:452> * <var:s> + <nat:470> * <var:z> + <nat:308> * <var:M> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite <genH> . rewrite <genH> . auto . Qed . 