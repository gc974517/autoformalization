\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:302> + <var:q> \cdot <nat:414> + <var:b> \cdot <nat:210> + <nat:404> \cdot <var:E> + <nat:58> \cdot <var:h> $ will be even using all integers $ <var:h> $ , $ <var:q> $ , $ <var:E> $ , and $ <var:b> $ . \end{theorem} \begin{proof} Notice that $ <nat:302> $ is obviously even . The addition between an even number in $ \mathbb{N} $ with an even element of $ \mathbb{Z}^+ $ is guaranteed to be obviously an even number . On top of this , we know that the positive integer $ <nat:414> $ is an even integer . Then , $ <nat:414> \cdot <var:q> $ will be even also . Take note that the pair $ <var:E> \cdot <nat:404> $ is known to be even from the knowledge the integer $ <nat:404> $ is clearly even . The product $ <var:b> \cdot <nat:210> $ is an even whole number since the natural number $ <nat:210> $ is guaranteed to be fundamentally an even element of $ \mathbb{Z}^+ $ . $ <var:h> \cdot <nat:58> $ is an even integer from the fact the natural number $ <nat:58> $ is guaranteed to be by definition an even number in $ \mathbb{Z}^+ $ . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:h> <var:q> <var:E> <var:b> : nat , Nat . even ( <nat:414> * <var:q> + <nat:210> * <var:b> + <nat:404> * <var:E> + <nat:58> * <var:h> + <nat:302> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:302> = true ) . { auto . } repeat rewrite Nat . even_add . assert ( <genH> : Nat . even <nat:414> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:414> * <var:q> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:404> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:404> * <var:E> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:210> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:210> * <var:b> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:58> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:58> * <var:h> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 