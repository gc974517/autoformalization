\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:83> + <var:q> <nat:436> + <var:Q> <nat:426> + <var:z> <nat:464> + <nat:372> <var:n> + <nat:114> <var:C> + <nat:452> <var:S> $ will be odd . \end{theorem} \begin{proof} Notice that the totaling of an even natural with an odd natural number is guaranteed to be by itself an odd positive integer . Remember that the summation $ <nat:464> \cdot <var:z> + <var:q> \cdot <nat:436> + <nat:426> \cdot <var:Q> + <nat:114> \cdot <var:C> + <nat:452> \cdot <var:S> + <nat:372> \cdot <var:n> $ is clearly even . See that the summation between even elements of $ \mathbb{Z}^+ $ concurrently and an even number in $ \mathbb{N} $ will be even . The product $ <nat:452> <var:S> $ is even . This claim holds from the fact the multiplication between an even whole number with any positive integer is even . In addition to this , the products $ <nat:426> <var:Q> $ , $ <nat:114> <var:C> $ , $ <var:q> <nat:436> $ , and moreover $ <nat:372> <var:n> $ are even as a consequence that taking the product between an even element of $ \mathbb{N} $ and a whole number will be an even number in $ \mathbb{Z}^+ $ . In addition to this , $ <var:z> <nat:464> $ is clearly an even integer from the knowledge taking the product between an even whole number with a natural must be an even element of $ \mathbb{Z}^+ $ . in addition to from the fact taking the product between even natural numbers and a number in $ \mathbb{Z}^+ $ will be even the expression $ <nat:452> \cdot <var:S> + <nat:436> \cdot <var:q> + <nat:464> \cdot <var:z> + <nat:426> \cdot <var:Q> + <nat:114> \cdot <var:C> + <nat:372> \cdot <var:n> $ is guaranteed to be even . It can be justified that the proposition is proven . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:q> <var:Q> <var:z> <var:n> <var:C> <var:S> : nat , Nat . odd ( <nat:436> * <var:q> + <nat:426> * <var:Q> + <nat:464> * <var:z> + <nat:372> * <var:n> + <nat:114> * <var:C> + <nat:452> * <var:S> + <nat:83> ) = true . Proof . intros . rewrite Nat . odd_add . assert ( <genH> : Nat . even ( <nat:452> * <var:S> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:426> * <var:Q> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:114> * <var:C> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:436> * <var:q> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:372> * <var:n> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:464> * <var:z> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:436> * <var:q> + <nat:426> * <var:Q> + <nat:464> * <var:z> + <nat:372> * <var:n> + <nat:114> * <var:C> + <nat:452> * <var:S> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite <- Nat . negb_even . rewrite <genH> . auto . Qed . 