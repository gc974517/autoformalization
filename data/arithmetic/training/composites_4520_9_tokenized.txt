\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Under the condition $ \exists <var:D> $ , $ <var:T> $ , $ <var:z> $ , $ <var:Y> $ , $ <var:Q> $ , $ <var:W> $ , $ <var:f> $ , $ <var:u> $ , $ <var:H> \in \mathbb{Z}^+ $ satisfying the condition that $ <var:W> $ , $ <var:f> $ , $ <var:Y> $ , $ <var:Q> $ , $ <var:u> $ , $ <var:D> $ , $ <var:T> $ , $ <var:H> $ , $ <var:z> \geq <nat:2> $ . We say that $ <var:j> \in \mathbb{N} $ is considered to be a <def:nine-composite> number when $ <var:Q> \cdot <var:Y> \cdot <var:f> \cdot <var:H> \cdot <var:W> \cdot <var:u> \cdot <var:D> \cdot <var:T> \cdot <var:z> = <var:j> $ . Thus the whole number <nat:9979200> is <def:nine-composite> . \end{theorem} \begin{proof} Observe that $ <nat:5> $ , $ <nat:11> $ , $ <nat:9> $ , $ <nat:6> $ , $ <nat:3> $ , $ <nat:8> $ , $ <nat:7> $ , $ <nat:2> $ , and $ <nat:10> \geq <nat:2> $ . Also observe that too $ <nat:9979200> = <nat:2> \cdot <nat:6> \cdot <nat:8> \cdot <nat:10> \cdot <nat:3> \cdot <nat:5> \cdot <nat:11> \cdot <nat:9> \cdot <nat:7> $ . As a result , $ <var:W> \times <var:H> \times <var:f> \times <var:D> \times <var:z> \times <var:Q> \times <var:Y> \times <var:T> \times <var:u> = <nat:9979200> $ has been validated . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:nine-composite> ( <var:j> : nat ) := exists <var:D> <var:T> <var:z> <var:Y> <var:Q> <var:W> <var:f> <var:u> <var:H> : nat , ( <var:W> >= <nat:2> ) /\ ( <var:f> >= <nat:2> ) /\ ( <var:Y> >= <nat:2> ) /\ ( <var:Q> >= <nat:2> ) /\ ( <var:u> >= <nat:2> ) /\ ( <var:D> >= <nat:2> ) /\ ( <var:T> >= <nat:2> ) /\ ( <var:H> >= <nat:2> ) /\ ( <var:z> >= <nat:2> ) /\ ( <var:Q> * <var:Y> * <var:f> * <var:H> * <var:W> * <var:u> * <var:D> * <var:T> * <var:z> = <var:j> ) . Theorem <genP:1> : <def:nine-composite> <nat:9979200> . Proof . unfold <def:nine-composite> . assert ( <genH> : <nat:5> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:11> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:9> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:6> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:3> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:8> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:7> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:2> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:10> >= <nat:2> ) . { lia . } exists <nat:10> . exists <nat:6> . exists <nat:8> . exists <nat:7> . exists <nat:2> . exists <nat:11> . exists <nat:9> . exists <nat:3> . exists <nat:5> . repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 