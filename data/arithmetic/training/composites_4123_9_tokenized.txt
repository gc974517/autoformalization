\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:7983360> $ is $ <var:J> * <var:I> * <var:S> * <var:k> * <var:A> * <var:Y> * <var:O> * <var:T> * <var:M> $ with $ <var:M> $ , $ <var:T> $ , $ <var:J> $ , $ <var:A> $ , $ <var:k> $ , $ <var:Y> $ , $ <var:I> $ , $ <var:O> $ , and $ <var:S> $ where $ <var:S> $ , $ <var:I> $ , $ <var:T> $ , $ <var:k> $ , $ <var:Y> $ , $ <var:M> $ , $ <var:A> $ , $ <var:J> $ , and $ <var:O> \geq <nat:2> $ . \end{theorem} \begin{proof} We verify <nat:7983360> is the product of some whole numbers $ <var:S> $ , $ <var:I> $ , $ <var:A> $ , $ <var:Y> $ , $ <var:M> $ , $ <var:T> $ , $ <var:k> $ , $ <var:O> $ , $ <var:J> $ . Note that $ <var:Y> \cdot <var:k> \cdot <var:M> \cdot <var:J> \cdot <var:A> \cdot <var:S> \cdot <var:I> \cdot <var:T> \cdot <var:O> = <nat:7983360> $ yields $ <var:M> = <nat:3> $ , $ <var:S> = <nat:2> $ , $ <var:A> = <nat:7> $ , $ <var:T> = <nat:9> $ , $ <var:I> = <nat:10> $ , $ <var:Y> = <nat:4> $ , $ <var:J> = <nat:11> $ , $ <var:O> = <nat:6> $ , and $ <var:k> = <nat:8> $ . Moreover notice $ <nat:11> $ , $ <nat:4> $ , $ <nat:3> $ , $ <nat:10> $ , $ <nat:7> $ , $ <nat:6> $ , $ <nat:8> $ , $ <nat:2> $ , $ <nat:9> $ are larger than or equivalent to <nat:2> . \end{proof} \end{document} 
~
Require Import Lia . Theorem <genP:1> : exists <var:M> <var:T> <var:J> <var:A> <var:k> <var:Y> <var:I> <var:O> <var:S> : nat , ( <nat:7983360> = <var:J> * <var:I> * <var:S> * <var:k> * <var:A> * <var:Y> * <var:O> * <var:T> * <var:M> ) /\ ( <var:S> >= <nat:2> ) /\ ( <var:I> >= <nat:2> ) /\ ( <var:T> >= <nat:2> ) /\ ( <var:k> >= <nat:2> ) /\ ( <var:Y> >= <nat:2> ) /\ ( <var:M> >= <nat:2> ) /\ ( <var:A> >= <nat:2> ) /\ ( <var:J> >= <nat:2> ) /\ ( <var:O> >= <nat:2> ) . Proof . exists <nat:3> . exists <nat:9> . exists <nat:11> . exists <nat:7> . exists <nat:8> . exists <nat:4> . exists <nat:10> . exists <nat:6> . exists <nat:2> . assert ( <genH> : <nat:11> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:4> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:3> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:10> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:7> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:6> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:8> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:2> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:9> >= <nat:2> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 