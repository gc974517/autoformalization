\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} For all positive numbers $ <var:j> $ , $ <var:I> $ , $ <var:i> $ , and $ <var:k> $ the expression $ <var:j> \cdot <nat:230> + <var:I> \cdot <nat:76> + <nat:43> + <nat:190> \cdot <var:i> + <nat:196> \cdot <var:k> $ will be odd . \end{theorem} \begin{proof} Take note $ <nat:43> $ is clearly odd . The summing between even integers together and an odd number must be obviously an odd natural number . The formula $ <nat:196> <var:k> + <nat:190> <var:i> + <nat:43> + <var:j> <nat:230> + <nat:76> <var:I> $ is clearly odd as a consequence that the expression $ <var:k> \times <nat:196> + <nat:76> \times <var:I> + <nat:190> \times <var:i> + <var:j> \times <nat:230> $ is known as even . The integers $ <nat:196> $ , $ <nat:76> $ , $ <nat:190> $ , as well as $ <nat:230> $ are guaranteed to be even integers . Accordingly , the pairs $ <nat:196> <var:k> $ , $ <nat:76> <var:I> $ , $ <nat:190> <var:i> $ , and $ <nat:230> <var:j> $ is guaranteed to be even additionally . The claim must be true as a consequence that the summation between an even integer with an even number in $ \mathbb{Z}^+ $ must be even and likewise by reason that the product between an even element of $ \mathbb{N} $ with a natural must be even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:j> <var:I> <var:i> <var:k> : nat , Nat . odd ( <nat:230> * <var:j> + <nat:76> * <var:I> + <nat:190> * <var:i> + <nat:196> * <var:k> + <nat:43> ) = true . Proof . intros . assert ( <genH> : Nat . odd <nat:43> = true ) . { auto . } rewrite Nat . odd_add . assert ( <genH> : Nat . even <nat:196> = true ) . { auto . } assert ( <genH> : Nat . even <nat:76> = true ) . { auto . } assert ( <genH> : Nat . even <nat:190> = true ) . { auto . } assert ( <genH> : Nat . even <nat:230> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:196> * <var:k> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:76> * <var:I> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:190> * <var:i> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:230> * <var:j> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:230> * <var:j> + <nat:76> * <var:I> + <nat:190> * <var:i> + <nat:196> * <var:k> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite <- Nat . negb_even . rewrite <genH> . rewrite <genH> . auto . Qed . 