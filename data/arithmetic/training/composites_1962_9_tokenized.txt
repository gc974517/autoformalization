\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Take as given that $ <var:M> $ is <def:nine-composite> under the condition with some $ <var:W> $ , $ <var:K> $ , $ <var:H> $ , $ <var:N> $ , $ <var:I> $ , $ <var:F> $ , $ <var:G> $ , $ <var:V> $ , $ <var:E> \in \mathbb{Z}^+ $ we get $ <var:W> \times <var:I> \times <var:F> \times <var:N> \times <var:H> \times <var:V> \times <var:E> \times <var:K> \times <var:G> = <var:M> $ given $ <var:M> \in \mathbb{Z}^+ $ plus so that $ <var:F> $ , $ <var:W> $ , $ <var:G> $ , $ <var:K> $ , $ <var:E> $ , $ <var:V> $ , $ <var:H> $ , $ <var:N> $ , and $ <var:I> \geq <nat:2> $ . Hence the integer <nat:13685760> is a <def:nine-composite> natural number . \end{theorem} \begin{proof} We confirm $ <nat:13685760> = <var:H> \cdot <var:V> \cdot <var:E> \cdot <var:F> \cdot <var:K> \cdot <var:N> \cdot <var:W> \cdot <var:G> \cdot <var:I> $ as well as $ <var:I> $ , $ <var:G> $ , $ <var:N> $ , $ <var:W> $ , $ <var:K> $ , $ <var:H> $ , $ <var:V> $ , $ <var:E> $ , $ <var:F> \geq <nat:2> $ . Notice $ <nat:10> * <nat:9> * <nat:8> * <nat:4> * <nat:6> * <nat:2> * <nat:11> * <nat:3> * <nat:12> = <nat:13685760> $ . What's more notice that $ <nat:12> $ , $ <nat:2> $ , $ <nat:9> $ , $ <nat:11> $ , $ <nat:3> $ , $ <nat:8> $ , $ <nat:4> $ , $ <nat:6> $ , $ <nat:10> \geq <nat:2> $ . This suggests our thesis holds . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:nine-composite> ( <var:M> : nat ) := exists <var:W> <var:K> <var:H> <var:N> <var:I> <var:F> <var:G> <var:V> <var:E> : nat , ( <var:W> * <var:I> * <var:F> * <var:N> * <var:H> * <var:V> * <var:E> * <var:K> * <var:G> = <var:M> ) /\ ( <var:F> >= <nat:2> ) /\ ( <var:W> >= <nat:2> ) /\ ( <var:G> >= <nat:2> ) /\ ( <var:K> >= <nat:2> ) /\ ( <var:E> >= <nat:2> ) /\ ( <var:V> >= <nat:2> ) /\ ( <var:H> >= <nat:2> ) /\ ( <var:N> >= <nat:2> ) /\ ( <var:I> >= <nat:2> ) . Theorem <genP:1> : <def:nine-composite> <nat:13685760> . Proof . unfold <def:nine-composite> . exists <nat:8> . exists <nat:10> . exists <nat:6> . exists <nat:11> . exists <nat:2> . exists <nat:9> . exists <nat:4> . exists <nat:12> . exists <nat:3> . assert ( <genH> : <nat:12> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:2> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:9> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:11> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:3> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:8> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:4> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:6> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:10> >= <nat:2> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 