\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:l> <nat:332> + <nat:64> <var:v> + <var:f> <nat:44> + <var:O> <nat:40> + <var:p> <nat:86> + <nat:180> <var:n> + <nat:182> <var:k> + <nat:268> + <nat:184> <var:B> $ is guaranteed to be even . \end{theorem} \begin{proof} The terms $ <nat:44> \cdot <var:f> $ in addition to $ <var:l> \cdot <nat:332> $ are known to be even . This claim must be true from the fact taking the product of an even number in $ \mathbb{N} $ with an arbitrary natural must be even . Recall that $ <nat:180> \cdot <var:n> $ is known to be an even element of $ \mathbb{Z}^+ $ . The products $ <nat:64> \cdot <var:v> $ and $ <nat:184> \cdot <var:B> $ are guaranteed to be even . In addition to this , observe the pair $ <var:O> \cdot <nat:40> $ is known as even . Adding on , the product $ <nat:86> \cdot <var:p> $ is clearly even . Take note the term $ <var:k> \cdot <nat:182> $ is known as even . This claim holds by reason that the product between an even natural number and a number in $ \mathbb{Z}^+ $ will be even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:l> <var:v> <var:f> <var:O> <var:p> <var:n> <var:k> <var:B> : nat , Nat . even ( <nat:332> * <var:l> + <nat:64> * <var:v> + <nat:44> * <var:f> + <nat:40> * <var:O> + <nat:86> * <var:p> + <nat:180> * <var:n> + <nat:182> * <var:k> + <nat:184> * <var:B> + <nat:268> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:44> * <var:f> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:332> * <var:l> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:180> * <var:n> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:64> * <var:v> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:184> * <var:B> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:40> * <var:O> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:86> * <var:p> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:182> * <var:k> ) = true ) . { rewrite Nat . even_mul . auto . } repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 