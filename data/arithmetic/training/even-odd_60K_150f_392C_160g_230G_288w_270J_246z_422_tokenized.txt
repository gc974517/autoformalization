\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:60> * <var:K> + <nat:150> * <var:f> + <nat:392> * <var:C> + <nat:160> * <var:g> + <var:G> * <nat:230> + <nat:288> * <var:w> + <nat:270> * <var:J> + <nat:422> + <nat:246> * <var:z> $ will be even . \end{theorem} \begin{proof} Observe that $ <nat:422> $ is trivially an even element of $ \mathbb{Z}^+ $ . The adding of an even natural number and an even natural will be even . On top of this , the pairs $ <nat:60> * <var:K> $ , $ <var:f> * <nat:150> $ , $ <var:C> * <nat:392> $ , $ <var:g> * <nat:160> $ , $ <var:G> * <nat:230> $ , $ <var:w> * <nat:288> $ , $ <var:J> * <nat:270> $ , additionally $ <var:z> * <nat:246> $ are known as even . This claim is true since the numbers $ <nat:60> $ , $ <nat:150> $ , $ <nat:392> $ , $ <nat:160> $ , $ <nat:230> $ , $ <nat:288> $ , $ <nat:270> $ , and $ <nat:246> $ are clearly even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:K> <var:f> <var:C> <var:g> <var:G> <var:w> <var:J> <var:z> : nat , Nat . even ( <nat:60> * <var:K> + <nat:150> * <var:f> + <nat:392> * <var:C> + <nat:160> * <var:g> + <nat:230> * <var:G> + <nat:288> * <var:w> + <nat:270> * <var:J> + <nat:246> * <var:z> + <nat:422> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:422> = true ) . { auto . } repeat rewrite Nat . even_add . assert ( <genH> : Nat . even <nat:60> = true ) . { auto . } assert ( <genH> : Nat . even <nat:150> = true ) . { auto . } assert ( <genH> : Nat . even <nat:392> = true ) . { auto . } assert ( <genH> : Nat . even <nat:160> = true ) . { auto . } assert ( <genH> : Nat . even <nat:230> = true ) . { auto . } assert ( <genH> : Nat . even <nat:288> = true ) . { auto . } assert ( <genH> : Nat . even <nat:270> = true ) . { auto . } assert ( <genH> : Nat . even <nat:246> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:60> * <var:K> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:150> * <var:f> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:392> * <var:C> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:160> * <var:g> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:230> * <var:G> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:288> * <var:w> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:270> * <var:J> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:246> * <var:z> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 