\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:322> \times <var:Z> + <nat:478> \times <var:z> + <nat:378> \times <var:f> + <nat:230> \times <var:u> + <var:p> \times <nat:144> + <nat:236> \times <var:m> + <nat:363> $ is odd taking natural numbers $ <var:p> $ , $ <var:u> $ , $ <var:Z> $ , $ <var:f> $ , $ <var:m> $ , and $ <var:z> $ . \end{theorem} \begin{proof} The term $ <var:z> \times <nat:478> $ is guaranteed to be even . The pairs $ <nat:230> \times <var:u> $ and moreover $ <nat:322> \times <var:Z> $ are even . Adding on , remember that the term $ <var:m> \times <nat:236> $ is obviously an even positive integer . Adding on , take note that $ <var:p> \times <nat:144> $ is obviously an even whole number . This claim must be true since the multiplication between an even whole number and some number in $ \mathbb{N} $ is guaranteed to be an even integer . The product $ <nat:378> \times <var:f> $ is trivially even . See that the addition of an even whole number with an odd number in $ \mathbb{Z}^+ $ is odd . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:p> <var:u> <var:Z> <var:f> <var:m> <var:z> : nat , Nat . odd ( <nat:322> * <var:Z> + <nat:478> * <var:z> + <nat:378> * <var:f> + <nat:230> * <var:u> + <nat:144> * <var:p> + <nat:236> * <var:m> + <nat:363> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:478> * <var:z> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:230> * <var:u> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:322> * <var:Z> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:236> * <var:m> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:144> * <var:p> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:378> * <var:f> ) = true ) . { rewrite Nat . even_mul . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 