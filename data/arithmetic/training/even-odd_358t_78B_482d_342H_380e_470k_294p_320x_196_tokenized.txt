\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:358> * <var:t> + <nat:78> * <var:B> + <var:d> * <nat:482> + <var:H> * <nat:342> + <nat:380> * <var:e> + <nat:470> * <var:k> + <nat:294> * <var:p> + <nat:320> * <var:x> + <nat:196> $ is even . \end{theorem} \begin{proof} The summation between an even positive integer with an even number in $ \mathbb{Z}^+ $ is an even natural . Building on , the coefficients $ <nat:358> $ , $ <nat:78> $ , $ <nat:482> $ , $ <nat:342> $ , $ <nat:380> $ , $ <nat:470> $ , $ <nat:294> $ , $ <nat:320> $ , are known as even numbers in $ \mathbb{Z}^+ $ . Therefore , the products $ <nat:358> \times <var:t> $ , $ <nat:78> \times <var:B> $ , $ <nat:482> \times <var:d> $ , $ <nat:342> \times <var:H> $ , $ <var:e> \times <nat:380> $ , $ <nat:470> \times <var:k> $ , $ <var:p> \times <nat:294> $ , $ <var:x> \times <nat:320> $ , is even at the same time . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:t> <var:B> <var:d> <var:H> <var:e> <var:k> <var:p> <var:x> : nat , Nat . even ( <nat:358> * <var:t> + <nat:78> * <var:B> + <nat:482> * <var:d> + <nat:342> * <var:H> + <nat:380> * <var:e> + <nat:470> * <var:k> + <nat:294> * <var:p> + <nat:320> * <var:x> + <nat:196> ) = true . Proof . intros . repeat rewrite Nat . even_add . assert ( <genH> : Nat . even <nat:358> = true ) . { auto . } assert ( <genH> : Nat . even <nat:78> = true ) . { auto . } assert ( <genH> : Nat . even <nat:482> = true ) . { auto . } assert ( <genH> : Nat . even <nat:342> = true ) . { auto . } assert ( <genH> : Nat . even <nat:380> = true ) . { auto . } assert ( <genH> : Nat . even <nat:470> = true ) . { auto . } assert ( <genH> : Nat . even <nat:294> = true ) . { auto . } assert ( <genH> : Nat . even <nat:320> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:358> * <var:t> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:78> * <var:B> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:482> * <var:d> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:342> * <var:H> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:380> * <var:e> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:470> * <var:k> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:294> * <var:p> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:320> * <var:x> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 