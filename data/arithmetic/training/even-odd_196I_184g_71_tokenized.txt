\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:71> + <var:g> \times <nat:184> + <var:I> \times <nat:196> $ is guaranteed to be odd assuming terms $ <var:I> $ , and $ <var:g> $ . \end{theorem} \begin{proof} Notice that the expression $ <nat:196> <var:I> + <nat:184> <var:g> + <nat:71> $ is trivially odd since the formula $ <var:I> \times <nat:196> + <nat:184> \times <var:g> $ is trivially even . In addition , notice that the pairs $ <nat:196> \times <var:I> $ and likewise $ <nat:184> \times <var:g> $ are known as even elements of $ \mathbb{N} $ . This claim holds as a consequence that multiplying between an even number and some number in $ \mathbb{N} $ is even , which holds from the knowledge the positive integers $ <nat:196> $ and likewise $ <nat:184> $ will be even elements of $ \mathbb{Z}^+ $ . Our proposition is proven because the summation between even elements of $ \mathbb{N} $ with an even integer is guaranteed to be an even element of $ \mathbb{N} $ . The totaling of an even natural and an odd positive integer will be an odd integer . Recall that $ <nat:71> $ is obviously an odd number in $ \mathbb{N} $ . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:I> <var:g> : nat , Nat . odd ( <nat:184> * <var:g> + <nat:196> * <var:I> + <nat:71> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:196> = true ) . { auto . } assert ( <genH> : Nat . even <nat:184> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:196> * <var:I> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:184> * <var:g> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:184> * <var:g> + <nat:196> * <var:I> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . assert ( <genH> : Nat . odd <nat:71> = true ) . { auto . } rewrite <- Nat . negb_even . rewrite <genH> . rewrite <genH> . auto . Qed . 