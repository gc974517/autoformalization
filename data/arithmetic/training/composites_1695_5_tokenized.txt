\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \newtheorem{definition}{Definition} \begin{document} \begin{definition} Denote that $ <var:a> $ is a <def:five-composite> positive integer iff there are $ <var:m> $ , $ <var:F> $ , $ <var:V> $ , $ <var:Q> $ , $ <var:I> \in \mathbb{N} $ so that $ <var:V> \times <var:m> \times <var:I> \times <var:F> \times <var:Q> = <var:a> $ for $ <var:a> \in \mathbb{Z}^+ $ and such that $ <var:F> $ , $ <var:m> $ , $ <var:Q> $ , $ <var:I> $ , and $ <var:V> \geq <nat:2> $ . \end{definition} \begin{theorem} The number <nat:3600> is a <def:five-composite> natural number . \end{theorem} \begin{proof} Take $ <var:V> = <nat:2> $ , $ <var:m> = <nat:10> $ , $ <var:Q> = <nat:9> $ , $ <var:I> = <nat:5> $ and $ <var:F> = <nat:4> $ . We demonstrate $ <nat:3600> = <var:I> \times <var:V> \times <var:F> \times <var:m> \times <var:Q> $ as well as $ <var:I> $ , $ <var:F> $ , $ <var:m> $ , $ <var:Q> $ and $ <var:V> $ are more than or equal to <nat:2> . Observe $ <nat:4> $ , $ <nat:9> $ , $ <nat:5> $ , $ <nat:2> $ and $ <nat:10> $ are greater than or equivalent to <nat:2> . In addition note that also $ <nat:3600> = <var:F> \cdot <var:V> \cdot <var:Q> \cdot <var:I> \cdot <var:m> $ . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:five-composite> ( <var:a> : nat ) := exists <var:m> <var:F> <var:V> <var:Q> <var:I> : nat , ( <var:V> * <var:m> * <var:I> * <var:F> * <var:Q> = <var:a> ) /\ ( <var:F> >= <nat:2> ) /\ ( <var:m> >= <nat:2> ) /\ ( <var:Q> >= <nat:2> ) /\ ( <var:I> >= <nat:2> ) /\ ( <var:V> >= <nat:2> ) . Theorem <genP:1> : <def:five-composite> <nat:3600> . Proof . unfold <def:five-composite> . exists <nat:10> . exists <nat:4> . exists <nat:2> . exists <nat:9> . exists <nat:5> . assert ( <genH> : <nat:4> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:9> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:5> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:2> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:10> >= <nat:2> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 