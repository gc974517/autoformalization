\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:V> \cdot <nat:482> + <nat:450> \cdot <var:L> + <nat:328> \cdot <var:J> + <nat:415> + <nat:104> \cdot <var:X> + <var:P> \cdot <nat:216> + <var:n> \cdot <nat:120> + <var:f> \cdot <nat:222> + <nat:98> \cdot <var:B> $ will be odd given variables $ <var:X> $ , $ <var:P> $ , $ <var:n> $ , $ <var:f> $ , $ <var:L> $ , $ <var:V> $ , $ <var:J> $ , and $ <var:B> $ . \end{theorem} \begin{proof} Take note the sum $ <nat:328> \cdot <var:J> + <nat:482> \cdot <var:V> + <nat:120> \cdot <var:n> + <var:B> \cdot <nat:98> + <nat:216> \cdot <var:P> + <nat:415> + <var:f> \cdot <nat:222> + <nat:450> \cdot <var:L> + <nat:104> \cdot <var:X> $ is trivially odd from the knowledge the sum $ <var:P> <nat:216> + <var:J> <nat:328> + <nat:98> <var:B> + <nat:120> <var:n> + <nat:450> <var:L> + <nat:482> <var:V> + <nat:222> <var:f> + <var:X> <nat:104> $ is clearly even . Furthermore , we know the terms $ <var:P> * <nat:216> $ , $ <nat:328> * <var:J> $ , $ <var:B> * <nat:98> $ , $ <var:n> * <nat:120> $ , $ <nat:450> * <var:L> $ , $ <nat:482> * <var:V> $ , $ <nat:222> * <var:f> $ , in addition to $ <var:X> * <nat:104> $ must be even from the knowledge the coefficients $ <nat:216> $ , $ <nat:328> $ , $ <nat:98> $ , $ <nat:120> $ , $ <nat:450> $ , $ <nat:482> $ , $ <nat:222> $ , additionally $ <nat:104> $ will be even numbers in $ \mathbb{Z}^+ $ . Notice $ <nat:415> $ is an odd number in $ \mathbb{N} $ . It can be shown that the expression $ <var:P> \cdot <nat:216> + <nat:415> + <var:J> \cdot <nat:328> + <nat:98> \cdot <var:B> + <nat:482> \cdot <var:V> + <nat:104> \cdot <var:X> + <nat:222> \cdot <var:f> + <var:L> \cdot <nat:450> + <nat:120> \cdot <var:n> $ must be odd . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:X> <var:P> <var:n> <var:f> <var:L> <var:V> <var:J> <var:B> : nat , Nat . odd ( <nat:482> * <var:V> + <nat:450> * <var:L> + <nat:328> * <var:J> + <nat:104> * <var:X> + <nat:216> * <var:P> + <nat:120> * <var:n> + <nat:222> * <var:f> + <nat:98> * <var:B> + <nat:415> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:216> = true ) . { auto . } assert ( <genH> : Nat . even <nat:328> = true ) . { auto . } assert ( <genH> : Nat . even <nat:98> = true ) . { auto . } assert ( <genH> : Nat . even <nat:120> = true ) . { auto . } assert ( <genH> : Nat . even <nat:450> = true ) . { auto . } assert ( <genH> : Nat . even <nat:482> = true ) . { auto . } assert ( <genH> : Nat . even <nat:222> = true ) . { auto . } assert ( <genH> : Nat . even <nat:104> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:216> * <var:P> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:328> * <var:J> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:98> * <var:B> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:120> * <var:n> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:450> * <var:L> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:482> * <var:V> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:222> * <var:f> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:104> * <var:X> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:482> * <var:V> + <nat:450> * <var:L> + <nat:328> * <var:J> + <nat:104> * <var:X> + <nat:216> * <var:P> + <nat:120> * <var:n> + <nat:222> * <var:f> + <nat:98> * <var:B> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } assert ( <genH> : Nat . odd <nat:415> = true ) . { auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . rewrite <genH> . auto . Qed . 