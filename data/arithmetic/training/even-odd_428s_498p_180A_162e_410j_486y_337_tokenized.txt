\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:s> \times <nat:428> + <nat:498> \times <var:p> + <var:A> \times <nat:180> + <nat:162> \times <var:e> + <var:j> \times <nat:410> + <nat:337> + <nat:486> \times <var:y> $ is odd . \end{theorem} \begin{proof} The addition of an even natural number with an odd number will be an odd natural . In addition , remember the integers $ <nat:428> $ , $ <nat:498> $ , $ <nat:180> $ , $ <nat:162> $ , $ <nat:410> $ , additionally $ <nat:486> $ are trivially even . For this reason , the pairs $ <nat:428> * <var:s> $ , $ <nat:498> * <var:p> $ , $ <nat:180> * <var:A> $ , $ <nat:162> * <var:e> $ , $ <var:j> * <nat:410> $ , in addition to $ <var:y> * <nat:486> $ is guaranteed to be even too . We justify the theorem must be true . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:s> <var:p> <var:A> <var:e> <var:j> <var:y> : nat , Nat . odd ( <nat:428> * <var:s> + <nat:498> * <var:p> + <nat:180> * <var:A> + <nat:162> * <var:e> + <nat:410> * <var:j> + <nat:486> * <var:y> + <nat:337> ) = true . Proof . intros . rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . assert ( <genH> : Nat . even <nat:428> = true ) . { auto . } assert ( <genH> : Nat . even <nat:498> = true ) . { auto . } assert ( <genH> : Nat . even <nat:180> = true ) . { auto . } assert ( <genH> : Nat . even <nat:162> = true ) . { auto . } assert ( <genH> : Nat . even <nat:410> = true ) . { auto . } assert ( <genH> : Nat . even <nat:486> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:428> * <var:s> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:498> * <var:p> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:180> * <var:A> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:162> * <var:e> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:410> * <var:j> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:486> * <var:y> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 