\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} When there exist numbers $ <var:g> $ , $ <var:e> $ , $ <var:D> $ , $ <var:j> $ , $ <var:Q> $ , $ <var:L> $ , $ <var:d> $ then take that $ <var:c> \in \mathbb{N} $ is said to be <def:seven-composite> assuming $ <var:c> = <var:e> \cdot <var:L> \cdot <var:D> \cdot <var:d> \cdot <var:Q> \cdot <var:g> \cdot <var:j> $ plus where $ <var:Q> $ , $ <var:e> $ , $ <var:j> $ , $ <var:L> $ , $ <var:d> $ , $ <var:g> $ and $ <var:D> > <nat:1> $ . Hence the positive integer <nat:60480> is <def:seven-composite> . \end{theorem} \begin{proof} Assume $ <var:Q> = <nat:5> $ , $ <var:g> = <nat:3> $ , $ <var:e> = <nat:12> $ , $ <var:D> = <nat:4> $ , $ <var:L> = <nat:2> $ , $ <var:d> = <nat:7> $ , and $ <var:j> = <nat:6> $ . We show <nat:60480> is the product between some $ <var:e> $ , $ <var:j> $ , $ <var:d> $ , $ <var:D> $ , $ <var:Q> $ , $ <var:L> $ and $ <var:g> $ . Note that $ <nat:60480> = <var:L> \cdot <var:d> \cdot <var:D> \cdot <var:j> \cdot <var:Q> \cdot <var:g> \cdot <var:e> = <nat:2> \cdot <nat:7> \cdot <nat:4> \cdot <nat:6> \cdot <nat:5> \cdot <nat:3> \cdot <nat:12> $ . Further note that $ <var:e> = <nat:12> $ , $ <var:L> = <nat:2> $ , $ <var:D> = <nat:4> $ , $ <var:Q> = <nat:5> $ , $ <var:g> = <nat:3> $ , $ <var:d> = <nat:7> $ , $ <var:j> = <nat:6> $ are greater than <nat:1> . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:seven-composite> ( <var:c> : nat ) := exists <var:g> <var:e> <var:D> <var:j> <var:Q> <var:L> <var:d> : nat , ( <var:c> = <var:e> * <var:L> * <var:D> * <var:d> * <var:Q> * <var:g> * <var:j> ) /\ ( <var:Q> > <nat:1> ) /\ ( <var:e> > <nat:1> ) /\ ( <var:j> > <nat:1> ) /\ ( <var:L> > <nat:1> ) /\ ( <var:d> > <nat:1> ) /\ ( <var:g> > <nat:1> ) /\ ( <var:D> > <nat:1> ) . Theorem <genP:1> : <def:seven-composite> <nat:60480> . Proof . unfold <def:seven-composite> . exists <nat:3> . exists <nat:12> . exists <nat:4> . exists <nat:6> . exists <nat:5> . exists <nat:2> . exists <nat:7> . assert ( <genH> : <nat:12> > <nat:1> ) . { lia . } assert ( <genH> : <nat:2> > <nat:1> ) . { lia . } assert ( <genH> : <nat:4> > <nat:1> ) . { lia . } assert ( <genH> : <nat:5> > <nat:1> ) . { lia . } assert ( <genH> : <nat:3> > <nat:1> ) . { lia . } assert ( <genH> : <nat:7> > <nat:1> ) . { lia . } assert ( <genH> : <nat:6> > <nat:1> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 