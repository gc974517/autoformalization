\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Allow $ <var:B> $ , $ <var:I> $ , $ <var:T> $ , $ <var:i> $ , $ <var:M> $ , $ <var:d> $ , $ <var:Z> $ as numbers . Let that $ <var:Q> \in \mathbb{N} $ will be a <def:seven-composite> whole number given $ <var:Q> = <var:M> * <var:B> * <var:i> * <var:d> * <var:T> * <var:Z> * <var:I> $ and unique factors are greater than or equal to <nat:2> . Then the natural number <nat:950400> is a <def:seven-composite> integer . \end{theorem} \begin{proof} Assume $ <var:T> = <nat:8> $ , $ <var:M> = <nat:10> $ , $ <var:i> = <nat:4> $ , $ <var:d> = <nat:11> $ , $ <var:I> = <nat:9> $ , $ <var:B> = <nat:5> $ , and $ <var:Z> = <nat:6> $ . Note that $ <var:Z> = <nat:6> $ , $ <var:d> = <nat:11> $ , $ <var:M> = <nat:10> $ , $ <var:B> = <nat:5> $ , $ <var:I> = <nat:9> $ , $ <var:i> = <nat:4> $ and $ <var:T> = <nat:8> $ are greater than or equivalent to <nat:2> . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:seven-composite> ( <var:Q> : nat ) := exists <var:B> <var:I> <var:T> <var:i> <var:M> <var:d> <var:Z> : nat , ( <var:Q> = <var:M> * <var:B> * <var:i> * <var:d> * <var:T> * <var:Z> * <var:I> ) /\ ( <var:B> >= <nat:2> ) /\ ( <var:I> >= <nat:2> ) /\ ( <var:T> >= <nat:2> ) /\ ( <var:i> >= <nat:2> ) /\ ( <var:M> >= <nat:2> ) /\ ( <var:d> >= <nat:2> ) /\ ( <var:Z> >= <nat:2> ) . Theorem <genP:1> : <def:seven-composite> <nat:950400> . Proof . unfold <def:seven-composite> . exists <nat:5> . exists <nat:9> . exists <nat:8> . exists <nat:4> . exists <nat:10> . exists <nat:11> . exists <nat:6> . assert ( <genH> : <nat:6> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:11> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:10> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:5> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:9> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:4> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:8> >= <nat:2> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 