\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Let $ <var:g> $ , $ <var:I> $ , $ <var:P> $ , $ <var:A> $ , $ <var:s> $ , $ <var:H> $ , $ <var:a> $ , $ <var:v> $ , and $ <var:l> \in \mathbb{Z}^+ $ so that $ <var:a> $ , $ <var:A> $ , $ <var:s> $ , $ <var:I> $ , $ <var:g> $ , $ <var:P> $ , $ <var:v> $ , $ <var:H> $ , and $ <var:l> $ greater than or equal to <nat:2> and so that $ <nat:29937600> $ is equivalent to $ <var:l> * <var:v> * <var:A> * <var:P> * <var:H> * <var:a> * <var:I> * <var:s> * <var:g> $ . \end{theorem} \begin{proof} Let $ <var:s> = <nat:3> $ , $ <var:H> = <nat:11> $ , $ <var:g> = <nat:4> $ , $ <var:v> = <nat:5> $ , $ <var:P> = <nat:10> $ , $ <var:a> = <nat:9> $ , $ <var:A> = <nat:6> $ , $ <var:l> = <nat:7> $ and $ <var:I> = <nat:12> $ . Observe $ <nat:3> $ , $ <nat:11> $ , $ <nat:5> $ , $ <nat:6> $ , $ <nat:12> $ , $ <nat:4> $ , $ <nat:9> $ , $ <nat:7> $ and $ <nat:10> \geq <nat:2> $ . \end{proof} \end{document} 
~
Require Import Lia . Theorem <genP:1> : exists <var:g> <var:I> <var:P> <var:A> <var:s> <var:H> <var:a> <var:v> <var:l> : nat , ( <var:a> >= <nat:2> ) /\ ( <var:A> >= <nat:2> ) /\ ( <var:s> >= <nat:2> ) /\ ( <var:I> >= <nat:2> ) /\ ( <var:g> >= <nat:2> ) /\ ( <var:P> >= <nat:2> ) /\ ( <var:v> >= <nat:2> ) /\ ( <var:H> >= <nat:2> ) /\ ( <var:l> >= <nat:2> ) /\ ( <nat:29937600> = <var:l> * <var:v> * <var:A> * <var:P> * <var:H> * <var:a> * <var:I> * <var:s> * <var:g> ) . Proof . exists <nat:4> . exists <nat:12> . exists <nat:10> . exists <nat:6> . exists <nat:3> . exists <nat:11> . exists <nat:9> . exists <nat:5> . exists <nat:7> . assert ( <genH> : <nat:3> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:11> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:5> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:6> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:12> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:4> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:9> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:7> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:10> >= <nat:2> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 