\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} We say that $ <var:r> $ is a <def:seven-composite> positive integer only if using some integers $ <var:G> $ , $ <var:J> $ , $ <var:K> $ , $ <var:V> $ , $ <var:W> $ , $ <var:j> $ , $ <var:C> $ we get $ <var:j> \cdot <var:G> \cdot <var:W> \cdot <var:J> \cdot <var:C> \cdot <var:V> \cdot <var:K> = <var:r> $ given some number $ <var:r> $ as well as where $ <var:j> $ , $ <var:W> $ , $ <var:J> $ , $ <var:G> $ , $ <var:K> $ , $ <var:V> $ and $ <var:C> \geq <nat:2> $ . Consequently $ <nat:498960> = <var:r> $ is a <def:seven-composite> number . \end{theorem} \begin{proof} Recollect that a <def:seven-composite> integer is the product between integers $ <var:V> $ , $ <var:W> $ , $ <var:C> $ , $ <var:j> $ , $ <var:J> $ , $ <var:K> $ , $ <var:G> $ larger than <nat:1> . Allow $ <var:W> = <nat:3> $ , $ <var:J> = <nat:7> $ , $ <var:K> = <nat:5> $ , $ <var:j> = <nat:4> $ , $ <var:C> = <nat:9> $ , $ <var:G> = <nat:12> $ and $ <var:V> = <nat:11> $ . Notice $ <var:K> = <nat:5> $ , $ <var:j> = <nat:4> $ , $ <var:V> = <nat:11> $ , $ <var:C> = <nat:9> $ , $ <var:G> = <nat:12> $ , $ <var:J> = <nat:7> $ , and $ <var:W> = <nat:3> > <nat:1> $ . Further observe that as well $ <nat:498960> = <nat:7> \cdot <nat:5> \cdot <nat:12> \cdot <nat:3> \cdot <nat:11> \cdot <nat:9> \cdot <nat:4> $ . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:seven-composite> ( <var:r> : nat ) := exists <var:G> <var:J> <var:K> <var:V> <var:W> <var:j> <var:C> : nat , ( <var:j> * <var:G> * <var:W> * <var:J> * <var:C> * <var:V> * <var:K> = <var:r> ) /\ ( <var:j> >= <nat:2> ) /\ ( <var:W> >= <nat:2> ) /\ ( <var:J> >= <nat:2> ) /\ ( <var:G> >= <nat:2> ) /\ ( <var:K> >= <nat:2> ) /\ ( <var:V> >= <nat:2> ) /\ ( <var:C> >= <nat:2> ) . Theorem <genP:1> : <def:seven-composite> <nat:498960> . Proof . unfold <def:seven-composite> . exists <nat:12> . exists <nat:7> . exists <nat:5> . exists <nat:11> . exists <nat:3> . exists <nat:4> . exists <nat:9> . assert ( <genH> : <nat:5> > <nat:1> ) . { lia . } assert ( <genH> : <nat:4> > <nat:1> ) . { lia . } assert ( <genH> : <nat:11> > <nat:1> ) . { lia . } assert ( <genH> : <nat:9> > <nat:1> ) . { lia . } assert ( <genH> : <nat:12> > <nat:1> ) . { lia . } assert ( <genH> : <nat:7> > <nat:1> ) . { lia . } assert ( <genH> : <nat:3> > <nat:1> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 