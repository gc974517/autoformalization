\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Taking some positive terms $ <var:Y> $ , $ <var:J> $ , $ <var:k> $ , $ <var:V> $ , $ <var:Q> $ , $ <var:d> $ , $ <var:t> $ , and $ <var:z> $ the expression $ <nat:368> <var:Y> + <nat:98> <var:V> + <nat:18> <var:Q> + <var:z> <nat:38> + <nat:336> <var:k> + <nat:390> <var:d> + <nat:296> <var:t> + <nat:325> + <nat:266> <var:J> $ is odd . \end{theorem} \begin{proof} We utilize the fact the expression $ <var:J> <nat:266> + <nat:296> <var:t> + <var:V> <nat:98> + <var:Y> <nat:368> + <var:d> <nat:390> + <nat:18> <var:Q> + <nat:38> <var:z> + <var:k> <nat:336> $ is known to be even . The terms $ <var:t> \cdot <nat:296> $ , $ <nat:336> \cdot <var:k> $ , $ <var:Y> \cdot <nat:368> $ , $ <nat:266> \cdot <var:J> $ , $ <var:z> \cdot <nat:38> $ , and also $ <nat:18> \cdot <var:Q> $ are obviously even from the fact the product of an even natural with an arbitrary positive integer is guaranteed to be clearly an even natural number . In addition , take note that $ <var:V> \cdot <nat:98> $ is guaranteed to be an even element of $ \mathbb{Z}^+ $ . See that $ <nat:390> \cdot <var:d> $ is trivially even . From the knowledge the product between even elements of $ \mathbb{N} $ with any integer is guaranteed to be by itself an even number the expression $ <var:z> \cdot <nat:38> + <var:Q> \cdot <nat:18> + <var:V> \cdot <nat:98> + <var:Y> \cdot <nat:368> + <var:k> \cdot <nat:336> + <nat:266> \cdot <var:J> + <nat:296> \cdot <var:t> + <var:d> \cdot <nat:390> $ is guaranteed to be even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:Y> <var:J> <var:k> <var:V> <var:Q> <var:d> <var:t> <var:z> : nat , Nat . odd ( <nat:368> * <var:Y> + <nat:98> * <var:V> + <nat:18> * <var:Q> + <nat:38> * <var:z> + <nat:336> * <var:k> + <nat:390> * <var:d> + <nat:296> * <var:t> + <nat:266> * <var:J> + <nat:325> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:296> * <var:t> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:336> * <var:k> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:368> * <var:Y> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:266> * <var:J> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:38> * <var:z> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:18> * <var:Q> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:98> * <var:V> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:390> * <var:d> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:368> * <var:Y> + <nat:98> * <var:V> + <nat:18> * <var:Q> + <nat:38> * <var:z> + <nat:336> * <var:k> + <nat:390> * <var:d> + <nat:296> * <var:t> + <nat:266> * <var:J> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . auto . Qed . 