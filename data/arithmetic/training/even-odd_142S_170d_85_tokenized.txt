\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:S> * <nat:142> + <nat:170> * <var:d> + <nat:85> $ will be odd assuming $ <var:d> $ , and $ <var:S> \in \mathbb{N} $ . \end{theorem} \begin{proof} Notice the totaling of an even element of $ \mathbb{Z}^+ $ with an odd integer will be an odd element of $ \mathbb{Z}^+ $ . See $ <nat:142> <var:S> + <nat:85> + <var:d> <nat:170> $ is guaranteed to be odd as a consequence that the expression $ <var:S> \times <nat:142> + <nat:170> \times <var:d> $ is clearly even . Take note the totaling between even elements of $ \mathbb{Z}^+ $ concurrently and an even number must be an even positive integer . The product $ <nat:170> \times <var:d> $ is obviously an even number in $ \mathbb{N} $ because the natural number $ <nat:170> $ is known to be an even number in $ \mathbb{N} $ . The leading term $ <nat:142> $ is known to be even . In consequence , the pair $ <var:S> \times <nat:142> $ is even in addition . and likewise from the knowledge the multiplication between even natural numbers and any natural is guaranteed to be even . We show the summation $ <nat:85> + <nat:142> <var:S> + <nat:170> <var:d> $ is guaranteed to be odd . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:d> <var:S> : nat , Nat . odd ( <nat:142> * <var:S> + <nat:170> * <var:d> + <nat:85> ) = true . Proof . intros . rewrite Nat . odd_add . assert ( <genH> : Nat . even <nat:170> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:170> * <var:d> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:142> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:142> * <var:S> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:142> * <var:S> + <nat:170> * <var:d> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . auto . } rewrite <- Nat . negb_even . rewrite <genH> . auto . Qed . 