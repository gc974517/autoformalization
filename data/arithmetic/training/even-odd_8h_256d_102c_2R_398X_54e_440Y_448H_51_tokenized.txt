\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Assuming any unknowns $ <var:h> $ , $ <var:c> $ , $ <var:d> $ , $ <var:X> $ , $ <var:H> $ , $ <var:Y> $ , $ <var:R> $ , and $ <var:e> $ the summation $ <nat:2> <var:R> + <var:c> <nat:102> + <var:X> <nat:398> + <nat:51> + <var:H> <nat:448> + <var:d> <nat:256> + <nat:440> <var:Y> + <var:e> <nat:54> + <var:h> <nat:8> $ is guaranteed to be odd . \end{theorem} \begin{proof} We utilize the knowledge the formula $ <var:e> \times <nat:54> + <nat:256> \times <var:d> + <nat:440> \times <var:Y> + <var:H> \times <nat:448> + <var:R> \times <nat:2> + <var:X> \times <nat:398> + <nat:8> \times <var:h> + <var:c> \times <nat:102> $ is obviously even . See the coefficients $ <nat:54> $ , $ <nat:256> $ , $ <nat:440> $ , $ <nat:448> $ , $ <nat:2> $ , $ <nat:398> $ , $ <nat:8> $ , $ <nat:102> $ , are known to be even . For this reason , the pairs $ <nat:54> * <var:e> $ , $ <nat:256> * <var:d> $ , $ <var:Y> * <nat:440> $ , $ <var:H> * <nat:448> $ , $ <var:R> * <nat:2> $ , $ <nat:398> * <var:X> $ , $ <nat:8> * <var:h> $ , $ <nat:102> * <var:c> $ , must be even additionally . The expression $ <var:h> \cdot <nat:8> + <var:d> \cdot <nat:256> + <nat:102> \cdot <var:c> + <nat:2> \cdot <var:R> + <var:X> \cdot <nat:398> + <nat:54> \cdot <var:e> + <nat:440> \cdot <var:Y> + <nat:448> \cdot <var:H> $ is trivially even because the product between an even natural with a positive integer is even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:h> <var:c> <var:d> <var:X> <var:H> <var:Y> <var:R> <var:e> : nat , Nat . odd ( <nat:2> * <var:R> + <nat:102> * <var:c> + <nat:398> * <var:X> + <nat:448> * <var:H> + <nat:256> * <var:d> + <nat:440> * <var:Y> + <nat:54> * <var:e> + <nat:8> * <var:h> + <nat:51> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:54> = true ) . { auto . } assert ( <genH> : Nat . even <nat:256> = true ) . { auto . } assert ( <genH> : Nat . even <nat:440> = true ) . { auto . } assert ( <genH> : Nat . even <nat:448> = true ) . { auto . } assert ( <genH> : Nat . even <nat:2> = true ) . { auto . } assert ( <genH> : Nat . even <nat:398> = true ) . { auto . } assert ( <genH> : Nat . even <nat:8> = true ) . { auto . } assert ( <genH> : Nat . even <nat:102> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:54> * <var:e> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:256> * <var:d> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:440> * <var:Y> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:448> * <var:H> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:2> * <var:R> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:398> * <var:X> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:8> * <var:h> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:102> * <var:c> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:2> * <var:R> + <nat:102> * <var:c> + <nat:398> * <var:X> + <nat:448> * <var:H> + <nat:256> * <var:d> + <nat:440> * <var:Y> + <nat:54> * <var:e> + <nat:8> * <var:h> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . auto . Qed . 