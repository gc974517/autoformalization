\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \newtheorem{definition}{Definition} \begin{document} \begin{definition} With the condition we have $ <var:s> $ , $ <var:z> $ , $ <var:j> $ , $ <var:J> $ , $ <var:b> $ , $ <var:E> $ , $ <var:n> $ , $ <var:F> $ , and $ <var:v> \geq <nat:2> $ such that assuming $ <var:i> \in \mathbb{Z}^+ $ , $ <var:i> = <var:J> \times <var:E> \times <var:n> \times <var:j> \times <var:v> \times <var:s> \times <var:z> \times <var:b> \times <var:F> $ , claim that $ <var:i> $ is a <def:nine-composite> integer for some $ <var:b> $ , $ <var:s> $ , $ <var:j> $ , $ <var:E> $ , $ <var:n> $ , $ <var:J> $ , $ <var:v> $ , $ <var:z> $ , $ <var:F> \in \mathbb{Z}^+ $ . \end{definition} \begin{theorem} The whole number <nat:23950080> is a <def:nine-composite> integer . \end{theorem} \begin{proof} Take $ <var:n> = <nat:11> $ , $ <var:E> = <nat:6> $ , $ <var:v> = <nat:8> $ , $ <var:F> = <nat:3> $ , $ <var:J> = <nat:2> $ , $ <var:s> = <nat:12> $ , $ <var:b> = <nat:7> $ , $ <var:j> = <nat:9> $ , $ <var:z> = <nat:10> $ . Notice $ <nat:23950080> = <var:s> \times <var:F> \times <var:E> \times <var:v> \times <var:n> \times <var:z> \times <var:j> \times <var:J> \times <var:b> $ . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:nine-composite> ( <var:i> : nat ) := exists <var:b> <var:s> <var:j> <var:E> <var:n> <var:J> <var:v> <var:z> <var:F> : nat , ( <var:s> >= <nat:2> ) /\ ( <var:z> >= <nat:2> ) /\ ( <var:j> >= <nat:2> ) /\ ( <var:J> >= <nat:2> ) /\ ( <var:b> >= <nat:2> ) /\ ( <var:E> >= <nat:2> ) /\ ( <var:n> >= <nat:2> ) /\ ( <var:F> >= <nat:2> ) /\ ( <var:v> >= <nat:2> ) /\ ( <var:i> = <var:J> * <var:E> * <var:n> * <var:j> * <var:v> * <var:s> * <var:z> * <var:b> * <var:F> ) . Theorem <genP:1> : <def:nine-composite> <nat:23950080> . Proof . unfold <def:nine-composite> . exists <nat:7> . exists <nat:12> . exists <nat:9> . exists <nat:6> . exists <nat:11> . exists <nat:2> . exists <nat:8> . exists <nat:10> . exists <nat:3> . repeat split . all : lia . Qed . 