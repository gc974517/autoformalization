\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \newtheorem{definition}{Definition} \begin{document} \begin{definition} There exist $ <var:K> $ , $ <var:k> $ , $ <var:f> $ , $ <var:B> $ , $ <var:v> $ where $ <var:K> $ , $ <var:f> $ , $ <var:v> $ , $ <var:B> $ and $ <var:k> \geq <nat:2> $ . We say that some number $ <var:r> $ will be named <def:five-composite> given $ <var:K> \times <var:k> \times <var:B> \times <var:v> \times <var:f> = <var:r> $ . \end{definition} \begin{theorem} $ <nat:17280> = <var:r> $ is a <def:five-composite> whole number . \end{theorem} \begin{proof} Recall that <nat:17280> is a <def:five-composite> integer wherever it is the multiplication between whole numbers $ <var:v> $ , $ <var:K> $ , $ <var:k> $ , $ <var:f> $ , $ <var:B> $ greater than or equivalent to <nat:2> . We confirm <nat:17280> is a <def:five-composite> natural number . Note $ <nat:17280> = <var:K> * <var:k> * <var:f> * <var:B> * <var:v> = <nat:12> * <nat:8> * <nat:9> * <nat:10> * <nat:2> $ . Furthermore observe that $ <nat:2> $ , $ <nat:12> $ , $ <nat:10> $ , $ <nat:9> $ , $ <nat:8> $ are larger than or equivalent to <nat:2> . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:five-composite> ( <var:r> : nat ) := exists <var:K> <var:k> <var:f> <var:B> <var:v> : nat , ( <var:K> >= <nat:2> ) /\ ( <var:f> >= <nat:2> ) /\ ( <var:v> >= <nat:2> ) /\ ( <var:B> >= <nat:2> ) /\ ( <var:k> >= <nat:2> ) /\ ( <var:K> * <var:k> * <var:B> * <var:v> * <var:f> = <var:r> ) . Theorem <genP:1> : <def:five-composite> <nat:17280> . Proof . unfold <def:five-composite> . exists <nat:12> . exists <nat:8> . exists <nat:9> . exists <nat:10> . exists <nat:2> . assert ( <genH> : <nat:2> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:12> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:10> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:9> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:8> >= <nat:2> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 