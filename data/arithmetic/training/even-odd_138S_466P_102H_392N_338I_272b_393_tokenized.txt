\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:I> <nat:338> + <nat:102> <var:H> + <nat:393> + <var:N> <nat:392> + <nat:272> <var:b> + <var:P> <nat:466> + <var:S> <nat:138> $ will be odd . \end{theorem} \begin{proof} We make use the fact $ <nat:393> + <var:b> \cdot <nat:272> + <nat:138> \cdot <var:S> + <var:H> \cdot <nat:102> + <nat:338> \cdot <var:I> + <var:P> \cdot <nat:466> + <var:N> \cdot <nat:392> $ is known as odd from the fact the expression $ <var:I> * <nat:338> + <var:S> * <nat:138> + <nat:102> * <var:H> + <nat:392> * <var:N> + <nat:272> * <var:b> + <nat:466> * <var:P> $ is trivially even . The products $ <var:S> \cdot <nat:138> $ , $ <nat:272> \cdot <var:b> $ , $ <nat:338> \cdot <var:I> $ , and moreover $ <nat:392> \cdot <var:N> $ will be even . The term $ <nat:102> \cdot <var:H> $ is trivially even . Adding on , observe the pair $ <var:P> \cdot <nat:466> $ is clearly an even natural . The formula $ <var:S> <nat:138> + <nat:466> <var:P> + <nat:102> <var:H> + <nat:392> <var:N> + <nat:338> <var:I> + <var:b> <nat:272> $ must be clearly even from the fact the summation between an even number in $ \mathbb{Z}^+ $ with an even natural will be clearly an even element of $ \mathbb{N} $ . See that the adding of even elements of $ \mathbb{N} $ concurrently and an odd natural number will be an odd whole number . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:I> <var:H> <var:N> <var:b> <var:P> <var:S> : nat , Nat . odd ( <nat:338> * <var:I> + <nat:102> * <var:H> + <nat:392> * <var:N> + <nat:272> * <var:b> + <nat:466> * <var:P> + <nat:138> * <var:S> + <nat:393> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:138> * <var:S> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:272> * <var:b> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:338> * <var:I> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:392> * <var:N> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:102> * <var:H> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:466> * <var:P> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:338> * <var:I> + <nat:102> * <var:H> + <nat:392> * <var:N> + <nat:272> * <var:b> + <nat:466> * <var:P> + <nat:138> * <var:S> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . auto . Qed . 