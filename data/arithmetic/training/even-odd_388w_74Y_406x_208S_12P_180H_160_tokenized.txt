\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} For some terms $ <var:w> $ , $ <var:H> $ , $ <var:x> $ , $ <var:S> $ , $ <var:P> $ , and $ <var:Y> $ $ <nat:12> * <var:P> + <var:Y> * <nat:74> + <nat:180> * <var:H> + <var:x> * <nat:406> + <nat:208> * <var:S> + <nat:160> + <var:w> * <nat:388> $ must be even . \end{theorem} \begin{proof} It can be demonstrated that the formula $ <nat:160> + <var:x> <nat:406> + <var:w> <nat:388> + <var:P> <nat:12> + <nat:208> <var:S> + <var:Y> <nat:74> + <var:H> <nat:180> $ will be even . It can be justified that $ <var:w> \cdot <nat:388> + <nat:74> \cdot <var:Y> + <var:x> \cdot <nat:406> + <var:S> \cdot <nat:208> + <var:P> \cdot <nat:12> + <nat:180> \cdot <var:H> $ is known as even . In addition , the numbers $ <nat:388> $ , $ <nat:74> $ , $ <nat:406> $ , $ <nat:208> $ , $ <nat:12> $ , as well as $ <nat:180> $ are obviously even . Thus , the pairs $ <var:w> <nat:388> $ , $ <var:Y> <nat:74> $ , $ <var:x> <nat:406> $ , $ <nat:208> <var:S> $ , $ <var:P> <nat:12> $ , and also $ <nat:180> <var:H> $ is even as well . By reason that the summation of even numbers in $ \mathbb{N} $ and an even whole number will be clearly an even number in $ \mathbb{N} $ , and likewise from the knowledge the product of even positive integers with a number will be even . Observe the summing of even positive integers together must be even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:w> <var:H> <var:x> <var:S> <var:P> <var:Y> : nat , Nat . even ( <nat:12> * <var:P> + <nat:74> * <var:Y> + <nat:180> * <var:H> + <nat:406> * <var:x> + <nat:208> * <var:S> + <nat:388> * <var:w> + <nat:160> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:388> = true ) . { auto . } assert ( <genH> : Nat . even <nat:74> = true ) . { auto . } assert ( <genH> : Nat . even <nat:406> = true ) . { auto . } assert ( <genH> : Nat . even <nat:208> = true ) . { auto . } assert ( <genH> : Nat . even <nat:12> = true ) . { auto . } assert ( <genH> : Nat . even <nat:180> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:388> * <var:w> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:74> * <var:Y> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:406> * <var:x> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:208> * <var:S> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:12> * <var:P> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:180> * <var:H> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:12> * <var:P> + <nat:74> * <var:Y> + <nat:180> * <var:H> + <nat:406> * <var:x> + <nat:208> * <var:S> + <nat:388> * <var:w> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . even_add . rewrite <genH> . auto . Qed . 