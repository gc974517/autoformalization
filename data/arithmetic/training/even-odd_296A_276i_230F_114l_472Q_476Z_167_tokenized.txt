\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Assuming any terms $ <var:i> $ , $ <var:Q> $ , $ <var:l> $ , $ <var:Z> $ , $ <var:A> $ , and $ <var:F> $ $ <nat:296> \times <var:A> + <var:i> \times <nat:276> + <nat:167> + <nat:230> \times <var:F> + <var:l> \times <nat:114> + <var:Q> \times <nat:472> + <nat:476> \times <var:Z> $ will be odd . \end{theorem} \begin{proof} Notice that $ <nat:167> $ is known as odd . We know the totaling of even elements of $ \mathbb{N} $ together and an odd natural number is guaranteed to be odd . The pairs $ <nat:296> <var:A> $ , $ <nat:276> <var:i> $ , $ <nat:230> <var:F> $ , $ <var:l> <nat:114> $ , $ <var:Q> <nat:472> $ , additionally $ <nat:476> <var:Z> $ will be even . This is true because the numbers $ <nat:296> $ , $ <nat:276> $ , $ <nat:230> $ , $ <nat:114> $ , $ <nat:472> $ , in addition to $ <nat:476> $ are obviously instrinsically even numbers . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:i> <var:Q> <var:l> <var:Z> <var:A> <var:F> : nat , Nat . odd ( <nat:296> * <var:A> + <nat:276> * <var:i> + <nat:230> * <var:F> + <nat:114> * <var:l> + <nat:472> * <var:Q> + <nat:476> * <var:Z> + <nat:167> ) = true . Proof . intros . assert ( <genH> : Nat . odd <nat:167> = true ) . { auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . assert ( <genH> : Nat . even <nat:296> = true ) . { auto . } assert ( <genH> : Nat . even <nat:276> = true ) . { auto . } assert ( <genH> : Nat . even <nat:230> = true ) . { auto . } assert ( <genH> : Nat . even <nat:114> = true ) . { auto . } assert ( <genH> : Nat . even <nat:472> = true ) . { auto . } assert ( <genH> : Nat . even <nat:476> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:296> * <var:A> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:276> * <var:i> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:230> * <var:F> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:114> * <var:l> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:472> * <var:Q> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:476> * <var:Z> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 