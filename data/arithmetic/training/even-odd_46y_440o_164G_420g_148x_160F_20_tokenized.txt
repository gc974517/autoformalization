\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Assuming integers $ <var:g> $ , $ <var:x> $ , $ <var:G> $ , $ <var:y> $ , $ <var:F> $ , and $ <var:o> $ the formula $ <nat:20> + <var:g> \times <nat:420> + <nat:440> \times <var:o> + <nat:164> \times <var:G> + <var:y> \times <nat:46> + <var:F> \times <nat:160> + <var:x> \times <nat:148> $ will be even . \end{theorem} \begin{proof} Take note the pairs $ <var:F> \cdot <nat:160> $ , $ <var:x> \cdot <nat:148> $ , $ <nat:46> \cdot <var:y> $ , $ <nat:420> \cdot <var:g> $ , as well as $ <nat:164> \cdot <var:G> $ are obviously even since the integers $ <nat:160> $ , $ <nat:148> $ , $ <nat:46> $ , $ <nat:420> $ , and likewise $ <nat:164> $ are trivially even naturals . The integer $ <nat:440> $ is obviously an even element of $ \mathbb{N} $ . Then , the term $ <nat:440> \cdot <var:o> $ is guaranteed to be even also . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:g> <var:x> <var:G> <var:y> <var:F> <var:o> : nat , Nat . even ( <nat:420> * <var:g> + <nat:440> * <var:o> + <nat:164> * <var:G> + <nat:46> * <var:y> + <nat:160> * <var:F> + <nat:148> * <var:x> + <nat:20> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:160> = true ) . { auto . } assert ( <genH> : Nat . even <nat:148> = true ) . { auto . } assert ( <genH> : Nat . even <nat:46> = true ) . { auto . } assert ( <genH> : Nat . even <nat:420> = true ) . { auto . } assert ( <genH> : Nat . even <nat:164> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:160> * <var:F> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:148> * <var:x> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:46> * <var:y> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:420> * <var:g> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:164> * <var:G> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:440> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:440> * <var:o> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 