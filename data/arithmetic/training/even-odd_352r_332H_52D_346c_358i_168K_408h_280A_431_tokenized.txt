\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:A> \cdot <nat:280> + <var:h> \cdot <nat:408> + <var:r> \cdot <nat:352> + <nat:346> \cdot <var:c> + <nat:52> \cdot <var:D> + <var:i> \cdot <nat:358> + <nat:168> \cdot <var:K> + <var:H> \cdot <nat:332> + <nat:431> $ is odd . \end{theorem} \begin{proof} The summing between even elements of $ \mathbb{Z}^+ $ collectively and an odd number in $ \mathbb{N} $ is guaranteed to be an odd element of $ \mathbb{N} $ . The leading terms $ <nat:346> $ , $ <nat:52> $ , $ <nat:358> $ , $ <nat:408> $ , $ <nat:168> $ , additionally $ <nat:280> $ will be even What's more , take note that the integer $ <nat:332> $ is even In addition to this , observe that the leading term $ <nat:352> $ is even Taking the product of an even whole number and a number in $ \mathbb{N} $ is even . Consequently , the sum $ <var:r> \times <nat:352> + <var:H> \times <nat:332> + <var:D> \times <nat:52> + <nat:431> + <var:c> \times <nat:346> + <nat:358> \times <var:i> + <var:K> \times <nat:168> + <nat:408> \times <var:h> + <var:A> \times <nat:280> $ is odd . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:A> <var:h> <var:r> <var:c> <var:D> <var:i> <var:K> <var:H> : nat , Nat . odd ( <nat:280> * <var:A> + <nat:408> * <var:h> + <nat:352> * <var:r> + <nat:346> * <var:c> + <nat:52> * <var:D> + <nat:358> * <var:i> + <nat:168> * <var:K> + <nat:332> * <var:H> + <nat:431> ) = true . Proof . intros . rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . assert ( <genH> : Nat . even <nat:346> = true ) . { auto . } assert ( <genH> : Nat . even <nat:52> = true ) . { auto . } assert ( <genH> : Nat . even <nat:358> = true ) . { auto . } assert ( <genH> : Nat . even <nat:408> = true ) . { auto . } assert ( <genH> : Nat . even <nat:168> = true ) . { auto . } assert ( <genH> : Nat . even <nat:280> = true ) . { auto . } assert ( <genH> : Nat . even <nat:332> = true ) . { auto . } assert ( <genH> : Nat . even <nat:352> = true ) . { auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . repeat rewrite Nat . even_mul . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 