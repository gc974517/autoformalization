\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:Y> <nat:232> + <nat:410> <var:U> + <nat:240> <var:S> + <var:l> <nat:306> + <var:H> <nat:396> + <nat:142> <var:m> + <var:X> <nat:60> + <var:f> <nat:374> + <nat:197> $ is guaranteed to be odd taking all whole numbers $ <var:U> $ , $ <var:m> $ , $ <var:l> $ , $ <var:X> $ , $ <var:H> $ , $ <var:f> $ , $ <var:S> $ , and $ <var:Y> $ . \end{theorem} \begin{proof} The products $ <var:U> <nat:410> $ , $ <nat:306> <var:l> $ , $ <var:m> <nat:142> $ , $ <nat:396> <var:H> $ , and $ <var:f> <nat:374> $ are known to be even . This is true because the product of an even whole number and an arbitrary number in $ \mathbb{Z}^+ $ is even . Building on , the products $ <nat:232> <var:Y> $ and moreover $ <var:X> <nat:60> $ are known as even natural numbers . This fact must be true as a consequence that multiplying between an even whole number and some integer is an even natural . Furthermore , see that $ <var:S> <nat:240> $ is known to be even . It can be shown that our proposition holds . Recall that $ <nat:197> $ is trivially odd . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:U> <var:m> <var:l> <var:X> <var:H> <var:f> <var:S> <var:Y> : nat , Nat . odd ( <nat:232> * <var:Y> + <nat:410> * <var:U> + <nat:240> * <var:S> + <nat:306> * <var:l> + <nat:396> * <var:H> + <nat:142> * <var:m> + <nat:60> * <var:X> + <nat:374> * <var:f> + <nat:197> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:410> * <var:U> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:306> * <var:l> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:142> * <var:m> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:396> * <var:H> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:374> * <var:f> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:232> * <var:Y> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:60> * <var:X> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:240> * <var:S> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . odd <nat:197> = true ) . { auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 