\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Assuming $ \exists <var:x> $ , $ <var:W> $ , $ <var:U> $ , $ <var:T> $ , $ <var:Y> $ , $ <var:n> $ , $ <var:K> \in \mathbb{Z}^+ $ more than <nat:1> . We claim that some whole number $ <var:L> $ will be considered to be a <def:seven-composite> number assuming $ <var:L> = <var:x> * <var:W> * <var:K> * <var:U> * <var:n> * <var:Y> * <var:T> $ . For this reason $ <var:L> = <nat:1209600> $ is a <def:seven-composite> number . \end{theorem} \begin{proof} Recall <nat:1209600> is a <def:seven-composite> natural number when it is the product of integers $ <var:x> $ , $ <var:W> $ , $ <var:Y> $ , $ <var:n> $ , $ <var:K> $ , $ <var:U> $ , $ <var:T> $ greater than <nat:1> . Assume $ <var:x> = <nat:8> $ , $ <var:T> = <nat:4> $ , $ <var:W> = <nat:12> $ , $ <var:K> = <nat:10> $ , $ <var:n> = <nat:9> $ , $ <var:Y> = <nat:7> $ and $ <var:U> = <nat:5> $ . We demonstrate <nat:1209600> is a <def:seven-composite> number . Moreover notice that $ <nat:4> $ , $ <nat:9> $ , $ <nat:7> $ , $ <nat:8> $ , $ <nat:10> $ , $ <nat:5> $ , $ <nat:12> $ are greater than <nat:1> . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:seven-composite> ( <var:L> : nat ) := exists <var:x> <var:W> <var:U> <var:T> <var:Y> <var:n> <var:K> : nat , ( <var:x> > <nat:1> ) /\ ( <var:W> > <nat:1> ) /\ ( <var:U> > <nat:1> ) /\ ( <var:T> > <nat:1> ) /\ ( <var:Y> > <nat:1> ) /\ ( <var:n> > <nat:1> ) /\ ( <var:K> > <nat:1> ) /\ ( <var:L> = <var:x> * <var:W> * <var:K> * <var:U> * <var:n> * <var:Y> * <var:T> ) . Theorem <genP:1> : <def:seven-composite> <nat:1209600> . Proof . unfold <def:seven-composite> . exists <nat:8> . exists <nat:12> . exists <nat:5> . exists <nat:4> . exists <nat:7> . exists <nat:9> . exists <nat:10> . assert ( <genH> : <nat:4> > <nat:1> ) . { lia . } assert ( <genH> : <nat:9> > <nat:1> ) . { lia . } assert ( <genH> : <nat:7> > <nat:1> ) . { lia . } assert ( <genH> : <nat:8> > <nat:1> ) . { lia . } assert ( <genH> : <nat:10> > <nat:1> ) . { lia . } assert ( <genH> : <nat:5> > <nat:1> ) . { lia . } assert ( <genH> : <nat:12> > <nat:1> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 