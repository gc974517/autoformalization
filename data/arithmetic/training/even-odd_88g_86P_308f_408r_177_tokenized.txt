\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Given every natural terms $ <var:f> $ , $ <var:P> $ , $ <var:r> $ , and $ <var:g> $ the expression $ <nat:177> + <var:g> \times <nat:88> + <nat:408> \times <var:r> + <nat:308> \times <var:f> + <nat:86> \times <var:P> $ is guaranteed to be odd . \end{theorem} \begin{proof} The adding between an even natural and an odd natural number will be an odd element of $ \mathbb{Z}^+ $ . Notice that $ <nat:177> $ is clearly an odd integer . Our main result is true from the knowledge $ <nat:88> * <var:g> + <var:P> * <nat:86> + <var:f> * <nat:308> + <var:r> * <nat:408> $ is known to be even . Furthermore , take note the whole numbers $ <nat:88> $ , $ <nat:86> $ , $ <nat:308> $ , as well as $ <nat:408> $ are clearly even . Consequently , the products $ <var:g> \cdot <nat:88> $ , $ <var:P> \cdot <nat:86> $ , $ <var:f> \cdot <nat:308> $ , and $ <var:r> \cdot <nat:408> $ will be even also . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:f> <var:P> <var:r> <var:g> : nat , Nat . odd ( <nat:88> * <var:g> + <nat:408> * <var:r> + <nat:308> * <var:f> + <nat:86> * <var:P> + <nat:177> ) = true . Proof . intros . rewrite Nat . odd_add . assert ( <genH> : Nat . odd <nat:177> = true ) . { auto . } assert ( <genH> : Nat . even <nat:88> = true ) . { auto . } assert ( <genH> : Nat . even <nat:86> = true ) . { auto . } assert ( <genH> : Nat . even <nat:308> = true ) . { auto . } assert ( <genH> : Nat . even <nat:408> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:88> * <var:g> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:86> * <var:P> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:308> * <var:f> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:408> * <var:r> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:88> * <var:g> + <nat:408> * <var:r> + <nat:308> * <var:f> + <nat:86> * <var:P> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite <- Nat . negb_even . rewrite <genH> . rewrite <genH> . auto . Qed . 