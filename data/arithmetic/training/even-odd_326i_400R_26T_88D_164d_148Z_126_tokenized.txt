\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} With any $ <var:D> $ , $ <var:d> $ , $ <var:i> $ , $ <var:Z> $ , $ <var:T> $ , and $ <var:R> \in \mathbb{N} $ $ <nat:126> + <nat:88> <var:D> + <var:i> <nat:326> + <nat:26> <var:T> + <nat:400> <var:R> + <nat:148> <var:Z> + <nat:164> <var:d> $ is even . \end{theorem} \begin{proof} We know the totaling between even whole numbers successively is guaranteed to be obviously an even number . See that $ <nat:126> $ is trivially even . $ <nat:326> * <var:i> + <var:Z> * <nat:148> + <var:d> * <nat:164> + <nat:400> * <var:R> + <nat:126> + <var:T> * <nat:26> + <var:D> * <nat:88> $ is trivially even by reason that $ <nat:326> \times <var:i> + <var:R> \times <nat:400> + <nat:26> \times <var:T> + <var:D> \times <nat:88> + <var:d> \times <nat:164> + <nat:148> \times <var:Z> $ is obviously even , from the knowledge the summing between an even natural with an even whole number is guaranteed to be an even integer . The pairs $ <nat:326> \times <var:i> $ , $ <var:R> \times <nat:400> $ , $ <nat:26> \times <var:T> $ , $ <nat:88> \times <var:D> $ , $ <var:d> \times <nat:164> $ , plus $ <var:Z> \times <nat:148> $ are guaranteed to be even positive integers since multiplying of an even number and some element of $ \mathbb{Z}^+ $ must be an even whole number . This fact must be true by reason that the positive integers $ <nat:326> $ , $ <nat:400> $ , $ <nat:26> $ , $ <nat:88> $ , $ <nat:164> $ , in addition to $ <nat:148> $ are known to be even naturals . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:D> <var:d> <var:i> <var:Z> <var:T> <var:R> : nat , Nat . even ( <nat:88> * <var:D> + <nat:326> * <var:i> + <nat:26> * <var:T> + <nat:400> * <var:R> + <nat:148> * <var:Z> + <nat:164> * <var:d> + <nat:126> ) = true . Proof . intros . rewrite Nat . even_add . assert ( <genH> : Nat . even <nat:126> = true ) . { auto . } assert ( <genH> : Nat . even <nat:326> = true ) . { auto . } assert ( <genH> : Nat . even <nat:400> = true ) . { auto . } assert ( <genH> : Nat . even <nat:26> = true ) . { auto . } assert ( <genH> : Nat . even <nat:88> = true ) . { auto . } assert ( <genH> : Nat . even <nat:164> = true ) . { auto . } assert ( <genH> : Nat . even <nat:148> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:326> * <var:i> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:400> * <var:R> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:26> * <var:T> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:88> * <var:D> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:164> * <var:d> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:148> * <var:Z> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:88> * <var:D> + <nat:326> * <var:i> + <nat:26> * <var:T> + <nat:400> * <var:R> + <nat:148> * <var:Z> + <nat:164> * <var:d> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite <genH> . rewrite <genH> . auto . Qed . 