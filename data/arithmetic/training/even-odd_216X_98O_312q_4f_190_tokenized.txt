\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} For some $ <var:q> $ , $ <var:O> $ , $ <var:X> $ , and $ <var:f> $ $ <var:q> \cdot <nat:312> + <nat:216> \cdot <var:X> + <nat:190> + <nat:98> \cdot <var:O> + <nat:4> \cdot <var:f> $ is guaranteed to be even . \end{theorem} \begin{proof} Observe $ <nat:190> $ is obviously even . It can be justified that our main result must be true . The formula $ <nat:98> \times <var:O> + <var:f> \times <nat:4> + <nat:312> \times <var:q> + <var:X> \times <nat:216> $ is clearly even . Further , the coefficients $ <nat:98> $ , $ <nat:4> $ , $ <nat:312> $ , $ <nat:216> $ , are clearly even . In consequence , the pairs $ <nat:98> * <var:O> $ , $ <nat:4> * <var:f> $ , $ <nat:312> * <var:q> $ , $ <var:X> * <nat:216> $ , is guaranteed to be even as well . From the fact taking the product between an even natural number and some number in $ \mathbb{Z}^+ $ is even the expression $ <var:X> \cdot <nat:216> + <var:O> \cdot <nat:98> + <nat:312> \cdot <var:q> + <var:f> \cdot <nat:4> $ is guaranteed to be even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:q> <var:O> <var:X> <var:f> : nat , Nat . even ( <nat:312> * <var:q> + <nat:216> * <var:X> + <nat:98> * <var:O> + <nat:4> * <var:f> + <nat:190> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:190> = true ) . { auto . } assert ( <genH> : Nat . even <nat:98> = true ) . { auto . } assert ( <genH> : Nat . even <nat:4> = true ) . { auto . } assert ( <genH> : Nat . even <nat:312> = true ) . { auto . } assert ( <genH> : Nat . even <nat:216> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:98> * <var:O> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:4> * <var:f> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:312> * <var:q> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:216> * <var:X> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:312> * <var:q> + <nat:216> * <var:X> + <nat:98> * <var:O> + <nat:4> * <var:f> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . auto . Qed . 