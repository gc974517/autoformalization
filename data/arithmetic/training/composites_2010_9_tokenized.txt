\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \newtheorem{definition}{Definition} \begin{document} \begin{definition} Under the condition that we have $ <var:r> \times <var:D> \times <var:y> \times <var:k> \times <var:d> \times <var:v> \times <var:J> \times <var:z> \times <var:U> = <var:j> $ assuming $ <var:j> \in \mathbb{Z}^+ $ , then take that $ <var:j> $ is a <def:nine-composite> natural number with some $ <var:z> $ , $ <var:d> $ , $ <var:J> $ , $ <var:D> $ , $ <var:k> $ , $ <var:U> $ , $ <var:y> $ , $ <var:r> $ , $ <var:v> \in \mathbb{N} $ . \end{definition} \begin{theorem} $ <nat:19958400> = <var:j> $ is a <def:nine-composite> natural number . \end{theorem} \begin{proof} Remember a <def:nine-composite> is the product of whole numbers $ <var:r> $ , $ <var:z> $ , $ <var:J> $ , $ <var:k> $ , $ <var:D> $ , $ <var:U> $ , $ <var:v> $ , $ <var:d> $ and $ <var:y> $ greater than <nat:1> . Take $ <var:J> = <nat:3> $ , $ <var:z> = <nat:8> $ , $ <var:U> = <nat:11> $ , $ <var:k> = <nat:9> $ , $ <var:D> = <nat:7> $ , $ <var:v> = <nat:10> $ , $ <var:y> = <nat:12> $ , $ <var:d> = <nat:2> $ , and $ <var:r> = <nat:5> $ . We demonstrate <nat:19958400> is <def:nine-composite> . We show <nat:19958400> is a <def:nine-composite> integer by reason of $ <nat:19958400> = <var:k> * <var:r> * <var:U> * <var:d> * <var:z> * <var:v> * <var:J> * <var:y> * <var:D> = <nat:9> * <nat:5> * <nat:11> * <nat:2> * <nat:8> * <nat:10> * <nat:3> * <nat:12> * <nat:7> $ . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:nine-composite> ( <var:j> : nat ) := exists <var:z> <var:d> <var:J> <var:D> <var:k> <var:U> <var:y> <var:r> <var:v> : nat , ( <var:r> * <var:D> * <var:y> * <var:k> * <var:d> * <var:v> * <var:J> * <var:z> * <var:U> = <var:j> ) . Theorem <genP:1> : <def:nine-composite> <nat:19958400> . Proof . unfold <def:nine-composite> . exists <nat:8> . exists <nat:2> . exists <nat:3> . exists <nat:7> . exists <nat:9> . exists <nat:11> . exists <nat:12> . exists <nat:5> . exists <nat:10> . repeat split . all : lia . Qed . 