\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Using some $ <var:S> $ , $ <var:R> $ , $ <var:U> $ , $ <var:B> $ , $ <var:h> $ , $ <var:M> $ , $ <var:K> $ , and $ <var:V> $ $ <var:M> * <nat:12> + <var:K> * <nat:90> + <nat:258> * <var:h> + <nat:107> + <nat:190> * <var:B> + <var:V> * <nat:140> + <nat:130> * <var:U> + <nat:272> * <var:S> + <var:R> * <nat:152> $ is guaranteed to be odd . \end{theorem} \begin{proof} Recall the pairs $ <var:R> <nat:152> $ , $ <nat:190> <var:B> $ , $ <nat:90> <var:K> $ , plus $ <nat:140> <var:V> $ will be even . This holds since taking the product between an even positive integer with a natural must be even . What's more , the terms $ <var:M> <nat:12> $ , $ <var:h> <nat:258> $ , and moreover $ <var:U> <nat:130> $ are known to be even . This holds as a consequence that multiplying of an even whole number and some element of $ \mathbb{N} $ is guaranteed to be even . Remember that the term $ <var:S> <nat:272> $ is clearly an even number in $ \mathbb{Z}^+ $ . This fact holds since taking the product of an even element of $ \mathbb{Z}^+ $ with any number in $ \mathbb{N} $ is guaranteed to be an even element of $ \mathbb{N} $ . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:S> <var:R> <var:U> <var:B> <var:h> <var:M> <var:K> <var:V> : nat , Nat . odd ( <nat:12> * <var:M> + <nat:90> * <var:K> + <nat:258> * <var:h> + <nat:190> * <var:B> + <nat:140> * <var:V> + <nat:130> * <var:U> + <nat:272> * <var:S> + <nat:152> * <var:R> + <nat:107> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:152> * <var:R> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:190> * <var:B> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:90> * <var:K> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:140> * <var:V> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:12> * <var:M> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:258> * <var:h> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:130> * <var:U> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:272> * <var:S> ) = true ) . { rewrite Nat . even_mul . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 