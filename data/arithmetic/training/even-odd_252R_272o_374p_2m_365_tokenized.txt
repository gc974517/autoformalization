\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} For every natural numbers $ <var:R> $ , $ <var:m> $ , $ <var:o> $ , and $ <var:p> $ the sum $ <nat:2> <var:m> + <var:o> <nat:272> + <nat:252> <var:R> + <var:p> <nat:374> + <nat:365> $ must be odd . \end{theorem} \begin{proof} It can be shown that $ <var:R> <nat:252> + <nat:374> <var:p> + <var:o> <nat:272> + <var:m> <nat:2> + <nat:365> $ will be odd . $ <var:R> \times <nat:252> $ is guaranteed to be an even element of $ \mathbb{Z}^+ $ . This is proven by reason that the product between an even natural with some element of $ \mathbb{N} $ must be an even element of $ \mathbb{Z}^+ $ , and must be true because the number $ <nat:252> $ is clearly even . Likewise , the pair $ <var:o> \times <nat:272> $ is clearly even . This is true from the knowledge the multiplication of an even integer with any natural number is guaranteed to be an even natural number . This fact is true from the knowledge the whole number $ <nat:272> $ is clearly even . On top of this , take note the whole number $ <nat:374> $ is obviously even . Hence , the product $ <var:p> \times <nat:374> $ will be even also . The natural number $ <nat:2> $ is trivially even . For this reason , the pair $ <nat:2> \times <var:m> $ is even at the same time . Take note that the summing between even naturals together with an odd integer is guaranteed to be trivially an odd integer . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:R> <var:m> <var:o> <var:p> : nat , Nat . odd ( <nat:2> * <var:m> + <nat:272> * <var:o> + <nat:252> * <var:R> + <nat:374> * <var:p> + <nat:365> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:252> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:252> * <var:R> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:272> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:272> * <var:o> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:374> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:374> * <var:p> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:2> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:2> * <var:m> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 