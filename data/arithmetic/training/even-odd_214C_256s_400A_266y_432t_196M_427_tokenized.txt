\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:400> <var:A> + <nat:256> <var:s> + <var:M> <nat:196> + <var:C> <nat:214> + <var:y> <nat:266> + <var:t> <nat:432> + <nat:427> $ will be odd assuming all variables $ <var:M> $ , $ <var:t> $ , $ <var:A> $ , $ <var:y> $ , $ <var:C> $ , and $ <var:s> $ . \end{theorem} \begin{proof} Remember that $ <nat:427> $ is obviously an odd whole number . The addition between an even positive integer and an odd whole number must be trivially an odd natural . The products $ <var:M> \times <nat:196> $ and moreover $ <var:y> \times <nat:266> $ are known as even since the positive integers $ <nat:196> $ plus $ <nat:266> $ are known as even integers . On top of this , remember that the pair $ <var:t> \times <nat:432> $ is guaranteed to be an even number in $ \mathbb{N} $ by reason that the number $ <nat:432> $ is even . Remember the positive integer $ <nat:256> $ is clearly even . In consequence , the product $ <nat:256> \times <var:s> $ must be even at the same time . In addition , the term $ <nat:214> \times <var:C> $ is trivially even because taking the product of an even natural number and some integer is even , which is proven by reason that the whole number $ <nat:214> $ is even . The coefficient $ <nat:400> $ is even . As a consequence , $ <var:A> \times <nat:400> $ is even in addition . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:M> <var:t> <var:A> <var:y> <var:C> <var:s> : nat , Nat . odd ( <nat:400> * <var:A> + <nat:256> * <var:s> + <nat:196> * <var:M> + <nat:214> * <var:C> + <nat:266> * <var:y> + <nat:432> * <var:t> + <nat:427> ) = true . Proof . intros . assert ( <genH> : Nat . odd <nat:427> = true ) . { auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . assert ( <genH> : Nat . even <nat:196> = true ) . { auto . } assert ( <genH> : Nat . even <nat:266> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:196> * <var:M> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:266> * <var:y> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:432> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:432> * <var:t> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:256> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:256> * <var:s> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:214> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:214> * <var:C> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:400> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:400> * <var:A> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 