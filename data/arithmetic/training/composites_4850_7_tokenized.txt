\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \newtheorem{definition}{Definition} \begin{document} \begin{definition} We define that $ <var:B> $ is a <def:seven-composite> number if and only if assuming some whole numbers $ <var:w> $ , $ <var:e> $ , $ <var:G> $ , $ <var:c> $ , $ <var:l> $ , $ <var:s> $ , $ <var:N> $ we get $ <var:s> $ , $ <var:w> $ , $ <var:N> $ , $ <var:l> $ , $ <var:e> $ , $ <var:c> $ and $ <var:G> \geq <nat:2> $ and assuming some whole number $ <var:B> $ , $ <var:B> = <var:c> * <var:l> * <var:e> * <var:w> * <var:N> * <var:G> * <var:s> $ . \end{definition} \begin{theorem} The number <nat:221760> is a <def:seven-composite> natural number . \end{theorem} \begin{proof} Take $ <var:w> = <nat:2> $ , $ <var:N> = <nat:10> $ , $ <var:G> = <nat:4> $ , $ <var:e> = <nat:7> $ , $ <var:l> = <nat:3> $ , $ <var:s> = <nat:11> $ and $ <var:c> = <nat:12> $ . We prove our theory holds as On account of $ <var:G> = <nat:4> $ , $ <var:e> = <nat:7> $ , $ <var:s> = <nat:11> $ , $ <var:N> = <nat:10> $ , $ <var:l> = <nat:3> $ , $ <var:w> = <nat:2> $ , $ <var:c> = <nat:12> \geq <nat:2> $ . Thus , $ <var:c> $ , $ <var:s> $ , $ <var:e> $ , $ <var:l> $ , $ <var:N> $ , $ <var:w> $ , and $ <var:G> \geq <nat:2> $ plus $ <nat:221760> = <var:N> \times <var:c> \times <var:s> \times <var:e> \times <var:w> \times <var:G> \times <var:l> $ is validated . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:seven-composite> ( <var:B> : nat ) := exists <var:w> <var:e> <var:G> <var:c> <var:l> <var:s> <var:N> : nat , ( <var:s> >= <nat:2> ) /\ ( <var:w> >= <nat:2> ) /\ ( <var:N> >= <nat:2> ) /\ ( <var:l> >= <nat:2> ) /\ ( <var:e> >= <nat:2> ) /\ ( <var:c> >= <nat:2> ) /\ ( <var:G> >= <nat:2> ) /\ ( <var:B> = <var:c> * <var:l> * <var:e> * <var:w> * <var:N> * <var:G> * <var:s> ) . Theorem <genP:1> : <def:seven-composite> <nat:221760> . Proof . unfold <def:seven-composite> . exists <nat:2> . exists <nat:7> . exists <nat:4> . exists <nat:12> . exists <nat:3> . exists <nat:11> . exists <nat:10> . assert ( <genH> : <nat:4> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:7> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:11> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:10> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:3> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:2> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:12> >= <nat:2> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 