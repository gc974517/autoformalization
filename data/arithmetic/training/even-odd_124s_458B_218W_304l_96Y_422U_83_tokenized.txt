\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:422> \times <var:U> + <var:B> \times <nat:458> + <var:l> \times <nat:304> + <var:Y> \times <nat:96> + <nat:83> + <var:W> \times <nat:218> + <var:s> \times <nat:124> $ is odd . \end{theorem} \begin{proof} We verify the theorem is true . Take note $ <nat:83> $ is clearly an odd natural . Our proposition holds from the knowledge $ <nat:124> * <var:s> + <nat:458> * <var:B> + <var:W> * <nat:218> + <nat:304> * <var:l> + <var:Y> * <nat:96> + <nat:422> * <var:U> $ is trivially even . The whole numbers $ <nat:124> $ , $ <nat:458> $ , $ <nat:218> $ , $ <nat:304> $ , $ <nat:96> $ , and moreover $ <nat:422> $ are known as even . As a consequence , the terms $ <var:s> \cdot <nat:124> $ , $ <var:B> \cdot <nat:458> $ , $ <nat:218> \cdot <var:W> $ , $ <nat:304> \cdot <var:l> $ , $ <nat:96> \cdot <var:Y> $ , as well as $ <nat:422> \cdot <var:U> $ will be even also . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:U> <var:B> <var:l> <var:Y> <var:W> <var:s> : nat , Nat . odd ( <nat:422> * <var:U> + <nat:458> * <var:B> + <nat:304> * <var:l> + <nat:96> * <var:Y> + <nat:218> * <var:W> + <nat:124> * <var:s> + <nat:83> ) = true . Proof . intros . assert ( <genH> : Nat . odd <nat:83> = true ) . { auto . } assert ( <genH> : Nat . even <nat:124> = true ) . { auto . } assert ( <genH> : Nat . even <nat:458> = true ) . { auto . } assert ( <genH> : Nat . even <nat:218> = true ) . { auto . } assert ( <genH> : Nat . even <nat:304> = true ) . { auto . } assert ( <genH> : Nat . even <nat:96> = true ) . { auto . } assert ( <genH> : Nat . even <nat:422> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:124> * <var:s> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:458> * <var:B> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:218> * <var:W> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:304> * <var:l> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:96> * <var:Y> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:422> * <var:U> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:422> * <var:U> + <nat:458> * <var:B> + <nat:304> * <var:l> + <nat:96> * <var:Y> + <nat:218> * <var:W> + <nat:124> * <var:s> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . rewrite <genH> . auto . Qed . 