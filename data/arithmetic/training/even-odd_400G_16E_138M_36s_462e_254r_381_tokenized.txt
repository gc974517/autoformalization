\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Taking positive numbers $ <var:E> $ , $ <var:M> $ , $ <var:G> $ , $ <var:e> $ , $ <var:s> $ , and $ <var:r> $ $ <var:M> \cdot <nat:138> + <var:r> \cdot <nat:254> + <nat:381> + <var:G> \cdot <nat:400> + <nat:462> \cdot <var:e> + <nat:36> \cdot <var:s> + <var:E> \cdot <nat:16> $ must be odd . \end{theorem} \begin{proof} Notice $ <nat:381> $ is trivially odd . We show our claim is true . The pairs $ <var:G> <nat:400> $ additionally $ <var:r> <nat:254> $ are known to be even natural numbers . This claim is proven because the leading terms $ <nat:400> $ and also $ <nat:254> $ are known as even . Observe that the numbers $ <nat:462> $ additionally $ <nat:16> $ are even . Therefore , the terms $ <nat:462> <var:e> $ additionally $ <nat:16> <var:E> $ will be even also . See that the pair $ <nat:36> <var:s> $ is even . This fact holds from the knowledge multiplying of an even positive integer and an arbitrary element of $ \mathbb{N} $ is even and likewise the integer $ <nat:36> $ is clearly fundamentally an even whole number . Building on , recall $ <nat:138> <var:M> $ is clearly even . This fact holds because the product of an even positive integer and some natural number must be an even number in $ \mathbb{N} $ . This claim is true since the number $ <nat:138> $ is known as even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:E> <var:M> <var:G> <var:e> <var:s> <var:r> : nat , Nat . odd ( <nat:138> * <var:M> + <nat:254> * <var:r> + <nat:400> * <var:G> + <nat:462> * <var:e> + <nat:36> * <var:s> + <nat:16> * <var:E> + <nat:381> ) = true . Proof . intros . assert ( <genH> : Nat . odd <nat:381> = true ) . { auto . } assert ( <genH> : Nat . even <nat:400> = true ) . { auto . } assert ( <genH> : Nat . even <nat:254> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:400> * <var:G> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:254> * <var:r> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:462> = true ) . { auto . } assert ( <genH> : Nat . even <nat:16> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:462> * <var:e> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:16> * <var:E> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:36> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:36> * <var:s> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:138> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:138> * <var:M> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 