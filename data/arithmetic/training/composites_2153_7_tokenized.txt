\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \newtheorem{definition}{Definition} \begin{document} \begin{definition} There are numbers $ <var:x> $ , $ <var:o> $ , $ <var:f> $ , $ <var:G> $ , $ <var:Z> $ , $ <var:X> $ , $ <var:p> $ satisfying the condition that $ <var:G> $ , $ <var:X> $ , $ <var:Z> $ , $ <var:x> $ , $ <var:f> $ , $ <var:o> $ and $ <var:p> > <nat:1> $ . Say that some positive integer $ <var:n> $ will be considered a <def:seven-composite> integer when $ <var:p> * <var:x> * <var:Z> * <var:G> * <var:f> * <var:o> * <var:X> = <var:n> $ . \end{definition} \begin{theorem} The number <nat:380160> is a <def:seven-composite> number . \end{theorem} \begin{proof} Remember that <nat:380160> is a <def:seven-composite> number supposing that it is the multiplication between numbers $ <var:Z> $ , $ <var:p> $ , $ <var:o> $ , $ <var:X> $ , $ <var:f> $ , $ <var:x> $ and $ <var:G> $ satisfying the condition that $ <var:G> $ , $ <var:p> $ , $ <var:X> $ , $ <var:x> $ , $ <var:Z> $ , $ <var:f> $ , $ <var:o> > <nat:1> $ . Note that $ <nat:5> $ , $ <nat:8> $ , $ <nat:9> $ , $ <nat:4> $ , $ <nat:2> $ , $ <nat:12> $ and $ <nat:11> $ are greater than <nat:1> . Further note likewise $ <nat:380160> = <nat:4> \times <nat:2> \times <nat:11> \times <nat:12> \times <nat:5> \times <nat:9> \times <nat:8> = <var:G> \times <var:Z> \times <var:o> \times <var:p> \times <var:X> \times <var:f> \times <var:x> $ . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:seven-composite> ( <var:n> : nat ) := exists <var:x> <var:o> <var:f> <var:G> <var:Z> <var:X> <var:p> : nat , ( <var:G> > <nat:1> ) /\ ( <var:X> > <nat:1> ) /\ ( <var:Z> > <nat:1> ) /\ ( <var:x> > <nat:1> ) /\ ( <var:f> > <nat:1> ) /\ ( <var:o> > <nat:1> ) /\ ( <var:p> > <nat:1> ) /\ ( <var:p> * <var:x> * <var:Z> * <var:G> * <var:f> * <var:o> * <var:X> = <var:n> ) . Theorem <genP:1> : <def:seven-composite> <nat:380160> . Proof . unfold <def:seven-composite> . assert ( <genH> : <nat:5> > <nat:1> ) . { lia . } assert ( <genH> : <nat:8> > <nat:1> ) . { lia . } assert ( <genH> : <nat:9> > <nat:1> ) . { lia . } assert ( <genH> : <nat:4> > <nat:1> ) . { lia . } assert ( <genH> : <nat:2> > <nat:1> ) . { lia . } assert ( <genH> : <nat:12> > <nat:1> ) . { lia . } assert ( <genH> : <nat:11> > <nat:1> ) . { lia . } exists <nat:8> . exists <nat:11> . exists <nat:9> . exists <nat:4> . exists <nat:2> . exists <nat:5> . exists <nat:12> . repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 