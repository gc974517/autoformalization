\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:56> + <nat:58> \cdot <var:l> + <var:E> \cdot <nat:480> + <nat:34> \cdot <var:O> + <nat:268> \cdot <var:f> + <nat:256> \cdot <var:o> + <var:Z> \cdot <nat:366> + <var:t> \cdot <nat:206> + <nat:466> \cdot <var:B> $ is even assuming all positive numbers $ <var:l> $ , $ <var:B> $ , $ <var:Z> $ , $ <var:O> $ , $ <var:f> $ , $ <var:o> $ , $ <var:t> $ , and $ <var:E> $ . \end{theorem} \begin{proof} We verify $ <nat:56> + <nat:206> \times <var:t> + <nat:34> \times <var:O> + <nat:268> \times <var:f> + <var:o> \times <nat:256> + <nat:58> \times <var:l> + <nat:466> \times <var:B> + <nat:480> \times <var:E> + <nat:366> \times <var:Z> $ is even . It can be justified that the sum $ <nat:466> \times <var:B> + <var:o> \times <nat:256> + <var:l> \times <nat:58> + <var:Z> \times <nat:366> + <var:E> \times <nat:480> + <var:O> \times <nat:34> + <nat:268> \times <var:f> + <var:t> \times <nat:206> $ is guaranteed to be even . Likewise , the numbers $ <nat:466> $ , $ <nat:256> $ , $ <nat:58> $ , $ <nat:366> $ , $ <nat:480> $ , $ <nat:34> $ , $ <nat:268> $ , and $ <nat:206> $ will be even elements of $ \mathbb{Z}^+ $ . Thus , the terms $ <nat:466> * <var:B> $ , $ <var:o> * <nat:256> $ , $ <var:l> * <nat:58> $ , $ <var:Z> * <nat:366> $ , $ <var:E> * <nat:480> $ , $ <nat:34> * <var:O> $ , $ <var:f> * <nat:268> $ , and also $ <nat:206> * <var:t> $ is even too . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:l> <var:B> <var:Z> <var:O> <var:f> <var:o> <var:t> <var:E> : nat , Nat . even ( <nat:58> * <var:l> + <nat:480> * <var:E> + <nat:34> * <var:O> + <nat:268> * <var:f> + <nat:256> * <var:o> + <nat:366> * <var:Z> + <nat:206> * <var:t> + <nat:466> * <var:B> + <nat:56> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:466> = true ) . { auto . } assert ( <genH> : Nat . even <nat:256> = true ) . { auto . } assert ( <genH> : Nat . even <nat:58> = true ) . { auto . } assert ( <genH> : Nat . even <nat:366> = true ) . { auto . } assert ( <genH> : Nat . even <nat:480> = true ) . { auto . } assert ( <genH> : Nat . even <nat:34> = true ) . { auto . } assert ( <genH> : Nat . even <nat:268> = true ) . { auto . } assert ( <genH> : Nat . even <nat:206> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:466> * <var:B> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:256> * <var:o> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:58> * <var:l> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:366> * <var:Z> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:480> * <var:E> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:34> * <var:O> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:268> * <var:f> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:206> * <var:t> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:58> * <var:l> + <nat:480> * <var:E> + <nat:34> * <var:O> + <nat:268> * <var:f> + <nat:256> * <var:o> + <nat:366> * <var:Z> + <nat:206> * <var:t> + <nat:466> * <var:B> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . even_add . rewrite <genH> . auto . Qed . 