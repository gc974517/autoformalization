\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Let $ <var:Z> $ , $ <var:e> $ , $ <var:j> $ , $ <var:x> $ , $ <var:d> $ , $ <var:M> $ , $ <var:U> $ , $ <var:C> $ , and $ <var:k> \in \mathbb{N} $ satisfying the condition that $ <var:U> $ , $ <var:C> $ , $ <var:Z> $ , $ <var:d> $ , $ <var:M> $ , $ <var:x> $ , $ <var:e> $ , $ <var:k> $ , and $ <var:j> > <nat:1> $ plus so that the integer <nat:5987520> is the product of whole numbers $ <var:Z> $ , $ <var:e> $ , $ <var:j> $ , $ <var:x> $ , $ <var:d> $ , $ <var:M> $ , $ <var:U> $ , $ <var:C> $ and $ <var:k> \in \mathbb{N} $ . \end{theorem} \begin{proof} Take $ <var:e> = <nat:7> $ , $ <var:x> = <nat:5> $ , $ <var:M> = <nat:3> $ , $ <var:C> = <nat:4> $ , $ <var:j> = <nat:2> $ , $ <var:k> = <nat:11> $ , $ <var:d> = <nat:12> $ , $ <var:Z> = <nat:6> $ and $ <var:U> = <nat:9> $ . What's more note $ <var:M> = <nat:3> $ , $ <var:k> = <nat:11> $ , $ <var:U> = <nat:9> $ , $ <var:Z> = <nat:6> $ , $ <var:e> = <nat:7> $ , $ <var:j> = <nat:2> $ , $ <var:C> = <nat:4> $ , $ <var:d> = <nat:12> $ , and $ <var:x> = <nat:5> > <nat:1> $ . This yields the principle is true . \end{proof} \end{document} 
~
Require Import Lia . Theorem <genP:1> : exists <var:Z> <var:e> <var:j> <var:x> <var:d> <var:M> <var:U> <var:C> <var:k> : nat , ( <var:U> > <nat:1> ) /\ ( <var:C> > <nat:1> ) /\ ( <var:Z> > <nat:1> ) /\ ( <var:d> > <nat:1> ) /\ ( <var:M> > <nat:1> ) /\ ( <var:x> > <nat:1> ) /\ ( <var:e> > <nat:1> ) /\ ( <var:k> > <nat:1> ) /\ ( <var:j> > <nat:1> ) /\ ( <nat:5987520> = <var:Z> * <var:e> * <var:j> * <var:x> * <var:d> * <var:M> * <var:U> * <var:C> * <var:k> ) . Proof . exists <nat:6> . exists <nat:7> . exists <nat:2> . exists <nat:5> . exists <nat:12> . exists <nat:3> . exists <nat:9> . exists <nat:4> . exists <nat:11> . assert ( <genH> : <nat:3> > <nat:1> ) . { lia . } assert ( <genH> : <nat:11> > <nat:1> ) . { lia . } assert ( <genH> : <nat:9> > <nat:1> ) . { lia . } assert ( <genH> : <nat:6> > <nat:1> ) . { lia . } assert ( <genH> : <nat:7> > <nat:1> ) . { lia . } assert ( <genH> : <nat:2> > <nat:1> ) . { lia . } assert ( <genH> : <nat:4> > <nat:1> ) . { lia . } assert ( <genH> : <nat:12> > <nat:1> ) . { lia . } assert ( <genH> : <nat:5> > <nat:1> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 