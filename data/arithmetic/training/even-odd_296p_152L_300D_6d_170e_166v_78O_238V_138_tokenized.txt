\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Assuming all unknowns $ <var:L> $ , $ <var:e> $ , $ <var:O> $ , $ <var:p> $ , $ <var:D> $ , $ <var:v> $ , $ <var:d> $ , and $ <var:V> $ the sum $ <nat:152> <var:L> + <var:e> <nat:170> + <nat:166> <var:v> + <nat:296> <var:p> + <nat:78> <var:O> + <nat:6> <var:d> + <var:V> <nat:238> + <nat:138> + <nat:300> <var:D> $ is guaranteed to be even . \end{theorem} \begin{proof} We demonstrate this lemma is true in accordance with the summing between even elements of $ \mathbb{N} $ concurrently is guaranteed to be even . We show that the sum $ <var:L> <nat:152> + <nat:296> <var:p> + <var:e> <nat:170> + <var:D> <nat:300> + <nat:6> <var:d> + <nat:138> + <nat:78> <var:O> + <nat:166> <var:v> + <nat:238> <var:V> $ is known to be even from the knowledge the sum $ <nat:296> <var:p> + <nat:152> <var:L> + <var:D> <nat:300> + <var:d> <nat:6> + <var:e> <nat:170> + <nat:166> <var:v> + <var:O> <nat:78> + <nat:238> <var:V> $ is guaranteed to be even . Notice that the integers $ <nat:296> $ , $ <nat:152> $ , $ <nat:300> $ , $ <nat:6> $ , $ <nat:170> $ , $ <nat:166> $ , $ <nat:78> $ , and moreover $ <nat:238> $ are obviously even whole numbers . Thus , the pairs $ <var:p> <nat:296> $ , $ <var:L> <nat:152> $ , $ <nat:300> <var:D> $ , $ <nat:6> <var:d> $ , $ <var:e> <nat:170> $ , $ <var:v> <nat:166> $ , $ <nat:78> <var:O> $ , additionally $ <var:V> <nat:238> $ is guaranteed to be even too . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:L> <var:e> <var:O> <var:p> <var:D> <var:v> <var:d> <var:V> : nat , Nat . even ( <nat:152> * <var:L> + <nat:170> * <var:e> + <nat:166> * <var:v> + <nat:296> * <var:p> + <nat:78> * <var:O> + <nat:6> * <var:d> + <nat:238> * <var:V> + <nat:300> * <var:D> + <nat:138> ) = true . Proof . intros . rewrite Nat . even_add . assert ( <genH> : Nat . even <nat:296> = true ) . { auto . } assert ( <genH> : Nat . even <nat:152> = true ) . { auto . } assert ( <genH> : Nat . even <nat:300> = true ) . { auto . } assert ( <genH> : Nat . even <nat:6> = true ) . { auto . } assert ( <genH> : Nat . even <nat:170> = true ) . { auto . } assert ( <genH> : Nat . even <nat:166> = true ) . { auto . } assert ( <genH> : Nat . even <nat:78> = true ) . { auto . } assert ( <genH> : Nat . even <nat:238> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:296> * <var:p> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:152> * <var:L> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:300> * <var:D> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:6> * <var:d> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:170> * <var:e> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:166> * <var:v> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:78> * <var:O> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:238> * <var:V> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:152> * <var:L> + <nat:170> * <var:e> + <nat:166> * <var:v> + <nat:296> * <var:p> + <nat:78> * <var:O> + <nat:6> * <var:d> + <nat:238> * <var:V> + <nat:300> * <var:D> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite <genH> . auto . Qed . 