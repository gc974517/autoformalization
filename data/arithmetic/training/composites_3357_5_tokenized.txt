\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \newtheorem{definition}{Definition} \begin{document} \begin{definition} Wherever we get $ <var:H> = <var:h> * <var:q> * <var:D> * <var:e> * <var:T> $ for $ <var:H> \in \mathbb{Z}^+ $ plus satisfying the condition that $ <var:D> $ , $ <var:q> $ , $ <var:h> $ , $ <var:T> $ and $ <var:e> \geq <nat:2> $ , let that $ <var:H> $ is a <def:five-composite> natural number assuming some $ <var:D> $ , $ <var:e> $ , $ <var:q> $ , $ <var:h> $ , $ <var:T> \in \mathbb{Z}^+ $ . \end{definition} \begin{theorem} The number <nat:8910> is a <def:five-composite> integer . \end{theorem} \begin{proof} We prove <nat:8910> is the product of $ <var:e> $ , $ <var:T> $ , $ <var:D> $ , $ <var:h> $ and $ <var:q> \in \mathbb{N} $ . We prove <nat:8910> is a <def:five-composite> natural number because $ <nat:6> $ , $ <nat:3> $ , $ <nat:5> $ , $ <nat:9> $ , and $ <nat:11> $ are more than or equivalent to <nat:2> as well as in consideration of $ <nat:8910> = <var:h> \times <var:e> \times <var:q> \times <var:T> \times <var:D> $ hints $ <var:h> = <nat:11> $ , $ <var:D> = <nat:6> $ , $ <var:T> = <nat:9> $ , $ <var:q> = <nat:5> $ and $ <var:e> = <nat:3> $ . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:five-composite> ( <var:H> : nat ) := exists <var:D> <var:e> <var:q> <var:h> <var:T> : nat , ( <var:H> = <var:h> * <var:q> * <var:D> * <var:e> * <var:T> ) /\ ( <var:D> >= <nat:2> ) /\ ( <var:q> >= <nat:2> ) /\ ( <var:h> >= <nat:2> ) /\ ( <var:T> >= <nat:2> ) /\ ( <var:e> >= <nat:2> ) . Theorem <genP:1> : <def:five-composite> <nat:8910> . Proof . unfold <def:five-composite> . assert ( <genH> : <nat:6> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:3> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:5> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:9> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:11> >= <nat:2> ) . { lia . } exists <nat:6> . exists <nat:3> . exists <nat:5> . exists <nat:11> . exists <nat:9> . repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 