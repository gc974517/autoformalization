\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \newtheorem{definition}{Definition} \begin{document} \begin{definition} Whenever we get $ <var:p> $ , $ <var:t> $ , $ <var:k> $ , $ <var:K> $ and $ <var:d> \geq <nat:2> $ such that with some number $ <var:X> $ , $ <var:X> = <var:d> * <var:t> * <var:k> * <var:p> * <var:K> $ assuming some $ <var:k> $ , $ <var:K> $ , $ <var:p> $ , $ <var:d> $ , $ <var:t> \in \mathbb{N} $ , then we claim that $ <var:X> $ is a <def:five-composite> whole number . \end{definition} \begin{theorem} $ <var:X> = <nat:13200> $ is a <def:five-composite> natural number . \end{theorem} \begin{proof} Assume $ <var:K> = <nat:11> $ , $ <var:d> = <nat:10> $ , $ <var:t> = <nat:8> $ , $ <var:k> = <nat:5> $ , and $ <var:p> = <nat:3> $ . We show $ <var:p> $ , $ <var:d> $ , $ <var:t> $ , $ <var:k> $ , and $ <var:K> \geq <nat:2> $ and $ <var:K> \times <var:p> \times <var:k> \times <var:t> \times <var:d> = <nat:13200> $ . We confirm <nat:13200> is <def:five-composite> because $ <var:d> = <nat:10> $ , $ <var:p> = <nat:3> $ , $ <var:t> = <nat:8> $ , $ <var:k> = <nat:5> $ and $ <var:K> = <nat:11> $ are greater than or equal to <nat:2> and because $ <var:k> \cdot <var:p> \cdot <var:K> \cdot <var:d> \cdot <var:t> = <nat:5> \cdot <nat:3> \cdot <nat:11> \cdot <nat:10> \cdot <nat:8> = <nat:13200> $ . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:five-composite> ( <var:X> : nat ) := exists <var:k> <var:K> <var:p> <var:d> <var:t> : nat , ( <var:p> >= <nat:2> ) /\ ( <var:t> >= <nat:2> ) /\ ( <var:k> >= <nat:2> ) /\ ( <var:K> >= <nat:2> ) /\ ( <var:d> >= <nat:2> ) /\ ( <var:X> = <var:d> * <var:t> * <var:k> * <var:p> * <var:K> ) . Theorem <genP:1> : <def:five-composite> <nat:13200> . Proof . unfold <def:five-composite> . exists <nat:5> . exists <nat:11> . exists <nat:3> . exists <nat:10> . exists <nat:8> . assert ( <genH> : <nat:10> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:3> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:8> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:5> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:11> >= <nat:2> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 