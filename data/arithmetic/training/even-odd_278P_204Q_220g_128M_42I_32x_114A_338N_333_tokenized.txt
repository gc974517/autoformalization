\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:278> \cdot <var:P> + <nat:333> + <nat:204> \cdot <var:Q> + <var:g> \cdot <nat:220> + <var:M> \cdot <nat:128> + <var:I> \cdot <nat:42> + <nat:32> \cdot <var:x> + <nat:114> \cdot <var:A> + <var:N> \cdot <nat:338> $ is odd with unknowns $ <var:P> $ , $ <var:x> $ , $ <var:A> $ , $ <var:Q> $ , $ <var:N> $ , $ <var:g> $ , $ <var:I> $ , and $ <var:M> $ . \end{theorem} \begin{proof} The terms $ <var:x> \cdot <nat:32> $ , $ <nat:278> \cdot <var:P> $ , $ <var:I> \cdot <nat:42> $ , $ <nat:128> \cdot <var:M> $ , $ <var:A> \cdot <nat:114> $ , $ <nat:220> \cdot <var:g> $ , plus $ <var:Q> \cdot <nat:204> $ are known to be even . Notice that the product $ <nat:338> \cdot <var:N> $ is trivially an even number in $ \mathbb{Z}^+ $ . This claim is proven from the fact taking the product between an even number in $ \mathbb{Z}^+ $ and some number in $ \mathbb{Z}^+ $ must be fundamentally an even number in $ \mathbb{Z}^+ $ . Remember the adding of an even element of $ \mathbb{N} $ with an odd natural must be by definition an odd number in $ \mathbb{N} $ . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:P> <var:x> <var:A> <var:Q> <var:N> <var:g> <var:I> <var:M> : nat , Nat . odd ( <nat:278> * <var:P> + <nat:204> * <var:Q> + <nat:220> * <var:g> + <nat:128> * <var:M> + <nat:42> * <var:I> + <nat:32> * <var:x> + <nat:114> * <var:A> + <nat:338> * <var:N> + <nat:333> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:32> * <var:x> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:278> * <var:P> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:42> * <var:I> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:128> * <var:M> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:114> * <var:A> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:220> * <var:g> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:204> * <var:Q> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:338> * <var:N> ) = true ) . { rewrite Nat . even_mul . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 