\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} With some positive terms $ <var:w> $ , $ <var:X> $ , $ <var:O> $ , $ <var:I> $ , $ <var:n> $ , and $ <var:y> $ $ <nat:364> * <var:O> + <var:y> * <nat:202> + <nat:48> * <var:w> + <nat:6> * <var:n> + <nat:257> + <nat:312> * <var:X> + <nat:76> * <var:I> $ is odd . \end{theorem} \begin{proof} The adding between an even natural with an odd natural will be an odd natural number . We know the expression $ <var:O> \times <nat:364> + <nat:6> \times <var:n> + <nat:257> + <nat:202> \times <var:y> + <nat:312> \times <var:X> + <nat:48> \times <var:w> + <var:I> \times <nat:76> $ is obviously odd as a consequence that the sum $ <var:w> * <nat:48> + <nat:312> * <var:X> + <var:y> * <nat:202> + <var:O> * <nat:364> + <var:n> * <nat:6> + <var:I> * <nat:76> $ is obviously even . See that the leading terms $ <nat:48> $ , $ <nat:364> $ , $ <nat:202> $ , $ <nat:312> $ , and likewise $ <nat:6> $ are known to be even . Thus , the terms $ <var:w> \cdot <nat:48> $ , $ <nat:364> \cdot <var:O> $ , $ <var:y> \cdot <nat:202> $ , $ <var:X> \cdot <nat:312> $ , and also $ <var:n> \cdot <nat:6> $ is guaranteed to be even too . In addition , the positive integer $ <nat:76> $ is trivially even . Accordingly , $ <var:I> \cdot <nat:76> $ is guaranteed to be even as well . It can be proven that this theorem must be true . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:w> <var:X> <var:O> <var:I> <var:n> <var:y> : nat , Nat . odd ( <nat:364> * <var:O> + <nat:202> * <var:y> + <nat:48> * <var:w> + <nat:6> * <var:n> + <nat:312> * <var:X> + <nat:76> * <var:I> + <nat:257> ) = true . Proof . intros . rewrite Nat . odd_add . assert ( <genH> : Nat . even <nat:48> = true ) . { auto . } assert ( <genH> : Nat . even <nat:364> = true ) . { auto . } assert ( <genH> : Nat . even <nat:202> = true ) . { auto . } assert ( <genH> : Nat . even <nat:312> = true ) . { auto . } assert ( <genH> : Nat . even <nat:6> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:48> * <var:w> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:364> * <var:O> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:202> * <var:y> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:312> * <var:X> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:6> * <var:n> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:76> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:76> * <var:I> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:364> * <var:O> + <nat:202> * <var:y> + <nat:48> * <var:w> + <nat:6> * <var:n> + <nat:312> * <var:X> + <nat:76> * <var:I> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite <- Nat . negb_even . rewrite <genH> . auto . Qed . 