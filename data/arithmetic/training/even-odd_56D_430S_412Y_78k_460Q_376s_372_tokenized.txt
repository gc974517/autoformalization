\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:k> * <nat:78> + <var:Y> * <nat:412> + <var:S> * <nat:430> + <nat:372> + <var:D> * <nat:56> + <var:s> * <nat:376> + <nat:460> * <var:Q> $ will be even . \end{theorem} \begin{proof} See the adding of an even positive integer and an even number is guaranteed to be even . We justify that the summation $ <nat:78> \times <var:k> + <var:Y> \times <nat:412> + <var:Q> \times <nat:460> + <var:S> \times <nat:430> + <var:D> \times <nat:56> + <nat:376> \times <var:s> $ is obviously even . What's more , we know that the positive integers $ <nat:78> $ , $ <nat:412> $ , $ <nat:460> $ , $ <nat:430> $ , $ <nat:56> $ , additionally $ <nat:376> $ are obviously even . Then , the terms $ <nat:78> \cdot <var:k> $ , $ <nat:412> \cdot <var:Y> $ , $ <nat:460> \cdot <var:Q> $ , $ <nat:430> \cdot <var:S> $ , $ <nat:56> \cdot <var:D> $ , additionally $ <nat:376> \cdot <var:s> $ must be even in addition . Since the product between an even element of $ \mathbb{N} $ and a integer will be even the expression $ <nat:460> \cdot <var:Q> + <var:S> \cdot <nat:430> + <var:s> \cdot <nat:376> + <var:Y> \cdot <nat:412> + <nat:78> \cdot <var:k> + <nat:56> \cdot <var:D> $ is even . It can be shown that $ <nat:372> + <var:D> * <nat:56> + <nat:430> * <var:S> + <nat:412> * <var:Y> + <var:k> * <nat:78> + <nat:460> * <var:Q> + <nat:376> * <var:s> $ must be even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:k> <var:Y> <var:S> <var:D> <var:s> <var:Q> : nat , Nat . even ( <nat:78> * <var:k> + <nat:412> * <var:Y> + <nat:430> * <var:S> + <nat:56> * <var:D> + <nat:376> * <var:s> + <nat:460> * <var:Q> + <nat:372> ) = true . Proof . intros . rewrite Nat . even_add . assert ( <genH> : Nat . even <nat:78> = true ) . { auto . } assert ( <genH> : Nat . even <nat:412> = true ) . { auto . } assert ( <genH> : Nat . even <nat:460> = true ) . { auto . } assert ( <genH> : Nat . even <nat:430> = true ) . { auto . } assert ( <genH> : Nat . even <nat:56> = true ) . { auto . } assert ( <genH> : Nat . even <nat:376> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:78> * <var:k> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:412> * <var:Y> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:460> * <var:Q> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:430> * <var:S> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:56> * <var:D> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:376> * <var:s> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:78> * <var:k> + <nat:412> * <var:Y> + <nat:430> * <var:S> + <nat:56> * <var:D> + <nat:376> * <var:s> + <nat:460> * <var:Q> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite <genH> . auto . Qed . 