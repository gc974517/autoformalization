\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:360> \times <var:o> + <var:T> \times <nat:200> + <nat:464> \times <var:S> + <var:p> \times <nat:228> + <nat:50> \times <var:s> + <var:b> \times <nat:32> + <nat:109> + <var:N> \times <nat:426> + <nat:434> \times <var:f> $ will be odd . \end{theorem} \begin{proof} We make use the formula $ <var:f> * <nat:434> + <nat:464> * <var:S> + <var:p> * <nat:228> + <var:b> * <nat:32> + <var:N> * <nat:426> + <nat:360> * <var:o> + <var:T> * <nat:200> + <nat:50> * <var:s> + <nat:109> $ is odd from the knowledge $ <var:p> * <nat:228> + <var:o> * <nat:360> + <var:b> * <nat:32> + <var:S> * <nat:464> + <nat:50> * <var:s> + <var:N> * <nat:426> + <nat:200> * <var:T> + <var:f> * <nat:434> $ is known to be even . The terms $ <var:f> \times <nat:434> $ , $ <var:S> \times <nat:464> $ , $ <var:b> \times <nat:32> $ , and also $ <var:T> \times <nat:200> $ are clearly even as a consequence that the product between an even element of $ \mathbb{N} $ and a natural number is guaranteed to be an even number in $ \mathbb{N} $ . The products $ <var:o> \times <nat:360> $ , $ <nat:50> \times <var:s> $ , plus $ <var:N> \times <nat:426> $ will be even because multiplying between an even natural number and any number is clearly an even element of $ \mathbb{Z}^+ $ . On top of this , take note $ <var:p> \times <nat:228> $ is obviously even . Our proposition is true by reason that the totaling of even numbers in $ \mathbb{Z}^+ $ and an even number in $ \mathbb{Z}^+ $ will be even . Recall $ <nat:109> $ is trivially an odd number . It can be verified that this claim is proven . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:o> <var:T> <var:S> <var:p> <var:s> <var:b> <var:N> <var:f> : nat , Nat . odd ( <nat:360> * <var:o> + <nat:200> * <var:T> + <nat:464> * <var:S> + <nat:228> * <var:p> + <nat:50> * <var:s> + <nat:32> * <var:b> + <nat:426> * <var:N> + <nat:434> * <var:f> + <nat:109> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:434> * <var:f> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:464> * <var:S> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:32> * <var:b> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:200> * <var:T> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:360> * <var:o> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:50> * <var:s> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:426> * <var:N> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:228> * <var:p> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:360> * <var:o> + <nat:200> * <var:T> + <nat:464> * <var:S> + <nat:228> * <var:p> + <nat:50> * <var:s> + <nat:32> * <var:b> + <nat:426> * <var:N> + <nat:434> * <var:f> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } assert ( <genH> : Nat . odd <nat:109> = true ) . { auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . rewrite <genH> . auto . Qed . 