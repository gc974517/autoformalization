\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:374> * <var:t> + <nat:429> + <var:T> * <nat:298> + <var:Z> * <nat:364> + <var:C> * <nat:198> + <nat:66> * <var:F> + <nat:30> * <var:Y> + <nat:358> * <var:n> + <nat:432> * <var:N> $ is odd . \end{theorem} \begin{proof} The addition between even numbers in $ \mathbb{Z}^+ $ collectively with an odd integer will be an odd element of $ \mathbb{N} $ . The products $ <nat:30> * <var:Y> $ , $ <nat:432> * <var:N> $ , $ <var:t> * <nat:374> $ , in addition to $ <var:n> * <nat:358> $ are trivially even by reason that taking the product between an even integer and some natural number is guaranteed to be even . The pairs $ <nat:198> * <var:C> $ in addition to $ <var:Z> * <nat:364> $ are guaranteed to be even from the knowledge taking the product of an even natural number with a element of $ \mathbb{N} $ is guaranteed to be by its very nature an even element of $ \mathbb{Z}^+ $ . Building on , we know $ <var:F> * <nat:66> $ is obviously even . This is true from the fact multiplying between an even integer with any positive integer will be an even number in $ \mathbb{Z}^+ $ . Take note the term $ <var:T> * <nat:298> $ is obviously an even number in $ \mathbb{Z}^+ $ . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:t> <var:T> <var:Z> <var:C> <var:F> <var:Y> <var:n> <var:N> : nat , Nat . odd ( <nat:374> * <var:t> + <nat:298> * <var:T> + <nat:364> * <var:Z> + <nat:198> * <var:C> + <nat:66> * <var:F> + <nat:30> * <var:Y> + <nat:358> * <var:n> + <nat:432> * <var:N> + <nat:429> ) = true . Proof . intros . rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . assert ( <genH> : Nat . even ( <nat:30> * <var:Y> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:432> * <var:N> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:374> * <var:t> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:358> * <var:n> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:198> * <var:C> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:364> * <var:Z> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:66> * <var:F> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:298> * <var:T> ) = true ) . { rewrite Nat . even_mul . auto . } rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 