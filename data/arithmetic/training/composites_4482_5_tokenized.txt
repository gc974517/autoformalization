\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \newtheorem{definition}{Definition} \begin{document} \begin{definition} Denote that $ <var:D> $ is a <def:five-composite> number if there exist some whole numbers $ <var:A> $ , $ <var:V> $ , $ <var:r> $ , $ <var:Q> $ , $ <var:d> $ such that such that $ <var:A> $ , $ <var:Q> $ , $ <var:r> $ , $ <var:V> $ , and $ <var:d> > <nat:1> $ and using some number $ <var:D> $ , $ <var:D> = <var:A> \cdot <var:V> \cdot <var:Q> \cdot <var:r> \cdot <var:d> $ . \end{definition} \begin{theorem} The whole number <nat:27720> is a <def:five-composite> integer . \end{theorem} \begin{proof} Recollect that <nat:27720> is a <def:five-composite> number under the condition <nat:27720> is the multiplication of positive integers $ <var:d> $ , $ <var:A> $ , $ <var:r> $ , $ <var:Q> $ , and $ <var:V> $ where $ <var:d> $ , $ <var:A> $ , $ <var:Q> $ , $ <var:V> $ and $ <var:r> > <nat:1> $ . Take $ <var:r> = <nat:9> $ , $ <var:d> = <nat:11> $ , $ <var:A> = <nat:7> $ , $ <var:Q> = <nat:8> $ , and $ <var:V> = <nat:5> $ . We verify <nat:27720> is a <def:five-composite> integer . Note $ <nat:27720> = <nat:9> \times <nat:5> \times <nat:8> \times <nat:7> \times <nat:11> $ . Moreover observe that $ <var:V> = <nat:5> $ , $ <var:r> = <nat:9> $ , $ <var:d> = <nat:11> $ , $ <var:A> = <nat:7> $ and $ <var:Q> = <nat:8> $ are more than <nat:1> . This suggests our theory is valid . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:five-composite> ( <var:D> : nat ) := exists <var:A> <var:V> <var:r> <var:Q> <var:d> : nat , ( <var:A> > <nat:1> ) /\ ( <var:Q> > <nat:1> ) /\ ( <var:r> > <nat:1> ) /\ ( <var:V> > <nat:1> ) /\ ( <var:d> > <nat:1> ) /\ ( <var:D> = <var:A> * <var:V> * <var:Q> * <var:r> * <var:d> ) . Theorem <genP:1> : <def:five-composite> <nat:27720> . Proof . unfold <def:five-composite> . exists <nat:7> . exists <nat:5> . exists <nat:9> . exists <nat:8> . exists <nat:11> . assert ( <genH> : <nat:5> > <nat:1> ) . { lia . } assert ( <genH> : <nat:9> > <nat:1> ) . { lia . } assert ( <genH> : <nat:11> > <nat:1> ) . { lia . } assert ( <genH> : <nat:7> > <nat:1> ) . { lia . } assert ( <genH> : <nat:8> > <nat:1> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 