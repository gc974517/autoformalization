\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} For natural terms $ <var:h> $ , $ <var:J> $ , $ <var:s> $ , $ <var:M> $ , $ <var:q> $ , $ <var:D> $ , $ <var:l> $ , and $ <var:Y> $ the expression $ <nat:424> * <var:l> + <nat:134> * <var:Y> + <nat:368> * <var:q> + <nat:252> * <var:s> + <var:D> * <nat:474> + <var:h> * <nat:64> + <nat:181> + <var:M> * <nat:344> + <var:J> * <nat:404> $ is odd . \end{theorem} \begin{proof} Additionally , the pairs $ <var:l> \cdot <nat:424> $ , $ <var:Y> \cdot <nat:134> $ , $ <nat:368> \cdot <var:q> $ , $ <var:s> \cdot <nat:252> $ , $ <var:D> \cdot <nat:474> $ , $ <nat:64> \cdot <var:h> $ , $ <var:M> \cdot <nat:344> $ , and likewise $ <var:J> \cdot <nat:404> $ are known as even numbers . This is proven from the knowledge the coefficients $ <nat:424> $ , $ <nat:134> $ , $ <nat:368> $ , $ <nat:252> $ , $ <nat:474> $ , $ <nat:64> $ , $ <nat:344> $ , and also $ <nat:404> $ will be even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:h> <var:J> <var:s> <var:M> <var:q> <var:D> <var:l> <var:Y> : nat , Nat . odd ( <nat:424> * <var:l> + <nat:134> * <var:Y> + <nat:368> * <var:q> + <nat:252> * <var:s> + <nat:474> * <var:D> + <nat:64> * <var:h> + <nat:344> * <var:M> + <nat:404> * <var:J> + <nat:181> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:424> = true ) . { auto . } assert ( <genH> : Nat . even <nat:134> = true ) . { auto . } assert ( <genH> : Nat . even <nat:368> = true ) . { auto . } assert ( <genH> : Nat . even <nat:252> = true ) . { auto . } assert ( <genH> : Nat . even <nat:474> = true ) . { auto . } assert ( <genH> : Nat . even <nat:64> = true ) . { auto . } assert ( <genH> : Nat . even <nat:344> = true ) . { auto . } assert ( <genH> : Nat . even <nat:404> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:424> * <var:l> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:134> * <var:Y> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:368> * <var:q> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:252> * <var:s> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:474> * <var:D> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:64> * <var:h> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:344> * <var:M> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:404> * <var:J> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 