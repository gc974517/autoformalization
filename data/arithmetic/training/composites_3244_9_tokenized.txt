\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Allow $ <var:Z> $ , $ <var:q> $ , $ <var:s> $ , $ <var:K> $ , $ <var:j> $ , $ <var:p> $ , $ <var:B> $ , $ <var:P> $ , and $ <var:m> $ are integers so that $ <var:K> $ , $ <var:s> $ , $ <var:q> $ , $ <var:m> $ , $ <var:j> $ , $ <var:Z> $ , $ <var:p> $ , $ <var:P> $ , and $ <var:B> > <nat:1> $ . the positive integer <nat:14515200> is the multiplication between numbers $ <var:Z> $ , $ <var:q> $ , $ <var:s> $ , $ <var:K> $ , $ <var:j> $ , $ <var:p> $ , $ <var:B> $ , $ <var:P> $ , $ <var:m> $ . \end{theorem} \begin{proof} We demonstrate $ <var:s> \cdot <var:j> \cdot <var:B> \cdot <var:m> \cdot <var:K> \cdot <var:Z> \cdot <var:P> \cdot <var:p> \cdot <var:q> = <nat:14515200> $ . Notice that $ <var:q> \times <var:s> \times <var:m> \times <var:P> \times <var:B> \times <var:K> \times <var:Z> \times <var:j> \times <var:p> = <nat:14515200> $ produces $ <var:j> = <nat:6> $ , $ <var:m> = <nat:9> $ , $ <var:K> = <nat:10> $ , $ <var:p> = <nat:5> $ , $ <var:q> = <nat:7> $ , $ <var:s> = <nat:4> $ , $ <var:B> = <nat:2> $ , $ <var:Z> = <nat:8> $ and $ <var:P> = <nat:12> $ . Further note $ <nat:2> $ , $ <nat:12> $ , $ <nat:8> $ , $ <nat:6> $ , $ <nat:7> $ , $ <nat:9> $ , $ <nat:5> $ , $ <nat:4> $ , and $ <nat:10> $ are larger than <nat:1> . \end{proof} \end{document} 
~
Require Import Lia . Theorem <genP:1> : exists <var:Z> <var:q> <var:s> <var:K> <var:j> <var:p> <var:B> <var:P> <var:m> : nat , ( <var:K> > <nat:1> ) /\ ( <var:s> > <nat:1> ) /\ ( <var:q> > <nat:1> ) /\ ( <var:m> > <nat:1> ) /\ ( <var:j> > <nat:1> ) /\ ( <var:Z> > <nat:1> ) /\ ( <var:p> > <nat:1> ) /\ ( <var:P> > <nat:1> ) /\ ( <var:B> > <nat:1> ) /\ ( <nat:14515200> = <var:Z> * <var:q> * <var:s> * <var:K> * <var:j> * <var:p> * <var:B> * <var:P> * <var:m> ) . Proof . exists <nat:8> . exists <nat:7> . exists <nat:4> . exists <nat:10> . exists <nat:6> . exists <nat:5> . exists <nat:2> . exists <nat:12> . exists <nat:9> . assert ( <genH> : <nat:2> > <nat:1> ) . { lia . } assert ( <genH> : <nat:12> > <nat:1> ) . { lia . } assert ( <genH> : <nat:8> > <nat:1> ) . { lia . } assert ( <genH> : <nat:6> > <nat:1> ) . { lia . } assert ( <genH> : <nat:7> > <nat:1> ) . { lia . } assert ( <genH> : <nat:9> > <nat:1> ) . { lia . } assert ( <genH> : <nat:5> > <nat:1> ) . { lia . } assert ( <genH> : <nat:4> > <nat:1> ) . { lia . } assert ( <genH> : <nat:10> > <nat:1> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 