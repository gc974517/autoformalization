\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Granted we have where $ <var:X> $ , $ <var:j> $ , $ <var:y> $ , $ <var:O> $ , $ <var:J> $ , $ <var:d> $ , and $ <var:E> > <nat:1> $ satisfying the condition that assuming $ <var:t> \in \mathbb{N} $ , $ <var:j> \times <var:O> \times <var:J> \times <var:y> \times <var:E> \times <var:X> \times <var:d> = <var:t> $ given some $ <var:O> $ , $ <var:X> $ , $ <var:J> $ , $ <var:E> $ , $ <var:j> $ , $ <var:y> $ , $ <var:d> \in \mathbb{N} $ , then let that $ <var:t> $ is a <def:seven-composite> whole number . Thus the whole number <nat:136080> is <def:seven-composite> . \end{theorem} \begin{proof} Notice $ <nat:136080> = <var:O> * <var:X> * <var:E> * <var:J> * <var:j> * <var:y> * <var:d> = <nat:2> * <nat:12> * <nat:6> * <nat:5> * <nat:7> * <nat:9> * <nat:3> $ . Also notice that $ <nat:2> $ , $ <nat:12> $ , $ <nat:7> $ , $ <nat:3> $ , $ <nat:9> $ , $ <nat:6> $ , and $ <nat:5> > <nat:1> $ . This yields <nat:136080> is <def:seven-composite> . As a result , $ <nat:136080> = <var:y> \cdot <var:j> \cdot <var:O> \cdot <var:J> \cdot <var:E> \cdot <var:X> \cdot <var:d> $ is proven . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:seven-composite> ( <var:t> : nat ) := exists <var:O> <var:X> <var:J> <var:E> <var:j> <var:y> <var:d> : nat , ( <var:X> > <nat:1> ) /\ ( <var:j> > <nat:1> ) /\ ( <var:y> > <nat:1> ) /\ ( <var:O> > <nat:1> ) /\ ( <var:J> > <nat:1> ) /\ ( <var:d> > <nat:1> ) /\ ( <var:E> > <nat:1> ) /\ ( <var:j> * <var:O> * <var:J> * <var:y> * <var:E> * <var:X> * <var:d> = <var:t> ) . Theorem <genP:1> : <def:seven-composite> <nat:136080> . Proof . unfold <def:seven-composite> . exists <nat:2> . exists <nat:12> . exists <nat:5> . exists <nat:6> . exists <nat:7> . exists <nat:9> . exists <nat:3> . assert ( <genH> : <nat:2> > <nat:1> ) . { lia . } assert ( <genH> : <nat:12> > <nat:1> ) . { lia . } assert ( <genH> : <nat:7> > <nat:1> ) . { lia . } assert ( <genH> : <nat:3> > <nat:1> ) . { lia . } assert ( <genH> : <nat:9> > <nat:1> ) . { lia . } assert ( <genH> : <nat:6> > <nat:1> ) . { lia . } assert ( <genH> : <nat:5> > <nat:1> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 