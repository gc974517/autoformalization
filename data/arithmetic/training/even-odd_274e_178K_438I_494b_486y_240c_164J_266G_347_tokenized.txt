\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:274> * <var:e> + <var:G> * <nat:266> + <nat:494> * <var:b> + <nat:164> * <var:J> + <var:y> * <nat:486> + <nat:178> * <var:K> + <nat:240> * <var:c> + <nat:347> + <var:I> * <nat:438> $ must be odd taking any whole numbers $ <var:I> $ , $ <var:K> $ , $ <var:c> $ , $ <var:b> $ , $ <var:y> $ , $ <var:G> $ , $ <var:e> $ , and $ <var:J> $ . \end{theorem} \begin{proof} $ <nat:274> \cdot <var:e> + <var:K> \cdot <nat:178> + <nat:438> \cdot <var:I> + <nat:494> \cdot <var:b> + <var:y> \cdot <nat:486> + <var:c> \cdot <nat:240> + <nat:164> \cdot <var:J> + <var:G> \cdot <nat:266> $ is clearly even . Take note the number $ <nat:486> $ is clearly an even whole number The positive integers $ <nat:240> $ , $ <nat:164> $ , and $ <nat:274> $ must be even Observe the integers $ <nat:178> $ , $ <nat:266> $ , as well as $ <nat:494> $ are even Observe the positive integer $ <nat:438> $ is obviously an even number in $ \mathbb{Z}^+ $ See $ <nat:347> $ is clearly odd . The summation between even integers successively with an odd element of $ \mathbb{N} $ is guaranteed to be an odd natural number . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:I> <var:K> <var:c> <var:b> <var:y> <var:G> <var:e> <var:J> : nat , Nat . odd ( <nat:274> * <var:e> + <nat:266> * <var:G> + <nat:494> * <var:b> + <nat:164> * <var:J> + <nat:486> * <var:y> + <nat:178> * <var:K> + <nat:240> * <var:c> + <nat:438> * <var:I> + <nat:347> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:486> = true ) . { auto . } assert ( <genH> : Nat . even <nat:240> = true ) . { auto . } assert ( <genH> : Nat . even <nat:164> = true ) . { auto . } assert ( <genH> : Nat . even <nat:274> = true ) . { auto . } assert ( <genH> : Nat . even <nat:178> = true ) . { auto . } assert ( <genH> : Nat . even <nat:266> = true ) . { auto . } assert ( <genH> : Nat . even <nat:494> = true ) . { auto . } assert ( <genH> : Nat . even <nat:438> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:274> * <var:e> + <nat:266> * <var:G> + <nat:494> * <var:b> + <nat:164> * <var:J> + <nat:486> * <var:y> + <nat:178> * <var:K> + <nat:240> * <var:c> + <nat:438> * <var:I> ) = true ) . { repeat rewrite Nat . even_add . repeat rewrite Nat . even_mul . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } assert ( <genH> : Nat . odd <nat:347> = true ) . { auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . rewrite <genH> . auto . Qed . 