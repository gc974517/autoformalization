\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} The number <nat:1478400> is the product of positive integers $ <var:F> $ , $ <var:t> $ , $ <var:z> $ , $ <var:T> $ , $ <var:k> $ , $ <var:V> $ and $ <var:y> \in \mathbb{N} $ such that $ <var:z> $ , $ <var:F> $ , $ <var:k> $ , $ <var:t> $ , $ <var:V> $ , $ <var:T> $ , $ <var:y> $ greater than or equivalent to <nat:2> . \end{theorem} \begin{proof} Assume $ <var:y> = <nat:12> $ , $ <var:z> = <nat:8> $ , $ <var:t> = <nat:5> $ , $ <var:T> = <nat:7> $ , $ <var:k> = <nat:10> $ , $ <var:V> = <nat:4> $ , and $ <var:F> = <nat:11> $ . We demonstrate $ <var:T> $ , $ <var:t> $ , $ <var:z> $ , $ <var:V> $ , $ <var:y> $ , $ <var:F> $ and $ <var:k> $ are more than or equal to <nat:2> plus <nat:1478400> is the multiplication between $ <var:T> $ , $ <var:z> $ , $ <var:k> $ , $ <var:F> $ , $ <var:V> $ , $ <var:y> $ , $ <var:t> \in \mathbb{N} $ . Similarly observe $ <nat:7> $ , $ <nat:4> $ , $ <nat:10> $ , $ <nat:11> $ , $ <nat:5> $ , $ <nat:12> $ and $ <nat:8> \geq <nat:2> $ . This yields the theory is valid . \end{proof} \end{document} 
~
Require Import Lia . Theorem <genP:1> : exists <var:F> <var:t> <var:z> <var:T> <var:k> <var:V> <var:y> : nat , ( <nat:1478400> = <var:F> * <var:t> * <var:z> * <var:T> * <var:k> * <var:V> * <var:y> ) /\ ( <var:z> >= <nat:2> ) /\ ( <var:F> >= <nat:2> ) /\ ( <var:k> >= <nat:2> ) /\ ( <var:t> >= <nat:2> ) /\ ( <var:V> >= <nat:2> ) /\ ( <var:T> >= <nat:2> ) /\ ( <var:y> >= <nat:2> ) . Proof . exists <nat:11> . exists <nat:5> . exists <nat:8> . exists <nat:7> . exists <nat:10> . exists <nat:4> . exists <nat:12> . assert ( <genH> : <nat:7> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:4> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:10> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:11> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:5> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:12> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:8> >= <nat:2> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 