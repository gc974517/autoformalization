\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Take $ <var:c> $ , $ <var:E> $ , $ <var:L> $ , $ <var:D> $ , $ <var:Y> \in \mathbb{N} $ so that $ <var:E> $ , $ <var:c> $ , $ <var:Y> $ , $ <var:L> $ and $ <var:D> > <nat:1> $ . Take that some $ <var:q> $ will be considered as a <def:five-composite> whole number assuming $ <var:q> = <var:L> * <var:c> * <var:Y> * <var:D> * <var:E> $ . Then the whole number <nat:12960> is a <def:five-composite> whole number . \end{theorem} \begin{proof} Recall that a <def:five-composite> positive integer is the multiplication of natural numbers $ <var:Y> $ , $ <var:c> $ , $ <var:D> $ , $ <var:E> $ and $ <var:L> $ such that $ <var:L> $ , $ <var:D> $ , $ <var:c> $ , $ <var:Y> $ , and $ <var:E> > <nat:1> $ . Observe that $ <nat:12> $ , $ <nat:9> $ , $ <nat:2> $ , $ <nat:6> $ , and $ <nat:10> > <nat:1> $ . Similarly observe further $ <var:c> \times <var:L> \times <var:Y> \times <var:D> \times <var:E> = <nat:12960> $ hints $ <var:c> = <nat:2> $ , $ <var:D> = <nat:12> $ , $ <var:L> = <nat:6> $ , $ <var:E> = <nat:10> $ , and $ <var:Y> = <nat:9> $ . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:five-composite> ( <var:q> : nat ) := exists <var:c> <var:E> <var:L> <var:D> <var:Y> : nat , ( <var:E> > <nat:1> ) /\ ( <var:c> > <nat:1> ) /\ ( <var:Y> > <nat:1> ) /\ ( <var:L> > <nat:1> ) /\ ( <var:D> > <nat:1> ) /\ ( <var:q> = <var:L> * <var:c> * <var:Y> * <var:D> * <var:E> ) . Theorem <genP:1> : <def:five-composite> <nat:12960> . Proof . unfold <def:five-composite> . assert ( <genH> : <nat:12> > <nat:1> ) . { lia . } assert ( <genH> : <nat:9> > <nat:1> ) . { lia . } assert ( <genH> : <nat:2> > <nat:1> ) . { lia . } assert ( <genH> : <nat:6> > <nat:1> ) . { lia . } assert ( <genH> : <nat:10> > <nat:1> ) . { lia . } exists <nat:2> . exists <nat:10> . exists <nat:6> . exists <nat:12> . exists <nat:9> . repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 