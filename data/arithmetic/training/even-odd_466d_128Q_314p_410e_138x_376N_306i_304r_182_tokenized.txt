\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Taking any positive terms $ <var:p> $ , $ <var:x> $ , $ <var:r> $ , $ <var:i> $ , $ <var:e> $ , $ <var:d> $ , $ <var:N> $ , and $ <var:Q> $ the summation $ <nat:306> * <var:i> + <nat:304> * <var:r> + <nat:376> * <var:N> + <nat:314> * <var:p> + <var:x> * <nat:138> + <var:e> * <nat:410> + <nat:182> + <nat:466> * <var:d> + <var:Q> * <nat:128> $ must be even . \end{theorem} \begin{proof} Notice the summation between even naturals collectively and an even number in $ \mathbb{N} $ is guaranteed to be an even whole number . We use that $ <nat:138> \cdot <var:x> + <nat:376> \cdot <var:N> + <var:p> \cdot <nat:314> + <var:Q> \cdot <nat:128> + <nat:466> \cdot <var:d> + <nat:182> + <nat:306> \cdot <var:i> + <var:r> \cdot <nat:304> + <var:e> \cdot <nat:410> $ is guaranteed to be even from the fact the expression $ <nat:138> <var:x> + <var:e> <nat:410> + <nat:306> <var:i> + <var:N> <nat:376> + <nat:304> <var:r> + <nat:314> <var:p> + <nat:466> <var:d> + <var:Q> <nat:128> $ is guaranteed to be even . In addition to this , remember that the terms $ <nat:138> <var:x> $ , $ <nat:410> <var:e> $ , $ <var:i> <nat:306> $ , $ <var:N> <nat:376> $ , $ <nat:304> <var:r> $ , $ <nat:314> <var:p> $ , $ <nat:466> <var:d> $ , and likewise $ <nat:128> <var:Q> $ are trivially even . This claim is proven as a consequence that taking the product of an even element of $ \mathbb{N} $ and any number in $ \mathbb{Z}^+ $ must be even . This fact holds since the natural numbers $ <nat:138> $ , $ <nat:410> $ , $ <nat:306> $ , $ <nat:376> $ , $ <nat:304> $ , $ <nat:314> $ , $ <nat:466> $ , in addition to $ <nat:128> $ are trivially even natural numbers . We demonstrate $ <var:d> * <nat:466> + <var:Q> * <nat:128> + <var:p> * <nat:314> + <nat:182> + <var:e> * <nat:410> + <nat:138> * <var:x> + <nat:376> * <var:N> + <nat:306> * <var:i> + <var:r> * <nat:304> $ is even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:p> <var:x> <var:r> <var:i> <var:e> <var:d> <var:N> <var:Q> : nat , Nat . even ( <nat:306> * <var:i> + <nat:304> * <var:r> + <nat:376> * <var:N> + <nat:314> * <var:p> + <nat:138> * <var:x> + <nat:410> * <var:e> + <nat:466> * <var:d> + <nat:128> * <var:Q> + <nat:182> ) = true . Proof . intros . rewrite Nat . even_add . assert ( <genH> : Nat . even <nat:138> = true ) . { auto . } assert ( <genH> : Nat . even <nat:410> = true ) . { auto . } assert ( <genH> : Nat . even <nat:306> = true ) . { auto . } assert ( <genH> : Nat . even <nat:376> = true ) . { auto . } assert ( <genH> : Nat . even <nat:304> = true ) . { auto . } assert ( <genH> : Nat . even <nat:314> = true ) . { auto . } assert ( <genH> : Nat . even <nat:466> = true ) . { auto . } assert ( <genH> : Nat . even <nat:128> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:138> * <var:x> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:410> * <var:e> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:306> * <var:i> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:376> * <var:N> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:304> * <var:r> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:314> * <var:p> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:466> * <var:d> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:128> * <var:Q> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:306> * <var:i> + <nat:304> * <var:r> + <nat:376> * <var:N> + <nat:314> * <var:p> + <nat:138> * <var:x> + <nat:410> * <var:e> + <nat:466> * <var:d> + <nat:128> * <var:Q> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite <genH> . auto . Qed . 