\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Assuming any $ <var:G> $ , $ <var:E> $ , $ <var:M> $ , $ <var:c> $ , $ <var:V> $ , $ <var:R> $ , $ <var:n> $ , and $ <var:J> \in \mathbb{Z}^+ $ $ <var:E> <nat:62> + <nat:198> <var:M> + <var:n> <nat:178> + <var:J> <nat:400> + <var:G> <nat:358> + <var:R> <nat:144> + <nat:70> <var:c> + <var:V> <nat:484> + <nat:435> $ is odd . \end{theorem} \begin{proof} The pairs $ <var:c> <nat:70> $ , $ <var:G> <nat:358> $ , and also $ <var:n> <nat:178> $ are known as even natural numbers . This is true as a consequence that taking the product of an even element of $ \mathbb{N} $ with a positive integer is an even integer . What's more , the pairs $ <nat:198> <var:M> $ , $ <var:E> <nat:62> $ , $ <nat:144> <var:R> $ , plus $ <nat:400> <var:J> $ must be even . Observe the product $ <nat:484> <var:V> $ is an even number in $ \mathbb{Z}^+ $ . This must be true because multiplying of an even number with a whole number will be itself an even number in $ \mathbb{Z}^+ $ . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:G> <var:E> <var:M> <var:c> <var:V> <var:R> <var:n> <var:J> : nat , Nat . odd ( <nat:62> * <var:E> + <nat:198> * <var:M> + <nat:178> * <var:n> + <nat:400> * <var:J> + <nat:358> * <var:G> + <nat:144> * <var:R> + <nat:70> * <var:c> + <nat:484> * <var:V> + <nat:435> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:70> * <var:c> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:358> * <var:G> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:178> * <var:n> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:198> * <var:M> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:62> * <var:E> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:144> * <var:R> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:400> * <var:J> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:484> * <var:V> ) = true ) . { rewrite Nat . even_mul . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 