\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} For every positive numbers $ <var:t> $ , $ <var:E> $ , $ <var:W> $ , $ <var:N> $ , $ <var:u> $ , $ <var:T> $ , $ <var:e> $ , and $ <var:m> $ $ <nat:3> + <nat:328> \times <var:E> + <nat:420> \times <var:e> + <var:m> \times <nat:476> + <nat:314> \times <var:N> + <var:T> \times <nat:458> + <nat:240> \times <var:u> + <var:W> \times <nat:388> + <var:t> \times <nat:416> $ will be odd . \end{theorem} \begin{proof} The coefficients $ <nat:328> $ , $ <nat:420> $ , $ <nat:476> $ , $ <nat:314> $ , $ <nat:458> $ , $ <nat:240> $ , $ <nat:388> $ , plus $ <nat:416> $ are trivially even . In consequence , the products $ <nat:328> * <var:E> $ , $ <nat:420> * <var:e> $ , $ <var:m> * <nat:476> $ , $ <nat:314> * <var:N> $ , $ <nat:458> * <var:T> $ , $ <var:u> * <nat:240> $ , $ <nat:388> * <var:W> $ , and moreover $ <nat:416> * <var:t> $ is even too . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:t> <var:E> <var:W> <var:N> <var:u> <var:T> <var:e> <var:m> : nat , Nat . odd ( <nat:328> * <var:E> + <nat:420> * <var:e> + <nat:476> * <var:m> + <nat:314> * <var:N> + <nat:458> * <var:T> + <nat:240> * <var:u> + <nat:388> * <var:W> + <nat:416> * <var:t> + <nat:3> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:328> = true ) . { auto . } assert ( <genH> : Nat . even <nat:420> = true ) . { auto . } assert ( <genH> : Nat . even <nat:476> = true ) . { auto . } assert ( <genH> : Nat . even <nat:314> = true ) . { auto . } assert ( <genH> : Nat . even <nat:458> = true ) . { auto . } assert ( <genH> : Nat . even <nat:240> = true ) . { auto . } assert ( <genH> : Nat . even <nat:388> = true ) . { auto . } assert ( <genH> : Nat . even <nat:416> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:328> * <var:E> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:420> * <var:e> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:476> * <var:m> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:314> * <var:N> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:458> * <var:T> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:240> * <var:u> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:388> * <var:W> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:416> * <var:t> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 