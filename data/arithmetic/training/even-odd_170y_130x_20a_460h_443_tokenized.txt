\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:x> \cdot <nat:130> + <nat:443> + <nat:170> \cdot <var:y> + <var:h> \cdot <nat:460> + <var:a> \cdot <nat:20> $ will be odd assuming all natural numbers $ <var:y> $ , $ <var:x> $ , $ <var:h> $ , and $ <var:a> $ . \end{theorem} \begin{proof} We demonstrate the sum $ <nat:170> \cdot <var:y> + <nat:443> + <var:a> \cdot <nat:20> + <var:x> \cdot <nat:130> + <var:h> \cdot <nat:460> $ is odd . The sum $ <nat:443> + <var:h> * <nat:460> + <var:x> * <nat:130> + <nat:170> * <var:y> + <nat:20> * <var:a> $ is known to be odd since the summation $ <var:y> <nat:170> + <var:x> <nat:130> + <var:a> <nat:20> + <var:h> <nat:460> $ is clearly even . See the adding between an even element of $ \mathbb{N} $ and an even natural number must be even . In addition to this , the pairs $ <var:y> \cdot <nat:170> $ , $ <var:x> \cdot <nat:130> $ , $ <nat:20> \cdot <var:a> $ , $ <nat:460> \cdot <var:h> $ , are known to be even numbers since taking the product between an even number in $ \mathbb{Z}^+ $ and a element of $ \mathbb{Z}^+ $ will be even , and holds from the knowledge the leading terms $ <nat:170> $ , $ <nat:130> $ , $ <nat:20> $ , $ <nat:460> $ , are even . Remember the summing between an even number in $ \mathbb{N} $ and an odd positive integer is odd . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:y> <var:x> <var:h> <var:a> : nat , Nat . odd ( <nat:130> * <var:x> + <nat:170> * <var:y> + <nat:460> * <var:h> + <nat:20> * <var:a> + <nat:443> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:170> = true ) . { auto . } assert ( <genH> : Nat . even <nat:130> = true ) . { auto . } assert ( <genH> : Nat . even <nat:20> = true ) . { auto . } assert ( <genH> : Nat . even <nat:460> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:170> * <var:y> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:130> * <var:x> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:20> * <var:a> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:460> * <var:h> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:130> * <var:x> + <nat:170> * <var:y> + <nat:460> * <var:h> + <nat:20> * <var:a> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . auto . Qed . 