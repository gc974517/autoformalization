\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Allow $ <var:p> $ , $ <var:L> $ , $ <var:v> $ , $ <var:V> $ , $ <var:P> $ , $ <var:G> $ , $ <var:F> \in \mathbb{Z}^+ $ so that $ <var:G> $ , $ <var:L> $ , $ <var:F> $ , $ <var:p> $ , $ <var:P> $ , $ <var:V> $ , $ <var:v> \geq <nat:2> $ plus satisfying the condition that $ <nat:302400> $ equals $ <var:F> \cdot <var:P> \cdot <var:V> \cdot <var:L> \cdot <var:G> \cdot <var:p> \cdot <var:v> $ . \end{theorem} \begin{proof} Let $ <var:V> = <nat:6> $ , $ <var:P> = <nat:9> $ , $ <var:v> = <nat:5> $ , $ <var:L> = <nat:2> $ , $ <var:F> = <nat:8> $ , $ <var:p> = <nat:7> $ , and $ <var:G> = <nat:10> $ . We demonstrate our statement holds by reason of $ <var:L> = <nat:2> $ , $ <var:P> = <nat:9> $ , $ <var:V> = <nat:6> $ , $ <var:v> = <nat:5> $ , $ <var:p> = <nat:7> $ , $ <var:F> = <nat:8> $ and $ <var:G> = <nat:10> $ are greater than or equivalent to <nat:2> as well as by reason of $ <nat:302400> = <nat:5> \times <nat:7> \times <nat:10> \times <nat:2> \times <nat:9> \times <nat:6> \times <nat:8> $ . \end{proof} \end{document} 
~
Require Import Lia . Theorem <genP:1> : exists <var:p> <var:L> <var:v> <var:V> <var:P> <var:G> <var:F> : nat , ( <var:G> >= <nat:2> ) /\ ( <var:L> >= <nat:2> ) /\ ( <var:F> >= <nat:2> ) /\ ( <var:p> >= <nat:2> ) /\ ( <var:P> >= <nat:2> ) /\ ( <var:V> >= <nat:2> ) /\ ( <var:v> >= <nat:2> ) /\ ( <nat:302400> = <var:F> * <var:P> * <var:V> * <var:L> * <var:G> * <var:p> * <var:v> ) . Proof . exists <nat:7> . exists <nat:2> . exists <nat:5> . exists <nat:6> . exists <nat:9> . exists <nat:10> . exists <nat:8> . assert ( <genH> : <nat:2> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:9> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:6> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:5> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:7> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:8> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:10> >= <nat:2> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 