\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:64> \cdot <var:E> + <var:T> \cdot <nat:70> + <var:k> \cdot <nat:356> + <nat:472> \cdot <var:i> + <var:H> \cdot <nat:192> + <nat:301> + <nat:24> \cdot <var:z> + <var:v> \cdot <nat:174> + <nat:58> \cdot <var:t> $ is odd . \end{theorem} \begin{proof} See $ <nat:301> $ is known as odd . Recall that the totaling of an even positive integer with an odd natural is guaranteed to be an odd natural number . Observe the sum $ <var:t> \times <nat:58> + <var:H> \times <nat:192> + <var:i> \times <nat:472> + <nat:64> \times <var:E> + <nat:70> \times <var:T> + <nat:24> \times <var:z> + <var:k> \times <nat:356> + <var:v> \times <nat:174> $ is guaranteed to be even . The pairs $ <var:i> \cdot <nat:472> $ , $ <nat:64> \cdot <var:E> $ , $ <nat:70> \cdot <var:T> $ , $ <var:k> \cdot <nat:356> $ , $ <nat:58> \cdot <var:t> $ , $ <nat:192> \cdot <var:H> $ , and also $ <var:z> \cdot <nat:24> $ are known as even numbers in $ \mathbb{Z}^+ $ . In addition , see the pair $ <nat:174> \cdot <var:v> $ is known to be even as a consequence that multiplying between an even element of $ \mathbb{Z}^+ $ with any natural number is guaranteed to be itself an even integer . This result is true by reason that the addition between even elements of $ \mathbb{Z}^+ $ with even numbers in $ \mathbb{N} $ must be an even natural number and moreover from the knowledge taking the product of an even whole number and any element of $ \mathbb{N} $ will be even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:E> <var:T> <var:k> <var:i> <var:H> <var:z> <var:v> <var:t> : nat , Nat . odd ( <nat:64> * <var:E> + <nat:70> * <var:T> + <nat:356> * <var:k> + <nat:472> * <var:i> + <nat:192> * <var:H> + <nat:24> * <var:z> + <nat:174> * <var:v> + <nat:58> * <var:t> + <nat:301> ) = true . Proof . intros . assert ( <genH> : Nat . odd <nat:301> = true ) . { auto . } rewrite Nat . odd_add . assert ( <genH> : Nat . even ( <nat:472> * <var:i> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:64> * <var:E> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:70> * <var:T> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:356> * <var:k> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:58> * <var:t> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:192> * <var:H> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:24> * <var:z> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:174> * <var:v> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:64> * <var:E> + <nat:70> * <var:T> + <nat:356> * <var:k> + <nat:472> * <var:i> + <nat:192> * <var:H> + <nat:24> * <var:z> + <nat:174> * <var:v> + <nat:58> * <var:t> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite <- Nat . negb_even . rewrite <genH> . rewrite <genH> . auto . Qed . 