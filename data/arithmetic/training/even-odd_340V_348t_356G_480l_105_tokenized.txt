\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:V> <nat:340> + <var:G> <nat:356> + <nat:105> + <var:l> <nat:480> + <nat:348> <var:t> $ is odd given every positive numbers $ <var:t> $ , $ <var:G> $ , $ <var:V> $ , and $ <var:l> $ . \end{theorem} \begin{proof} Notice $ <nat:105> $ is odd . The summation of an even number and an odd integer must be an odd element of $ \mathbb{N} $ . It can be proven that that the sum $ <nat:105> + <var:V> \times <nat:340> + <var:G> \times <nat:356> + <nat:480> \times <var:l> + <nat:348> \times <var:t> $ is guaranteed to be odd from the knowledge the formula $ <var:V> <nat:340> + <nat:348> <var:t> + <var:G> <nat:356> + <var:l> <nat:480> $ is clearly even . What's more , we know the numbers $ <nat:340> $ , $ <nat:348> $ , $ <nat:356> $ , in addition to $ <nat:480> $ are known as even . Hence , the products $ <nat:340> \cdot <var:V> $ , $ <nat:348> \cdot <var:t> $ , $ <var:G> \cdot <nat:356> $ , and $ <var:l> \cdot <nat:480> $ is even additionally . Our main result is true because the addition between even numbers in $ \mathbb{N} $ with even positive integers will be an even whole number and likewise because taking the product between even numbers in $ \mathbb{Z}^+ $ with an arbitrary integer is guaranteed to be even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:t> <var:G> <var:V> <var:l> : nat , Nat . odd ( <nat:340> * <var:V> + <nat:356> * <var:G> + <nat:480> * <var:l> + <nat:348> * <var:t> + <nat:105> ) = true . Proof . intros . assert ( <genH> : Nat . odd <nat:105> = true ) . { auto . } rewrite Nat . odd_add . assert ( <genH> : Nat . even <nat:340> = true ) . { auto . } assert ( <genH> : Nat . even <nat:348> = true ) . { auto . } assert ( <genH> : Nat . even <nat:356> = true ) . { auto . } assert ( <genH> : Nat . even <nat:480> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:340> * <var:V> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:348> * <var:t> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:356> * <var:G> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:480> * <var:l> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:340> * <var:V> + <nat:356> * <var:G> + <nat:480> * <var:l> + <nat:348> * <var:t> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite <- Nat . negb_even . rewrite <genH> . rewrite <genH> . auto . Qed . 