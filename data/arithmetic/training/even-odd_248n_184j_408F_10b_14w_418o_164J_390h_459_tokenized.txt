\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:n> \cdot <nat:248> + <var:j> \cdot <nat:184> + <nat:459> + <var:F> \cdot <nat:408> + <nat:10> \cdot <var:b> + <var:w> \cdot <nat:14> + <var:o> \cdot <nat:418> + <var:J> \cdot <nat:164> + <var:h> \cdot <nat:390> $ is guaranteed to be odd . \end{theorem} \begin{proof} Notice the pairs $ <nat:184> \times <var:j> $ , $ <var:n> \times <nat:248> $ , $ <nat:390> \times <var:h> $ , $ <var:o> \times <nat:418> $ , and likewise $ <nat:14> \times <var:w> $ must be even elements of $ \mathbb{N} $ since multiplying of an even natural with any natural number will be even . Additionally , take note the products $ <nat:164> \times <var:J> $ plus $ <nat:10> \times <var:b> $ are known as even numbers . On top of this , the product $ <nat:408> \times <var:F> $ is trivially even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:n> <var:j> <var:F> <var:b> <var:w> <var:o> <var:J> <var:h> : nat , Nat . odd ( <nat:248> * <var:n> + <nat:184> * <var:j> + <nat:408> * <var:F> + <nat:10> * <var:b> + <nat:14> * <var:w> + <nat:418> * <var:o> + <nat:164> * <var:J> + <nat:390> * <var:h> + <nat:459> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:184> * <var:j> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:248> * <var:n> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:390> * <var:h> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:418> * <var:o> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:14> * <var:w> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:164> * <var:J> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:10> * <var:b> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:408> * <var:F> ) = true ) . { rewrite Nat . even_mul . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 