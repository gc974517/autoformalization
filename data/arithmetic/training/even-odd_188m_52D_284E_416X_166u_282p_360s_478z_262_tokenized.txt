\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:D> * <nat:52> + <nat:478> * <var:z> + <var:m> * <nat:188> + <nat:284> * <var:E> + <var:X> * <nat:416> + <nat:166> * <var:u> + <nat:262> + <nat:282> * <var:p> + <var:s> * <nat:360> $ will be even . \end{theorem} \begin{proof} It can be checked that the formula $ <nat:262> + <nat:416> \times <var:X> + <nat:166> \times <var:u> + <nat:188> \times <var:m> + <var:D> \times <nat:52> + <var:s> \times <nat:360> + <var:E> \times <nat:284> + <var:z> \times <nat:478> + <nat:282> \times <var:p> $ is known as even from the fact the sum $ <nat:188> * <var:m> + <nat:52> * <var:D> + <var:E> * <nat:284> + <var:X> * <nat:416> + <var:u> * <nat:166> + <var:p> * <nat:282> + <var:s> * <nat:360> + <nat:478> * <var:z> $ is known as even . Take note that the pairs $ <var:u> * <nat:166> $ , $ <var:z> * <nat:478> $ , plus $ <nat:416> * <var:X> $ are trivially even elements of $ \mathbb{N} $ . This fact must be true as a consequence that multiplying of an even element of $ \mathbb{Z}^+ $ with any number is guaranteed to be an even whole number . The products $ <var:p> * <nat:282> $ , $ <nat:284> * <var:E> $ , $ <nat:52> * <var:D> $ , and also $ <nat:188> * <var:m> $ are obviously even positive integers as a consequence that the product of an even element of $ \mathbb{N} $ and an arbitrary number is guaranteed to be by itself an even element of $ \mathbb{N} $ . Take note the product $ <nat:360> * <var:s> $ is guaranteed to be even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:D> <var:z> <var:m> <var:E> <var:X> <var:u> <var:p> <var:s> : nat , Nat . even ( <nat:52> * <var:D> + <nat:478> * <var:z> + <nat:188> * <var:m> + <nat:284> * <var:E> + <nat:416> * <var:X> + <nat:166> * <var:u> + <nat:282> * <var:p> + <nat:360> * <var:s> + <nat:262> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:166> * <var:u> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:478> * <var:z> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:416> * <var:X> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:282> * <var:p> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:284> * <var:E> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:52> * <var:D> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:188> * <var:m> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:360> * <var:s> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:52> * <var:D> + <nat:478> * <var:z> + <nat:188> * <var:m> + <nat:284> * <var:E> + <nat:416> * <var:X> + <nat:166> * <var:u> + <nat:282> * <var:p> + <nat:360> * <var:s> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . even_add . rewrite <genH> . auto . Qed . 