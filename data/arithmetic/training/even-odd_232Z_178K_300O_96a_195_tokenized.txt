\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:Z> <nat:232> + <nat:178> <var:K> + <nat:300> <var:O> + <nat:195> + <nat:96> <var:a> $ is odd . \end{theorem} \begin{proof} It can be justified that our main result must be true . Notice that $ <nat:195> $ is guaranteed to be an odd number . The pairs $ <var:Z> <nat:232> $ , $ <var:K> <nat:178> $ , $ <nat:300> <var:O> $ , in addition to $ <var:a> <nat:96> $ are clearly even . This fact is true by reason that the multiplication of an even element of $ \mathbb{Z}^+ $ and a number is guaranteed to be obviously an even positive integer . This fact holds by reason that the integers $ <nat:232> $ , $ <nat:178> $ , $ <nat:300> $ , in addition to $ <nat:96> $ are guaranteed to be even numbers in $ \mathbb{Z}^+ $ . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:Z> <var:K> <var:O> <var:a> : nat , Nat . odd ( <nat:232> * <var:Z> + <nat:178> * <var:K> + <nat:300> * <var:O> + <nat:96> * <var:a> + <nat:195> ) = true . Proof . intros . assert ( <genH> : Nat . odd <nat:195> = true ) . { auto . } assert ( <genH> : Nat . even <nat:232> = true ) . { auto . } assert ( <genH> : Nat . even <nat:178> = true ) . { auto . } assert ( <genH> : Nat . even <nat:300> = true ) . { auto . } assert ( <genH> : Nat . even <nat:96> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:232> * <var:Z> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:178> * <var:K> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:300> * <var:O> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:96> * <var:a> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 