\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:326> * <var:N> + <var:l> * <nat:410> + <nat:466> * <var:G> + <nat:251> + <var:U> * <nat:250> + <var:W> * <nat:366> + <var:E> * <nat:290> + <nat:244> * <var:t> + <nat:222> * <var:x> $ is guaranteed to be odd . \end{theorem} \begin{proof} We know multiplying of an even number with a integer will be an even natural . The coefficients $ <nat:410> $ plus $ <nat:290> $ must be even The natural numbers $ <nat:244> $ , $ <nat:326> $ , $ <nat:366> $ , additionally $ <nat:222> $ must be even Building on , the coefficient $ <nat:250> $ is obviously even Remember the natural number $ <nat:466> $ is guaranteed to be even The addition of an even natural number with an odd natural number is guaranteed to be an odd integer . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:N> <var:l> <var:G> <var:U> <var:W> <var:E> <var:t> <var:x> : nat , Nat . odd ( <nat:326> * <var:N> + <nat:410> * <var:l> + <nat:466> * <var:G> + <nat:250> * <var:U> + <nat:366> * <var:W> + <nat:290> * <var:E> + <nat:244> * <var:t> + <nat:222> * <var:x> + <nat:251> ) = true . Proof . intros . rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . repeat rewrite Nat . even_mul . assert ( <genH> : Nat . even <nat:410> = true ) . { auto . } assert ( <genH> : Nat . even <nat:290> = true ) . { auto . } assert ( <genH> : Nat . even <nat:244> = true ) . { auto . } assert ( <genH> : Nat . even <nat:326> = true ) . { auto . } assert ( <genH> : Nat . even <nat:366> = true ) . { auto . } assert ( <genH> : Nat . even <nat:222> = true ) . { auto . } assert ( <genH> : Nat . even <nat:250> = true ) . { auto . } assert ( <genH> : Nat . even <nat:466> = true ) . { auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 