\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:96> \times <var:g> + <nat:123> + <nat:398> \times <var:m> + <var:z> \times <nat:18> + <nat:4> \times <var:R> $ is guaranteed to be odd assuming positive integers $ <var:z> $ , $ <var:g> $ , $ <var:R> $ , and $ <var:m> $ . \end{theorem} \begin{proof} The summing between even positive integers collectively and an odd element of $ \mathbb{N} $ must be an odd element of $ \mathbb{Z}^+ $ . Then , $ <var:R> <nat:4> + <nat:398> <var:m> + <var:g> <nat:96> + <nat:18> <var:z> + <nat:123> $ trivially will be odd . See that $ <nat:123> $ is known to be odd . Recall that the sum $ <nat:96> <var:g> + <nat:398> <var:m> + <nat:4> <var:R> + <var:z> <nat:18> $ is guaranteed to be even . The products $ <nat:4> * <var:R> $ and likewise $ <var:z> * <nat:18> $ are clearly even integers . Adding on , recall the product $ <var:m> * <nat:398> $ is known to be even . The product $ <var:g> * <nat:96> $ is clearly even . The formula $ <var:R> <nat:4> + <nat:18> <var:z> + <var:g> <nat:96> + <var:m> <nat:398> $ is even from the knowledge the addition between an even element of $ \mathbb{N} $ with an even number is even plus because taking the product between an even number and some element of $ \mathbb{N} $ will be even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:z> <var:g> <var:R> <var:m> : nat , Nat . odd ( <nat:96> * <var:g> + <nat:398> * <var:m> + <nat:18> * <var:z> + <nat:4> * <var:R> + <nat:123> ) = true . Proof . intros . rewrite Nat . odd_add . assert ( <genH> : Nat . odd <nat:123> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:4> * <var:R> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:18> * <var:z> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:398> * <var:m> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:96> * <var:g> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:96> * <var:g> + <nat:398> * <var:m> + <nat:18> * <var:z> + <nat:4> * <var:R> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite <- Nat . negb_even . rewrite <genH> . rewrite <genH> . auto . Qed . 