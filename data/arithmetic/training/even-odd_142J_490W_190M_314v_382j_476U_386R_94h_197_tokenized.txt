\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} With every natural terms $ <var:W> $ , $ <var:h> $ , $ <var:R> $ , $ <var:U> $ , $ <var:j> $ , $ <var:J> $ , $ <var:M> $ , and $ <var:v> $ $ <nat:314> * <var:v> + <nat:382> * <var:j> + <nat:142> * <var:J> + <var:R> * <nat:386> + <nat:490> * <var:W> + <nat:94> * <var:h> + <var:U> * <nat:476> + <var:M> * <nat:190> + <nat:197> $ is guaranteed to be odd . \end{theorem} \begin{proof} Take note that $ <nat:197> $ is known as odd . Recall that the summing of even numbers in $ \mathbb{N} $ concurrently and an odd natural number will be an odd number . We know the formula $ <nat:190> \times <var:M> + <nat:197> + <nat:94> \times <var:h> + <var:j> \times <nat:382> + <var:R> \times <nat:386> + <nat:476> \times <var:U> + <nat:142> \times <var:J> + <nat:314> \times <var:v> + <var:W> \times <nat:490> $ is known as odd since the formula $ <nat:142> * <var:J> + <nat:490> * <var:W> + <nat:190> * <var:M> + <nat:314> * <var:v> + <var:j> * <nat:382> + <var:U> * <nat:476> + <var:R> * <nat:386> + <nat:94> * <var:h> $ is obviously even . Building on , the products $ <var:J> * <nat:142> $ , $ <var:W> * <nat:490> $ , $ <nat:190> * <var:M> $ , $ <nat:314> * <var:v> $ , $ <nat:382> * <var:j> $ , $ <var:U> * <nat:476> $ , $ <var:R> * <nat:386> $ , and likewise $ <nat:94> * <var:h> $ are guaranteed to be even . This fact must be true from the knowledge multiplying of an even number in $ \mathbb{N} $ and some natural will be an even natural , and is true as a consequence that the natural numbers $ <nat:142> $ , $ <nat:490> $ , $ <nat:190> $ , $ <nat:314> $ , $ <nat:382> $ , $ <nat:476> $ , $ <nat:386> $ , and $ <nat:94> $ will be even . Because the addition between even natural numbers and an even positive integer is even , and also since the multiplication between an even integer and a whole number is even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:W> <var:h> <var:R> <var:U> <var:j> <var:J> <var:M> <var:v> : nat , Nat . odd ( <nat:314> * <var:v> + <nat:382> * <var:j> + <nat:142> * <var:J> + <nat:386> * <var:R> + <nat:490> * <var:W> + <nat:94> * <var:h> + <nat:476> * <var:U> + <nat:190> * <var:M> + <nat:197> ) = true . Proof . intros . assert ( <genH> : Nat . odd <nat:197> = true ) . { auto . } rewrite Nat . odd_add . assert ( <genH> : Nat . even <nat:142> = true ) . { auto . } assert ( <genH> : Nat . even <nat:490> = true ) . { auto . } assert ( <genH> : Nat . even <nat:190> = true ) . { auto . } assert ( <genH> : Nat . even <nat:314> = true ) . { auto . } assert ( <genH> : Nat . even <nat:382> = true ) . { auto . } assert ( <genH> : Nat . even <nat:476> = true ) . { auto . } assert ( <genH> : Nat . even <nat:386> = true ) . { auto . } assert ( <genH> : Nat . even <nat:94> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:142> * <var:J> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:490> * <var:W> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:190> * <var:M> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:314> * <var:v> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:382> * <var:j> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:476> * <var:U> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:386> * <var:R> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:94> * <var:h> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:314> * <var:v> + <nat:382> * <var:j> + <nat:142> * <var:J> + <nat:386> * <var:R> + <nat:490> * <var:W> + <nat:94> * <var:h> + <nat:476> * <var:U> + <nat:190> * <var:M> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite <- Nat . negb_even . rewrite <genH> . rewrite <genH> . auto . Qed . 