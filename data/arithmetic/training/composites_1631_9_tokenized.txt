\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Let $ <var:k> $ , $ <var:q> $ , $ <var:F> $ , $ <var:G> $ , $ <var:h> $ , $ <var:n> $ , $ <var:v> $ , $ <var:t> $ , $ <var:C> \in \mathbb{Z}^+ $ greater than <nat:1> . We assume that $ <var:y> \in \mathbb{N} $ will be a <def:nine-composite> natural number assuming $ <var:F> * <var:k> * <var:t> * <var:n> * <var:q> * <var:G> * <var:h> * <var:v> * <var:C> = <var:y> $ . Therefore $ <nat:8870400> = <var:y> $ is a <def:nine-composite> number . \end{theorem} \begin{proof} Recall <nat:8870400> is a <def:nine-composite> positive integer whenever it is the multiplication of natural numbers $ <var:C> $ , $ <var:v> $ , $ <var:G> $ , $ <var:F> $ , $ <var:q> $ , $ <var:k> $ , $ <var:h> $ , $ <var:t> $ , $ <var:n> $ larger than <nat:1> . Note that $ <nat:12> $ , $ <nat:7> $ , $ <nat:10> $ , $ <nat:2> $ , $ <nat:8> $ , $ <nat:11> $ , $ <nat:5> $ , $ <nat:3> $ , and $ <nat:4> $ are greater than <nat:1> . Also observe as well $ <nat:8870400> = <var:C> \times <var:v> \times <var:t> \times <var:h> \times <var:F> \times <var:q> \times <var:k> \times <var:G> \times <var:n> $ implies $ <var:v> = <nat:3> $ , $ <var:C> = <nat:8> $ , $ <var:G> = <nat:5> $ , $ <var:h> = <nat:11> $ , $ <var:t> = <nat:12> $ , $ <var:n> = <nat:10> $ , $ <var:q> = <nat:7> $ , $ <var:F> = <nat:2> $ , and $ <var:k> = <nat:4> $ . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:nine-composite> ( <var:y> : nat ) := exists <var:k> <var:q> <var:F> <var:G> <var:h> <var:n> <var:v> <var:t> <var:C> : nat , ( <var:k> > <nat:1> ) /\ ( <var:q> > <nat:1> ) /\ ( <var:F> > <nat:1> ) /\ ( <var:G> > <nat:1> ) /\ ( <var:h> > <nat:1> ) /\ ( <var:n> > <nat:1> ) /\ ( <var:v> > <nat:1> ) /\ ( <var:t> > <nat:1> ) /\ ( <var:C> > <nat:1> ) /\ ( <var:F> * <var:k> * <var:t> * <var:n> * <var:q> * <var:G> * <var:h> * <var:v> * <var:C> = <var:y> ) . Theorem <genP:1> : <def:nine-composite> <nat:8870400> . Proof . unfold <def:nine-composite> . assert ( <genH> : <nat:12> > <nat:1> ) . { lia . } assert ( <genH> : <nat:7> > <nat:1> ) . { lia . } assert ( <genH> : <nat:10> > <nat:1> ) . { lia . } assert ( <genH> : <nat:2> > <nat:1> ) . { lia . } assert ( <genH> : <nat:8> > <nat:1> ) . { lia . } assert ( <genH> : <nat:11> > <nat:1> ) . { lia . } assert ( <genH> : <nat:5> > <nat:1> ) . { lia . } assert ( <genH> : <nat:3> > <nat:1> ) . { lia . } assert ( <genH> : <nat:4> > <nat:1> ) . { lia . } exists <nat:4> . exists <nat:7> . exists <nat:2> . exists <nat:5> . exists <nat:11> . exists <nat:10> . exists <nat:3> . exists <nat:12> . exists <nat:8> . repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 