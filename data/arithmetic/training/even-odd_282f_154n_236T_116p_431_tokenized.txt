\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:T> * <nat:236> + <nat:431> + <var:n> * <nat:154> + <var:p> * <nat:116> + <nat:282> * <var:f> $ will be odd . \end{theorem} \begin{proof} The leading term $ <nat:236> $ is obviously an even natural . Therefore , the product $ <nat:236> <var:T> $ is guaranteed to be even at the same time . The term $ <nat:116> <var:p> $ is known as even because multiplying of an even positive integer and any number in $ \mathbb{Z}^+ $ will be an even element of $ \mathbb{Z}^+ $ and also the whole number $ <nat:116> $ is even . The integer $ <nat:154> $ is known to be even . Thus , the product $ <nat:154> <var:n> $ is even at the same time . In addition , see the natural number $ <nat:282> $ is guaranteed to be an even whole number . As a consequence , the term $ <nat:282> <var:f> $ must be even additionally . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:T> <var:n> <var:p> <var:f> : nat , Nat . odd ( <nat:236> * <var:T> + <nat:154> * <var:n> + <nat:116> * <var:p> + <nat:282> * <var:f> + <nat:431> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:236> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:236> * <var:T> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:116> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:116> * <var:p> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:154> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:154> * <var:n> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:282> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:282> * <var:f> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 