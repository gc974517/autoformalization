\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Granted that we get $ <var:t> $ , $ <var:x> $ , $ <var:O> $ , $ <var:z> $ , $ <var:i> $ , $ <var:s> $ , and $ <var:m> \geq <nat:2> $ where taking $ <var:Z> \in \mathbb{N} $ , $ <var:Z> = <var:z> \times <var:i> \times <var:m> \times <var:t> \times <var:x> \times <var:s> \times <var:O> $ assuming some whole numbers $ <var:m> $ , $ <var:s> $ , $ <var:x> $ , $ <var:z> $ , $ <var:O> $ , $ <var:i> $ , $ <var:t> $ , then we say that $ <var:Z> $ is a <def:seven-composite> whole number . Consequently the positive integer <nat:623700> is a <def:seven-composite> natural number . \end{theorem} \begin{proof} Let $ <var:x> = <nat:7> $ , $ <var:z> = <nat:11> $ , $ <var:m> = <nat:3> $ , $ <var:t> = <nat:5> $ , $ <var:s> = <nat:10> $ , $ <var:O> = <nat:6> $ and $ <var:i> = <nat:9> $ . We confirm the proposition holds because $ <var:x> = <nat:7> $ , $ <var:t> = <nat:5> $ , $ <var:s> = <nat:10> $ , $ <var:O> = <nat:6> $ , $ <var:m> = <nat:3> $ , $ <var:i> = <nat:9> $ , $ <var:z> = <nat:11> $ are larger than or equivalent to <nat:2> . Because of this , $ <var:m> $ , $ <var:s> $ , $ <var:O> $ , $ <var:x> $ , $ <var:t> $ , $ <var:z> $ , and $ <var:i> $ are more than or equivalent to <nat:2> and $ <var:t> \cdot <var:s> \cdot <var:x> \cdot <var:m> \cdot <var:i> \cdot <var:O> \cdot <var:z> = <nat:623700> $ is verified . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:seven-composite> ( <var:Z> : nat ) := exists <var:m> <var:s> <var:x> <var:z> <var:O> <var:i> <var:t> : nat , ( <var:t> >= <nat:2> ) /\ ( <var:x> >= <nat:2> ) /\ ( <var:O> >= <nat:2> ) /\ ( <var:z> >= <nat:2> ) /\ ( <var:i> >= <nat:2> ) /\ ( <var:s> >= <nat:2> ) /\ ( <var:m> >= <nat:2> ) /\ ( <var:Z> = <var:z> * <var:i> * <var:m> * <var:t> * <var:x> * <var:s> * <var:O> ) . Theorem <genP:1> : <def:seven-composite> <nat:623700> . Proof . unfold <def:seven-composite> . exists <nat:3> . exists <nat:10> . exists <nat:7> . exists <nat:11> . exists <nat:6> . exists <nat:9> . exists <nat:5> . assert ( <genH> : <nat:7> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:5> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:10> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:6> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:3> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:9> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:11> >= <nat:2> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 