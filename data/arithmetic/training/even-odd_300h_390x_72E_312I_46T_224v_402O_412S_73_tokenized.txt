\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:O> * <nat:402> + <nat:72> * <var:E> + <var:S> * <nat:412> + <nat:46> * <var:T> + <var:v> * <nat:224> + <nat:73> + <nat:300> * <var:h> + <nat:390> * <var:x> + <nat:312> * <var:I> $ is odd . \end{theorem} \begin{proof} Notice that the expression $ <var:S> \cdot <nat:412> + <var:h> \cdot <nat:300> + <nat:224> \cdot <var:v> + <nat:390> \cdot <var:x> + <nat:72> \cdot <var:E> + <nat:312> \cdot <var:I> + <var:T> \cdot <nat:46> + <var:O> \cdot <nat:402> $ is known as even . In addition to this , remember that the leading terms $ <nat:412> $ , $ <nat:300> $ , $ <nat:224> $ , $ <nat:390> $ , $ <nat:72> $ , $ <nat:312> $ , $ <nat:46> $ , additionally $ <nat:402> $ are guaranteed to be even natural numbers . In consequence , the pairs $ <nat:412> <var:S> $ , $ <var:h> <nat:300> $ , $ <nat:224> <var:v> $ , $ <var:x> <nat:390> $ , $ <var:E> <nat:72> $ , $ <var:I> <nat:312> $ , $ <var:T> <nat:46> $ , plus $ <var:O> <nat:402> $ must be even too . $ <var:O> <nat:402> + <nat:312> <var:I> + <nat:46> <var:T> + <nat:72> <var:E> + <nat:224> <var:v> + <var:x> <nat:390> + <var:h> <nat:300> + <nat:412> <var:S> $ is even because multiplying between even elements of $ \mathbb{Z}^+ $ and some element of $ \mathbb{Z}^+ $ is trivially an even integer . Since the adding of even whole numbers together with an odd number in $ \mathbb{N} $ is by its very nature an odd number , hence $ <var:h> \times <nat:300> + <nat:390> \times <var:x> + <var:E> \times <nat:72> + <nat:312> \times <var:I> + <nat:73> + <var:T> \times <nat:46> + <var:v> \times <nat:224> + <nat:402> \times <var:O> + <var:S> \times <nat:412> $ is odd . Notice $ <nat:73> $ is trivially an odd element of $ \mathbb{N} $ . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:O> <var:E> <var:S> <var:T> <var:v> <var:h> <var:x> <var:I> : nat , Nat . odd ( <nat:402> * <var:O> + <nat:72> * <var:E> + <nat:412> * <var:S> + <nat:46> * <var:T> + <nat:224> * <var:v> + <nat:300> * <var:h> + <nat:390> * <var:x> + <nat:312> * <var:I> + <nat:73> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:412> = true ) . { auto . } assert ( <genH> : Nat . even <nat:300> = true ) . { auto . } assert ( <genH> : Nat . even <nat:224> = true ) . { auto . } assert ( <genH> : Nat . even <nat:390> = true ) . { auto . } assert ( <genH> : Nat . even <nat:72> = true ) . { auto . } assert ( <genH> : Nat . even <nat:312> = true ) . { auto . } assert ( <genH> : Nat . even <nat:46> = true ) . { auto . } assert ( <genH> : Nat . even <nat:402> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:412> * <var:S> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:300> * <var:h> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:224> * <var:v> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:390> * <var:x> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:72> * <var:E> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:312> * <var:I> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:46> * <var:T> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:402> * <var:O> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:402> * <var:O> + <nat:72> * <var:E> + <nat:412> * <var:S> + <nat:46> * <var:T> + <nat:224> * <var:v> + <nat:300> * <var:h> + <nat:390> * <var:x> + <nat:312> * <var:I> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . assert ( <genH> : Nat . odd <nat:73> = true ) . { auto . } rewrite <- Nat . negb_even . rewrite <genH> . rewrite <genH> . auto . Qed . 