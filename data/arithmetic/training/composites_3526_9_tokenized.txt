\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \newtheorem{definition}{Definition} \begin{document} \begin{definition} Supposing that we get $ <var:F> \cdot <var:K> \cdot <var:b> \cdot <var:m> \cdot <var:Q> \cdot <var:A> \cdot <var:s> \cdot <var:J> \cdot <var:r> = <var:u> $ assuming $ <var:u> \in \mathbb{Z}^+ $ as well as so that $ <var:m> $ , $ <var:F> $ , $ <var:r> $ , $ <var:s> $ , $ <var:b> $ , $ <var:J> $ , $ <var:Q> $ , $ <var:K> $ and $ <var:A> \geq <nat:2> $ , take as given that $ <var:u> $ is a <def:nine-composite> number for some positive integers $ <var:Q> $ , $ <var:F> $ , $ <var:m> $ , $ <var:s> $ , $ <var:K> $ , $ <var:A> $ , $ <var:J> $ , $ <var:r> $ , $ <var:b> $ . \end{definition} \begin{theorem} $ <var:u> = <nat:6220800> $ is a <def:nine-composite> integer . \end{theorem} \begin{proof} Recollect that <nat:6220800> is <def:nine-composite> assuming that it is the multiplication between positive integers $ <var:m> $ , $ <var:r> $ , $ <var:s> $ , $ <var:Q> $ , $ <var:A> $ , $ <var:b> $ , $ <var:F> $ , $ <var:K> $ and $ <var:J> $ larger than or equal to <nat:2> . Allow $ <var:s> = <nat:10> $ , $ <var:A> = <nat:6> $ , $ <var:J> = <nat:12> $ , $ <var:Q> = <nat:2> $ , $ <var:F> = <nat:4> $ , $ <var:K> = <nat:8> $ , $ <var:m> = <nat:3> $ , $ <var:r> = <nat:9> $ , and $ <var:b> = <nat:5> $ . Notice $ <nat:2> * <nat:9> * <nat:6> * <nat:12> * <nat:3> * <nat:8> * <nat:5> * <nat:4> * <nat:10> = <nat:6220800> $ . What's more observe that $ <var:Q> = <nat:2> $ , $ <var:F> = <nat:4> $ , $ <var:s> = <nat:10> $ , $ <var:A> = <nat:6> $ , $ <var:J> = <nat:12> $ , $ <var:b> = <nat:5> $ , $ <var:r> = <nat:9> $ , $ <var:m> = <nat:3> $ and $ <var:K> = <nat:8> \geq <nat:2> $ . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:nine-composite> ( <var:u> : nat ) := exists <var:Q> <var:F> <var:m> <var:s> <var:K> <var:A> <var:J> <var:r> <var:b> : nat , ( <var:F> * <var:K> * <var:b> * <var:m> * <var:Q> * <var:A> * <var:s> * <var:J> * <var:r> = <var:u> ) /\ ( <var:m> >= <nat:2> ) /\ ( <var:F> >= <nat:2> ) /\ ( <var:r> >= <nat:2> ) /\ ( <var:s> >= <nat:2> ) /\ ( <var:b> >= <nat:2> ) /\ ( <var:J> >= <nat:2> ) /\ ( <var:Q> >= <nat:2> ) /\ ( <var:K> >= <nat:2> ) /\ ( <var:A> >= <nat:2> ) . Theorem <genP:1> : <def:nine-composite> <nat:6220800> . Proof . unfold <def:nine-composite> . exists <nat:2> . exists <nat:4> . exists <nat:3> . exists <nat:10> . exists <nat:8> . exists <nat:6> . exists <nat:12> . exists <nat:9> . exists <nat:5> . assert ( <genH> : <nat:2> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:4> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:10> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:6> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:12> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:5> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:9> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:3> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:8> >= <nat:2> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 