\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:N> <nat:46> + <nat:360> + <var:X> <nat:456> + <nat:340> <var:O> + <var:m> <nat:262> + <var:Q> <nat:228> + <var:w> <nat:388> + <var:o> <nat:182> + <nat:362> <var:W> $ is guaranteed to be even . \end{theorem} \begin{proof} It can be justified that our theorem must be true . Take note the pairs $ <nat:340> <var:O> $ , $ <nat:456> <var:X> $ , $ <nat:262> <var:m> $ , $ <var:W> <nat:362> $ , $ <nat:228> <var:Q> $ , $ <nat:388> <var:w> $ , as well as $ <nat:46> <var:N> $ are trivially even . The term $ <var:o> <nat:182> $ is obviously an even number in $ \mathbb{N} $ . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:N> <var:X> <var:O> <var:m> <var:Q> <var:w> <var:o> <var:W> : nat , Nat . even ( <nat:46> * <var:N> + <nat:456> * <var:X> + <nat:340> * <var:O> + <nat:262> * <var:m> + <nat:228> * <var:Q> + <nat:388> * <var:w> + <nat:182> * <var:o> + <nat:362> * <var:W> + <nat:360> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:340> * <var:O> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:456> * <var:X> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:262> * <var:m> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:362> * <var:W> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:228> * <var:Q> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:388> * <var:w> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:46> * <var:N> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:182> * <var:o> ) = true ) . { rewrite Nat . even_mul . auto . } repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 