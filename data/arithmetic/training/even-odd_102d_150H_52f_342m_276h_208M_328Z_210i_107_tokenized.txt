\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} With integers $ <var:h> $ , $ <var:H> $ , $ <var:f> $ , $ <var:m> $ , $ <var:i> $ , $ <var:Z> $ , $ <var:M> $ , and $ <var:d> $ $ <nat:210> \cdot <var:i> + <nat:52> \cdot <var:f> + <nat:107> + <var:Z> \cdot <nat:328> + <var:H> \cdot <nat:150> + <var:h> \cdot <nat:276> + <nat:342> \cdot <var:m> + <var:M> \cdot <nat:208> + <nat:102> \cdot <var:d> $ is odd . \end{theorem} \begin{proof} Observe that the coefficients $ <nat:208> $ , $ <nat:276> $ , $ <nat:150> $ , $ <nat:328> $ , and $ <nat:102> $ are known as even . Thus , the products $ <var:M> * <nat:208> $ , $ <nat:276> * <var:h> $ , $ <nat:150> * <var:H> $ , $ <var:Z> * <nat:328> $ , and also $ <var:d> * <nat:102> $ is guaranteed to be even in addition . See the pairs $ <var:f> * <nat:52> $ and $ <var:i> * <nat:210> $ are obviously even because the integers $ <nat:52> $ and likewise $ <nat:210> $ are known as even positive integers . In addition , we know that the pair $ <nat:342> * <var:m> $ is known to be even . This is proven as a consequence that the positive integer $ <nat:342> $ is clearly even . It can be checked that this proposition is proven . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:h> <var:H> <var:f> <var:m> <var:i> <var:Z> <var:M> <var:d> : nat , Nat . odd ( <nat:210> * <var:i> + <nat:52> * <var:f> + <nat:328> * <var:Z> + <nat:150> * <var:H> + <nat:276> * <var:h> + <nat:342> * <var:m> + <nat:208> * <var:M> + <nat:102> * <var:d> + <nat:107> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:208> = true ) . { auto . } assert ( <genH> : Nat . even <nat:276> = true ) . { auto . } assert ( <genH> : Nat . even <nat:150> = true ) . { auto . } assert ( <genH> : Nat . even <nat:328> = true ) . { auto . } assert ( <genH> : Nat . even <nat:102> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:208> * <var:M> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:276> * <var:h> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:150> * <var:H> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:328> * <var:Z> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:102> * <var:d> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:52> = true ) . { auto . } assert ( <genH> : Nat . even <nat:210> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:52> * <var:f> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:210> * <var:i> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:342> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:342> * <var:m> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 