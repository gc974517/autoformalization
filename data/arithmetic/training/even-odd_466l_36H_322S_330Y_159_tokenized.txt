\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:l> * <nat:466> + <var:H> * <nat:36> + <nat:322> * <var:S> + <nat:330> * <var:Y> + <nat:159> $ is guaranteed to be odd . \end{theorem} \begin{proof} The pair $ <var:l> * <nat:466> $ is guaranteed to be even . This claim is true because the whole number $ <nat:466> $ is guaranteed to be instrinsically an even natural . $ <nat:36> * <var:H> $ is an even whole number . This must be true from the knowledge the coefficient $ <nat:36> $ is an even natural number . See the whole number $ <nat:322> $ is known as an even number . For this reason , $ <nat:322> * <var:S> $ is even too . Additionally , recall that the product $ <var:Y> * <nat:330> $ is trivially an even number in $ \mathbb{N} $ from the knowledge taking the product between an even whole number and a number in $ \mathbb{N} $ is an even whole number and also the integer $ <nat:330> $ is obviously by its very nature an even positive integer . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:l> <var:H> <var:S> <var:Y> : nat , Nat . odd ( <nat:466> * <var:l> + <nat:36> * <var:H> + <nat:322> * <var:S> + <nat:330> * <var:Y> + <nat:159> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:466> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:466> * <var:l> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:36> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:36> * <var:H> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:322> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:322> * <var:S> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:330> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:330> * <var:Y> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 