\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:o> \cdot <nat:310> + <var:Q> \cdot <nat:474> + <nat:420> \cdot <var:A> + <nat:262> \cdot <var:R> + <var:O> \cdot <nat:426> + <nat:252> \cdot <var:Y> + <var:L> \cdot <nat:78> + <nat:8> + <nat:462> \cdot <var:a> $ is guaranteed to be even . \end{theorem} \begin{proof} What's more , take note the positive integers $ <nat:310> $ , $ <nat:474> $ , $ <nat:420> $ , $ <nat:262> $ , $ <nat:426> $ , $ <nat:252> $ , $ <nat:78> $ , in addition to $ <nat:462> $ are guaranteed to be even elements of $ \mathbb{N} $ . In consequence , the terms $ <var:o> <nat:310> $ , $ <var:Q> <nat:474> $ , $ <nat:420> <var:A> $ , $ <nat:262> <var:R> $ , $ <var:O> <nat:426> $ , $ <var:Y> <nat:252> $ , $ <nat:78> <var:L> $ , and $ <nat:462> <var:a> $ is even too . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:o> <var:Q> <var:A> <var:R> <var:O> <var:Y> <var:L> <var:a> : nat , Nat . even ( <nat:310> * <var:o> + <nat:474> * <var:Q> + <nat:420> * <var:A> + <nat:262> * <var:R> + <nat:426> * <var:O> + <nat:252> * <var:Y> + <nat:78> * <var:L> + <nat:462> * <var:a> + <nat:8> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:310> = true ) . { auto . } assert ( <genH> : Nat . even <nat:474> = true ) . { auto . } assert ( <genH> : Nat . even <nat:420> = true ) . { auto . } assert ( <genH> : Nat . even <nat:262> = true ) . { auto . } assert ( <genH> : Nat . even <nat:426> = true ) . { auto . } assert ( <genH> : Nat . even <nat:252> = true ) . { auto . } assert ( <genH> : Nat . even <nat:78> = true ) . { auto . } assert ( <genH> : Nat . even <nat:462> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:310> * <var:o> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:474> * <var:Q> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:420> * <var:A> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:262> * <var:R> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:426> * <var:O> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:252> * <var:Y> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:78> * <var:L> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:462> * <var:a> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 