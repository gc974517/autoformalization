\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} We define that $ <var:I> $ is a <def:five-composite> number wherever given some $ <var:S> $ , $ <var:s> $ , $ <var:d> $ , $ <var:C> $ , $ <var:b> \in \mathbb{Z}^+ $ we get $ <var:s> * <var:S> * <var:C> * <var:b> * <var:d> = <var:I> $ given $ <var:I> \in \mathbb{N} $ as well as satisfying the condition that $ <var:b> $ , $ <var:d> $ , $ <var:S> $ , $ <var:C> $ , and $ <var:s> \geq <nat:2> $ . Accordingly the number <nat:4800> is a <def:five-composite> whole number . \end{theorem} \begin{proof} Recall a <def:five-composite> is the product of whole numbers $ <var:C> $ , $ <var:S> $ , $ <var:b> $ , $ <var:d> $ , $ <var:s> $ greater than <nat:1> . We demonstrate the thesis is true seeing that $ <nat:4800> = <nat:10> \cdot <nat:5> \cdot <nat:2> \cdot <nat:4> \cdot <nat:12> = <var:S> \cdot <var:d> \cdot <var:C> \cdot <var:b> \cdot <var:s> $ plus for $ <nat:12> $ , $ <nat:5> $ , $ <nat:4> $ , $ <nat:10> $ , $ <nat:2> > <nat:1> $ . Hence , <nat:4800> is a <def:five-composite> positive integer is true has been proven . So , $ <var:d> * <var:b> * <var:C> * <var:S> * <var:s> = <nat:4800> $ and $ <var:d> $ , $ <var:b> $ , $ <var:s> $ , $ <var:S> $ , and $ <var:C> > <nat:1> $ is proven . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:five-composite> ( <var:I> : nat ) := exists <var:S> <var:s> <var:d> <var:C> <var:b> : nat , ( <var:s> * <var:S> * <var:C> * <var:b> * <var:d> = <var:I> ) /\ ( <var:b> >= <nat:2> ) /\ ( <var:d> >= <nat:2> ) /\ ( <var:S> >= <nat:2> ) /\ ( <var:C> >= <nat:2> ) /\ ( <var:s> >= <nat:2> ) . Theorem <genP:1> : <def:five-composite> <nat:4800> . Proof . unfold <def:five-composite> . exists <nat:10> . exists <nat:12> . exists <nat:5> . exists <nat:2> . exists <nat:4> . assert ( <genH> : <nat:12> > <nat:1> ) . { lia . } assert ( <genH> : <nat:5> > <nat:1> ) . { lia . } assert ( <genH> : <nat:4> > <nat:1> ) . { lia . } assert ( <genH> : <nat:10> > <nat:1> ) . { lia . } assert ( <genH> : <nat:2> > <nat:1> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 