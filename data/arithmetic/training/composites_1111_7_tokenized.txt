\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \newtheorem{definition}{Definition} \begin{document} \begin{definition} When there exist numbers $ <var:w> $ , $ <var:l> $ , $ <var:X> $ , $ <var:k> $ , $ <var:s> $ , $ <var:P> $ , $ <var:n> $ define that some number $ <var:m> $ is called a <def:seven-composite> whole number given $ <var:k> \times <var:s> \times <var:n> \times <var:l> \times <var:w> \times <var:P> \times <var:X> = <var:m> $ plus more than <nat:1> . \end{definition} \begin{theorem} The positive integer <nat:680400> is a <def:seven-composite> number . \end{theorem} \begin{proof} Let $ <var:P> = <nat:6> $ , $ <var:X> = <nat:3> $ , $ <var:s> = <nat:5> $ , $ <var:n> = <nat:7> $ , $ <var:k> = <nat:10> $ , $ <var:l> = <nat:12> $ , $ <var:w> = <nat:9> $ . Observe $ <nat:3> $ , $ <nat:12> $ , $ <nat:10> $ , $ <nat:6> $ , $ <nat:9> $ , $ <nat:7> $ , $ <nat:5> $ are larger than <nat:1> . What's more observe that as well $ <var:w> * <var:n> * <var:l> * <var:P> * <var:X> * <var:s> * <var:k> = <nat:680400> = <nat:9> * <nat:7> * <nat:12> * <nat:6> * <nat:3> * <nat:5> * <nat:10> $ . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:seven-composite> ( <var:m> : nat ) := exists <var:w> <var:l> <var:X> <var:k> <var:s> <var:P> <var:n> : nat , ( <var:k> * <var:s> * <var:n> * <var:l> * <var:w> * <var:P> * <var:X> = <var:m> ) /\ ( <var:w> > <nat:1> ) /\ ( <var:l> > <nat:1> ) /\ ( <var:X> > <nat:1> ) /\ ( <var:k> > <nat:1> ) /\ ( <var:s> > <nat:1> ) /\ ( <var:P> > <nat:1> ) /\ ( <var:n> > <nat:1> ) . Theorem <genP:1> : <def:seven-composite> <nat:680400> . Proof . unfold <def:seven-composite> . exists <nat:9> . exists <nat:12> . exists <nat:3> . exists <nat:10> . exists <nat:5> . exists <nat:6> . exists <nat:7> . assert ( <genH> : <nat:3> > <nat:1> ) . { lia . } assert ( <genH> : <nat:12> > <nat:1> ) . { lia . } assert ( <genH> : <nat:10> > <nat:1> ) . { lia . } assert ( <genH> : <nat:6> > <nat:1> ) . { lia . } assert ( <genH> : <nat:9> > <nat:1> ) . { lia . } assert ( <genH> : <nat:7> > <nat:1> ) . { lia . } assert ( <genH> : <nat:5> > <nat:1> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 