\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \newtheorem{definition}{Definition} \begin{document} \begin{definition} Assume $ <var:Q> $ , $ <var:u> $ , $ <var:N> $ , $ <var:I> $ , $ <var:n> \in \mathbb{Z}^+ $ . Assume that some whole number $ <var:V> $ will be considered as a <def:five-composite> positive integer given $ <var:I> \cdot <var:n> \cdot <var:u> \cdot <var:Q> \cdot <var:N> = <var:V> $ plus such that $ <var:N> $ , $ <var:Q> $ , $ <var:n> $ , $ <var:I> $ and $ <var:u> \geq <nat:2> $ . \end{definition} \begin{theorem} $ <var:V> = <nat:4928> $ is a <def:five-composite> integer . \end{theorem} \begin{proof} Recollect that <nat:4928> is a <def:five-composite> whole number if <nat:4928> is the product between positive integers $ <var:n> $ , $ <var:I> $ , $ <var:u> $ , $ <var:N> $ and $ <var:Q> $ larger than or equal to <nat:2> . Allow $ <var:N> = <nat:7> $ , $ <var:Q> = <nat:2> $ , $ <var:n> = <nat:4> $ , $ <var:I> = <nat:11> $ and $ <var:u> = <nat:8> $ . We present <nat:4928> is a <def:five-composite> natural number as $ <nat:4928> = <nat:11> * <nat:4> * <nat:8> * <nat:2> * <nat:7> = <var:I> * <var:n> * <var:u> * <var:Q> * <var:N> $ . So , <nat:4928> is a <def:five-composite> whole number is proven . As a consequence , $ <var:n> * <var:N> * <var:Q> * <var:I> * <var:u> = <nat:4928> $ and $ <var:n> $ , $ <var:Q> $ , $ <var:N> $ , $ <var:I> $ and $ <var:u> $ are greater than or equivalent to <nat:2> has been validated . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:five-composite> ( <var:V> : nat ) := exists <var:Q> <var:u> <var:N> <var:I> <var:n> : nat , ( <var:I> * <var:n> * <var:u> * <var:Q> * <var:N> = <var:V> ) /\ ( <var:N> >= <nat:2> ) /\ ( <var:Q> >= <nat:2> ) /\ ( <var:n> >= <nat:2> ) /\ ( <var:I> >= <nat:2> ) /\ ( <var:u> >= <nat:2> ) . Theorem <genP:1> : <def:five-composite> <nat:4928> . Proof . unfold <def:five-composite> . exists <nat:2> . exists <nat:8> . exists <nat:7> . exists <nat:11> . exists <nat:4> . repeat split . all : lia . Qed . 