\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \newtheorem{definition}{Definition} \begin{document} \begin{definition} Allow $ <var:b> $ , $ <var:H> $ are positive integers . We assume that some $ <var:Q> $ will be considered as a <def:two-composite> positive integer if $ <var:Q> = <var:b> \cdot <var:H> $ and so that $ <var:b> $ , and $ <var:H> \geq <nat:2> $ . \end{definition} \begin{theorem} $ <nat:18> = <var:Q> $ is a <def:two-composite> positive integer . \end{theorem} \begin{proof} Recollect that <nat:18> is a <def:two-composite> integer whenever <nat:18> is the product of $ <var:H> $ , and $ <var:b> $ such that $ <var:H> $ , and $ <var:b> \geq <nat:2> $ . We verify the claim is true as $ <nat:18> = <nat:9> * <nat:2> $ plus in consideration of $ <nat:9> $ and $ <nat:2> $ are greater than or equal to <nat:2> . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:two-composite> ( <var:Q> : nat ) := exists <var:b> <var:H> : nat , ( <var:Q> = <var:b> * <var:H> ) /\ ( <var:b> >= <nat:2> ) /\ ( <var:H> >= <nat:2> ) . Theorem <genP:1> : <def:two-composite> <nat:18> . Proof . unfold <def:two-composite> . exists <nat:2> . exists <nat:9> . assert ( <genH> : <nat:9> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:2> >= <nat:2> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . Qed . 