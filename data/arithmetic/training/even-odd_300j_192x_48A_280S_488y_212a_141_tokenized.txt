\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Assuming all positive integers $ <var:A> $ , $ <var:y> $ , $ <var:a> $ , $ <var:j> $ , $ <var:S> $ , and $ <var:x> $ $ <nat:141> + <var:a> <nat:212> + <nat:48> <var:A> + <nat:192> <var:x> + <nat:280> <var:S> + <nat:300> <var:j> + <nat:488> <var:y> $ is odd . \end{theorem} \begin{proof} We know $ <nat:141> $ is odd . It can be proven that this main result is true . $ <var:A> * <nat:48> + <var:S> * <nat:280> + <nat:488> * <var:y> + <var:x> * <nat:192> + <nat:141> + <var:a> * <nat:212> + <var:j> * <nat:300> $ is odd because $ <nat:300> \times <var:j> + <var:x> \times <nat:192> + <nat:48> \times <var:A> + <nat:280> \times <var:S> + <var:y> \times <nat:488> + <var:a> \times <nat:212> $ is trivially even . Notice the natural numbers $ <nat:300> $ , $ <nat:192> $ , $ <nat:48> $ , $ <nat:280> $ , $ <nat:488> $ , plus $ <nat:212> $ are clearly even integers . Accordingly , the terms $ <var:j> \times <nat:300> $ , $ <nat:192> \times <var:x> $ , $ <var:A> \times <nat:48> $ , $ <nat:280> \times <var:S> $ , $ <var:y> \times <nat:488> $ , and $ <nat:212> \times <var:a> $ must be even as well . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:A> <var:y> <var:a> <var:j> <var:S> <var:x> : nat , Nat . odd ( <nat:212> * <var:a> + <nat:48> * <var:A> + <nat:192> * <var:x> + <nat:280> * <var:S> + <nat:300> * <var:j> + <nat:488> * <var:y> + <nat:141> ) = true . Proof . intros . assert ( <genH> : Nat . odd <nat:141> = true ) . { auto . } assert ( <genH> : Nat . even <nat:300> = true ) . { auto . } assert ( <genH> : Nat . even <nat:192> = true ) . { auto . } assert ( <genH> : Nat . even <nat:48> = true ) . { auto . } assert ( <genH> : Nat . even <nat:280> = true ) . { auto . } assert ( <genH> : Nat . even <nat:488> = true ) . { auto . } assert ( <genH> : Nat . even <nat:212> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:300> * <var:j> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:192> * <var:x> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:48> * <var:A> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:280> * <var:S> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:488> * <var:y> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:212> * <var:a> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:212> * <var:a> + <nat:48> * <var:A> + <nat:192> * <var:x> + <nat:280> * <var:S> + <nat:300> * <var:j> + <nat:488> * <var:y> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . rewrite <genH> . auto . Qed . 