\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:G> \cdot <var:N> \cdot <var:x> \cdot <var:f> \cdot <var:a> \cdot <var:e> \cdot <var:Q> \cdot <var:h> \cdot <var:A> $ is equivalent to $ <nat:3628800> $ satisfying the condition that $ <var:N> $ , $ <var:a> $ , $ <var:h> $ , $ <var:G> $ , $ <var:x> $ , $ <var:e> $ , $ <var:A> $ , $ <var:f> $ , $ <var:Q> \geq <nat:2> $ . \end{theorem} \begin{proof} Let $ <var:N> = <nat:7> $ , $ <var:A> = <nat:6> $ , $ <var:e> = <nat:2> $ , $ <var:h> = <nat:4> $ , $ <var:G> = <nat:3> $ , $ <var:Q> = <nat:10> $ , $ <var:x> = <nat:9> $ , $ <var:a> = <nat:5> $ , and $ <var:f> = <nat:8> $ . Also notice that $ <nat:6> $ , $ <nat:2> $ , $ <nat:8> $ , $ <nat:9> $ , $ <nat:10> $ , $ <nat:3> $ , $ <nat:4> $ , $ <nat:5> $ , and $ <nat:7> $ are greater than or equal to <nat:2> . This hints the theorem is true . \end{proof} \end{document} 
~
Require Import Lia . Theorem <genP:1> : exists <var:h> <var:f> <var:Q> <var:G> <var:A> <var:e> <var:x> <var:a> <var:N> : nat , ( <var:G> * <var:N> * <var:x> * <var:f> * <var:a> * <var:e> * <var:Q> * <var:h> * <var:A> = <nat:3628800> ) /\ ( <var:N> >= <nat:2> ) /\ ( <var:a> >= <nat:2> ) /\ ( <var:h> >= <nat:2> ) /\ ( <var:G> >= <nat:2> ) /\ ( <var:x> >= <nat:2> ) /\ ( <var:e> >= <nat:2> ) /\ ( <var:A> >= <nat:2> ) /\ ( <var:f> >= <nat:2> ) /\ ( <var:Q> >= <nat:2> ) . Proof . exists <nat:4> . exists <nat:8> . exists <nat:10> . exists <nat:3> . exists <nat:6> . exists <nat:2> . exists <nat:9> . exists <nat:5> . exists <nat:7> . assert ( <genH> : <nat:6> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:2> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:8> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:9> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:10> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:3> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:4> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:5> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:7> >= <nat:2> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 