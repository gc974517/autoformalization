\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} For all positive integers $ <var:U> $ , $ <var:H> $ , $ <var:y> $ , $ <var:v> $ , $ <var:c> $ , and $ <var:n> $ the formula $ <var:c> \cdot <nat:474> + <nat:104> \cdot <var:y> + <nat:190> \cdot <var:H> + <var:v> \cdot <nat:20> + <nat:99> + <var:n> \cdot <nat:370> + <var:U> \cdot <nat:274> $ will be odd . \end{theorem} \begin{proof} We know that the expression $ <nat:20> \times <var:v> + <var:y> \times <nat:104> + <nat:274> \times <var:U> + <var:c> \times <nat:474> + <nat:190> \times <var:H> + <nat:370> \times <var:n> $ is even . The leading terms $ <nat:104> $ , $ <nat:274> $ , $ <nat:20> $ , and likewise $ <nat:190> $ are obviously even natural numbers . In consequence , the pairs $ <nat:104> <var:y> $ , $ <var:U> <nat:274> $ , $ <nat:20> <var:v> $ , as well as $ <nat:190> <var:H> $ will be even at the same time . The product $ <nat:370> <var:n> $ is known as an even natural number . This is proven by reason that the integer $ <nat:370> $ is even . In addition , the natural number $ <nat:474> $ is guaranteed to be even . Accordingly , the pair $ <nat:474> <var:c> $ will be even in addition . Because the summation of even numbers in $ \mathbb{N} $ and an even integer must be an even element of $ \mathbb{N} $ , this proposition is true . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:U> <var:H> <var:y> <var:v> <var:c> <var:n> : nat , Nat . odd ( <nat:474> * <var:c> + <nat:104> * <var:y> + <nat:190> * <var:H> + <nat:20> * <var:v> + <nat:370> * <var:n> + <nat:274> * <var:U> + <nat:99> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:104> = true ) . { auto . } assert ( <genH> : Nat . even <nat:274> = true ) . { auto . } assert ( <genH> : Nat . even <nat:20> = true ) . { auto . } assert ( <genH> : Nat . even <nat:190> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:104> * <var:y> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:274> * <var:U> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:20> * <var:v> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:190> * <var:H> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:370> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:370> * <var:n> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:474> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:474> * <var:c> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:474> * <var:c> + <nat:104> * <var:y> + <nat:190> * <var:H> + <nat:20> * <var:v> + <nat:370> * <var:n> + <nat:274> * <var:U> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . auto . Qed . 