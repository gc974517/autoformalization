\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \newtheorem{definition}{Definition} \begin{document} \begin{definition} We say that $ <var:C> $ is a <def:nine-composite> positive integer with the condition assuming some $ <var:D> $ , $ <var:X> $ , $ <var:N> $ , $ <var:P> $ , $ <var:A> $ , $ <var:L> $ , $ <var:e> $ , $ <var:t> $ , $ <var:z> $ we have $ <var:A> $ , $ <var:X> $ , $ <var:P> $ , $ <var:z> $ , $ <var:e> $ , $ <var:L> $ , $ <var:N> $ , $ <var:t> $ and $ <var:D> \geq <nat:2> $ as well as for some $ <var:C> $ , $ <var:P> * <var:X> * <var:e> * <var:t> * <var:N> * <var:A> * <var:z> * <var:L> * <var:D> = <var:C> $ . \end{definition} \begin{theorem} $ <var:C> = <nat:14515200> $ is a <def:nine-composite> natural number . \end{theorem} \begin{proof} Recall <nat:14515200> is a <def:nine-composite> natural number assuming that <nat:14515200> is the multiplication between $ <var:D> $ , $ <var:A> $ , $ <var:t> $ , $ <var:z> $ , $ <var:N> $ , $ <var:e> $ , $ <var:L> $ , $ <var:X> $ , and $ <var:P> $ satisfying the condition that $ <var:A> $ , $ <var:X> $ , $ <var:D> $ , $ <var:N> $ , $ <var:e> $ , $ <var:t> $ , $ <var:z> $ , $ <var:L> $ , and $ <var:P> \geq <nat:2> $ . We verify <nat:14515200> is a <def:nine-composite> natural number . We verify <nat:14515200> is <def:nine-composite> in view of $ <nat:14515200> = <nat:10> * <nat:9> * <nat:8> * <nat:5> * <nat:4> * <nat:12> * <nat:2> * <nat:7> * <nat:6> $ plus seeing that $ <nat:6> $ , $ <nat:5> $ , $ <nat:2> $ , $ <nat:10> $ , $ <nat:9> $ , $ <nat:8> $ , $ <nat:12> $ , $ <nat:7> $ , and $ <nat:4> $ are larger than or equivalent to <nat:2> . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:nine-composite> ( <var:C> : nat ) := exists <var:D> <var:X> <var:N> <var:P> <var:A> <var:L> <var:e> <var:t> <var:z> : nat , ( <var:A> >= <nat:2> ) /\ ( <var:X> >= <nat:2> ) /\ ( <var:P> >= <nat:2> ) /\ ( <var:z> >= <nat:2> ) /\ ( <var:e> >= <nat:2> ) /\ ( <var:L> >= <nat:2> ) /\ ( <var:N> >= <nat:2> ) /\ ( <var:t> >= <nat:2> ) /\ ( <var:D> >= <nat:2> ) /\ ( <var:P> * <var:X> * <var:e> * <var:t> * <var:N> * <var:A> * <var:z> * <var:L> * <var:D> = <var:C> ) . Theorem <genP:1> : <def:nine-composite> <nat:14515200> . Proof . unfold <def:nine-composite> . exists <nat:12> . exists <nat:9> . exists <nat:5> . exists <nat:6> . exists <nat:2> . exists <nat:4> . exists <nat:8> . exists <nat:7> . exists <nat:10> . assert ( <genH> : <nat:6> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:5> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:2> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:10> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:9> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:8> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:12> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:7> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:4> >= <nat:2> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 