\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Define that $ <var:b> $ is a <def:nine-composite> integer supposing there are some whole numbers $ <var:G> $ , $ <var:p> $ , $ <var:e> $ , $ <var:s> $ , $ <var:S> $ , $ <var:t> $ , $ <var:r> $ , $ <var:v> $ , $ <var:Z> $ such that $ <var:Z> * <var:S> * <var:r> * <var:s> * <var:t> * <var:v> * <var:G> * <var:p> * <var:e> = <var:b> $ given $ <var:b> \in \mathbb{N} $ and such that $ <var:p> $ , $ <var:r> $ , $ <var:v> $ , $ <var:G> $ , $ <var:S> $ , $ <var:t> $ , $ <var:e> $ , $ <var:s> $ , $ <var:Z> \geq <nat:2> $ . For this reason $ <var:b> = <nat:5702400> $ is a <def:nine-composite> number . \end{theorem} \begin{proof} Recall that a <def:nine-composite> whole number is the product between $ <var:t> $ , $ <var:s> $ , $ <var:S> $ , $ <var:e> $ , $ <var:Z> $ , $ <var:r> $ , $ <var:p> $ , $ <var:v> $ , $ <var:G> $ satisfying the condition that $ <var:G> $ , $ <var:Z> $ , $ <var:v> $ , $ <var:e> $ , $ <var:S> $ , $ <var:t> $ , $ <var:p> $ , $ <var:s> $ and $ <var:r> \geq <nat:2> $ . Let $ <var:e> = <nat:10> $ , $ <var:t> = <nat:4> $ , $ <var:Z> = <nat:9> $ , $ <var:G> = <nat:5> $ , $ <var:r> = <nat:8> $ , $ <var:v> = <nat:11> $ , $ <var:S> = <nat:6> $ , $ <var:p> = <nat:3> $ , and $ <var:s> = <nat:2> $ . We verify <nat:5702400> is a <def:nine-composite> number . Note that $ <var:t> = <nat:4> $ , $ <var:s> = <nat:2> $ , $ <var:Z> = <nat:9> $ , $ <var:v> = <nat:11> $ , $ <var:r> = <nat:8> $ , $ <var:G> = <nat:5> $ , $ <var:p> = <nat:3> $ , $ <var:e> = <nat:10> $ and $ <var:S> = <nat:6> $ are larger than or equal to <nat:2> . This suggests <nat:5702400> is <def:nine-composite> . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:nine-composite> ( <var:b> : nat ) := exists <var:G> <var:p> <var:e> <var:s> <var:S> <var:t> <var:r> <var:v> <var:Z> : nat , ( <var:Z> * <var:S> * <var:r> * <var:s> * <var:t> * <var:v> * <var:G> * <var:p> * <var:e> = <var:b> ) /\ ( <var:p> >= <nat:2> ) /\ ( <var:r> >= <nat:2> ) /\ ( <var:v> >= <nat:2> ) /\ ( <var:G> >= <nat:2> ) /\ ( <var:S> >= <nat:2> ) /\ ( <var:t> >= <nat:2> ) /\ ( <var:e> >= <nat:2> ) /\ ( <var:s> >= <nat:2> ) /\ ( <var:Z> >= <nat:2> ) . Theorem <genP:1> : <def:nine-composite> <nat:5702400> . Proof . unfold <def:nine-composite> . exists <nat:5> . exists <nat:3> . exists <nat:10> . exists <nat:2> . exists <nat:6> . exists <nat:4> . exists <nat:8> . exists <nat:11> . exists <nat:9> . assert ( <genH> : <nat:4> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:2> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:9> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:11> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:8> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:5> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:3> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:10> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:6> >= <nat:2> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 