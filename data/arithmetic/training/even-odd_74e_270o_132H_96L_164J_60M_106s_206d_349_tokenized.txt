\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} For every positive numbers $ <var:L> $ , $ <var:M> $ , $ <var:H> $ , $ <var:o> $ , $ <var:e> $ , $ <var:d> $ , $ <var:s> $ , and $ <var:J> $ the expression $ <var:e> * <nat:74> + <var:o> * <nat:270> + <nat:132> * <var:H> + <nat:96> * <var:L> + <var:J> * <nat:164> + <var:M> * <nat:60> + <var:s> * <nat:106> + <nat:349> + <var:d> * <nat:206> $ will be odd . \end{theorem} \begin{proof} Remember the terms $ <var:M> * <nat:60> $ plus $ <nat:74> * <var:e> $ are guaranteed to be even elements of $ \mathbb{Z}^+ $ . Observe the terms $ <nat:206> * <var:d> $ as well as $ <nat:164> * <var:J> $ are guaranteed to be even whole numbers . Likewise , $ <var:o> * <nat:270> $ is an even number in $ \mathbb{N} $ . The terms $ <nat:96> * <var:L> $ and likewise $ <var:s> * <nat:106> $ are known to be even as a consequence that multiplying of an even natural with some number in $ \mathbb{N} $ is guaranteed to be even . Likewise , the term $ <var:H> * <nat:132> $ is guaranteed to be an even element of $ \mathbb{Z}^+ $ . This must be true from the knowledge the multiplication of an even whole number with any natural is an even natural number . The addition between an even positive integer with an odd number in $ \mathbb{Z}^+ $ is guaranteed to be odd . See $ <nat:349> $ is known to be odd . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:L> <var:M> <var:H> <var:o> <var:e> <var:d> <var:s> <var:J> : nat , Nat . odd ( <nat:74> * <var:e> + <nat:270> * <var:o> + <nat:132> * <var:H> + <nat:96> * <var:L> + <nat:164> * <var:J> + <nat:60> * <var:M> + <nat:106> * <var:s> + <nat:206> * <var:d> + <nat:349> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:60> * <var:M> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:74> * <var:e> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:206> * <var:d> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:164> * <var:J> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:270> * <var:o> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:96> * <var:L> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:106> * <var:s> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:132> * <var:H> ) = true ) . { rewrite Nat . even_mul . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . assert ( <genH> : Nat . odd <nat:349> = true ) . { auto . } rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 