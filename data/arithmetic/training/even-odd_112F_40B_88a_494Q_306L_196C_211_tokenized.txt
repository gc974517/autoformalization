\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:211> + <var:C> * <nat:196> + <nat:112> * <var:F> + <var:B> * <nat:40> + <var:L> * <nat:306> + <nat:88> * <var:a> + <var:Q> * <nat:494> $ is odd with some natural terms $ <var:L> $ , $ <var:a> $ , $ <var:B> $ , $ <var:F> $ , $ <var:C> $ , and $ <var:Q> $ . \end{theorem} \begin{proof} The proposition must be true since $ <nat:88> <var:a> + <nat:196> <var:C> + <var:L> <nat:306> + <var:Q> <nat:494> + <nat:112> <var:F> + <var:B> <nat:40> $ is known as even . The leading term $ <nat:112> $ is known to be even . Accordingly , the product $ <var:F> \cdot <nat:112> $ must be even additionally . The natural number $ <nat:40> $ is clearly even . Hence , $ <nat:40> \cdot <var:B> $ is guaranteed to be even too . In addition , the pair $ <nat:88> \cdot <var:a> $ is an even natural from the fact taking the product between an even whole number and a number in $ \mathbb{Z}^+ $ will be fundamentally an even number . This claim must be true as a consequence that the whole number $ <nat:88> $ is obviously clearly an even number . What's more , $ <var:Q> \cdot <nat:494> $ is clearly even . This is true from the knowledge the number $ <nat:494> $ is known as even . Building on , observe that the pair $ <var:L> \cdot <nat:306> $ is trivially even because the natural number $ <nat:306> $ is clearly even . In addition to this , see that the coefficient $ <nat:196> $ is guaranteed to be even . For this reason , the pair $ <var:C> \cdot <nat:196> $ is guaranteed to be even at the same time . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:L> <var:a> <var:B> <var:F> <var:C> <var:Q> : nat , Nat . odd ( <nat:196> * <var:C> + <nat:112> * <var:F> + <nat:40> * <var:B> + <nat:306> * <var:L> + <nat:88> * <var:a> + <nat:494> * <var:Q> + <nat:211> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:112> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:112> * <var:F> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:40> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:40> * <var:B> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:88> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:88> * <var:a> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:494> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:494> * <var:Q> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:306> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:306> * <var:L> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:196> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:196> * <var:C> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:196> * <var:C> + <nat:112> * <var:F> + <nat:40> * <var:B> + <nat:306> * <var:L> + <nat:88> * <var:a> + <nat:494> * <var:Q> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . auto . Qed . 