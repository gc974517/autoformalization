\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \newtheorem{definition}{Definition} \begin{document} \begin{definition} Allow $ <var:N> $ , $ <var:j> $ , $ <var:G> $ , $ <var:i> $ , $ <var:k> $ , $ <var:m> $ , $ <var:f> $ , $ <var:b> $ , $ <var:c> \in \mathbb{N} $ larger than or equal to <nat:2> . Take that some $ <var:s> $ is said to be a <def:nine-composite> natural number if $ <var:j> \times <var:i> \times <var:f> \times <var:c> \times <var:m> \times <var:b> \times <var:N> \times <var:G> \times <var:k> = <var:s> $ . \end{definition} \begin{theorem} The natural number <nat:9979200> is a <def:nine-composite> whole number . \end{theorem} \begin{proof} Recollect that a <def:nine-composite> integer is the product of integers $ <var:b> $ , $ <var:f> $ , $ <var:j> $ , $ <var:i> $ , $ <var:m> $ , $ <var:N> $ , $ <var:c> $ , $ <var:G> $ , and $ <var:k> $ where $ <var:k> $ , $ <var:f> $ , $ <var:b> $ , $ <var:i> $ , $ <var:m> $ , $ <var:c> $ , $ <var:N> $ , $ <var:j> $ , $ <var:G> \geq <nat:2> $ . Take $ <var:c> = <nat:7> $ , $ <var:j> = <nat:12> $ , $ <var:b> = <nat:11> $ , $ <var:m> = <nat:4> $ , $ <var:f> = <nat:2> $ , $ <var:k> = <nat:9> $ , $ <var:N> = <nat:10> $ , $ <var:G> = <nat:5> $ , and $ <var:i> = <nat:3> $ . Note $ <var:N> * <var:k> * <var:j> * <var:b> * <var:i> * <var:c> * <var:m> * <var:G> * <var:f> = <nat:10> * <nat:9> * <nat:12> * <nat:11> * <nat:3> * <nat:7> * <nat:4> * <nat:5> * <nat:2> = <nat:9979200> $ . What's more notice $ <var:N> = <nat:10> $ , $ <var:k> = <nat:9> $ , $ <var:c> = <nat:7> $ , $ <var:f> = <nat:2> $ , $ <var:i> = <nat:3> $ , $ <var:b> = <nat:11> $ , $ <var:m> = <nat:4> $ , $ <var:j> = <nat:12> $ , and $ <var:G> = <nat:5> $ are larger than or equal to <nat:2> . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:nine-composite> ( <var:s> : nat ) := exists <var:N> <var:j> <var:G> <var:i> <var:k> <var:m> <var:f> <var:b> <var:c> : nat , ( <var:N> >= <nat:2> ) /\ ( <var:j> >= <nat:2> ) /\ ( <var:G> >= <nat:2> ) /\ ( <var:i> >= <nat:2> ) /\ ( <var:k> >= <nat:2> ) /\ ( <var:m> >= <nat:2> ) /\ ( <var:f> >= <nat:2> ) /\ ( <var:b> >= <nat:2> ) /\ ( <var:c> >= <nat:2> ) /\ ( <var:j> * <var:i> * <var:f> * <var:c> * <var:m> * <var:b> * <var:N> * <var:G> * <var:k> = <var:s> ) . Theorem <genP:1> : <def:nine-composite> <nat:9979200> . Proof . unfold <def:nine-composite> . exists <nat:10> . exists <nat:12> . exists <nat:5> . exists <nat:3> . exists <nat:9> . exists <nat:4> . exists <nat:2> . exists <nat:11> . exists <nat:7> . assert ( <genH> : <nat:10> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:9> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:7> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:2> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:3> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:11> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:4> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:12> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:5> >= <nat:2> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 