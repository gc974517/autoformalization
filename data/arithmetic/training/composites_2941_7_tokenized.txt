\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \newtheorem{definition}{Definition} \begin{document} \begin{definition} We claim that $ <var:T> $ is a <def:seven-composite> number granted $ \exists <var:w> $ , $ <var:s> $ , $ <var:P> $ , $ <var:u> $ , $ <var:S> $ , $ <var:z> $ , $ <var:G> \in \mathbb{Z}^+ $ such that $ <var:u> $ , $ <var:G> $ , $ <var:z> $ , $ <var:s> $ , $ <var:w> $ , $ <var:S> $ , and $ <var:P> \geq <nat:2> $ plus using some natural number $ <var:T> $ , $ <var:T> = <var:P> \times <var:S> \times <var:G> \times <var:z> \times <var:s> \times <var:w> \times <var:u> $ . \end{definition} \begin{theorem} The number <nat:73920> is a <def:seven-composite> natural number . \end{theorem} \begin{proof} Recollect that <nat:73920> is a <def:seven-composite> number with the condition it is the product between positive integers $ <var:S> $ , $ <var:u> $ , $ <var:w> $ , $ <var:P> $ , $ <var:z> $ , $ <var:s> $ , $ <var:G> $ so that $ <var:w> $ , $ <var:S> $ , $ <var:P> $ , $ <var:z> $ , $ <var:s> $ , $ <var:u> $ and $ <var:G> \geq <nat:2> $ . We confirm our principle is valid for $ <nat:2> $ , $ <nat:5> $ , $ <nat:4> $ , $ <nat:3> $ , $ <nat:8> $ , $ <nat:11> $ and $ <nat:7> \geq <nat:2> $ plus on account of $ <nat:8> \cdot <nat:2> \cdot <nat:11> \cdot <nat:4> \cdot <nat:5> \cdot <nat:3> \cdot <nat:7> = <nat:73920> $ . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:seven-composite> ( <var:T> : nat ) := exists <var:w> <var:s> <var:P> <var:u> <var:S> <var:z> <var:G> : nat , ( <var:u> >= <nat:2> ) /\ ( <var:G> >= <nat:2> ) /\ ( <var:z> >= <nat:2> ) /\ ( <var:s> >= <nat:2> ) /\ ( <var:w> >= <nat:2> ) /\ ( <var:S> >= <nat:2> ) /\ ( <var:P> >= <nat:2> ) /\ ( <var:T> = <var:P> * <var:S> * <var:G> * <var:z> * <var:s> * <var:w> * <var:u> ) . Theorem <genP:1> : <def:seven-composite> <nat:73920> . Proof . unfold <def:seven-composite> . assert ( <genH> : <nat:2> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:5> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:4> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:3> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:8> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:11> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:7> >= <nat:2> ) . { lia . } exists <nat:3> . exists <nat:2> . exists <nat:11> . exists <nat:7> . exists <nat:8> . exists <nat:4> . exists <nat:5> . repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 