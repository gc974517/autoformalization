\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Assuming all $ <var:l> $ , $ <var:J> $ , $ <var:d> $ , $ <var:e> $ , $ <var:P> $ , and $ <var:B> $ the sum $ <var:d> \cdot <nat:14> + <nat:450> \cdot <var:B> + <var:P> \cdot <nat:98> + <nat:197> + <var:J> \cdot <nat:300> + <nat:34> \cdot <var:l> + <var:e> \cdot <nat:396> $ is guaranteed to be odd . \end{theorem} \begin{proof} Recall $ <nat:98> \times <var:P> + <nat:450> \times <var:B> + <var:l> \times <nat:34> + <nat:300> \times <var:J> + <var:d> \times <nat:14> + <var:e> \times <nat:396> $ is guaranteed to be even . The natural number $ <nat:14> $ is obviously an even element of $ \mathbb{Z}^+ $ What's more , the integers $ <nat:34> $ as well as $ <nat:450> $ are known as even See the whole number $ <nat:396> $ is known as even In addition , remember that the whole number $ <nat:98> $ is guaranteed to be even The integer $ <nat:300> $ is guaranteed to be an even integer \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:l> <var:J> <var:d> <var:e> <var:P> <var:B> : nat , Nat . odd ( <nat:14> * <var:d> + <nat:450> * <var:B> + <nat:98> * <var:P> + <nat:300> * <var:J> + <nat:34> * <var:l> + <nat:396> * <var:e> + <nat:197> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:14> = true ) . { auto . } assert ( <genH> : Nat . even <nat:34> = true ) . { auto . } assert ( <genH> : Nat . even <nat:450> = true ) . { auto . } assert ( <genH> : Nat . even <nat:396> = true ) . { auto . } assert ( <genH> : Nat . even <nat:98> = true ) . { auto . } assert ( <genH> : Nat . even <nat:300> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:14> * <var:d> + <nat:450> * <var:B> + <nat:98> * <var:P> + <nat:300> * <var:J> + <nat:34> * <var:l> + <nat:396> * <var:e> ) = true ) . { repeat rewrite Nat . even_add . repeat rewrite Nat . even_mul . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . auto . Qed . 