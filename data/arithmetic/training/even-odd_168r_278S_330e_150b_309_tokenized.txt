\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} With all positive integers $ <var:e> $ , $ <var:b> $ , $ <var:r> $ , and $ <var:S> $ $ <nat:309> + <var:r> <nat:168> + <nat:278> <var:S> + <var:b> <nat:150> + <var:e> <nat:330> $ must be odd . \end{theorem} \begin{proof} Additionally , the leading term $ <nat:168> $ is obviously even . Consequently , the product $ <nat:168> <var:r> $ will be even as well . The whole number $ <nat:278> $ is obviously an even natural number . In consequence , the pair $ <var:S> <nat:278> $ is even in addition . Further , the number $ <nat:330> $ is clearly an even integer . Hence , $ <nat:330> <var:e> $ is guaranteed to be even at the same time . In addition , we know the pair $ <var:b> <nat:150> $ is even . This fact is proven by reason that the multiplication between an even natural number and an arbitrary integer is fundamentally an even positive integer . This is proven since the leading term $ <nat:150> $ is by itself an even element of $ \mathbb{N} $ . Recall $ <nat:309> $ is guaranteed to be odd . It can be shown that the claim holds . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:e> <var:b> <var:r> <var:S> : nat , Nat . odd ( <nat:168> * <var:r> + <nat:278> * <var:S> + <nat:150> * <var:b> + <nat:330> * <var:e> + <nat:309> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:168> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:168> * <var:r> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:278> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:278> * <var:S> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:330> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:330> * <var:e> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:150> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:150> * <var:b> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . odd <nat:309> = true ) . { auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 