\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Given any unknowns $ <var:h> $ , $ <var:a> $ , $ <var:v> $ , $ <var:T> $ , $ <var:g> $ , $ <var:H> $ , $ <var:d> $ , and $ <var:Y> $ the expression $ <var:h> \times <nat:166> + <nat:345> + <nat:104> \times <var:H> + <var:Y> \times <nat:492> + <var:T> \times <nat:298> + <var:g> \times <nat:84> + <nat:132> \times <var:d> + <var:v> \times <nat:252> + <var:a> \times <nat:50> $ is odd . \end{theorem} \begin{proof} Observe that $ <nat:345> $ is known as odd . It can be verified that the expression $ <var:T> <nat:298> + <nat:84> <var:g> + <nat:104> <var:H> + <var:v> <nat:252> + <var:Y> <nat:492> + <nat:132> <var:d> + <var:h> <nat:166> + <nat:345> + <nat:50> <var:a> $ will be odd . The terms $ <var:g> <nat:84> $ , $ <var:h> <nat:166> $ , $ <nat:50> <var:a> $ , in addition to $ <nat:104> <var:H> $ are obviously even . Furthermore , observe that the products $ <var:v> <nat:252> $ in addition to $ <var:Y> <nat:492> $ are obviously even numbers in $ \mathbb{N} $ by reason that multiplying between an even number in $ \mathbb{N} $ and any element of $ \mathbb{Z}^+ $ must be even . On top of this , the product $ <nat:298> <var:T> $ is clearly an even positive integer . We know the product $ <var:d> <nat:132> $ is known as even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:h> <var:a> <var:v> <var:T> <var:g> <var:H> <var:d> <var:Y> : nat , Nat . odd ( <nat:166> * <var:h> + <nat:104> * <var:H> + <nat:492> * <var:Y> + <nat:298> * <var:T> + <nat:84> * <var:g> + <nat:132> * <var:d> + <nat:252> * <var:v> + <nat:50> * <var:a> + <nat:345> ) = true . Proof . intros . assert ( <genH> : Nat . odd <nat:345> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:84> * <var:g> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:166> * <var:h> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:50> * <var:a> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:104> * <var:H> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:252> * <var:v> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:492> * <var:Y> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:298> * <var:T> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:132> * <var:d> ) = true ) . { rewrite Nat . even_mul . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 