\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \newtheorem{definition}{Definition} \begin{document} \begin{definition} There are numbers $ <var:I> $ , $ <var:y> $ , $ <var:Z> $ , $ <var:o> $ , $ <var:b> $ , $ <var:t> $ , $ <var:E> $ where $ <var:E> $ , $ <var:y> $ , $ <var:o> $ , $ <var:I> $ , $ <var:b> $ , $ <var:Z> $ , and $ <var:t> > <nat:1> $ . We claim that some natural number $ <var:u> $ will be considered to be a <def:seven-composite> positive integer assuming $ <var:u> = <var:b> \cdot <var:o> \cdot <var:y> \cdot <var:I> \cdot <var:t> \cdot <var:Z> \cdot <var:E> $ . \end{definition} \begin{theorem} $ <nat:133056> = <var:u> $ is a <def:seven-composite> positive integer . \end{theorem} \begin{proof} Recollect that a <def:seven-composite> whole number is the multiplication between positive integers $ <var:t> $ , $ <var:o> $ , $ <var:b> $ , $ <var:I> $ , $ <var:Z> $ , $ <var:E> $ and $ <var:y> $ greater than <nat:1> . Assume $ <var:E> = <nat:3> $ , $ <var:Z> = <nat:4> $ , $ <var:b> = <nat:12> $ , $ <var:t> = <nat:7> $ , $ <var:I> = <nat:11> $ , $ <var:y> = <nat:2> $ , $ <var:o> = <nat:6> $ . We show <nat:133056> is <def:seven-composite> . We verify the theorem is valid because $ <nat:3> $ , $ <nat:2> $ , $ <nat:4> $ , $ <nat:12> $ , $ <nat:7> $ , $ <nat:6> $ , $ <nat:11> > <nat:1> $ plus considering $ <nat:7> \cdot <nat:11> \cdot <nat:4> \cdot <nat:2> \cdot <nat:12> \cdot <nat:3> \cdot <nat:6> = <nat:133056> $ . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:seven-composite> ( <var:u> : nat ) := exists <var:I> <var:y> <var:Z> <var:o> <var:b> <var:t> <var:E> : nat , ( <var:E> > <nat:1> ) /\ ( <var:y> > <nat:1> ) /\ ( <var:o> > <nat:1> ) /\ ( <var:I> > <nat:1> ) /\ ( <var:b> > <nat:1> ) /\ ( <var:Z> > <nat:1> ) /\ ( <var:t> > <nat:1> ) /\ ( <var:u> = <var:b> * <var:o> * <var:y> * <var:I> * <var:t> * <var:Z> * <var:E> ) . Theorem <genP:1> : <def:seven-composite> <nat:133056> . Proof . unfold <def:seven-composite> . exists <nat:11> . exists <nat:2> . exists <nat:4> . exists <nat:6> . exists <nat:12> . exists <nat:7> . exists <nat:3> . assert ( <genH> : <nat:3> > <nat:1> ) . { lia . } assert ( <genH> : <nat:2> > <nat:1> ) . { lia . } assert ( <genH> : <nat:4> > <nat:1> ) . { lia . } assert ( <genH> : <nat:12> > <nat:1> ) . { lia . } assert ( <genH> : <nat:7> > <nat:1> ) . { lia . } assert ( <genH> : <nat:6> > <nat:1> ) . { lia . } assert ( <genH> : <nat:11> > <nat:1> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 