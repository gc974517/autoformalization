\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \newtheorem{definition}{Definition} \begin{document} \begin{definition} When we have so that $ <var:r> $ , $ <var:q> $ , $ <var:Y> $ , $ <var:y> $ , $ <var:M> $ , $ <var:m> $ , $ <var:s> > <nat:1> $ satisfying the condition that for some positive integer $ <var:z> $ , $ <var:s> \times <var:q> \times <var:y> \times <var:Y> \times <var:m> \times <var:M> \times <var:r> = <var:z> $ assuming some natural numbers $ <var:s> $ , $ <var:Y> $ , $ <var:M> $ , $ <var:q> $ , $ <var:r> $ , $ <var:m> $ , $ <var:y> $ , then we define that $ <var:z> $ is <def:seven-composite> . \end{definition} \begin{theorem} The number <nat:591360> is a <def:seven-composite> number . \end{theorem} \begin{proof} Remember that <nat:591360> is a <def:seven-composite> natural number if and only if <nat:591360> is the multiplication of $ <var:y> $ , $ <var:m> $ , $ <var:Y> $ , $ <var:s> $ , $ <var:r> $ , $ <var:M> $ , and $ <var:q> $ such that $ <var:s> $ , $ <var:r> $ , $ <var:Y> $ , $ <var:m> $ , $ <var:q> $ , $ <var:M> $ , $ <var:y> > <nat:1> $ . Let $ <var:m> = <nat:10> $ , $ <var:q> = <nat:11> $ , $ <var:s> = <nat:7> $ , $ <var:r> = <nat:8> $ , $ <var:y> = <nat:12> $ , $ <var:M> = <nat:2> $ and $ <var:Y> = <nat:4> $ . Additionally notice that $ <var:q> = <nat:11> $ , $ <var:s> = <nat:7> $ , $ <var:Y> = <nat:4> $ , $ <var:y> = <nat:12> $ , $ <var:r> = <nat:8> $ , $ <var:m> = <nat:10> $ , and $ <var:M> = <nat:2> > <nat:1> $ . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:seven-composite> ( <var:z> : nat ) := exists <var:s> <var:Y> <var:M> <var:q> <var:r> <var:m> <var:y> : nat , ( <var:r> > <nat:1> ) /\ ( <var:q> > <nat:1> ) /\ ( <var:Y> > <nat:1> ) /\ ( <var:y> > <nat:1> ) /\ ( <var:M> > <nat:1> ) /\ ( <var:m> > <nat:1> ) /\ ( <var:s> > <nat:1> ) /\ ( <var:s> * <var:q> * <var:y> * <var:Y> * <var:m> * <var:M> * <var:r> = <var:z> ) . Theorem <genP:1> : <def:seven-composite> <nat:591360> . Proof . unfold <def:seven-composite> . exists <nat:7> . exists <nat:4> . exists <nat:2> . exists <nat:11> . exists <nat:8> . exists <nat:10> . exists <nat:12> . assert ( <genH> : <nat:11> > <nat:1> ) . { lia . } assert ( <genH> : <nat:7> > <nat:1> ) . { lia . } assert ( <genH> : <nat:4> > <nat:1> ) . { lia . } assert ( <genH> : <nat:12> > <nat:1> ) . { lia . } assert ( <genH> : <nat:8> > <nat:1> ) . { lia . } assert ( <genH> : <nat:10> > <nat:1> ) . { lia . } assert ( <genH> : <nat:2> > <nat:1> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 