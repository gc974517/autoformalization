\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:345> + <var:H> \times <nat:206> + <var:V> \times <nat:224> + <var:a> \times <nat:38> + <nat:46> \times <var:r> $ is odd . \end{theorem} \begin{proof} We verify the formula $ <var:a> \cdot <nat:38> + <nat:345> + <var:r> \cdot <nat:46> + <var:H> \cdot <nat:206> + <nat:224> \cdot <var:V> $ will be odd . Recall $ <nat:345> $ is clearly odd . Notice that the expression $ <nat:224> \times <var:V> + <var:H> \times <nat:206> + <var:r> \times <nat:46> + <var:a> \times <nat:38> + <nat:345> $ is known to be odd by reason that $ <nat:206> <var:H> + <var:V> <nat:224> + <var:r> <nat:46> + <nat:38> <var:a> $ is known as even . The positive integers $ <nat:224> $ and also $ <nat:46> $ are trivially even elements of $ \mathbb{Z}^+ $ Likewise , the natural number $ <nat:38> $ is guaranteed to be an even natural number In addition , the positive integer $ <nat:206> $ is known to be even As a consequence that the product between even integers and an arbitrary number in $ \mathbb{N} $ must be an even element of $ \mathbb{Z}^+ $ $ <nat:206> \cdot <var:H> + <nat:46> \cdot <var:r> + <nat:38> \cdot <var:a> + <nat:224> \cdot <var:V> $ is guaranteed to be fundamentally even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:H> <var:V> <var:a> <var:r> : nat , Nat . odd ( <nat:206> * <var:H> + <nat:224> * <var:V> + <nat:38> * <var:a> + <nat:46> * <var:r> + <nat:345> ) = true . Proof . intros . assert ( <genH> : Nat . odd <nat:345> = true ) . { auto . } assert ( <genH> : Nat . even <nat:224> = true ) . { auto . } assert ( <genH> : Nat . even <nat:46> = true ) . { auto . } assert ( <genH> : Nat . even <nat:38> = true ) . { auto . } assert ( <genH> : Nat . even <nat:206> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:206> * <var:H> + <nat:224> * <var:V> + <nat:38> * <var:a> + <nat:46> * <var:r> ) = true ) . { repeat rewrite Nat . even_add . repeat rewrite Nat . even_mul . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . rewrite <genH> . auto . Qed . 