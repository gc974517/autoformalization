\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:h> * <nat:390> + <nat:306> * <var:Z> + <nat:1> + <var:F> * <nat:152> + <var:B> * <nat:286> $ is odd . \end{theorem} \begin{proof} This theorem must be true because $ <var:h> * <nat:390> + <nat:286> * <var:B> + <nat:152> * <var:F> + <nat:306> * <var:Z> $ is clearly even . The whole number $ <nat:286> $ is trivially even . Consequently , the pair $ <var:B> * <nat:286> $ must be even as well . Further , the number $ <nat:306> $ is clearly even . Consequently , the product $ <var:Z> * <nat:306> $ will be even as well . Recall that the term $ <nat:152> * <var:F> $ is even because the product of an even number with any element of $ \mathbb{Z}^+ $ is even and moreover the leading term $ <nat:152> $ is even . What's more , notice the term $ <var:h> * <nat:390> $ is an even element of $ \mathbb{N} $ . This fact holds by reason that the natural number $ <nat:390> $ is obviously itself an even number . The summation $ <nat:306> <var:Z> + <var:F> <nat:152> + <nat:390> <var:h> + <nat:286> <var:B> $ must be fundamentally even from the knowledge the multiplication between an even positive integer with an arbitrary whole number is guaranteed to be clearly an even natural . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:h> <var:Z> <var:F> <var:B> : nat , Nat . odd ( <nat:390> * <var:h> + <nat:306> * <var:Z> + <nat:152> * <var:F> + <nat:286> * <var:B> + <nat:1> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:286> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:286> * <var:B> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:306> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:306> * <var:Z> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:152> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:152> * <var:F> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:390> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:390> * <var:h> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:390> * <var:h> + <nat:306> * <var:Z> + <nat:152> * <var:F> + <nat:286> * <var:B> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . auto . Qed . 