\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ \exists <var:S> $ , $ <var:H> $ , $ <var:A> $ , $ <var:B> $ , $ <var:X> $ , $ <var:p> $ , $ <var:c> $ , $ <var:v> $ and $ <var:Q> $ where $ <var:H> $ , $ <var:c> $ , $ <var:S> $ , $ <var:A> $ , $ <var:Q> $ , $ <var:v> $ , $ <var:X> $ , $ <var:B> $ , and $ <var:p> \geq <nat:2> $ as well as satisfying the condition that the positive integer <nat:14968800> is the product between integers $ <var:S> $ , $ <var:H> $ , $ <var:A> $ , $ <var:B> $ , $ <var:X> $ , $ <var:p> $ , $ <var:c> $ , $ <var:v> $ , and $ <var:Q> $ . \end{theorem} \begin{proof} Take $ <var:H> = <nat:2> $ , $ <var:Q> = <nat:6> $ , $ <var:X> = <nat:5> $ , $ <var:c> = <nat:10> $ , $ <var:S> = <nat:7> $ , $ <var:v> = <nat:3> $ , $ <var:A> = <nat:12> $ , $ <var:p> = <nat:9> $ and $ <var:B> = <nat:11> $ . In addition observe that $ <nat:2> $ , $ <nat:6> $ , $ <nat:12> $ , $ <nat:9> $ , $ <nat:5> $ , $ <nat:7> $ , $ <nat:10> $ , $ <nat:3> $ , and $ <nat:11> $ are larger than or equal to <nat:2> . \end{proof} \end{document} 
~
Require Import Lia . Theorem <genP:1> : exists <var:S> <var:H> <var:A> <var:B> <var:X> <var:p> <var:c> <var:v> <var:Q> : nat , ( <var:H> >= <nat:2> ) /\ ( <var:c> >= <nat:2> ) /\ ( <var:S> >= <nat:2> ) /\ ( <var:A> >= <nat:2> ) /\ ( <var:Q> >= <nat:2> ) /\ ( <var:v> >= <nat:2> ) /\ ( <var:X> >= <nat:2> ) /\ ( <var:B> >= <nat:2> ) /\ ( <var:p> >= <nat:2> ) /\ ( <nat:14968800> = <var:S> * <var:H> * <var:A> * <var:B> * <var:X> * <var:p> * <var:c> * <var:v> * <var:Q> ) . Proof . exists <nat:7> . exists <nat:2> . exists <nat:12> . exists <nat:11> . exists <nat:5> . exists <nat:9> . exists <nat:10> . exists <nat:3> . exists <nat:6> . assert ( <genH> : <nat:2> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:6> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:12> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:9> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:5> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:7> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:10> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:3> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:11> >= <nat:2> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 