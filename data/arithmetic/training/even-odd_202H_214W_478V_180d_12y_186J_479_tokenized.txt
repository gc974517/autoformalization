\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Assuming some positive terms $ <var:V> $ , $ <var:J> $ , $ <var:W> $ , $ <var:H> $ , $ <var:d> $ , and $ <var:y> $ $ <var:V> * <nat:478> + <nat:214> * <var:W> + <var:y> * <nat:12> + <nat:186> * <var:J> + <var:H> * <nat:202> + <nat:479> + <var:d> * <nat:180> $ will be odd . \end{theorem} \begin{proof} This lemma is true since $ <nat:214> \cdot <var:W> + <var:y> \cdot <nat:12> + <nat:186> \cdot <var:J> + <nat:202> \cdot <var:H> + <var:V> \cdot <nat:478> + <var:d> \cdot <nat:180> $ is guaranteed to be even . Observe the summing of even positive integers collectively with an even natural number will be even . Remember that the pairs $ <nat:478> \times <var:V> $ , $ <var:J> \times <nat:186> $ , $ <var:d> \times <nat:180> $ , and likewise $ <var:H> \times <nat:202> $ are known as even numbers . This is true since multiplying of an even number in $ \mathbb{N} $ and any natural is guaranteed to be an even number in $ \mathbb{Z}^+ $ . What's more , remember that the term $ <var:W> \times <nat:214> $ is an even natural . $ <var:y> \times <nat:12> $ is clearly even . additionally as a consequence that the multiplication between an even number with any natural number is guaranteed to be even the formula $ <nat:180> \times <var:d> + <nat:202> \times <var:H> + <nat:12> \times <var:y> + <nat:214> \times <var:W> + <var:J> \times <nat:186> + <var:V> \times <nat:478> $ is by its very nature even . We demonstrate the expression $ <nat:202> \times <var:H> + <nat:479> + <nat:214> \times <var:W> + <var:V> \times <nat:478> + <var:d> \times <nat:180> + <var:y> \times <nat:12> + <var:J> \times <nat:186> $ is odd . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:V> <var:J> <var:W> <var:H> <var:d> <var:y> : nat , Nat . odd ( <nat:478> * <var:V> + <nat:214> * <var:W> + <nat:12> * <var:y> + <nat:186> * <var:J> + <nat:202> * <var:H> + <nat:180> * <var:d> + <nat:479> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:478> * <var:V> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:186> * <var:J> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:180> * <var:d> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:202> * <var:H> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:214> * <var:W> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:12> * <var:y> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:478> * <var:V> + <nat:214> * <var:W> + <nat:12> * <var:y> + <nat:186> * <var:J> + <nat:202> * <var:H> + <nat:180> * <var:d> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . auto . Qed . 