\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Using $ <var:f> $ , $ <var:h> $ , $ <var:X> $ , $ <var:A> $ , $ <var:M> $ , $ <var:V> $ , $ <var:t> $ , and $ <var:I> \in \mathbb{N} $ $ <var:A> \cdot <nat:226> + <var:t> \cdot <nat:202> + <nat:224> \cdot <var:M> + <nat:88> \cdot <var:I> + <var:V> \cdot <nat:80> + <nat:308> + <var:X> \cdot <nat:462> + <nat:438> \cdot <var:f> + <var:h> \cdot <nat:116> $ is even . \end{theorem} \begin{proof} Remember that the natural numbers $ <nat:226> $ , $ <nat:202> $ , $ <nat:224> $ , $ <nat:88> $ , $ <nat:80> $ , $ <nat:462> $ , $ <nat:438> $ , and also $ <nat:116> $ are known to be even . For this reason , the products $ <var:A> * <nat:226> $ , $ <nat:202> * <var:t> $ , $ <var:M> * <nat:224> $ , $ <var:I> * <nat:88> $ , $ <var:V> * <nat:80> $ , $ <nat:462> * <var:X> $ , $ <var:f> * <nat:438> $ , in addition to $ <nat:116> * <var:h> $ must be even in addition . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:f> <var:h> <var:X> <var:A> <var:M> <var:V> <var:t> <var:I> : nat , Nat . even ( <nat:226> * <var:A> + <nat:202> * <var:t> + <nat:224> * <var:M> + <nat:88> * <var:I> + <nat:80> * <var:V> + <nat:462> * <var:X> + <nat:438> * <var:f> + <nat:116> * <var:h> + <nat:308> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:226> = true ) . { auto . } assert ( <genH> : Nat . even <nat:202> = true ) . { auto . } assert ( <genH> : Nat . even <nat:224> = true ) . { auto . } assert ( <genH> : Nat . even <nat:88> = true ) . { auto . } assert ( <genH> : Nat . even <nat:80> = true ) . { auto . } assert ( <genH> : Nat . even <nat:462> = true ) . { auto . } assert ( <genH> : Nat . even <nat:438> = true ) . { auto . } assert ( <genH> : Nat . even <nat:116> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:226> * <var:A> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:202> * <var:t> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:224> * <var:M> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:88> * <var:I> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:80> * <var:V> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:462> * <var:X> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:438> * <var:f> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:116> * <var:h> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 