\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:J> <nat:474> + <nat:80> <var:T> + <nat:157> $ must be odd taking some $ <var:J> $ , and $ <var:T> $ . \end{theorem} \begin{proof} We employ the understanding that the summation $ <var:T> \cdot <nat:80> + <nat:157> + <var:J> \cdot <nat:474> $ is obviously odd because the expression $ <nat:474> <var:J> + <nat:80> <var:T> $ is known to be even . Recall that the whole numbers $ <nat:474> $ additionally $ <nat:80> $ are guaranteed to be even . Hence , the products $ <var:J> * <nat:474> $ plus $ <var:T> * <nat:80> $ is guaranteed to be even at the same time . See $ <nat:157> $ is known as odd . The summing between an even whole number and an odd element of $ \mathbb{N} $ will be odd . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:J> <var:T> : nat , Nat . odd ( <nat:474> * <var:J> + <nat:80> * <var:T> + <nat:157> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:474> = true ) . { auto . } assert ( <genH> : Nat . even <nat:80> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:474> * <var:J> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:80> * <var:T> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:474> * <var:J> + <nat:80> * <var:T> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . auto . } assert ( <genH> : Nat . odd <nat:157> = true ) . { auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . rewrite <genH> . auto . Qed . 