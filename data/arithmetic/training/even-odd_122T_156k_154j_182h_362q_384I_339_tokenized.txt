\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:384> <var:I> + <nat:122> <var:T> + <var:k> <nat:156> + <var:h> <nat:182> + <var:q> <nat:362> + <nat:339> + <nat:154> <var:j> $ is guaranteed to be odd . \end{theorem} \begin{proof} The terms $ <nat:156> * <var:k> $ plus $ <nat:154> * <var:j> $ are trivially even integers from the fact taking the product of an even number in $ \mathbb{Z}^+ $ and some number in $ \mathbb{Z}^+ $ will be an even natural , which is proven since the natural numbers $ <nat:156> $ and $ <nat:154> $ are even elements of $ \mathbb{Z}^+ $ . On top of this , recall the products $ <var:q> * <nat:362> $ , $ <nat:182> * <var:h> $ , in addition to $ <nat:384> * <var:I> $ are clearly even whole numbers by reason that the coefficients $ <nat:362> $ , $ <nat:182> $ , and likewise $ <nat:384> $ are known as even . Adding on , the pair $ <var:T> * <nat:122> $ is obviously an even whole number because the integer $ <nat:122> $ is guaranteed to be even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:I> <var:T> <var:k> <var:h> <var:q> <var:j> : nat , Nat . odd ( <nat:384> * <var:I> + <nat:122> * <var:T> + <nat:156> * <var:k> + <nat:182> * <var:h> + <nat:362> * <var:q> + <nat:154> * <var:j> + <nat:339> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:156> = true ) . { auto . } assert ( <genH> : Nat . even <nat:154> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:156> * <var:k> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:154> * <var:j> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:362> = true ) . { auto . } assert ( <genH> : Nat . even <nat:182> = true ) . { auto . } assert ( <genH> : Nat . even <nat:384> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:362> * <var:q> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:182> * <var:h> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:384> * <var:I> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:122> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:122> * <var:T> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 