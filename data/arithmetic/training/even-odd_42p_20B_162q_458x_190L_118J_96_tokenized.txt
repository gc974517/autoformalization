\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:q> * <nat:162> + <nat:118> * <var:J> + <nat:96> + <nat:190> * <var:L> + <nat:20> * <var:B> + <nat:42> * <var:p> + <nat:458> * <var:x> $ is guaranteed to be even . \end{theorem} \begin{proof} It can be checked that the expression $ <nat:118> * <var:J> + <nat:20> * <var:B> + <var:p> * <nat:42> + <var:q> * <nat:162> + <nat:458> * <var:x> + <var:L> * <nat:190> + <nat:96> $ will be even . The natural number $ <nat:190> $ is known to be an even integer . Hence , $ <nat:190> * <var:L> $ will be even as well . We know the terms $ <var:q> * <nat:162> $ , $ <nat:20> * <var:B> $ , $ <var:J> * <nat:118> $ , additionally $ <var:p> * <nat:42> $ are clearly even naturals from the knowledge the integers $ <nat:162> $ , $ <nat:20> $ , $ <nat:118> $ , and moreover $ <nat:42> $ are obviously even elements of $ \mathbb{N} $ . In addition , the leading term $ <nat:458> $ is obviously an even integer . Accordingly , the pair $ <var:x> * <nat:458> $ must be even too . Remember that the adding of an even number in $ \mathbb{N} $ with an even number in $ \mathbb{Z}^+ $ is clearly an even number in $ \mathbb{Z}^+ $ . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:q> <var:J> <var:L> <var:B> <var:p> <var:x> : nat , Nat . even ( <nat:162> * <var:q> + <nat:118> * <var:J> + <nat:190> * <var:L> + <nat:20> * <var:B> + <nat:42> * <var:p> + <nat:458> * <var:x> + <nat:96> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:190> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:190> * <var:L> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:162> = true ) . { auto . } assert ( <genH> : Nat . even <nat:20> = true ) . { auto . } assert ( <genH> : Nat . even <nat:118> = true ) . { auto . } assert ( <genH> : Nat . even <nat:42> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:162> * <var:q> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:20> * <var:B> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:118> * <var:J> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:42> * <var:p> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:458> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:458> * <var:x> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 