\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:W> * <nat:148> + <var:x> * <nat:454> + <var:R> * <nat:266> + <nat:6> * <var:y> + <nat:438> * <var:O> + <var:e> * <nat:4> + <nat:6> $ is guaranteed to be even using every positive numbers $ <var:x> $ , $ <var:e> $ , $ <var:R> $ , $ <var:y> $ , $ <var:O> $ , and $ <var:W> $ . \end{theorem} \begin{proof} Recall the terms $ <nat:148> \times <var:W> $ , $ <nat:454> \times <var:x> $ , $ <nat:266> \times <var:R> $ , $ <nat:6> \times <var:y> $ , $ <var:O> \times <nat:438> $ , $ <var:e> \times <nat:4> $ , are even . This fact must be true since the natural numbers $ <nat:148> $ , $ <nat:454> $ , $ <nat:266> $ , $ <nat:6> $ , $ <nat:438> $ , $ <nat:4> $ , are clearly even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:x> <var:e> <var:R> <var:y> <var:O> <var:W> : nat , Nat . even ( <nat:148> * <var:W> + <nat:454> * <var:x> + <nat:266> * <var:R> + <nat:6> * <var:y> + <nat:438> * <var:O> + <nat:4> * <var:e> + <nat:6> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:148> = true ) . { auto . } assert ( <genH> : Nat . even <nat:454> = true ) . { auto . } assert ( <genH> : Nat . even <nat:266> = true ) . { auto . } assert ( <genH> : Nat . even <nat:6> = true ) . { auto . } assert ( <genH> : Nat . even <nat:438> = true ) . { auto . } assert ( <genH> : Nat . even <nat:4> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:148> * <var:W> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:454> * <var:x> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:266> * <var:R> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:6> * <var:y> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:438> * <var:O> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:4> * <var:e> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 