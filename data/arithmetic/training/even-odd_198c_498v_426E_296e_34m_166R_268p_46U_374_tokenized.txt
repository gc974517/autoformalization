\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:198> \cdot <var:c> + <nat:374> + <nat:296> \cdot <var:e> + <var:U> \cdot <nat:46> + <nat:268> \cdot <var:p> + <nat:426> \cdot <var:E> + <var:v> \cdot <nat:498> + <nat:166> \cdot <var:R> + <var:m> \cdot <nat:34> $ is guaranteed to be even assuming any positive terms $ <var:p> $ , $ <var:e> $ , $ <var:U> $ , $ <var:R> $ , $ <var:E> $ , $ <var:m> $ , $ <var:c> $ , and $ <var:v> $ . \end{theorem} \begin{proof} The addition between even natural numbers concurrently and an even whole number is guaranteed to be even . Observe that $ <nat:374> $ is clearly even . See that the terms $ <nat:34> <var:m> $ , $ <nat:166> <var:R> $ , and also $ <nat:426> <var:E> $ are obviously even elements of $ \mathbb{N} $ . This fact holds from the fact taking the product between an even natural and a natural number must be obviously an even whole number , and is true because the positive integers $ <nat:34> $ , $ <nat:166> $ , and also $ <nat:426> $ must be even natural numbers . Remember the pairs $ <var:U> <nat:46> $ , $ <nat:498> <var:v> $ , in addition to $ <nat:268> <var:p> $ are known as even . This claim is proven from the fact the integers $ <nat:46> $ , $ <nat:498> $ , and also $ <nat:268> $ must be even . The leading term $ <nat:296> $ is known as even . Accordingly , the term $ <var:e> <nat:296> $ is even additionally . Furthermore , notice the product $ <nat:198> <var:c> $ is known as even by reason that the leading term $ <nat:198> $ is clearly instrinsically an even number . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:p> <var:e> <var:U> <var:R> <var:E> <var:m> <var:c> <var:v> : nat , Nat . even ( <nat:198> * <var:c> + <nat:296> * <var:e> + <nat:46> * <var:U> + <nat:268> * <var:p> + <nat:426> * <var:E> + <nat:498> * <var:v> + <nat:166> * <var:R> + <nat:34> * <var:m> + <nat:374> ) = true . Proof . intros . repeat rewrite Nat . even_add . assert ( <genH> : Nat . even <nat:374> = true ) . { auto . } assert ( <genH> : Nat . even <nat:34> = true ) . { auto . } assert ( <genH> : Nat . even <nat:166> = true ) . { auto . } assert ( <genH> : Nat . even <nat:426> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:34> * <var:m> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:166> * <var:R> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:426> * <var:E> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:46> = true ) . { auto . } assert ( <genH> : Nat . even <nat:498> = true ) . { auto . } assert ( <genH> : Nat . even <nat:268> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:46> * <var:U> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:498> * <var:v> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:268> * <var:p> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:296> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:296> * <var:e> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:198> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:198> * <var:c> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 