\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Using all positive numbers $ <var:R> $ , $ <var:J> $ , $ <var:w> $ , $ <var:L> $ , $ <var:g> $ , $ <var:c> $ , $ <var:U> $ , and $ <var:f> $ the formula $ <nat:212> \cdot <var:w> + <nat:76> + <var:g> \cdot <nat:284> + <var:U> \cdot <nat:438> + <nat:48> \cdot <var:R> + <var:J> \cdot <nat:154> + <nat:428> \cdot <var:f> + <var:L> \cdot <nat:110> + <var:c> \cdot <nat:432> $ will be even . \end{theorem} \begin{proof} As a consequence that the adding between an even positive integer and an even element of $ \mathbb{N} $ must be even , this lemma holds . Observe the positive integers $ <nat:212> $ , $ <nat:284> $ , $ <nat:438> $ , $ <nat:48> $ , $ <nat:154> $ , $ <nat:428> $ , $ <nat:110> $ , and moreover $ <nat:432> $ are trivially even integers . Consequently , the pairs $ <nat:212> <var:w> $ , $ <nat:284> <var:g> $ , $ <var:U> <nat:438> $ , $ <nat:48> <var:R> $ , $ <var:J> <nat:154> $ , $ <nat:428> <var:f> $ , $ <nat:110> <var:L> $ , and also $ <nat:432> <var:c> $ will be even at the same time . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:R> <var:J> <var:w> <var:L> <var:g> <var:c> <var:U> <var:f> : nat , Nat . even ( <nat:212> * <var:w> + <nat:284> * <var:g> + <nat:438> * <var:U> + <nat:48> * <var:R> + <nat:154> * <var:J> + <nat:428> * <var:f> + <nat:110> * <var:L> + <nat:432> * <var:c> + <nat:76> ) = true . Proof . intros . repeat rewrite Nat . even_add . assert ( <genH> : Nat . even <nat:212> = true ) . { auto . } assert ( <genH> : Nat . even <nat:284> = true ) . { auto . } assert ( <genH> : Nat . even <nat:438> = true ) . { auto . } assert ( <genH> : Nat . even <nat:48> = true ) . { auto . } assert ( <genH> : Nat . even <nat:154> = true ) . { auto . } assert ( <genH> : Nat . even <nat:428> = true ) . { auto . } assert ( <genH> : Nat . even <nat:110> = true ) . { auto . } assert ( <genH> : Nat . even <nat:432> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:212> * <var:w> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:284> * <var:g> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:438> * <var:U> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:48> * <var:R> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:154> * <var:J> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:428> * <var:f> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:110> * <var:L> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:432> * <var:c> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 