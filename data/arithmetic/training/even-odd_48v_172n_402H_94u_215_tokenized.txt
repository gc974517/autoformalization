\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:215> + <nat:172> \times <var:n> + <nat:48> \times <var:v> + <var:H> \times <nat:402> + <var:u> \times <nat:94> $ will be odd assuming every terms $ <var:v> $ , $ <var:n> $ , $ <var:u> $ , and $ <var:H> $ . \end{theorem} \begin{proof} See that $ <nat:215> $ is an odd positive integer . It can be proven that that $ <var:H> \times <nat:402> + <var:u> \times <nat:94> + <nat:48> \times <var:v> + <nat:215> + <nat:172> \times <var:n> $ is guaranteed to be odd . Remember that the addition between an even number with an odd positive integer will be odd . The formula $ <var:v> * <nat:48> + <var:n> * <nat:172> + <var:H> * <nat:402> + <nat:94> * <var:u> $ is guaranteed to be even . What's more , the leading terms $ <nat:48> $ , $ <nat:172> $ , $ <nat:402> $ , and moreover $ <nat:94> $ are known as even naturals . Thus , the pairs $ <var:v> \times <nat:48> $ , $ <var:n> \times <nat:172> $ , $ <nat:402> \times <var:H> $ , as well as $ <var:u> \times <nat:94> $ is even in addition . From the knowledge the product between an even number in $ \mathbb{Z}^+ $ with some natural number will be even this proposition is true . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:v> <var:n> <var:u> <var:H> : nat , Nat . odd ( <nat:172> * <var:n> + <nat:48> * <var:v> + <nat:402> * <var:H> + <nat:94> * <var:u> + <nat:215> ) = true . Proof . intros . assert ( <genH> : Nat . odd <nat:215> = true ) . { auto . } rewrite Nat . odd_add . assert ( <genH> : Nat . even <nat:48> = true ) . { auto . } assert ( <genH> : Nat . even <nat:172> = true ) . { auto . } assert ( <genH> : Nat . even <nat:402> = true ) . { auto . } assert ( <genH> : Nat . even <nat:94> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:48> * <var:v> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:172> * <var:n> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:402> * <var:H> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:94> * <var:u> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:172> * <var:n> + <nat:48> * <var:v> + <nat:402> * <var:H> + <nat:94> * <var:u> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite <- Nat . negb_even . rewrite <genH> . rewrite <genH> . auto . Qed . 