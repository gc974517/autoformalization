\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} The number <nat:299376> is the product of numbers $ <var:c> $ , $ <var:C> $ , $ <var:D> $ , $ <var:N> $ , $ <var:x> $ , $ <var:m> $ and $ <var:l> $ where $ <var:c> $ , $ <var:N> $ , $ <var:x> $ , $ <var:D> $ , $ <var:C> $ , $ <var:m> $ , and $ <var:l> $ larger than <nat:1> . \end{theorem} \begin{proof} Take $ <var:N> = <nat:2> $ , $ <var:C> = <nat:11> $ , $ <var:x> = <nat:6> $ , $ <var:l> = <nat:9> $ , $ <var:D> = <nat:12> $ , $ <var:c> = <nat:3> $ and $ <var:m> = <nat:7> $ . Notice $ <nat:7> $ , $ <nat:12> $ , $ <nat:9> $ , $ <nat:6> $ , $ <nat:2> $ , $ <nat:3> $ and $ <nat:11> $ are larger than <nat:1> . Furthermore notice additionally $ <var:l> \cdot <var:c> \cdot <var:N> \cdot <var:C> \cdot <var:m> \cdot <var:x> \cdot <var:D> = <nat:9> \cdot <nat:3> \cdot <nat:2> \cdot <nat:11> \cdot <nat:7> \cdot <nat:6> \cdot <nat:12> = <nat:299376> $ . \end{proof} \end{document} 
~
Require Import Lia . Theorem <genP:1> : exists <var:c> <var:C> <var:D> <var:N> <var:x> <var:m> <var:l> : nat , ( <nat:299376> = <var:c> * <var:C> * <var:D> * <var:N> * <var:x> * <var:m> * <var:l> ) /\ ( <var:c> > <nat:1> ) /\ ( <var:N> > <nat:1> ) /\ ( <var:x> > <nat:1> ) /\ ( <var:D> > <nat:1> ) /\ ( <var:C> > <nat:1> ) /\ ( <var:m> > <nat:1> ) /\ ( <var:l> > <nat:1> ) . Proof . exists <nat:3> . exists <nat:11> . exists <nat:12> . exists <nat:2> . exists <nat:6> . exists <nat:7> . exists <nat:9> . assert ( <genH> : <nat:7> > <nat:1> ) . { lia . } assert ( <genH> : <nat:12> > <nat:1> ) . { lia . } assert ( <genH> : <nat:9> > <nat:1> ) . { lia . } assert ( <genH> : <nat:6> > <nat:1> ) . { lia . } assert ( <genH> : <nat:2> > <nat:1> ) . { lia . } assert ( <genH> : <nat:3> > <nat:1> ) . { lia . } assert ( <genH> : <nat:11> > <nat:1> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 