\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:j> \cdot <nat:152> + <var:M> \cdot <nat:442> + <nat:285> + <nat:170> \cdot <var:V> + <var:P> \cdot <nat:296> + <nat:212> \cdot <var:l> + <var:b> \cdot <nat:26> $ is odd . \end{theorem} \begin{proof} The main result is proven from the knowledge $ <nat:170> <var:V> + <var:l> <nat:212> + <var:j> <nat:152> + <nat:442> <var:M> + <nat:26> <var:b> + <nat:296> <var:P> $ is clearly even . Remember the leading terms $ <nat:170> $ , $ <nat:212> $ , $ <nat:152> $ , $ <nat:442> $ , $ <nat:26> $ , and $ <nat:296> $ are clearly even . Hence , the products $ <nat:170> * <var:V> $ , $ <var:l> * <nat:212> $ , $ <nat:152> * <var:j> $ , $ <var:M> * <nat:442> $ , $ <var:b> * <nat:26> $ , and likewise $ <var:P> * <nat:296> $ must be even as well . Remember $ <nat:285> $ is obviously odd . The adding between an even whole number and an odd integer is odd . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:j> <var:M> <var:V> <var:P> <var:l> <var:b> : nat , Nat . odd ( <nat:152> * <var:j> + <nat:442> * <var:M> + <nat:170> * <var:V> + <nat:296> * <var:P> + <nat:212> * <var:l> + <nat:26> * <var:b> + <nat:285> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:170> = true ) . { auto . } assert ( <genH> : Nat . even <nat:212> = true ) . { auto . } assert ( <genH> : Nat . even <nat:152> = true ) . { auto . } assert ( <genH> : Nat . even <nat:442> = true ) . { auto . } assert ( <genH> : Nat . even <nat:26> = true ) . { auto . } assert ( <genH> : Nat . even <nat:296> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:170> * <var:V> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:212> * <var:l> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:152> * <var:j> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:442> * <var:M> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:26> * <var:b> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:296> * <var:P> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:152> * <var:j> + <nat:442> * <var:M> + <nat:170> * <var:V> + <nat:296> * <var:P> + <nat:212> * <var:l> + <nat:26> * <var:b> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } assert ( <genH> : Nat . odd <nat:285> = true ) . { auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . rewrite <genH> . auto . Qed . 