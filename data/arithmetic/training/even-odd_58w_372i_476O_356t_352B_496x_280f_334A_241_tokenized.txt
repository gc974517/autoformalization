\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:58> * <var:w> + <nat:241> + <nat:372> * <var:i> + <nat:476> * <var:O> + <var:t> * <nat:356> + <nat:352> * <var:B> + <nat:496> * <var:x> + <var:f> * <nat:280> + <nat:334> * <var:A> $ must be odd . \end{theorem} \begin{proof} Observe the addition of an even positive integer with an odd integer is guaranteed to be an odd number in $ \mathbb{Z}^+ $ . Recall that $ <nat:241> $ is known as an odd element of $ \mathbb{Z}^+ $ . See the terms $ <nat:476> \times <var:O> $ , $ <var:i> \times <nat:372> $ , $ <nat:280> \times <var:f> $ , $ <nat:496> \times <var:x> $ , and likewise $ <nat:356> \times <var:t> $ must be even . Remember that the terms $ <var:A> \times <nat:334> $ in addition to $ <nat:352> \times <var:B> $ are known to be even natural numbers . This claim must be true since the product of an even element of $ \mathbb{N} $ and a element of $ \mathbb{Z}^+ $ is guaranteed to be an even element of $ \mathbb{N} $ . In addition to this , the product $ <var:w> \times <nat:58> $ is guaranteed to be an even natural number . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:w> <var:i> <var:O> <var:t> <var:B> <var:x> <var:f> <var:A> : nat , Nat . odd ( <nat:58> * <var:w> + <nat:372> * <var:i> + <nat:476> * <var:O> + <nat:356> * <var:t> + <nat:352> * <var:B> + <nat:496> * <var:x> + <nat:280> * <var:f> + <nat:334> * <var:A> + <nat:241> ) = true . Proof . intros . rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . assert ( <genH> : Nat . odd <nat:241> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:476> * <var:O> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:372> * <var:i> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:280> * <var:f> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:496> * <var:x> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:356> * <var:t> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:334> * <var:A> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:352> * <var:B> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:58> * <var:w> ) = true ) . { rewrite Nat . even_mul . auto . } rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 