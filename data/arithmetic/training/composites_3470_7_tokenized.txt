\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Wherever we get $ <var:V> $ , $ <var:e> $ , $ <var:C> $ , $ <var:b> $ , $ <var:u> $ , $ <var:P> $ and $ <var:p> \geq <nat:2> $ satisfying the condition that for some natural number $ <var:G> $ , $ <var:G> = <var:P> * <var:p> * <var:V> * <var:e> * <var:b> * <var:u> * <var:C> $ taking some $ <var:C> $ , $ <var:V> $ , $ <var:e> $ , $ <var:b> $ , $ <var:u> $ , $ <var:P> $ , $ <var:p> \in \mathbb{N} $ , we denote that $ <var:G> $ is a <def:seven-composite> integer . Consequently the number <nat:241920> is a <def:seven-composite> natural number . \end{theorem} \begin{proof} Remember <nat:241920> is a <def:seven-composite> natural number assuming <nat:241920> is the multiplication between natural numbers $ <var:C> $ , $ <var:b> $ , $ <var:P> $ , $ <var:V> $ , $ <var:p> $ , $ <var:u> $ , and $ <var:e> $ such that $ <var:b> $ , $ <var:u> $ , $ <var:e> $ , $ <var:C> $ , $ <var:p> $ , $ <var:V> $ and $ <var:P> \geq <nat:2> $ . Notice that $ <nat:2> $ , $ <nat:4> $ , $ <nat:10> $ , $ <nat:8> $ , $ <nat:6> $ , $ <nat:9> $ and $ <nat:7> $ are larger than or equal to <nat:2> . Additionally observe additionally $ <var:b> * <var:u> * <var:P> * <var:V> * <var:e> * <var:C> * <var:p> = <nat:2> * <nat:8> * <nat:4> * <nat:9> * <nat:6> * <nat:10> * <nat:7> = <nat:241920> $ . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:seven-composite> ( <var:G> : nat ) := exists <var:C> <var:V> <var:e> <var:b> <var:u> <var:P> <var:p> : nat , ( <var:V> >= <nat:2> ) /\ ( <var:e> >= <nat:2> ) /\ ( <var:C> >= <nat:2> ) /\ ( <var:b> >= <nat:2> ) /\ ( <var:u> >= <nat:2> ) /\ ( <var:P> >= <nat:2> ) /\ ( <var:p> >= <nat:2> ) /\ ( <var:G> = <var:P> * <var:p> * <var:V> * <var:e> * <var:b> * <var:u> * <var:C> ) . Theorem <genP:1> : <def:seven-composite> <nat:241920> . Proof . unfold <def:seven-composite> . assert ( <genH> : <nat:2> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:4> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:10> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:8> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:6> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:9> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:7> >= <nat:2> ) . { lia . } exists <nat:10> . exists <nat:9> . exists <nat:6> . exists <nat:2> . exists <nat:8> . exists <nat:4> . exists <nat:7> . repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 