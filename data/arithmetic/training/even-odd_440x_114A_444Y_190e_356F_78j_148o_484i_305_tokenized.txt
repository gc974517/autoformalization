\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:305> + <nat:440> \times <var:x> + <nat:114> \times <var:A> + <var:Y> \times <nat:444> + <nat:190> \times <var:e> + <nat:356> \times <var:F> + <nat:78> \times <var:j> + <var:o> \times <nat:148> + <nat:484> \times <var:i> $ must be odd with every natural numbers $ <var:x> $ , $ <var:Y> $ , $ <var:j> $ , $ <var:o> $ , $ <var:F> $ , $ <var:i> $ , $ <var:e> $ , and $ <var:A> $ . \end{theorem} \begin{proof} The coefficients $ <nat:114> $ , $ <nat:440> $ , $ <nat:148> $ , $ <nat:484> $ , $ <nat:356> $ , in addition to $ <nat:444> $ must be even Observe the number $ <nat:190> $ is guaranteed to be an even positive integer We know the leading term $ <nat:78> $ is an even natural Recall $ <nat:305> $ is trivially an odd whole number . Recall taking the product between even whole numbers must be even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:x> <var:Y> <var:j> <var:o> <var:F> <var:i> <var:e> <var:A> : nat , Nat . odd ( <nat:440> * <var:x> + <nat:114> * <var:A> + <nat:444> * <var:Y> + <nat:190> * <var:e> + <nat:356> * <var:F> + <nat:78> * <var:j> + <nat:148> * <var:o> + <nat:484> * <var:i> + <nat:305> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:114> = true ) . { auto . } assert ( <genH> : Nat . even <nat:440> = true ) . { auto . } assert ( <genH> : Nat . even <nat:148> = true ) . { auto . } assert ( <genH> : Nat . even <nat:484> = true ) . { auto . } assert ( <genH> : Nat . even <nat:356> = true ) . { auto . } assert ( <genH> : Nat . even <nat:444> = true ) . { auto . } assert ( <genH> : Nat . even <nat:190> = true ) . { auto . } assert ( <genH> : Nat . even <nat:78> = true ) . { auto . } assert ( <genH> : Nat . odd <nat:305> = true ) . { auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . repeat rewrite Nat . even_mul . rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 