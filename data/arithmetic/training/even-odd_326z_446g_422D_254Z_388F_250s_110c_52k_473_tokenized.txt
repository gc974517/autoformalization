\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:z> \times <nat:326> + <var:g> \times <nat:446> + <nat:473> + <nat:422> \times <var:D> + <nat:254> \times <var:Z> + <var:F> \times <nat:388> + <var:s> \times <nat:250> + <var:c> \times <nat:110> + <var:k> \times <nat:52> $ is guaranteed to be odd given some natural numbers $ <var:F> $ , $ <var:z> $ , $ <var:k> $ , $ <var:Z> $ , $ <var:s> $ , $ <var:g> $ , $ <var:c> $ , and $ <var:D> $ . \end{theorem} \begin{proof} Adding on , recall the coefficients $ <nat:326> $ , $ <nat:446> $ , $ <nat:422> $ , $ <nat:254> $ , $ <nat:388> $ , $ <nat:250> $ , $ <nat:110> $ , and moreover $ <nat:52> $ are known to be even . For this reason , the products $ <var:z> \cdot <nat:326> $ , $ <nat:446> \cdot <var:g> $ , $ <nat:422> \cdot <var:D> $ , $ <nat:254> \cdot <var:Z> $ , $ <var:F> \cdot <nat:388> $ , $ <nat:250> \cdot <var:s> $ , $ <var:c> \cdot <nat:110> $ , and moreover $ <nat:52> \cdot <var:k> $ will be even at the same time . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:F> <var:z> <var:k> <var:Z> <var:s> <var:g> <var:c> <var:D> : nat , Nat . odd ( <nat:326> * <var:z> + <nat:446> * <var:g> + <nat:422> * <var:D> + <nat:254> * <var:Z> + <nat:388> * <var:F> + <nat:250> * <var:s> + <nat:110> * <var:c> + <nat:52> * <var:k> + <nat:473> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:326> = true ) . { auto . } assert ( <genH> : Nat . even <nat:446> = true ) . { auto . } assert ( <genH> : Nat . even <nat:422> = true ) . { auto . } assert ( <genH> : Nat . even <nat:254> = true ) . { auto . } assert ( <genH> : Nat . even <nat:388> = true ) . { auto . } assert ( <genH> : Nat . even <nat:250> = true ) . { auto . } assert ( <genH> : Nat . even <nat:110> = true ) . { auto . } assert ( <genH> : Nat . even <nat:52> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:326> * <var:z> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:446> * <var:g> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:422> * <var:D> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:254> * <var:Z> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:388> * <var:F> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:250> * <var:s> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:110> * <var:c> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:52> * <var:k> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 