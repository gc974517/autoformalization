\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Let that $ <var:B> $ is a <def:five-composite> natural number granted that there exist some $ <var:Y> $ , $ <var:e> $ , $ <var:c> $ , $ <var:z> $ , $ <var:j> $ where $ <var:c> * <var:e> * <var:z> * <var:Y> * <var:j> = <var:B> $ assuming $ <var:B> \in \mathbb{N} $ and where $ <var:z> $ , $ <var:j> $ , $ <var:e> $ , $ <var:c> $ , $ <var:Y> \geq <nat:2> $ . For this reason $ <var:B> = <nat:11880> $ is <def:five-composite> . \end{theorem} \begin{proof} Recall that <nat:11880> is a <def:five-composite> number whenever <nat:11880> is the multiplication of whole numbers $ <var:e> $ , $ <var:z> $ , $ <var:j> $ , $ <var:c> $ and $ <var:Y> $ more than <nat:1> . Take $ <var:z> = <nat:9> $ , $ <var:Y> = <nat:10> $ , $ <var:j> = <nat:2> $ , $ <var:e> = <nat:11> $ , and $ <var:c> = <nat:6> $ . We confirm <nat:11880> is a <def:five-composite> integer because $ <nat:10> $ , $ <nat:2> $ , $ <nat:6> $ , $ <nat:9> $ , and $ <nat:11> > <nat:1> $ and on account of $ <nat:11880> = <var:c> * <var:Y> * <var:z> * <var:j> * <var:e> $ . Because of this , <nat:11880> is a <def:five-composite> number has been validated . Consequently , <nat:11880> is the multiplication of $ <var:c> $ , $ <var:j> $ , $ <var:e> $ , $ <var:z> $ , and $ <var:Y> \in \mathbb{N} $ plus $ <var:j> $ , $ <var:Y> $ , $ <var:z> $ , $ <var:e> $ and $ <var:c> > <nat:1> $ has been validated . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:five-composite> ( <var:B> : nat ) := exists <var:Y> <var:e> <var:c> <var:z> <var:j> : nat , ( <var:c> * <var:e> * <var:z> * <var:Y> * <var:j> = <var:B> ) /\ ( <var:z> >= <nat:2> ) /\ ( <var:j> >= <nat:2> ) /\ ( <var:e> >= <nat:2> ) /\ ( <var:c> >= <nat:2> ) /\ ( <var:Y> >= <nat:2> ) . Theorem <genP:1> : <def:five-composite> <nat:11880> . Proof . unfold <def:five-composite> . exists <nat:10> . exists <nat:11> . exists <nat:6> . exists <nat:9> . exists <nat:2> . assert ( <genH> : <nat:10> > <nat:1> ) . { lia . } assert ( <genH> : <nat:2> > <nat:1> ) . { lia . } assert ( <genH> : <nat:6> > <nat:1> ) . { lia . } assert ( <genH> : <nat:9> > <nat:1> ) . { lia . } assert ( <genH> : <nat:11> > <nat:1> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 