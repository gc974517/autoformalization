\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:59> + <nat:292> * <var:z> + <var:g> * <nat:474> + <nat:448> * <var:p> + <nat:6> * <var:l> + <nat:234> * <var:c> + <var:R> * <nat:330> $ is guaranteed to be odd . \end{theorem} \begin{proof} The expression $ <nat:292> * <var:z> + <var:c> * <nat:234> + <nat:330> * <var:R> + <nat:6> * <var:l> + <var:p> * <nat:448> + <nat:474> * <var:g> $ is trivially even . The number $ <nat:6> $ is guaranteed to be an even number in $ \mathbb{N} $ . Consequently , the product $ <var:l> * <nat:6> $ must be even also . The number $ <nat:330> $ is clearly an even natural . In consequence , $ <var:R> * <nat:330> $ must be even also . Building on , the number $ <nat:292> $ is guaranteed to be an even number in $ \mathbb{Z}^+ $ . In consequence , the term $ <nat:292> * <var:z> $ is even as well . Further , the pair $ <var:p> * <nat:448> $ is clearly even by reason that the whole number $ <nat:448> $ is known as even . The positive integer $ <nat:234> $ is trivially an even element of $ \mathbb{Z}^+ $ . Therefore , the pair $ <nat:234> * <var:c> $ must be even as well . Furthermore , the term $ <var:g> * <nat:474> $ is trivially even from the knowledge multiplying between an even element of $ \mathbb{Z}^+ $ with some positive integer is guaranteed to be obviously an even natural number , which is true as a consequence that the number $ <nat:474> $ is clearly even . From the knowledge the summing between an even natural with even positive integers will be even , our result is true . The summing between an even positive integer and an odd positive integer will be an odd number . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:z> <var:g> <var:p> <var:l> <var:c> <var:R> : nat , Nat . odd ( <nat:292> * <var:z> + <nat:474> * <var:g> + <nat:448> * <var:p> + <nat:6> * <var:l> + <nat:234> * <var:c> + <nat:330> * <var:R> + <nat:59> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:6> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:6> * <var:l> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:330> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:330> * <var:R> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:292> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:292> * <var:z> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:448> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:448> * <var:p> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:234> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:234> * <var:c> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:474> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:474> * <var:g> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:292> * <var:z> + <nat:474> * <var:g> + <nat:448> * <var:p> + <nat:6> * <var:l> + <nat:234> * <var:c> + <nat:330> * <var:R> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . auto . Qed . 