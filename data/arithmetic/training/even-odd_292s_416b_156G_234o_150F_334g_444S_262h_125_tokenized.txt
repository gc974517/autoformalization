\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:s> * <nat:292> + <var:b> * <nat:416> + <nat:156> * <var:G> + <nat:125> + <nat:234> * <var:o> + <nat:150> * <var:F> + <nat:334> * <var:g> + <nat:444> * <var:S> + <var:h> * <nat:262> $ is guaranteed to be odd given natural numbers $ <var:S> $ , $ <var:s> $ , $ <var:G> $ , $ <var:b> $ , $ <var:F> $ , $ <var:o> $ , $ <var:g> $ , and $ <var:h> $ . \end{theorem} \begin{proof} Remember that the products $ <nat:150> <var:F> $ , $ <var:S> <nat:444> $ , $ <nat:262> <var:h> $ , $ <var:o> <nat:234> $ , in addition to $ <var:G> <nat:156> $ are known to be even elements of $ \mathbb{N} $ by reason that taking the product between an even number with an arbitrary number in $ \mathbb{Z}^+ $ will be an even positive integer . Further , take note that the terms $ <var:g> <nat:334> $ and also $ <nat:416> <var:b> $ are obviously even numbers . In addition , remember that the product $ <var:s> <nat:292> $ is known to be an even natural . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:S> <var:s> <var:G> <var:b> <var:F> <var:o> <var:g> <var:h> : nat , Nat . odd ( <nat:292> * <var:s> + <nat:416> * <var:b> + <nat:156> * <var:G> + <nat:234> * <var:o> + <nat:150> * <var:F> + <nat:334> * <var:g> + <nat:444> * <var:S> + <nat:262> * <var:h> + <nat:125> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:150> * <var:F> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:444> * <var:S> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:262> * <var:h> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:234> * <var:o> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:156> * <var:G> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:334> * <var:g> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:416> * <var:b> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:292> * <var:s> ) = true ) . { rewrite Nat . even_mul . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 