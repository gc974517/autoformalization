\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:472> * <var:Y> + <var:h> * <nat:168> + <nat:382> * <var:L> + <nat:334> * <var:K> + <nat:361> + <var:J> * <nat:226> + <nat:156> * <var:E> + <var:p> * <nat:128> + <var:g> * <nat:84> $ must be odd . \end{theorem} \begin{proof} The totaling of even elements of $ \mathbb{N} $ successively and an odd number in $ \mathbb{Z}^+ $ is guaranteed to be an odd element of $ \mathbb{N} $ . Observe the terms $ <var:K> \times <nat:334> $ , $ <nat:168> \times <var:h> $ , $ <var:E> \times <nat:156> $ , and also $ <var:Y> \times <nat:472> $ are obviously even elements of $ \mathbb{N} $ . The pairs $ <nat:84> \times <var:g> $ , $ <var:p> \times <nat:128> $ , and moreover $ <var:L> \times <nat:382> $ are guaranteed to be even . The product $ <var:J> \times <nat:226> $ is known to be an even natural number because multiplying between an even whole number with any natural will be even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:Y> <var:h> <var:L> <var:K> <var:J> <var:E> <var:p> <var:g> : nat , Nat . odd ( <nat:472> * <var:Y> + <nat:168> * <var:h> + <nat:382> * <var:L> + <nat:334> * <var:K> + <nat:226> * <var:J> + <nat:156> * <var:E> + <nat:128> * <var:p> + <nat:84> * <var:g> + <nat:361> ) = true . Proof . intros . rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . assert ( <genH> : Nat . even ( <nat:334> * <var:K> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:168> * <var:h> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:156> * <var:E> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:472> * <var:Y> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:84> * <var:g> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:128> * <var:p> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:382> * <var:L> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:226> * <var:J> ) = true ) . { rewrite Nat . even_mul . auto . } rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 