\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \newtheorem{definition}{Definition} \begin{document} \begin{definition} Assuming there are whole numbers $ <var:U> $ , $ <var:j> $ , $ <var:N> $ , $ <var:L> $ , $ <var:c> $ , $ <var:J> $ , $ <var:R> $ let that some positive integer $ <var:g> $ is a <def:seven-composite> natural number assuming $ <var:g> = <var:U> * <var:N> * <var:J> * <var:c> * <var:j> * <var:R> * <var:L> $ and unique factors are larger than or equivalent to <nat:2> . \end{definition} \begin{theorem} $ <var:g> = <nat:604800> $ is a <def:seven-composite> natural number . \end{theorem} \begin{proof} Note that $ <nat:604800> = <var:R> \cdot <var:c> \cdot <var:L> \cdot <var:J> \cdot <var:j> \cdot <var:N> \cdot <var:U> $ produces $ <var:L> = <nat:8> $ , $ <var:U> = <nat:3> $ , $ <var:N> = <nat:5> $ , $ <var:J> = <nat:12> $ , $ <var:c> = <nat:6> $ , $ <var:j> = <nat:10> $ , and $ <var:R> = <nat:7> $ . Plus observe that $ <nat:8> $ , $ <nat:5> $ , $ <nat:3> $ , $ <nat:10> $ , $ <nat:6> $ , $ <nat:7> $ and $ <nat:12> \geq <nat:2> $ . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:seven-composite> ( <var:g> : nat ) := exists <var:U> <var:j> <var:N> <var:L> <var:c> <var:J> <var:R> : nat , ( <var:g> = <var:U> * <var:N> * <var:J> * <var:c> * <var:j> * <var:R> * <var:L> ) /\ ( <var:U> >= <nat:2> ) /\ ( <var:j> >= <nat:2> ) /\ ( <var:N> >= <nat:2> ) /\ ( <var:L> >= <nat:2> ) /\ ( <var:c> >= <nat:2> ) /\ ( <var:J> >= <nat:2> ) /\ ( <var:R> >= <nat:2> ) . Theorem <genP:1> : <def:seven-composite> <nat:604800> . Proof . unfold <def:seven-composite> . exists <nat:3> . exists <nat:10> . exists <nat:5> . exists <nat:8> . exists <nat:6> . exists <nat:12> . exists <nat:7> . assert ( <genH> : <nat:8> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:5> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:3> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:10> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:6> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:7> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:12> >= <nat:2> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 