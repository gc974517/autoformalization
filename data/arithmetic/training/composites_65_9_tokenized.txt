\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:31933440> $ equals $ <var:Z> * <var:g> * <var:Y> * <var:f> * <var:O> * <var:P> * <var:y> * <var:N> * <var:u> $ such that $ <var:f> $ , $ <var:u> $ , $ <var:O> $ , $ <var:Z> $ , $ <var:Y> $ , $ <var:N> $ , $ <var:P> $ , $ <var:g> $ , and $ <var:y> $ more than or equal to <nat:2> . \end{theorem} \begin{proof} Allow $ <var:f> = <nat:9> $ , $ <var:P> = <nat:7> $ , $ <var:O> = <nat:8> $ , $ <var:Z> = <nat:12> $ , $ <var:N> = <nat:11> $ , $ <var:Y> = <nat:6> $ , $ <var:u> = <nat:2> $ , $ <var:y> = <nat:4> $ and $ <var:g> = <nat:10> $ . We demonstrate our claim holds as $ <nat:7> $ , $ <nat:6> $ , $ <nat:4> $ , $ <nat:10> $ , $ <nat:8> $ , $ <nat:9> $ , $ <nat:12> $ , $ <nat:2> $ and $ <nat:11> \geq <nat:2> $ as well as $ <nat:31933440> = <var:Z> \times <var:f> \times <var:O> \times <var:N> \times <var:g> \times <var:u> \times <var:P> \times <var:Y> \times <var:y> $ . Thus , <nat:31933440> is the multiplication of some $ <var:N> $ , $ <var:Y> $ , $ <var:f> $ , $ <var:P> $ , $ <var:u> $ , $ <var:O> $ , $ <var:g> $ , $ <var:y> $ , and $ <var:Z> $ has been validated . \end{proof} \end{document} 
~
Require Import Lia . Theorem <genP:1> : exists <var:N> <var:Y> <var:O> <var:f> <var:P> <var:g> <var:Z> <var:y> <var:u> : nat , ( <nat:31933440> = <var:Z> * <var:g> * <var:Y> * <var:f> * <var:O> * <var:P> * <var:y> * <var:N> * <var:u> ) /\ ( <var:f> >= <nat:2> ) /\ ( <var:u> >= <nat:2> ) /\ ( <var:O> >= <nat:2> ) /\ ( <var:Z> >= <nat:2> ) /\ ( <var:Y> >= <nat:2> ) /\ ( <var:N> >= <nat:2> ) /\ ( <var:P> >= <nat:2> ) /\ ( <var:g> >= <nat:2> ) /\ ( <var:y> >= <nat:2> ) . Proof . exists <nat:11> . exists <nat:6> . exists <nat:8> . exists <nat:9> . exists <nat:7> . exists <nat:10> . exists <nat:12> . exists <nat:4> . exists <nat:2> . assert ( <genH> : <nat:7> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:6> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:4> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:10> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:8> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:9> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:12> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:2> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:11> >= <nat:2> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 