\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \newtheorem{definition}{Definition} \begin{document} \begin{definition} We define that $ <var:m> $ is a <def:nine-composite> natural number supposing $ \exists <var:y> $ , $ <var:X> $ , $ <var:i> $ , $ <var:f> $ , $ <var:K> $ , $ <var:a> $ , $ <var:x> $ , $ <var:g> $ , $ <var:H> \in \mathbb{N} $ satisfying the condition that satisfying the condition that $ <var:K> $ , $ <var:H> $ , $ <var:a> $ , $ <var:i> $ , $ <var:X> $ , $ <var:f> $ , $ <var:x> $ , $ <var:g> $ and $ <var:y> > <nat:1> $ and with some positive integer $ <var:m> $ , $ <var:a> * <var:H> * <var:K> * <var:x> * <var:f> * <var:X> * <var:i> * <var:y> * <var:g> = <var:m> $ . \end{definition} \begin{theorem} The number <nat:39916800> is a <def:nine-composite> positive integer . \end{theorem} \begin{proof} Note that $ <nat:6> $ , $ <nat:10> $ , $ <nat:12> $ , $ <nat:7> $ , $ <nat:8> $ , $ <nat:5> $ , $ <nat:11> $ , $ <nat:9> $ , and $ <nat:2> $ are larger than <nat:1> . In addition note that additionally $ <var:y> \times <var:H> \times <var:a> \times <var:X> \times <var:K> \times <var:f> \times <var:i> \times <var:g> \times <var:x> = <nat:39916800> $ implies $ <var:K> = <nat:5> $ , $ <var:i> = <nat:9> $ , $ <var:y> = <nat:7> $ , $ <var:X> = <nat:10> $ , $ <var:x> = <nat:12> $ , $ <var:g> = <nat:2> $ , $ <var:f> = <nat:8> $ , $ <var:H> = <nat:6> $ , and $ <var:a> = <nat:11> $ . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:nine-composite> ( <var:m> : nat ) := exists <var:y> <var:X> <var:i> <var:f> <var:K> <var:a> <var:x> <var:g> <var:H> : nat , ( <var:K> > <nat:1> ) /\ ( <var:H> > <nat:1> ) /\ ( <var:a> > <nat:1> ) /\ ( <var:i> > <nat:1> ) /\ ( <var:X> > <nat:1> ) /\ ( <var:f> > <nat:1> ) /\ ( <var:x> > <nat:1> ) /\ ( <var:g> > <nat:1> ) /\ ( <var:y> > <nat:1> ) /\ ( <var:a> * <var:H> * <var:K> * <var:x> * <var:f> * <var:X> * <var:i> * <var:y> * <var:g> = <var:m> ) . Theorem <genP:1> : <def:nine-composite> <nat:39916800> . Proof . unfold <def:nine-composite> . assert ( <genH> : <nat:6> > <nat:1> ) . { lia . } assert ( <genH> : <nat:10> > <nat:1> ) . { lia . } assert ( <genH> : <nat:12> > <nat:1> ) . { lia . } assert ( <genH> : <nat:7> > <nat:1> ) . { lia . } assert ( <genH> : <nat:8> > <nat:1> ) . { lia . } assert ( <genH> : <nat:5> > <nat:1> ) . { lia . } assert ( <genH> : <nat:11> > <nat:1> ) . { lia . } assert ( <genH> : <nat:9> > <nat:1> ) . { lia . } assert ( <genH> : <nat:2> > <nat:1> ) . { lia . } exists <nat:7> . exists <nat:10> . exists <nat:9> . exists <nat:8> . exists <nat:5> . exists <nat:11> . exists <nat:12> . exists <nat:2> . exists <nat:6> . repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 