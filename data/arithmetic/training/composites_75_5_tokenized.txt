\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \newtheorem{definition}{Definition} \begin{document} \begin{definition} We claim that $ <var:N> $ is a <def:five-composite> natural number supposing that there are some integers $ <var:r> $ , $ <var:S> $ , $ <var:e> $ , $ <var:k> $ , $ <var:H> $ satisfying the condition that such that $ <var:k> $ , $ <var:r> $ , $ <var:S> $ , $ <var:H> $ , and $ <var:e> > <nat:1> $ and using some number $ <var:N> $ , $ <var:N> = <var:e> * <var:r> * <var:S> * <var:k> * <var:H> $ . \end{definition} \begin{theorem} $ <nat:2400> = <var:N> $ is a <def:five-composite> integer . \end{theorem} \begin{proof} Remember <nat:2400> is a <def:five-composite> whole number with the condition that <nat:2400> is the product between numbers $ <var:S> $ , $ <var:r> $ , $ <var:H> $ , $ <var:e> $ , and $ <var:k> $ satisfying the condition that $ <var:e> $ , $ <var:r> $ , $ <var:S> $ , $ <var:k> $ , $ <var:H> > <nat:1> $ . We demonstrate our statement is true for $ <var:H> \cdot <var:S> \cdot <var:r> \cdot <var:e> \cdot <var:k> = <nat:2400> $ produces $ <var:H> = <nat:2> $ , $ <var:e> = <nat:4> $ , $ <var:k> = <nat:6> $ , $ <var:r> = <nat:5> $ and $ <var:S> = <nat:10> $ as well as in consideration of $ <nat:10> $ , $ <nat:4> $ , $ <nat:6> $ , $ <nat:5> $ , $ <nat:2> > <nat:1> $ . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:five-composite> ( <var:N> : nat ) := exists <var:r> <var:S> <var:e> <var:k> <var:H> : nat , ( <var:k> > <nat:1> ) /\ ( <var:r> > <nat:1> ) /\ ( <var:S> > <nat:1> ) /\ ( <var:H> > <nat:1> ) /\ ( <var:e> > <nat:1> ) /\ ( <var:N> = <var:e> * <var:r> * <var:S> * <var:k> * <var:H> ) . Theorem <genP:1> : <def:five-composite> <nat:2400> . Proof . unfold <def:five-composite> . exists <nat:5> . exists <nat:10> . exists <nat:4> . exists <nat:6> . exists <nat:2> . assert ( <genH> : <nat:10> > <nat:1> ) . { lia . } assert ( <genH> : <nat:4> > <nat:1> ) . { lia . } assert ( <genH> : <nat:6> > <nat:1> ) . { lia . } assert ( <genH> : <nat:5> > <nat:1> ) . { lia . } assert ( <genH> : <nat:2> > <nat:1> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 