\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:310> <var:e> + <nat:410> <var:K> + <nat:428> <var:r> + <var:J> <nat:86> + <nat:298> <var:B> + <nat:280> <var:p> + <var:S> <nat:418> + <nat:51> + <var:w> <nat:74> $ is odd . \end{theorem} \begin{proof} The terms $ <var:e> * <nat:310> $ , $ <nat:418> * <var:S> $ , and likewise $ <nat:86> * <var:J> $ are known to be even . Recall the pairs $ <var:B> * <nat:298> $ and also $ <var:w> * <nat:74> $ will be even . This is true as a consequence that the multiplication of an even number in $ \mathbb{Z}^+ $ and an arbitrary number will be itself an even integer . Likewise , the term $ <nat:280> * <var:p> $ is known to be an even positive integer from the fact taking the product of an even number in $ \mathbb{N} $ and any natural number is an even number . The product $ <nat:410> * <var:K> $ is trivially even . This fact holds from the fact the product of an even positive integer and a number is clearly an even integer . The term $ <var:r> * <nat:428> $ is known to be an even number in $ \mathbb{Z}^+ $ . This fact is true since the multiplication between an even positive integer and a element of $ \mathbb{N} $ is even . We verify the summation $ <nat:418> \cdot <var:S> + <nat:280> \cdot <var:p> + <var:w> \cdot <nat:74> + <var:J> \cdot <nat:86> + <nat:428> \cdot <var:r> + <var:e> \cdot <nat:310> + <nat:51> + <var:B> \cdot <nat:298> + <var:K> \cdot <nat:410> $ will be odd . Notice that $ <nat:51> $ is clearly an odd number in $ \mathbb{N} $ . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:e> <var:K> <var:r> <var:J> <var:B> <var:p> <var:S> <var:w> : nat , Nat . odd ( <nat:310> * <var:e> + <nat:410> * <var:K> + <nat:428> * <var:r> + <nat:86> * <var:J> + <nat:298> * <var:B> + <nat:280> * <var:p> + <nat:418> * <var:S> + <nat:74> * <var:w> + <nat:51> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:310> * <var:e> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:418> * <var:S> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:86> * <var:J> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:298> * <var:B> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:74> * <var:w> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:280> * <var:p> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:410> * <var:K> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:428> * <var:r> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . odd <nat:51> = true ) . { auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 