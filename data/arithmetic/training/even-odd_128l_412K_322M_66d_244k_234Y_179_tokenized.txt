\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:179> + <nat:128> * <var:l> + <var:K> * <nat:412> + <nat:322> * <var:M> + <nat:66> * <var:d> + <nat:244> * <var:k> + <nat:234> * <var:Y> $ will be odd . \end{theorem} \begin{proof} We know the summation between an even number in $ \mathbb{Z}^+ $ and an odd integer is odd . Remember $ <nat:179> $ is guaranteed to be an odd natural . Observe the products $ <var:l> \cdot <nat:128> $ , $ <nat:412> \cdot <var:K> $ , $ <var:M> \cdot <nat:322> $ , $ <var:d> \cdot <nat:66> $ , $ <var:k> \cdot <nat:244> $ , and moreover $ <var:Y> \cdot <nat:234> $ are known as even numbers as a consequence that the coefficients $ <nat:128> $ , $ <nat:412> $ , $ <nat:322> $ , $ <nat:66> $ , $ <nat:244> $ , and moreover $ <nat:234> $ are even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:l> <var:K> <var:M> <var:d> <var:k> <var:Y> : nat , Nat . odd ( <nat:128> * <var:l> + <nat:412> * <var:K> + <nat:322> * <var:M> + <nat:66> * <var:d> + <nat:244> * <var:k> + <nat:234> * <var:Y> + <nat:179> ) = true . Proof . intros . rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . assert ( <genH> : Nat . odd <nat:179> = true ) . { auto . } assert ( <genH> : Nat . even <nat:128> = true ) . { auto . } assert ( <genH> : Nat . even <nat:412> = true ) . { auto . } assert ( <genH> : Nat . even <nat:322> = true ) . { auto . } assert ( <genH> : Nat . even <nat:66> = true ) . { auto . } assert ( <genH> : Nat . even <nat:244> = true ) . { auto . } assert ( <genH> : Nat . even <nat:234> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:128> * <var:l> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:412> * <var:K> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:322> * <var:M> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:66> * <var:d> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:244> * <var:k> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:234> * <var:Y> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 