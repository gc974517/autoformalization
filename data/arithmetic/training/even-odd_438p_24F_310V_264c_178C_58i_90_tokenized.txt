\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:178> * <var:C> + <var:c> * <nat:264> + <var:p> * <nat:438> + <nat:90> + <var:F> * <nat:24> + <var:V> * <nat:310> + <nat:58> * <var:i> $ must be even . \end{theorem} \begin{proof} Observe that the natural number $ <nat:438> $ is known to be even . Therefore , the product $ <nat:438> * <var:p> $ is even too . Adding on , the natural number $ <nat:24> $ is clearly even . For this reason , the product $ <nat:24> * <var:F> $ is guaranteed to be even at the same time . In addition , the leading term $ <nat:310> $ is trivially even . Accordingly , the product $ <var:V> * <nat:310> $ is even as well . The pair $ <var:c> * <nat:264> $ is obviously even because the positive integer $ <nat:264> $ is guaranteed to be an even number in $ \mathbb{N} $ . Recall that the coefficient $ <nat:178> $ is known as an even natural . Thus , $ <nat:178> * <var:C> $ must be even too . Further , the product $ <var:i> * <nat:58> $ is even . This claim holds from the fact the integer $ <nat:58> $ is trivially an even natural . We check our theorem is proven . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:C> <var:c> <var:p> <var:F> <var:V> <var:i> : nat , Nat . even ( <nat:178> * <var:C> + <nat:264> * <var:c> + <nat:438> * <var:p> + <nat:24> * <var:F> + <nat:310> * <var:V> + <nat:58> * <var:i> + <nat:90> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:438> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:438> * <var:p> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:24> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:24> * <var:F> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:310> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:310> * <var:V> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:264> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:264> * <var:c> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:178> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:178> * <var:C> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:58> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:58> * <var:i> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 