\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \newtheorem{definition}{Definition} \begin{document} \begin{definition} There are numbers $ <var:h> $ , $ <var:i> $ , $ <var:F> $ , $ <var:H> $ , $ <var:X> $ , $ <var:N> $ , $ <var:q> $ larger than or equivalent to <nat:2> . Define that $ <var:u> \in \mathbb{N} $ will be a <def:seven-composite> natural number given $ <var:h> * <var:F> * <var:N> * <var:q> * <var:i> * <var:X> * <var:H> = <var:u> $ . \end{definition} \begin{theorem} The number <nat:166320> is a <def:seven-composite> integer . \end{theorem} \begin{proof} Recall that a <def:seven-composite> integer is the product between $ <var:i> $ , $ <var:h> $ , $ <var:H> $ , $ <var:F> $ , $ <var:N> $ , $ <var:q> $ , and $ <var:X> $ so that $ <var:i> $ , $ <var:N> $ , $ <var:F> $ , $ <var:h> $ , $ <var:q> $ , $ <var:X> $ and $ <var:H> \geq <nat:2> $ . Observe that $ <nat:9> $ , $ <nat:5> $ , $ <nat:7> $ , $ <nat:2> $ , $ <nat:11> $ , $ <nat:4> $ and $ <nat:6> $ are greater than or equal to <nat:2> . What's more observe as well $ <nat:166320> = <var:i> * <var:F> * <var:N> * <var:q> * <var:X> * <var:h> * <var:H> = <nat:4> * <nat:7> * <nat:9> * <nat:5> * <nat:6> * <nat:11> * <nat:2> $ . This shows our formula holds . Because of this , <nat:166320> is a <def:seven-composite> integer is validated . As a result , $ <var:H> * <var:i> * <var:q> * <var:N> * <var:X> * <var:F> * <var:h> = <nat:166320> $ has been validated . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:seven-composite> ( <var:u> : nat ) := exists <var:h> <var:i> <var:F> <var:H> <var:X> <var:N> <var:q> : nat , ( <var:h> >= <nat:2> ) /\ ( <var:i> >= <nat:2> ) /\ ( <var:F> >= <nat:2> ) /\ ( <var:H> >= <nat:2> ) /\ ( <var:X> >= <nat:2> ) /\ ( <var:N> >= <nat:2> ) /\ ( <var:q> >= <nat:2> ) /\ ( <var:h> * <var:F> * <var:N> * <var:q> * <var:i> * <var:X> * <var:H> = <var:u> ) . Theorem <genP:1> : <def:seven-composite> <nat:166320> . Proof . unfold <def:seven-composite> . assert ( <genH> : <nat:9> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:5> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:7> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:2> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:11> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:4> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:6> >= <nat:2> ) . { lia . } exists <nat:11> . exists <nat:4> . exists <nat:7> . exists <nat:2> . exists <nat:6> . exists <nat:9> . exists <nat:5> . repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 