\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:94> \times <var:H> + <nat:296> \times <var:o> + <var:U> \times <nat:482> + <nat:265> + <var:w> \times <nat:164> + <nat:74> \times <var:z> + <var:n> \times <nat:40> + <nat:352> \times <var:Y> + <nat:218> \times <var:r> $ must be odd with all natural terms $ <var:r> $ , $ <var:o> $ , $ <var:U> $ , $ <var:z> $ , $ <var:Y> $ , $ <var:H> $ , $ <var:n> $ , and $ <var:w> $ . \end{theorem} \begin{proof} Notice that the numbers $ <nat:352> $ , $ <nat:40> $ , $ <nat:74> $ , $ <nat:94> $ , $ <nat:164> $ , and $ <nat:296> $ must be even integers The positive integer $ <nat:482> $ is trivially an even natural number In addition to this , we know that the leading term $ <nat:218> $ is even The summing between even positive integers with an odd natural number is guaranteed to be odd . Hence , this lemma must be true . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:r> <var:o> <var:U> <var:z> <var:Y> <var:H> <var:n> <var:w> : nat , Nat . odd ( <nat:94> * <var:H> + <nat:296> * <var:o> + <nat:482> * <var:U> + <nat:164> * <var:w> + <nat:74> * <var:z> + <nat:40> * <var:n> + <nat:352> * <var:Y> + <nat:218> * <var:r> + <nat:265> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:352> = true ) . { auto . } assert ( <genH> : Nat . even <nat:40> = true ) . { auto . } assert ( <genH> : Nat . even <nat:74> = true ) . { auto . } assert ( <genH> : Nat . even <nat:94> = true ) . { auto . } assert ( <genH> : Nat . even <nat:164> = true ) . { auto . } assert ( <genH> : Nat . even <nat:296> = true ) . { auto . } assert ( <genH> : Nat . even <nat:482> = true ) . { auto . } assert ( <genH> : Nat . even <nat:218> = true ) . { auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . repeat rewrite Nat . even_mul . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 