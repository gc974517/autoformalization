\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Given every integers $ <var:Y> $ , $ <var:X> $ , $ <var:K> $ , $ <var:y> $ , $ <var:b> $ , $ <var:W> $ , $ <var:B> $ , and $ <var:s> $ $ <nat:294> \times <var:s> + <nat:144> + <var:B> \times <nat:260> + <var:y> \times <nat:186> + <var:Y> \times <nat:40> + <nat:196> \times <var:K> + <var:b> \times <nat:64> + <nat:106> \times <var:X> + <nat:76> \times <var:W> $ is guaranteed to be even . \end{theorem} \begin{proof} Observe the multiplication between an even number in $ \mathbb{Z}^+ $ with an arbitrary whole number must be clearly an even positive integer . The coefficients $ <nat:106> $ , $ <nat:64> $ , and likewise $ <nat:260> $ are clearly even See the integers $ <nat:76> $ , $ <nat:186> $ , $ <nat:40> $ , in addition to $ <nat:294> $ are obviously even Likewise , the whole number $ <nat:196> $ is known to be an even number in $ \mathbb{Z}^+ $ It can be justified that the formula $ <nat:294> <var:s> + <var:b> <nat:64> + <var:X> <nat:106> + <nat:186> <var:y> + <nat:40> <var:Y> + <nat:260> <var:B> + <var:W> <nat:76> + <nat:144> + <var:K> <nat:196> $ must be even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:Y> <var:X> <var:K> <var:y> <var:b> <var:W> <var:B> <var:s> : nat , Nat . even ( <nat:294> * <var:s> + <nat:260> * <var:B> + <nat:186> * <var:y> + <nat:40> * <var:Y> + <nat:196> * <var:K> + <nat:64> * <var:b> + <nat:106> * <var:X> + <nat:76> * <var:W> + <nat:144> ) = true . Proof . intros . repeat rewrite Nat . even_add . repeat rewrite Nat . even_mul . assert ( <genH> : Nat . even <nat:106> = true ) . { auto . } assert ( <genH> : Nat . even <nat:64> = true ) . { auto . } assert ( <genH> : Nat . even <nat:260> = true ) . { auto . } assert ( <genH> : Nat . even <nat:76> = true ) . { auto . } assert ( <genH> : Nat . even <nat:186> = true ) . { auto . } assert ( <genH> : Nat . even <nat:40> = true ) . { auto . } assert ( <genH> : Nat . even <nat:294> = true ) . { auto . } assert ( <genH> : Nat . even <nat:196> = true ) . { auto . } repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 