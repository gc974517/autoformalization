\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Allow $ <var:d> $ , $ <var:F> $ , $ <var:g> $ , $ <var:l> $ , $ <var:q> $ , $ <var:S> $ , $ <var:t> $ , $ <var:P> $ , and $ <var:y> $ as integers satisfying the condition that $ <var:S> $ , $ <var:y> $ , $ <var:l> $ , $ <var:d> $ , $ <var:P> $ , $ <var:g> $ , $ <var:F> $ , $ <var:q> $ and $ <var:t> > <nat:1> $ plus such that the integer <nat:14968800> is the product between integers $ <var:d> $ , $ <var:F> $ , $ <var:g> $ , $ <var:l> $ , $ <var:q> $ , $ <var:S> $ , $ <var:t> $ , $ <var:P> $ and $ <var:y> $ . \end{theorem} \begin{proof} Take $ <var:g> = <nat:11> $ , $ <var:l> = <nat:2> $ , $ <var:q> = <nat:6> $ , $ <var:S> = <nat:10> $ , $ <var:P> = <nat:12> $ , $ <var:t> = <nat:9> $ , $ <var:y> = <nat:3> $ , $ <var:F> = <nat:5> $ , $ <var:d> = <nat:7> $ . We confirm the proposition is valid as $ <nat:14968800> = <var:t> \times <var:q> \times <var:F> \times <var:P> \times <var:y> \times <var:g> \times <var:l> \times <var:S> \times <var:d> $ plus by reason of $ <var:t> = <nat:9> $ , $ <var:l> = <nat:2> $ , $ <var:S> = <nat:10> $ , $ <var:q> = <nat:6> $ , $ <var:y> = <nat:3> $ , $ <var:d> = <nat:7> $ , $ <var:F> = <nat:5> $ , $ <var:g> = <nat:11> $ , $ <var:P> = <nat:12> > <nat:1> $ . \end{proof} \end{document} 
~
Require Import Lia . Theorem <genP:1> : exists <var:d> <var:F> <var:g> <var:l> <var:q> <var:S> <var:t> <var:P> <var:y> : nat , ( <var:S> > <nat:1> ) /\ ( <var:y> > <nat:1> ) /\ ( <var:l> > <nat:1> ) /\ ( <var:d> > <nat:1> ) /\ ( <var:P> > <nat:1> ) /\ ( <var:g> > <nat:1> ) /\ ( <var:F> > <nat:1> ) /\ ( <var:q> > <nat:1> ) /\ ( <var:t> > <nat:1> ) /\ ( <nat:14968800> = <var:d> * <var:F> * <var:g> * <var:l> * <var:q> * <var:S> * <var:t> * <var:P> * <var:y> ) . Proof . exists <nat:7> . exists <nat:5> . exists <nat:11> . exists <nat:2> . exists <nat:6> . exists <nat:10> . exists <nat:9> . exists <nat:12> . exists <nat:3> . assert ( <genH> : <nat:9> > <nat:1> ) . { lia . } assert ( <genH> : <nat:2> > <nat:1> ) . { lia . } assert ( <genH> : <nat:10> > <nat:1> ) . { lia . } assert ( <genH> : <nat:6> > <nat:1> ) . { lia . } assert ( <genH> : <nat:3> > <nat:1> ) . { lia . } assert ( <genH> : <nat:7> > <nat:1> ) . { lia . } assert ( <genH> : <nat:5> > <nat:1> ) . { lia . } assert ( <genH> : <nat:11> > <nat:1> ) . { lia . } assert ( <genH> : <nat:12> > <nat:1> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 