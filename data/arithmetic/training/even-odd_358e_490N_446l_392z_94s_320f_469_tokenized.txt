\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:490> \times <var:N> + <var:z> \times <nat:392> + <nat:446> \times <var:l> + <var:f> \times <nat:320> + <var:s> \times <nat:94> + <nat:358> \times <var:e> + <nat:469> $ is guaranteed to be odd . \end{theorem} \begin{proof} Our result is proven by reason that $ <nat:358> * <var:e> + <nat:446> * <var:l> + <nat:94> * <var:s> + <nat:490> * <var:N> + <var:f> * <nat:320> + <nat:392> * <var:z> $ is clearly even . The whole numbers $ <nat:94> $ , $ <nat:358> $ , plus $ <nat:446> $ are known to be even integers Further , the positive integers $ <nat:320> $ in addition to $ <nat:392> $ are even whole numbers What's more , the integer $ <nat:490> $ is clearly an even number The expression $ <nat:358> <var:e> + <nat:490> <var:N> + <var:l> <nat:446> + <var:z> <nat:392> + <nat:94> <var:s> + <nat:320> <var:f> $ is by its very nature even by reason that the adding of an even natural number and even elements of $ \mathbb{Z}^+ $ will be an even number in $ \mathbb{N} $ . Recall that $ <nat:469> $ is guaranteed to be odd . The addition between an even number in $ \mathbb{N} $ with an odd number must be instrinsically an odd integer . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:N> <var:z> <var:l> <var:f> <var:s> <var:e> : nat , Nat . odd ( <nat:490> * <var:N> + <nat:392> * <var:z> + <nat:446> * <var:l> + <nat:320> * <var:f> + <nat:94> * <var:s> + <nat:358> * <var:e> + <nat:469> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:94> = true ) . { auto . } assert ( <genH> : Nat . even <nat:358> = true ) . { auto . } assert ( <genH> : Nat . even <nat:446> = true ) . { auto . } assert ( <genH> : Nat . even <nat:320> = true ) . { auto . } assert ( <genH> : Nat . even <nat:392> = true ) . { auto . } assert ( <genH> : Nat . even <nat:490> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:490> * <var:N> + <nat:392> * <var:z> + <nat:446> * <var:l> + <nat:320> * <var:f> + <nat:94> * <var:s> + <nat:358> * <var:e> ) = true ) . { repeat rewrite Nat . even_add . repeat rewrite Nat . even_mul . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } assert ( <genH> : Nat . odd <nat:469> = true ) . { auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . rewrite <genH> . auto . Qed . 