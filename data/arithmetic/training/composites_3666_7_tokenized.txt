\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \newtheorem{definition}{Definition} \begin{document} \begin{definition} We define that $ <var:A> $ is a <def:seven-composite> integer when assuming some whole numbers $ <var:X> $ , $ <var:W> $ , $ <var:k> $ , $ <var:o> $ , $ <var:J> $ , $ <var:T> $ , $ <var:x> $ we have $ <var:X> * <var:T> * <var:x> * <var:k> * <var:o> * <var:W> * <var:J> = <var:A> $ assuming some integer $ <var:A> $ as well as satisfying the condition that $ <var:k> $ , $ <var:x> $ , $ <var:T> $ , $ <var:X> $ , $ <var:J> $ , $ <var:W> $ , and $ <var:o> \geq <nat:2> $ . \end{definition} \begin{theorem} $ <nat:316800> = <var:A> $ is a <def:seven-composite> integer . \end{theorem} \begin{proof} Let $ <var:J> = <nat:2> $ , $ <var:W> = <nat:11> $ , $ <var:X> = <nat:8> $ , $ <var:x> = <nat:5> $ , $ <var:T> = <nat:12> $ , $ <var:k> = <nat:3> $ , $ <var:o> = <nat:10> $ . Note $ <nat:11> $ , $ <nat:3> $ , $ <nat:12> $ , $ <nat:8> $ , $ <nat:5> $ , $ <nat:2> $ and $ <nat:10> \geq <nat:2> $ . This gives <nat:316800> is a <def:seven-composite> integer . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:seven-composite> ( <var:A> : nat ) := exists <var:X> <var:W> <var:k> <var:o> <var:J> <var:T> <var:x> : nat , ( <var:X> * <var:T> * <var:x> * <var:k> * <var:o> * <var:W> * <var:J> = <var:A> ) /\ ( <var:k> >= <nat:2> ) /\ ( <var:x> >= <nat:2> ) /\ ( <var:T> >= <nat:2> ) /\ ( <var:X> >= <nat:2> ) /\ ( <var:J> >= <nat:2> ) /\ ( <var:W> >= <nat:2> ) /\ ( <var:o> >= <nat:2> ) . Theorem <genP:1> : <def:seven-composite> <nat:316800> . Proof . unfold <def:seven-composite> . exists <nat:8> . exists <nat:11> . exists <nat:3> . exists <nat:10> . exists <nat:2> . exists <nat:12> . exists <nat:5> . assert ( <genH> : <nat:11> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:3> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:12> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:8> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:5> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:2> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:10> >= <nat:2> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 