\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:307> + <nat:88> \cdot <var:M> + <nat:458> \cdot <var:g> + <nat:186> \cdot <var:A> + <var:L> \cdot <nat:290> + <nat:116> \cdot <var:p> + <nat:386> \cdot <var:Q> $ is guaranteed to be odd . \end{theorem} \begin{proof} The adding of an even natural number with an odd natural number must be odd . The products $ <nat:88> \times <var:M> $ , $ <nat:458> \times <var:g> $ , $ <nat:186> \times <var:A> $ , $ <var:L> \times <nat:290> $ , $ <nat:116> \times <var:p> $ , and $ <var:Q> \times <nat:386> $ are even . This is true from the knowledge the integers $ <nat:88> $ , $ <nat:458> $ , $ <nat:186> $ , $ <nat:290> $ , $ <nat:116> $ , and $ <nat:386> $ are clearly even . We prove $ <var:g> \cdot <nat:458> + <var:M> \cdot <nat:88> + <var:p> \cdot <nat:116> + <nat:186> \cdot <var:A> + <nat:307> + <var:L> \cdot <nat:290> + <var:Q> \cdot <nat:386> $ is odd . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:M> <var:g> <var:A> <var:L> <var:p> <var:Q> : nat , Nat . odd ( <nat:88> * <var:M> + <nat:458> * <var:g> + <nat:186> * <var:A> + <nat:290> * <var:L> + <nat:116> * <var:p> + <nat:386> * <var:Q> + <nat:307> ) = true . Proof . intros . rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . assert ( <genH> : Nat . even <nat:88> = true ) . { auto . } assert ( <genH> : Nat . even <nat:458> = true ) . { auto . } assert ( <genH> : Nat . even <nat:186> = true ) . { auto . } assert ( <genH> : Nat . even <nat:290> = true ) . { auto . } assert ( <genH> : Nat . even <nat:116> = true ) . { auto . } assert ( <genH> : Nat . even <nat:386> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:88> * <var:M> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:458> * <var:g> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:186> * <var:A> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:290> * <var:L> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:116> * <var:p> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:386> * <var:Q> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 