\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} With every variables $ <var:A> $ , $ <var:N> $ , $ <var:R> $ , $ <var:k> $ , $ <var:O> $ , $ <var:a> $ , $ <var:m> $ , and $ <var:L> $ $ <nat:234> <var:R> + <nat:272> <var:m> + <var:k> <nat:80> + <var:A> <nat:262> + <var:a> <nat:242> + <var:L> <nat:342> + <nat:418> + <var:O> <nat:6> + <var:N> <nat:290> $ is even . \end{theorem} \begin{proof} It can be checked that our lemma must be true . In addition , the products $ <nat:234> <var:R> $ , $ <nat:272> <var:m> $ , $ <var:k> <nat:80> $ , $ <nat:262> <var:A> $ , $ <nat:242> <var:a> $ , $ <nat:342> <var:L> $ , $ <nat:6> <var:O> $ , as well as $ <var:N> <nat:290> $ will be even natural numbers . This claim is true from the fact the product of an even element of $ \mathbb{Z}^+ $ with a natural number is guaranteed to be even . This holds since the natural numbers $ <nat:234> $ , $ <nat:272> $ , $ <nat:80> $ , $ <nat:262> $ , $ <nat:242> $ , $ <nat:342> $ , $ <nat:6> $ , additionally $ <nat:290> $ are trivially even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:A> <var:N> <var:R> <var:k> <var:O> <var:a> <var:m> <var:L> : nat , Nat . even ( <nat:234> * <var:R> + <nat:272> * <var:m> + <nat:80> * <var:k> + <nat:262> * <var:A> + <nat:242> * <var:a> + <nat:342> * <var:L> + <nat:6> * <var:O> + <nat:290> * <var:N> + <nat:418> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:234> = true ) . { auto . } assert ( <genH> : Nat . even <nat:272> = true ) . { auto . } assert ( <genH> : Nat . even <nat:80> = true ) . { auto . } assert ( <genH> : Nat . even <nat:262> = true ) . { auto . } assert ( <genH> : Nat . even <nat:242> = true ) . { auto . } assert ( <genH> : Nat . even <nat:342> = true ) . { auto . } assert ( <genH> : Nat . even <nat:6> = true ) . { auto . } assert ( <genH> : Nat . even <nat:290> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:234> * <var:R> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:272> * <var:m> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:80> * <var:k> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:262> * <var:A> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:242> * <var:a> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:342> * <var:L> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:6> * <var:O> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:290> * <var:N> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 