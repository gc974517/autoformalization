\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Wherever we get $ <var:e> $ , $ <var:J> $ , $ <var:P> $ , $ <var:A> $ , $ <var:i> $ , $ <var:d> $ , $ <var:W> \geq <nat:2> $ so that taking some number $ <var:D> $ , $ <var:P> \times <var:J> \times <var:d> \times <var:A> \times <var:e> \times <var:i> \times <var:W> = <var:D> $ , then we denote that $ <var:D> $ is a <def:seven-composite> natural number with some whole numbers $ <var:W> $ , $ <var:e> $ , $ <var:P> $ , $ <var:A> $ , $ <var:d> $ , $ <var:i> $ , $ <var:J> $ . So <nat:414720> is a <def:seven-composite> integer . \end{theorem} \begin{proof} Remember that a <def:seven-composite> positive integer is the multiplication of integers $ <var:d> $ , $ <var:A> $ , $ <var:i> $ , $ <var:W> $ , $ <var:P> $ , $ <var:e> $ and $ <var:J> $ such that $ <var:P> $ , $ <var:d> $ , $ <var:J> $ , $ <var:W> $ , $ <var:i> $ , $ <var:A> $ , and $ <var:e> \geq <nat:2> $ . Note $ <var:W> \times <var:P> \times <var:d> \times <var:A> \times <var:J> \times <var:i> \times <var:e> = <nat:414720> $ gives $ <var:A> = <nat:2> $ , $ <var:e> = <nat:8> $ , $ <var:d> = <nat:6> $ , $ <var:P> = <nat:9> $ , $ <var:J> = <nat:12> $ , $ <var:i> = <nat:4> $ and $ <var:W> = <nat:10> $ . Plus notice that $ <nat:4> $ , $ <nat:12> $ , $ <nat:8> $ , $ <nat:9> $ , $ <nat:2> $ , $ <nat:6> $ , and $ <nat:10> $ are greater than or equal to <nat:2> . This hints our formula is valid . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:seven-composite> ( <var:D> : nat ) := exists <var:W> <var:e> <var:P> <var:A> <var:d> <var:i> <var:J> : nat , ( <var:e> >= <nat:2> ) /\ ( <var:J> >= <nat:2> ) /\ ( <var:P> >= <nat:2> ) /\ ( <var:A> >= <nat:2> ) /\ ( <var:i> >= <nat:2> ) /\ ( <var:d> >= <nat:2> ) /\ ( <var:W> >= <nat:2> ) /\ ( <var:P> * <var:J> * <var:d> * <var:A> * <var:e> * <var:i> * <var:W> = <var:D> ) . Theorem <genP:1> : <def:seven-composite> <nat:414720> . Proof . unfold <def:seven-composite> . exists <nat:10> . exists <nat:8> . exists <nat:9> . exists <nat:2> . exists <nat:6> . exists <nat:4> . exists <nat:12> . assert ( <genH> : <nat:4> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:12> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:8> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:9> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:2> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:6> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:10> >= <nat:2> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 