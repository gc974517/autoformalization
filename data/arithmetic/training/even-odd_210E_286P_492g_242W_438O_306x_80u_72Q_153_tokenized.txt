\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:x> \times <nat:306> + <var:O> \times <nat:438> + <var:P> \times <nat:286> + <nat:80> \times <var:u> + <var:g> \times <nat:492> + <var:W> \times <nat:242> + <var:Q> \times <nat:72> + <nat:153> + <var:E> \times <nat:210> $ is guaranteed to be odd . \end{theorem} \begin{proof} Recall that the expression $ <var:u> \cdot <nat:80> + <nat:438> \cdot <var:O> + <var:x> \cdot <nat:306> + <var:g> \cdot <nat:492> + <var:W> \cdot <nat:242> + <nat:210> \cdot <var:E> + <nat:153> + <nat:286> \cdot <var:P> + <nat:72> \cdot <var:Q> $ is known as odd by reason that the sum $ <nat:210> <var:E> + <nat:286> <var:P> + <var:g> <nat:492> + <nat:242> <var:W> + <nat:438> <var:O> + <var:x> <nat:306> + <nat:80> <var:u> + <nat:72> <var:Q> $ is guaranteed to be even . Observe that the terms $ <nat:80> \cdot <var:u> $ , $ <nat:286> \cdot <var:P> $ , $ <var:W> \cdot <nat:242> $ , and likewise $ <nat:438> \cdot <var:O> $ are known to be even . Take note that the pair $ <nat:492> \cdot <var:g> $ is trivially an even positive integer . Likewise , $ <var:x> \cdot <nat:306> $ is known as an even number . This holds from the knowledge the product of an even number in $ \mathbb{N} $ and an arbitrary number in $ \mathbb{N} $ must be even . Further , recall the pair $ <nat:210> \cdot <var:E> $ is an even number in $ \mathbb{Z}^+ $ . This claim holds as a consequence that taking the product between an even number in $ \mathbb{Z}^+ $ and some whole number is even . The product $ <var:Q> \cdot <nat:72> $ is guaranteed to be even . It can be checked that this claim is proven . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:x> <var:O> <var:P> <var:u> <var:g> <var:W> <var:Q> <var:E> : nat , Nat . odd ( <nat:306> * <var:x> + <nat:438> * <var:O> + <nat:286> * <var:P> + <nat:80> * <var:u> + <nat:492> * <var:g> + <nat:242> * <var:W> + <nat:72> * <var:Q> + <nat:210> * <var:E> + <nat:153> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:80> * <var:u> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:286> * <var:P> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:242> * <var:W> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:438> * <var:O> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:492> * <var:g> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:306> * <var:x> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:210> * <var:E> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:72> * <var:Q> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:306> * <var:x> + <nat:438> * <var:O> + <nat:286> * <var:P> + <nat:80> * <var:u> + <nat:492> * <var:g> + <nat:242> * <var:W> + <nat:72> * <var:Q> + <nat:210> * <var:E> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . auto . Qed . 