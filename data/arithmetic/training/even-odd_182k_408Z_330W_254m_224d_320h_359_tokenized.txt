\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} With some positive numbers $ <var:m> $ , $ <var:d> $ , $ <var:h> $ , $ <var:Z> $ , $ <var:W> $ , and $ <var:k> $ the formula $ <nat:359> + <var:h> \cdot <nat:320> + <nat:224> \cdot <var:d> + <nat:182> \cdot <var:k> + <nat:330> \cdot <var:W> + <var:Z> \cdot <nat:408> + <var:m> \cdot <nat:254> $ must be odd . \end{theorem} \begin{proof} We show the theorem holds . Take note $ <nat:359> $ is clearly an odd number in $ \mathbb{Z}^+ $ . $ <var:d> \times <nat:224> + <nat:330> \times <var:W> + <nat:320> \times <var:h> + <nat:408> \times <var:Z> + <nat:182> \times <var:k> + <nat:254> \times <var:m> $ is known as even . Recall that the products $ <var:Z> <nat:408> $ , $ <nat:320> <var:h> $ , $ <var:d> <nat:224> $ , plus $ <var:m> <nat:254> $ are known to be even naturals . Recall the term $ <nat:330> <var:W> $ is known as an even number . $ <var:k> <nat:182> $ is clearly even . Since the summation of even whole numbers and an even whole number is guaranteed to be an even natural number , $ <nat:182> * <var:k> + <var:Z> * <nat:408> + <var:W> * <nat:330> + <nat:254> * <var:m> + <nat:224> * <var:d> + <nat:320> * <var:h> $ will be by its very nature even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:m> <var:d> <var:h> <var:Z> <var:W> <var:k> : nat , Nat . odd ( <nat:320> * <var:h> + <nat:224> * <var:d> + <nat:182> * <var:k> + <nat:330> * <var:W> + <nat:408> * <var:Z> + <nat:254> * <var:m> + <nat:359> ) = true . Proof . intros . assert ( <genH> : Nat . odd <nat:359> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:408> * <var:Z> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:320> * <var:h> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:224> * <var:d> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:254> * <var:m> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:330> * <var:W> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:182> * <var:k> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:320> * <var:h> + <nat:224> * <var:d> + <nat:182> * <var:k> + <nat:330> * <var:W> + <nat:408> * <var:Z> + <nat:254> * <var:m> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . rewrite <genH> . auto . Qed . 