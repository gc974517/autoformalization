\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Using any positive numbers $ <var:l> $ , $ <var:N> $ , $ <var:c> $ , $ <var:U> $ , $ <var:h> $ , $ <var:Y> $ , $ <var:d> $ , and $ <var:r> $ the summation $ <var:c> \times <nat:354> + <var:U> \times <nat:252> + <nat:414> \times <var:Y> + <nat:110> \times <var:d> + <nat:80> \times <var:l> + <var:N> \times <nat:386> + <var:h> \times <nat:210> + <nat:473> + <nat:280> \times <var:r> $ must be odd . \end{theorem} \begin{proof} The pairs $ <var:N> * <nat:386> $ , $ <var:d> * <nat:110> $ , $ <var:h> * <nat:210> $ , $ <nat:80> * <var:l> $ , $ <nat:354> * <var:c> $ , and also $ <nat:414> * <var:Y> $ are clearly even as a consequence that the multiplication between an even natural number and an arbitrary number is guaranteed to be an even positive integer . Take note the product $ <nat:252> * <var:U> $ is an even natural . This is proven by reason that the multiplication between an even integer and any integer is guaranteed to be an even positive integer . Likewise , observe the term $ <var:r> * <nat:280> $ is known as even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:l> <var:N> <var:c> <var:U> <var:h> <var:Y> <var:d> <var:r> : nat , Nat . odd ( <nat:354> * <var:c> + <nat:252> * <var:U> + <nat:414> * <var:Y> + <nat:110> * <var:d> + <nat:80> * <var:l> + <nat:386> * <var:N> + <nat:210> * <var:h> + <nat:280> * <var:r> + <nat:473> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:386> * <var:N> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:110> * <var:d> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:210> * <var:h> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:80> * <var:l> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:354> * <var:c> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:414> * <var:Y> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:252> * <var:U> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:280> * <var:r> ) = true ) . { rewrite Nat . even_mul . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 