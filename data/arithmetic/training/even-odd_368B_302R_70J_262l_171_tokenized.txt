\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:B> \times <nat:368> + <var:l> \times <nat:262> + <nat:302> \times <var:R> + <nat:171> + <var:J> \times <nat:70> $ will be odd given some $ <var:R> $ , $ <var:J> $ , $ <var:l> $ , and $ <var:B> $ . \end{theorem} \begin{proof} Notice $ <nat:171> $ is odd . We show the summation $ <nat:70> \times <var:J> + <var:l> \times <nat:262> + <var:R> \times <nat:302> + <nat:171> + <var:B> \times <nat:368> $ will be odd according to the fact that the adding of an even number in $ \mathbb{N} $ and an odd natural number is guaranteed to be by its very nature an odd integer . The sum $ <var:B> \cdot <nat:368> + <nat:302> \cdot <var:R> + <var:J> \cdot <nat:70> + <var:l> \cdot <nat:262> $ is even . Adding on , the whole numbers $ <nat:368> $ , $ <nat:302> $ , $ <nat:70> $ , and also $ <nat:262> $ are known to be even . Accordingly , the terms $ <var:B> \cdot <nat:368> $ , $ <var:R> \cdot <nat:302> $ , $ <nat:70> \cdot <var:J> $ , and $ <var:l> \cdot <nat:262> $ will be even in addition . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:R> <var:J> <var:l> <var:B> : nat , Nat . odd ( <nat:368> * <var:B> + <nat:262> * <var:l> + <nat:302> * <var:R> + <nat:70> * <var:J> + <nat:171> ) = true . Proof . intros . assert ( <genH> : Nat . odd <nat:171> = true ) . { auto . } rewrite Nat . odd_add . assert ( <genH> : Nat . even <nat:368> = true ) . { auto . } assert ( <genH> : Nat . even <nat:302> = true ) . { auto . } assert ( <genH> : Nat . even <nat:70> = true ) . { auto . } assert ( <genH> : Nat . even <nat:262> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:368> * <var:B> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:302> * <var:R> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:70> * <var:J> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:262> * <var:l> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:368> * <var:B> + <nat:262> * <var:l> + <nat:302> * <var:R> + <nat:70> * <var:J> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite <- Nat . negb_even . rewrite <genH> . rewrite <genH> . auto . Qed . 