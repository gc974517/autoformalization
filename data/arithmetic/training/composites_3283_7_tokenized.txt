\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \newtheorem{definition}{Definition} \begin{document} \begin{definition} We say that $ <var:d> $ is a <def:seven-composite> integer assuming with some integers $ <var:B> $ , $ <var:n> $ , $ <var:i> $ , $ <var:t> $ , $ <var:Q> $ , $ <var:H> $ , $ <var:k> $ we have $ <var:k> \times <var:i> \times <var:t> \times <var:n> \times <var:B> \times <var:Q> \times <var:H> = <var:d> $ assuming some positive integer $ <var:d> $ and satisfying the condition that $ <var:i> $ , $ <var:n> $ , $ <var:H> $ , $ <var:k> $ , $ <var:Q> $ , $ <var:t> $ and $ <var:B> \geq <nat:2> $ . \end{definition} \begin{theorem} The positive integer <nat:201600> is <def:seven-composite> . \end{theorem} \begin{proof} Observe $ <var:i> * <var:Q> * <var:k> * <var:H> * <var:t> * <var:B> * <var:n> = <nat:201600> $ implies $ <var:Q> = <nat:7> $ , $ <var:k> = <nat:10> $ , $ <var:B> = <nat:3> $ , $ <var:n> = <nat:8> $ , $ <var:H> = <nat:4> $ , $ <var:i> = <nat:6> $ , $ <var:t> = <nat:5> $ . Also observe $ <nat:3> $ , $ <nat:8> $ , $ <nat:7> $ , $ <nat:4> $ , $ <nat:6> $ , $ <nat:10> $ , $ <nat:5> $ are more than or equal to <nat:2> . This suggests the thesis is true . So , <nat:201600> is the multiplication of some whole numbers $ <var:n> $ , $ <var:k> $ , $ <var:H> $ , $ <var:B> $ , $ <var:Q> $ , $ <var:t> $ and $ <var:i> $ and $ <var:k> $ , $ <var:n> $ , $ <var:i> $ , $ <var:t> $ , $ <var:H> $ , $ <var:B> $ , and $ <var:Q> $ are more than or equivalent to <nat:2> is proven . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:seven-composite> ( <var:d> : nat ) := exists <var:B> <var:n> <var:i> <var:t> <var:Q> <var:H> <var:k> : nat , ( <var:k> * <var:i> * <var:t> * <var:n> * <var:B> * <var:Q> * <var:H> = <var:d> ) /\ ( <var:i> >= <nat:2> ) /\ ( <var:n> >= <nat:2> ) /\ ( <var:H> >= <nat:2> ) /\ ( <var:k> >= <nat:2> ) /\ ( <var:Q> >= <nat:2> ) /\ ( <var:t> >= <nat:2> ) /\ ( <var:B> >= <nat:2> ) . Theorem <genP:1> : <def:seven-composite> <nat:201600> . Proof . unfold <def:seven-composite> . exists <nat:3> . exists <nat:8> . exists <nat:6> . exists <nat:5> . exists <nat:7> . exists <nat:4> . exists <nat:10> . assert ( <genH> : <nat:3> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:8> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:7> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:4> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:6> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:10> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:5> >= <nat:2> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 