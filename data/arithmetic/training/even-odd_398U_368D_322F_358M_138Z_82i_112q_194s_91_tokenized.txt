\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:q> <nat:112> + <var:U> <nat:398> + <nat:358> <var:M> + <nat:82> <var:i> + <var:F> <nat:322> + <nat:194> <var:s> + <nat:368> <var:D> + <nat:138> <var:Z> + <nat:91> $ is guaranteed to be odd . \end{theorem} \begin{proof} The totaling between even elements of $ \mathbb{N} $ collectively and an odd natural is an odd element of $ \mathbb{N} $ . This lemma must be true by reason that $ <nat:398> <var:U> + <var:D> <nat:368> + <nat:322> <var:F> + <nat:358> <var:M> + <nat:138> <var:Z> + <var:i> <nat:82> + <var:q> <nat:112> + <var:s> <nat:194> $ is trivially even . The products $ <var:F> \times <nat:322> $ , $ <nat:194> \times <var:s> $ , $ <var:M> \times <nat:358> $ , $ <var:D> \times <nat:368> $ , $ <nat:138> \times <var:Z> $ , $ <nat:398> \times <var:U> $ , as well as $ <var:i> \times <nat:82> $ are obviously even . This is true from the fact taking the product between an even number in $ \mathbb{N} $ and an arbitrary natural will be obviously an even whole number . What's more , $ <var:q> \times <nat:112> $ is known as even . This proposition holds as a consequence that the totaling between an even whole number and an even integer will be an even element of $ \mathbb{N} $ and moreover by reason that multiplying of even integers with some natural number is even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:q> <var:U> <var:M> <var:i> <var:F> <var:s> <var:D> <var:Z> : nat , Nat . odd ( <nat:112> * <var:q> + <nat:398> * <var:U> + <nat:358> * <var:M> + <nat:82> * <var:i> + <nat:322> * <var:F> + <nat:194> * <var:s> + <nat:368> * <var:D> + <nat:138> * <var:Z> + <nat:91> ) = true . Proof . intros . rewrite Nat . odd_add . assert ( <genH> : Nat . even ( <nat:322> * <var:F> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:194> * <var:s> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:358> * <var:M> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:368> * <var:D> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:138> * <var:Z> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:398> * <var:U> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:82> * <var:i> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:112> * <var:q> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:112> * <var:q> + <nat:398> * <var:U> + <nat:358> * <var:M> + <nat:82> * <var:i> + <nat:322> * <var:F> + <nat:194> * <var:s> + <nat:368> * <var:D> + <nat:138> * <var:Z> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite <- Nat . negb_even . rewrite <genH> . auto . Qed . 