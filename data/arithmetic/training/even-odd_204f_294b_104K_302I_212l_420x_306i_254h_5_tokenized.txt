\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:302> <var:I> + <nat:420> <var:x> + <nat:104> <var:K> + <var:b> <nat:294> + <var:l> <nat:212> + <nat:5> + <var:h> <nat:254> + <nat:204> <var:f> + <nat:306> <var:i> $ will be odd . \end{theorem} \begin{proof} This main result must be true because $ <nat:204> <var:f> + <var:b> <nat:294> + <nat:104> <var:K> + <var:I> <nat:302> + <nat:212> <var:l> + <nat:420> <var:x> + <nat:306> <var:i> + <nat:254> <var:h> $ is clearly even , since the totaling between even elements of $ \mathbb{Z}^+ $ successively and an even number in $ \mathbb{Z}^+ $ is guaranteed to be even . Take note the products $ <var:f> \times <nat:204> $ , $ <var:l> \times <nat:212> $ , $ <var:h> \times <nat:254> $ , and moreover $ <var:I> \times <nat:302> $ must be even natural numbers . Additionally , the pairs $ <nat:420> \times <var:x> $ and moreover $ <var:b> \times <nat:294> $ are even integers . This fact is proven because taking the product of an even natural number and any positive integer will be trivially an even number . See that the term $ <var:K> \times <nat:104> $ is clearly an even natural number . In addition , we know $ <var:i> \times <nat:306> $ is known to be an even positive integer . and also because the product of an even element of $ \mathbb{Z}^+ $ and any natural number is guaranteed to be obviously an even number in $ \mathbb{Z}^+ $ . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:I> <var:x> <var:K> <var:b> <var:l> <var:h> <var:f> <var:i> : nat , Nat . odd ( <nat:302> * <var:I> + <nat:420> * <var:x> + <nat:104> * <var:K> + <nat:294> * <var:b> + <nat:212> * <var:l> + <nat:254> * <var:h> + <nat:204> * <var:f> + <nat:306> * <var:i> + <nat:5> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:204> * <var:f> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:212> * <var:l> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:254> * <var:h> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:302> * <var:I> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:420> * <var:x> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:294> * <var:b> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:104> * <var:K> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:306> * <var:i> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:302> * <var:I> + <nat:420> * <var:x> + <nat:104> * <var:K> + <nat:294> * <var:b> + <nat:212> * <var:l> + <nat:254> * <var:h> + <nat:204> * <var:f> + <nat:306> * <var:i> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . auto . Qed . 