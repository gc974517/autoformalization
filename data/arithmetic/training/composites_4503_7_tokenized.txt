\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} The whole number <nat:259200> is the product between natural numbers $ <var:u> $ , $ <var:D> $ , $ <var:t> $ , $ <var:c> $ , $ <var:S> $ , $ <var:b> $ and $ <var:K> $ satisfying the condition that $ <var:c> $ , $ <var:u> $ , $ <var:D> $ , $ <var:b> $ , $ <var:K> $ , $ <var:t> $ and $ <var:S> \geq <nat:2> $ . \end{theorem} \begin{proof} Notice $ <nat:259200> = <nat:6> \times <nat:10> \times <nat:12> \times <nat:5> \times <nat:9> \times <nat:2> \times <nat:4> $ . Similarly notice $ <nat:2> $ , $ <nat:9> $ , $ <nat:6> $ , $ <nat:5> $ , $ <nat:4> $ , $ <nat:12> $ , $ <nat:10> \geq <nat:2> $ . Therefore , $ <var:b> $ , $ <var:K> $ , $ <var:t> $ , $ <var:S> $ , $ <var:D> $ , $ <var:u> $ and $ <var:c> \geq <nat:2> $ as well as $ <var:S> * <var:t> * <var:D> * <var:K> * <var:u> * <var:b> * <var:c> = <nat:259200> $ is proven . \end{proof} \end{document} 
~
Require Import Lia . Theorem <genP:1> : exists <var:u> <var:D> <var:t> <var:c> <var:S> <var:b> <var:K> : nat , ( <nat:259200> = <var:u> * <var:D> * <var:t> * <var:c> * <var:S> * <var:b> * <var:K> ) /\ ( <var:c> >= <nat:2> ) /\ ( <var:u> >= <nat:2> ) /\ ( <var:D> >= <nat:2> ) /\ ( <var:b> >= <nat:2> ) /\ ( <var:K> >= <nat:2> ) /\ ( <var:t> >= <nat:2> ) /\ ( <var:S> >= <nat:2> ) . Proof . exists <nat:2> . exists <nat:12> . exists <nat:5> . exists <nat:4> . exists <nat:6> . exists <nat:10> . exists <nat:9> . assert ( <genH> : <nat:2> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:9> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:6> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:5> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:4> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:12> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:10> >= <nat:2> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 