\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:19958400> $ is equal to $ <var:e> \times <var:F> \times <var:k> \times <var:A> \times <var:b> \times <var:t> \times <var:P> \times <var:J> \times <var:N> $ so that $ <var:k> $ , $ <var:e> $ , $ <var:t> $ , $ <var:P> $ , $ <var:F> $ , $ <var:N> $ , $ <var:J> $ , $ <var:b> $ and $ <var:A> \geq <nat:2> $ . \end{theorem} \begin{proof} Assume $ <var:e> = <nat:5> $ , $ <var:t> = <nat:7> $ , $ <var:F> = <nat:10> $ , $ <var:N> = <nat:9> $ , $ <var:b> = <nat:8> $ , $ <var:k> = <nat:12> $ , $ <var:J> = <nat:3> $ , $ <var:P> = <nat:11> $ , and $ <var:A> = <nat:2> $ . Observe that $ <nat:9> $ , $ <nat:5> $ , $ <nat:7> $ , $ <nat:3> $ , $ <nat:2> $ , $ <nat:11> $ , $ <nat:12> $ , $ <nat:8> $ , and $ <nat:10> $ are greater than or equivalent to <nat:2> . So , $ <var:F> \times <var:t> \times <var:A> \times <var:e> \times <var:b> \times <var:k> \times <var:N> \times <var:J> \times <var:P> = <nat:19958400> $ has been validated . \end{proof} \end{document} 
~
Require Import Lia . Theorem <genP:1> : exists <var:t> <var:b> <var:A> <var:J> <var:N> <var:P> <var:F> <var:k> <var:e> : nat , ( <nat:19958400> = <var:e> * <var:F> * <var:k> * <var:A> * <var:b> * <var:t> * <var:P> * <var:J> * <var:N> ) /\ ( <var:k> >= <nat:2> ) /\ ( <var:e> >= <nat:2> ) /\ ( <var:t> >= <nat:2> ) /\ ( <var:P> >= <nat:2> ) /\ ( <var:F> >= <nat:2> ) /\ ( <var:N> >= <nat:2> ) /\ ( <var:J> >= <nat:2> ) /\ ( <var:b> >= <nat:2> ) /\ ( <var:A> >= <nat:2> ) . Proof . exists <nat:7> . exists <nat:8> . exists <nat:2> . exists <nat:3> . exists <nat:9> . exists <nat:11> . exists <nat:10> . exists <nat:12> . exists <nat:5> . assert ( <genH> : <nat:9> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:5> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:7> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:3> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:2> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:11> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:12> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:8> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:10> >= <nat:2> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 