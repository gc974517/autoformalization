\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:R> <nat:406> + <nat:465> + <nat:450> <var:F> + <var:x> <nat:42> + <var:f> <nat:392> $ must be odd . \end{theorem} \begin{proof} $ <var:x> * <nat:42> $ is known as an even whole number from the fact multiplying of an even natural with a positive integer is guaranteed to be clearly an even natural number , and holds by reason that the whole number $ <nat:42> $ is an even number . Building on , take note that the whole number $ <nat:450> $ is known to be an even number . As a consequence , the product $ <var:F> * <nat:450> $ must be even additionally . Observe the positive integer $ <nat:406> $ is clearly an even element of $ \mathbb{Z}^+ $ . For this reason , the pair $ <nat:406> * <var:R> $ is guaranteed to be even as well . What's more , the whole number $ <nat:392> $ is clearly an even integer . For this reason , the term $ <var:f> * <nat:392> $ is even in addition . It can be shown that $ <var:f> <nat:392> + <nat:465> + <nat:406> <var:R> + <var:F> <nat:450> + <var:x> <nat:42> $ is odd . Take note that $ <nat:465> $ is trivially odd . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:R> <var:F> <var:x> <var:f> : nat , Nat . odd ( <nat:406> * <var:R> + <nat:450> * <var:F> + <nat:42> * <var:x> + <nat:392> * <var:f> + <nat:465> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:42> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:42> * <var:x> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:450> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:450> * <var:F> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:406> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:406> * <var:R> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:392> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:392> * <var:f> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . odd <nat:465> = true ) . { auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 