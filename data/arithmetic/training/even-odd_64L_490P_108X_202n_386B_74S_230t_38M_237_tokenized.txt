\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} With every $ <var:P> $ , $ <var:X> $ , $ <var:S> $ , $ <var:t> $ , $ <var:L> $ , $ <var:n> $ , $ <var:B> $ , and $ <var:M> \in \mathbb{Z}^+ $ the summation $ <nat:64> \times <var:L> + <var:P> \times <nat:490> + <nat:108> \times <var:X> + <var:n> \times <nat:202> + <nat:386> \times <var:B> + <nat:74> \times <var:S> + <nat:237> + <var:t> \times <nat:230> + <var:M> \times <nat:38> $ will be odd . \end{theorem} \begin{proof} The pairs $ <nat:202> \times <var:n> $ , $ <nat:38> \times <var:M> $ , and moreover $ <var:t> \times <nat:230> $ are known to be even . This fact is proven since taking the product between an even whole number with an arbitrary positive integer is an even element of $ \mathbb{N} $ . Recall the products $ <var:S> \times <nat:74> $ , $ <nat:108> \times <var:X> $ , $ <nat:490> \times <var:P> $ , plus $ <nat:64> \times <var:L> $ are known to be even natural numbers . Furthermore , we know that the pair $ <nat:386> \times <var:B> $ is known to be an even natural . This holds since the product of an even natural and a positive integer is guaranteed to be by definition an even element of $ \mathbb{N} $ . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:P> <var:X> <var:S> <var:t> <var:L> <var:n> <var:B> <var:M> : nat , Nat . odd ( <nat:64> * <var:L> + <nat:490> * <var:P> + <nat:108> * <var:X> + <nat:202> * <var:n> + <nat:386> * <var:B> + <nat:74> * <var:S> + <nat:230> * <var:t> + <nat:38> * <var:M> + <nat:237> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:202> * <var:n> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:38> * <var:M> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:230> * <var:t> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:74> * <var:S> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:108> * <var:X> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:490> * <var:P> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:64> * <var:L> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:386> * <var:B> ) = true ) . { rewrite Nat . even_mul . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 