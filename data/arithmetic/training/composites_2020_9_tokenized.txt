\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \newtheorem{definition}{Definition} \begin{document} \begin{definition} Say that $ <var:F> $ is <def:nine-composite> given taking some $ <var:m> $ , $ <var:K> $ , $ <var:L> $ , $ <var:r> $ , $ <var:n> $ , $ <var:V> $ , $ <var:c> $ , $ <var:U> $ , $ <var:x> \in \mathbb{Z}^+ $ we have such that $ <var:m> $ , $ <var:c> $ , $ <var:L> $ , $ <var:r> $ , $ <var:K> $ , $ <var:U> $ , $ <var:x> $ , $ <var:V> $ and $ <var:n> > <nat:1> $ as well as for $ <var:F> \in \mathbb{Z}^+ $ , $ <var:F> = <var:x> * <var:L> * <var:m> * <var:V> * <var:r> * <var:c> * <var:U> * <var:n> * <var:K> $ . \end{definition} \begin{theorem} $ <var:F> = <nat:3991680> $ is <def:nine-composite> . \end{theorem} \begin{proof} We confirm <nat:3991680> is the product between some positive integers $ <var:r> $ , $ <var:m> $ , $ <var:U> $ , $ <var:n> $ , $ <var:c> $ , $ <var:x> $ , $ <var:K> $ , $ <var:L> $ , and $ <var:V> $ . Observe that $ <nat:9> $ , $ <nat:5> $ , $ <nat:11> $ , $ <nat:2> $ , $ <nat:7> $ , $ <nat:4> $ , $ <nat:6> $ , $ <nat:3> $ , and $ <nat:8> $ are more than <nat:1> . Similarly observe additionally $ <nat:3991680> = <nat:5> * <nat:7> * <nat:6> * <nat:4> * <nat:2> * <nat:3> * <nat:8> * <nat:11> * <nat:9> $ . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:nine-composite> ( <var:F> : nat ) := exists <var:m> <var:K> <var:L> <var:r> <var:n> <var:V> <var:c> <var:U> <var:x> : nat , ( <var:m> > <nat:1> ) /\ ( <var:c> > <nat:1> ) /\ ( <var:L> > <nat:1> ) /\ ( <var:r> > <nat:1> ) /\ ( <var:K> > <nat:1> ) /\ ( <var:U> > <nat:1> ) /\ ( <var:x> > <nat:1> ) /\ ( <var:V> > <nat:1> ) /\ ( <var:n> > <nat:1> ) /\ ( <var:F> = <var:x> * <var:L> * <var:m> * <var:V> * <var:r> * <var:c> * <var:U> * <var:n> * <var:K> ) . Theorem <genP:1> : <def:nine-composite> <nat:3991680> . Proof . unfold <def:nine-composite> . assert ( <genH> : <nat:9> > <nat:1> ) . { lia . } assert ( <genH> : <nat:5> > <nat:1> ) . { lia . } assert ( <genH> : <nat:11> > <nat:1> ) . { lia . } assert ( <genH> : <nat:2> > <nat:1> ) . { lia . } assert ( <genH> : <nat:7> > <nat:1> ) . { lia . } assert ( <genH> : <nat:4> > <nat:1> ) . { lia . } assert ( <genH> : <nat:6> > <nat:1> ) . { lia . } assert ( <genH> : <nat:3> > <nat:1> ) . { lia . } assert ( <genH> : <nat:8> > <nat:1> ) . { lia . } exists <nat:4> . exists <nat:7> . exists <nat:8> . exists <nat:3> . exists <nat:11> . exists <nat:2> . exists <nat:5> . exists <nat:9> . exists <nat:6> . repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 