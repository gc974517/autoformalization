\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} There are some whole numbers $ <var:j> $ , $ <var:a> $ , $ <var:R> $ , $ <var:m> $ , $ <var:V> $ , $ <var:N> $ , $ <var:B> $ , $ <var:v> $ , and $ <var:g> $ where $ <var:g> $ , $ <var:N> $ , $ <var:R> $ , $ <var:j> $ , $ <var:v> $ , $ <var:V> $ , $ <var:a> $ , $ <var:m> $ , $ <var:B> $ greater than or equal to <nat:2> as well as such that the positive integer <nat:14515200> is the multiplication of numbers $ <var:j> $ , $ <var:a> $ , $ <var:R> $ , $ <var:m> $ , $ <var:V> $ , $ <var:N> $ , $ <var:B> $ , $ <var:v> $ and $ <var:g> $ . \end{theorem} \begin{proof} Let $ <var:R> = <nat:12> $ , $ <var:v> = <nat:10> $ , $ <var:j> = <nat:2> $ , $ <var:m> = <nat:4> $ , $ <var:N> = <nat:8> $ , $ <var:V> = <nat:9> $ , $ <var:B> = <nat:7> $ , $ <var:g> = <nat:6> $ , $ <var:a> = <nat:5> $ . We present the principle is valid because $ <var:V> = <nat:9> $ , $ <var:B> = <nat:7> $ , $ <var:g> = <nat:6> $ , $ <var:v> = <nat:10> $ , $ <var:N> = <nat:8> $ , $ <var:R> = <nat:12> $ , $ <var:m> = <nat:4> $ , $ <var:a> = <nat:5> $ , and $ <var:j> = <nat:2> \geq <nat:2> $ . \end{proof} \end{document} 
~
Require Import Lia . Theorem <genP:1> : exists <var:j> <var:a> <var:R> <var:m> <var:V> <var:N> <var:B> <var:v> <var:g> : nat , ( <var:g> >= <nat:2> ) /\ ( <var:N> >= <nat:2> ) /\ ( <var:R> >= <nat:2> ) /\ ( <var:j> >= <nat:2> ) /\ ( <var:v> >= <nat:2> ) /\ ( <var:V> >= <nat:2> ) /\ ( <var:a> >= <nat:2> ) /\ ( <var:m> >= <nat:2> ) /\ ( <var:B> >= <nat:2> ) /\ ( <nat:14515200> = <var:j> * <var:a> * <var:R> * <var:m> * <var:V> * <var:N> * <var:B> * <var:v> * <var:g> ) . Proof . exists <nat:2> . exists <nat:5> . exists <nat:12> . exists <nat:4> . exists <nat:9> . exists <nat:8> . exists <nat:7> . exists <nat:10> . exists <nat:6> . assert ( <genH> : <nat:9> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:7> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:6> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:10> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:8> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:12> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:4> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:5> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:2> >= <nat:2> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 