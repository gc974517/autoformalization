\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \newtheorem{definition}{Definition} \begin{document} \begin{definition} If we have so that $ <var:o> $ , $ <var:H> $ , $ <var:y> $ , $ <var:c> $ , $ <var:Y> $ , $ <var:j> $ and $ <var:z> > <nat:1> $ satisfying the condition that given some positive integer $ <var:m> $ , $ <var:m> = <var:Y> \times <var:z> \times <var:y> \times <var:c> \times <var:j> \times <var:o> \times <var:H> $ , then say that $ <var:m> $ is <def:seven-composite> assuming some $ <var:y> $ , $ <var:Y> $ , $ <var:z> $ , $ <var:j> $ , $ <var:o> $ , $ <var:H> $ , $ <var:c> \in \mathbb{Z}^+ $ . \end{definition} \begin{theorem} The natural number <nat:1088640> is a <def:seven-composite> natural number . \end{theorem} \begin{proof} Note $ <nat:8> * <nat:6> * <nat:12> * <nat:7> * <nat:10> * <nat:9> * <nat:3> = <nat:1088640> = <var:Y> * <var:H> * <var:z> * <var:c> * <var:o> * <var:y> * <var:j> $ . Plus observe that $ <nat:12> $ , $ <nat:10> $ , $ <nat:6> $ , $ <nat:3> $ , $ <nat:8> $ , $ <nat:9> $ and $ <nat:7> > <nat:1> $ . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:seven-composite> ( <var:m> : nat ) := exists <var:y> <var:Y> <var:z> <var:j> <var:o> <var:H> <var:c> : nat , ( <var:o> > <nat:1> ) /\ ( <var:H> > <nat:1> ) /\ ( <var:y> > <nat:1> ) /\ ( <var:c> > <nat:1> ) /\ ( <var:Y> > <nat:1> ) /\ ( <var:j> > <nat:1> ) /\ ( <var:z> > <nat:1> ) /\ ( <var:m> = <var:Y> * <var:z> * <var:y> * <var:c> * <var:j> * <var:o> * <var:H> ) . Theorem <genP:1> : <def:seven-composite> <nat:1088640> . Proof . unfold <def:seven-composite> . exists <nat:9> . exists <nat:8> . exists <nat:12> . exists <nat:3> . exists <nat:10> . exists <nat:6> . exists <nat:7> . assert ( <genH> : <nat:12> > <nat:1> ) . { lia . } assert ( <genH> : <nat:10> > <nat:1> ) . { lia . } assert ( <genH> : <nat:6> > <nat:1> ) . { lia . } assert ( <genH> : <nat:3> > <nat:1> ) . { lia . } assert ( <genH> : <nat:8> > <nat:1> ) . { lia . } assert ( <genH> : <nat:9> > <nat:1> ) . { lia . } assert ( <genH> : <nat:7> > <nat:1> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 