\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} There exist some positive integers $ <var:J> $ , $ <var:L> $ , $ <var:O> $ , $ <var:q> $ , $ <var:K> $ , $ <var:v> $ and $ <var:p> $ satisfying the condition that $ <var:q> $ , $ <var:p> $ , $ <var:L> $ , $ <var:O> $ , $ <var:K> $ , $ <var:v> $ and $ <var:J> $ more than or equivalent to <nat:2> as well as satisfying the condition that $ <var:L> * <var:v> * <var:K> * <var:J> * <var:p> * <var:O> * <var:q> = <nat:518400> $ . \end{theorem} \begin{proof} Notice that $ <var:p> \times <var:L> \times <var:J> \times <var:q> \times <var:O> \times <var:K> \times <var:v> = <nat:518400> $ produces $ <var:K> = <nat:8> $ , $ <var:O> = <nat:3> $ , $ <var:q> = <nat:10> $ , $ <var:p> = <nat:9> $ , $ <var:v> = <nat:4> $ , $ <var:L> = <nat:5> $ and $ <var:J> = <nat:12> $ . Furthermore note $ <nat:12> $ , $ <nat:9> $ , $ <nat:5> $ , $ <nat:4> $ , $ <nat:3> $ , $ <nat:8> $ and $ <nat:10> $ are more than or equal to <nat:2> . Because of this , $ <var:p> * <var:L> * <var:O> * <var:q> * <var:K> * <var:v> * <var:J> = <nat:518400> $ and $ <var:L> $ , $ <var:J> $ , $ <var:K> $ , $ <var:v> $ , $ <var:p> $ , $ <var:q> $ , and $ <var:O> $ are larger than or equivalent to <nat:2> is verified . \end{proof} \end{document} 
~
Require Import Lia . Theorem <genP:1> : exists <var:J> <var:L> <var:O> <var:q> <var:K> <var:v> <var:p> : nat , ( <var:q> >= <nat:2> ) /\ ( <var:p> >= <nat:2> ) /\ ( <var:L> >= <nat:2> ) /\ ( <var:O> >= <nat:2> ) /\ ( <var:K> >= <nat:2> ) /\ ( <var:v> >= <nat:2> ) /\ ( <var:J> >= <nat:2> ) /\ ( <var:L> * <var:v> * <var:K> * <var:J> * <var:p> * <var:O> * <var:q> = <nat:518400> ) . Proof . exists <nat:12> . exists <nat:5> . exists <nat:3> . exists <nat:10> . exists <nat:8> . exists <nat:4> . exists <nat:9> . assert ( <genH> : <nat:12> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:9> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:5> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:4> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:3> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:8> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:10> >= <nat:2> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 