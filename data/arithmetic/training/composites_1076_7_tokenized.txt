\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \newtheorem{definition}{Definition} \begin{document} \begin{definition} Assume that $ <var:t> $ is a <def:seven-composite> natural number under the condition using some $ <var:y> $ , $ <var:A> $ , $ <var:H> $ , $ <var:B> $ , $ <var:a> $ , $ <var:q> $ , $ <var:X> \in \mathbb{N} $ we get $ <var:y> * <var:A> * <var:B> * <var:H> * <var:X> * <var:a> * <var:q> = <var:t> $ for some positive integer $ <var:t> $ as well as such that $ <var:y> $ , $ <var:a> $ , $ <var:B> $ , $ <var:q> $ , $ <var:H> $ , $ <var:X> $ , $ <var:A> \geq <nat:2> $ . \end{definition} \begin{theorem} $ <var:t> = <nat:532224> $ is a <def:seven-composite> positive integer . \end{theorem} \begin{proof} Recall a <def:seven-composite> is the multiplication of positive integers $ <var:X> $ , $ <var:B> $ , $ <var:a> $ , $ <var:H> $ , $ <var:A> $ , $ <var:q> $ , and $ <var:y> $ greater than <nat:1> . Observe that $ <nat:532224> = <var:B> * <var:a> * <var:X> * <var:y> * <var:H> * <var:q> * <var:A> $ produces $ <var:X> = <nat:7> $ , $ <var:A> = <nat:6> $ , $ <var:H> = <nat:12> $ , $ <var:B> = <nat:11> $ , $ <var:y> = <nat:4> $ , $ <var:q> = <nat:3> $ , and $ <var:a> = <nat:8> $ . Furthermore notice that $ <nat:3> $ , $ <nat:12> $ , $ <nat:11> $ , $ <nat:6> $ , $ <nat:7> $ , $ <nat:4> $ , $ <nat:8> > <nat:1> $ . This indicates our thesis is valid . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:seven-composite> ( <var:t> : nat ) := exists <var:y> <var:A> <var:H> <var:B> <var:a> <var:q> <var:X> : nat , ( <var:y> * <var:A> * <var:B> * <var:H> * <var:X> * <var:a> * <var:q> = <var:t> ) /\ ( <var:y> >= <nat:2> ) /\ ( <var:a> >= <nat:2> ) /\ ( <var:B> >= <nat:2> ) /\ ( <var:q> >= <nat:2> ) /\ ( <var:H> >= <nat:2> ) /\ ( <var:X> >= <nat:2> ) /\ ( <var:A> >= <nat:2> ) . Theorem <genP:1> : <def:seven-composite> <nat:532224> . Proof . unfold <def:seven-composite> . exists <nat:4> . exists <nat:6> . exists <nat:12> . exists <nat:11> . exists <nat:8> . exists <nat:3> . exists <nat:7> . assert ( <genH> : <nat:3> > <nat:1> ) . { lia . } assert ( <genH> : <nat:12> > <nat:1> ) . { lia . } assert ( <genH> : <nat:11> > <nat:1> ) . { lia . } assert ( <genH> : <nat:6> > <nat:1> ) . { lia . } assert ( <genH> : <nat:7> > <nat:1> ) . { lia . } assert ( <genH> : <nat:4> > <nat:1> ) . { lia . } assert ( <genH> : <nat:8> > <nat:1> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 