\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Iff there exist $ <var:S> $ , $ <var:A> $ , $ <var:Z> $ , $ <var:D> $ , $ <var:r> \in \mathbb{N} $ we denote that $ <var:g> \in \mathbb{N} $ is considered to be a <def:five-composite> whole number if $ <var:S> \times <var:A> \times <var:D> \times <var:Z> \times <var:r> = <var:g> $ and terms are greater than or equal to <nat:2> . Consequently the whole number <nat:7560> is <def:five-composite> . \end{theorem} \begin{proof} Recall that <nat:7560> is a <def:five-composite> number with the condition that <nat:7560> is the multiplication of numbers $ <var:r> $ , $ <var:A> $ , $ <var:S> $ , $ <var:D> $ , and $ <var:Z> $ so that $ <var:S> $ , $ <var:r> $ , $ <var:A> $ , $ <var:D> $ , $ <var:Z> \geq <nat:2> $ . Allow $ <var:D> = <nat:10> $ , $ <var:r> = <nat:3> $ , $ <var:A> = <nat:4> $ , $ <var:Z> = <nat:7> $ , and $ <var:S> = <nat:9> $ . Notice $ <nat:7> $ , $ <nat:3> $ , $ <nat:9> $ , $ <nat:10> $ , $ <nat:4> \geq <nat:2> $ . Moreover note that likewise $ <nat:7560> = <var:r> * <var:A> * <var:Z> * <var:D> * <var:S> $ . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:five-composite> ( <var:g> : nat ) := exists <var:S> <var:A> <var:Z> <var:D> <var:r> : nat , ( <var:S> * <var:A> * <var:D> * <var:Z> * <var:r> = <var:g> ) /\ ( <var:S> >= <nat:2> ) /\ ( <var:A> >= <nat:2> ) /\ ( <var:Z> >= <nat:2> ) /\ ( <var:D> >= <nat:2> ) /\ ( <var:r> >= <nat:2> ) . Theorem <genP:1> : <def:five-composite> <nat:7560> . Proof . unfold <def:five-composite> . exists <nat:9> . exists <nat:4> . exists <nat:7> . exists <nat:10> . exists <nat:3> . assert ( <genH> : <nat:7> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:3> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:9> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:10> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:4> >= <nat:2> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 