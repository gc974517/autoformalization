\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Assuming that there are whole numbers $ <var:D> $ , $ <var:d> $ , $ <var:Q> $ , $ <var:O> $ , $ <var:f> $ , $ <var:r> $ , $ <var:C> $ we assume that some natural number $ <var:x> $ will be named a <def:seven-composite> positive integer if $ <var:f> \times <var:D> \times <var:r> \times <var:C> \times <var:d> \times <var:O> \times <var:Q> = <var:x> $ as well as unique terms are greater than <nat:1> . Therefore $ <var:x> = <nat:221760> $ is a <def:seven-composite> integer . \end{theorem} \begin{proof} Remember that a <def:seven-composite> positive integer is the product between integers $ <var:D> $ , $ <var:Q> $ , $ <var:r> $ , $ <var:d> $ , $ <var:O> $ , $ <var:f> $ , and $ <var:C> $ more than <nat:1> . Take $ <var:C> = <nat:4> $ , $ <var:d> = <nat:7> $ , $ <var:Q> = <nat:11> $ , $ <var:f> = <nat:9> $ , $ <var:D> = <nat:5> $ , $ <var:O> = <nat:8> $ and $ <var:r> = <nat:2> $ . Observe $ <var:Q> = <nat:11> $ , $ <var:r> = <nat:2> $ , $ <var:C> = <nat:4> $ , $ <var:d> = <nat:7> $ , $ <var:D> = <nat:5> $ , $ <var:f> = <nat:9> $ , $ <var:O> = <nat:8> $ are greater than <nat:1> . As a result , <nat:221760> is a <def:seven-composite> natural number is proven . Consequently , $ <var:O> * <var:d> * <var:r> * <var:f> * <var:C> * <var:D> * <var:Q> = <nat:221760> $ is proven . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:seven-composite> ( <var:x> : nat ) := exists <var:D> <var:d> <var:Q> <var:O> <var:f> <var:r> <var:C> : nat , ( <var:f> * <var:D> * <var:r> * <var:C> * <var:d> * <var:O> * <var:Q> = <var:x> ) /\ ( <var:D> > <nat:1> ) /\ ( <var:d> > <nat:1> ) /\ ( <var:Q> > <nat:1> ) /\ ( <var:O> > <nat:1> ) /\ ( <var:f> > <nat:1> ) /\ ( <var:r> > <nat:1> ) /\ ( <var:C> > <nat:1> ) . Theorem <genP:1> : <def:seven-composite> <nat:221760> . Proof . unfold <def:seven-composite> . exists <nat:5> . exists <nat:7> . exists <nat:11> . exists <nat:8> . exists <nat:9> . exists <nat:2> . exists <nat:4> . assert ( <genH> : <nat:11> > <nat:1> ) . { lia . } assert ( <genH> : <nat:2> > <nat:1> ) . { lia . } assert ( <genH> : <nat:4> > <nat:1> ) . { lia . } assert ( <genH> : <nat:7> > <nat:1> ) . { lia . } assert ( <genH> : <nat:5> > <nat:1> ) . { lia . } assert ( <genH> : <nat:9> > <nat:1> ) . { lia . } assert ( <genH> : <nat:8> > <nat:1> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 