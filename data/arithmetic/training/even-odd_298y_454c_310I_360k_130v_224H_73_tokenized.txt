\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:v> * <nat:130> + <var:y> * <nat:298> + <var:I> * <nat:310> + <nat:73> + <var:k> * <nat:360> + <nat:454> * <var:c> + <var:H> * <nat:224> $ is guaranteed to be odd . \end{theorem} \begin{proof} The whole number $ <nat:298> $ is clearly an even number in $ \mathbb{N} $ . Then , the term $ <var:y> <nat:298> $ will be even in addition . The pair $ <var:c> <nat:454> $ is known to be even because the multiplication between an even natural with any positive integer is by definition an even integer additionally the integer $ <nat:454> $ is guaranteed to be an even element of $ \mathbb{N} $ . In addition , observe that the coefficient $ <nat:310> $ is clearly an even number in $ \mathbb{N} $ . So , the product $ <var:I> <nat:310> $ will be even in addition . What's more , we know that the product $ <nat:360> <var:k> $ is an even natural number from the knowledge multiplying between an even number in $ \mathbb{Z}^+ $ with any natural is even and also the positive integer $ <nat:360> $ is obviously an even natural . Likewise , the term $ <nat:130> <var:v> $ is obviously even . This claim must be true as a consequence that taking the product of an even element of $ \mathbb{N} $ and some natural number is guaranteed to be even plus the number $ <nat:130> $ is guaranteed to be trivially an even whole number . What's more , the number $ <nat:224> $ is trivially even . So , the pair $ <nat:224> <var:H> $ will be even at the same time . See that $ <nat:73> $ is trivially odd . We know that the summation of even numbers and an odd whole number must be an odd whole number . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:v> <var:y> <var:I> <var:k> <var:c> <var:H> : nat , Nat . odd ( <nat:130> * <var:v> + <nat:298> * <var:y> + <nat:310> * <var:I> + <nat:360> * <var:k> + <nat:454> * <var:c> + <nat:224> * <var:H> + <nat:73> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:298> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:298> * <var:y> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:454> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:454> * <var:c> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:310> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:310> * <var:I> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:360> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:360> * <var:k> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:130> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:130> * <var:v> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:224> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:224> * <var:H> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . odd <nat:73> = true ) . { auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 