\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \newtheorem{definition}{Definition} \begin{document} \begin{definition} We assume that $ <var:t> $ is a <def:seven-composite> number if and only if $ \exists <var:j> $ , $ <var:m> $ , $ <var:Z> $ , $ <var:Y> $ , $ <var:I> $ , $ <var:o> $ , $ <var:x> \in \mathbb{Z}^+ $ such that $ <var:m> $ , $ <var:I> $ , $ <var:o> $ , $ <var:x> $ , $ <var:j> $ , $ <var:Y> $ and $ <var:Z> \geq <nat:2> $ as well as with $ <var:t> \in \mathbb{Z}^+ $ , $ <var:o> \times <var:x> \times <var:I> \times <var:m> \times <var:Y> \times <var:Z> \times <var:j> = <var:t> $ . \end{definition} \begin{theorem} $ <var:t> = <nat:172800> $ is a <def:seven-composite> natural number . \end{theorem} \begin{proof} Recall <nat:172800> is a <def:seven-composite> integer granted it is the multiplication of $ <var:m> $ , $ <var:Z> $ , $ <var:x> $ , $ <var:o> $ , $ <var:I> $ , $ <var:Y> $ , $ <var:j> $ so that $ <var:I> $ , $ <var:Y> $ , $ <var:o> $ , $ <var:Z> $ , $ <var:j> $ , $ <var:x> $ , $ <var:m> \geq <nat:2> $ . Observe that $ <nat:172800> = <var:m> \times <var:Y> \times <var:j> \times <var:x> \times <var:o> \times <var:Z> \times <var:I> = <nat:5> \times <nat:4> \times <nat:9> \times <nat:8> \times <nat:6> \times <nat:10> \times <nat:2> $ . Also note $ <nat:9> $ , $ <nat:6> $ , $ <nat:5> $ , $ <nat:8> $ , $ <nat:4> $ , $ <nat:2> $ , and $ <nat:10> \geq <nat:2> $ . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:seven-composite> ( <var:t> : nat ) := exists <var:j> <var:m> <var:Z> <var:Y> <var:I> <var:o> <var:x> : nat , ( <var:m> >= <nat:2> ) /\ ( <var:I> >= <nat:2> ) /\ ( <var:o> >= <nat:2> ) /\ ( <var:x> >= <nat:2> ) /\ ( <var:j> >= <nat:2> ) /\ ( <var:Y> >= <nat:2> ) /\ ( <var:Z> >= <nat:2> ) /\ ( <var:o> * <var:x> * <var:I> * <var:m> * <var:Y> * <var:Z> * <var:j> = <var:t> ) . Theorem <genP:1> : <def:seven-composite> <nat:172800> . Proof . unfold <def:seven-composite> . exists <nat:9> . exists <nat:5> . exists <nat:10> . exists <nat:4> . exists <nat:2> . exists <nat:6> . exists <nat:8> . assert ( <genH> : <nat:9> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:6> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:5> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:8> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:4> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:2> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:10> >= <nat:2> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 