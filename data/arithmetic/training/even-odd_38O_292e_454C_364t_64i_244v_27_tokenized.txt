\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Using any $ <var:O> $ , $ <var:C> $ , $ <var:v> $ , $ <var:t> $ , $ <var:e> $ , and $ <var:i> $ the formula $ <var:O> \cdot <nat:38> + <nat:27> + <nat:454> \cdot <var:C> + <nat:64> \cdot <var:i> + <var:e> \cdot <nat:292> + <nat:364> \cdot <var:t> + <nat:244> \cdot <var:v> $ must be odd . \end{theorem} \begin{proof} See that the products $ <nat:64> <var:i> $ and likewise $ <nat:364> <var:t> $ are clearly even natural numbers . The pairs $ <nat:454> <var:C> $ , $ <nat:292> <var:e> $ , and moreover $ <nat:244> <var:v> $ are obviously even as a consequence that the multiplication between an even number in $ \mathbb{N} $ with any integer is guaranteed to be even . $ <var:O> <nat:38> $ is obviously even from the fact multiplying between an even whole number and some natural is even . The adding between an even element of $ \mathbb{Z}^+ $ with an odd number in $ \mathbb{Z}^+ $ will be an odd element of $ \mathbb{Z}^+ $ . As a consequence , the formula $ <var:O> \times <nat:38> + <nat:27> + <var:e> \times <nat:292> + <nat:454> \times <var:C> + <nat:364> \times <var:t> + <var:i> \times <nat:64> + <var:v> \times <nat:244> $ by its very nature must be odd . Take note $ <nat:27> $ is trivially an odd element of $ \mathbb{N} $ . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:O> <var:C> <var:v> <var:t> <var:e> <var:i> : nat , Nat . odd ( <nat:38> * <var:O> + <nat:454> * <var:C> + <nat:64> * <var:i> + <nat:292> * <var:e> + <nat:364> * <var:t> + <nat:244> * <var:v> + <nat:27> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:64> * <var:i> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:364> * <var:t> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:454> * <var:C> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:292> * <var:e> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:244> * <var:v> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:38> * <var:O> ) = true ) . { rewrite Nat . even_mul . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . assert ( <genH> : Nat . odd <nat:27> = true ) . { auto . } rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 