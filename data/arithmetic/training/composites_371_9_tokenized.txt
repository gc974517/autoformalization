\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Let $ <var:N> $ , $ <var:X> $ , $ <var:h> $ , $ <var:j> $ , $ <var:x> $ , $ <var:v> $ , $ <var:F> $ , $ <var:n> $ , and $ <var:C> $ be integers so that $ <var:F> $ , $ <var:x> $ , $ <var:h> $ , $ <var:X> $ , $ <var:C> $ , $ <var:j> $ , $ <var:N> $ , $ <var:v> $ , and $ <var:n> $ more than or equivalent to <nat:2> . $ <var:F> \cdot <var:x> \cdot <var:C> \cdot <var:N> \cdot <var:n> \cdot <var:j> \cdot <var:h> \cdot <var:X> \cdot <var:v> = <nat:26611200> $ . \end{theorem} \begin{proof} Note $ <nat:26611200> = <nat:5> \cdot <nat:11> \cdot <nat:4> \cdot <nat:12> \cdot <nat:9> \cdot <nat:10> \cdot <nat:8> \cdot <nat:7> \cdot <nat:2> $ . Similarly observe that $ <nat:11> $ , $ <nat:5> $ , $ <nat:7> $ , $ <nat:10> $ , $ <nat:9> $ , $ <nat:8> $ , $ <nat:2> $ , $ <nat:4> $ , and $ <nat:12> $ are greater than or equivalent to <nat:2> . \end{proof} \end{document} 
~
Require Import Lia . Theorem <genP:1> : exists <var:N> <var:X> <var:h> <var:j> <var:x> <var:v> <var:F> <var:n> <var:C> : nat , ( <var:F> >= <nat:2> ) /\ ( <var:x> >= <nat:2> ) /\ ( <var:h> >= <nat:2> ) /\ ( <var:X> >= <nat:2> ) /\ ( <var:C> >= <nat:2> ) /\ ( <var:j> >= <nat:2> ) /\ ( <var:N> >= <nat:2> ) /\ ( <var:v> >= <nat:2> ) /\ ( <var:n> >= <nat:2> ) /\ ( <var:F> * <var:x> * <var:C> * <var:N> * <var:n> * <var:j> * <var:h> * <var:X> * <var:v> = <nat:26611200> ) . Proof . exists <nat:2> . exists <nat:5> . exists <nat:4> . exists <nat:9> . exists <nat:10> . exists <nat:12> . exists <nat:11> . exists <nat:8> . exists <nat:7> . assert ( <genH> : <nat:11> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:5> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:7> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:10> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:9> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:8> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:2> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:4> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:12> >= <nat:2> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 