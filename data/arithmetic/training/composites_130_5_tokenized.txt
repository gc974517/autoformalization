\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \newtheorem{definition}{Definition} \begin{document} \begin{definition} Assuming there are $ <var:o> $ , $ <var:N> $ , $ <var:I> $ , $ <var:B> $ , $ <var:z> \in \mathbb{N} $ we define that $ <var:C> \in \mathbb{N} $ is considered a <def:five-composite> positive integer if $ <var:B> \times <var:z> \times <var:N> \times <var:o> \times <var:I> = <var:C> $ plus such that $ <var:z> $ , $ <var:I> $ , $ <var:N> $ , $ <var:o> $ and $ <var:B> > <nat:1> $ . \end{definition} \begin{theorem} The positive integer <nat:1008> is a <def:five-composite> number . \end{theorem} \begin{proof} Take $ <var:z> = <nat:2> $ , $ <var:I> = <nat:4> $ , $ <var:B> = <nat:7> $ , $ <var:o> = <nat:3> $ and $ <var:N> = <nat:6> $ . We justify <nat:1008> is the multiplication between some positive integers $ <var:I> $ , $ <var:N> $ , $ <var:B> $ , $ <var:o> $ and $ <var:z> $ as well as $ <var:I> $ , $ <var:z> $ , $ <var:o> $ , $ <var:N> $ and $ <var:B> > <nat:1> $ . Notice $ <var:N> = <nat:6> $ , $ <var:I> = <nat:4> $ , $ <var:o> = <nat:3> $ , $ <var:z> = <nat:2> $ , and $ <var:B> = <nat:7> > <nat:1> $ . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:five-composite> ( <var:C> : nat ) := exists <var:o> <var:N> <var:I> <var:B> <var:z> : nat , ( <var:B> * <var:z> * <var:N> * <var:o> * <var:I> = <var:C> ) /\ ( <var:z> > <nat:1> ) /\ ( <var:I> > <nat:1> ) /\ ( <var:N> > <nat:1> ) /\ ( <var:o> > <nat:1> ) /\ ( <var:B> > <nat:1> ) . Theorem <genP:1> : <def:five-composite> <nat:1008> . Proof . unfold <def:five-composite> . exists <nat:3> . exists <nat:6> . exists <nat:4> . exists <nat:7> . exists <nat:2> . assert ( <genH> : <nat:6> > <nat:1> ) . { lia . } assert ( <genH> : <nat:4> > <nat:1> ) . { lia . } assert ( <genH> : <nat:3> > <nat:1> ) . { lia . } assert ( <genH> : <nat:2> > <nat:1> ) . { lia . } assert ( <genH> : <nat:7> > <nat:1> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 