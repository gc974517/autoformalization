\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:Z> * <nat:92> + <nat:58> * <var:r> + <nat:425> + <nat:284> * <var:t> + <var:s> * <nat:460> $ is odd . \end{theorem} \begin{proof} $ <var:s> * <nat:460> $ is clearly even . This must be true from the knowledge multiplying of an even natural and some element of $ \mathbb{N} $ is even . This fact is proven because the integer $ <nat:460> $ is clearly even . The leading term $ <nat:92> $ is an even number in $ \mathbb{Z}^+ $ . Therefore , the pair $ <var:Z> * <nat:92> $ must be even at the same time . Recall that the positive integer $ <nat:58> $ is obviously an even positive integer . As a consequence , the pair $ <var:r> * <nat:58> $ is guaranteed to be even too . Building on , remember the term $ <nat:284> * <var:t> $ is known to be even . This fact is proven since the multiplication between an even number in $ \mathbb{Z}^+ $ with a natural is obviously an even element of $ \mathbb{N} $ as well as the number $ <nat:284> $ is clearly even . Take note $ <nat:425> $ is guaranteed to be an odd element of $ \mathbb{Z}^+ $ . We justify the theorem must be true . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:Z> <var:r> <var:t> <var:s> : nat , Nat . odd ( <nat:92> * <var:Z> + <nat:58> * <var:r> + <nat:284> * <var:t> + <nat:460> * <var:s> + <nat:425> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:460> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:460> * <var:s> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:92> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:92> * <var:Z> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:58> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:58> * <var:r> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:284> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:284> * <var:t> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . odd <nat:425> = true ) . { auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 