\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \newtheorem{definition}{Definition} \begin{document} \begin{definition} There are integers $ <var:l> $ , $ <var:X> $ more than or equal to <nat:2> . Take as given that some whole number $ <var:N> $ is named a <def:two-composite> integer if $ <var:N> = <var:l> \cdot <var:X> $ . \end{definition} \begin{theorem} $ <nat:6> = <var:N> $ is a <def:two-composite> positive integer . \end{theorem} \begin{proof} Recall <nat:6> is a <def:two-composite> number supposing <nat:6> is the multiplication of positive integers $ <var:l> $ and $ <var:X> $ such that $ <var:X> $ , and $ <var:l> \geq <nat:2> $ . Allow $ <var:l> = <nat:3> $ , and $ <var:X> = <nat:2> $ . Observe $ <nat:2> $ , $ <nat:3> $ are more than or equivalent to <nat:2> . What's more notice moreover $ <var:X> \times <var:l> = <nat:6> $ . This yields our principle holds . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:two-composite> ( <var:N> : nat ) := exists <var:l> <var:X> : nat , ( <var:l> >= <nat:2> ) /\ ( <var:X> >= <nat:2> ) /\ ( <var:N> = <var:l> * <var:X> ) . Theorem <genP:1> : <def:two-composite> <nat:6> . Proof . unfold <def:two-composite> . exists <nat:3> . exists <nat:2> . assert ( <genH> : <nat:2> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:3> >= <nat:2> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . Qed . 