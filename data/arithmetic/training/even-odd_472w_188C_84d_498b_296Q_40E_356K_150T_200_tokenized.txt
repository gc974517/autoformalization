\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:472> \cdot <var:w> + <nat:188> \cdot <var:C> + <nat:84> \cdot <var:d> + <var:b> \cdot <nat:498> + <var:Q> \cdot <nat:296> + <nat:200> + <nat:40> \cdot <var:E> + <nat:356> \cdot <var:K> + <var:T> \cdot <nat:150> $ is even . \end{theorem} \begin{proof} It can be justified that this lemma must be true . Take note that the products $ <nat:472> <var:w> $ , $ <var:T> <nat:150> $ , $ <var:d> <nat:84> $ , $ <nat:498> <var:b> $ , $ <var:E> <nat:40> $ , additionally $ <nat:356> <var:K> $ are known to be even elements of $ \mathbb{N} $ . This claim holds because multiplying between an even natural with an arbitrary element of $ \mathbb{N} $ will be even . The term $ <nat:296> <var:Q> $ is guaranteed to be an even element of $ \mathbb{Z}^+ $ . The product $ <var:C> <nat:188> $ is obviously an even number in $ \mathbb{Z}^+ $ . This fact must be true from the fact taking the product of an even natural with some natural number is an even positive integer . We know that the summation of even positive integers is an even integer . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:w> <var:C> <var:d> <var:b> <var:Q> <var:E> <var:K> <var:T> : nat , Nat . even ( <nat:472> * <var:w> + <nat:188> * <var:C> + <nat:84> * <var:d> + <nat:498> * <var:b> + <nat:296> * <var:Q> + <nat:40> * <var:E> + <nat:356> * <var:K> + <nat:150> * <var:T> + <nat:200> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:472> * <var:w> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:150> * <var:T> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:84> * <var:d> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:498> * <var:b> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:40> * <var:E> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:356> * <var:K> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:296> * <var:Q> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:188> * <var:C> ) = true ) . { rewrite Nat . even_mul . auto . } repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 