\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Take as given that with the condition there are $ <var:a> $ , $ <var:d> $ , $ <var:x> $ , $ <var:G> $ , $ <var:B> $ , $ <var:Q> $ , $ <var:J> \in \mathbb{N} $ then define that some integer $ <var:F> $ is considered a <def:seven-composite> positive integer assuming $ <var:F> = <var:a> \cdot <var:x> \cdot <var:B> \cdot <var:G> \cdot <var:d> \cdot <var:J> \cdot <var:Q> $ and terms are larger than <nat:1> . Therefore the number <nat:887040> is <def:seven-composite> . \end{theorem} \begin{proof} Recollect that a <def:seven-composite> integer is the multiplication between $ <var:B> $ , $ <var:Q> $ , $ <var:x> $ , $ <var:a> $ , $ <var:d> $ , $ <var:J> $ , and $ <var:G> $ more than <nat:1> . Take $ <var:a> = <nat:8> $ , $ <var:B> = <nat:11> $ , $ <var:Q> = <nat:5> $ , $ <var:J> = <nat:4> $ , $ <var:G> = <nat:7> $ , $ <var:x> = <nat:6> $ , and $ <var:d> = <nat:12> $ . We demonstrate <nat:887040> is a <def:seven-composite> number . Observe $ <nat:11> $ , $ <nat:4> $ , $ <nat:12> $ , $ <nat:5> $ , $ <nat:7> $ , $ <nat:6> $ and $ <nat:8> $ are more than <nat:1> . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:seven-composite> ( <var:F> : nat ) := exists <var:a> <var:d> <var:x> <var:G> <var:B> <var:Q> <var:J> : nat , ( <var:F> = <var:a> * <var:x> * <var:B> * <var:G> * <var:d> * <var:J> * <var:Q> ) /\ ( <var:a> > <nat:1> ) /\ ( <var:d> > <nat:1> ) /\ ( <var:x> > <nat:1> ) /\ ( <var:G> > <nat:1> ) /\ ( <var:B> > <nat:1> ) /\ ( <var:Q> > <nat:1> ) /\ ( <var:J> > <nat:1> ) . Theorem <genP:1> : <def:seven-composite> <nat:887040> . Proof . unfold <def:seven-composite> . exists <nat:8> . exists <nat:12> . exists <nat:6> . exists <nat:7> . exists <nat:11> . exists <nat:5> . exists <nat:4> . assert ( <genH> : <nat:11> > <nat:1> ) . { lia . } assert ( <genH> : <nat:4> > <nat:1> ) . { lia . } assert ( <genH> : <nat:12> > <nat:1> ) . { lia . } assert ( <genH> : <nat:5> > <nat:1> ) . { lia . } assert ( <genH> : <nat:7> > <nat:1> ) . { lia . } assert ( <genH> : <nat:6> > <nat:1> ) . { lia . } assert ( <genH> : <nat:8> > <nat:1> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 