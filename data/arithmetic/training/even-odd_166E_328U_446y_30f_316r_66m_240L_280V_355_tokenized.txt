\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:L> * <nat:240> + <nat:446> * <var:y> + <var:m> * <nat:66> + <var:V> * <nat:280> + <nat:355> + <var:U> * <nat:328> + <var:f> * <nat:30> + <nat:316> * <var:r> + <var:E> * <nat:166> $ is odd . \end{theorem} \begin{proof} We show that the formula $ <var:U> <nat:328> + <var:f> <nat:30> + <nat:446> <var:y> + <var:r> <nat:316> + <nat:280> <var:V> + <var:E> <nat:166> + <var:L> <nat:240> + <var:m> <nat:66> $ is guaranteed to be even . The whole numbers $ <nat:166> $ , $ <nat:446> $ , $ <nat:328> $ , and likewise $ <nat:66> $ are guaranteed to be even The integers $ <nat:316> $ and also $ <nat:30> $ must be even What's more , the coefficient $ <nat:280> $ is clearly even What's more , we know the natural number $ <nat:240> $ is an even element of $ \mathbb{N} $ As a consequence that the summing between an even number and an even element of $ \mathbb{N} $ will be even , the formula $ <var:E> \cdot <nat:166> + <var:U> \cdot <nat:328> + <var:y> \cdot <nat:446> + <nat:30> \cdot <var:f> + <nat:316> \cdot <var:r> + <var:m> \cdot <nat:66> + <var:L> \cdot <nat:240> + <nat:280> \cdot <var:V> $ must be even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:L> <var:y> <var:m> <var:V> <var:U> <var:f> <var:r> <var:E> : nat , Nat . odd ( <nat:240> * <var:L> + <nat:446> * <var:y> + <nat:66> * <var:m> + <nat:280> * <var:V> + <nat:328> * <var:U> + <nat:30> * <var:f> + <nat:316> * <var:r> + <nat:166> * <var:E> + <nat:355> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:166> = true ) . { auto . } assert ( <genH> : Nat . even <nat:446> = true ) . { auto . } assert ( <genH> : Nat . even <nat:328> = true ) . { auto . } assert ( <genH> : Nat . even <nat:66> = true ) . { auto . } assert ( <genH> : Nat . even <nat:316> = true ) . { auto . } assert ( <genH> : Nat . even <nat:30> = true ) . { auto . } assert ( <genH> : Nat . even <nat:280> = true ) . { auto . } assert ( <genH> : Nat . even <nat:240> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:240> * <var:L> + <nat:446> * <var:y> + <nat:66> * <var:m> + <nat:280> * <var:V> + <nat:328> * <var:U> + <nat:30> * <var:f> + <nat:316> * <var:r> + <nat:166> * <var:E> ) = true ) . { repeat rewrite Nat . even_add . repeat rewrite Nat . even_mul . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . auto . Qed . 