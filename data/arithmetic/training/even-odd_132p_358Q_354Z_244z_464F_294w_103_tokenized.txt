\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:Q> \times <nat:358> + <nat:244> \times <var:z> + <var:p> \times <nat:132> + <nat:464> \times <var:F> + <nat:354> \times <var:Z> + <nat:294> \times <var:w> + <nat:103> $ is odd . \end{theorem} \begin{proof} See the integer $ <nat:132> $ is clearly an even natural . In consequence , the pair $ <var:p> \times <nat:132> $ is guaranteed to be even at the same time . Adding on , recall the product $ <nat:358> \times <var:Q> $ is known to be even by reason that the integer $ <nat:358> $ is clearly an even number . Likewise , we know $ <nat:354> \times <var:Z> $ is known as an even integer as a consequence that the product between an even element of $ \mathbb{N} $ and any integer is an even natural , which is proven because the coefficient $ <nat:354> $ is clearly even . The whole number $ <nat:244> $ is clearly an even number . Then , the product $ <nat:244> \times <var:z> $ is even in addition . What's more , take note $ <nat:464> \times <var:F> $ is obviously an even element of $ \mathbb{N} $ as a consequence that the product of an even natural with some whole number will be fundamentally an even natural . This claim holds by reason that the integer $ <nat:464> $ is even . Furthermore , see that the leading term $ <nat:294> $ is trivially even . Therefore , the product $ <nat:294> \times <var:w> $ is even too . By reason that the summing between even numbers in $ \mathbb{Z}^+ $ collectively with an odd element of $ \mathbb{N} $ is clearly an odd integer , hence the main result is true . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:Q> <var:z> <var:p> <var:F> <var:Z> <var:w> : nat , Nat . odd ( <nat:358> * <var:Q> + <nat:244> * <var:z> + <nat:132> * <var:p> + <nat:464> * <var:F> + <nat:354> * <var:Z> + <nat:294> * <var:w> + <nat:103> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:132> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:132> * <var:p> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:358> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:358> * <var:Q> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:354> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:354> * <var:Z> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:244> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:244> * <var:z> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:464> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:464> * <var:F> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:294> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:294> * <var:w> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 