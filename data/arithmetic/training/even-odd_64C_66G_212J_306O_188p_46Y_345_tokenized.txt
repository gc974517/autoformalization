\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:G> \cdot <nat:66> + <nat:345> + <nat:212> \cdot <var:J> + <nat:306> \cdot <var:O> + <nat:188> \cdot <var:p> + <var:C> \cdot <nat:64> + <var:Y> \cdot <nat:46> $ is guaranteed to be odd . \end{theorem} \begin{proof} This proposition must be true as a consequence that $ <nat:46> \times <var:Y> + <var:G> \times <nat:66> + <var:p> \times <nat:188> + <var:C> \times <nat:64> + <var:O> \times <nat:306> + <var:J> \times <nat:212> $ is trivially even . Take note that the products $ <var:Y> * <nat:46> $ , $ <var:p> * <nat:188> $ , and likewise $ <nat:66> * <var:G> $ will be even elements of $ \mathbb{N} $ . The terms $ <var:J> * <nat:212> $ and $ <nat:306> * <var:O> $ are trivially even . This holds from the knowledge the product of an even element of $ \mathbb{N} $ with some natural must be even . The pair $ <var:C> * <nat:64> $ is known to be even . $ <nat:64> * <var:C> + <nat:66> * <var:G> + <var:J> * <nat:212> + <var:O> * <nat:306> + <nat:188> * <var:p> + <var:Y> * <nat:46> $ will be even from the fact the adding of an even whole number and an even number in $ \mathbb{Z}^+ $ will be even additionally by reason that the product between even whole numbers and an arbitrary positive integer is an even integer . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:G> <var:J> <var:O> <var:p> <var:C> <var:Y> : nat , Nat . odd ( <nat:66> * <var:G> + <nat:212> * <var:J> + <nat:306> * <var:O> + <nat:188> * <var:p> + <nat:64> * <var:C> + <nat:46> * <var:Y> + <nat:345> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:46> * <var:Y> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:188> * <var:p> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:66> * <var:G> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:212> * <var:J> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:306> * <var:O> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:64> * <var:C> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:66> * <var:G> + <nat:212> * <var:J> + <nat:306> * <var:O> + <nat:188> * <var:p> + <nat:64> * <var:C> + <nat:46> * <var:Y> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . auto . Qed . 