\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:85> + <var:X> \cdot <nat:414> + <nat:62> \cdot <var:e> + <nat:102> \cdot <var:R> + <nat:246> \cdot <var:z> + <nat:96> \cdot <var:f> + <nat:8> \cdot <var:M> $ is odd . \end{theorem} \begin{proof} The natural numbers $ <nat:414> $ , $ <nat:62> $ , $ <nat:102> $ , $ <nat:246> $ , $ <nat:96> $ , as well as $ <nat:8> $ must be even . Hence , the products $ <nat:414> \times <var:X> $ , $ <nat:62> \times <var:e> $ , $ <nat:102> \times <var:R> $ , $ <var:z> \times <nat:246> $ , $ <nat:96> \times <var:f> $ , plus $ <nat:8> \times <var:M> $ is even as well . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:X> <var:e> <var:R> <var:z> <var:f> <var:M> : nat , Nat . odd ( <nat:414> * <var:X> + <nat:62> * <var:e> + <nat:102> * <var:R> + <nat:246> * <var:z> + <nat:96> * <var:f> + <nat:8> * <var:M> + <nat:85> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:414> = true ) . { auto . } assert ( <genH> : Nat . even <nat:62> = true ) . { auto . } assert ( <genH> : Nat . even <nat:102> = true ) . { auto . } assert ( <genH> : Nat . even <nat:246> = true ) . { auto . } assert ( <genH> : Nat . even <nat:96> = true ) . { auto . } assert ( <genH> : Nat . even <nat:8> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:414> * <var:X> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:62> * <var:e> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:102> * <var:R> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:246> * <var:z> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:96> * <var:f> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:8> * <var:M> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 