\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:v> \times <nat:430> + <var:u> \times <nat:44> + <nat:182> \times <var:i> + <nat:42> \times <var:g> + <nat:312> \times <var:j> + <nat:175> + <nat:440> \times <var:e> $ must be odd with all $ <var:e> $ , $ <var:g> $ , $ <var:i> $ , $ <var:u> $ , $ <var:v> $ , and $ <var:j> \in \mathbb{N} $ . \end{theorem} \begin{proof} It can be proven that that the formula $ <var:e> \cdot <nat:440> + <var:g> \cdot <nat:42> + <var:v> \cdot <nat:430> + <var:i> \cdot <nat:182> + <nat:312> \cdot <var:j> + <var:u> \cdot <nat:44> $ is guaranteed to be even . The products $ <var:v> * <nat:430> $ , $ <var:u> * <nat:44> $ , as well as $ <nat:42> * <var:g> $ are known to be even numbers . The terms $ <var:e> * <nat:440> $ in addition to $ <var:j> * <nat:312> $ are trivially even since multiplying between an even natural and some integer is even . What's more , remember the product $ <nat:182> * <var:i> $ is clearly even from the knowledge taking the product of an even number in $ \mathbb{Z}^+ $ and some natural will be even . Recall $ <nat:175> $ is guaranteed to be an odd element of $ \mathbb{N} $ . It can be verified that the lemma is true . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:e> <var:g> <var:i> <var:u> <var:v> <var:j> : nat , Nat . odd ( <nat:430> * <var:v> + <nat:44> * <var:u> + <nat:182> * <var:i> + <nat:42> * <var:g> + <nat:312> * <var:j> + <nat:440> * <var:e> + <nat:175> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:430> * <var:v> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:44> * <var:u> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:42> * <var:g> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:440> * <var:e> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:312> * <var:j> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:182> * <var:i> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:430> * <var:v> + <nat:44> * <var:u> + <nat:182> * <var:i> + <nat:42> * <var:g> + <nat:312> * <var:j> + <nat:440> * <var:e> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } assert ( <genH> : Nat . odd <nat:175> = true ) . { auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . rewrite <genH> . auto . Qed . 