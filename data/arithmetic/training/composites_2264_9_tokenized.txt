\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:9580032> $ is $ <var:C> \times <var:c> \times <var:L> \times <var:u> \times <var:r> \times <var:D> \times <var:O> \times <var:F> \times <var:y> $ such that $ <var:c> $ , $ <var:L> $ , $ <var:C> $ , $ <var:D> $ , $ <var:u> $ , $ <var:O> $ , $ <var:r> $ , $ <var:y> $ , and $ <var:F> \geq <nat:2> $ . \end{theorem} \begin{proof} We justify $ <var:y> $ , $ <var:c> $ , $ <var:L> $ , $ <var:r> $ , $ <var:C> $ , $ <var:F> $ , $ <var:u> $ , $ <var:D> $ , $ <var:O> \geq <nat:2> $ as well as $ <nat:9580032> = <var:D> * <var:r> * <var:C> * <var:O> * <var:L> * <var:u> * <var:F> * <var:y> * <var:c> $ . Note that $ <nat:9580032> = <var:u> \cdot <var:D> \cdot <var:F> \cdot <var:L> \cdot <var:r> \cdot <var:y> \cdot <var:C> \cdot <var:c> \cdot <var:O> $ suggests $ <var:y> = <nat:6> $ , $ <var:C> = <nat:3> $ , $ <var:D> = <nat:2> $ , $ <var:r> = <nat:8> $ , $ <var:O> = <nat:12> $ , $ <var:c> = <nat:11> $ , $ <var:F> = <nat:9> $ , $ <var:L> = <nat:7> $ , $ <var:u> = <nat:4> $ . In addition notice that $ <nat:6> $ , $ <nat:11> $ , $ <nat:3> $ , $ <nat:4> $ , $ <nat:7> $ , $ <nat:8> $ , $ <nat:12> $ , $ <nat:2> $ , $ <nat:9> \geq <nat:2> $ . \end{proof} \end{document} 
~
Require Import Lia . Theorem <genP:1> : exists <var:F> <var:u> <var:D> <var:y> <var:r> <var:O> <var:c> <var:C> <var:L> : nat , ( <nat:9580032> = <var:C> * <var:c> * <var:L> * <var:u> * <var:r> * <var:D> * <var:O> * <var:F> * <var:y> ) /\ ( <var:c> >= <nat:2> ) /\ ( <var:L> >= <nat:2> ) /\ ( <var:C> >= <nat:2> ) /\ ( <var:D> >= <nat:2> ) /\ ( <var:u> >= <nat:2> ) /\ ( <var:O> >= <nat:2> ) /\ ( <var:r> >= <nat:2> ) /\ ( <var:y> >= <nat:2> ) /\ ( <var:F> >= <nat:2> ) . Proof . exists <nat:9> . exists <nat:4> . exists <nat:2> . exists <nat:6> . exists <nat:8> . exists <nat:12> . exists <nat:11> . exists <nat:3> . exists <nat:7> . assert ( <genH> : <nat:6> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:11> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:3> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:4> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:7> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:8> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:12> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:2> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:9> >= <nat:2> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 