\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Allow $ <var:b> $ , $ <var:x> $ , $ <var:N> $ , $ <var:w> $ , $ <var:M> $ , $ <var:v> $ , and $ <var:C> \in \mathbb{Z}^+ $ where $ <var:N> $ , $ <var:b> $ , $ <var:M> $ , $ <var:x> $ , $ <var:C> $ , $ <var:v> $ and $ <var:w> > <nat:1> $ and satisfying the condition that the whole number <nat:133056> is the product of positive integers $ <var:b> $ , $ <var:x> $ , $ <var:N> $ , $ <var:w> $ , $ <var:M> $ , $ <var:v> $ , and $ <var:C> \in \mathbb{Z}^+ $ . \end{theorem} \begin{proof} Take $ <var:C> = <nat:3> $ , $ <var:M> = <nat:7> $ , $ <var:v> = <nat:12> $ , $ <var:N> = <nat:11> $ , $ <var:b> = <nat:2> $ , $ <var:w> = <nat:6> $ , and $ <var:x> = <nat:4> $ . Notice that $ <var:w> = <nat:6> $ , $ <var:N> = <nat:11> $ , $ <var:v> = <nat:12> $ , $ <var:b> = <nat:2> $ , $ <var:x> = <nat:4> $ , $ <var:M> = <nat:7> $ , $ <var:C> = <nat:3> > <nat:1> $ . \end{proof} \end{document} 
~
Require Import Lia . Theorem <genP:1> : exists <var:b> <var:x> <var:N> <var:w> <var:M> <var:v> <var:C> : nat , ( <var:N> > <nat:1> ) /\ ( <var:b> > <nat:1> ) /\ ( <var:M> > <nat:1> ) /\ ( <var:x> > <nat:1> ) /\ ( <var:C> > <nat:1> ) /\ ( <var:v> > <nat:1> ) /\ ( <var:w> > <nat:1> ) /\ ( <nat:133056> = <var:b> * <var:x> * <var:N> * <var:w> * <var:M> * <var:v> * <var:C> ) . Proof . exists <nat:2> . exists <nat:4> . exists <nat:11> . exists <nat:6> . exists <nat:7> . exists <nat:12> . exists <nat:3> . assert ( <genH> : <nat:6> > <nat:1> ) . { lia . } assert ( <genH> : <nat:11> > <nat:1> ) . { lia . } assert ( <genH> : <nat:12> > <nat:1> ) . { lia . } assert ( <genH> : <nat:2> > <nat:1> ) . { lia . } assert ( <genH> : <nat:4> > <nat:1> ) . { lia . } assert ( <genH> : <nat:7> > <nat:1> ) . { lia . } assert ( <genH> : <nat:3> > <nat:1> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 