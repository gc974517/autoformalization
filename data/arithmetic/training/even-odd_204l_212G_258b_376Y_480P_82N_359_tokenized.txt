\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Given any positive numbers $ <var:P> $ , $ <var:Y> $ , $ <var:N> $ , $ <var:l> $ , $ <var:G> $ , and $ <var:b> $ the sum $ <var:l> * <nat:204> + <var:G> * <nat:212> + <var:b> * <nat:258> + <var:Y> * <nat:376> + <nat:480> * <var:P> + <nat:82> * <var:N> + <nat:359> $ will be odd . \end{theorem} \begin{proof} Building on , the terms $ <nat:204> \times <var:l> $ , $ <var:G> \times <nat:212> $ , $ <var:b> \times <nat:258> $ , $ <nat:376> \times <var:Y> $ , $ <nat:480> \times <var:P> $ , $ <nat:82> \times <var:N> $ , are guaranteed to be even whole numbers . This fact is proven from the fact the multiplication of an even number in $ \mathbb{Z}^+ $ with a natural must be by its very nature an even natural , and is proven from the fact the coefficients $ <nat:204> $ , $ <nat:212> $ , $ <nat:258> $ , $ <nat:376> $ , $ <nat:480> $ , $ <nat:82> $ , will be obviously even numbers . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:P> <var:Y> <var:N> <var:l> <var:G> <var:b> : nat , Nat . odd ( <nat:204> * <var:l> + <nat:212> * <var:G> + <nat:258> * <var:b> + <nat:376> * <var:Y> + <nat:480> * <var:P> + <nat:82> * <var:N> + <nat:359> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:204> = true ) . { auto . } assert ( <genH> : Nat . even <nat:212> = true ) . { auto . } assert ( <genH> : Nat . even <nat:258> = true ) . { auto . } assert ( <genH> : Nat . even <nat:376> = true ) . { auto . } assert ( <genH> : Nat . even <nat:480> = true ) . { auto . } assert ( <genH> : Nat . even <nat:82> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:204> * <var:l> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:212> * <var:G> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:258> * <var:b> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:376> * <var:Y> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:480> * <var:P> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:82> * <var:N> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 