\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} If we have $ <var:G> = <var:Z> \times <var:Y> \times <var:b> \times <var:U> \times <var:L> \times <var:K> \times <var:y> $ with $ <var:G> \in \mathbb{Z}^+ $ plus satisfying the condition that $ <var:Y> $ , $ <var:y> $ , $ <var:L> $ , $ <var:U> $ , $ <var:Z> $ , $ <var:K> $ and $ <var:b> \geq <nat:2> $ with some $ <var:L> $ , $ <var:Y> $ , $ <var:Z> $ , $ <var:K> $ , $ <var:U> $ , $ <var:y> $ , $ <var:b> \in \mathbb{N} $ , then take that $ <var:G> $ is a <def:seven-composite> integer . Consequently the whole number <nat:950400> is a <def:seven-composite> number . \end{theorem} \begin{proof} Recollect that <nat:950400> is a <def:seven-composite> number given that <nat:950400> is the product of whole numbers $ <var:b> $ , $ <var:L> $ , $ <var:K> $ , $ <var:Y> $ , $ <var:Z> $ , $ <var:y> $ , $ <var:U> $ greater than or equivalent to <nat:2> . Observe $ <nat:9> $ , $ <nat:11> $ , $ <nat:4> $ , $ <nat:8> $ , $ <nat:5> $ , $ <nat:10> $ and $ <nat:6> $ are greater than or equal to <nat:2> . Plus note likewise $ <nat:950400> = <nat:6> \times <nat:8> \times <nat:11> \times <nat:4> \times <nat:5> \times <nat:9> \times <nat:10> $ . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:seven-composite> ( <var:G> : nat ) := exists <var:L> <var:Y> <var:Z> <var:K> <var:U> <var:y> <var:b> : nat , ( <var:G> = <var:Z> * <var:Y> * <var:b> * <var:U> * <var:L> * <var:K> * <var:y> ) /\ ( <var:Y> >= <nat:2> ) /\ ( <var:y> >= <nat:2> ) /\ ( <var:L> >= <nat:2> ) /\ ( <var:U> >= <nat:2> ) /\ ( <var:Z> >= <nat:2> ) /\ ( <var:K> >= <nat:2> ) /\ ( <var:b> >= <nat:2> ) . Theorem <genP:1> : <def:seven-composite> <nat:950400> . Proof . unfold <def:seven-composite> . assert ( <genH> : <nat:9> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:11> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:4> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:8> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:5> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:10> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:6> >= <nat:2> ) . { lia . } exists <nat:9> . exists <nat:4> . exists <nat:10> . exists <nat:11> . exists <nat:5> . exists <nat:8> . exists <nat:6> . repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 