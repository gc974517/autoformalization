\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:40> <var:p> + <nat:58> <var:Q> + <nat:108> <var:v> + <var:i> <nat:70> + <nat:292> <var:A> + <var:Z> <nat:126> + <nat:160> + <var:h> <nat:36> + <var:P> <nat:476> $ is guaranteed to be even assuming any positive integers $ <var:p> $ , $ <var:h> $ , $ <var:P> $ , $ <var:Z> $ , $ <var:i> $ , $ <var:v> $ , $ <var:A> $ , and $ <var:Q> $ . \end{theorem} \begin{proof} Recall the terms $ <var:Z> \cdot <nat:126> $ , $ <nat:476> \cdot <var:P> $ , and also $ <nat:292> \cdot <var:A> $ are guaranteed to be even . Adding on , observe that the products $ <var:Q> \cdot <nat:58> $ , $ <nat:40> \cdot <var:p> $ , $ <nat:36> \cdot <var:h> $ , as well as $ <var:i> \cdot <nat:70> $ are trivially even natural numbers . Building on , $ <nat:108> \cdot <var:v> $ is trivially even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:p> <var:h> <var:P> <var:Z> <var:i> <var:v> <var:A> <var:Q> : nat , Nat . even ( <nat:40> * <var:p> + <nat:58> * <var:Q> + <nat:108> * <var:v> + <nat:70> * <var:i> + <nat:292> * <var:A> + <nat:126> * <var:Z> + <nat:36> * <var:h> + <nat:476> * <var:P> + <nat:160> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:126> * <var:Z> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:476> * <var:P> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:292> * <var:A> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:58> * <var:Q> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:40> * <var:p> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:36> * <var:h> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:70> * <var:i> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:108> * <var:v> ) = true ) . { rewrite Nat . even_mul . auto . } repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 