\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:s> \times <nat:484> + <nat:361> + <nat:56> \times <var:y> + <var:a> \times <nat:426> + <nat:266> \times <var:z> + <nat:134> \times <var:J> + <var:m> \times <nat:20> $ is odd given some integers $ <var:m> $ , $ <var:a> $ , $ <var:z> $ , $ <var:J> $ , $ <var:y> $ , and $ <var:s> $ . \end{theorem} \begin{proof} It can be demonstrated that the expression $ <nat:484> \times <var:s> + <nat:20> \times <var:m> + <var:y> \times <nat:56> + <nat:134> \times <var:J> + <var:a> \times <nat:426> + <nat:361> + <nat:266> \times <var:z> $ will be odd . We know that the products $ <var:a> \times <nat:426> $ , $ <nat:134> \times <var:J> $ , as well as $ <var:s> \times <nat:484> $ are clearly even . The term $ <nat:20> \times <var:m> $ is clearly an even whole number . This must be true since taking the product of an even natural and a whole number will be an even number in $ \mathbb{N} $ . In addition , the term $ <var:z> \times <nat:266> $ is known to be an even number in $ \mathbb{Z}^+ $ from the fact multiplying of an even number and any integer is even . Adding on , we know that the product $ <nat:56> \times <var:y> $ is trivially even because the product of an even integer and any natural must be trivially an even element of $ \mathbb{Z}^+ $ . The addition of even numbers in $ \mathbb{N} $ and an odd number in $ \mathbb{N} $ is guaranteed to be instrinsically an odd integer . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:m> <var:a> <var:z> <var:J> <var:y> <var:s> : nat , Nat . odd ( <nat:484> * <var:s> + <nat:56> * <var:y> + <nat:426> * <var:a> + <nat:266> * <var:z> + <nat:134> * <var:J> + <nat:20> * <var:m> + <nat:361> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:426> * <var:a> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:134> * <var:J> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:484> * <var:s> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:20> * <var:m> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:266> * <var:z> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:56> * <var:y> ) = true ) . { rewrite Nat . even_mul . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 