\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \newtheorem{definition}{Definition} \begin{document} \begin{definition} There exist $ <var:n> $ , $ <var:w> $ , $ <var:S> $ , $ <var:t> $ , $ <var:B> \in \mathbb{N} $ satisfying the condition that $ <var:S> $ , $ <var:w> $ , $ <var:B> $ , $ <var:n> $ and $ <var:t> > <nat:1> $ . Define that some positive integer $ <var:h> $ is said to be a <def:five-composite> natural number given $ <var:B> \times <var:w> \times <var:n> \times <var:t> \times <var:S> = <var:h> $ . \end{definition} \begin{theorem} $ <nat:10080> = <var:h> $ is <def:five-composite> . \end{theorem} \begin{proof} Remember that a <def:five-composite> natural number is the multiplication between integers $ <var:w> $ , $ <var:B> $ , $ <var:S> $ , $ <var:n> $ and $ <var:t> $ satisfying the condition that $ <var:n> $ , $ <var:t> $ , $ <var:w> $ , $ <var:B> $ and $ <var:S> > <nat:1> $ . We demonstrate <nat:10080> is a <def:five-composite> whole number . Note that $ <nat:12> * <nat:2> * <nat:6> * <nat:10> * <nat:7> = <nat:10080> $ . Further observe $ <nat:6> $ , $ <nat:7> $ , $ <nat:12> $ , $ <nat:2> $ , and $ <nat:10> > <nat:1> $ . This gives <nat:10080> is <def:five-composite> . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:five-composite> ( <var:h> : nat ) := exists <var:n> <var:w> <var:S> <var:t> <var:B> : nat , ( <var:S> > <nat:1> ) /\ ( <var:w> > <nat:1> ) /\ ( <var:B> > <nat:1> ) /\ ( <var:n> > <nat:1> ) /\ ( <var:t> > <nat:1> ) /\ ( <var:B> * <var:w> * <var:n> * <var:t> * <var:S> = <var:h> ) . Theorem <genP:1> : <def:five-composite> <nat:10080> . Proof . unfold <def:five-composite> . exists <nat:2> . exists <nat:10> . exists <nat:7> . exists <nat:12> . exists <nat:6> . assert ( <genH> : <nat:6> > <nat:1> ) . { lia . } assert ( <genH> : <nat:7> > <nat:1> ) . { lia . } assert ( <genH> : <nat:12> > <nat:1> ) . { lia . } assert ( <genH> : <nat:2> > <nat:1> ) . { lia . } assert ( <genH> : <nat:10> > <nat:1> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 