\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:444> <var:I> + <nat:460> <var:e> + <nat:262> <var:t> + <var:W> <nat:220> + <nat:487> $ is guaranteed to be odd assuming all positive terms $ <var:W> $ , $ <var:I> $ , $ <var:t> $ , and $ <var:e> $ . \end{theorem} \begin{proof} Recall $ <var:I> <nat:444> + <var:e> <nat:460> + <var:W> <nat:220> + <nat:487> + <var:t> <nat:262> $ is trivially odd since $ <nat:220> * <var:W> + <var:t> * <nat:262> + <var:I> * <nat:444> + <var:e> * <nat:460> $ is obviously even . In addition , take note the product $ <var:I> \cdot <nat:444> $ is clearly even since the product between an even number in $ \mathbb{Z}^+ $ and an arbitrary natural is an even number . This is true from the knowledge the coefficient $ <nat:444> $ is trivially clearly an even element of $ \mathbb{Z}^+ $ . Likewise , we know $ <var:e> \cdot <nat:460> $ is known to be even by reason that the number $ <nat:460> $ is trivially an even positive integer . What's more , recall the number $ <nat:220> $ is trivially an even element of $ \mathbb{Z}^+ $ . In consequence , the term $ <nat:220> \cdot <var:W> $ will be even additionally . Take note that $ <nat:262> \cdot <var:t> $ is trivially even by reason that the leading term $ <nat:262> $ is obviously an even element of $ \mathbb{N} $ . It can be verified that $ <nat:460> <var:e> + <nat:220> <var:W> + <nat:487> + <var:I> <nat:444> + <var:t> <nat:262> $ is guaranteed to be odd . Observe that $ <nat:487> $ is guaranteed to be an odd integer . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:W> <var:I> <var:t> <var:e> : nat , Nat . odd ( <nat:444> * <var:I> + <nat:460> * <var:e> + <nat:262> * <var:t> + <nat:220> * <var:W> + <nat:487> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:444> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:444> * <var:I> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:460> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:460> * <var:e> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:220> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:220> * <var:W> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:262> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:262> * <var:t> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:444> * <var:I> + <nat:460> * <var:e> + <nat:262> * <var:t> + <nat:220> * <var:W> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } assert ( <genH> : Nat . odd <nat:487> = true ) . { auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . rewrite <genH> . auto . Qed . 