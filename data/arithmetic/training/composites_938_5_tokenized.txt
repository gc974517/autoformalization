\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \newtheorem{definition}{Definition} \begin{document} \begin{definition} Wherever we have satisfying the condition that $ <var:P> $ , $ <var:Q> $ , $ <var:Z> $ , $ <var:w> $ , and $ <var:t> > <nat:1> $ such that taking $ <var:s> \in \mathbb{N} $ , $ <var:s> = <var:w> * <var:P> * <var:t> * <var:Z> * <var:Q> $ , denote that $ <var:s> $ is a <def:five-composite> number given some $ <var:w> $ , $ <var:Q> $ , $ <var:Z> $ , $ <var:P> $ , $ <var:t> \in \mathbb{Z}^+ $ . \end{definition} \begin{theorem} $ <nat:10080> = <var:s> $ is a <def:five-composite> whole number . \end{theorem} \begin{proof} Recollect that a <def:five-composite> positive integer is the multiplication of integers $ <var:t> $ , $ <var:Q> $ , $ <var:w> $ , $ <var:Z> $ , and $ <var:P> $ more than <nat:1> . Take $ <var:Z> = <nat:7> $ , $ <var:Q> = <nat:8> $ , $ <var:t> = <nat:5> $ , $ <var:P> = <nat:9> $ , and $ <var:w> = <nat:4> $ . Notice $ <nat:8> \cdot <nat:9> \cdot <nat:7> \cdot <nat:5> \cdot <nat:4> = <nat:10080> = <var:Q> \cdot <var:P> \cdot <var:Z> \cdot <var:t> \cdot <var:w> $ . Moreover note $ <nat:9> $ , $ <nat:8> $ , $ <nat:7> $ , $ <nat:4> $ , $ <nat:5> > <nat:1> $ . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:five-composite> ( <var:s> : nat ) := exists <var:w> <var:Q> <var:Z> <var:P> <var:t> : nat , ( <var:P> > <nat:1> ) /\ ( <var:Q> > <nat:1> ) /\ ( <var:Z> > <nat:1> ) /\ ( <var:w> > <nat:1> ) /\ ( <var:t> > <nat:1> ) /\ ( <var:s> = <var:w> * <var:P> * <var:t> * <var:Z> * <var:Q> ) . Theorem <genP:1> : <def:five-composite> <nat:10080> . Proof . unfold <def:five-composite> . exists <nat:4> . exists <nat:8> . exists <nat:7> . exists <nat:9> . exists <nat:5> . assert ( <genH> : <nat:9> > <nat:1> ) . { lia . } assert ( <genH> : <nat:8> > <nat:1> ) . { lia . } assert ( <genH> : <nat:7> > <nat:1> ) . { lia . } assert ( <genH> : <nat:4> > <nat:1> ) . { lia . } assert ( <genH> : <nat:5> > <nat:1> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 