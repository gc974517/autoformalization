\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} With every $ <var:r> $ , $ <var:T> $ , $ <var:u> $ , and $ <var:z> \in \mathbb{N} $ the sum $ <var:r> * <nat:488> + <var:T> * <nat:286> + <var:z> * <nat:312> + <nat:483> + <var:u> * <nat:162> $ must be odd . \end{theorem} \begin{proof} Notice $ <nat:483> $ is known as odd . It can be proven that this main result holds . $ <nat:286> <var:T> + <var:r> <nat:488> + <nat:483> + <nat:162> <var:u> + <var:z> <nat:312> $ is known as odd because the sum $ <var:u> <nat:162> + <nat:286> <var:T> + <nat:312> <var:z> + <var:r> <nat:488> $ is known to be even . The product $ <var:T> * <nat:286> $ is known as an even integer since the coefficient $ <nat:286> $ is known as even . The numbers $ <nat:488> $ as well as $ <nat:162> $ are clearly even . Accordingly , the products $ <var:r> * <nat:488> $ as well as $ <var:u> * <nat:162> $ is guaranteed to be even at the same time . In addition to this , notice the positive integer $ <nat:312> $ is known to be an even positive integer . In consequence , $ <var:z> * <nat:312> $ is guaranteed to be even also . The lemma is true from the fact the adding of an even number in $ \mathbb{Z}^+ $ with an even positive integer is guaranteed to be fundamentally an even element of $ \mathbb{N} $ . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:r> <var:T> <var:u> <var:z> : nat , Nat . odd ( <nat:488> * <var:r> + <nat:286> * <var:T> + <nat:312> * <var:z> + <nat:162> * <var:u> + <nat:483> ) = true . Proof . intros . assert ( <genH> : Nat . odd <nat:483> = true ) . { auto . } assert ( <genH> : Nat . even <nat:286> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:286> * <var:T> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:488> = true ) . { auto . } assert ( <genH> : Nat . even <nat:162> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:488> * <var:r> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:162> * <var:u> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:312> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:312> * <var:z> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:488> * <var:r> + <nat:286> * <var:T> + <nat:312> * <var:z> + <nat:162> * <var:u> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . rewrite <genH> . auto . Qed . 