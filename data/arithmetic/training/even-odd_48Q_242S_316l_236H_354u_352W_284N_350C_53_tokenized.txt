\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:Q> \times <nat:48> + <nat:236> \times <var:H> + <var:u> \times <nat:354> + <nat:242> \times <var:S> + <var:W> \times <nat:352> + <var:l> \times <nat:316> + <var:N> \times <nat:284> + <nat:350> \times <var:C> + <nat:53> $ must be odd . \end{theorem} \begin{proof} The product $ <nat:48> \cdot <var:Q> $ is clearly an even whole number . This fact is proven from the knowledge the positive integer $ <nat:48> $ is known to be an even number in $ \mathbb{Z}^+ $ . See $ <var:S> \cdot <nat:242> $ is clearly an even number by reason that multiplying of an even number with an arbitrary number in $ \mathbb{Z}^+ $ is guaranteed to be even and likewise the number $ <nat:242> $ is in itself an even element of $ \mathbb{N} $ . Furthermore , remember the pair $ <nat:316> \cdot <var:l> $ is trivially an even integer . This must be true from the fact the product of an even natural and any natural number is even , which holds as a consequence that the number $ <nat:316> $ is guaranteed to be even . Take note $ <nat:236> \cdot <var:H> $ is even as a consequence that taking the product between an even natural number with any number will be even . This fact holds because the coefficient $ <nat:236> $ is known as itself an even natural number . Additionally , the number $ <nat:354> $ is even . Hence , the pair $ <nat:354> \cdot <var:u> $ is guaranteed to be even in addition . The pair $ <nat:352> \cdot <var:W> $ is known to be even since the number $ <nat:352> $ is clearly an even number . The integer $ <nat:284> $ is obviously an even number in $ \mathbb{Z}^+ $ . Thus , $ <nat:284> \cdot <var:N> $ will be even in addition . In addition , the term $ <var:C> \cdot <nat:350> $ is guaranteed to be even since the whole number $ <nat:350> $ is clearly an even integer . It can be verified that this claim must be true . Observe that $ <nat:53> $ is guaranteed to be an odd integer . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:Q> <var:H> <var:u> <var:S> <var:W> <var:l> <var:N> <var:C> : nat , Nat . odd ( <nat:48> * <var:Q> + <nat:236> * <var:H> + <nat:354> * <var:u> + <nat:242> * <var:S> + <nat:352> * <var:W> + <nat:316> * <var:l> + <nat:284> * <var:N> + <nat:350> * <var:C> + <nat:53> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:48> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:48> * <var:Q> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:242> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:242> * <var:S> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:316> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:316> * <var:l> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:236> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:236> * <var:H> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:354> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:354> * <var:u> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:352> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:352> * <var:W> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:284> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:284> * <var:N> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:350> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:350> * <var:C> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . odd <nat:53> = true ) . { auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 