\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:328> \times <var:s> + <nat:412> \times <var:q> + <nat:238> \times <var:r> + <nat:379> + <var:g> \times <nat:338> + <nat:290> \times <var:A> + <nat:110> \times <var:v> + <var:P> \times <nat:496> + <nat:80> \times <var:U> $ is guaranteed to be odd . \end{theorem} \begin{proof} We employ the fact that $ <nat:110> <var:v> + <nat:328> <var:s> + <nat:80> <var:U> + <nat:238> <var:r> + <var:A> <nat:290> + <nat:496> <var:P> + <var:q> <nat:412> + <nat:338> <var:g> + <nat:379> $ is odd because $ <nat:290> \cdot <var:A> + <nat:80> \cdot <var:U> + <nat:110> \cdot <var:v> + <var:P> \cdot <nat:496> + <nat:338> \cdot <var:g> + <nat:328> \cdot <var:s> + <nat:412> \cdot <var:q> + <nat:238> \cdot <var:r> $ is known to be even . Notice that $ <nat:379> $ is known as odd . It can be verified that the expression $ <var:g> \cdot <nat:338> + <nat:496> \cdot <var:P> + <nat:290> \cdot <var:A> + <nat:328> \cdot <var:s> + <nat:110> \cdot <var:v> + <nat:379> + <nat:80> \cdot <var:U> + <var:r> \cdot <nat:238> + <nat:412> \cdot <var:q> $ must be odd . We know that the summation of an even positive integer and an odd number will be odd . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:s> <var:q> <var:r> <var:g> <var:A> <var:v> <var:P> <var:U> : nat , Nat . odd ( <nat:328> * <var:s> + <nat:412> * <var:q> + <nat:238> * <var:r> + <nat:338> * <var:g> + <nat:290> * <var:A> + <nat:110> * <var:v> + <nat:496> * <var:P> + <nat:80> * <var:U> + <nat:379> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:328> * <var:s> + <nat:412> * <var:q> + <nat:238> * <var:r> + <nat:338> * <var:g> + <nat:290> * <var:A> + <nat:110> * <var:v> + <nat:496> * <var:P> + <nat:80> * <var:U> ) = true ) . { repeat rewrite Nat . even_add . repeat rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . odd <nat:379> = true ) . { auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . rewrite <genH> . auto . Qed . 