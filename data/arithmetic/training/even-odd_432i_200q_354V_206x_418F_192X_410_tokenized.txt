\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:F> \cdot <nat:418> + <nat:410> + <var:V> \cdot <nat:354> + <nat:206> \cdot <var:x> + <var:i> \cdot <nat:432> + <var:X> \cdot <nat:192> + <var:q> \cdot <nat:200> $ is guaranteed to be even . \end{theorem} \begin{proof} The adding of an even number with an even positive integer is an even natural . The pairs $ <nat:418> \cdot <var:F> $ , $ <var:V> \cdot <nat:354> $ , as well as $ <nat:192> \cdot <var:X> $ are guaranteed to be even . This holds by reason that taking the product between an even integer with a element of $ \mathbb{Z}^+ $ will be even . Additionally , the products $ <var:q> \cdot <nat:200> $ and moreover $ <var:i> \cdot <nat:432> $ must be even . Furthermore , recall that the pair $ <nat:206> \cdot <var:x> $ is known as even . This fact must be true as a consequence that the multiplication of an even natural with a positive integer is guaranteed to be obviously an even integer . It can be shown that the sum $ <var:i> * <nat:432> + <nat:200> * <var:q> + <var:V> * <nat:354> + <nat:206> * <var:x> + <nat:418> * <var:F> + <nat:410> + <nat:192> * <var:X> $ must be even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:F> <var:V> <var:x> <var:i> <var:X> <var:q> : nat , Nat . even ( <nat:418> * <var:F> + <nat:354> * <var:V> + <nat:206> * <var:x> + <nat:432> * <var:i> + <nat:192> * <var:X> + <nat:200> * <var:q> + <nat:410> ) = true . Proof . intros . repeat rewrite Nat . even_add . assert ( <genH> : Nat . even ( <nat:418> * <var:F> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:354> * <var:V> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:192> * <var:X> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:200> * <var:q> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:432> * <var:i> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:206> * <var:x> ) = true ) . { rewrite Nat . even_mul . auto . } rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 