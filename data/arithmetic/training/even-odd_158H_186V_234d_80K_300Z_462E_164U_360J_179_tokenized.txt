\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:179> + <var:Z> <nat:300> + <var:U> <nat:164> + <nat:186> <var:V> + <nat:234> <var:d> + <nat:158> <var:H> + <nat:360> <var:J> + <var:E> <nat:462> + <nat:80> <var:K> $ is odd with some integers $ <var:U> $ , $ <var:K> $ , $ <var:d> $ , $ <var:J> $ , $ <var:H> $ , $ <var:E> $ , $ <var:Z> $ , and $ <var:V> $ . \end{theorem} \begin{proof} Notice that the addition between an even element of $ \mathbb{Z}^+ $ with an odd positive integer must be odd . Observe that $ <nat:179> $ is guaranteed to be odd . Notice the integer $ <nat:158> $ is even . So , the product $ <var:H> * <nat:158> $ must be even as well . The number $ <nat:186> $ is guaranteed to be an even element of $ \mathbb{N} $ . Thus , the pair $ <nat:186> * <var:V> $ must be even additionally . $ <var:d> * <nat:234> $ is known to be an even natural number from the knowledge the leading term $ <nat:234> $ is even . $ <var:K> * <nat:80> $ is known as even by reason that the coefficient $ <nat:80> $ is even . Recall the term $ <nat:300> * <var:Z> $ is clearly even by reason that the multiplication of an even number with an arbitrary positive integer is even plus the whole number $ <nat:300> $ is known as an even element of $ \mathbb{N} $ . Observe that the product $ <var:E> * <nat:462> $ is guaranteed to be even . This claim is true because multiplying of an even number in $ \mathbb{Z}^+ $ and some whole number must be even . This holds by reason that the whole number $ <nat:462> $ is guaranteed to be an even positive integer . In addition , see that the natural number $ <nat:164> $ is guaranteed to be even . Accordingly , $ <var:U> * <nat:164> $ is guaranteed to be even too . Notice that the product $ <nat:360> * <var:J> $ is an even number in $ \mathbb{N} $ . This claim is proven from the fact the multiplication of an even natural number and a element of $ \mathbb{Z}^+ $ is instrinsically an even positive integer . This holds since the positive integer $ <nat:360> $ is trivially even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:U> <var:K> <var:d> <var:J> <var:H> <var:E> <var:Z> <var:V> : nat , Nat . odd ( <nat:300> * <var:Z> + <nat:164> * <var:U> + <nat:186> * <var:V> + <nat:234> * <var:d> + <nat:158> * <var:H> + <nat:360> * <var:J> + <nat:462> * <var:E> + <nat:80> * <var:K> + <nat:179> ) = true . Proof . intros . rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . assert ( <genH> : Nat . odd <nat:179> = true ) . { auto . } assert ( <genH> : Nat . even <nat:158> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:158> * <var:H> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:186> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:186> * <var:V> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:234> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:234> * <var:d> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:80> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:80> * <var:K> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:300> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:300> * <var:Z> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:462> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:462> * <var:E> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:164> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:164> * <var:U> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:360> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:360> * <var:J> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 