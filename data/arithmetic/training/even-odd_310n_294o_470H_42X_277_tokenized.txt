\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:X> \times <nat:42> + <nat:277> + <nat:294> \times <var:o> + <var:n> \times <nat:310> + <var:H> \times <nat:470> $ is odd . \end{theorem} \begin{proof} We know the adding of an even positive integer with an odd number in $ \mathbb{N} $ will be an odd number . See $ <nat:277> $ is odd . Observe that the term $ <var:n> * <nat:310> $ is guaranteed to be even . This fact holds by reason that the multiplication of an even number in $ \mathbb{N} $ with an arbitrary number in $ \mathbb{N} $ is an even natural number , which is true by reason that the whole number $ <nat:310> $ is even . The natural number $ <nat:294> $ is even . Consequently , the term $ <nat:294> * <var:o> $ will be even too . The pair $ <var:H> * <nat:470> $ is an even natural number . This is proven by reason that the product of an even element of $ \mathbb{Z}^+ $ with an arbitrary whole number is guaranteed to be an even natural . This claim holds since the number $ <nat:470> $ is known as an even element of $ \mathbb{Z}^+ $ . The natural number $ <nat:42> $ is guaranteed to be an even whole number . So , $ <var:X> * <nat:42> $ is guaranteed to be even in addition . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:X> <var:o> <var:n> <var:H> : nat , Nat . odd ( <nat:42> * <var:X> + <nat:294> * <var:o> + <nat:310> * <var:n> + <nat:470> * <var:H> + <nat:277> ) = true . Proof . intros . rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . assert ( <genH> : Nat . odd <nat:277> = true ) . { auto . } assert ( <genH> : Nat . even <nat:310> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:310> * <var:n> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:294> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:294> * <var:o> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:470> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:470> * <var:H> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:42> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:42> * <var:X> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 