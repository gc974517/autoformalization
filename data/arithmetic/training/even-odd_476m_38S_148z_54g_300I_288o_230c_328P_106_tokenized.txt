\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Given any unknowns $ <var:S> $ , $ <var:c> $ , $ <var:o> $ , $ <var:m> $ , $ <var:z> $ , $ <var:P> $ , $ <var:I> $ , and $ <var:g> $ the summation $ <nat:476> <var:m> + <nat:38> <var:S> + <var:z> <nat:148> + <nat:54> <var:g> + <nat:106> + <nat:300> <var:I> + <nat:288> <var:o> + <nat:230> <var:c> + <var:P> <nat:328> $ will be even . \end{theorem} \begin{proof} The pair $ <nat:148> <var:z> $ is clearly even . Recall the terms $ <var:I> <nat:300> $ , $ <nat:230> <var:c> $ , plus $ <var:S> <nat:38> $ must be even . This claim is true as a consequence that taking the product of an even number in $ \mathbb{N} $ with an arbitrary number in $ \mathbb{N} $ is guaranteed to be instrinsically an even element of $ \mathbb{Z}^+ $ . On top of this , the terms $ <nat:288> <var:o> $ , $ <nat:54> <var:g> $ , and $ <var:m> <nat:476> $ are even numbers . Take note the pair $ <var:P> <nat:328> $ is known to be even . We check this main result must be true . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:S> <var:c> <var:o> <var:m> <var:z> <var:P> <var:I> <var:g> : nat , Nat . even ( <nat:476> * <var:m> + <nat:38> * <var:S> + <nat:148> * <var:z> + <nat:54> * <var:g> + <nat:300> * <var:I> + <nat:288> * <var:o> + <nat:230> * <var:c> + <nat:328> * <var:P> + <nat:106> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:148> * <var:z> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:300> * <var:I> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:230> * <var:c> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:38> * <var:S> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:288> * <var:o> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:54> * <var:g> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:476> * <var:m> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:328> * <var:P> ) = true ) . { rewrite Nat . even_mul . auto . } repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 