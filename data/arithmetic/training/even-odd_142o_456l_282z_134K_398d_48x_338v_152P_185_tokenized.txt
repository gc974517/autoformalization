\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Using all variables $ <var:v> $ , $ <var:P> $ , $ <var:o> $ , $ <var:l> $ , $ <var:d> $ , $ <var:K> $ , $ <var:z> $ , and $ <var:x> $ $ <nat:134> \times <var:K> + <var:P> \times <nat:152> + <nat:185> + <var:d> \times <nat:398> + <var:l> \times <nat:456> + <nat:48> \times <var:x> + <var:v> \times <nat:338> + <var:z> \times <nat:282> + <nat:142> \times <var:o> $ is odd . \end{theorem} \begin{proof} $ <var:o> \cdot <nat:142> + <nat:456> \cdot <var:l> + <var:z> \cdot <nat:282> + <var:K> \cdot <nat:134> + <var:d> \cdot <nat:398> + <var:x> \cdot <nat:48> + <nat:338> \cdot <var:v> + <nat:152> \cdot <var:P> $ is known to be even . Observe that the summing between even elements of $ \mathbb{N} $ successively and an even positive integer must be even . The products $ <nat:398> <var:d> $ , $ <nat:48> <var:x> $ , $ <nat:282> <var:z> $ , $ <var:l> <nat:456> $ , $ <nat:152> <var:P> $ , and $ <var:v> <nat:338> $ are known to be even from the fact the multiplication of an even integer with a natural will be even . Likewise , take note $ <nat:142> <var:o> $ is trivially an even natural . Notice that the product $ <nat:134> <var:K> $ is trivially even by reason that taking the product between an even natural number with any number in $ \mathbb{Z}^+ $ must be by definition an even number . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:v> <var:P> <var:o> <var:l> <var:d> <var:K> <var:z> <var:x> : nat , Nat . odd ( <nat:134> * <var:K> + <nat:152> * <var:P> + <nat:398> * <var:d> + <nat:456> * <var:l> + <nat:48> * <var:x> + <nat:338> * <var:v> + <nat:282> * <var:z> + <nat:142> * <var:o> + <nat:185> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:398> * <var:d> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:48> * <var:x> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:282> * <var:z> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:456> * <var:l> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:152> * <var:P> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:338> * <var:v> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:142> * <var:o> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:134> * <var:K> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:134> * <var:K> + <nat:152> * <var:P> + <nat:398> * <var:d> + <nat:456> * <var:l> + <nat:48> * <var:x> + <nat:338> * <var:v> + <nat:282> * <var:z> + <nat:142> * <var:o> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . auto . Qed . 