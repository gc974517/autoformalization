\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Given that we have $ <var:v> $ , $ <var:d> $ , $ <var:l> $ , $ <var:I> $ , $ <var:t> $ , $ <var:h> $ , $ <var:K> \geq <nat:2> $ where given $ <var:V> \in \mathbb{Z}^+ $ , $ <var:V> = <var:v> \times <var:K> \times <var:l> \times <var:I> \times <var:t> \times <var:d> \times <var:h> $ assuming some natural numbers $ <var:l> $ , $ <var:I> $ , $ <var:h> $ , $ <var:K> $ , $ <var:t> $ , $ <var:d> $ , $ <var:v> $ , we define that $ <var:V> $ is a <def:seven-composite> number . Consequently <nat:435456> is a <def:seven-composite> whole number . \end{theorem} \begin{proof} Allow $ <var:t> = <nat:6> $ , $ <var:v> = <nat:3> $ , $ <var:I> = <nat:9> $ , $ <var:l> = <nat:7> $ , $ <var:K> = <nat:4> $ , $ <var:d> = <nat:12> $ , and $ <var:h> = <nat:8> $ . Observe that $ <var:h> = <nat:8> $ , $ <var:I> = <nat:9> $ , $ <var:K> = <nat:4> $ , $ <var:v> = <nat:3> $ , $ <var:l> = <nat:7> $ , $ <var:t> = <nat:6> $ , and $ <var:d> = <nat:12> \geq <nat:2> $ . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:seven-composite> ( <var:V> : nat ) := exists <var:l> <var:I> <var:h> <var:K> <var:t> <var:d> <var:v> : nat , ( <var:v> >= <nat:2> ) /\ ( <var:d> >= <nat:2> ) /\ ( <var:l> >= <nat:2> ) /\ ( <var:I> >= <nat:2> ) /\ ( <var:t> >= <nat:2> ) /\ ( <var:h> >= <nat:2> ) /\ ( <var:K> >= <nat:2> ) /\ ( <var:V> = <var:v> * <var:K> * <var:l> * <var:I> * <var:t> * <var:d> * <var:h> ) . Theorem <genP:1> : <def:seven-composite> <nat:435456> . Proof . unfold <def:seven-composite> . exists <nat:7> . exists <nat:9> . exists <nat:8> . exists <nat:4> . exists <nat:6> . exists <nat:12> . exists <nat:3> . assert ( <genH> : <nat:8> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:9> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:4> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:3> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:7> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:6> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:12> >= <nat:2> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 