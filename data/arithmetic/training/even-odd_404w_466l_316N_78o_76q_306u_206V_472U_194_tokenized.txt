\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Using any unknowns $ <var:U> $ , $ <var:l> $ , $ <var:N> $ , $ <var:u> $ , $ <var:V> $ , $ <var:w> $ , $ <var:q> $ , and $ <var:o> $ $ <var:w> \times <nat:404> + <var:l> \times <nat:466> + <nat:316> \times <var:N> + <nat:194> + <var:o> \times <nat:78> + <nat:76> \times <var:q> + <var:u> \times <nat:306> + <nat:206> \times <var:V> + <nat:472> \times <var:U> $ is guaranteed to be even . \end{theorem} \begin{proof} Observe the terms $ <var:V> * <nat:206> $ and likewise $ <var:l> * <nat:466> $ must be even positive integers . In addition , remember that the terms $ <nat:316> * <var:N> $ , $ <nat:404> * <var:w> $ , $ <nat:76> * <var:q> $ , plus $ <var:u> * <nat:306> $ must be even integers . Additionally , the pair $ <var:U> * <nat:472> $ is known as even . $ <var:o> * <nat:78> $ is known to be an even element of $ \mathbb{N} $ from the knowledge taking the product of an even positive integer with some positive integer must be clearly an even number in $ \mathbb{N} $ . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:U> <var:l> <var:N> <var:u> <var:V> <var:w> <var:q> <var:o> : nat , Nat . even ( <nat:404> * <var:w> + <nat:466> * <var:l> + <nat:316> * <var:N> + <nat:78> * <var:o> + <nat:76> * <var:q> + <nat:306> * <var:u> + <nat:206> * <var:V> + <nat:472> * <var:U> + <nat:194> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:206> * <var:V> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:466> * <var:l> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:316> * <var:N> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:404> * <var:w> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:76> * <var:q> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:306> * <var:u> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:472> * <var:U> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:78> * <var:o> ) = true ) . { rewrite Nat . even_mul . auto . } repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 