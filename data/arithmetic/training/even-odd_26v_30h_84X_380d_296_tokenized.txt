\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Using all unknowns $ <var:d> $ , $ <var:X> $ , $ <var:h> $ , and $ <var:v> $ the summation $ <var:h> \cdot <nat:30> + <var:d> \cdot <nat:380> + <nat:26> \cdot <var:v> + <nat:84> \cdot <var:X> + <nat:296> $ must be even . \end{theorem} \begin{proof} We show our lemma holds . This theorem holds from the knowledge $ <var:v> * <nat:26> + <nat:30> * <var:h> + <var:d> * <nat:380> + <var:X> * <nat:84> $ is trivially even . Remember that the terms $ <nat:380> \cdot <var:d> $ and $ <nat:30> \cdot <var:h> $ will be even by reason that the multiplication between an even number in $ \mathbb{Z}^+ $ with any number in $ \mathbb{N} $ is guaranteed to be even . This claim must be true because the whole numbers $ <nat:380> $ and likewise $ <nat:30> $ are clearly . Adding on , $ <nat:84> \cdot <var:X> $ is an even positive integer because the product of an even natural and some integer must be even , which is true because the leading term $ <nat:84> $ is guaranteed to be instrinsically an even natural number . In addition to this , the natural number $ <nat:26> $ is clearly an even number in $ \mathbb{Z}^+ $ . Thus , the product $ <var:v> \cdot <nat:26> $ is even at the same time . This theorem is true from the fact the addition between even numbers and even positive integers must be even in addition to from the knowledge the multiplication between even numbers and an arbitrary element of $ \mathbb{N} $ is guaranteed to be instrinsically an even number in $ \mathbb{Z}^+ $ . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:d> <var:X> <var:h> <var:v> : nat , Nat . even ( <nat:30> * <var:h> + <nat:380> * <var:d> + <nat:26> * <var:v> + <nat:84> * <var:X> + <nat:296> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:380> = true ) . { auto . } assert ( <genH> : Nat . even <nat:30> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:380> * <var:d> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:30> * <var:h> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:84> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:84> * <var:X> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:26> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:26> * <var:v> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:30> * <var:h> + <nat:380> * <var:d> + <nat:26> * <var:v> + <nat:84> * <var:X> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . even_add . rewrite <genH> . auto . Qed . 