\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:6> + <nat:364> * <var:T> + <nat:48> * <var:x> + <var:h> * <nat:468> + <nat:204> * <var:g> + <nat:170> * <var:k> + <var:V> * <nat:410> + <var:a> * <nat:348> + <nat:360> * <var:u> $ must be even . \end{theorem} \begin{proof} Take note that the adding between even whole numbers successively with an even positive integer will be instrinsically an even natural . Adding on , the pairs $ <nat:364> <var:T> $ , $ <nat:48> <var:x> $ , $ <var:h> <nat:468> $ , $ <nat:204> <var:g> $ , $ <nat:170> <var:k> $ , $ <nat:410> <var:V> $ , $ <var:a> <nat:348> $ , and likewise $ <nat:360> <var:u> $ are guaranteed to be even naturals as a consequence that the product of an even number in $ \mathbb{Z}^+ $ and an arbitrary number in $ \mathbb{N} $ must be an even positive integer , and must be true by reason that the positive integers $ <nat:364> $ , $ <nat:48> $ , $ <nat:468> $ , $ <nat:204> $ , $ <nat:170> $ , $ <nat:410> $ , $ <nat:348> $ , and likewise $ <nat:360> $ are obviously even . We verify our theorem is proven . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:T> <var:x> <var:h> <var:g> <var:k> <var:V> <var:a> <var:u> : nat , Nat . even ( <nat:364> * <var:T> + <nat:48> * <var:x> + <nat:468> * <var:h> + <nat:204> * <var:g> + <nat:170> * <var:k> + <nat:410> * <var:V> + <nat:348> * <var:a> + <nat:360> * <var:u> + <nat:6> ) = true . Proof . intros . repeat rewrite Nat . even_add . assert ( <genH> : Nat . even <nat:364> = true ) . { auto . } assert ( <genH> : Nat . even <nat:48> = true ) . { auto . } assert ( <genH> : Nat . even <nat:468> = true ) . { auto . } assert ( <genH> : Nat . even <nat:204> = true ) . { auto . } assert ( <genH> : Nat . even <nat:170> = true ) . { auto . } assert ( <genH> : Nat . even <nat:410> = true ) . { auto . } assert ( <genH> : Nat . even <nat:348> = true ) . { auto . } assert ( <genH> : Nat . even <nat:360> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:364> * <var:T> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:48> * <var:x> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:468> * <var:h> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:204> * <var:g> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:170> * <var:k> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:410> * <var:V> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:348> * <var:a> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:360> * <var:u> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 