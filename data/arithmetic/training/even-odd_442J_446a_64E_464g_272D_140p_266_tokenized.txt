\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:442> <var:J> + <nat:272> <var:D> + <nat:266> + <var:g> <nat:464> + <nat:446> <var:a> + <var:p> <nat:140> + <nat:64> <var:E> $ must be even . \end{theorem} \begin{proof} The lemma is proven because $ <nat:442> * <var:J> + <var:a> * <nat:446> + <var:E> * <nat:64> + <var:g> * <nat:464> + <nat:272> * <var:D> + <var:p> * <nat:140> $ is obviously even . We know that the terms $ <nat:442> \cdot <var:J> $ , $ <var:D> \cdot <nat:272> $ , $ <var:a> \cdot <nat:446> $ , $ <var:g> \cdot <nat:464> $ , and also $ <nat:140> \cdot <var:p> $ are known as even integers . Take note $ <nat:64> \cdot <var:E> $ is known as an even element of $ \mathbb{N} $ . See $ <nat:266> $ is clearly an even positive integer . The adding between an even positive integer with an even integer is even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:J> <var:D> <var:g> <var:a> <var:p> <var:E> : nat , Nat . even ( <nat:442> * <var:J> + <nat:272> * <var:D> + <nat:464> * <var:g> + <nat:446> * <var:a> + <nat:140> * <var:p> + <nat:64> * <var:E> + <nat:266> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:442> * <var:J> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:272> * <var:D> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:446> * <var:a> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:464> * <var:g> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:140> * <var:p> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:64> * <var:E> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:442> * <var:J> + <nat:272> * <var:D> + <nat:464> * <var:g> + <nat:446> * <var:a> + <nat:140> * <var:p> + <nat:64> * <var:E> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:266> = true ) . { auto . } rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . auto . Qed . 