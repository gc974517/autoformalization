\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:243> + <nat:296> * <var:h> + <var:Q> * <nat:388> + <nat:24> * <var:O> + <var:U> * <nat:34> + <var:M> * <nat:444> + <nat:328> * <var:j> $ will be odd . \end{theorem} \begin{proof} The adding between an even number in $ \mathbb{Z}^+ $ and an odd positive integer is an odd number . Take note that $ <nat:243> $ is known to be an odd whole number . See the terms $ <nat:24> \cdot <var:O> $ , $ <nat:328> \cdot <var:j> $ , $ <nat:34> \cdot <var:U> $ , and moreover $ <var:h> \cdot <nat:296> $ must be even . The term $ <var:Q> \cdot <nat:388> $ is known to be even as a consequence that taking the product of an even natural with an arbitrary number in $ \mathbb{N} $ is even . In addition , the product $ <var:M> \cdot <nat:444> $ is trivially even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:h> <var:Q> <var:O> <var:U> <var:M> <var:j> : nat , Nat . odd ( <nat:296> * <var:h> + <nat:388> * <var:Q> + <nat:24> * <var:O> + <nat:34> * <var:U> + <nat:444> * <var:M> + <nat:328> * <var:j> + <nat:243> ) = true . Proof . intros . rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . assert ( <genH> : Nat . odd <nat:243> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:24> * <var:O> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:328> * <var:j> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:34> * <var:U> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:296> * <var:h> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:388> * <var:Q> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:444> * <var:M> ) = true ) . { rewrite Nat . even_mul . auto . } rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 