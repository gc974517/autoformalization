\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:350> \times <var:l> + <nat:434> \times <var:O> + <nat:277> + <var:i> \times <nat:334> + <var:b> \times <nat:438> $ will be odd . \end{theorem} \begin{proof} See $ <nat:277> $ is known as an odd whole number . It can be demonstrated that the sum $ <nat:334> * <var:i> + <nat:434> * <var:O> + <nat:350> * <var:l> + <nat:277> + <var:b> * <nat:438> $ will be odd . Take note the pairs $ <var:i> * <nat:334> $ and also $ <var:b> * <nat:438> $ will be even numbers in $ \mathbb{Z}^+ $ since the positive integers $ <nat:334> $ in addition to $ <nat:438> $ are clearly even . The product $ <nat:350> * <var:l> $ is known as an even integer . This fact is true since the product between an even whole number and any number in $ \mathbb{Z}^+ $ is guaranteed to be even in addition to the positive integer $ <nat:350> $ is guaranteed to be an even whole number . Likewise , the term $ <nat:434> * <var:O> $ is known to be an even element of $ \mathbb{N} $ . This claim must be true from the knowledge the multiplication of an even number in $ \mathbb{Z}^+ $ with a number in $ \mathbb{Z}^+ $ will be an even natural number , which holds from the knowledge the integer $ <nat:434> $ is trivially even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:l> <var:O> <var:i> <var:b> : nat , Nat . odd ( <nat:350> * <var:l> + <nat:434> * <var:O> + <nat:334> * <var:i> + <nat:438> * <var:b> + <nat:277> ) = true . Proof . intros . assert ( <genH> : Nat . odd <nat:277> = true ) . { auto . } assert ( <genH> : Nat . even <nat:334> = true ) . { auto . } assert ( <genH> : Nat . even <nat:438> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:334> * <var:i> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:438> * <var:b> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:350> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:350> * <var:l> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:434> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:434> * <var:O> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 