\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} The integer <nat:3628800> is the multiplication between natural numbers $ <var:f> $ , $ <var:L> $ , $ <var:x> $ , $ <var:R> $ , $ <var:z> $ , $ <var:Z> $ , $ <var:G> $ , $ <var:Q> $ , $ <var:h> $ such that $ <var:Q> $ , $ <var:R> $ , $ <var:f> $ , $ <var:h> $ , $ <var:G> $ , $ <var:L> $ , $ <var:z> $ , $ <var:x> $ , $ <var:Z> > <nat:1> $ . \end{theorem} \begin{proof} Allow $ <var:h> = <nat:6> $ , $ <var:L> = <nat:5> $ , $ <var:G> = <nat:7> $ , $ <var:x> = <nat:2> $ , $ <var:R> = <nat:10> $ , $ <var:Q> = <nat:8> $ , $ <var:Z> = <nat:3> $ , $ <var:z> = <nat:9> $ , $ <var:f> = <nat:4> $ . Moreover notice that $ <var:x> = <nat:2> $ , $ <var:G> = <nat:7> $ , $ <var:h> = <nat:6> $ , $ <var:Q> = <nat:8> $ , $ <var:f> = <nat:4> $ , $ <var:R> = <nat:10> $ , $ <var:z> = <nat:9> $ , $ <var:Z> = <nat:3> $ and $ <var:L> = <nat:5> > <nat:1> $ . As a consequence , $ <nat:3628800> = <var:Z> \cdot <var:h> \cdot <var:R> \cdot <var:L> \cdot <var:z> \cdot <var:G> \cdot <var:x> \cdot <var:Q> \cdot <var:f> $ is proven . \end{proof} \end{document} 
~
Require Import Lia . Theorem <genP:1> : exists <var:f> <var:L> <var:x> <var:R> <var:z> <var:Z> <var:G> <var:Q> <var:h> : nat , ( <nat:3628800> = <var:f> * <var:L> * <var:x> * <var:R> * <var:z> * <var:Z> * <var:G> * <var:Q> * <var:h> ) /\ ( <var:Q> > <nat:1> ) /\ ( <var:R> > <nat:1> ) /\ ( <var:f> > <nat:1> ) /\ ( <var:h> > <nat:1> ) /\ ( <var:G> > <nat:1> ) /\ ( <var:L> > <nat:1> ) /\ ( <var:z> > <nat:1> ) /\ ( <var:x> > <nat:1> ) /\ ( <var:Z> > <nat:1> ) . Proof . exists <nat:4> . exists <nat:5> . exists <nat:2> . exists <nat:10> . exists <nat:9> . exists <nat:3> . exists <nat:7> . exists <nat:8> . exists <nat:6> . assert ( <genH> : <nat:2> > <nat:1> ) . { lia . } assert ( <genH> : <nat:7> > <nat:1> ) . { lia . } assert ( <genH> : <nat:6> > <nat:1> ) . { lia . } assert ( <genH> : <nat:8> > <nat:1> ) . { lia . } assert ( <genH> : <nat:4> > <nat:1> ) . { lia . } assert ( <genH> : <nat:10> > <nat:1> ) . { lia . } assert ( <genH> : <nat:9> > <nat:1> ) . { lia . } assert ( <genH> : <nat:3> > <nat:1> ) . { lia . } assert ( <genH> : <nat:5> > <nat:1> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 