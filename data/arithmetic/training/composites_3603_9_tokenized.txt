\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} The natural number <nat:10886400> is the multiplication between integers $ <var:x> $ , $ <var:T> $ , $ <var:n> $ , $ <var:U> $ , $ <var:z> $ , $ <var:a> $ , $ <var:h> $ , $ <var:g> $ and $ <var:Q> $ where $ <var:n> $ , $ <var:g> $ , $ <var:h> $ , $ <var:x> $ , $ <var:T> $ , $ <var:a> $ , $ <var:z> $ , $ <var:Q> $ , $ <var:U> \geq <nat:2> $ . \end{theorem} \begin{proof} Allow $ <var:g> = <nat:6> $ , $ <var:T> = <nat:8> $ , $ <var:h> = <nat:2> $ , $ <var:a> = <nat:7> $ , $ <var:U> = <nat:9> $ , $ <var:n> = <nat:3> $ , $ <var:Q> = <nat:10> $ , $ <var:z> = <nat:5> $ , $ <var:x> = <nat:12> $ . Note $ <var:z> = <nat:5> $ , $ <var:a> = <nat:7> $ , $ <var:x> = <nat:12> $ , $ <var:n> = <nat:3> $ , $ <var:Q> = <nat:10> $ , $ <var:T> = <nat:8> $ , $ <var:g> = <nat:6> $ , $ <var:U> = <nat:9> $ , $ <var:h> = <nat:2> \geq <nat:2> $ . Further note that likewise $ <nat:10886400> = <var:x> \times <var:z> \times <var:T> \times <var:a> \times <var:n> \times <var:h> \times <var:Q> \times <var:U> \times <var:g> $ . \end{proof} \end{document} 
~
Require Import Lia . Theorem <genP:1> : exists <var:x> <var:T> <var:n> <var:U> <var:z> <var:a> <var:h> <var:g> <var:Q> : nat , ( <nat:10886400> = <var:x> * <var:T> * <var:n> * <var:U> * <var:z> * <var:a> * <var:h> * <var:g> * <var:Q> ) /\ ( <var:n> >= <nat:2> ) /\ ( <var:g> >= <nat:2> ) /\ ( <var:h> >= <nat:2> ) /\ ( <var:x> >= <nat:2> ) /\ ( <var:T> >= <nat:2> ) /\ ( <var:a> >= <nat:2> ) /\ ( <var:z> >= <nat:2> ) /\ ( <var:Q> >= <nat:2> ) /\ ( <var:U> >= <nat:2> ) . Proof . exists <nat:12> . exists <nat:8> . exists <nat:3> . exists <nat:9> . exists <nat:5> . exists <nat:7> . exists <nat:2> . exists <nat:6> . exists <nat:10> . assert ( <genH> : <nat:5> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:7> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:12> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:3> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:10> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:8> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:6> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:9> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:2> >= <nat:2> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 