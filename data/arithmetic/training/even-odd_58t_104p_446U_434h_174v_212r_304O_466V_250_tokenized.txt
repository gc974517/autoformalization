\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:t> \cdot <nat:58> + <nat:250> + <nat:104> \cdot <var:p> + <var:U> \cdot <nat:446> + <var:h> \cdot <nat:434> + <var:v> \cdot <nat:174> + <var:r> \cdot <nat:212> + <nat:304> \cdot <var:O> + <nat:466> \cdot <var:V> $ is even . \end{theorem} \begin{proof} We check the theorem must be true . The products $ <var:O> \times <nat:304> $ , $ <var:h> \times <nat:434> $ , $ <nat:58> \times <var:t> $ , $ <var:V> \times <nat:466> $ , $ <var:p> \times <nat:104> $ , $ <var:r> \times <nat:212> $ , as well as $ <nat:446> \times <var:U> $ are clearly even from the fact taking the product between an even positive integer and some number will be even . Observe that $ <var:v> \times <nat:174> $ is trivially even . This claim holds from the fact multiplying of an even number in $ \mathbb{N} $ with an arbitrary positive integer will be obviously an even number in $ \mathbb{N} $ . Notice that the addition between even numbers in $ \mathbb{Z}^+ $ together must be even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:t> <var:p> <var:U> <var:h> <var:v> <var:r> <var:O> <var:V> : nat , Nat . even ( <nat:58> * <var:t> + <nat:104> * <var:p> + <nat:446> * <var:U> + <nat:434> * <var:h> + <nat:174> * <var:v> + <nat:212> * <var:r> + <nat:304> * <var:O> + <nat:466> * <var:V> + <nat:250> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:304> * <var:O> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:434> * <var:h> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:58> * <var:t> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:466> * <var:V> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:104> * <var:p> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:212> * <var:r> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:446> * <var:U> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:174> * <var:v> ) = true ) . { rewrite Nat . even_mul . auto . } repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 