\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:388> \times <var:P> + <var:l> \times <nat:406> + <nat:158> \times <var:B> + <nat:336> \times <var:H> + <var:p> \times <nat:428> + <nat:60> \times <var:v> + <var:n> \times <nat:154> + <nat:170> \times <var:Y> + <nat:273> $ is odd . \end{theorem} \begin{proof} Remember that the expression $ <nat:428> \times <var:p> + <var:l> \times <nat:406> + <nat:60> \times <var:v> + <nat:388> \times <var:P> + <var:H> \times <nat:336> + <nat:170> \times <var:Y> + <var:B> \times <nat:158> + <var:n> \times <nat:154> $ is obviously even . We know that the summing between even numbers with an even whole number is guaranteed to be even . Observe that the integers $ <nat:428> $ , $ <nat:158> $ , additionally $ <nat:406> $ are trivially even In addition , the coefficient $ <nat:60> $ is known as an even natural See that the natural numbers $ <nat:388> $ , $ <nat:154> $ , and also $ <nat:336> $ are obviously even In addition to this , the whole number $ <nat:170> $ is trivially an even element of $ \mathbb{N} $ plus from the fact the product of an even integer with any positive integer is guaranteed to be even the expression $ <var:p> <nat:428> + <var:Y> <nat:170> + <var:n> <nat:154> + <var:l> <nat:406> + <var:B> <nat:158> + <nat:60> <var:v> + <nat:388> <var:P> + <var:H> <nat:336> $ is guaranteed to be even . It can be shown that our main result is proven . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:P> <var:l> <var:B> <var:H> <var:p> <var:v> <var:n> <var:Y> : nat , Nat . odd ( <nat:388> * <var:P> + <nat:406> * <var:l> + <nat:158> * <var:B> + <nat:336> * <var:H> + <nat:428> * <var:p> + <nat:60> * <var:v> + <nat:154> * <var:n> + <nat:170> * <var:Y> + <nat:273> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:428> = true ) . { auto . } assert ( <genH> : Nat . even <nat:158> = true ) . { auto . } assert ( <genH> : Nat . even <nat:406> = true ) . { auto . } assert ( <genH> : Nat . even <nat:60> = true ) . { auto . } assert ( <genH> : Nat . even <nat:388> = true ) . { auto . } assert ( <genH> : Nat . even <nat:154> = true ) . { auto . } assert ( <genH> : Nat . even <nat:336> = true ) . { auto . } assert ( <genH> : Nat . even <nat:170> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:388> * <var:P> + <nat:406> * <var:l> + <nat:158> * <var:B> + <nat:336> * <var:H> + <nat:428> * <var:p> + <nat:60> * <var:v> + <nat:154> * <var:n> + <nat:170> * <var:Y> ) = true ) . { repeat rewrite Nat . even_add . repeat rewrite Nat . even_mul . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . auto . Qed . 