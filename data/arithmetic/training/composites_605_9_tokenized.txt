\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \newtheorem{definition}{Definition} \begin{document} \begin{definition} Allow $ <var:A> $ , $ <var:h> $ , $ <var:t> $ , $ <var:y> $ , $ <var:v> $ , $ <var:f> $ , $ <var:g> $ , $ <var:u> $ , $ <var:R> $ as integers satisfying the condition that $ <var:R> $ , $ <var:t> $ , $ <var:y> $ , $ <var:g> $ , $ <var:A> $ , $ <var:u> $ , $ <var:h> $ , $ <var:f> $ , and $ <var:v> > <nat:1> $ . Let that some positive integer $ <var:G> $ is defined to be a <def:nine-composite> positive integer when $ <var:G> = <var:v> \cdot <var:R> \cdot <var:h> \cdot <var:t> \cdot <var:A> \cdot <var:f> \cdot <var:g> \cdot <var:y> \cdot <var:u> $ . \end{definition} \begin{theorem} $ <var:G> = <nat:47900160> $ is a <def:nine-composite> number . \end{theorem} \begin{proof} Observe $ <nat:7> $ , $ <nat:4> $ , $ <nat:11> $ , $ <nat:6> $ , $ <nat:10> $ , $ <nat:9> $ , $ <nat:8> $ , $ <nat:3> $ , $ <nat:12> $ are greater than <nat:1> . What's more notice that additionally $ <nat:6> \cdot <nat:11> \cdot <nat:10> \cdot <nat:7> \cdot <nat:3> \cdot <nat:4> \cdot <nat:12> \cdot <nat:8> \cdot <nat:9> = <var:u> \cdot <var:y> \cdot <var:g> \cdot <var:R> \cdot <var:v> \cdot <var:t> \cdot <var:h> \cdot <var:f> \cdot <var:A> = <nat:47900160> $ . This suggests <nat:47900160> is a <def:nine-composite> whole number . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:nine-composite> ( <var:G> : nat ) := exists <var:A> <var:h> <var:t> <var:y> <var:v> <var:f> <var:g> <var:u> <var:R> : nat , ( <var:R> > <nat:1> ) /\ ( <var:t> > <nat:1> ) /\ ( <var:y> > <nat:1> ) /\ ( <var:g> > <nat:1> ) /\ ( <var:A> > <nat:1> ) /\ ( <var:u> > <nat:1> ) /\ ( <var:h> > <nat:1> ) /\ ( <var:f> > <nat:1> ) /\ ( <var:v> > <nat:1> ) /\ ( <var:G> = <var:v> * <var:R> * <var:h> * <var:t> * <var:A> * <var:f> * <var:g> * <var:y> * <var:u> ) . Theorem <genP:1> : <def:nine-composite> <nat:47900160> . Proof . unfold <def:nine-composite> . assert ( <genH> : <nat:7> > <nat:1> ) . { lia . } assert ( <genH> : <nat:4> > <nat:1> ) . { lia . } assert ( <genH> : <nat:11> > <nat:1> ) . { lia . } assert ( <genH> : <nat:6> > <nat:1> ) . { lia . } assert ( <genH> : <nat:10> > <nat:1> ) . { lia . } assert ( <genH> : <nat:9> > <nat:1> ) . { lia . } assert ( <genH> : <nat:8> > <nat:1> ) . { lia . } assert ( <genH> : <nat:3> > <nat:1> ) . { lia . } assert ( <genH> : <nat:12> > <nat:1> ) . { lia . } exists <nat:9> . exists <nat:12> . exists <nat:4> . exists <nat:11> . exists <nat:3> . exists <nat:8> . exists <nat:10> . exists <nat:6> . exists <nat:7> . repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 