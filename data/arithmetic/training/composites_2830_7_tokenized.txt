\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Take $ <var:D> $ , $ <var:f> $ , $ <var:x> $ , $ <var:n> $ , $ <var:F> $ , $ <var:u> $ , and $ <var:Z> \in \mathbb{N} $ satisfying the condition that $ <var:F> $ , $ <var:D> $ , $ <var:f> $ , $ <var:Z> $ , $ <var:n> $ , $ <var:u> $ and $ <var:x> $ larger than or equal to <nat:2> as well as where the positive integer <nat:158400> is the product of positive integers $ <var:D> $ , $ <var:f> $ , $ <var:x> $ , $ <var:n> $ , $ <var:F> $ , $ <var:u> $ and $ <var:Z> \in \mathbb{N} $ . \end{theorem} \begin{proof} Notice that $ <nat:158400> = <var:x> * <var:n> * <var:f> * <var:D> * <var:u> * <var:Z> * <var:F> $ suggests $ <var:f> = <nat:10> $ , $ <var:Z> = <nat:3> $ , $ <var:n> = <nat:11> $ , $ <var:F> = <nat:5> $ , $ <var:D> = <nat:2> $ , $ <var:u> = <nat:8> $ , and $ <var:x> = <nat:6> $ . Further observe that $ <nat:2> $ , $ <nat:6> $ , $ <nat:8> $ , $ <nat:11> $ , $ <nat:3> $ , $ <nat:10> $ , and $ <nat:5> \geq <nat:2> $ . Hence , $ <nat:158400> = <var:Z> \times <var:F> \times <var:f> \times <var:u> \times <var:x> \times <var:D> \times <var:n> $ is true has been proven . \end{proof} \end{document} 
~
Require Import Lia . Theorem <genP:1> : exists <var:D> <var:f> <var:x> <var:n> <var:F> <var:u> <var:Z> : nat , ( <var:F> >= <nat:2> ) /\ ( <var:D> >= <nat:2> ) /\ ( <var:f> >= <nat:2> ) /\ ( <var:Z> >= <nat:2> ) /\ ( <var:n> >= <nat:2> ) /\ ( <var:u> >= <nat:2> ) /\ ( <var:x> >= <nat:2> ) /\ ( <nat:158400> = <var:D> * <var:f> * <var:x> * <var:n> * <var:F> * <var:u> * <var:Z> ) . Proof . exists <nat:2> . exists <nat:10> . exists <nat:6> . exists <nat:11> . exists <nat:5> . exists <nat:8> . exists <nat:3> . assert ( <genH> : <nat:2> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:6> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:8> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:11> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:3> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:10> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:5> >= <nat:2> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 