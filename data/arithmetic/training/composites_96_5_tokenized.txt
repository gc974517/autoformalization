\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \newtheorem{definition}{Definition} \begin{document} \begin{definition} Whenever we get $ <var:O> = <var:m> \times <var:o> \times <var:T> \times <var:J> \times <var:H> $ for $ <var:O> \in \mathbb{Z}^+ $ as well as such that $ <var:T> $ , $ <var:o> $ , $ <var:J> $ , $ <var:m> $ and $ <var:H> \geq <nat:2> $ assuming some $ <var:H> $ , $ <var:J> $ , $ <var:o> $ , $ <var:T> $ , $ <var:m> \in \mathbb{N} $ , we denote that $ <var:O> $ is a <def:five-composite> integer . \end{definition} \begin{theorem} The number <nat:7560> is a <def:five-composite> positive integer . \end{theorem} \begin{proof} Recollect that <nat:7560> is a <def:five-composite> natural number given <nat:7560> is the multiplication of integers $ <var:H> $ , $ <var:m> $ , $ <var:T> $ , $ <var:o> $ and $ <var:J> $ larger than <nat:1> . Take $ <var:o> = <nat:6> $ , $ <var:T> = <nat:5> $ , $ <var:J> = <nat:3> $ , $ <var:H> = <nat:7> $ , and $ <var:m> = <nat:12> $ . Observe $ <nat:7> \cdot <nat:5> \cdot <nat:12> \cdot <nat:6> \cdot <nat:3> = <nat:7560> $ . What's more observe $ <var:T> = <nat:5> $ , $ <var:o> = <nat:6> $ , $ <var:m> = <nat:12> $ , $ <var:J> = <nat:3> $ , $ <var:H> = <nat:7> $ are larger than <nat:1> . This produces <nat:7560> is a <def:five-composite> number . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:five-composite> ( <var:O> : nat ) := exists <var:H> <var:J> <var:o> <var:T> <var:m> : nat , ( <var:O> = <var:m> * <var:o> * <var:T> * <var:J> * <var:H> ) /\ ( <var:T> >= <nat:2> ) /\ ( <var:o> >= <nat:2> ) /\ ( <var:J> >= <nat:2> ) /\ ( <var:m> >= <nat:2> ) /\ ( <var:H> >= <nat:2> ) . Theorem <genP:1> : <def:five-composite> <nat:7560> . Proof . unfold <def:five-composite> . exists <nat:7> . exists <nat:3> . exists <nat:6> . exists <nat:5> . exists <nat:12> . assert ( <genH> : <nat:5> > <nat:1> ) . { lia . } assert ( <genH> : <nat:6> > <nat:1> ) . { lia . } assert ( <genH> : <nat:12> > <nat:1> ) . { lia . } assert ( <genH> : <nat:3> > <nat:1> ) . { lia . } assert ( <genH> : <nat:7> > <nat:1> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 