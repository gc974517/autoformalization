\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \newtheorem{definition}{Definition} \begin{document} \begin{definition} $ \exists <var:F> $ , $ <var:G> $ , $ <var:w> $ , $ <var:u> $ , $ <var:E> $ , $ <var:U> $ , $ <var:b> $ , $ <var:r> $ , $ <var:m> \in \mathbb{Z}^+ $ greater than or equivalent to <nat:2> . Assume that some natural number $ <var:d> $ is called <def:nine-composite> given $ <var:w> \times <var:m> \times <var:G> \times <var:b> \times <var:u> \times <var:F> \times <var:E> \times <var:r> \times <var:U> = <var:d> $ . \end{definition} \begin{theorem} $ <nat:29937600> = <var:d> $ is a <def:nine-composite> whole number . \end{theorem} \begin{proof} Remember that <nat:29937600> is a <def:nine-composite> number if and only if it is the multiplication between integers $ <var:r> $ , $ <var:F> $ , $ <var:U> $ , $ <var:u> $ , $ <var:b> $ , $ <var:G> $ , $ <var:E> $ , $ <var:m> $ , $ <var:w> $ where $ <var:G> $ , $ <var:b> $ , $ <var:U> $ , $ <var:u> $ , $ <var:E> $ , $ <var:F> $ , $ <var:r> $ , $ <var:m> $ , $ <var:w> \geq <nat:2> $ . Allow $ <var:w> = <nat:9> $ , $ <var:E> = <nat:10> $ , $ <var:b> = <nat:6> $ , $ <var:F> = <nat:4> $ , $ <var:U> = <nat:11> $ , $ <var:G> = <nat:7> $ , $ <var:r> = <nat:5> $ , $ <var:m> = <nat:3> $ , $ <var:u> = <nat:12> $ . Notice that $ <var:E> \times <var:w> \times <var:F> \times <var:m> \times <var:r> \times <var:u> \times <var:U> \times <var:G> \times <var:b> = <nat:29937600> $ . Additionally observe that $ <nat:5> $ , $ <nat:9> $ , $ <nat:10> $ , $ <nat:4> $ , $ <nat:11> $ , $ <nat:12> $ , $ <nat:6> $ , $ <nat:3> $ , and $ <nat:7> \geq <nat:2> $ . This suggests the result is valid . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:nine-composite> ( <var:d> : nat ) := exists <var:F> <var:G> <var:w> <var:u> <var:E> <var:U> <var:b> <var:r> <var:m> : nat , ( <var:F> >= <nat:2> ) /\ ( <var:G> >= <nat:2> ) /\ ( <var:w> >= <nat:2> ) /\ ( <var:u> >= <nat:2> ) /\ ( <var:E> >= <nat:2> ) /\ ( <var:U> >= <nat:2> ) /\ ( <var:b> >= <nat:2> ) /\ ( <var:r> >= <nat:2> ) /\ ( <var:m> >= <nat:2> ) /\ ( <var:w> * <var:m> * <var:G> * <var:b> * <var:u> * <var:F> * <var:E> * <var:r> * <var:U> = <var:d> ) . Theorem <genP:1> : <def:nine-composite> <nat:29937600> . Proof . unfold <def:nine-composite> . exists <nat:4> . exists <nat:7> . exists <nat:9> . exists <nat:12> . exists <nat:10> . exists <nat:11> . exists <nat:6> . exists <nat:5> . exists <nat:3> . assert ( <genH> : <nat:5> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:9> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:10> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:4> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:11> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:12> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:6> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:3> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:7> >= <nat:2> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 