\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:374> * <var:q> + <var:y> * <nat:12> + <var:D> * <nat:372> + <nat:348> + <nat:358> * <var:k> + <nat:124> * <var:E> + <var:g> * <nat:402> + <var:a> * <nat:282> + <var:N> * <nat:304> $ will be even using any positive numbers $ <var:N> $ , $ <var:y> $ , $ <var:k> $ , $ <var:q> $ , $ <var:a> $ , $ <var:E> $ , $ <var:D> $ , and $ <var:g> $ . \end{theorem} \begin{proof} The pairs $ <var:D> * <nat:372> $ , $ <var:g> * <nat:402> $ , $ <nat:358> * <var:k> $ , $ <var:q> * <nat:374> $ , $ <var:a> * <nat:282> $ , and also $ <var:N> * <nat:304> $ are guaranteed to be even natural numbers . Furthermore , the product $ <nat:12> * <var:y> $ is clearly even . Observe that the pair $ <nat:124> * <var:E> $ is known as an even number in $ \mathbb{Z}^+ $ from the fact taking the product between an even number with a element of $ \mathbb{N} $ is guaranteed to be itself an even whole number . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:N> <var:y> <var:k> <var:q> <var:a> <var:E> <var:D> <var:g> : nat , Nat . even ( <nat:374> * <var:q> + <nat:12> * <var:y> + <nat:372> * <var:D> + <nat:358> * <var:k> + <nat:124> * <var:E> + <nat:402> * <var:g> + <nat:282> * <var:a> + <nat:304> * <var:N> + <nat:348> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:372> * <var:D> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:402> * <var:g> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:358> * <var:k> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:374> * <var:q> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:282> * <var:a> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:304> * <var:N> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:12> * <var:y> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:124> * <var:E> ) = true ) . { rewrite Nat . even_mul . auto . } repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 