\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} For some positive terms $ <var:P> $ , $ <var:B> $ , $ <var:K> $ , $ <var:D> $ , $ <var:l> $ , $ <var:k> $ , $ <var:r> $ , and $ <var:O> $ the expression $ <nat:32> \times <var:O> + <nat:446> \times <var:l> + <nat:64> \times <var:P> + <nat:69> + <var:B> \times <nat:270> + <var:k> \times <nat:226> + <nat:138> \times <var:r> + <var:D> \times <nat:18> + <nat:430> \times <var:K> $ will be odd . \end{theorem} \begin{proof} The terms $ <nat:226> \cdot <var:k> $ , $ <var:O> \cdot <nat:32> $ , $ <var:K> \cdot <nat:430> $ , additionally $ <nat:138> \cdot <var:r> $ are even natural numbers . We know that the pair $ <var:l> \cdot <nat:446> $ is known to be an even whole number . This is true since the multiplication of an even whole number and some whole number is guaranteed to be even . Adding on , the product $ <nat:18> \cdot <var:D> $ is clearly even . This holds from the knowledge the product between an even number in $ \mathbb{Z}^+ $ and a number in $ \mathbb{N} $ will be even . See that $ <var:B> \cdot <nat:270> $ is obviously even . Adding on , notice the pair $ <var:P> \cdot <nat:64> $ is clearly an even whole number . This claim is proven from the knowledge the multiplication between an even integer with an arbitrary element of $ \mathbb{Z}^+ $ must be an even number in $ \mathbb{N} $ . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:P> <var:B> <var:K> <var:D> <var:l> <var:k> <var:r> <var:O> : nat , Nat . odd ( <nat:32> * <var:O> + <nat:446> * <var:l> + <nat:64> * <var:P> + <nat:270> * <var:B> + <nat:226> * <var:k> + <nat:138> * <var:r> + <nat:18> * <var:D> + <nat:430> * <var:K> + <nat:69> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:226> * <var:k> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:32> * <var:O> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:430> * <var:K> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:138> * <var:r> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:446> * <var:l> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:18> * <var:D> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:270> * <var:B> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:64> * <var:P> ) = true ) . { rewrite Nat . even_mul . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 