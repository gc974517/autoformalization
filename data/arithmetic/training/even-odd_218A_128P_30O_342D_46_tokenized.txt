\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:46> + <nat:128> * <var:P> + <var:A> * <nat:218> + <var:O> * <nat:30> + <var:D> * <nat:342> $ is guaranteed to be even given every unknowns $ <var:D> $ , $ <var:O> $ , $ <var:P> $ , and $ <var:A> $ . \end{theorem} \begin{proof} The summation of an even element of $ \mathbb{N} $ and an even number in $ \mathbb{Z}^+ $ is an even integer . Take note $ <nat:46> $ is guaranteed to be even . We apply the assumption the knowledge that the sum $ <nat:46> + <var:P> \cdot <nat:128> + <nat:218> \cdot <var:A> + <nat:342> \cdot <var:D> + <var:O> \cdot <nat:30> $ is obviously even from the fact $ <var:A> \cdot <nat:218> + <var:P> \cdot <nat:128> + <var:O> \cdot <nat:30> + <var:D> \cdot <nat:342> $ is known to be even . Building on , notice that the natural numbers $ <nat:218> $ , $ <nat:128> $ , $ <nat:30> $ , and $ <nat:342> $ will be even positive integers . As a consequence , the pairs $ <var:A> * <nat:218> $ , $ <var:P> * <nat:128> $ , $ <var:O> * <nat:30> $ , and also $ <var:D> * <nat:342> $ is even also . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:D> <var:O> <var:P> <var:A> : nat , Nat . even ( <nat:128> * <var:P> + <nat:218> * <var:A> + <nat:30> * <var:O> + <nat:342> * <var:D> + <nat:46> ) = true . Proof . intros . rewrite Nat . even_add . assert ( <genH> : Nat . even <nat:46> = true ) . { auto . } assert ( <genH> : Nat . even <nat:218> = true ) . { auto . } assert ( <genH> : Nat . even <nat:128> = true ) . { auto . } assert ( <genH> : Nat . even <nat:30> = true ) . { auto . } assert ( <genH> : Nat . even <nat:342> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:218> * <var:A> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:128> * <var:P> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:30> * <var:O> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:342> * <var:D> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:128> * <var:P> + <nat:218> * <var:A> + <nat:30> * <var:O> + <nat:342> * <var:D> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite <genH> . rewrite <genH> . auto . Qed . 