\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Let that $ <var:u> $ is a <def:nine-composite> whole number given using some $ <var:P> $ , $ <var:g> $ , $ <var:w> $ , $ <var:q> $ , $ <var:s> $ , $ <var:a> $ , $ <var:S> $ , $ <var:R> $ , $ <var:t> \in \mathbb{Z}^+ $ we have $ <var:u> = <var:s> \cdot <var:R> \cdot <var:g> \cdot <var:w> \cdot <var:a> \cdot <var:t> \cdot <var:P> \cdot <var:S> \cdot <var:q> $ for $ <var:u> \in \mathbb{Z}^+ $ and satisfying the condition that $ <var:S> $ , $ <var:w> $ , $ <var:q> $ , $ <var:t> $ , $ <var:R> $ , $ <var:a> $ , $ <var:s> $ , $ <var:g> $ , $ <var:P> \geq <nat:2> $ . Therefore $ <var:u> = <nat:11404800> $ is a <def:nine-composite> number . \end{theorem} \begin{proof} Note $ <nat:11404800> = <var:w> * <var:P> * <var:s> * <var:S> * <var:t> * <var:q> * <var:a> * <var:R> * <var:g> $ shows $ <var:S> = <nat:8> $ , $ <var:q> = <nat:4> $ , $ <var:t> = <nat:2> $ , $ <var:a> = <nat:9> $ , $ <var:R> = <nat:12> $ , $ <var:P> = <nat:3> $ , $ <var:s> = <nat:10> $ , $ <var:w> = <nat:5> $ , and $ <var:g> = <nat:11> $ . Similarly notice $ <nat:11> $ , $ <nat:9> $ , $ <nat:12> $ , $ <nat:4> $ , $ <nat:3> $ , $ <nat:10> $ , $ <nat:8> $ , $ <nat:2> $ and $ <nat:5> $ are larger than <nat:1> . This produces <nat:11404800> is a <def:nine-composite> positive integer . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:nine-composite> ( <var:u> : nat ) := exists <var:P> <var:g> <var:w> <var:q> <var:s> <var:a> <var:S> <var:R> <var:t> : nat , ( <var:u> = <var:s> * <var:R> * <var:g> * <var:w> * <var:a> * <var:t> * <var:P> * <var:S> * <var:q> ) /\ ( <var:S> >= <nat:2> ) /\ ( <var:w> >= <nat:2> ) /\ ( <var:q> >= <nat:2> ) /\ ( <var:t> >= <nat:2> ) /\ ( <var:R> >= <nat:2> ) /\ ( <var:a> >= <nat:2> ) /\ ( <var:s> >= <nat:2> ) /\ ( <var:g> >= <nat:2> ) /\ ( <var:P> >= <nat:2> ) . Theorem <genP:1> : <def:nine-composite> <nat:11404800> . Proof . unfold <def:nine-composite> . exists <nat:3> . exists <nat:11> . exists <nat:5> . exists <nat:4> . exists <nat:10> . exists <nat:9> . exists <nat:8> . exists <nat:12> . exists <nat:2> . assert ( <genH> : <nat:11> > <nat:1> ) . { lia . } assert ( <genH> : <nat:9> > <nat:1> ) . { lia . } assert ( <genH> : <nat:12> > <nat:1> ) . { lia . } assert ( <genH> : <nat:4> > <nat:1> ) . { lia . } assert ( <genH> : <nat:3> > <nat:1> ) . { lia . } assert ( <genH> : <nat:10> > <nat:1> ) . { lia . } assert ( <genH> : <nat:8> > <nat:1> ) . { lia . } assert ( <genH> : <nat:2> > <nat:1> ) . { lia . } assert ( <genH> : <nat:5> > <nat:1> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 