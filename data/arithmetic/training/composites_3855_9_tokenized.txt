\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Wherever we have $ <var:E> * <var:A> * <var:G> * <var:y> * <var:V> * <var:q> * <var:Q> * <var:K> * <var:w> = <var:U> $ with $ <var:U> \in \mathbb{Z}^+ $ plus such that $ <var:E> $ , $ <var:V> $ , $ <var:q> $ , $ <var:Q> $ , $ <var:A> $ , $ <var:G> $ , $ <var:w> $ , $ <var:y> $ , $ <var:K> \geq <nat:2> $ using some $ <var:K> $ , $ <var:w> $ , $ <var:V> $ , $ <var:G> $ , $ <var:Q> $ , $ <var:q> $ , $ <var:E> $ , $ <var:A> $ , $ <var:y> \in \mathbb{Z}^+ $ , define that $ <var:U> $ is a <def:nine-composite> integer . Accordingly $ <nat:23950080> = <var:U> $ is a <def:nine-composite> number . \end{theorem} \begin{proof} Allow $ <var:V> = <nat:4> $ , $ <var:w> = <nat:3> $ , $ <var:A> = <nat:5> $ , $ <var:G> = <nat:12> $ , $ <var:y> = <nat:9> $ , $ <var:K> = <nat:6> $ , $ <var:Q> = <nat:8> $ , $ <var:E> = <nat:11> $ , and $ <var:q> = <nat:7> $ . We demonstrate $ <nat:23950080> = <var:G> \times <var:Q> \times <var:y> \times <var:q> \times <var:V> \times <var:A> \times <var:E> \times <var:K> \times <var:w> $ . Observe that $ <var:w> = <nat:3> $ , $ <var:K> = <nat:6> $ , $ <var:G> = <nat:12> $ , $ <var:q> = <nat:7> $ , $ <var:A> = <nat:5> $ , $ <var:y> = <nat:9> $ , $ <var:E> = <nat:11> $ , $ <var:Q> = <nat:8> $ , $ <var:V> = <nat:4> $ are more than <nat:1> . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:nine-composite> ( <var:U> : nat ) := exists <var:K> <var:w> <var:V> <var:G> <var:Q> <var:q> <var:E> <var:A> <var:y> : nat , ( <var:E> * <var:A> * <var:G> * <var:y> * <var:V> * <var:q> * <var:Q> * <var:K> * <var:w> = <var:U> ) /\ ( <var:E> >= <nat:2> ) /\ ( <var:V> >= <nat:2> ) /\ ( <var:q> >= <nat:2> ) /\ ( <var:Q> >= <nat:2> ) /\ ( <var:A> >= <nat:2> ) /\ ( <var:G> >= <nat:2> ) /\ ( <var:w> >= <nat:2> ) /\ ( <var:y> >= <nat:2> ) /\ ( <var:K> >= <nat:2> ) . Theorem <genP:1> : <def:nine-composite> <nat:23950080> . Proof . unfold <def:nine-composite> . exists <nat:6> . exists <nat:3> . exists <nat:4> . exists <nat:12> . exists <nat:8> . exists <nat:7> . exists <nat:11> . exists <nat:5> . exists <nat:9> . assert ( <genH> : <nat:3> > <nat:1> ) . { lia . } assert ( <genH> : <nat:6> > <nat:1> ) . { lia . } assert ( <genH> : <nat:12> > <nat:1> ) . { lia . } assert ( <genH> : <nat:7> > <nat:1> ) . { lia . } assert ( <genH> : <nat:5> > <nat:1> ) . { lia . } assert ( <genH> : <nat:9> > <nat:1> ) . { lia . } assert ( <genH> : <nat:11> > <nat:1> ) . { lia . } assert ( <genH> : <nat:8> > <nat:1> ) . { lia . } assert ( <genH> : <nat:4> > <nat:1> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 