\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:166> \cdot <var:C> + <nat:364> \cdot <var:f> + <var:x> \cdot <nat:74> + <nat:57> + <var:O> \cdot <nat:320> + <nat:52> \cdot <var:j> + <var:e> \cdot <nat:240> + <var:z> \cdot <nat:414> + <nat:426> \cdot <var:L> $ is odd . \end{theorem} \begin{proof} This claim is proven because $ <var:f> \cdot <nat:364> + <var:z> \cdot <nat:414> + <nat:320> \cdot <var:O> + <nat:426> \cdot <var:L> + <nat:52> \cdot <var:j> + <var:C> \cdot <nat:166> + <nat:74> \cdot <var:x> + <nat:240> \cdot <var:e> $ is clearly even . The terms $ <nat:320> <var:O> $ and moreover $ <nat:414> <var:z> $ are known to be even elements of $ \mathbb{N} $ . Observe the pairs $ <var:e> <nat:240> $ , $ <var:x> <nat:74> $ , $ <nat:52> <var:j> $ , in addition to $ <var:C> <nat:166> $ are guaranteed to be even . $ <nat:364> <var:f> $ is known as an even number in $ \mathbb{Z}^+ $ . The product $ <var:L> <nat:426> $ is clearly an even positive integer from the knowledge multiplying of an even natural and a number in $ \mathbb{Z}^+ $ will be even . By reason that the summation between an even element of $ \mathbb{N} $ with even numbers must be even , the result is true . Notice the summation between an even number in $ \mathbb{Z}^+ $ and an odd natural number is odd . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:C> <var:f> <var:x> <var:O> <var:j> <var:e> <var:z> <var:L> : nat , Nat . odd ( <nat:166> * <var:C> + <nat:364> * <var:f> + <nat:74> * <var:x> + <nat:320> * <var:O> + <nat:52> * <var:j> + <nat:240> * <var:e> + <nat:414> * <var:z> + <nat:426> * <var:L> + <nat:57> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:320> * <var:O> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:414> * <var:z> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:240> * <var:e> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:74> * <var:x> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:52> * <var:j> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:166> * <var:C> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:364> * <var:f> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:426> * <var:L> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:166> * <var:C> + <nat:364> * <var:f> + <nat:74> * <var:x> + <nat:320> * <var:O> + <nat:52> * <var:j> + <nat:240> * <var:e> + <nat:414> * <var:z> + <nat:426> * <var:L> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . auto . Qed . 