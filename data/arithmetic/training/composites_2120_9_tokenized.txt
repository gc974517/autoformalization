\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Let that $ <var:h> $ is a <def:nine-composite> integer with the condition with some $ <var:G> $ , $ <var:A> $ , $ <var:b> $ , $ <var:j> $ , $ <var:x> $ , $ <var:E> $ , $ <var:Y> $ , $ <var:s> $ , $ <var:N> \in \mathbb{N} $ we get $ <var:A> * <var:b> * <var:N> * <var:s> * <var:E> * <var:j> * <var:Y> * <var:x> * <var:G> = <var:h> $ given some integer $ <var:h> $ and such that $ <var:j> $ , $ <var:N> $ , $ <var:G> $ , $ <var:b> $ , $ <var:Y> $ , $ <var:s> $ , $ <var:x> $ , $ <var:E> $ , and $ <var:A> \geq <nat:2> $ . Thus the number <nat:3628800> is <def:nine-composite> . \end{theorem} \begin{proof} Assume $ <var:A> = <nat:10> $ , $ <var:N> = <nat:3> $ , $ <var:E> = <nat:9> $ , $ <var:j> = <nat:2> $ , $ <var:s> = <nat:4> $ , $ <var:G> = <nat:7> $ , $ <var:Y> = <nat:8> $ , $ <var:x> = <nat:6> $ , $ <var:b> = <nat:5> $ . We show $ <nat:3628800> = <var:b> \times <var:G> \times <var:N> \times <var:x> \times <var:A> \times <var:E> \times <var:Y> \times <var:s> \times <var:j> $ . We prove <nat:3628800> is a <def:nine-composite> natural number considering On account of $ <var:N> = <nat:3> $ , $ <var:A> = <nat:10> $ , $ <var:j> = <nat:2> $ , $ <var:b> = <nat:5> $ , $ <var:E> = <nat:9> $ , $ <var:s> = <nat:4> $ , $ <var:x> = <nat:6> $ , $ <var:G> = <nat:7> $ , $ <var:Y> = <nat:8> $ are more than <nat:1> . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:nine-composite> ( <var:h> : nat ) := exists <var:G> <var:A> <var:b> <var:j> <var:x> <var:E> <var:Y> <var:s> <var:N> : nat , ( <var:A> * <var:b> * <var:N> * <var:s> * <var:E> * <var:j> * <var:Y> * <var:x> * <var:G> = <var:h> ) /\ ( <var:j> >= <nat:2> ) /\ ( <var:N> >= <nat:2> ) /\ ( <var:G> >= <nat:2> ) /\ ( <var:b> >= <nat:2> ) /\ ( <var:Y> >= <nat:2> ) /\ ( <var:s> >= <nat:2> ) /\ ( <var:x> >= <nat:2> ) /\ ( <var:E> >= <nat:2> ) /\ ( <var:A> >= <nat:2> ) . Theorem <genP:1> : <def:nine-composite> <nat:3628800> . Proof . unfold <def:nine-composite> . exists <nat:7> . exists <nat:10> . exists <nat:5> . exists <nat:2> . exists <nat:6> . exists <nat:9> . exists <nat:8> . exists <nat:4> . exists <nat:3> . assert ( <genH> : <nat:3> > <nat:1> ) . { lia . } assert ( <genH> : <nat:10> > <nat:1> ) . { lia . } assert ( <genH> : <nat:2> > <nat:1> ) . { lia . } assert ( <genH> : <nat:5> > <nat:1> ) . { lia . } assert ( <genH> : <nat:9> > <nat:1> ) . { lia . } assert ( <genH> : <nat:4> > <nat:1> ) . { lia . } assert ( <genH> : <nat:6> > <nat:1> ) . { lia . } assert ( <genH> : <nat:7> > <nat:1> ) . { lia . } assert ( <genH> : <nat:8> > <nat:1> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 