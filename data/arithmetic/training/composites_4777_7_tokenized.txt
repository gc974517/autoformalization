\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} The positive integer <nat:60480> is the product of positive integers $ <var:Q> $ , $ <var:z> $ , $ <var:c> $ , $ <var:f> $ , $ <var:j> $ , $ <var:m> $ , and $ <var:L> $ such that $ <var:m> $ , $ <var:z> $ , $ <var:j> $ , $ <var:f> $ , $ <var:c> $ , $ <var:Q> $ , and $ <var:L> > <nat:1> $ . \end{theorem} \begin{proof} Take $ <var:f> = <nat:4> $ , $ <var:j> = <nat:6> $ , $ <var:c> = <nat:5> $ , $ <var:m> = <nat:12> $ , $ <var:L> = <nat:7> $ , $ <var:z> = <nat:3> $ and $ <var:Q> = <nat:2> $ . We present $ <var:m> $ , $ <var:L> $ , $ <var:f> $ , $ <var:c> $ , $ <var:Q> $ , $ <var:z> $ , and $ <var:j> > <nat:1> $ plus <nat:60480> is the product between $ <var:L> $ , $ <var:j> $ , $ <var:z> $ , $ <var:Q> $ , $ <var:f> $ , $ <var:c> $ and $ <var:m> \in \mathbb{Z}^+ $ . We justify our principle is true seeing that $ <var:L> = <nat:7> $ , $ <var:Q> = <nat:2> $ , $ <var:f> = <nat:4> $ , $ <var:m> = <nat:12> $ , $ <var:z> = <nat:3> $ , $ <var:c> = <nat:5> $ , $ <var:j> = <nat:6> > <nat:1> $ . \end{proof} \end{document} 
~
Require Import Lia . Theorem <genP:1> : exists <var:Q> <var:z> <var:c> <var:f> <var:j> <var:m> <var:L> : nat , ( <nat:60480> = <var:Q> * <var:z> * <var:c> * <var:f> * <var:j> * <var:m> * <var:L> ) /\ ( <var:m> > <nat:1> ) /\ ( <var:z> > <nat:1> ) /\ ( <var:j> > <nat:1> ) /\ ( <var:f> > <nat:1> ) /\ ( <var:c> > <nat:1> ) /\ ( <var:Q> > <nat:1> ) /\ ( <var:L> > <nat:1> ) . Proof . exists <nat:2> . exists <nat:3> . exists <nat:5> . exists <nat:4> . exists <nat:6> . exists <nat:12> . exists <nat:7> . assert ( <genH> : <nat:7> > <nat:1> ) . { lia . } assert ( <genH> : <nat:2> > <nat:1> ) . { lia . } assert ( <genH> : <nat:4> > <nat:1> ) . { lia . } assert ( <genH> : <nat:12> > <nat:1> ) . { lia . } assert ( <genH> : <nat:3> > <nat:1> ) . { lia . } assert ( <genH> : <nat:5> > <nat:1> ) . { lia . } assert ( <genH> : <nat:6> > <nat:1> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 