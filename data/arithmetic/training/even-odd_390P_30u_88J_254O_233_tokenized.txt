\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:88> <var:J> + <var:u> <nat:30> + <nat:390> <var:P> + <var:O> <nat:254> + <nat:233> $ is odd taking any positive integers $ <var:J> $ , $ <var:u> $ , $ <var:O> $ , and $ <var:P> $ . \end{theorem} \begin{proof} This proposition is proven as a consequence that $ <var:O> \cdot <nat:254> + <nat:390> \cdot <var:P> + <nat:88> \cdot <var:J> + <var:u> \cdot <nat:30> $ is known to be even . The pairs $ <nat:30> <var:u> $ , $ <var:O> <nat:254> $ , in addition to $ <nat:88> <var:J> $ are guaranteed to be even . The term $ <nat:390> <var:P> $ is obviously an even number . From the knowledge taking the product of an even number in $ \mathbb{N} $ with an arbitrary natural will be even the expression $ <nat:390> * <var:P> + <var:u> * <nat:30> + <nat:88> * <var:J> + <nat:254> * <var:O> $ is guaranteed to be even . The addition between even elements of $ \mathbb{Z}^+ $ successively and an odd element of $ \mathbb{N} $ will be instrinsically an odd positive integer . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:J> <var:u> <var:O> <var:P> : nat , Nat . odd ( <nat:88> * <var:J> + <nat:30> * <var:u> + <nat:390> * <var:P> + <nat:254> * <var:O> + <nat:233> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:30> * <var:u> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:254> * <var:O> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:88> * <var:J> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:390> * <var:P> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:88> * <var:J> + <nat:30> * <var:u> + <nat:390> * <var:P> + <nat:254> * <var:O> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . auto . Qed . 