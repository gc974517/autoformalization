\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:X> <nat:176> + <var:n> <nat:168> + <nat:442> + <var:f> <nat:484> + <var:a> <nat:328> + <var:s> <nat:232> + <nat:412> <var:z> + <nat:478> <var:A> + <var:l> <nat:496> $ will be even . \end{theorem} \begin{proof} Observe $ <nat:442> $ is guaranteed to be even . The summation between an even positive integer and an even integer will be an even element of $ \mathbb{N} $ . Then , $ <nat:496> \cdot <var:l> + <var:a> \cdot <nat:328> + <nat:176> \cdot <var:X> + <var:f> \cdot <nat:484> + <var:s> \cdot <nat:232> + <nat:442> + <var:z> \cdot <nat:412> + <nat:168> \cdot <var:n> + <var:A> \cdot <nat:478> $ obviously is even . The term $ <nat:478> \cdot <var:A> $ is obviously an even positive integer from the fact the number $ <nat:478> $ is trivially an even whole number . Recall the integer $ <nat:176> $ is trivially an even element of $ \mathbb{N} $ . In consequence , the pair $ <var:X> \cdot <nat:176> $ is even at the same time . Observe that the coefficient $ <nat:484> $ is obviously an even number in $ \mathbb{N} $ . Accordingly , the product $ <nat:484> \cdot <var:f> $ will be even in addition . The term $ <nat:328> \cdot <var:a> $ is obviously an even natural . This claim is proven as a consequence that the coefficient $ <nat:328> $ is known to be an even whole number . The number $ <nat:232> $ is clearly an even positive integer . Consequently , $ <nat:232> \cdot <var:s> $ must be even additionally . Take note that $ <var:z> \cdot <nat:412> $ is known to be an even element of $ \mathbb{N} $ as a consequence that the coefficient $ <nat:412> $ is by itself an even whole number . Further , we know that the positive integer $ <nat:168> $ is obviously even . Thus , the product $ <nat:168> \cdot <var:n> $ is even as well . We know the product $ <var:l> \cdot <nat:496> $ is known to be an even element of $ \mathbb{Z}^+ $ as a consequence that the number $ <nat:496> $ is obviously even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:X> <var:n> <var:f> <var:a> <var:s> <var:z> <var:A> <var:l> : nat , Nat . even ( <nat:176> * <var:X> + <nat:168> * <var:n> + <nat:484> * <var:f> + <nat:328> * <var:a> + <nat:232> * <var:s> + <nat:412> * <var:z> + <nat:478> * <var:A> + <nat:496> * <var:l> + <nat:442> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:442> = true ) . { auto . } repeat rewrite Nat . even_add . assert ( <genH> : Nat . even <nat:478> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:478> * <var:A> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:176> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:176> * <var:X> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:484> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:484> * <var:f> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:328> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:328> * <var:a> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:232> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:232> * <var:s> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:412> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:412> * <var:z> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:168> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:168> * <var:n> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:496> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:496> * <var:l> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 