\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:214> <var:H> + <nat:308> <var:P> + <nat:410> <var:q> + <var:o> <nat:438> + <nat:303> $ will be odd with every $ <var:o> $ , $ <var:q> $ , $ <var:P> $ , and $ <var:H> \in \mathbb{Z}^+ $ . \end{theorem} \begin{proof} The expression $ <nat:214> \times <var:H> + <var:o> \times <nat:438> + <nat:303> + <nat:410> \times <var:q> + <var:P> \times <nat:308> $ is known to be odd by reason that the expression $ <nat:214> <var:H> + <nat:410> <var:q> + <var:P> <nat:308> + <var:o> <nat:438> $ is guaranteed to be even . The products $ <var:o> \times <nat:438> $ as well as $ <var:H> \times <nat:214> $ are known as even . Observe that $ <var:P> \times <nat:308> $ is known as an even number because the product between an even whole number with an arbitrary whole number must be an even number in $ \mathbb{Z}^+ $ . What's more , the pair $ <var:q> \times <nat:410> $ is trivially an even integer . We show the sum $ <nat:214> \times <var:H> + <nat:438> \times <var:o> + <var:q> \times <nat:410> + <nat:303> + <nat:308> \times <var:P> $ is odd . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:o> <var:q> <var:P> <var:H> : nat , Nat . odd ( <nat:214> * <var:H> + <nat:308> * <var:P> + <nat:410> * <var:q> + <nat:438> * <var:o> + <nat:303> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:438> * <var:o> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:214> * <var:H> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:308> * <var:P> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:410> * <var:q> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:214> * <var:H> + <nat:308> * <var:P> + <nat:410> * <var:q> + <nat:438> * <var:o> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . auto . Qed . 