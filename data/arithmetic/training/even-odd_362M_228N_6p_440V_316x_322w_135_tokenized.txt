\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:N> \cdot <nat:228> + <var:M> \cdot <nat:362> + <var:x> \cdot <nat:316> + <var:V> \cdot <nat:440> + <nat:322> \cdot <var:w> + <nat:135> + <nat:6> \cdot <var:p> $ is guaranteed to be odd for any positive integers $ <var:V> $ , $ <var:p> $ , $ <var:N> $ , $ <var:x> $ , $ <var:M> $ , and $ <var:w> $ . \end{theorem} \begin{proof} It can be justified that the expression $ <var:w> \cdot <nat:322> + <nat:228> \cdot <var:N> + <var:M> \cdot <nat:362> + <var:V> \cdot <nat:440> + <nat:316> \cdot <var:x> + <var:p> \cdot <nat:6> $ is obviously even . Take note the whole numbers $ <nat:316> $ , $ <nat:228> $ , $ <nat:440> $ , $ <nat:6> $ , plus $ <nat:362> $ are guaranteed to be even The whole number $ <nat:322> $ is guaranteed to be even Since the summing between an even positive integer and an even natural number must be even , the sum $ <nat:362> <var:M> + <var:N> <nat:228> + <nat:6> <var:p> + <var:V> <nat:440> + <var:x> <nat:316> + <var:w> <nat:322> $ is guaranteed to be in itself even . See that the totaling between even positive integers successively with an odd number in $ \mathbb{N} $ is guaranteed to be an odd number in $ \mathbb{N} $ . Recall that $ <nat:135> $ is known to be an odd number in $ \mathbb{N} $ . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:V> <var:p> <var:N> <var:x> <var:M> <var:w> : nat , Nat . odd ( <nat:228> * <var:N> + <nat:362> * <var:M> + <nat:316> * <var:x> + <nat:440> * <var:V> + <nat:322> * <var:w> + <nat:6> * <var:p> + <nat:135> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:316> = true ) . { auto . } assert ( <genH> : Nat . even <nat:228> = true ) . { auto . } assert ( <genH> : Nat . even <nat:440> = true ) . { auto . } assert ( <genH> : Nat . even <nat:6> = true ) . { auto . } assert ( <genH> : Nat . even <nat:362> = true ) . { auto . } assert ( <genH> : Nat . even <nat:322> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:228> * <var:N> + <nat:362> * <var:M> + <nat:316> * <var:x> + <nat:440> * <var:V> + <nat:322> * <var:w> + <nat:6> * <var:p> ) = true ) . { repeat rewrite Nat . even_add . repeat rewrite Nat . even_mul . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . assert ( <genH> : Nat . odd <nat:135> = true ) . { auto . } rewrite <- Nat . negb_even . rewrite <genH> . rewrite <genH> . auto . Qed . 