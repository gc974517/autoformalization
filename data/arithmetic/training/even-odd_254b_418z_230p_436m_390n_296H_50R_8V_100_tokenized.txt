\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:100> + <nat:254> <var:b> + <nat:230> <var:p> + <nat:436> <var:m> + <var:z> <nat:418> + <nat:50> <var:R> + <var:V> <nat:8> + <nat:296> <var:H> + <var:n> <nat:390> $ is even . \end{theorem} \begin{proof} The sum $ <nat:100> + <nat:8> * <var:V> + <nat:254> * <var:b> + <nat:296> * <var:H> + <var:m> * <nat:436> + <var:R> * <nat:50> + <var:n> * <nat:390> + <nat:230> * <var:p> + <nat:418> * <var:z> $ is known as even as a consequence that the summation $ <var:R> \times <nat:50> + <nat:230> \times <var:p> + <var:b> \times <nat:254> + <var:n> \times <nat:390> + <nat:418> \times <var:z> + <var:V> \times <nat:8> + <nat:436> \times <var:m> + <nat:296> \times <var:H> $ is known as even . The integers $ <nat:50> $ , $ <nat:230> $ , $ <nat:296> $ , $ <nat:390> $ , $ <nat:436> $ , $ <nat:418> $ , and also $ <nat:8> $ are known to be even numbers . Consequently , the terms $ <var:R> <nat:50> $ , $ <nat:230> <var:p> $ , $ <nat:296> <var:H> $ , $ <nat:390> <var:n> $ , $ <nat:436> <var:m> $ , $ <var:z> <nat:418> $ , and $ <nat:8> <var:V> $ must be even also . The integer $ <nat:254> $ is guaranteed to be even . Therefore , $ <var:b> <nat:254> $ will be even at the same time . From the fact taking the product between an even positive integer and some element of $ \mathbb{Z}^+ $ must be trivially an even element of $ \mathbb{N} $ this result must be true . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:b> <var:p> <var:m> <var:z> <var:R> <var:V> <var:H> <var:n> : nat , Nat . even ( <nat:254> * <var:b> + <nat:230> * <var:p> + <nat:436> * <var:m> + <nat:418> * <var:z> + <nat:50> * <var:R> + <nat:8> * <var:V> + <nat:296> * <var:H> + <nat:390> * <var:n> + <nat:100> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:50> = true ) . { auto . } assert ( <genH> : Nat . even <nat:230> = true ) . { auto . } assert ( <genH> : Nat . even <nat:296> = true ) . { auto . } assert ( <genH> : Nat . even <nat:390> = true ) . { auto . } assert ( <genH> : Nat . even <nat:436> = true ) . { auto . } assert ( <genH> : Nat . even <nat:418> = true ) . { auto . } assert ( <genH> : Nat . even <nat:8> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:50> * <var:R> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:230> * <var:p> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:296> * <var:H> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:390> * <var:n> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:436> * <var:m> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:418> * <var:z> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:8> * <var:V> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:254> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:254> * <var:b> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:254> * <var:b> + <nat:230> * <var:p> + <nat:436> * <var:m> + <nat:418> * <var:z> + <nat:50> * <var:R> + <nat:8> * <var:V> + <nat:296> * <var:H> + <nat:390> * <var:n> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . even_add . rewrite <genH> . auto . Qed . 