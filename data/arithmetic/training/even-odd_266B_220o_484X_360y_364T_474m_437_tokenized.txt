\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:437> + <var:T> \cdot <nat:364> + <nat:220> \cdot <var:o> + <nat:474> \cdot <var:m> + <nat:360> \cdot <var:y> + <nat:484> \cdot <var:X> + <nat:266> \cdot <var:B> $ must be odd for some unknowns $ <var:B> $ , $ <var:o> $ , $ <var:X> $ , $ <var:y> $ , $ <var:T> $ , and $ <var:m> $ . \end{theorem} \begin{proof} The summing of even natural numbers collectively and an odd natural will be odd . $ <var:B> * <nat:266> + <var:o> * <nat:220> + <nat:484> * <var:X> + <var:y> * <nat:360> + <nat:364> * <var:T> + <nat:474> * <var:m> $ is known as even , from the knowledge the totaling between an even natural with an even element of $ \mathbb{Z}^+ $ must be even . See the numbers $ <nat:220> $ plus $ <nat:474> $ are clearly even Furthermore , the natural number $ <nat:364> $ is obviously even The leading term $ <nat:484> $ is known to be an even element of $ \mathbb{N} $ Observe that the leading term $ <nat:360> $ is trivially even The positive integer $ <nat:266> $ is guaranteed to be an even number in $ \mathbb{N} $ \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:B> <var:o> <var:X> <var:y> <var:T> <var:m> : nat , Nat . odd ( <nat:364> * <var:T> + <nat:220> * <var:o> + <nat:474> * <var:m> + <nat:360> * <var:y> + <nat:484> * <var:X> + <nat:266> * <var:B> + <nat:437> ) = true . Proof . intros . rewrite Nat . odd_add . assert ( <genH> : Nat . even <nat:220> = true ) . { auto . } assert ( <genH> : Nat . even <nat:474> = true ) . { auto . } assert ( <genH> : Nat . even <nat:364> = true ) . { auto . } assert ( <genH> : Nat . even <nat:484> = true ) . { auto . } assert ( <genH> : Nat . even <nat:360> = true ) . { auto . } assert ( <genH> : Nat . even <nat:266> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:364> * <var:T> + <nat:220> * <var:o> + <nat:474> * <var:m> + <nat:360> * <var:y> + <nat:484> * <var:X> + <nat:266> * <var:B> ) = true ) . { repeat rewrite Nat . even_add . repeat rewrite Nat . even_mul . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite <- Nat . negb_even . rewrite <genH> . auto . Qed . 