\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \newtheorem{definition}{Definition} \begin{document} \begin{definition} With the condition that we get $ <var:d> \cdot <var:Q> \cdot <var:i> \cdot <var:v> \cdot <var:P> \cdot <var:E> \cdot <var:s> \cdot <var:c> \cdot <var:l> = <var:N> $ given some $ <var:N> $ and such that $ <var:i> $ , $ <var:v> $ , $ <var:E> $ , $ <var:d> $ , $ <var:l> $ , $ <var:c> $ , $ <var:P> $ , $ <var:Q> $ , $ <var:s> \geq <nat:2> $ taking some $ <var:i> $ , $ <var:v> $ , $ <var:Q> $ , $ <var:c> $ , $ <var:d> $ , $ <var:E> $ , $ <var:l> $ , $ <var:P> $ , $ <var:s> \in \mathbb{N} $ , then we assume that $ <var:N> $ is <def:nine-composite> . \end{definition} \begin{theorem} $ <nat:3991680> = <var:N> $ is a <def:nine-composite> integer . \end{theorem} \begin{proof} Allow $ <var:P> = <nat:7> $ , $ <var:Q> = <nat:8> $ , $ <var:i> = <nat:11> $ , $ <var:E> = <nat:6> $ , $ <var:c> = <nat:5> $ , $ <var:v> = <nat:4> $ , $ <var:s> = <nat:3> $ , $ <var:d> = <nat:9> $ , and $ <var:l> = <nat:2> $ . We justify <nat:3991680> is a <def:nine-composite> integer seeing that In consideration of $ <nat:7> $ , $ <nat:11> $ , $ <nat:6> $ , $ <nat:5> $ , $ <nat:9> $ , $ <nat:3> $ , $ <nat:2> $ , $ <nat:8> $ , $ <nat:4> $ are greater than or equivalent to <nat:2> . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:nine-composite> ( <var:N> : nat ) := exists <var:i> <var:v> <var:Q> <var:c> <var:d> <var:E> <var:l> <var:P> <var:s> : nat , ( <var:d> * <var:Q> * <var:i> * <var:v> * <var:P> * <var:E> * <var:s> * <var:c> * <var:l> = <var:N> ) /\ ( <var:i> >= <nat:2> ) /\ ( <var:v> >= <nat:2> ) /\ ( <var:E> >= <nat:2> ) /\ ( <var:d> >= <nat:2> ) /\ ( <var:l> >= <nat:2> ) /\ ( <var:c> >= <nat:2> ) /\ ( <var:P> >= <nat:2> ) /\ ( <var:Q> >= <nat:2> ) /\ ( <var:s> >= <nat:2> ) . Theorem <genP:1> : <def:nine-composite> <nat:3991680> . Proof . unfold <def:nine-composite> . exists <nat:11> . exists <nat:4> . exists <nat:8> . exists <nat:5> . exists <nat:9> . exists <nat:6> . exists <nat:2> . exists <nat:7> . exists <nat:3> . assert ( <genH> : <nat:7> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:11> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:6> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:5> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:9> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:3> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:2> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:8> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:4> >= <nat:2> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 