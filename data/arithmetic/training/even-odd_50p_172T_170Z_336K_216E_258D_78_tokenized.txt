\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:216> * <var:E> + <nat:336> * <var:K> + <nat:170> * <var:Z> + <nat:172> * <var:T> + <nat:78> + <var:D> * <nat:258> + <var:p> * <nat:50> $ is even using positive terms $ <var:T> $ , $ <var:K> $ , $ <var:Z> $ , $ <var:D> $ , $ <var:p> $ , and $ <var:E> $ . \end{theorem} \begin{proof} It can be proven that the formula $ <nat:50> * <var:p> + <nat:172> * <var:T> + <var:Z> * <nat:170> + <var:K> * <nat:336> + <nat:216> * <var:E> + <nat:258> * <var:D> + <nat:78> $ will be even . See the term $ <nat:170> <var:Z> $ is guaranteed to be even . This fact holds from the fact multiplying of an even element of $ \mathbb{Z}^+ $ and an arbitrary positive integer is by definition an even whole number . In addition to this , $ <nat:258> <var:D> $ is trivially even . Further , remember the products $ <var:T> <nat:172> $ plus $ <var:p> <nat:50> $ are clearly even . Observe $ <nat:216> <var:E> $ is obviously even as a consequence that taking the product between an even number in $ \mathbb{Z}^+ $ with an arbitrary positive integer is even . On top of this , we know that the term $ <nat:336> <var:K> $ is trivially even . This is proven as a consequence that the multiplication between an even number in $ \mathbb{N} $ with a positive integer is guaranteed to be an even integer . Remember that the summation of even elements of $ \mathbb{Z}^+ $ together with an even natural must be obviously an even element of $ \mathbb{Z}^+ $ . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:T> <var:K> <var:Z> <var:D> <var:p> <var:E> : nat , Nat . even ( <nat:216> * <var:E> + <nat:336> * <var:K> + <nat:170> * <var:Z> + <nat:172> * <var:T> + <nat:258> * <var:D> + <nat:50> * <var:p> + <nat:78> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:170> * <var:Z> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:258> * <var:D> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:172> * <var:T> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:50> * <var:p> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:216> * <var:E> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:336> * <var:K> ) = true ) . { rewrite Nat . even_mul . auto . } repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 