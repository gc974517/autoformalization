\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:438> * <var:C> + <var:B> * <nat:60> + <nat:46> + <var:x> * <nat:12> + <nat:402> * <var:H> + <nat:324> * <var:N> + <nat:136> * <var:i> $ will be even . \end{theorem} \begin{proof} Recall that $ <nat:46> $ is trivially an even positive integer . We show $ <nat:60> \times <var:B> + <nat:12> \times <var:x> + <nat:46> + <nat:136> \times <var:i> + <nat:324> \times <var:N> + <var:H> \times <nat:402> + <var:C> \times <nat:438> $ will be even . The products $ <var:x> \cdot <nat:12> $ , $ <nat:136> \cdot <var:i> $ , $ <var:B> \cdot <nat:60> $ , $ <var:H> \cdot <nat:402> $ , plus $ <var:N> \cdot <nat:324> $ are trivially even integers . The term $ <var:C> \cdot <nat:438> $ is even . This claim is true from the knowledge the multiplication between an even number in $ \mathbb{Z}^+ $ and some number in $ \mathbb{N} $ is by itself an even number in $ \mathbb{N} $ . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:C> <var:B> <var:x> <var:H> <var:N> <var:i> : nat , Nat . even ( <nat:438> * <var:C> + <nat:60> * <var:B> + <nat:12> * <var:x> + <nat:402> * <var:H> + <nat:324> * <var:N> + <nat:136> * <var:i> + <nat:46> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:46> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:12> * <var:x> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:136> * <var:i> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:60> * <var:B> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:402> * <var:H> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:324> * <var:N> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:438> * <var:C> ) = true ) . { rewrite Nat . even_mul . auto . } repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 