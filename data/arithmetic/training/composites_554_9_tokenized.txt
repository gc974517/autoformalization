\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \newtheorem{definition}{Definition} \begin{document} \begin{definition} Under the condition that we have $ <var:Q> \times <var:E> \times <var:D> \times <var:p> \times <var:l> \times <var:y> \times <var:q> \times <var:f> \times <var:P> = <var:a> $ for some positive integer $ <var:a> $ and where $ <var:q> $ , $ <var:l> $ , $ <var:D> $ , $ <var:p> $ , $ <var:f> $ , $ <var:Q> $ , $ <var:E> $ , $ <var:P> $ , and $ <var:y> \geq <nat:2> $ , define that $ <var:a> $ is a <def:nine-composite> positive integer taking some integers $ <var:f> $ , $ <var:y> $ , $ <var:Q> $ , $ <var:p> $ , $ <var:q> $ , $ <var:E> $ , $ <var:P> $ , $ <var:l> $ , $ <var:D> $ . \end{definition} \begin{theorem} $ <nat:31933440> = <var:a> $ is a <def:nine-composite> positive integer . \end{theorem} \begin{proof} Remember <nat:31933440> is a <def:nine-composite> number only if <nat:31933440> is the multiplication of whole numbers $ <var:p> $ , $ <var:D> $ , $ <var:E> $ , $ <var:y> $ , $ <var:l> $ , $ <var:P> $ , $ <var:Q> $ , $ <var:f> $ , $ <var:q> $ where $ <var:P> $ , $ <var:q> $ , $ <var:E> $ , $ <var:f> $ , $ <var:p> $ , $ <var:l> $ , $ <var:D> $ , $ <var:y> $ , $ <var:Q> > <nat:1> $ . We prove <nat:31933440> is a <def:nine-composite> positive integer . Observe that $ <nat:7> $ , $ <nat:11> $ , $ <nat:6> $ , $ <nat:10> $ , $ <nat:9> $ , $ <nat:8> $ , $ <nat:12> $ , $ <nat:2> $ , and $ <nat:4> > <nat:1> $ . Further notice that moreover $ <var:D> \times <var:f> \times <var:q> \times <var:P> \times <var:y> \times <var:p> \times <var:E> \times <var:l> \times <var:Q> = <nat:31933440> $ suggests $ <var:D> = <nat:2> $ , $ <var:Q> = <nat:6> $ , $ <var:q> = <nat:7> $ , $ <var:E> = <nat:4> $ , $ <var:p> = <nat:9> $ , $ <var:f> = <nat:8> $ , $ <var:y> = <nat:12> $ , $ <var:l> = <nat:11> $ , and $ <var:P> = <nat:10> $ . This gives <nat:31933440> is a <def:nine-composite> whole number . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:nine-composite> ( <var:a> : nat ) := exists <var:f> <var:y> <var:Q> <var:p> <var:q> <var:E> <var:P> <var:l> <var:D> : nat , ( <var:Q> * <var:E> * <var:D> * <var:p> * <var:l> * <var:y> * <var:q> * <var:f> * <var:P> = <var:a> ) /\ ( <var:q> >= <nat:2> ) /\ ( <var:l> >= <nat:2> ) /\ ( <var:D> >= <nat:2> ) /\ ( <var:p> >= <nat:2> ) /\ ( <var:f> >= <nat:2> ) /\ ( <var:Q> >= <nat:2> ) /\ ( <var:E> >= <nat:2> ) /\ ( <var:P> >= <nat:2> ) /\ ( <var:y> >= <nat:2> ) . Theorem <genP:1> : <def:nine-composite> <nat:31933440> . Proof . unfold <def:nine-composite> . assert ( <genH> : <nat:7> > <nat:1> ) . { lia . } assert ( <genH> : <nat:11> > <nat:1> ) . { lia . } assert ( <genH> : <nat:6> > <nat:1> ) . { lia . } assert ( <genH> : <nat:10> > <nat:1> ) . { lia . } assert ( <genH> : <nat:9> > <nat:1> ) . { lia . } assert ( <genH> : <nat:8> > <nat:1> ) . { lia . } assert ( <genH> : <nat:12> > <nat:1> ) . { lia . } assert ( <genH> : <nat:2> > <nat:1> ) . { lia . } assert ( <genH> : <nat:4> > <nat:1> ) . { lia . } exists <nat:8> . exists <nat:12> . exists <nat:6> . exists <nat:9> . exists <nat:7> . exists <nat:4> . exists <nat:10> . exists <nat:11> . exists <nat:2> . repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 