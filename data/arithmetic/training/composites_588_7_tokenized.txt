\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Assume $ <var:Z> $ , $ <var:t> $ , $ <var:v> $ , $ <var:d> $ , $ <var:F> $ , $ <var:n> $ and $ <var:T> $ as positive integers such that $ <var:d> $ , $ <var:t> $ , $ <var:F> $ , $ <var:T> $ , $ <var:Z> $ , $ <var:n> $ , $ <var:v> $ greater than <nat:1> plus such that the number <nat:142560> is the multiplication between integers $ <var:Z> $ , $ <var:t> $ , $ <var:v> $ , $ <var:d> $ , $ <var:F> $ , $ <var:n> $ , and $ <var:T> $ . \end{theorem} \begin{proof} Let $ <var:t> = <nat:5> $ , $ <var:v> = <nat:4> $ , $ <var:n> = <nat:3> $ , $ <var:d> = <nat:12> $ , $ <var:Z> = <nat:2> $ , $ <var:T> = <nat:11> $ and $ <var:F> = <nat:9> $ . Notice that $ <var:n> = <nat:3> $ , $ <var:F> = <nat:9> $ , $ <var:T> = <nat:11> $ , $ <var:t> = <nat:5> $ , $ <var:d> = <nat:12> $ , $ <var:Z> = <nat:2> $ , and $ <var:v> = <nat:4> $ are more than <nat:1> . Also notice that moreover $ <nat:3> * <nat:11> * <nat:5> * <nat:12> * <nat:4> * <nat:2> * <nat:9> = <nat:142560> = <var:n> * <var:T> * <var:t> * <var:d> * <var:v> * <var:Z> * <var:F> $ . \end{proof} \end{document} 
~
Require Import Lia . Theorem <genP:1> : exists <var:Z> <var:t> <var:v> <var:d> <var:F> <var:n> <var:T> : nat , ( <var:d> > <nat:1> ) /\ ( <var:t> > <nat:1> ) /\ ( <var:F> > <nat:1> ) /\ ( <var:T> > <nat:1> ) /\ ( <var:Z> > <nat:1> ) /\ ( <var:n> > <nat:1> ) /\ ( <var:v> > <nat:1> ) /\ ( <nat:142560> = <var:Z> * <var:t> * <var:v> * <var:d> * <var:F> * <var:n> * <var:T> ) . Proof . exists <nat:2> . exists <nat:5> . exists <nat:4> . exists <nat:12> . exists <nat:9> . exists <nat:3> . exists <nat:11> . assert ( <genH> : <nat:3> > <nat:1> ) . { lia . } assert ( <genH> : <nat:9> > <nat:1> ) . { lia . } assert ( <genH> : <nat:11> > <nat:1> ) . { lia . } assert ( <genH> : <nat:5> > <nat:1> ) . { lia . } assert ( <genH> : <nat:12> > <nat:1> ) . { lia . } assert ( <genH> : <nat:2> > <nat:1> ) . { lia . } assert ( <genH> : <nat:4> > <nat:1> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 