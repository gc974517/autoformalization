\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:52> \times <var:k> + <nat:199> + <nat:242> \times <var:w> + <nat:372> \times <var:b> + <var:v> \times <nat:312> $ must be odd . \end{theorem} \begin{proof} We show the expression $ <var:w> \cdot <nat:242> + <var:b> \cdot <nat:372> + <nat:199> + <var:k> \cdot <nat:52> + <var:v> \cdot <nat:312> $ must be odd in accordance with the fact the summation between even elements of $ \mathbb{Z}^+ $ collectively and an odd number in $ \mathbb{Z}^+ $ is guaranteed to be odd . Observe that $ <nat:199> $ is obviously odd . We use the assumption the understanding the sum $ <var:b> <nat:372> + <nat:242> <var:w> + <var:k> <nat:52> + <nat:312> <var:v> $ is trivially even . $ <nat:312> \cdot <var:v> $ is clearly an even integer since the number $ <nat:312> $ is even . On top of this , remember the integer $ <nat:52> $ is clearly even . Accordingly , the pair $ <nat:52> \cdot <var:k> $ must be even at the same time . Additionally , see that the pair $ <var:b> \cdot <nat:372> $ is trivially even . This fact holds from the knowledge the whole number $ <nat:372> $ is known to be in itself an even whole number . On top of this , the leading term $ <nat:242> $ is known as an even number in $ \mathbb{Z}^+ $ . For this reason , the product $ <nat:242> \cdot <var:w> $ is guaranteed to be even as well . The sum $ <nat:52> <var:k> + <nat:242> <var:w> + <var:b> <nat:372> + <nat:312> <var:v> $ is guaranteed to be even from the knowledge the multiplication of an even positive integer and a number in $ \mathbb{N} $ will be even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:k> <var:w> <var:b> <var:v> : nat , Nat . odd ( <nat:52> * <var:k> + <nat:242> * <var:w> + <nat:372> * <var:b> + <nat:312> * <var:v> + <nat:199> ) = true . Proof . intros . rewrite Nat . odd_add . assert ( <genH> : Nat . odd <nat:199> = true ) . { auto . } assert ( <genH> : Nat . even <nat:312> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:312> * <var:v> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:52> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:52> * <var:k> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:372> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:372> * <var:b> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:242> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:242> * <var:w> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:52> * <var:k> + <nat:242> * <var:w> + <nat:372> * <var:b> + <nat:312> * <var:v> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite <- Nat . negb_even . rewrite <genH> . rewrite <genH> . auto . Qed . 