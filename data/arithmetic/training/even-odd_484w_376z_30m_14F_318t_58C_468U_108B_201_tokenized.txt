\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Given every $ <var:C> $ , $ <var:w> $ , $ <var:F> $ , $ <var:U> $ , $ <var:m> $ , $ <var:B> $ , $ <var:t> $ , and $ <var:z> $ the expression $ <var:B> \cdot <nat:108> + <var:z> \cdot <nat:376> + <var:m> \cdot <nat:30> + <nat:484> \cdot <var:w> + <var:U> \cdot <nat:468> + <var:C> \cdot <nat:58> + <nat:14> \cdot <var:F> + <var:t> \cdot <nat:318> + <nat:201> $ must be odd . \end{theorem} \begin{proof} We justify the summation $ <nat:484> \times <var:w> + <var:z> \times <nat:376> + <nat:201> + <var:m> \times <nat:30> + <nat:14> \times <var:F> + <nat:318> \times <var:t> + <nat:58> \times <var:C> + <nat:468> \times <var:U> + <nat:108> \times <var:B> $ must be odd with the fact that the adding between an even number and an odd integer is an odd positive integer . We know that $ <nat:201> $ is trivially odd . The products $ <var:w> \cdot <nat:484> $ , $ <var:U> \cdot <nat:468> $ , $ <var:F> \cdot <nat:14> $ , $ <var:z> \cdot <nat:376> $ , $ <nat:58> \cdot <var:C> $ , $ <var:t> \cdot <nat:318> $ , plus $ <nat:108> \cdot <var:B> $ are known to be even . This claim must be true from the fact multiplying of an even element of $ \mathbb{N} $ and an arbitrary number in $ \mathbb{N} $ is even . The product $ <var:m> \cdot <nat:30> $ is obviously even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:C> <var:w> <var:F> <var:U> <var:m> <var:B> <var:t> <var:z> : nat , Nat . odd ( <nat:108> * <var:B> + <nat:376> * <var:z> + <nat:30> * <var:m> + <nat:484> * <var:w> + <nat:468> * <var:U> + <nat:58> * <var:C> + <nat:14> * <var:F> + <nat:318> * <var:t> + <nat:201> ) = true . Proof . intros . rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . assert ( <genH> : Nat . odd <nat:201> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:484> * <var:w> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:468> * <var:U> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:14> * <var:F> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:376> * <var:z> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:58> * <var:C> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:318> * <var:t> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:108> * <var:B> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:30> * <var:m> ) = true ) . { rewrite Nat . even_mul . auto . } rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 