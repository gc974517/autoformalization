\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} With all unknowns $ <var:Y> $ , $ <var:G> $ , $ <var:S> $ , $ <var:N> $ , $ <var:K> $ , and $ <var:V> $ the formula $ <var:V> <nat:478> + <nat:342> <var:N> + <nat:232> <var:G> + <nat:397> + <nat:64> <var:K> + <var:S> <nat:362> + <var:Y> <nat:250> $ must be odd . \end{theorem} \begin{proof} The summation of even natural numbers with an odd positive integer is an odd integer . We make use the knowledge the expression $ <nat:362> \times <var:S> + <nat:478> \times <var:V> + <nat:232> \times <var:G> + <var:Y> \times <nat:250> + <nat:64> \times <var:K> + <var:N> \times <nat:342> $ is obviously even . The products $ <var:V> \cdot <nat:478> $ , $ <var:S> \cdot <nat:362> $ , $ <var:K> \cdot <nat:64> $ , and moreover $ <var:G> \cdot <nat:232> $ are obviously even since the product between an even number in $ \mathbb{Z}^+ $ with an arbitrary number in $ \mathbb{Z}^+ $ is guaranteed to be even . The term $ <nat:342> \cdot <var:N> $ is known to be even . In addition , remember that the pair $ <nat:250> \cdot <var:Y> $ is clearly an even number in $ \mathbb{N} $ . The expression $ <nat:64> \times <var:K> + <var:Y> \times <nat:250> + <var:S> \times <nat:362> + <nat:232> \times <var:G> + <var:N> \times <nat:342> + <var:V> \times <nat:478> $ must be in itself even from the fact the adding of an even element of $ \mathbb{Z}^+ $ with an even natural number is by its very nature an even integer in addition to because the multiplication of even elements of $ \mathbb{Z}^+ $ and a natural number will be even . We check the lemma must be true . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:Y> <var:G> <var:S> <var:N> <var:K> <var:V> : nat , Nat . odd ( <nat:478> * <var:V> + <nat:342> * <var:N> + <nat:232> * <var:G> + <nat:64> * <var:K> + <nat:362> * <var:S> + <nat:250> * <var:Y> + <nat:397> ) = true . Proof . intros . rewrite Nat . odd_add . assert ( <genH> : Nat . even ( <nat:478> * <var:V> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:362> * <var:S> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:64> * <var:K> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:232> * <var:G> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:342> * <var:N> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:250> * <var:Y> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:478> * <var:V> + <nat:342> * <var:N> + <nat:232> * <var:G> + <nat:64> * <var:K> + <nat:362> * <var:S> + <nat:250> * <var:Y> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite <- Nat . negb_even . rewrite <genH> . auto . Qed . 