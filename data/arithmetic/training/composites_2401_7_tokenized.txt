\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:177408> $ is the same as $ <var:D> \times <var:J> \times <var:a> \times <var:k> \times <var:Q> \times <var:h> \times <var:r> $ satisfying the condition that $ <var:h> $ , $ <var:D> $ , $ <var:k> $ , $ <var:Q> $ , $ <var:J> $ , $ <var:r> $ , and $ <var:a> > <nat:1> $ . \end{theorem} \begin{proof} Allow $ <var:Q> = <nat:12> $ , $ <var:a> = <nat:8> $ , $ <var:h> = <nat:4> $ , $ <var:D> = <nat:2> $ , $ <var:k> = <nat:7> $ , $ <var:J> = <nat:11> $ and $ <var:r> = <nat:3> $ . Note that $ <var:D> = <nat:2> $ , $ <var:h> = <nat:4> $ , $ <var:a> = <nat:8> $ , $ <var:k> = <nat:7> $ , $ <var:r> = <nat:3> $ , $ <var:J> = <nat:11> $ , and $ <var:Q> = <nat:12> > <nat:1> $ . In addition note further $ <var:J> \cdot <var:h> \cdot <var:r> \cdot <var:D> \cdot <var:k> \cdot <var:Q> \cdot <var:a> = <nat:177408> $ . This produces our result is valid . \end{proof} \end{document} 
~
Require Import Lia . Theorem <genP:1> : exists <var:h> <var:J> <var:a> <var:D> <var:k> <var:r> <var:Q> : nat , ( <nat:177408> = <var:D> * <var:J> * <var:a> * <var:k> * <var:Q> * <var:h> * <var:r> ) /\ ( <var:h> > <nat:1> ) /\ ( <var:D> > <nat:1> ) /\ ( <var:k> > <nat:1> ) /\ ( <var:Q> > <nat:1> ) /\ ( <var:J> > <nat:1> ) /\ ( <var:r> > <nat:1> ) /\ ( <var:a> > <nat:1> ) . Proof . exists <nat:4> . exists <nat:11> . exists <nat:8> . exists <nat:2> . exists <nat:7> . exists <nat:3> . exists <nat:12> . assert ( <genH> : <nat:2> > <nat:1> ) . { lia . } assert ( <genH> : <nat:4> > <nat:1> ) . { lia . } assert ( <genH> : <nat:8> > <nat:1> ) . { lia . } assert ( <genH> : <nat:7> > <nat:1> ) . { lia . } assert ( <genH> : <nat:3> > <nat:1> ) . { lia . } assert ( <genH> : <nat:11> > <nat:1> ) . { lia . } assert ( <genH> : <nat:12> > <nat:1> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 