\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:z> \cdot <nat:142> + <nat:60> \cdot <var:d> + <nat:454> \cdot <var:M> + <nat:387> + <nat:20> \cdot <var:N> + <var:L> \cdot <nat:360> + <nat:160> \cdot <var:c> $ will be odd . \end{theorem} \begin{proof} We show the summation $ <nat:160> \times <var:c> + <nat:454> \times <var:M> + <nat:387> + <var:L> \times <nat:360> + <var:N> \times <nat:20> + <var:d> \times <nat:60> + <nat:142> \times <var:z> $ is guaranteed to be odd . Recall the sum $ <nat:60> \times <var:d> + <var:c> \times <nat:160> + <nat:454> \times <var:M> + <nat:20> \times <var:N> + <nat:142> \times <var:z> + <var:L> \times <nat:360> $ is guaranteed to be even . The product $ <nat:20> \cdot <var:N> $ is known as even . This fact is proven from the fact multiplying between an even number in $ \mathbb{Z}^+ $ with any whole number is guaranteed to be obviously an even number , which holds since the natural number $ <nat:20> $ is trivially trivially an even number . The pair $ <var:d> \cdot <nat:60> $ is even . This is true since the integer $ <nat:60> $ is even . See that the number $ <nat:142> $ is even . In consequence , the term $ <nat:142> \cdot <var:z> $ must be even in addition . Remember the integer $ <nat:454> $ is trivially even . Accordingly , $ <nat:454> \cdot <var:M> $ is guaranteed to be even at the same time . Furthermore , the pair $ <var:c> \cdot <nat:160> $ is guaranteed to be an even element of $ \mathbb{N} $ from the knowledge taking the product of an even element of $ \mathbb{Z}^+ $ and a element of $ \mathbb{N} $ must be obviously an even number as well as the positive integer $ <nat:160> $ is trivially even . Likewise , the positive integer $ <nat:360> $ is an even integer . Thus , the product $ <nat:360> \cdot <var:L> $ will be even in addition . Notice the summing of even elements of $ \mathbb{Z}^+ $ successively with an odd element of $ \mathbb{Z}^+ $ must be an odd number . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:z> <var:d> <var:M> <var:N> <var:L> <var:c> : nat , Nat . odd ( <nat:142> * <var:z> + <nat:60> * <var:d> + <nat:454> * <var:M> + <nat:20> * <var:N> + <nat:360> * <var:L> + <nat:160> * <var:c> + <nat:387> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:20> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:20> * <var:N> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:60> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:60> * <var:d> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:142> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:142> * <var:z> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:454> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:454> * <var:M> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:160> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:160> * <var:c> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:360> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:360> * <var:L> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:142> * <var:z> + <nat:60> * <var:d> + <nat:454> * <var:M> + <nat:20> * <var:N> + <nat:360> * <var:L> + <nat:160> * <var:c> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . auto . Qed . 