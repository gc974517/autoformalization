\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:Q> * <nat:4> + <nat:394> * <var:u> + <nat:478> * <var:M> + <nat:328> * <var:w> + <nat:238> * <var:m> + <nat:153> + <var:B> * <nat:116> $ is odd with some variables $ <var:m> $ , $ <var:w> $ , $ <var:Q> $ , $ <var:B> $ , $ <var:u> $ , and $ <var:M> $ . \end{theorem} \begin{proof} Notice that the pairs $ <nat:116> * <var:B> $ , $ <nat:328> * <var:w> $ , plus $ <nat:478> * <var:M> $ are known to be even . This claim is proven by reason that taking the product of an even natural with a number in $ \mathbb{Z}^+ $ will be even . We know that the term $ <nat:394> * <var:u> $ is trivially even . Furthermore , the term $ <var:m> * <nat:238> $ is trivially even . Likewise , the product $ <var:Q> * <nat:4> $ is guaranteed to be even . We demonstrate the sum $ <var:Q> \times <nat:4> + <var:w> \times <nat:328> + <nat:478> \times <var:M> + <var:B> \times <nat:116> + <nat:153> + <var:m> \times <nat:238> + <nat:394> \times <var:u> $ is odd . Notice that $ <nat:153> $ is known to be an odd number . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:m> <var:w> <var:Q> <var:B> <var:u> <var:M> : nat , Nat . odd ( <nat:4> * <var:Q> + <nat:394> * <var:u> + <nat:478> * <var:M> + <nat:328> * <var:w> + <nat:238> * <var:m> + <nat:116> * <var:B> + <nat:153> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:116> * <var:B> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:328> * <var:w> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:478> * <var:M> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:394> * <var:u> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:238> * <var:m> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:4> * <var:Q> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . odd <nat:153> = true ) . { auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 