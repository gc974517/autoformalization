\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:M> <nat:440> + <nat:316> <var:m> + <var:s> <nat:196> + <nat:284> + <nat:202> <var:o> + <nat:320> <var:t> + <var:z> <nat:284> $ must be even taking all integers $ <var:s> $ , $ <var:z> $ , $ <var:o> $ , $ <var:m> $ , $ <var:t> $ , and $ <var:M> $ . \end{theorem} \begin{proof} We know that $ <nat:284> $ is even . We demonstrate our lemma holds . It can be shown that the expression $ <nat:284> \times <var:z> + <nat:316> \times <var:m> + <var:t> \times <nat:320> + <var:s> \times <nat:196> + <nat:440> \times <var:M> + <var:o> \times <nat:202> $ is even , by reason that the addition of an even positive integer and an even number in $ \mathbb{Z}^+ $ is guaranteed to be even . The terms $ <nat:440> \times <var:M> $ plus $ <var:o> \times <nat:202> $ are known to be even by reason that taking the product between an even number and any number must be an even positive integer . See the term $ <nat:196> \times <var:s> $ is guaranteed to be an even number . Further , $ <nat:320> \times <var:t> $ is obviously an even element of $ \mathbb{Z}^+ $ . This fact holds by reason that multiplying of an even number in $ \mathbb{Z}^+ $ with a positive integer is an even number in $ \mathbb{N} $ . Take note the term $ <var:z> \times <nat:284> $ is clearly an even whole number because taking the product between an even element of $ \mathbb{N} $ and an arbitrary number is even . The product $ <var:m> \times <nat:316> $ is known as an even positive integer . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:s> <var:z> <var:o> <var:m> <var:t> <var:M> : nat , Nat . even ( <nat:440> * <var:M> + <nat:316> * <var:m> + <nat:196> * <var:s> + <nat:202> * <var:o> + <nat:320> * <var:t> + <nat:284> * <var:z> + <nat:284> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:284> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:440> * <var:M> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:202> * <var:o> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:196> * <var:s> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:320> * <var:t> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:284> * <var:z> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:316> * <var:m> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:440> * <var:M> + <nat:316> * <var:m> + <nat:196> * <var:s> + <nat:202> * <var:o> + <nat:320> * <var:t> + <nat:284> * <var:z> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . auto . Qed . 