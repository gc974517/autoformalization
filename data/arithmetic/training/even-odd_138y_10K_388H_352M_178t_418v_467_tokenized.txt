\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} For some unknowns $ <var:H> $ , $ <var:y> $ , $ <var:K> $ , $ <var:t> $ , $ <var:v> $ , and $ <var:M> $ the sum $ <nat:467> + <var:v> <nat:418> + <var:H> <nat:388> + <nat:352> <var:M> + <var:K> <nat:10> + <var:y> <nat:138> + <var:t> <nat:178> $ is odd . \end{theorem} \begin{proof} Take note $ <nat:467> $ is clearly odd . The summation of an even element of $ \mathbb{Z}^+ $ and an odd whole number is an odd whole number . It can be shown that the formula $ <nat:138> * <var:y> + <nat:10> * <var:K> + <var:H> * <nat:388> + <nat:352> * <var:M> + <var:t> * <nat:178> + <nat:418> * <var:v> $ is obviously even . The numbers $ <nat:418> $ , $ <nat:10> $ , in addition to $ <nat:352> $ are guaranteed to be even The leading terms $ <nat:388> $ and $ <nat:178> $ are known as even The number $ <nat:138> $ is obviously an even natural number Because taking the product between an even number with a element of $ \mathbb{N} $ is guaranteed to be even the result is true . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:H> <var:y> <var:K> <var:t> <var:v> <var:M> : nat , Nat . odd ( <nat:418> * <var:v> + <nat:388> * <var:H> + <nat:352> * <var:M> + <nat:10> * <var:K> + <nat:138> * <var:y> + <nat:178> * <var:t> + <nat:467> ) = true . Proof . intros . assert ( <genH> : Nat . odd <nat:467> = true ) . { auto . } rewrite Nat . odd_add . assert ( <genH> : Nat . even <nat:418> = true ) . { auto . } assert ( <genH> : Nat . even <nat:10> = true ) . { auto . } assert ( <genH> : Nat . even <nat:352> = true ) . { auto . } assert ( <genH> : Nat . even <nat:388> = true ) . { auto . } assert ( <genH> : Nat . even <nat:178> = true ) . { auto . } assert ( <genH> : Nat . even <nat:138> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:418> * <var:v> + <nat:388> * <var:H> + <nat:352> * <var:M> + <nat:10> * <var:K> + <nat:138> * <var:y> + <nat:178> * <var:t> ) = true ) . { repeat rewrite Nat . even_add . repeat rewrite Nat . even_mul . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite <- Nat . negb_even . rewrite <genH> . rewrite <genH> . auto . Qed . 