\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Take $ <var:Z> $ , $ <var:s> $ , $ <var:t> $ , $ <var:w> $ , $ <var:C> $ , $ <var:I> $ , $ <var:o> $ , $ <var:P> $ , $ <var:L> $ are natural numbers . We say that $ <var:d> \in \mathbb{N} $ will be considered as a <def:nine-composite> number when $ <var:w> \cdot <var:t> \cdot <var:Z> \cdot <var:C> \cdot <var:s> \cdot <var:I> \cdot <var:P> \cdot <var:o> \cdot <var:L> = <var:d> $ plus larger than <nat:1> . Hence $ <nat:79833600> = <var:d> $ is a <def:nine-composite> integer . \end{theorem} \begin{proof} Remember a <def:nine-composite> positive integer is the product of $ <var:P> $ , $ <var:C> $ , $ <var:L> $ , $ <var:o> $ , $ <var:s> $ , $ <var:Z> $ , $ <var:I> $ , $ <var:w> $ , $ <var:t> $ where $ <var:t> $ , $ <var:o> $ , $ <var:Z> $ , $ <var:s> $ , $ <var:L> $ , $ <var:C> $ , $ <var:w> $ , $ <var:P> $ , $ <var:I> > <nat:1> $ . We justify <nat:79833600> is <def:nine-composite> . Observe $ <nat:6> \times <nat:9> \times <nat:7> \times <nat:8> \times <nat:12> \times <nat:5> \times <nat:4> \times <nat:11> \times <nat:10> = <nat:79833600> $ . This suggests <nat:79833600> is a <def:nine-composite> natural number . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:nine-composite> ( <var:d> : nat ) := exists <var:Z> <var:s> <var:t> <var:w> <var:C> <var:I> <var:o> <var:P> <var:L> : nat , ( <var:w> * <var:t> * <var:Z> * <var:C> * <var:s> * <var:I> * <var:P> * <var:o> * <var:L> = <var:d> ) /\ ( <var:Z> > <nat:1> ) /\ ( <var:s> > <nat:1> ) /\ ( <var:t> > <nat:1> ) /\ ( <var:w> > <nat:1> ) /\ ( <var:C> > <nat:1> ) /\ ( <var:I> > <nat:1> ) /\ ( <var:o> > <nat:1> ) /\ ( <var:P> > <nat:1> ) /\ ( <var:L> > <nat:1> ) . Theorem <genP:1> : <def:nine-composite> <nat:79833600> . Proof . unfold <def:nine-composite> . exists <nat:7> . exists <nat:6> . exists <nat:8> . exists <nat:12> . exists <nat:9> . exists <nat:10> . exists <nat:5> . exists <nat:11> . exists <nat:4> . repeat split . all : lia . Qed . 