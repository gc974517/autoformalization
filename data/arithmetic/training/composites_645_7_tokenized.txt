\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \newtheorem{definition}{Definition} \begin{document} \begin{definition} Only if we get $ <var:R> = <var:d> \cdot <var:S> \cdot <var:w> \cdot <var:U> \cdot <var:Y> \cdot <var:r> \cdot <var:j> $ assuming some natural number $ <var:R> $ as well as so that $ <var:j> $ , $ <var:U> $ , $ <var:d> $ , $ <var:r> $ , $ <var:Y> $ , $ <var:S> $ , $ <var:w> \geq <nat:2> $ given some $ <var:r> $ , $ <var:U> $ , $ <var:Y> $ , $ <var:w> $ , $ <var:d> $ , $ <var:S> $ , $ <var:j> \in \mathbb{Z}^+ $ , then take that $ <var:R> $ is a <def:seven-composite> natural number . \end{definition} \begin{theorem} <nat:725760> is a <def:seven-composite> natural number . \end{theorem} \begin{proof} Recall <nat:725760> is <def:seven-composite> whenever it is the product of numbers $ <var:w> $ , $ <var:j> $ , $ <var:r> $ , $ <var:Y> $ , $ <var:U> $ , $ <var:d> $ , $ <var:S> $ satisfying the condition that $ <var:r> $ , $ <var:w> $ , $ <var:j> $ , $ <var:d> $ , $ <var:U> $ , $ <var:S> $ and $ <var:Y> \geq <nat:2> $ . Let $ <var:r> = <nat:8> $ , $ <var:w> = <nat:12> $ , $ <var:S> = <nat:7> $ , $ <var:j> = <nat:10> $ , $ <var:d> = <nat:4> $ , $ <var:U> = <nat:3> $ , and $ <var:Y> = <nat:9> $ . Note $ <nat:7> * <nat:9> * <nat:10> * <nat:4> * <nat:8> * <nat:3> * <nat:12> = <nat:725760> $ . In addition note $ <nat:7> $ , $ <nat:3> $ , $ <nat:8> $ , $ <nat:10> $ , $ <nat:9> $ , $ <nat:12> $ and $ <nat:4> $ are larger than or equal to <nat:2> . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:seven-composite> ( <var:R> : nat ) := exists <var:r> <var:U> <var:Y> <var:w> <var:d> <var:S> <var:j> : nat , ( <var:R> = <var:d> * <var:S> * <var:w> * <var:U> * <var:Y> * <var:r> * <var:j> ) /\ ( <var:j> >= <nat:2> ) /\ ( <var:U> >= <nat:2> ) /\ ( <var:d> >= <nat:2> ) /\ ( <var:r> >= <nat:2> ) /\ ( <var:Y> >= <nat:2> ) /\ ( <var:S> >= <nat:2> ) /\ ( <var:w> >= <nat:2> ) . Theorem <genP:1> : <def:seven-composite> <nat:725760> . Proof . unfold <def:seven-composite> . exists <nat:8> . exists <nat:3> . exists <nat:9> . exists <nat:12> . exists <nat:4> . exists <nat:7> . exists <nat:10> . assert ( <genH> : <nat:7> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:3> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:8> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:10> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:9> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:12> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:4> >= <nat:2> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 