\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \newtheorem{definition}{Definition} \begin{document} \begin{definition} There exist $ <var:k> $ , $ <var:G> $ , $ <var:x> $ , $ <var:b> $ , $ <var:V> $ , $ <var:B> $ , $ <var:n> $ , $ <var:p> $ , $ <var:J> $ such that $ <var:k> $ , $ <var:B> $ , $ <var:J> $ , $ <var:G> $ , $ <var:x> $ , $ <var:V> $ , $ <var:b> $ , $ <var:p> $ and $ <var:n> > <nat:1> $ . We say that some positive integer $ <var:o> $ will be considered to be a <def:nine-composite> whole number given $ <var:o> = <var:p> \cdot <var:k> \cdot <var:n> \cdot <var:b> \cdot <var:x> \cdot <var:G> \cdot <var:V> \cdot <var:J> \cdot <var:B> $ . \end{definition} \begin{theorem} $ <var:o> = <nat:59875200> $ is <def:nine-composite> . \end{theorem} \begin{proof} Recall a <def:nine-composite> positive integer is the product of whole numbers $ <var:x> $ , $ <var:n> $ , $ <var:b> $ , $ <var:k> $ , $ <var:B> $ , $ <var:p> $ , $ <var:J> $ , $ <var:V> $ , and $ <var:G> $ more than <nat:1> . Observe that $ <nat:3> $ , $ <nat:11> $ , $ <nat:5> $ , $ <nat:9> $ , $ <nat:7> $ , $ <nat:10> $ , $ <nat:12> $ , $ <nat:8> $ , and $ <nat:6> $ are greater than <nat:1> . Additionally notice additionally $ <nat:6> \times <nat:5> \times <nat:3> \times <nat:9> \times <nat:7> \times <nat:12> \times <nat:10> \times <nat:11> \times <nat:8> = <nat:59875200> $ . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:nine-composite> ( <var:o> : nat ) := exists <var:k> <var:G> <var:x> <var:b> <var:V> <var:B> <var:n> <var:p> <var:J> : nat , ( <var:k> > <nat:1> ) /\ ( <var:B> > <nat:1> ) /\ ( <var:J> > <nat:1> ) /\ ( <var:G> > <nat:1> ) /\ ( <var:x> > <nat:1> ) /\ ( <var:V> > <nat:1> ) /\ ( <var:b> > <nat:1> ) /\ ( <var:p> > <nat:1> ) /\ ( <var:n> > <nat:1> ) /\ ( <var:o> = <var:p> * <var:k> * <var:n> * <var:b> * <var:x> * <var:G> * <var:V> * <var:J> * <var:B> ) . Theorem <genP:1> : <def:nine-composite> <nat:59875200> . Proof . unfold <def:nine-composite> . assert ( <genH> : <nat:3> > <nat:1> ) . { lia . } assert ( <genH> : <nat:11> > <nat:1> ) . { lia . } assert ( <genH> : <nat:5> > <nat:1> ) . { lia . } assert ( <genH> : <nat:9> > <nat:1> ) . { lia . } assert ( <genH> : <nat:7> > <nat:1> ) . { lia . } assert ( <genH> : <nat:10> > <nat:1> ) . { lia . } assert ( <genH> : <nat:12> > <nat:1> ) . { lia . } assert ( <genH> : <nat:8> > <nat:1> ) . { lia . } assert ( <genH> : <nat:6> > <nat:1> ) . { lia . } exists <nat:11> . exists <nat:5> . exists <nat:7> . exists <nat:3> . exists <nat:9> . exists <nat:10> . exists <nat:12> . exists <nat:6> . exists <nat:8> . repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 