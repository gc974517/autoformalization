\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \newtheorem{definition}{Definition} \begin{document} \begin{definition} With the condition that we get $ <var:Z> = <var:d> \cdot <var:y> \cdot <var:N> \cdot <var:g> \cdot <var:k> \cdot <var:K> \cdot <var:C> $ assuming $ <var:Z> \in \mathbb{Z}^+ $ and so that $ <var:k> $ , $ <var:N> $ , $ <var:y> $ , $ <var:K> $ , $ <var:C> $ , $ <var:d> $ , $ <var:g> \geq <nat:2> $ using some numbers $ <var:y> $ , $ <var:C> $ , $ <var:d> $ , $ <var:k> $ , $ <var:g> $ , $ <var:K> $ , $ <var:N> $ , then we denote that $ <var:Z> $ is a <def:seven-composite> positive integer . \end{definition} \begin{theorem} The number <nat:831600> is a <def:seven-composite> positive integer . \end{theorem} \begin{proof} We present $ <var:y> \times <var:k> \times <var:K> \times <var:d> \times <var:C> \times <var:N> \times <var:g> = <nat:831600> $ plus $ <var:K> $ , $ <var:g> $ , $ <var:N> $ , $ <var:y> $ , $ <var:d> $ , $ <var:k> $ , and $ <var:C> \geq <nat:2> $ . Notice $ <nat:6> * <nat:11> * <nat:9> * <nat:4> * <nat:5> * <nat:7> * <nat:10> = <var:N> * <var:d> * <var:y> * <var:C> * <var:k> * <var:g> * <var:K> = <nat:831600> $ . In addition notice $ <nat:6> $ , $ <nat:4> $ , $ <nat:9> $ , $ <nat:5> $ , $ <nat:11> $ , $ <nat:10> $ and $ <nat:7> \geq <nat:2> $ . This shows <nat:831600> is a <def:seven-composite> natural number . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:seven-composite> ( <var:Z> : nat ) := exists <var:y> <var:C> <var:d> <var:k> <var:g> <var:K> <var:N> : nat , ( <var:Z> = <var:d> * <var:y> * <var:N> * <var:g> * <var:k> * <var:K> * <var:C> ) /\ ( <var:k> >= <nat:2> ) /\ ( <var:N> >= <nat:2> ) /\ ( <var:y> >= <nat:2> ) /\ ( <var:K> >= <nat:2> ) /\ ( <var:C> >= <nat:2> ) /\ ( <var:d> >= <nat:2> ) /\ ( <var:g> >= <nat:2> ) . Theorem <genP:1> : <def:seven-composite> <nat:831600> . Proof . unfold <def:seven-composite> . exists <nat:9> . exists <nat:4> . exists <nat:11> . exists <nat:5> . exists <nat:7> . exists <nat:10> . exists <nat:6> . assert ( <genH> : <nat:6> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:4> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:9> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:5> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:11> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:10> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:7> >= <nat:2> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 