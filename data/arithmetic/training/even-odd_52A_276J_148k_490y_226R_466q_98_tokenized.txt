\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:A> <nat:52> + <nat:490> <var:y> + <nat:148> <var:k> + <nat:466> <var:q> + <var:R> <nat:226> + <nat:98> + <var:J> <nat:276> $ is even . \end{theorem} \begin{proof} Building on , the leading terms $ <nat:52> $ , $ <nat:490> $ , $ <nat:148> $ , $ <nat:466> $ , $ <nat:226> $ , and likewise $ <nat:276> $ must be even elements of $ \mathbb{Z}^+ $ . In consequence , the pairs $ <var:A> <nat:52> $ , $ <var:y> <nat:490> $ , $ <nat:148> <var:k> $ , $ <nat:466> <var:q> $ , $ <var:R> <nat:226> $ , and also $ <nat:276> <var:J> $ is guaranteed to be even additionally . We know that $ <nat:98> $ is even . We prove the summation $ <nat:52> <var:A> + <var:J> <nat:276> + <var:k> <nat:148> + <nat:490> <var:y> + <nat:98> + <var:R> <nat:226> + <nat:466> <var:q> $ is guaranteed to be even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:A> <var:y> <var:k> <var:q> <var:R> <var:J> : nat , Nat . even ( <nat:52> * <var:A> + <nat:490> * <var:y> + <nat:148> * <var:k> + <nat:466> * <var:q> + <nat:226> * <var:R> + <nat:276> * <var:J> + <nat:98> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:52> = true ) . { auto . } assert ( <genH> : Nat . even <nat:490> = true ) . { auto . } assert ( <genH> : Nat . even <nat:148> = true ) . { auto . } assert ( <genH> : Nat . even <nat:466> = true ) . { auto . } assert ( <genH> : Nat . even <nat:226> = true ) . { auto . } assert ( <genH> : Nat . even <nat:276> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:52> * <var:A> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:490> * <var:y> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:148> * <var:k> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:466> * <var:q> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:226> * <var:R> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:276> * <var:J> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:98> = true ) . { auto . } repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 