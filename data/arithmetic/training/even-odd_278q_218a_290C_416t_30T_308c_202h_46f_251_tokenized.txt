\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Taking some $ <var:C> $ , $ <var:f> $ , $ <var:t> $ , $ <var:h> $ , $ <var:c> $ , $ <var:T> $ , $ <var:q> $ , and $ <var:a> $ the expression $ <nat:278> \times <var:q> + <nat:251> + <nat:218> \times <var:a> + <var:C> \times <nat:290> + <nat:416> \times <var:t> + <var:T> \times <nat:30> + <var:c> \times <nat:308> + <nat:202> \times <var:h> + <var:f> \times <nat:46> $ is guaranteed to be odd . \end{theorem} \begin{proof} Recall that the terms $ <var:q> \cdot <nat:278> $ , $ <nat:218> \cdot <var:a> $ , $ <nat:290> \cdot <var:C> $ , $ <var:t> \cdot <nat:416> $ , $ <var:T> \cdot <nat:30> $ , $ <nat:308> \cdot <var:c> $ , $ <var:h> \cdot <nat:202> $ , plus $ <nat:46> \cdot <var:f> $ are even whole numbers . This holds by reason that the multiplication of an even whole number with any positive integer is an even number in $ \mathbb{Z}^+ $ . This claim must be true from the knowledge the leading terms $ <nat:278> $ , $ <nat:218> $ , $ <nat:290> $ , $ <nat:416> $ , $ <nat:30> $ , $ <nat:308> $ , $ <nat:202> $ , and likewise $ <nat:46> $ will be by themselves even natural numbers . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:C> <var:f> <var:t> <var:h> <var:c> <var:T> <var:q> <var:a> : nat , Nat . odd ( <nat:278> * <var:q> + <nat:218> * <var:a> + <nat:290> * <var:C> + <nat:416> * <var:t> + <nat:30> * <var:T> + <nat:308> * <var:c> + <nat:202> * <var:h> + <nat:46> * <var:f> + <nat:251> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:278> = true ) . { auto . } assert ( <genH> : Nat . even <nat:218> = true ) . { auto . } assert ( <genH> : Nat . even <nat:290> = true ) . { auto . } assert ( <genH> : Nat . even <nat:416> = true ) . { auto . } assert ( <genH> : Nat . even <nat:30> = true ) . { auto . } assert ( <genH> : Nat . even <nat:308> = true ) . { auto . } assert ( <genH> : Nat . even <nat:202> = true ) . { auto . } assert ( <genH> : Nat . even <nat:46> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:278> * <var:q> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:218> * <var:a> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:290> * <var:C> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:416> * <var:t> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:30> * <var:T> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:308> * <var:c> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:202> * <var:h> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:46> * <var:f> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 