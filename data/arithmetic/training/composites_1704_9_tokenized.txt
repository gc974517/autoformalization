\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \newtheorem{definition}{Definition} \begin{document} \begin{definition} There exist $ <var:Q> $ , $ <var:y> $ , $ <var:O> $ , $ <var:o> $ , $ <var:L> $ , $ <var:z> $ , $ <var:R> $ , $ <var:p> $ , $ <var:w> \in \mathbb{Z}^+ $ more than or equivalent to <nat:2> . Say that some whole number $ <var:b> $ is said to be a <def:nine-composite> integer assuming $ <var:b> = <var:O> \cdot <var:p> \cdot <var:w> \cdot <var:z> \cdot <var:y> \cdot <var:R> \cdot <var:o> \cdot <var:Q> \cdot <var:L> $ . \end{definition} \begin{theorem} $ <var:b> = <nat:4838400> $ is <def:nine-composite> . \end{theorem} \begin{proof} Remember <nat:4838400> is a <def:nine-composite> integer under the condition that it is the product between integers $ <var:w> $ , $ <var:p> $ , $ <var:O> $ , $ <var:z> $ , $ <var:R> $ , $ <var:o> $ , $ <var:y> $ , $ <var:Q> $ , $ <var:L> $ where $ <var:o> $ , $ <var:z> $ , $ <var:O> $ , $ <var:Q> $ , $ <var:w> $ , $ <var:y> $ , $ <var:p> $ , $ <var:R> $ , $ <var:L> \geq <nat:2> $ . Assume $ <var:R> = <nat:5> $ , $ <var:Q> = <nat:8> $ , $ <var:y> = <nat:6> $ , $ <var:O> = <nat:3> $ , $ <var:o> = <nat:12> $ , $ <var:p> = <nat:4> $ , $ <var:w> = <nat:2> $ , $ <var:L> = <nat:7> $ and $ <var:z> = <nat:10> $ . Notice $ <nat:5> $ , $ <nat:3> $ , $ <nat:2> $ , $ <nat:12> $ , $ <nat:10> $ , $ <nat:7> $ , $ <nat:8> $ , $ <nat:6> $ and $ <nat:4> $ are more than or equivalent to <nat:2> . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:nine-composite> ( <var:b> : nat ) := exists <var:Q> <var:y> <var:O> <var:o> <var:L> <var:z> <var:R> <var:p> <var:w> : nat , ( <var:Q> >= <nat:2> ) /\ ( <var:y> >= <nat:2> ) /\ ( <var:O> >= <nat:2> ) /\ ( <var:o> >= <nat:2> ) /\ ( <var:L> >= <nat:2> ) /\ ( <var:z> >= <nat:2> ) /\ ( <var:R> >= <nat:2> ) /\ ( <var:p> >= <nat:2> ) /\ ( <var:w> >= <nat:2> ) /\ ( <var:b> = <var:O> * <var:p> * <var:w> * <var:z> * <var:y> * <var:R> * <var:o> * <var:Q> * <var:L> ) . Theorem <genP:1> : <def:nine-composite> <nat:4838400> . Proof . unfold <def:nine-composite> . exists <nat:8> . exists <nat:6> . exists <nat:3> . exists <nat:12> . exists <nat:7> . exists <nat:10> . exists <nat:5> . exists <nat:4> . exists <nat:2> . assert ( <genH> : <nat:5> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:3> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:2> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:12> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:10> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:7> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:8> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:6> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:4> >= <nat:2> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 