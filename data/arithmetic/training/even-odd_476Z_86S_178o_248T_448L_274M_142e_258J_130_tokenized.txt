\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:130> + <var:J> <nat:258> + <nat:142> <var:e> + <nat:178> <var:o> + <nat:476> <var:Z> + <var:T> <nat:248> + <var:M> <nat:274> + <var:S> <nat:86> + <nat:448> <var:L> $ is even . \end{theorem} \begin{proof} Observe the natural numbers $ <nat:258> $ , $ <nat:142> $ , $ <nat:178> $ , $ <nat:476> $ , $ <nat:248> $ , $ <nat:274> $ , $ <nat:86> $ , additionally $ <nat:448> $ are trivially even positive integers . Thus , the products $ <var:J> * <nat:258> $ , $ <nat:142> * <var:e> $ , $ <var:o> * <nat:178> $ , $ <nat:476> * <var:Z> $ , $ <var:T> * <nat:248> $ , $ <nat:274> * <var:M> $ , $ <nat:86> * <var:S> $ , additionally $ <var:L> * <nat:448> $ is even in addition . We prove $ <var:Z> \cdot <nat:476> + <var:S> \cdot <nat:86> + <nat:178> \cdot <var:o> + <nat:248> \cdot <var:T> + <nat:448> \cdot <var:L> + <var:M> \cdot <nat:274> + <nat:142> \cdot <var:e> + <nat:130> + <var:J> \cdot <nat:258> $ will be even . Notice that $ <nat:130> $ is known to be even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:J> <var:e> <var:o> <var:Z> <var:T> <var:M> <var:S> <var:L> : nat , Nat . even ( <nat:258> * <var:J> + <nat:142> * <var:e> + <nat:178> * <var:o> + <nat:476> * <var:Z> + <nat:248> * <var:T> + <nat:274> * <var:M> + <nat:86> * <var:S> + <nat:448> * <var:L> + <nat:130> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:258> = true ) . { auto . } assert ( <genH> : Nat . even <nat:142> = true ) . { auto . } assert ( <genH> : Nat . even <nat:178> = true ) . { auto . } assert ( <genH> : Nat . even <nat:476> = true ) . { auto . } assert ( <genH> : Nat . even <nat:248> = true ) . { auto . } assert ( <genH> : Nat . even <nat:274> = true ) . { auto . } assert ( <genH> : Nat . even <nat:86> = true ) . { auto . } assert ( <genH> : Nat . even <nat:448> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:258> * <var:J> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:142> * <var:e> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:178> * <var:o> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:476> * <var:Z> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:248> * <var:T> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:274> * <var:M> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:86> * <var:S> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:448> * <var:L> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:130> = true ) . { auto . } repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 