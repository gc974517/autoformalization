\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} For some integers $ <var:G> $ , $ <var:W> $ , $ <var:g> $ , $ <var:s> $ , $ <var:R> $ , and $ <var:C> $ $ <nat:230> \cdot <var:C> + <nat:172> \cdot <var:W> + <nat:112> \cdot <var:G> + <nat:65> + <var:s> \cdot <nat:346> + <var:g> \cdot <nat:410> + <var:R> \cdot <nat:466> $ is odd . \end{theorem} \begin{proof} It can be justified that the sum $ <nat:466> \times <var:R> + <var:s> \times <nat:346> + <nat:172> \times <var:W> + <nat:410> \times <var:g> + <var:C> \times <nat:230> + <nat:112> \times <var:G> $ is clearly even . Remember the number $ <nat:346> $ is even . For this reason , $ <nat:346> <var:s> $ must be even as well . The term $ <var:g> <nat:410> $ is clearly an even positive integer from the knowledge the coefficient $ <nat:410> $ is trivially even . Building on , remember that the whole number $ <nat:466> $ is clearly an even natural . Therefore , the pair $ <var:R> <nat:466> $ will be even as well . Notice that the number $ <nat:112> $ is obviously an even element of $ \mathbb{N} $ . Hence , $ <nat:112> <var:G> $ will be even at the same time . Additionally , remember the pair $ <var:C> <nat:230> $ is known to be even . This holds because the leading term $ <nat:230> $ is trivially even . The leading term $ <nat:172> $ is an even element of $ \mathbb{N} $ . Then , the pair $ <nat:172> <var:W> $ is even in addition . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:G> <var:W> <var:g> <var:s> <var:R> <var:C> : nat , Nat . odd ( <nat:230> * <var:C> + <nat:172> * <var:W> + <nat:112> * <var:G> + <nat:346> * <var:s> + <nat:410> * <var:g> + <nat:466> * <var:R> + <nat:65> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:346> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:346> * <var:s> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:410> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:410> * <var:g> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:466> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:466> * <var:R> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:112> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:112> * <var:G> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:230> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:230> * <var:C> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:172> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:172> * <var:W> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:230> * <var:C> + <nat:172> * <var:W> + <nat:112> * <var:G> + <nat:346> * <var:s> + <nat:410> * <var:g> + <nat:466> * <var:R> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . auto . Qed . 