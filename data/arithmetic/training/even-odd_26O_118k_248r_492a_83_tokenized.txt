\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Using all integers $ <var:O> $ , $ <var:a> $ , $ <var:r> $ , and $ <var:k> $ the expression $ <var:k> <nat:118> + <nat:83> + <var:a> <nat:492> + <var:r> <nat:248> + <nat:26> <var:O> $ is guaranteed to be odd . \end{theorem} \begin{proof} The summation $ <var:O> \cdot <nat:26> + <var:k> \cdot <nat:118> + <nat:248> \cdot <var:r> + <var:a> \cdot <nat:492> $ is even . Remember that the products $ <nat:118> * <var:k> $ , $ <var:O> * <nat:26> $ , and likewise $ <nat:492> * <var:a> $ will be even since multiplying between an even whole number with a whole number will be even . $ <nat:248> * <var:r> $ is guaranteed to be an even number in $ \mathbb{Z}^+ $ as a consequence that taking the product of an even natural with some number in $ \mathbb{N} $ must be even . Our proposition is true since the summing of an even number with even whole numbers must be an even number as well as since the multiplication of even numbers and an arbitrary positive integer is an even element of $ \mathbb{N} $ . Observe that $ <nat:83> $ is known as odd . The summation between an even number in $ \mathbb{N} $ with an odd positive integer is guaranteed to be an odd number in $ \mathbb{Z}^+ $ . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:O> <var:a> <var:r> <var:k> : nat , Nat . odd ( <nat:118> * <var:k> + <nat:492> * <var:a> + <nat:248> * <var:r> + <nat:26> * <var:O> + <nat:83> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:118> * <var:k> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:26> * <var:O> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:492> * <var:a> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:248> * <var:r> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:118> * <var:k> + <nat:492> * <var:a> + <nat:248> * <var:r> + <nat:26> * <var:O> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } assert ( <genH> : Nat . odd <nat:83> = true ) . { auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . rewrite <genH> . auto . Qed . 