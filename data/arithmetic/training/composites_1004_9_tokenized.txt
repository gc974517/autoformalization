\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \newtheorem{definition}{Definition} \begin{document} \begin{definition} Allow $ <var:J> $ , $ <var:H> $ , $ <var:P> $ , $ <var:I> $ , $ <var:C> $ , $ <var:i> $ , $ <var:F> $ , $ <var:L> $ , $ <var:A> $ as integers so that $ <var:J> $ , $ <var:H> $ , $ <var:F> $ , $ <var:i> $ , $ <var:A> $ , $ <var:L> $ , $ <var:I> $ , $ <var:C> $ and $ <var:P> \geq <nat:2> $ . Say that some integer $ <var:o> $ will be a <def:nine-composite> natural number assuming $ <var:o> = <var:H> \times <var:i> \times <var:I> \times <var:C> \times <var:L> \times <var:A> \times <var:F> \times <var:J> \times <var:P> $ . \end{definition} \begin{theorem} The natural number <nat:9580032> is <def:nine-composite> . \end{theorem} \begin{proof} Recall that a <def:nine-composite> positive integer is the product between $ <var:L> $ , $ <var:H> $ , $ <var:C> $ , $ <var:P> $ , $ <var:A> $ , $ <var:i> $ , $ <var:I> $ , $ <var:F> $ , and $ <var:J> $ more than or equivalent to <nat:2> . Assume $ <var:H> = <nat:8> $ , $ <var:J> = <nat:12> $ , $ <var:A> = <nat:11> $ , $ <var:C> = <nat:7> $ , $ <var:L> = <nat:2> $ , $ <var:P> = <nat:9> $ , $ <var:I> = <nat:3> $ , $ <var:F> = <nat:4> $ , $ <var:i> = <nat:6> $ . Notice that $ <var:P> = <nat:9> $ , $ <var:A> = <nat:11> $ , $ <var:J> = <nat:12> $ , $ <var:F> = <nat:4> $ , $ <var:I> = <nat:3> $ , $ <var:L> = <nat:2> $ , $ <var:C> = <nat:7> $ , $ <var:H> = <nat:8> $ , $ <var:i> = <nat:6> \geq <nat:2> $ . Thus , <nat:9580032> is a <def:nine-composite> number has been verified . Because of this , $ <var:I> $ , $ <var:P> $ , $ <var:J> $ , $ <var:H> $ , $ <var:C> $ , $ <var:i> $ , $ <var:L> $ , $ <var:A> $ , and $ <var:F> $ are more than or equivalent to <nat:2> as well as <nat:9580032> is the multiplication between some whole numbers $ <var:A> $ , $ <var:L> $ , $ <var:H> $ , $ <var:F> $ , $ <var:I> $ , $ <var:J> $ , $ <var:i> $ , $ <var:C> $ , and $ <var:P> $ has been verified . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:nine-composite> ( <var:o> : nat ) := exists <var:J> <var:H> <var:P> <var:I> <var:C> <var:i> <var:F> <var:L> <var:A> : nat , ( <var:J> >= <nat:2> ) /\ ( <var:H> >= <nat:2> ) /\ ( <var:F> >= <nat:2> ) /\ ( <var:i> >= <nat:2> ) /\ ( <var:A> >= <nat:2> ) /\ ( <var:L> >= <nat:2> ) /\ ( <var:I> >= <nat:2> ) /\ ( <var:C> >= <nat:2> ) /\ ( <var:P> >= <nat:2> ) /\ ( <var:o> = <var:H> * <var:i> * <var:I> * <var:C> * <var:L> * <var:A> * <var:F> * <var:J> * <var:P> ) . Theorem <genP:1> : <def:nine-composite> <nat:9580032> . Proof . unfold <def:nine-composite> . exists <nat:12> . exists <nat:8> . exists <nat:9> . exists <nat:3> . exists <nat:7> . exists <nat:6> . exists <nat:4> . exists <nat:2> . exists <nat:11> . assert ( <genH> : <nat:9> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:11> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:12> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:4> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:3> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:2> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:7> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:8> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:6> >= <nat:2> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 