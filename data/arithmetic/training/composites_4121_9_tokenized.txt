\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} There are some whole numbers $ <var:J> $ , $ <var:B> $ , $ <var:S> $ , $ <var:R> $ , $ <var:I> $ , $ <var:s> $ , $ <var:A> $ , $ <var:n> $ , $ <var:U> $ such that $ <var:S> $ , $ <var:B> $ , $ <var:s> $ , $ <var:A> $ , $ <var:n> $ , $ <var:I> $ , $ <var:R> $ , $ <var:J> $ and $ <var:U> > <nat:1> $ as well as so that the positive integer <nat:6220800> is the product between integers $ <var:J> $ , $ <var:B> $ , $ <var:S> $ , $ <var:R> $ , $ <var:I> $ , $ <var:s> $ , $ <var:A> $ , $ <var:n> $ , and $ <var:U> $ . \end{theorem} \begin{proof} Observe that $ <nat:3> $ , $ <nat:9> $ , $ <nat:4> $ , $ <nat:12> $ , $ <nat:10> $ , $ <nat:8> $ , $ <nat:2> $ , $ <nat:5> $ , $ <nat:6> $ are more than <nat:1> . Plus notice moreover $ <nat:6220800> = <var:A> \times <var:s> \times <var:R> \times <var:S> \times <var:B> \times <var:U> \times <var:I> \times <var:n> \times <var:J> $ implies $ <var:U> = <nat:6> $ , $ <var:J> = <nat:5> $ , $ <var:S> = <nat:3> $ , $ <var:s> = <nat:4> $ , $ <var:R> = <nat:9> $ , $ <var:I> = <nat:12> $ , $ <var:n> = <nat:10> $ , $ <var:B> = <nat:8> $ , and $ <var:A> = <nat:2> $ . \end{proof} \end{document} 
~
Require Import Lia . Theorem <genP:1> : exists <var:J> <var:B> <var:S> <var:R> <var:I> <var:s> <var:A> <var:n> <var:U> : nat , ( <var:S> > <nat:1> ) /\ ( <var:B> > <nat:1> ) /\ ( <var:s> > <nat:1> ) /\ ( <var:A> > <nat:1> ) /\ ( <var:n> > <nat:1> ) /\ ( <var:I> > <nat:1> ) /\ ( <var:R> > <nat:1> ) /\ ( <var:J> > <nat:1> ) /\ ( <var:U> > <nat:1> ) /\ ( <nat:6220800> = <var:J> * <var:B> * <var:S> * <var:R> * <var:I> * <var:s> * <var:A> * <var:n> * <var:U> ) . Proof . assert ( <genH> : <nat:3> > <nat:1> ) . { lia . } assert ( <genH> : <nat:9> > <nat:1> ) . { lia . } assert ( <genH> : <nat:4> > <nat:1> ) . { lia . } assert ( <genH> : <nat:12> > <nat:1> ) . { lia . } assert ( <genH> : <nat:10> > <nat:1> ) . { lia . } assert ( <genH> : <nat:8> > <nat:1> ) . { lia . } assert ( <genH> : <nat:2> > <nat:1> ) . { lia . } assert ( <genH> : <nat:5> > <nat:1> ) . { lia . } assert ( <genH> : <nat:6> > <nat:1> ) . { lia . } exists <nat:5> . exists <nat:8> . exists <nat:3> . exists <nat:9> . exists <nat:12> . exists <nat:4> . exists <nat:2> . exists <nat:10> . exists <nat:6> . repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 