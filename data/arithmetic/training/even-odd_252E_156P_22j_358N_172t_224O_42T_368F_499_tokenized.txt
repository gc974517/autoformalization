\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} For every terms $ <var:T> $ , $ <var:j> $ , $ <var:N> $ , $ <var:P> $ , $ <var:t> $ , $ <var:F> $ , $ <var:E> $ , and $ <var:O> $ the summation $ <nat:358> \times <var:N> + <nat:172> \times <var:t> + <nat:22> \times <var:j> + <var:P> \times <nat:156> + <var:T> \times <nat:42> + <var:O> \times <nat:224> + <var:E> \times <nat:252> + <nat:499> + <var:F> \times <nat:368> $ is odd . \end{theorem} \begin{proof} We apply $ <nat:156> \times <var:P> + <nat:358> \times <var:N> + <nat:42> \times <var:T> + <nat:499> + <nat:368> \times <var:F> + <var:O> \times <nat:224> + <nat:172> \times <var:t> + <var:j> \times <nat:22> + <var:E> \times <nat:252> $ is known to be odd as a consequence that the summation $ <nat:252> * <var:E> + <nat:156> * <var:P> + <var:t> * <nat:172> + <var:T> * <nat:42> + <var:O> * <nat:224> + <var:N> * <nat:358> + <var:j> * <nat:22> + <nat:368> * <var:F> $ is clearly even . Notice that the number $ <nat:22> $ is an even positive integer . For this reason , the pair $ <nat:22> \times <var:j> $ is guaranteed to be even in addition . Adding on , take note the numbers $ <nat:368> $ , $ <nat:358> $ , $ <nat:156> $ , in addition to $ <nat:172> $ are even . For this reason , the terms $ <var:F> \times <nat:368> $ , $ <var:N> \times <nat:358> $ , $ <nat:156> \times <var:P> $ , as well as $ <nat:172> \times <var:t> $ is even in addition . What's more , the positive integers $ <nat:252> $ additionally $ <nat:224> $ are even numbers in $ \mathbb{Z}^+ $ . Consequently , the pairs $ <var:E> \times <nat:252> $ plus $ <var:O> \times <nat:224> $ must be even also . The product $ <nat:42> \times <var:T> $ is guaranteed to be an even number from the knowledge the natural number $ <nat:42> $ is known to be by itself an even natural number . Since the multiplication between an even natural number and any positive integer is even our theorem is true . We prove our result holds . Observe that $ <nat:499> $ is obviously odd . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:T> <var:j> <var:N> <var:P> <var:t> <var:F> <var:E> <var:O> : nat , Nat . odd ( <nat:358> * <var:N> + <nat:172> * <var:t> + <nat:22> * <var:j> + <nat:156> * <var:P> + <nat:42> * <var:T> + <nat:224> * <var:O> + <nat:252> * <var:E> + <nat:368> * <var:F> + <nat:499> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:22> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:22> * <var:j> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:368> = true ) . { auto . } assert ( <genH> : Nat . even <nat:358> = true ) . { auto . } assert ( <genH> : Nat . even <nat:156> = true ) . { auto . } assert ( <genH> : Nat . even <nat:172> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:368> * <var:F> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:358> * <var:N> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:156> * <var:P> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:172> * <var:t> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:252> = true ) . { auto . } assert ( <genH> : Nat . even <nat:224> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:252> * <var:E> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:224> * <var:O> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:42> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:42> * <var:T> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:358> * <var:N> + <nat:172> * <var:t> + <nat:22> * <var:j> + <nat:156> * <var:P> + <nat:42> * <var:T> + <nat:224> * <var:O> + <nat:252> * <var:E> + <nat:368> * <var:F> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } assert ( <genH> : Nat . odd <nat:499> = true ) . { auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . rewrite <genH> . auto . Qed . 