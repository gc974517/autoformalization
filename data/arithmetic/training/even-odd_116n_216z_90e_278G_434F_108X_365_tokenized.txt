\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:n> \times <nat:116> + <nat:365> + <var:z> \times <nat:216> + <nat:90> \times <var:e> + <var:G> \times <nat:278> + <nat:434> \times <var:F> + <nat:108> \times <var:X> $ will be odd . \end{theorem} \begin{proof} The adding between even numbers concurrently with an odd whole number must be odd . Therefore , our theorem holds . Observe that $ <nat:365> $ is clearly an odd whole number . Observe that the terms $ <var:n> * <nat:116> $ , $ <var:z> * <nat:216> $ , $ <var:e> * <nat:90> $ , $ <var:G> * <nat:278> $ , $ <nat:434> * <var:F> $ , and also $ <var:X> * <nat:108> $ will be even positive integers because the multiplication between an even integer and an arbitrary number in $ \mathbb{N} $ is instrinsically an even integer and likewise the leading terms $ <nat:116> $ , $ <nat:216> $ , $ <nat:90> $ , $ <nat:278> $ , $ <nat:434> $ , additionally $ <nat:108> $ are clearly even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:n> <var:z> <var:e> <var:G> <var:F> <var:X> : nat , Nat . odd ( <nat:116> * <var:n> + <nat:216> * <var:z> + <nat:90> * <var:e> + <nat:278> * <var:G> + <nat:434> * <var:F> + <nat:108> * <var:X> + <nat:365> ) = true . Proof . intros . rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . assert ( <genH> : Nat . odd <nat:365> = true ) . { auto . } assert ( <genH> : Nat . even <nat:116> = true ) . { auto . } assert ( <genH> : Nat . even <nat:216> = true ) . { auto . } assert ( <genH> : Nat . even <nat:90> = true ) . { auto . } assert ( <genH> : Nat . even <nat:278> = true ) . { auto . } assert ( <genH> : Nat . even <nat:434> = true ) . { auto . } assert ( <genH> : Nat . even <nat:108> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:116> * <var:n> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:216> * <var:z> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:90> * <var:e> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:278> * <var:G> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:434> * <var:F> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:108> * <var:X> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 