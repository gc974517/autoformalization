\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \newtheorem{definition}{Definition} \begin{document} \begin{definition} $ \exists <var:E> $ , $ <var:u> $ , $ <var:A> $ , $ <var:U> $ , $ <var:S> $ , $ <var:f> $ , $ <var:Y> $ , $ <var:y> $ , $ <var:L> \in \mathbb{N} $ more than <nat:1> . Take that $ <var:q> \in \mathbb{Z}^+ $ is defined to be a <def:nine-composite> integer assuming $ <var:q> = <var:E> * <var:S> * <var:u> * <var:y> * <var:Y> * <var:A> * <var:f> * <var:U> * <var:L> $ . \end{definition} \begin{theorem} $ <var:q> = <nat:4838400> $ is a <def:nine-composite> whole number . \end{theorem} \begin{proof} Remember that <nat:4838400> is a <def:nine-composite> number under the condition <nat:4838400> is the product between positive integers $ <var:S> $ , $ <var:U> $ , $ <var:y> $ , $ <var:Y> $ , $ <var:f> $ , $ <var:A> $ , $ <var:E> $ , $ <var:L> $ , and $ <var:u> $ greater than <nat:1> . Note that $ <var:U> \times <var:S> \times <var:y> \times <var:Y> \times <var:u> \times <var:A> \times <var:f> \times <var:E> \times <var:L> = <nat:4838400> $ hints $ <var:U> = <nat:2> $ , $ <var:y> = <nat:3> $ , $ <var:E> = <nat:4> $ , $ <var:Y> = <nat:7> $ , $ <var:S> = <nat:12> $ , $ <var:L> = <nat:6> $ , $ <var:u> = <nat:10> $ , $ <var:A> = <nat:8> $ and $ <var:f> = <nat:5> $ . What's more observe that $ <nat:6> $ , $ <nat:5> $ , $ <nat:3> $ , $ <nat:4> $ , $ <nat:2> $ , $ <nat:10> $ , $ <nat:7> $ , $ <nat:8> $ and $ <nat:12> > <nat:1> $ . This produces the principle holds . Thus , <nat:4838400> is a <def:nine-composite> integer is validated . Thus , $ <var:S> \times <var:u> \times <var:y> \times <var:U> \times <var:A> \times <var:E> \times <var:Y> \times <var:f> \times <var:L> = <nat:4838400> $ has been verified . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:nine-composite> ( <var:q> : nat ) := exists <var:E> <var:u> <var:A> <var:U> <var:S> <var:f> <var:Y> <var:y> <var:L> : nat , ( <var:E> > <nat:1> ) /\ ( <var:u> > <nat:1> ) /\ ( <var:A> > <nat:1> ) /\ ( <var:U> > <nat:1> ) /\ ( <var:S> > <nat:1> ) /\ ( <var:f> > <nat:1> ) /\ ( <var:Y> > <nat:1> ) /\ ( <var:y> > <nat:1> ) /\ ( <var:L> > <nat:1> ) /\ ( <var:q> = <var:E> * <var:S> * <var:u> * <var:y> * <var:Y> * <var:A> * <var:f> * <var:U> * <var:L> ) . Theorem <genP:1> : <def:nine-composite> <nat:4838400> . Proof . unfold <def:nine-composite> . exists <nat:4> . exists <nat:10> . exists <nat:8> . exists <nat:2> . exists <nat:12> . exists <nat:5> . exists <nat:7> . exists <nat:3> . exists <nat:6> . assert ( <genH> : <nat:6> > <nat:1> ) . { lia . } assert ( <genH> : <nat:5> > <nat:1> ) . { lia . } assert ( <genH> : <nat:3> > <nat:1> ) . { lia . } assert ( <genH> : <nat:4> > <nat:1> ) . { lia . } assert ( <genH> : <nat:2> > <nat:1> ) . { lia . } assert ( <genH> : <nat:10> > <nat:1> ) . { lia . } assert ( <genH> : <nat:7> > <nat:1> ) . { lia . } assert ( <genH> : <nat:8> > <nat:1> ) . { lia . } assert ( <genH> : <nat:12> > <nat:1> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 