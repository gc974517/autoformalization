\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:158> * <var:g> + <var:z> * <nat:390> + <var:R> * <nat:312> + <nat:143> + <nat:360> * <var:J> + <var:E> * <nat:148> + <var:Y> * <nat:180> $ is guaranteed to be odd . \end{theorem} \begin{proof} Our theorem is proven from the fact $ <nat:148> <var:E> + <var:z> <nat:390> + <nat:312> <var:R> + <nat:360> <var:J> + <var:g> <nat:158> + <nat:180> <var:Y> $ is even . Notice that the pairs $ <var:z> * <nat:390> $ , $ <nat:312> * <var:R> $ , and $ <nat:148> * <var:E> $ are known as even whole numbers . Recall that the terms $ <var:Y> * <nat:180> $ and $ <nat:360> * <var:J> $ are known to be even numbers in $ \mathbb{N} $ from the fact taking the product between an even element of $ \mathbb{N} $ and any number in $ \mathbb{N} $ will be even . The pair $ <var:g> * <nat:158> $ is obviously even . Since the addition between an even number and even whole numbers is guaranteed to be even , additionally by reason that the multiplication of an even number in $ \mathbb{N} $ and some integer must be an even integer . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:g> <var:z> <var:R> <var:J> <var:E> <var:Y> : nat , Nat . odd ( <nat:158> * <var:g> + <nat:390> * <var:z> + <nat:312> * <var:R> + <nat:360> * <var:J> + <nat:148> * <var:E> + <nat:180> * <var:Y> + <nat:143> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:390> * <var:z> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:312> * <var:R> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:148> * <var:E> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:180> * <var:Y> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:360> * <var:J> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:158> * <var:g> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:158> * <var:g> + <nat:390> * <var:z> + <nat:312> * <var:R> + <nat:360> * <var:J> + <nat:148> * <var:E> + <nat:180> * <var:Y> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . auto . Qed . 