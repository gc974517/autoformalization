\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:288> \cdot <var:J> + <nat:294> \cdot <var:k> + <nat:420> \cdot <var:e> + <nat:39> + <nat:12> \cdot <var:W> $ must be odd with $ <var:k> $ , $ <var:W> $ , $ <var:J> $ , and $ <var:e> \in \mathbb{N} $ . \end{theorem} \begin{proof} It can be demonstrated that this claim must be true . The claim must be true as a consequence that $ <var:W> \times <nat:12> + <nat:294> \times <var:k> + <nat:420> \times <var:e> + <var:J> \times <nat:288> $ is trivially even . We know the pairs $ <nat:294> \times <var:k> $ and also $ <nat:12> \times <var:W> $ are known as even as a consequence that the multiplication of an even positive integer with any whole number must be even . Likewise , see the product $ <nat:420> \times <var:e> $ is guaranteed to be an even number in $ \mathbb{Z}^+ $ from the fact the product between an even natural number with a positive integer is guaranteed to be even . The term $ <var:J> \times <nat:288> $ is even from the knowledge multiplying of an even whole number with some natural number is guaranteed to be an even whole number . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:k> <var:W> <var:J> <var:e> : nat , Nat . odd ( <nat:288> * <var:J> + <nat:294> * <var:k> + <nat:420> * <var:e> + <nat:12> * <var:W> + <nat:39> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:294> * <var:k> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:12> * <var:W> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:420> * <var:e> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:288> * <var:J> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:288> * <var:J> + <nat:294> * <var:k> + <nat:420> * <var:e> + <nat:12> * <var:W> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . auto . Qed . 