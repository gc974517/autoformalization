\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:390> * <var:H> + <nat:458> * <var:V> + <nat:192> * <var:d> + <nat:212> + <nat:102> * <var:c> + <nat:172> * <var:Z> + <nat:266> * <var:h> $ must be even . \end{theorem} \begin{proof} The terms $ <nat:390> <var:H> $ , $ <var:V> <nat:458> $ , $ <var:d> <nat:192> $ , $ <var:c> <nat:102> $ , $ <var:Z> <nat:172> $ , and also $ <nat:266> <var:h> $ are guaranteed to be even integers . This claim must be true from the fact multiplying between an even whole number with an arbitrary number in $ \mathbb{Z}^+ $ is guaranteed to be instrinsically an even whole number and also the integers $ <nat:390> $ , $ <nat:458> $ , $ <nat:192> $ , $ <nat:102> $ , $ <nat:172> $ , in addition to $ <nat:266> $ are clearly even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:H> <var:V> <var:d> <var:c> <var:Z> <var:h> : nat , Nat . even ( <nat:390> * <var:H> + <nat:458> * <var:V> + <nat:192> * <var:d> + <nat:102> * <var:c> + <nat:172> * <var:Z> + <nat:266> * <var:h> + <nat:212> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:390> = true ) . { auto . } assert ( <genH> : Nat . even <nat:458> = true ) . { auto . } assert ( <genH> : Nat . even <nat:192> = true ) . { auto . } assert ( <genH> : Nat . even <nat:102> = true ) . { auto . } assert ( <genH> : Nat . even <nat:172> = true ) . { auto . } assert ( <genH> : Nat . even <nat:266> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:390> * <var:H> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:458> * <var:V> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:192> * <var:d> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:102> * <var:c> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:172> * <var:Z> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:266> * <var:h> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 