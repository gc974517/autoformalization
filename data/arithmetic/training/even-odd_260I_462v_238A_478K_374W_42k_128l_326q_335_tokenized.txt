\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:128> \times <var:l> + <nat:335> + <var:W> \times <nat:374> + <var:q> \times <nat:326> + <nat:478> \times <var:K> + <nat:260> \times <var:I> + <nat:42> \times <var:k> + <var:v> \times <nat:462> + <nat:238> \times <var:A> $ will be odd . \end{theorem} \begin{proof} It can be proven that this claim is true . Take note $ <nat:335> $ is odd . Take note that the product $ <nat:260> <var:I> $ is guaranteed to be an even number in $ \mathbb{Z}^+ $ . This claim is proven from the fact the whole number $ <nat:260> $ is guaranteed to be itself an even natural number . The coefficient $ <nat:462> $ is guaranteed to be an even whole number . Thus , $ <var:v> <nat:462> $ is guaranteed to be even as well . The product $ <var:A> <nat:238> $ is obviously an even positive integer since the positive integer $ <nat:238> $ is trivially even . What's more , observe the natural number $ <nat:478> $ is known to be an even number in $ \mathbb{N} $ . Thus , $ <var:K> <nat:478> $ is guaranteed to be even additionally . Remember that the term $ <var:W> <nat:374> $ is known to be an even natural since the product of an even number in $ \mathbb{N} $ with a natural is guaranteed to be even plus the positive integer $ <nat:374> $ is clearly an even number in $ \mathbb{Z}^+ $ . Building on , the natural number $ <nat:42> $ is obviously even . Hence , the pair $ <var:k> <nat:42> $ must be even also . The natural number $ <nat:128> $ is even . Then , the pair $ <var:l> <nat:128> $ must be even too . Further , notice the pair $ <nat:326> <var:q> $ is even since taking the product between an even whole number and an arbitrary number in $ \mathbb{N} $ must be even , which is proven from the knowledge the leading term $ <nat:326> $ is even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:l> <var:W> <var:q> <var:K> <var:I> <var:k> <var:v> <var:A> : nat , Nat . odd ( <nat:128> * <var:l> + <nat:374> * <var:W> + <nat:326> * <var:q> + <nat:478> * <var:K> + <nat:260> * <var:I> + <nat:42> * <var:k> + <nat:462> * <var:v> + <nat:238> * <var:A> + <nat:335> ) = true . Proof . intros . assert ( <genH> : Nat . odd <nat:335> = true ) . { auto . } assert ( <genH> : Nat . even <nat:260> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:260> * <var:I> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:462> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:462> * <var:v> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:238> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:238> * <var:A> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:478> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:478> * <var:K> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:374> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:374> * <var:W> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:42> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:42> * <var:k> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:128> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:128> * <var:l> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:326> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:326> * <var:q> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 