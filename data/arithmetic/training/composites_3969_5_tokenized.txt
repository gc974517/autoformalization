\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \newtheorem{definition}{Definition} \begin{document} \begin{definition} There are $ <var:a> $ , $ <var:g> $ , $ <var:J> $ , $ <var:y> $ , $ <var:S> \in \mathbb{N} $ satisfying the condition that $ <var:g> $ , $ <var:y> $ , $ <var:a> $ , $ <var:J> $ , $ <var:S> \geq <nat:2> $ . Take as given that some integer $ <var:Y> $ is called a <def:five-composite> integer assuming $ <var:y> * <var:S> * <var:J> * <var:a> * <var:g> = <var:Y> $ . \end{definition} \begin{theorem} The positive integer <nat:27720> is a <def:five-composite> integer . \end{theorem} \begin{proof} Remember <nat:27720> is a <def:five-composite> number if it is the product of integers $ <var:y> $ , $ <var:S> $ , $ <var:g> $ , $ <var:a> $ , and $ <var:J> $ more than or equal to <nat:2> . Let $ <var:g> = <nat:11> $ , $ <var:y> = <nat:7> $ , $ <var:J> = <nat:3> $ , $ <var:S> = <nat:10> $ and $ <var:a> = <nat:12> $ . We justify <nat:27720> is a <def:five-composite> positive integer seeing that $ <nat:7> $ , $ <nat:12> $ , $ <nat:10> $ , $ <nat:11> $ , and $ <nat:3> \geq <nat:2> $ plus $ <nat:27720> = <var:g> * <var:a> * <var:J> * <var:y> * <var:S> $ . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:five-composite> ( <var:Y> : nat ) := exists <var:a> <var:g> <var:J> <var:y> <var:S> : nat , ( <var:g> >= <nat:2> ) /\ ( <var:y> >= <nat:2> ) /\ ( <var:a> >= <nat:2> ) /\ ( <var:J> >= <nat:2> ) /\ ( <var:S> >= <nat:2> ) /\ ( <var:y> * <var:S> * <var:J> * <var:a> * <var:g> = <var:Y> ) . Theorem <genP:1> : <def:five-composite> <nat:27720> . Proof . unfold <def:five-composite> . exists <nat:12> . exists <nat:11> . exists <nat:3> . exists <nat:7> . exists <nat:10> . assert ( <genH> : <nat:7> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:12> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:10> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:11> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:3> >= <nat:2> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 