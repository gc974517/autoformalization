\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:Q> * <nat:106> + <var:n> * <nat:174> + <nat:108> * <var:Y> + <nat:244> * <var:S> + <nat:94> * <var:g> + <nat:29> + <nat:82> * <var:z> + <nat:280> * <var:E> + <nat:44> * <var:M> $ is guaranteed to be odd . \end{theorem} \begin{proof} Recall that the adding between an even whole number and an odd natural number must be odd . We utilize the knowledge that the sum $ <nat:29> + <var:Y> * <nat:108> + <nat:174> * <var:n> + <nat:106> * <var:Q> + <nat:44> * <var:M> + <var:z> * <nat:82> + <var:g> * <nat:94> + <var:S> * <nat:244> + <nat:280> * <var:E> $ is guaranteed to be odd from the fact the sum $ <var:M> \cdot <nat:44> + <nat:106> \cdot <var:Q> + <nat:82> \cdot <var:z> + <nat:174> \cdot <var:n> + <nat:244> \cdot <var:S> + <nat:280> \cdot <var:E> + <nat:108> \cdot <var:Y> + <var:g> \cdot <nat:94> $ is obviously even . Further , see the leading terms $ <nat:44> $ , $ <nat:106> $ , $ <nat:82> $ , $ <nat:174> $ , $ <nat:244> $ , $ <nat:280> $ , $ <nat:108> $ , additionally $ <nat:94> $ must be even . Thus , the products $ <var:M> \cdot <nat:44> $ , $ <nat:106> \cdot <var:Q> $ , $ <nat:82> \cdot <var:z> $ , $ <var:n> \cdot <nat:174> $ , $ <var:S> \cdot <nat:244> $ , $ <nat:280> \cdot <var:E> $ , $ <nat:108> \cdot <var:Y> $ , plus $ <var:g> \cdot <nat:94> $ will be even at the same time . From the knowledge multiplying of even natural numbers and an arbitrary number in $ \mathbb{Z}^+ $ will be even the sum $ <nat:44> * <var:M> + <nat:174> * <var:n> + <var:Q> * <nat:106> + <nat:244> * <var:S> + <nat:82> * <var:z> + <nat:280> * <var:E> + <var:g> * <nat:94> + <nat:108> * <var:Y> $ is even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:Q> <var:n> <var:Y> <var:S> <var:g> <var:z> <var:E> <var:M> : nat , Nat . odd ( <nat:106> * <var:Q> + <nat:174> * <var:n> + <nat:108> * <var:Y> + <nat:244> * <var:S> + <nat:94> * <var:g> + <nat:82> * <var:z> + <nat:280> * <var:E> + <nat:44> * <var:M> + <nat:29> ) = true . Proof . intros . rewrite Nat . odd_add . assert ( <genH> : Nat . even <nat:44> = true ) . { auto . } assert ( <genH> : Nat . even <nat:106> = true ) . { auto . } assert ( <genH> : Nat . even <nat:82> = true ) . { auto . } assert ( <genH> : Nat . even <nat:174> = true ) . { auto . } assert ( <genH> : Nat . even <nat:244> = true ) . { auto . } assert ( <genH> : Nat . even <nat:280> = true ) . { auto . } assert ( <genH> : Nat . even <nat:108> = true ) . { auto . } assert ( <genH> : Nat . even <nat:94> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:44> * <var:M> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:106> * <var:Q> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:82> * <var:z> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:174> * <var:n> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:244> * <var:S> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:280> * <var:E> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:108> * <var:Y> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:94> * <var:g> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:106> * <var:Q> + <nat:174> * <var:n> + <nat:108> * <var:Y> + <nat:244> * <var:S> + <nat:94> * <var:g> + <nat:82> * <var:z> + <nat:280> * <var:E> + <nat:44> * <var:M> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite <- Nat . negb_even . rewrite <genH> . auto . Qed . 