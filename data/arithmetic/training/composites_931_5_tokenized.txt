\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Take $ <var:R> $ , $ <var:C> $ , $ <var:g> $ , $ <var:c> $ , $ <var:Q> \in \mathbb{Z}^+ $ where $ <var:c> $ , $ <var:g> $ , $ <var:C> $ , $ <var:R> $ , $ <var:Q> \geq <nat:2> $ . Assume that $ <var:v> \in \mathbb{N} $ will be considered as a <def:five-composite> number assuming $ <var:C> \cdot <var:c> \cdot <var:g> \cdot <var:R> \cdot <var:Q> = <var:v> $ . For this reason the number <nat:13440> is a <def:five-composite> integer . \end{theorem} \begin{proof} Recall that <nat:13440> is a <def:five-composite> integer whenever it is the product between integers $ <var:C> $ , $ <var:c> $ , $ <var:Q> $ , $ <var:g> $ and $ <var:R> $ greater than or equivalent to <nat:2> . Note that $ <nat:13440> = <var:g> \times <var:c> \times <var:R> \times <var:C> \times <var:Q> $ shows $ <var:c> = <nat:7> $ , $ <var:R> = <nat:8> $ , $ <var:Q> = <nat:10> $ , $ <var:g> = <nat:4> $ , and $ <var:C> = <nat:6> $ . Similarly notice that $ <nat:8> $ , $ <nat:10> $ , $ <nat:6> $ , $ <nat:4> $ , $ <nat:7> $ are more than or equal to <nat:2> . As a result , <nat:13440> is a <def:five-composite> integer is true has been proven . Hence , <nat:13440> is the product between $ <var:g> $ , $ <var:Q> $ , $ <var:C> $ , $ <var:c> $ , and $ <var:R> \in \mathbb{Z}^+ $ is true has been proven . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:five-composite> ( <var:v> : nat ) := exists <var:R> <var:C> <var:g> <var:c> <var:Q> : nat , ( <var:c> >= <nat:2> ) /\ ( <var:g> >= <nat:2> ) /\ ( <var:C> >= <nat:2> ) /\ ( <var:R> >= <nat:2> ) /\ ( <var:Q> >= <nat:2> ) /\ ( <var:C> * <var:c> * <var:g> * <var:R> * <var:Q> = <var:v> ) . Theorem <genP:1> : <def:five-composite> <nat:13440> . Proof . unfold <def:five-composite> . exists <nat:8> . exists <nat:6> . exists <nat:4> . exists <nat:7> . exists <nat:10> . assert ( <genH> : <nat:8> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:10> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:6> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:4> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:7> >= <nat:2> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 