\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Taking every unknowns $ <var:B> $ , $ <var:x> $ , $ <var:O> $ , $ <var:r> $ , $ <var:Y> $ , $ <var:c> $ , $ <var:y> $ , and $ <var:F> $ $ <nat:124> <var:x> + <nat:244> <var:B> + <var:Y> <nat:60> + <nat:216> <var:F> + <nat:383> + <var:y> <nat:42> + <var:c> <nat:412> + <nat:204> <var:O> + <var:r> <nat:400> $ must be odd . \end{theorem} \begin{proof} The terms $ <var:y> \times <nat:42> $ , $ <nat:204> \times <var:O> $ , plus $ <var:r> \times <nat:400> $ must be even whole numbers . This fact must be true from the fact taking the product of an even natural number with an arbitrary whole number must be by itself an even integer . The terms $ <nat:244> \times <var:B> $ in addition to $ <nat:216> \times <var:F> $ are known to be even elements of $ \mathbb{N} $ . Notice that the pair $ <nat:412> \times <var:c> $ is even . On top of this , the term $ <var:x> \times <nat:124> $ is known as even . This fact must be true since taking the product between an even integer and a integer is by its very nature an even element of $ \mathbb{N} $ . Further , see that $ <nat:60> \times <var:Y> $ is known to be an even number from the fact the multiplication of an even element of $ \mathbb{N} $ with an arbitrary integer must be even . Observe the addition between an even whole number with an odd natural is guaranteed to be an odd integer . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:B> <var:x> <var:O> <var:r> <var:Y> <var:c> <var:y> <var:F> : nat , Nat . odd ( <nat:124> * <var:x> + <nat:244> * <var:B> + <nat:60> * <var:Y> + <nat:216> * <var:F> + <nat:42> * <var:y> + <nat:412> * <var:c> + <nat:204> * <var:O> + <nat:400> * <var:r> + <nat:383> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:42> * <var:y> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:204> * <var:O> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:400> * <var:r> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:244> * <var:B> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:216> * <var:F> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:412> * <var:c> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:124> * <var:x> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:60> * <var:Y> ) = true ) . { rewrite Nat . even_mul . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 