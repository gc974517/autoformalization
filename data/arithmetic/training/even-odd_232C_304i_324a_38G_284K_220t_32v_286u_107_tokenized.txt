\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Assuming some $ <var:a> $ , $ <var:K> $ , $ <var:t> $ , $ <var:u> $ , $ <var:C> $ , $ <var:i> $ , $ <var:v> $ , and $ <var:G> $ $ <nat:232> \times <var:C> + <nat:304> \times <var:i> + <nat:324> \times <var:a> + <nat:38> \times <var:G> + <var:K> \times <nat:284> + <var:t> \times <nat:220> + <var:v> \times <nat:32> + <var:u> \times <nat:286> + <nat:107> $ is odd . \end{theorem} \begin{proof} See that the products $ <nat:38> \times <var:G> $ , $ <nat:220> \times <var:t> $ , $ <nat:284> \times <var:K> $ , $ <nat:286> \times <var:u> $ , $ <nat:232> \times <var:C> $ , $ <var:a> \times <nat:324> $ , and also $ <var:v> \times <nat:32> $ are known to be even from the knowledge multiplying of an even element of $ \mathbb{N} $ with some number in $ \mathbb{Z}^+ $ is an even number in $ \mathbb{Z}^+ $ . In addition , observe that the product $ <nat:304> \times <var:i> $ is trivially an even number in $ \mathbb{Z}^+ $ since taking the product of an even number with any element of $ \mathbb{Z}^+ $ must be an even natural . We check the theorem is true . Observe that $ <nat:107> $ is trivially odd . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:a> <var:K> <var:t> <var:u> <var:C> <var:i> <var:v> <var:G> : nat , Nat . odd ( <nat:232> * <var:C> + <nat:304> * <var:i> + <nat:324> * <var:a> + <nat:38> * <var:G> + <nat:284> * <var:K> + <nat:220> * <var:t> + <nat:32> * <var:v> + <nat:286> * <var:u> + <nat:107> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:38> * <var:G> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:220> * <var:t> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:284> * <var:K> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:286> * <var:u> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:232> * <var:C> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:324> * <var:a> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:32> * <var:v> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:304> * <var:i> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . odd <nat:107> = true ) . { auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 