\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:q> <nat:56> + <var:m> <nat:310> + <var:R> <nat:402> + <nat:46> <var:O> + <var:r> <nat:122> + <nat:161> + <nat:242> <var:h> + <nat:486> <var:e> + <nat:438> <var:Y> $ is guaranteed to be odd . \end{theorem} \begin{proof} Take note $ <nat:161> $ is trivially an odd integer . It can be proven that our claim holds . Remember $ <var:h> <nat:242> + <var:R> <nat:402> + <nat:310> <var:m> + <nat:56> <var:q> + <nat:46> <var:O> + <nat:122> <var:r> + <var:Y> <nat:438> + <var:e> <nat:486> $ is obviously even , by reason that the adding of even numbers concurrently with an even element of $ \mathbb{N} $ must be an even number in $ \mathbb{Z}^+ $ . Take note also taking the product between even elements of $ \mathbb{Z}^+ $ is an even number in $ \mathbb{Z}^+ $ . Observe that the whole numbers $ <nat:310> $ as well as $ <nat:402> $ are trivially even In addition , the numbers $ <nat:56> $ , $ <nat:122> $ , $ <nat:46> $ , $ <nat:242> $ , and moreover $ <nat:486> $ are guaranteed to be even The number $ <nat:438> $ is trivially an even element of $ \mathbb{N} $ \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:q> <var:m> <var:R> <var:O> <var:r> <var:h> <var:e> <var:Y> : nat , Nat . odd ( <nat:56> * <var:q> + <nat:310> * <var:m> + <nat:402> * <var:R> + <nat:46> * <var:O> + <nat:122> * <var:r> + <nat:242> * <var:h> + <nat:486> * <var:e> + <nat:438> * <var:Y> + <nat:161> ) = true . Proof . intros . assert ( <genH> : Nat . odd <nat:161> = true ) . { auto . } assert ( <genH> : Nat . even <nat:310> = true ) . { auto . } assert ( <genH> : Nat . even <nat:402> = true ) . { auto . } assert ( <genH> : Nat . even <nat:56> = true ) . { auto . } assert ( <genH> : Nat . even <nat:122> = true ) . { auto . } assert ( <genH> : Nat . even <nat:46> = true ) . { auto . } assert ( <genH> : Nat . even <nat:242> = true ) . { auto . } assert ( <genH> : Nat . even <nat:486> = true ) . { auto . } assert ( <genH> : Nat . even <nat:438> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:56> * <var:q> + <nat:310> * <var:m> + <nat:402> * <var:R> + <nat:46> * <var:O> + <nat:122> * <var:r> + <nat:242> * <var:h> + <nat:486> * <var:e> + <nat:438> * <var:Y> ) = true ) . { repeat rewrite Nat . even_add . repeat rewrite Nat . even_mul . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . rewrite <genH> . auto . Qed . 