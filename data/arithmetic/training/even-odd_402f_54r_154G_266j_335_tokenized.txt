\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:54> \times <var:r> + <nat:335> + <nat:266> \times <var:j> + <var:f> \times <nat:402> + <var:G> \times <nat:154> $ must be odd . \end{theorem} \begin{proof} We demonstrate the result is true . Notice that $ <nat:335> $ is known as odd . The coefficient $ <nat:402> $ is obviously an even number . Therefore , the pair $ <var:f> \times <nat:402> $ is even as well . Additionally , the pair $ <nat:54> \times <var:r> $ is known to be an even integer since the integer $ <nat:54> $ is known to be even . The whole number $ <nat:154> $ is even . So , the term $ <nat:154> \times <var:G> $ is even also . The pair $ <nat:266> \times <var:j> $ is trivially even as a consequence that multiplying between an even integer with some natural will be even . This must be true from the knowledge the coefficient $ <nat:266> $ is known as even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:r> <var:j> <var:f> <var:G> : nat , Nat . odd ( <nat:54> * <var:r> + <nat:266> * <var:j> + <nat:402> * <var:f> + <nat:154> * <var:G> + <nat:335> ) = true . Proof . intros . assert ( <genH> : Nat . odd <nat:335> = true ) . { auto . } assert ( <genH> : Nat . even <nat:402> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:402> * <var:f> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:54> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:54> * <var:r> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:154> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:154> * <var:G> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:266> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:266> * <var:j> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 