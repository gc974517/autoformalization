\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} We assume that with the condition that there exist natural numbers $ <var:n> $ , $ <var:j> $ , $ <var:c> $ , $ <var:I> $ , $ <var:Q> $ , $ <var:F> $ , $ <var:P> $ larger than or equivalent to <nat:2> . Assume that some natural number $ <var:r> $ will be a <def:seven-composite> whole number if $ <var:r> = <var:j> \cdot <var:I> \cdot <var:F> \cdot <var:c> \cdot <var:n> \cdot <var:P> \cdot <var:Q> $ . Then the natural number <nat:475200> is a <def:seven-composite> whole number . \end{theorem} \begin{proof} Assume $ <var:n> = <nat:11> $ , $ <var:c> = <nat:5> $ , $ <var:I> = <nat:9> $ , $ <var:F> = <nat:2> $ , $ <var:Q> = <nat:10> $ , $ <var:P> = <nat:4> $ and $ <var:j> = <nat:12> $ . We demonstrate our formula holds in consideration of $ <nat:2> \cdot <nat:4> \cdot <nat:10> \cdot <nat:11> \cdot <nat:5> \cdot <nat:12> \cdot <nat:9> = <var:F> \cdot <var:P> \cdot <var:Q> \cdot <var:n> \cdot <var:c> \cdot <var:j> \cdot <var:I> = <nat:475200> $ as well as $ <var:n> = <nat:11> $ , $ <var:P> = <nat:4> $ , $ <var:F> = <nat:2> $ , $ <var:c> = <nat:5> $ , $ <var:I> = <nat:9> $ , $ <var:Q> = <nat:10> $ and $ <var:j> = <nat:12> $ are more than or equivalent to <nat:2> . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:seven-composite> ( <var:r> : nat ) := exists <var:n> <var:j> <var:c> <var:I> <var:Q> <var:F> <var:P> : nat , ( <var:n> >= <nat:2> ) /\ ( <var:j> >= <nat:2> ) /\ ( <var:c> >= <nat:2> ) /\ ( <var:I> >= <nat:2> ) /\ ( <var:Q> >= <nat:2> ) /\ ( <var:F> >= <nat:2> ) /\ ( <var:P> >= <nat:2> ) /\ ( <var:r> = <var:j> * <var:I> * <var:F> * <var:c> * <var:n> * <var:P> * <var:Q> ) . Theorem <genP:1> : <def:seven-composite> <nat:475200> . Proof . unfold <def:seven-composite> . exists <nat:11> . exists <nat:12> . exists <nat:5> . exists <nat:9> . exists <nat:10> . exists <nat:2> . exists <nat:4> . assert ( <genH> : <nat:11> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:4> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:2> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:5> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:9> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:10> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:12> >= <nat:2> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 