\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} We say that $ <var:Y> $ is a <def:seven-composite> positive integer granted that there are some whole numbers $ <var:h> $ , $ <var:r> $ , $ <var:D> $ , $ <var:R> $ , $ <var:w> $ , $ <var:B> $ , $ <var:W> $ satisfying the condition that $ <var:B> $ , $ <var:h> $ , $ <var:w> $ , $ <var:D> $ , $ <var:r> $ , $ <var:R> $ and $ <var:W> \geq <nat:2> $ and taking some number $ <var:Y> $ , $ <var:B> \cdot <var:w> \cdot <var:r> \cdot <var:D> \cdot <var:R> \cdot <var:W> \cdot <var:h> = <var:Y> $ . Therefore $ <nat:1451520> = <var:Y> $ is a <def:seven-composite> natural number . \end{theorem} \begin{proof} Take $ <var:D> = <nat:6> $ , $ <var:r> = <nat:9> $ , $ <var:R> = <nat:7> $ , $ <var:W> = <nat:8> $ , $ <var:B> = <nat:12> $ , $ <var:w> = <nat:10> $ , $ <var:h> = <nat:4> $ . We verify $ <var:D> \times <var:R> \times <var:h> \times <var:W> \times <var:r> \times <var:w> \times <var:B> = <nat:1451520> $ . Note that $ <var:B> = <nat:12> $ , $ <var:R> = <nat:7> $ , $ <var:r> = <nat:9> $ , $ <var:h> = <nat:4> $ , $ <var:w> = <nat:10> $ , $ <var:W> = <nat:8> $ , and $ <var:D> = <nat:6> $ are larger than or equal to <nat:2> . Additionally note moreover $ <nat:1451520> = <var:w> \cdot <var:h> \cdot <var:R> \cdot <var:D> \cdot <var:B> \cdot <var:r> \cdot <var:W> $ . This implies <nat:1451520> is a <def:seven-composite> natural number . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:seven-composite> ( <var:Y> : nat ) := exists <var:h> <var:r> <var:D> <var:R> <var:w> <var:B> <var:W> : nat , ( <var:B> >= <nat:2> ) /\ ( <var:h> >= <nat:2> ) /\ ( <var:w> >= <nat:2> ) /\ ( <var:D> >= <nat:2> ) /\ ( <var:r> >= <nat:2> ) /\ ( <var:R> >= <nat:2> ) /\ ( <var:W> >= <nat:2> ) /\ ( <var:B> * <var:w> * <var:r> * <var:D> * <var:R> * <var:W> * <var:h> = <var:Y> ) . Theorem <genP:1> : <def:seven-composite> <nat:1451520> . Proof . unfold <def:seven-composite> . exists <nat:4> . exists <nat:9> . exists <nat:6> . exists <nat:7> . exists <nat:10> . exists <nat:12> . exists <nat:8> . assert ( <genH> : <nat:12> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:7> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:9> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:4> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:10> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:8> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:6> >= <nat:2> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 