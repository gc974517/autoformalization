\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:452> * <var:u> + <nat:18> * <var:z> + <var:Y> * <nat:220> + <var:K> * <nat:62> + <var:s> * <nat:38> + <nat:5> + <nat:184> * <var:O> + <nat:138> * <var:f> + <nat:380> * <var:h> $ will be odd taking some $ <var:K> $ , $ <var:O> $ , $ <var:f> $ , $ <var:h> $ , $ <var:s> $ , $ <var:u> $ , $ <var:z> $ , and $ <var:Y> $ . \end{theorem} \begin{proof} We justify our main result is true . The positive integers $ <nat:62> $ , $ <nat:380> $ , $ <nat:452> $ , $ <nat:38> $ , $ <nat:138> $ , $ <nat:184> $ , in addition to $ <nat:220> $ are guaranteed to be even . For this reason , the products $ <nat:62> <var:K> $ , $ <nat:380> <var:h> $ , $ <nat:452> <var:u> $ , $ <var:s> <nat:38> $ , $ <nat:138> <var:f> $ , $ <nat:184> <var:O> $ , and moreover $ <nat:220> <var:Y> $ must be even too . $ <var:z> <nat:18> $ is trivially even by reason that taking the product of an even element of $ \mathbb{N} $ and any number in $ \mathbb{N} $ is an even element of $ \mathbb{Z}^+ $ in addition to the whole number $ <nat:18> $ is even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:K> <var:O> <var:f> <var:h> <var:s> <var:u> <var:z> <var:Y> : nat , Nat . odd ( <nat:452> * <var:u> + <nat:18> * <var:z> + <nat:220> * <var:Y> + <nat:62> * <var:K> + <nat:38> * <var:s> + <nat:184> * <var:O> + <nat:138> * <var:f> + <nat:380> * <var:h> + <nat:5> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:62> = true ) . { auto . } assert ( <genH> : Nat . even <nat:380> = true ) . { auto . } assert ( <genH> : Nat . even <nat:452> = true ) . { auto . } assert ( <genH> : Nat . even <nat:38> = true ) . { auto . } assert ( <genH> : Nat . even <nat:138> = true ) . { auto . } assert ( <genH> : Nat . even <nat:184> = true ) . { auto . } assert ( <genH> : Nat . even <nat:220> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:62> * <var:K> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:380> * <var:h> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:452> * <var:u> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:38> * <var:s> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:138> * <var:f> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:184> * <var:O> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:220> * <var:Y> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:18> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:18> * <var:z> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 