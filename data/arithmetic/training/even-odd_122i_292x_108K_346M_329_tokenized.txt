\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Assuming some unknowns $ <var:K> $ , $ <var:M> $ , $ <var:x> $ , and $ <var:i> $ the sum $ <var:i> <nat:122> + <nat:292> <var:x> + <var:K> <nat:108> + <nat:346> <var:M> + <nat:329> $ must be odd . \end{theorem} \begin{proof} The term $ <nat:122> \times <var:i> $ is even by reason that taking the product of an even integer with some positive integer is guaranteed to be even . The term $ <var:M> \times <nat:346> $ is trivially an even positive integer . This claim is proven since the product of an even positive integer and any natural will be even . What's more , take note that the product $ <var:K> \times <nat:108> $ is clearly even as a consequence that taking the product of an even natural and any integer is guaranteed to be even . Furthermore , remember the product $ <nat:292> \times <var:x> $ is obviously even because the multiplication between an even natural and a element of $ \mathbb{Z}^+ $ will be an even whole number . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:K> <var:M> <var:x> <var:i> : nat , Nat . odd ( <nat:122> * <var:i> + <nat:292> * <var:x> + <nat:108> * <var:K> + <nat:346> * <var:M> + <nat:329> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:122> * <var:i> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:346> * <var:M> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:108> * <var:K> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:292> * <var:x> ) = true ) . { rewrite Nat . even_mul . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 