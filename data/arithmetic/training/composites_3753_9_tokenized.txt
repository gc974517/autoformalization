\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \newtheorem{definition}{Definition} \begin{document} \begin{definition} Given we have $ <var:d> $ , $ <var:f> $ , $ <var:w> $ , $ <var:e> $ , $ <var:Y> $ , $ <var:n> $ , $ <var:c> $ , $ <var:o> $ and $ <var:q> \geq <nat:2> $ such that assuming $ <var:z> \in \mathbb{N} $ , $ <var:o> \cdot <var:Y> \cdot <var:d> \cdot <var:n> \cdot <var:f> \cdot <var:w> \cdot <var:q> \cdot <var:e> \cdot <var:c> = <var:z> $ , assume that $ <var:z> $ is a <def:nine-composite> integer for some $ <var:f> $ , $ <var:c> $ , $ <var:Y> $ , $ <var:q> $ , $ <var:e> $ , $ <var:n> $ , $ <var:o> $ , $ <var:d> $ , $ <var:w> \in \mathbb{N} $ . \end{definition} \begin{theorem} The whole number <nat:22809600> is a <def:nine-composite> integer . \end{theorem} \begin{proof} Assume $ <var:n> = <nat:10> $ , $ <var:d> = <nat:9> $ , $ <var:e> = <nat:4> $ , $ <var:f> = <nat:11> $ , $ <var:q> = <nat:5> $ , $ <var:w> = <nat:8> $ , $ <var:o> = <nat:6> $ , $ <var:c> = <nat:12> $ , and $ <var:Y> = <nat:2> $ . We justify <nat:22809600> is a <def:nine-composite> positive integer as $ <nat:11> $ , $ <nat:5> $ , $ <nat:9> $ , $ <nat:8> $ , $ <nat:4> $ , $ <nat:2> $ , $ <nat:6> $ , $ <nat:12> $ , and $ <nat:10> \geq <nat:2> $ plus seeing that $ <nat:22809600> = <var:o> \times <var:c> \times <var:e> \times <var:d> \times <var:q> \times <var:f> \times <var:w> \times <var:Y> \times <var:n> $ . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:nine-composite> ( <var:z> : nat ) := exists <var:f> <var:c> <var:Y> <var:q> <var:e> <var:n> <var:o> <var:d> <var:w> : nat , ( <var:d> >= <nat:2> ) /\ ( <var:f> >= <nat:2> ) /\ ( <var:w> >= <nat:2> ) /\ ( <var:e> >= <nat:2> ) /\ ( <var:Y> >= <nat:2> ) /\ ( <var:n> >= <nat:2> ) /\ ( <var:c> >= <nat:2> ) /\ ( <var:o> >= <nat:2> ) /\ ( <var:q> >= <nat:2> ) /\ ( <var:o> * <var:Y> * <var:d> * <var:n> * <var:f> * <var:w> * <var:q> * <var:e> * <var:c> = <var:z> ) . Theorem <genP:1> : <def:nine-composite> <nat:22809600> . Proof . unfold <def:nine-composite> . exists <nat:11> . exists <nat:12> . exists <nat:2> . exists <nat:5> . exists <nat:4> . exists <nat:10> . exists <nat:6> . exists <nat:9> . exists <nat:8> . assert ( <genH> : <nat:11> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:5> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:9> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:8> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:4> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:2> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:6> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:12> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:10> >= <nat:2> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 