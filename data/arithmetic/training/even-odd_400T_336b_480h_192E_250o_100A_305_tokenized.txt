\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:192> <var:E> + <nat:336> <var:b> + <var:A> <nat:100> + <nat:480> <var:h> + <nat:400> <var:T> + <nat:305> + <nat:250> <var:o> $ is guaranteed to be odd given all natural numbers $ <var:A> $ , $ <var:h> $ , $ <var:b> $ , $ <var:T> $ , $ <var:E> $ , and $ <var:o> $ . \end{theorem} \begin{proof} Notice that the number $ <nat:400> $ is clearly even . Then , the product $ <nat:400> \cdot <var:T> $ is even too . Furthermore , the natural number $ <nat:336> $ is guaranteed to be even . Therefore , the product $ <nat:336> \cdot <var:b> $ is guaranteed to be even additionally . Further , see that the term $ <var:h> \cdot <nat:480> $ is known as an even positive integer . This claim holds as a consequence that the number $ <nat:480> $ is trivially an even number in $ \mathbb{Z}^+ $ . In addition , the natural number $ <nat:192> $ is known as even . Then , $ <nat:192> \cdot <var:E> $ is even additionally . The term $ <nat:250> \cdot <var:o> $ is clearly even . This holds from the fact the whole number $ <nat:250> $ is clearly even . The whole number $ <nat:100> $ is trivially an even element of $ \mathbb{Z}^+ $ . Thus , the pair $ <var:A> \cdot <nat:100> $ must be even too . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:A> <var:h> <var:b> <var:T> <var:E> <var:o> : nat , Nat . odd ( <nat:192> * <var:E> + <nat:336> * <var:b> + <nat:100> * <var:A> + <nat:480> * <var:h> + <nat:400> * <var:T> + <nat:250> * <var:o> + <nat:305> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:400> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:400> * <var:T> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:336> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:336> * <var:b> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:480> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:480> * <var:h> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:192> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:192> * <var:E> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:250> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:250> * <var:o> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:100> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:100> * <var:A> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 