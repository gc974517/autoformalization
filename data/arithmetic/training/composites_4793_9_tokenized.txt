\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \newtheorem{definition}{Definition} \begin{document} \begin{definition} We denote that $ <var:e> $ is a <def:nine-composite> positive integer when there are some positive integers $ <var:i> $ , $ <var:y> $ , $ <var:I> $ , $ <var:K> $ , $ <var:g> $ , $ <var:L> $ , $ <var:v> $ , $ <var:q> $ , $ <var:n> $ satisfying the condition that $ <var:v> $ , $ <var:g> $ , $ <var:K> $ , $ <var:n> $ , $ <var:q> $ , $ <var:L> $ , $ <var:y> $ , $ <var:I> $ and $ <var:i> \geq <nat:2> $ and for $ <var:e> \in \mathbb{N} $ , $ <var:e> = <var:n> * <var:g> * <var:y> * <var:i> * <var:I> * <var:K> * <var:v> * <var:q> * <var:L> $ . \end{definition} \begin{theorem} The positive integer <nat:7983360> is a <def:nine-composite> integer . \end{theorem} \begin{proof} Recall a <def:nine-composite> is the product between positive integers $ <var:n> $ , $ <var:i> $ , $ <var:v> $ , $ <var:I> $ , $ <var:g> $ , $ <var:L> $ , $ <var:y> $ , $ <var:q> $ and $ <var:K> $ larger than or equivalent to <nat:2> . Note $ <nat:7983360> = <nat:3> * <nat:12> * <nat:8> * <nat:11> * <nat:2> * <nat:7> * <nat:5> * <nat:4> * <nat:9> $ . What's more notice that $ <nat:9> $ , $ <nat:11> $ , $ <nat:3> $ , $ <nat:7> $ , $ <nat:5> $ , $ <nat:12> $ , $ <nat:4> $ , $ <nat:2> $ , $ <nat:8> \geq <nat:2> $ . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:nine-composite> ( <var:e> : nat ) := exists <var:i> <var:y> <var:I> <var:K> <var:g> <var:L> <var:v> <var:q> <var:n> : nat , ( <var:v> >= <nat:2> ) /\ ( <var:g> >= <nat:2> ) /\ ( <var:K> >= <nat:2> ) /\ ( <var:n> >= <nat:2> ) /\ ( <var:q> >= <nat:2> ) /\ ( <var:L> >= <nat:2> ) /\ ( <var:y> >= <nat:2> ) /\ ( <var:I> >= <nat:2> ) /\ ( <var:i> >= <nat:2> ) /\ ( <var:e> = <var:n> * <var:g> * <var:y> * <var:i> * <var:I> * <var:K> * <var:v> * <var:q> * <var:L> ) . Theorem <genP:1> : <def:nine-composite> <nat:7983360> . Proof . unfold <def:nine-composite> . exists <nat:8> . exists <nat:5> . exists <nat:11> . exists <nat:3> . exists <nat:4> . exists <nat:7> . exists <nat:12> . exists <nat:9> . exists <nat:2> . assert ( <genH> : <nat:9> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:11> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:3> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:7> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:5> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:12> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:4> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:2> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:8> >= <nat:2> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 