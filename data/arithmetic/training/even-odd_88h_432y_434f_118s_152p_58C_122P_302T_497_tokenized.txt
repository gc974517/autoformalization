\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:302> * <var:T> + <var:y> * <nat:432> + <var:h> * <nat:88> + <var:p> * <nat:152> + <var:P> * <nat:122> + <nat:118> * <var:s> + <nat:434> * <var:f> + <nat:497> + <var:C> * <nat:58> $ is odd . \end{theorem} \begin{proof} We use that the sum $ <var:P> \cdot <nat:122> + <var:s> \cdot <nat:118> + <var:C> \cdot <nat:58> + <nat:152> \cdot <var:p> + <nat:302> \cdot <var:T> + <var:h> \cdot <nat:88> + <var:y> \cdot <nat:432> + <nat:434> \cdot <var:f> $ is trivially even , since the addition between even numbers collectively and an even element of $ \mathbb{N} $ is even . The integers $ <nat:302> $ , $ <nat:432> $ , $ <nat:434> $ , $ <nat:88> $ , $ <nat:152> $ , in addition to $ <nat:118> $ are guaranteed to be even . Consequently , the products $ <nat:302> * <var:T> $ , $ <nat:432> * <var:y> $ , $ <nat:434> * <var:f> $ , $ <var:h> * <nat:88> $ , $ <var:p> * <nat:152> $ , and $ <nat:118> * <var:s> $ is even in addition . The leading term $ <nat:58> $ is known to be even . Accordingly , the pair $ <var:C> * <nat:58> $ must be even at the same time . The whole number $ <nat:122> $ is guaranteed to be even . Then , the pair $ <var:P> * <nat:122> $ is even also . in addition to by reason that the multiplication between even positive integers with a integer is trivially an even number . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:T> <var:y> <var:h> <var:p> <var:P> <var:s> <var:f> <var:C> : nat , Nat . odd ( <nat:302> * <var:T> + <nat:432> * <var:y> + <nat:88> * <var:h> + <nat:152> * <var:p> + <nat:122> * <var:P> + <nat:118> * <var:s> + <nat:434> * <var:f> + <nat:58> * <var:C> + <nat:497> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:302> = true ) . { auto . } assert ( <genH> : Nat . even <nat:432> = true ) . { auto . } assert ( <genH> : Nat . even <nat:434> = true ) . { auto . } assert ( <genH> : Nat . even <nat:88> = true ) . { auto . } assert ( <genH> : Nat . even <nat:152> = true ) . { auto . } assert ( <genH> : Nat . even <nat:118> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:302> * <var:T> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:432> * <var:y> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:434> * <var:f> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:88> * <var:h> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:152> * <var:p> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:118> * <var:s> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:58> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:58> * <var:C> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:122> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:122> * <var:P> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:302> * <var:T> + <nat:432> * <var:y> + <nat:88> * <var:h> + <nat:152> * <var:p> + <nat:122> * <var:P> + <nat:118> * <var:s> + <nat:434> * <var:f> + <nat:58> * <var:C> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . auto . Qed . 