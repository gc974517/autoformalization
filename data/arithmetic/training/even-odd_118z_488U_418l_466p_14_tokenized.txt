\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:14> + <var:p> <nat:466> + <nat:488> <var:U> + <var:l> <nat:418> + <nat:118> <var:z> $ is guaranteed to be even given all $ <var:z> $ , $ <var:p> $ , $ <var:l> $ , and $ <var:U> \in \mathbb{Z}^+ $ . \end{theorem} \begin{proof} Additionally , the terms $ <var:p> <nat:466> $ , $ <var:U> <nat:488> $ , $ <nat:418> <var:l> $ , and $ <var:z> <nat:118> $ must be even from the knowledge taking the product of an even positive integer with an arbitrary natural will be even . This claim holds since the whole numbers $ <nat:466> $ , $ <nat:488> $ , $ <nat:418> $ , and also $ <nat:118> $ are known to be even . It can be verified that the formula $ <var:z> <nat:118> + <var:U> <nat:488> + <nat:14> + <var:l> <nat:418> + <var:p> <nat:466> $ is even . Remember that the totaling between an even whole number and an even integer is guaranteed to be even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:z> <var:p> <var:l> <var:U> : nat , Nat . even ( <nat:466> * <var:p> + <nat:488> * <var:U> + <nat:418> * <var:l> + <nat:118> * <var:z> + <nat:14> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:466> = true ) . { auto . } assert ( <genH> : Nat . even <nat:488> = true ) . { auto . } assert ( <genH> : Nat . even <nat:418> = true ) . { auto . } assert ( <genH> : Nat . even <nat:118> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:466> * <var:p> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:488> * <var:U> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:418> * <var:l> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:118> * <var:z> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 