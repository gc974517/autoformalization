\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Assuming that we have $ <var:s> = <var:c> \times <var:U> \times <var:I> \times <var:a> \times <var:O> \times <var:X> \times <var:h> $ given some positive integer $ <var:s> $ as well as so that $ <var:a> $ , $ <var:U> $ , $ <var:c> $ , $ <var:O> $ , $ <var:I> $ , $ <var:h> $ , and $ <var:X> \geq <nat:2> $ , take as given that $ <var:s> $ is a <def:seven-composite> number using some whole numbers $ <var:I> $ , $ <var:U> $ , $ <var:X> $ , $ <var:c> $ , $ <var:h> $ , $ <var:O> $ , $ <var:a> $ . Thus $ <nat:3326400> = <var:s> $ is a <def:seven-composite> integer . \end{theorem} \begin{proof} Recall that <nat:3326400> is <def:seven-composite> when it is the multiplication of integers $ <var:a> $ , $ <var:X> $ , $ <var:h> $ , $ <var:O> $ , $ <var:I> $ , $ <var:c> $ , and $ <var:U> $ satisfying the condition that $ <var:U> $ , $ <var:I> $ , $ <var:O> $ , $ <var:a> $ , $ <var:c> $ , $ <var:h> $ , and $ <var:X> \geq <nat:2> $ . Assume $ <var:h> = <nat:9> $ , $ <var:a> = <nat:12> $ , $ <var:I> = <nat:10> $ , $ <var:U> = <nat:8> $ , $ <var:X> = <nat:5> $ , $ <var:c> = <nat:11> $ , $ <var:O> = <nat:7> $ . Note $ <var:a> = <nat:12> $ , $ <var:h> = <nat:9> $ , $ <var:I> = <nat:10> $ , $ <var:U> = <nat:8> $ , $ <var:O> = <nat:7> $ , $ <var:c> = <nat:11> $ , and $ <var:X> = <nat:5> \geq <nat:2> $ . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:seven-composite> ( <var:s> : nat ) := exists <var:I> <var:U> <var:X> <var:c> <var:h> <var:O> <var:a> : nat , ( <var:s> = <var:c> * <var:U> * <var:I> * <var:a> * <var:O> * <var:X> * <var:h> ) /\ ( <var:a> >= <nat:2> ) /\ ( <var:U> >= <nat:2> ) /\ ( <var:c> >= <nat:2> ) /\ ( <var:O> >= <nat:2> ) /\ ( <var:I> >= <nat:2> ) /\ ( <var:h> >= <nat:2> ) /\ ( <var:X> >= <nat:2> ) . Theorem <genP:1> : <def:seven-composite> <nat:3326400> . Proof . unfold <def:seven-composite> . exists <nat:10> . exists <nat:8> . exists <nat:5> . exists <nat:11> . exists <nat:9> . exists <nat:7> . exists <nat:12> . assert ( <genH> : <nat:12> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:9> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:10> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:8> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:7> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:11> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:5> >= <nat:2> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 