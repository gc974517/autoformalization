\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:382> * <var:l> + <var:m> * <nat:276> + <var:p> * <nat:160> + <nat:336> * <var:q> + <var:C> * <nat:120> + <var:J> * <nat:192> + <nat:90> $ will be even . \end{theorem} \begin{proof} The terms $ <nat:382> <var:l> $ , $ <nat:160> <var:p> $ , as well as $ <nat:276> <var:m> $ are clearly even . This is true since the natural numbers $ <nat:382> $ , $ <nat:160> $ , and also $ <nat:276> $ are guaranteed to be even elements of $ \mathbb{N} $ . The terms $ <nat:192> <var:J> $ and also $ <var:q> <nat:336> $ are trivially even natural numbers as a consequence that the coefficients $ <nat:192> $ additionally $ <nat:336> $ are obviously even numbers . The product $ <nat:120> <var:C> $ is known to be even . This claim must be true from the knowledge the whole number $ <nat:120> $ is obviously an even natural . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:l> <var:m> <var:p> <var:q> <var:C> <var:J> : nat , Nat . even ( <nat:382> * <var:l> + <nat:276> * <var:m> + <nat:160> * <var:p> + <nat:336> * <var:q> + <nat:120> * <var:C> + <nat:192> * <var:J> + <nat:90> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:382> = true ) . { auto . } assert ( <genH> : Nat . even <nat:160> = true ) . { auto . } assert ( <genH> : Nat . even <nat:276> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:382> * <var:l> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:160> * <var:p> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:276> * <var:m> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:192> = true ) . { auto . } assert ( <genH> : Nat . even <nat:336> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:192> * <var:J> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:336> * <var:q> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:120> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:120> * <var:C> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 