\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Taking some positive numbers $ <var:J> $ , $ <var:P> $ , $ <var:k> $ , $ <var:L> $ , $ <var:E> $ , $ <var:z> $ , $ <var:H> $ , and $ <var:g> $ the expression $ <nat:202> \times <var:P> + <nat:353> + <var:g> \times <nat:268> + <nat:316> \times <var:k> + <nat:112> \times <var:L> + <nat:98> \times <var:z> + <nat:50> \times <var:J> + <nat:494> \times <var:E> + <var:H> \times <nat:66> $ must be odd . \end{theorem} \begin{proof} The proposition is true from the fact $ <nat:112> \times <var:L> + <nat:50> \times <var:J> + <nat:316> \times <var:k> + <var:P> \times <nat:202> + <nat:98> \times <var:z> + <var:g> \times <nat:268> + <nat:66> \times <var:H> + <nat:494> \times <var:E> $ is obviously even . Our claim holds since the product of an even whole number with some integer must be even . Take note $ <nat:353> $ is guaranteed to be an odd natural number . It can be proven that $ <var:L> \times <nat:112> + <var:k> \times <nat:316> + <var:E> \times <nat:494> + <nat:268> \times <var:g> + <var:J> \times <nat:50> + <nat:202> \times <var:P> + <var:z> \times <nat:98> + <nat:353> + <nat:66> \times <var:H> $ must be odd . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:J> <var:P> <var:k> <var:L> <var:E> <var:z> <var:H> <var:g> : nat , Nat . odd ( <nat:202> * <var:P> + <nat:268> * <var:g> + <nat:316> * <var:k> + <nat:112> * <var:L> + <nat:98> * <var:z> + <nat:50> * <var:J> + <nat:494> * <var:E> + <nat:66> * <var:H> + <nat:353> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:202> * <var:P> + <nat:268> * <var:g> + <nat:316> * <var:k> + <nat:112> * <var:L> + <nat:98> * <var:z> + <nat:50> * <var:J> + <nat:494> * <var:E> + <nat:66> * <var:H> ) = true ) . { repeat rewrite Nat . even_add . repeat rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . odd <nat:353> = true ) . { auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . rewrite <genH> . auto . Qed . 