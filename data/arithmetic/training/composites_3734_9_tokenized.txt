\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} With the condition we have $ <var:U> = <var:q> \cdot <var:y> \cdot <var:A> \cdot <var:D> \cdot <var:S> \cdot <var:f> \cdot <var:Y> \cdot <var:X> \cdot <var:h> $ assuming some number $ <var:U> $ and where $ <var:h> $ , $ <var:f> $ , $ <var:Y> $ , $ <var:y> $ , $ <var:A> $ , $ <var:q> $ , $ <var:X> $ , $ <var:D> $ and $ <var:S> \geq <nat:2> $ using some $ <var:X> $ , $ <var:y> $ , $ <var:A> $ , $ <var:S> $ , $ <var:Y> $ , $ <var:h> $ , $ <var:D> $ , $ <var:q> $ , $ <var:f> \in \mathbb{N} $ , define that $ <var:U> $ is a <def:nine-composite> natural number . Consequently the integer <nat:11975040> is a <def:nine-composite> natural number . \end{theorem} \begin{proof} Let $ <var:A> = <nat:5> $ , $ <var:S> = <nat:2> $ , $ <var:y> = <nat:11> $ , $ <var:q> = <nat:12> $ , $ <var:f> = <nat:3> $ , $ <var:X> = <nat:7> $ , $ <var:D> = <nat:9> $ , $ <var:h> = <nat:6> $ , and $ <var:Y> = <nat:8> $ . We present <nat:11975040> is the product between some natural numbers $ <var:A> $ , $ <var:D> $ , $ <var:y> $ , $ <var:f> $ , $ <var:Y> $ , $ <var:S> $ , $ <var:X> $ , $ <var:q> $ , and $ <var:h> $ as well as $ <var:y> $ , $ <var:h> $ , $ <var:q> $ , $ <var:f> $ , $ <var:S> $ , $ <var:A> $ , $ <var:Y> $ , $ <var:D> $ , $ <var:X> $ are larger than <nat:1> . We justify the formula holds as $ <var:A> = <nat:5> $ , $ <var:h> = <nat:6> $ , $ <var:f> = <nat:3> $ , $ <var:X> = <nat:7> $ , $ <var:q> = <nat:12> $ , $ <var:S> = <nat:2> $ , $ <var:D> = <nat:9> $ , $ <var:Y> = <nat:8> $ and $ <var:y> = <nat:11> $ are greater than <nat:1> as well as seeing that $ <nat:11975040> = <var:y> \cdot <var:S> \cdot <var:D> \cdot <var:q> \cdot <var:Y> \cdot <var:h> \cdot <var:f> \cdot <var:X> \cdot <var:A> $ . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:nine-composite> ( <var:U> : nat ) := exists <var:X> <var:y> <var:A> <var:S> <var:Y> <var:h> <var:D> <var:q> <var:f> : nat , ( <var:U> = <var:q> * <var:y> * <var:A> * <var:D> * <var:S> * <var:f> * <var:Y> * <var:X> * <var:h> ) /\ ( <var:h> >= <nat:2> ) /\ ( <var:f> >= <nat:2> ) /\ ( <var:Y> >= <nat:2> ) /\ ( <var:y> >= <nat:2> ) /\ ( <var:A> >= <nat:2> ) /\ ( <var:q> >= <nat:2> ) /\ ( <var:X> >= <nat:2> ) /\ ( <var:D> >= <nat:2> ) /\ ( <var:S> >= <nat:2> ) . Theorem <genP:1> : <def:nine-composite> <nat:11975040> . Proof . unfold <def:nine-composite> . exists <nat:7> . exists <nat:11> . exists <nat:5> . exists <nat:2> . exists <nat:8> . exists <nat:6> . exists <nat:9> . exists <nat:12> . exists <nat:3> . assert ( <genH> : <nat:5> > <nat:1> ) . { lia . } assert ( <genH> : <nat:6> > <nat:1> ) . { lia . } assert ( <genH> : <nat:3> > <nat:1> ) . { lia . } assert ( <genH> : <nat:7> > <nat:1> ) . { lia . } assert ( <genH> : <nat:12> > <nat:1> ) . { lia . } assert ( <genH> : <nat:2> > <nat:1> ) . { lia . } assert ( <genH> : <nat:9> > <nat:1> ) . { lia . } assert ( <genH> : <nat:8> > <nat:1> ) . { lia . } assert ( <genH> : <nat:11> > <nat:1> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 