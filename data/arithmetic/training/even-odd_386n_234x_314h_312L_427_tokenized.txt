\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:L> \times <nat:312> + <var:h> \times <nat:314> + <var:n> \times <nat:386> + <nat:427> + <var:x> \times <nat:234> $ is odd . \end{theorem} \begin{proof} We show that the expression $ <nat:386> * <var:n> + <var:h> * <nat:314> + <var:L> * <nat:312> + <nat:427> + <nat:234> * <var:x> $ is odd because $ <nat:314> \times <var:h> + <nat:234> \times <var:x> + <nat:312> \times <var:L> + <var:n> \times <nat:386> $ is even . Take note that $ <nat:386> \cdot <var:n> $ is obviously even . This claim is proven from the knowledge the product between an even element of $ \mathbb{N} $ with an arbitrary number is guaranteed to be even . We know the terms $ <nat:312> \cdot <var:L> $ and moreover $ <nat:234> \cdot <var:x> $ must be even elements of $ \mathbb{N} $ as a consequence that taking the product of an even positive integer with some natural number is guaranteed to be an even element of $ \mathbb{Z}^+ $ . In addition to this , remember that $ <var:h> \cdot <nat:314> $ is known to be even . This claim is true as a consequence that the product of an even number in $ \mathbb{N} $ with any natural number will be even . The formula $ <nat:386> \cdot <var:n> + <nat:234> \cdot <var:x> + <nat:314> \cdot <var:h> + <nat:312> \cdot <var:L> $ is trivially even since the product between even positive integers with an arbitrary natural number will be even . The summing of even numbers in $ \mathbb{N} $ successively with an odd whole number is odd . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:L> <var:h> <var:n> <var:x> : nat , Nat . odd ( <nat:312> * <var:L> + <nat:314> * <var:h> + <nat:386> * <var:n> + <nat:234> * <var:x> + <nat:427> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:386> * <var:n> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:312> * <var:L> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:234> * <var:x> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:314> * <var:h> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:312> * <var:L> + <nat:314> * <var:h> + <nat:386> * <var:n> + <nat:234> * <var:x> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . auto . Qed . 