\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Using any positive terms $ <var:O> $ , $ <var:J> $ , $ <var:w> $ , and $ <var:W> $ the sum $ <var:w> \times <nat:184> + <nat:419> + <nat:190> \times <var:J> + <var:O> \times <nat:236> + <nat:348> \times <var:W> $ must be odd . \end{theorem} \begin{proof} It can be proven that the expression $ <var:O> \times <nat:236> + <nat:419> + <var:w> \times <nat:184> + <var:W> \times <nat:348> + <nat:190> \times <var:J> $ is known to be odd from the knowledge the formula $ <nat:236> <var:O> + <nat:190> <var:J> + <var:w> <nat:184> + <var:W> <nat:348> $ is clearly even . The product $ <nat:348> \times <var:W> $ is known as even . The pair $ <nat:236> \times <var:O> $ is known as an even number in $ \mathbb{N} $ . $ <var:J> \times <nat:190> $ is obviously even . This is true as a consequence that the multiplication between an even element of $ \mathbb{Z}^+ $ and an arbitrary element of $ \mathbb{N} $ will be even . Furthermore , the pair $ <var:w> \times <nat:184> $ is guaranteed to be an even number in $ \mathbb{Z}^+ $ . The adding between even numbers in $ \mathbb{N} $ successively with an odd whole number must be odd . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:O> <var:J> <var:w> <var:W> : nat , Nat . odd ( <nat:184> * <var:w> + <nat:190> * <var:J> + <nat:236> * <var:O> + <nat:348> * <var:W> + <nat:419> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:348> * <var:W> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:236> * <var:O> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:190> * <var:J> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:184> * <var:w> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:184> * <var:w> + <nat:190> * <var:J> + <nat:236> * <var:O> + <nat:348> * <var:W> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . auto . Qed . 