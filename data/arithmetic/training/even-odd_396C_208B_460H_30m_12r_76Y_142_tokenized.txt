\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:396> \times <var:C> + <nat:208> \times <var:B> + <nat:460> \times <var:H> + <nat:30> \times <var:m> + <nat:142> + <nat:12> \times <var:r> + <var:Y> \times <nat:76> $ will be even for any $ <var:B> $ , $ <var:H> $ , $ <var:m> $ , $ <var:r> $ , $ <var:C> $ , and $ <var:Y> $ . \end{theorem} \begin{proof} On top of this , the integers $ <nat:396> $ , $ <nat:208> $ , $ <nat:460> $ , $ <nat:30> $ , $ <nat:12> $ , as well as $ <nat:76> $ are even elements of $ \mathbb{N} $ . For this reason , the terms $ <nat:396> \times <var:C> $ , $ <nat:208> \times <var:B> $ , $ <nat:460> \times <var:H> $ , $ <nat:30> \times <var:m> $ , $ <nat:12> \times <var:r> $ , and likewise $ <nat:76> \times <var:Y> $ is even in addition . See the adding between even numbers together with an even number must be even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:B> <var:H> <var:m> <var:r> <var:C> <var:Y> : nat , Nat . even ( <nat:396> * <var:C> + <nat:208> * <var:B> + <nat:460> * <var:H> + <nat:30> * <var:m> + <nat:12> * <var:r> + <nat:76> * <var:Y> + <nat:142> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:396> = true ) . { auto . } assert ( <genH> : Nat . even <nat:208> = true ) . { auto . } assert ( <genH> : Nat . even <nat:460> = true ) . { auto . } assert ( <genH> : Nat . even <nat:30> = true ) . { auto . } assert ( <genH> : Nat . even <nat:12> = true ) . { auto . } assert ( <genH> : Nat . even <nat:76> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:396> * <var:C> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:208> * <var:B> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:460> * <var:H> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:30> * <var:m> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:12> * <var:r> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:76> * <var:Y> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 