\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:I> \times <nat:204> + <var:u> \times <nat:32> + <nat:222> \times <var:k> + <nat:59> + <nat:18> \times <var:e> + <var:t> \times <nat:384> + <var:W> \times <nat:452> + <var:Q> \times <nat:474> + <nat:366> \times <var:b> $ must be odd using some integers $ <var:e> $ , $ <var:t> $ , $ <var:I> $ , $ <var:u> $ , $ <var:b> $ , $ <var:W> $ , $ <var:Q> $ , and $ <var:k> $ . \end{theorem} \begin{proof} The adding between an even number in $ \mathbb{Z}^+ $ and an odd number will be odd . Observe that the pairs $ <nat:474> \cdot <var:Q> $ , $ <nat:32> \cdot <var:u> $ , $ <var:k> \cdot <nat:222> $ , $ <var:W> \cdot <nat:452> $ , $ <var:I> \cdot <nat:204> $ , $ <nat:366> \cdot <var:b> $ , as well as $ <var:e> \cdot <nat:18> $ are guaranteed to be even integers . $ <var:t> \cdot <nat:384> $ is known as even . It can be proven that the formula $ <var:b> <nat:366> + <nat:59> + <nat:32> <var:u> + <nat:18> <var:e> + <nat:384> <var:t> + <var:I> <nat:204> + <nat:452> <var:W> + <nat:222> <var:k> + <var:Q> <nat:474> $ is guaranteed to be odd . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:e> <var:t> <var:I> <var:u> <var:b> <var:W> <var:Q> <var:k> : nat , Nat . odd ( <nat:204> * <var:I> + <nat:32> * <var:u> + <nat:222> * <var:k> + <nat:18> * <var:e> + <nat:384> * <var:t> + <nat:452> * <var:W> + <nat:474> * <var:Q> + <nat:366> * <var:b> + <nat:59> ) = true . Proof . intros . rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . assert ( <genH> : Nat . even ( <nat:474> * <var:Q> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:32> * <var:u> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:222> * <var:k> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:452> * <var:W> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:204> * <var:I> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:366> * <var:b> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:18> * <var:e> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:384> * <var:t> ) = true ) . { rewrite Nat . even_mul . auto . } rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 