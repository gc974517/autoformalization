\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} With the condition that we have $ <var:a> * <var:k> * <var:X> * <var:K> * <var:e> * <var:z> * <var:R> = <var:B> $ for $ <var:B> \in \mathbb{Z}^+ $ as well as so that $ <var:z> $ , $ <var:e> $ , $ <var:K> $ , $ <var:X> $ , $ <var:R> $ , $ <var:k> $ , $ <var:a> \geq <nat:2> $ , we say that $ <var:B> $ is a <def:seven-composite> positive integer given some $ <var:a> $ , $ <var:K> $ , $ <var:k> $ , $ <var:z> $ , $ <var:e> $ , $ <var:X> $ , $ <var:R> \in \mathbb{Z}^+ $ . Accordingly $ <nat:380160> = <var:B> $ is a <def:seven-composite> whole number . \end{theorem} \begin{proof} Allow $ <var:K> = <nat:12> $ , $ <var:R> = <nat:3> $ , $ <var:z> = <nat:8> $ , $ <var:e> = <nat:4> $ , $ <var:k> = <nat:11> $ , $ <var:X> = <nat:5> $ , $ <var:a> = <nat:6> $ . We present <nat:380160> is the product between $ <var:z> $ , $ <var:e> $ , $ <var:K> $ , $ <var:a> $ , $ <var:R> $ , $ <var:X> $ , $ <var:k> \in \mathbb{Z}^+ $ as well as $ <var:z> $ , $ <var:K> $ , $ <var:k> $ , $ <var:e> $ , $ <var:a> $ , $ <var:X> $ , $ <var:R> $ are greater than or equal to <nat:2> . We justify <nat:380160> is a <def:seven-composite> natural number in consideration of $ <nat:380160> = <var:R> * <var:z> * <var:K> * <var:X> * <var:e> * <var:k> * <var:a> $ and as $ <nat:5> $ , $ <nat:3> $ , $ <nat:8> $ , $ <nat:6> $ , $ <nat:11> $ , $ <nat:4> $ and $ <nat:12> \geq <nat:2> $ . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:seven-composite> ( <var:B> : nat ) := exists <var:a> <var:K> <var:k> <var:z> <var:e> <var:X> <var:R> : nat , ( <var:a> * <var:k> * <var:X> * <var:K> * <var:e> * <var:z> * <var:R> = <var:B> ) /\ ( <var:z> >= <nat:2> ) /\ ( <var:e> >= <nat:2> ) /\ ( <var:K> >= <nat:2> ) /\ ( <var:X> >= <nat:2> ) /\ ( <var:R> >= <nat:2> ) /\ ( <var:k> >= <nat:2> ) /\ ( <var:a> >= <nat:2> ) . Theorem <genP:1> : <def:seven-composite> <nat:380160> . Proof . unfold <def:seven-composite> . exists <nat:6> . exists <nat:12> . exists <nat:11> . exists <nat:8> . exists <nat:4> . exists <nat:5> . exists <nat:3> . assert ( <genH> : <nat:5> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:3> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:8> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:6> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:11> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:4> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:12> >= <nat:2> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 