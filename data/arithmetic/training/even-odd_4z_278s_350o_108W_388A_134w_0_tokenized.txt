\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:0> + <var:w> \cdot <nat:134> + <var:W> \cdot <nat:108> + <nat:350> \cdot <var:o> + <nat:388> \cdot <var:A> + <nat:278> \cdot <var:s> + <nat:4> \cdot <var:z> $ will be even . \end{theorem} \begin{proof} Observe that $ <nat:0> $ is known as an even whole number . The totaling between an even integer and an even number in $ \mathbb{N} $ is even . In consequence , the sum $ <var:s> * <nat:278> + <var:W> * <nat:108> + <nat:0> + <nat:4> * <var:z> + <var:A> * <nat:388> + <nat:350> * <var:o> + <var:w> * <nat:134> $ by itself is even . The natural number $ <nat:108> $ is known to be an even positive integer . Thus , the term $ <nat:108> \times <var:W> $ is even as well . The pairs $ <var:z> \times <nat:4> $ , $ <var:o> \times <nat:350> $ , $ <nat:278> \times <var:s> $ , and likewise $ <nat:388> \times <var:A> $ are guaranteed to be even positive integers . This claim must be true as a consequence that the product between an even number with a number in $ \mathbb{Z}^+ $ is guaranteed to be clearly an even element of $ \mathbb{Z}^+ $ . This fact is proven by reason that the natural numbers $ <nat:4> $ , $ <nat:350> $ , $ <nat:278> $ , and $ <nat:388> $ must be even . Adding on , see that the positive integer $ <nat:134> $ is trivially even . Consequently , $ <var:w> \times <nat:134> $ must be even also . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:w> <var:W> <var:o> <var:A> <var:s> <var:z> : nat , Nat . even ( <nat:134> * <var:w> + <nat:108> * <var:W> + <nat:350> * <var:o> + <nat:388> * <var:A> + <nat:278> * <var:s> + <nat:4> * <var:z> + <nat:0> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:0> = true ) . { auto . } repeat rewrite Nat . even_add . assert ( <genH> : Nat . even <nat:108> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:108> * <var:W> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:4> = true ) . { auto . } assert ( <genH> : Nat . even <nat:350> = true ) . { auto . } assert ( <genH> : Nat . even <nat:278> = true ) . { auto . } assert ( <genH> : Nat . even <nat:388> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:4> * <var:z> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:350> * <var:o> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:278> * <var:s> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:388> * <var:A> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:134> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:134> * <var:w> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 