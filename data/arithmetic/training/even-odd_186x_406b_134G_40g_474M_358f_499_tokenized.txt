\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:f> * <nat:358> + <var:x> * <nat:186> + <nat:40> * <var:g> + <var:M> * <nat:474> + <var:b> * <nat:406> + <var:G> * <nat:134> + <nat:499> $ will be odd . \end{theorem} \begin{proof} The terms $ <nat:186> <var:x> $ additionally $ <var:G> <nat:134> $ are even . Building on , see that the term $ <var:g> <nat:40> $ is known to be an even positive integer . On top of this , $ <var:M> <nat:474> $ is guaranteed to be even . $ <nat:358> <var:f> $ is trivially an even number in $ \mathbb{Z}^+ $ . Adding on , recall the term $ <nat:406> <var:b> $ is obviously even . This fact is proven by reason that the multiplication between an even number in $ \mathbb{N} $ and any positive integer must be an even positive integer . We know $ <nat:499> $ is guaranteed to be an odd integer . It can be proven that that $ <nat:186> * <var:x> + <var:b> * <nat:406> + <var:G> * <nat:134> + <nat:40> * <var:g> + <var:M> * <nat:474> + <nat:358> * <var:f> + <nat:499> $ is guaranteed to be odd . Observe that the adding of an even whole number with an odd number in $ \mathbb{N} $ will be odd . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:f> <var:x> <var:g> <var:M> <var:b> <var:G> : nat , Nat . odd ( <nat:358> * <var:f> + <nat:186> * <var:x> + <nat:40> * <var:g> + <nat:474> * <var:M> + <nat:406> * <var:b> + <nat:134> * <var:G> + <nat:499> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:186> * <var:x> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:134> * <var:G> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:40> * <var:g> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:474> * <var:M> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:358> * <var:f> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:406> * <var:b> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . odd <nat:499> = true ) . { auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 