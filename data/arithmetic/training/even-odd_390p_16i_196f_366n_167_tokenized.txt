\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Using all integers $ <var:n> $ , $ <var:p> $ , $ <var:f> $ , and $ <var:i> $ $ <nat:16> <var:i> + <var:f> <nat:196> + <nat:366> <var:n> + <nat:167> + <nat:390> <var:p> $ is odd . \end{theorem} \begin{proof} We apply the assumption the knowledge that the summation $ <nat:390> * <var:p> + <nat:167> + <nat:196> * <var:f> + <var:n> * <nat:366> + <nat:16> * <var:i> $ is clearly odd from the fact the sum $ <var:f> * <nat:196> + <nat:390> * <var:p> + <nat:366> * <var:n> + <var:i> * <nat:16> $ is trivially even . In addition , remember that the products $ <nat:196> \times <var:f> $ , $ <var:p> \times <nat:390> $ , $ <nat:366> \times <var:n> $ , $ <nat:16> \times <var:i> $ , are even as a consequence that the product between an even natural number and any natural number is guaranteed to be trivially an even number in $ \mathbb{Z}^+ $ , and is proven since the leading terms $ <nat:196> $ , $ <nat:390> $ , $ <nat:366> $ , $ <nat:16> $ , are guaranteed to be even . $ <nat:390> \cdot <var:p> + <var:i> \cdot <nat:16> + <var:f> \cdot <nat:196> + <var:n> \cdot <nat:366> $ must be even since the product of even positive integers with a element of $ \mathbb{Z}^+ $ is guaranteed to be by definition an even whole number . It can be verified that this claim is true . Observe $ <nat:167> $ is guaranteed to be odd . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:n> <var:p> <var:f> <var:i> : nat , Nat . odd ( <nat:16> * <var:i> + <nat:196> * <var:f> + <nat:366> * <var:n> + <nat:390> * <var:p> + <nat:167> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:196> = true ) . { auto . } assert ( <genH> : Nat . even <nat:390> = true ) . { auto . } assert ( <genH> : Nat . even <nat:366> = true ) . { auto . } assert ( <genH> : Nat . even <nat:16> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:196> * <var:f> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:390> * <var:p> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:366> * <var:n> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:16> * <var:i> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:16> * <var:i> + <nat:196> * <var:f> + <nat:366> * <var:n> + <nat:390> * <var:p> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } assert ( <genH> : Nat . odd <nat:167> = true ) . { auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . rewrite <genH> . auto . Qed . 