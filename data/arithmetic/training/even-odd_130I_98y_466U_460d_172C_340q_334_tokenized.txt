\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:q> \times <nat:340> + <nat:334> + <nat:460> \times <var:d> + <nat:466> \times <var:U> + <nat:98> \times <var:y> + <nat:172> \times <var:C> + <nat:130> \times <var:I> $ will be even . \end{theorem} \begin{proof} The whole numbers $ <nat:172> $ and likewise $ <nat:340> $ are trivially even elements of $ \mathbb{Z}^+ $ . So , the pairs $ <nat:172> <var:C> $ and $ <var:q> <nat:340> $ is even too . We know the coefficients $ <nat:460> $ , $ <nat:466> $ , as well as $ <nat:130> $ are clearly even . Then , the pairs $ <nat:460> <var:d> $ , $ <var:U> <nat:466> $ , and moreover $ <nat:130> <var:I> $ must be even additionally . Furthermore , notice that the coefficient $ <nat:98> $ is trivially an even integer . Accordingly , the product $ <var:y> <nat:98> $ must be even additionally . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:q> <var:d> <var:U> <var:y> <var:C> <var:I> : nat , Nat . even ( <nat:340> * <var:q> + <nat:460> * <var:d> + <nat:466> * <var:U> + <nat:98> * <var:y> + <nat:172> * <var:C> + <nat:130> * <var:I> + <nat:334> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:172> = true ) . { auto . } assert ( <genH> : Nat . even <nat:340> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:172> * <var:C> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:340> * <var:q> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:460> = true ) . { auto . } assert ( <genH> : Nat . even <nat:466> = true ) . { auto . } assert ( <genH> : Nat . even <nat:130> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:460> * <var:d> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:466> * <var:U> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:130> * <var:I> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:98> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:98> * <var:y> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 