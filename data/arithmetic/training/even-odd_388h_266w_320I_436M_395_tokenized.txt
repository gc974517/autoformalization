\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:I> \times <nat:320> + <var:w> \times <nat:266> + <nat:388> \times <var:h> + <nat:395> + <var:M> \times <nat:436> $ is odd using all unknowns $ <var:M> $ , $ <var:I> $ , $ <var:h> $ , and $ <var:w> $ . \end{theorem} \begin{proof} It can be shown that the sum $ <var:I> \times <nat:320> + <nat:388> \times <var:h> + <nat:395> + <nat:436> \times <var:M> + <var:w> \times <nat:266> $ is obviously odd from the fact $ <var:w> * <nat:266> + <nat:436> * <var:M> + <nat:388> * <var:h> + <nat:320> * <var:I> $ is guaranteed to be even . The terms $ <var:I> \times <nat:320> $ , $ <nat:266> \times <var:w> $ , in addition to $ <nat:388> \times <var:h> $ are known to be even numbers in $ \mathbb{Z}^+ $ . This holds since taking the product between an even whole number with any positive integer is even . $ <nat:436> \times <var:M> $ is clearly even . The expression $ <nat:388> \times <var:h> + <nat:266> \times <var:w> + <nat:320> \times <var:I> + <nat:436> \times <var:M> $ is even because the multiplication between even integers and any natural number is guaranteed to be even . We prove the claim holds . Recall that $ <nat:395> $ is an odd whole number . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:M> <var:I> <var:h> <var:w> : nat , Nat . odd ( <nat:320> * <var:I> + <nat:266> * <var:w> + <nat:388> * <var:h> + <nat:436> * <var:M> + <nat:395> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:320> * <var:I> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:266> * <var:w> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:388> * <var:h> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:436> * <var:M> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:320> * <var:I> + <nat:266> * <var:w> + <nat:388> * <var:h> + <nat:436> * <var:M> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } assert ( <genH> : Nat . odd <nat:395> = true ) . { auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . rewrite <genH> . auto . Qed . 