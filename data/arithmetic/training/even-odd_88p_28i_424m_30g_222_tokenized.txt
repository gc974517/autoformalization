\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:g> * <nat:30> + <nat:222> + <var:m> * <nat:424> + <nat:28> * <var:i> + <var:p> * <nat:88> $ must be even . \end{theorem} \begin{proof} Notice the integer $ <nat:88> $ is clearly even . Consequently , the product $ <var:p> * <nat:88> $ is guaranteed to be even additionally . In addition to this , the pair $ <var:i> * <nat:28> $ is obviously an even natural . This fact is true from the knowledge the product of an even number in $ \mathbb{Z}^+ $ and any natural number will be even . This is proven by reason that the natural number $ <nat:28> $ is clearly even . In addition to this , the product $ <var:m> * <nat:424> $ is obviously an even positive integer since the number $ <nat:424> $ is trivially even . What's more , the product $ <nat:30> * <var:g> $ is known to be even . This must be true as a consequence that multiplying between an even integer with a number in $ \mathbb{N} $ will be an even number . This claim must be true as a consequence that the coefficient $ <nat:30> $ is even . Remember that the summation between even numbers will be even . Observe $ <nat:222> $ is even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:g> <var:m> <var:i> <var:p> : nat , Nat . even ( <nat:30> * <var:g> + <nat:424> * <var:m> + <nat:28> * <var:i> + <nat:88> * <var:p> + <nat:222> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:88> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:88> * <var:p> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:28> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:28> * <var:i> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:424> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:424> * <var:m> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:30> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:30> * <var:g> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } repeat rewrite Nat . even_add . assert ( <genH> : Nat . even <nat:222> = true ) . { auto . } rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 