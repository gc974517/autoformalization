\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} For terms $ <var:S> $ , $ <var:o> $ , $ <var:Z> $ , $ <var:M> $ , $ <var:E> $ , $ <var:T> $ , $ <var:m> $ , and $ <var:N> $ $ <var:S> \times <nat:154> + <var:M> \times <nat:160> + <nat:258> \times <var:o> + <nat:114> \times <var:T> + <nat:310> \times <var:N> + <nat:336> \times <var:Z> + <nat:228> + <nat:338> \times <var:E> + <nat:304> \times <var:m> $ will be even . \end{theorem} \begin{proof} Further , the terms $ <var:S> <nat:154> $ , $ <var:M> <nat:160> $ , $ <var:o> <nat:258> $ , $ <nat:114> <var:T> $ , $ <nat:310> <var:N> $ , $ <nat:336> <var:Z> $ , $ <var:E> <nat:338> $ , as well as $ <nat:304> <var:m> $ are obviously even numbers in $ \mathbb{N} $ from the knowledge the natural numbers $ <nat:154> $ , $ <nat:160> $ , $ <nat:258> $ , $ <nat:114> $ , $ <nat:310> $ , $ <nat:336> $ , $ <nat:338> $ , plus $ <nat:304> $ are known to be even . Recall that the addition between even numbers successively is even . See $ <nat:228> $ is trivially even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:S> <var:o> <var:Z> <var:M> <var:E> <var:T> <var:m> <var:N> : nat , Nat . even ( <nat:154> * <var:S> + <nat:160> * <var:M> + <nat:258> * <var:o> + <nat:114> * <var:T> + <nat:310> * <var:N> + <nat:336> * <var:Z> + <nat:338> * <var:E> + <nat:304> * <var:m> + <nat:228> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:154> = true ) . { auto . } assert ( <genH> : Nat . even <nat:160> = true ) . { auto . } assert ( <genH> : Nat . even <nat:258> = true ) . { auto . } assert ( <genH> : Nat . even <nat:114> = true ) . { auto . } assert ( <genH> : Nat . even <nat:310> = true ) . { auto . } assert ( <genH> : Nat . even <nat:336> = true ) . { auto . } assert ( <genH> : Nat . even <nat:338> = true ) . { auto . } assert ( <genH> : Nat . even <nat:304> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:154> * <var:S> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:160> * <var:M> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:258> * <var:o> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:114> * <var:T> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:310> * <var:N> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:336> * <var:Z> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:338> * <var:E> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:304> * <var:m> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } repeat rewrite Nat . even_add . assert ( <genH> : Nat . even <nat:228> = true ) . { auto . } rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 