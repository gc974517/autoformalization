\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Let that given that there exist $ <var:t> $ , $ <var:V> $ , $ <var:j> $ , $ <var:f> $ , $ <var:N> $ , $ <var:K> $ , $ <var:Z> \in \mathbb{Z}^+ $ denote that some integer $ <var:m> $ is defined to be a <def:seven-composite> whole number when $ <var:V> \times <var:K> \times <var:f> \times <var:N> \times <var:t> \times <var:j> \times <var:Z> = <var:m> $ plus more than or equivalent to <nat:2> . For this reason <nat:152064> is a <def:seven-composite> whole number . \end{theorem} \begin{proof} Remember <nat:152064> is a <def:seven-composite> whole number if and only if <nat:152064> is the product between integers $ <var:Z> $ , $ <var:f> $ , $ <var:N> $ , $ <var:K> $ , $ <var:V> $ , $ <var:t> $ , $ <var:j> $ where $ <var:j> $ , $ <var:K> $ , $ <var:Z> $ , $ <var:V> $ , $ <var:f> $ , $ <var:t> $ , $ <var:N> \geq <nat:2> $ . Take $ <var:V> = <nat:11> $ , $ <var:Z> = <nat:6> $ , $ <var:j> = <nat:4> $ , $ <var:f> = <nat:8> $ , $ <var:t> = <nat:12> $ , $ <var:N> = <nat:2> $ and $ <var:K> = <nat:3> $ . Note $ <nat:6> $ , $ <nat:3> $ , $ <nat:2> $ , $ <nat:11> $ , $ <nat:4> $ , $ <nat:8> $ , and $ <nat:12> $ are more than or equal to <nat:2> . Also notice that too $ <var:f> \times <var:j> \times <var:K> \times <var:V> \times <var:N> \times <var:Z> \times <var:t> = <nat:152064> $ . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:seven-composite> ( <var:m> : nat ) := exists <var:t> <var:V> <var:j> <var:f> <var:N> <var:K> <var:Z> : nat , ( <var:V> * <var:K> * <var:f> * <var:N> * <var:t> * <var:j> * <var:Z> = <var:m> ) /\ ( <var:t> >= <nat:2> ) /\ ( <var:V> >= <nat:2> ) /\ ( <var:j> >= <nat:2> ) /\ ( <var:f> >= <nat:2> ) /\ ( <var:N> >= <nat:2> ) /\ ( <var:K> >= <nat:2> ) /\ ( <var:Z> >= <nat:2> ) . Theorem <genP:1> : <def:seven-composite> <nat:152064> . Proof . unfold <def:seven-composite> . exists <nat:12> . exists <nat:11> . exists <nat:4> . exists <nat:8> . exists <nat:2> . exists <nat:3> . exists <nat:6> . assert ( <genH> : <nat:6> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:3> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:2> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:11> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:4> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:8> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:12> >= <nat:2> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 