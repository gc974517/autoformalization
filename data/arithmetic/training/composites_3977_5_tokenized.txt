\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \newtheorem{definition}{Definition} \begin{document} \begin{definition} There are $ <var:t> $ , $ <var:l> $ , $ <var:d> $ , $ <var:b> $ , $ <var:N> \in \mathbb{N} $ satisfying the condition that $ <var:l> $ , $ <var:d> $ , $ <var:t> $ , $ <var:N> $ and $ <var:b> \geq <nat:2> $ . We denote that some whole number $ <var:n> $ is defined as a <def:five-composite> number if $ <var:l> * <var:d> * <var:b> * <var:t> * <var:N> = <var:n> $ . \end{definition} \begin{theorem} $ <var:n> = <nat:9072> $ is a <def:five-composite> integer . \end{theorem} \begin{proof} Remember that <nat:9072> is a <def:five-composite> natural number if and only if it is the product of positive integers $ <var:d> $ , $ <var:t> $ , $ <var:N> $ , $ <var:b> $ , and $ <var:l> $ larger than or equivalent to <nat:2> . Allow $ <var:b> = <nat:9> $ , $ <var:l> = <nat:3> $ , $ <var:t> = <nat:4> $ , $ <var:N> = <nat:12> $ and $ <var:d> = <nat:7> $ . We show <nat:9072> is a <def:five-composite> whole number . Moreover note that $ <nat:3> $ , $ <nat:4> $ , $ <nat:12> $ , $ <nat:9> $ , $ <nat:7> \geq <nat:2> $ . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:five-composite> ( <var:n> : nat ) := exists <var:t> <var:l> <var:d> <var:b> <var:N> : nat , ( <var:l> >= <nat:2> ) /\ ( <var:d> >= <nat:2> ) /\ ( <var:t> >= <nat:2> ) /\ ( <var:N> >= <nat:2> ) /\ ( <var:b> >= <nat:2> ) /\ ( <var:l> * <var:d> * <var:b> * <var:t> * <var:N> = <var:n> ) . Theorem <genP:1> : <def:five-composite> <nat:9072> . Proof . unfold <def:five-composite> . exists <nat:4> . exists <nat:3> . exists <nat:7> . exists <nat:9> . exists <nat:12> . assert ( <genH> : <nat:3> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:4> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:12> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:9> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:7> >= <nat:2> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 