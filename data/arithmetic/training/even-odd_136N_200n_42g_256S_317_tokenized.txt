\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} For all positive numbers $ <var:S> $ , $ <var:n> $ , $ <var:N> $ , and $ <var:g> $ $ <var:N> \cdot <nat:136> + <nat:200> \cdot <var:n> + <var:g> \cdot <nat:42> + <var:S> \cdot <nat:256> + <nat:317> $ is odd . \end{theorem} \begin{proof} Remember $ <nat:317> $ is known to be odd . Notice that the product between even positive integers must be even . The number $ <nat:256> $ is guaranteed to be an even positive integer Likewise , the leading terms $ <nat:200> $ and $ <nat:136> $ are guaranteed to be even Notice the positive integer $ <nat:42> $ is known to be an even positive integer \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:S> <var:n> <var:N> <var:g> : nat , Nat . odd ( <nat:136> * <var:N> + <nat:200> * <var:n> + <nat:42> * <var:g> + <nat:256> * <var:S> + <nat:317> ) = true . Proof . intros . assert ( <genH> : Nat . odd <nat:317> = true ) . { auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . repeat rewrite Nat . even_mul . assert ( <genH> : Nat . even <nat:256> = true ) . { auto . } assert ( <genH> : Nat . even <nat:200> = true ) . { auto . } assert ( <genH> : Nat . even <nat:136> = true ) . { auto . } assert ( <genH> : Nat . even <nat:42> = true ) . { auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 