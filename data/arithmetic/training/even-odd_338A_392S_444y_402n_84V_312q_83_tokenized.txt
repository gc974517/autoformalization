\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:y> <nat:444> + <nat:83> + <nat:402> <var:n> + <nat:84> <var:V> + <nat:338> <var:A> + <var:S> <nat:392> + <var:q> <nat:312> $ is odd . \end{theorem} \begin{proof} The sum $ <var:n> \cdot <nat:402> + <nat:392> \cdot <var:S> + <var:V> \cdot <nat:84> + <nat:83> + <var:q> \cdot <nat:312> + <nat:444> \cdot <var:y> + <nat:338> \cdot <var:A> $ is known to be odd by reason that the expression $ <var:A> <nat:338> + <nat:392> <var:S> + <var:y> <nat:444> + <nat:402> <var:n> + <nat:84> <var:V> + <nat:312> <var:q> $ is trivially even . Notice the totaling of an even number in $ \mathbb{N} $ and an even natural must be even . Observe the pairs $ <var:y> <nat:444> $ , $ <var:q> <nat:312> $ , $ <nat:338> <var:A> $ , and likewise $ <var:n> <nat:402> $ are known to be even . We know the product $ <nat:84> <var:V> $ is even . What's more , see that the product $ <nat:392> <var:S> $ is guaranteed to be an even positive integer . This holds since the product between an even natural and a positive integer will be even . We prove this claim must be true . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:y> <var:n> <var:V> <var:A> <var:S> <var:q> : nat , Nat . odd ( <nat:444> * <var:y> + <nat:402> * <var:n> + <nat:84> * <var:V> + <nat:338> * <var:A> + <nat:392> * <var:S> + <nat:312> * <var:q> + <nat:83> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:444> * <var:y> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:312> * <var:q> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:338> * <var:A> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:402> * <var:n> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:84> * <var:V> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:392> * <var:S> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:444> * <var:y> + <nat:402> * <var:n> + <nat:84> * <var:V> + <nat:338> * <var:A> + <nat:392> * <var:S> + <nat:312> * <var:q> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . auto . Qed . 