\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} With some whole numbers $ <var:O> $ , $ <var:S> $ , $ <var:D> $ , and $ <var:f> $ $ <nat:44> \times <var:D> + <nat:246> \times <var:O> + <nat:178> \times <var:f> + <nat:469> + <nat:240> \times <var:S> $ is odd . \end{theorem} \begin{proof} It can be demonstrated that the expression $ <nat:178> * <var:f> + <var:O> * <nat:246> + <var:S> * <nat:240> + <nat:44> * <var:D> + <nat:469> $ must be odd . Observe that $ <nat:469> $ is clearly an odd integer . The pair $ <nat:246> \cdot <var:O> $ is known to be an even natural number since the integer $ <nat:246> $ is trivially an even element of $ \mathbb{Z}^+ $ . Further , recall the whole number $ <nat:178> $ is known as an even number . Then , the pair $ <var:f> \cdot <nat:178> $ will be even too . $ <nat:240> \cdot <var:S> $ is trivially an even element of $ \mathbb{N} $ as a consequence that the multiplication of an even natural with an arbitrary element of $ \mathbb{N} $ is even and likewise the natural number $ <nat:240> $ is known as even . In addition to this , the positive integer $ <nat:44> $ is obviously an even element of $ \mathbb{Z}^+ $ . Thus , the pair $ <var:D> \cdot <nat:44> $ must be even in addition . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:O> <var:S> <var:D> <var:f> : nat , Nat . odd ( <nat:44> * <var:D> + <nat:246> * <var:O> + <nat:178> * <var:f> + <nat:240> * <var:S> + <nat:469> ) = true . Proof . intros . assert ( <genH> : Nat . odd <nat:469> = true ) . { auto . } assert ( <genH> : Nat . even <nat:246> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:246> * <var:O> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:178> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:178> * <var:f> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:240> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:240> * <var:S> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:44> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:44> * <var:D> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 