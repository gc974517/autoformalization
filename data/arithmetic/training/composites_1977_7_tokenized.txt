\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Assume that when there exist numbers $ <var:U> $ , $ <var:w> $ , $ <var:N> $ , $ <var:I> $ , $ <var:r> $ , $ <var:o> $ , $ <var:D> $ then we assume that some whole number $ <var:a> $ is defined as a <def:seven-composite> natural number assuming $ <var:U> * <var:r> * <var:I> * <var:N> * <var:D> * <var:o> * <var:w> = <var:a> $ as well as more than or equivalent to <nat:2> . Therefore the whole number <nat:1425600> is a <def:seven-composite> integer . \end{theorem} \begin{proof} We confirm <nat:1425600> is the multiplication between $ <var:w> $ , $ <var:U> $ , $ <var:N> $ , $ <var:r> $ , $ <var:I> $ , $ <var:o> $ , $ <var:D> \in \mathbb{N} $ plus $ <var:w> $ , $ <var:U> $ , $ <var:I> $ , $ <var:N> $ , $ <var:o> $ , $ <var:r> $ , $ <var:D> $ are more than or equivalent to <nat:2> . Note that $ <var:w> * <var:D> * <var:o> * <var:I> * <var:N> * <var:r> * <var:U> = <nat:9> * <nat:8> * <nat:11> * <nat:10> * <nat:12> * <nat:5> * <nat:3> = <nat:1425600> $ . Similarly observe $ <nat:3> $ , $ <nat:9> $ , $ <nat:12> $ , $ <nat:8> $ , $ <nat:5> $ , $ <nat:11> $ , and $ <nat:10> $ are larger than or equal to <nat:2> . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:seven-composite> ( <var:a> : nat ) := exists <var:U> <var:w> <var:N> <var:I> <var:r> <var:o> <var:D> : nat , ( <var:U> * <var:r> * <var:I> * <var:N> * <var:D> * <var:o> * <var:w> = <var:a> ) /\ ( <var:U> >= <nat:2> ) /\ ( <var:w> >= <nat:2> ) /\ ( <var:N> >= <nat:2> ) /\ ( <var:I> >= <nat:2> ) /\ ( <var:r> >= <nat:2> ) /\ ( <var:o> >= <nat:2> ) /\ ( <var:D> >= <nat:2> ) . Theorem <genP:1> : <def:seven-composite> <nat:1425600> . Proof . unfold <def:seven-composite> . exists <nat:3> . exists <nat:9> . exists <nat:12> . exists <nat:10> . exists <nat:5> . exists <nat:11> . exists <nat:8> . assert ( <genH> : <nat:3> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:9> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:12> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:8> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:5> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:11> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:10> >= <nat:2> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 