\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:v> * <nat:366> + <nat:336> * <var:d> + <nat:481> + <var:b> * <nat:418> + <var:K> * <nat:382> + <nat:184> * <var:o> + <nat:496> * <var:q> + <var:Z> * <nat:118> + <var:D> * <nat:378> $ must be odd . \end{theorem} \begin{proof} Remember that the pairs $ <nat:118> <var:Z> $ , $ <nat:378> <var:D> $ , $ <var:b> <nat:418> $ , $ <nat:382> <var:K> $ , and $ <nat:184> <var:o> $ must be even . The terms $ <nat:366> <var:v> $ in addition to $ <var:q> <nat:496> $ are clearly even . This holds as a consequence that the product between an even whole number and an arbitrary natural is an even positive integer . Observe the product $ <var:d> <nat:336> $ is even . Observe that $ <nat:481> $ is trivially an odd integer . It can be proven that the main result is proven according to the knowledge that the summing of an even element of $ \mathbb{N} $ and an odd number must be an odd positive integer . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:v> <var:d> <var:b> <var:K> <var:o> <var:q> <var:Z> <var:D> : nat , Nat . odd ( <nat:366> * <var:v> + <nat:336> * <var:d> + <nat:418> * <var:b> + <nat:382> * <var:K> + <nat:184> * <var:o> + <nat:496> * <var:q> + <nat:118> * <var:Z> + <nat:378> * <var:D> + <nat:481> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:118> * <var:Z> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:378> * <var:D> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:418> * <var:b> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:382> * <var:K> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:184> * <var:o> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:366> * <var:v> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:496> * <var:q> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:336> * <var:d> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . odd <nat:481> = true ) . { auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 