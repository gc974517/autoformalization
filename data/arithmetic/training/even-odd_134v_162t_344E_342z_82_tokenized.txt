\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:134> <var:v> + <nat:342> <var:z> + <nat:82> + <var:E> <nat:344> + <var:t> <nat:162> $ is even . \end{theorem} \begin{proof} The claim holds by reason that $ <nat:344> \times <var:E> + <nat:134> \times <var:v> + <nat:342> \times <var:z> + <nat:162> \times <var:t> $ is clearly even . Likewise , we know $ <var:v> \cdot <nat:134> $ is trivially an even whole number from the fact taking the product of an even element of $ \mathbb{N} $ with any element of $ \mathbb{N} $ is guaranteed to be even , which is true by reason that the integer $ <nat:134> $ is guaranteed to be an even number in $ \mathbb{Z}^+ $ . Building on , notice the positive integer $ <nat:162> $ is trivially even . Hence , the product $ <nat:162> \cdot <var:t> $ is even also . The leading term $ <nat:344> $ is an even natural . Thus , $ <var:E> \cdot <nat:344> $ must be even at the same time . Building on , take note that the whole number $ <nat:342> $ is obviously an even number in $ \mathbb{Z}^+ $ . For this reason , the pair $ <var:z> \cdot <nat:342> $ will be even additionally . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:v> <var:z> <var:E> <var:t> : nat , Nat . even ( <nat:134> * <var:v> + <nat:342> * <var:z> + <nat:344> * <var:E> + <nat:162> * <var:t> + <nat:82> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:134> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:134> * <var:v> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:162> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:162> * <var:t> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:344> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:344> * <var:E> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:342> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:342> * <var:z> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:134> * <var:v> + <nat:342> * <var:z> + <nat:344> * <var:E> + <nat:162> * <var:t> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . even_add . rewrite <genH> . auto . Qed . 