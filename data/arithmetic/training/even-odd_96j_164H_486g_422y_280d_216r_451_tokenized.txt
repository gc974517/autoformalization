\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:451> + <nat:486> \times <var:g> + <var:j> \times <nat:96> + <nat:422> \times <var:y> + <var:H> \times <nat:164> + <nat:216> \times <var:r> + <var:d> \times <nat:280> $ will be odd with any natural numbers $ <var:r> $ , $ <var:y> $ , $ <var:g> $ , $ <var:H> $ , $ <var:d> $ , and $ <var:j> $ . \end{theorem} \begin{proof} It can be checked that the formula $ <nat:96> * <var:j> + <nat:164> * <var:H> + <nat:486> * <var:g> + <nat:451> + <nat:422> * <var:y> + <nat:280> * <var:d> + <nat:216> * <var:r> $ will be odd . Observe that the leading terms $ <nat:96> $ , $ <nat:486> $ , as well as $ <nat:280> $ are obviously even Remember the natural number $ <nat:422> $ is obviously an even element of $ \mathbb{N} $ In addition to this , the number $ <nat:216> $ is an even natural The positive integer $ <nat:164> $ is an even number in $ \mathbb{Z}^+ $ The multiplication between an even number in $ \mathbb{Z}^+ $ and an arbitrary positive integer will be an even natural . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:r> <var:y> <var:g> <var:H> <var:d> <var:j> : nat , Nat . odd ( <nat:486> * <var:g> + <nat:96> * <var:j> + <nat:422> * <var:y> + <nat:164> * <var:H> + <nat:216> * <var:r> + <nat:280> * <var:d> + <nat:451> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:96> = true ) . { auto . } assert ( <genH> : Nat . even <nat:486> = true ) . { auto . } assert ( <genH> : Nat . even <nat:280> = true ) . { auto . } assert ( <genH> : Nat . even <nat:422> = true ) . { auto . } assert ( <genH> : Nat . even <nat:216> = true ) . { auto . } assert ( <genH> : Nat . even <nat:164> = true ) . { auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . repeat rewrite Nat . even_mul . rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 