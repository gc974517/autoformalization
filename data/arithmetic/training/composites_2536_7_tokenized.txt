\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} We claim that $ <var:E> $ is <def:seven-composite> whenever assuming some natural numbers $ <var:d> $ , $ <var:k> $ , $ <var:o> $ , $ <var:Q> $ , $ <var:m> $ , $ <var:x> $ , $ <var:l> $ we get where $ <var:l> $ , $ <var:o> $ , $ <var:m> $ , $ <var:x> $ , $ <var:Q> $ , $ <var:d> $ and $ <var:k> > <nat:1> $ as well as given $ <var:E> \in \mathbb{N} $ , $ <var:E> = <var:m> * <var:k> * <var:o> * <var:Q> * <var:x> * <var:l> * <var:d> $ . So the positive integer <nat:45360> is a <def:seven-composite> natural number . \end{theorem} \begin{proof} Recall a <def:seven-composite> is the product of natural numbers $ <var:k> $ , $ <var:o> $ , $ <var:m> $ , $ <var:Q> $ , $ <var:l> $ , $ <var:d> $ , and $ <var:x> $ satisfying the condition that $ <var:o> $ , $ <var:k> $ , $ <var:d> $ , $ <var:m> $ , $ <var:l> $ , $ <var:x> $ and $ <var:Q> > <nat:1> $ . We demonstrate <nat:45360> is a <def:seven-composite> integer seeing that $ <nat:5> $ , $ <nat:6> $ , $ <nat:9> $ , $ <nat:3> $ , $ <nat:2> $ , $ <nat:4> $ , and $ <nat:7> > <nat:1> $ plus in view of $ <nat:45360> = <var:m> * <var:k> * <var:d> * <var:l> * <var:Q> * <var:o> * <var:x> $ shows $ <var:k> = <nat:7> $ , $ <var:x> = <nat:3> $ , $ <var:l> = <nat:2> $ , $ <var:d> = <nat:4> $ , $ <var:o> = <nat:5> $ , $ <var:m> = <nat:6> $ and $ <var:Q> = <nat:9> $ . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:seven-composite> ( <var:E> : nat ) := exists <var:d> <var:k> <var:o> <var:Q> <var:m> <var:x> <var:l> : nat , ( <var:l> > <nat:1> ) /\ ( <var:o> > <nat:1> ) /\ ( <var:m> > <nat:1> ) /\ ( <var:x> > <nat:1> ) /\ ( <var:Q> > <nat:1> ) /\ ( <var:d> > <nat:1> ) /\ ( <var:k> > <nat:1> ) /\ ( <var:E> = <var:m> * <var:k> * <var:o> * <var:Q> * <var:x> * <var:l> * <var:d> ) . Theorem <genP:1> : <def:seven-composite> <nat:45360> . Proof . unfold <def:seven-composite> . assert ( <genH> : <nat:5> > <nat:1> ) . { lia . } assert ( <genH> : <nat:6> > <nat:1> ) . { lia . } assert ( <genH> : <nat:9> > <nat:1> ) . { lia . } assert ( <genH> : <nat:3> > <nat:1> ) . { lia . } assert ( <genH> : <nat:2> > <nat:1> ) . { lia . } assert ( <genH> : <nat:4> > <nat:1> ) . { lia . } assert ( <genH> : <nat:7> > <nat:1> ) . { lia . } exists <nat:4> . exists <nat:7> . exists <nat:5> . exists <nat:9> . exists <nat:6> . exists <nat:3> . exists <nat:2> . repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 