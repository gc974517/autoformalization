\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:132> \cdot <var:V> + <nat:468> \cdot <var:I> + <nat:246> \cdot <var:j> + <var:r> \cdot <nat:280> + <nat:182> + <nat:196> \cdot <var:m> + <var:D> \cdot <nat:378> + <nat:226> \cdot <var:v> + <nat:28> \cdot <var:z> $ must be even . \end{theorem} \begin{proof} We know the summation between an even element of $ \mathbb{Z}^+ $ with an even integer is by its very nature an even number in $ \mathbb{Z}^+ $ . The numbers $ <nat:226> $ , $ <nat:246> $ , $ <nat:132> $ , $ <nat:468> $ , $ <nat:280> $ , $ <nat:28> $ , plus $ <nat:196> $ are trivially even numbers in $ \mathbb{Z}^+ $ . In consequence , the terms $ <nat:226> \cdot <var:v> $ , $ <nat:246> \cdot <var:j> $ , $ <nat:132> \cdot <var:V> $ , $ <var:I> \cdot <nat:468> $ , $ <var:r> \cdot <nat:280> $ , $ <nat:28> \cdot <var:z> $ , and also $ <nat:196> \cdot <var:m> $ will be even too . The whole number $ <nat:378> $ is obviously even . As a consequence , the product $ <var:D> \cdot <nat:378> $ is guaranteed to be even at the same time . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:V> <var:I> <var:j> <var:r> <var:m> <var:D> <var:v> <var:z> : nat , Nat . even ( <nat:132> * <var:V> + <nat:468> * <var:I> + <nat:246> * <var:j> + <nat:280> * <var:r> + <nat:196> * <var:m> + <nat:378> * <var:D> + <nat:226> * <var:v> + <nat:28> * <var:z> + <nat:182> ) = true . Proof . intros . repeat rewrite Nat . even_add . assert ( <genH> : Nat . even <nat:226> = true ) . { auto . } assert ( <genH> : Nat . even <nat:246> = true ) . { auto . } assert ( <genH> : Nat . even <nat:132> = true ) . { auto . } assert ( <genH> : Nat . even <nat:468> = true ) . { auto . } assert ( <genH> : Nat . even <nat:280> = true ) . { auto . } assert ( <genH> : Nat . even <nat:28> = true ) . { auto . } assert ( <genH> : Nat . even <nat:196> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:226> * <var:v> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:246> * <var:j> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:132> * <var:V> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:468> * <var:I> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:280> * <var:r> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:28> * <var:z> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:196> * <var:m> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:378> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:378> * <var:D> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 