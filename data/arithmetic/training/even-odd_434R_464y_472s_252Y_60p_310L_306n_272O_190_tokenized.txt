\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:434> * <var:R> + <var:y> * <nat:464> + <nat:190> + <var:s> * <nat:472> + <var:Y> * <nat:252> + <nat:60> * <var:p> + <nat:310> * <var:L> + <var:n> * <nat:306> + <nat:272> * <var:O> $ is guaranteed to be even given some variables $ <var:s> $ , $ <var:O> $ , $ <var:R> $ , $ <var:p> $ , $ <var:n> $ , $ <var:L> $ , $ <var:Y> $ , and $ <var:y> $ . \end{theorem} \begin{proof} Recall that the terms $ <nat:434> * <var:R> $ , $ <nat:464> * <var:y> $ , $ <nat:472> * <var:s> $ , $ <nat:252> * <var:Y> $ , $ <var:p> * <nat:60> $ , $ <var:L> * <nat:310> $ , $ <var:n> * <nat:306> $ , plus $ <var:O> * <nat:272> $ must be even . This claim is true because the product of an even number in $ \mathbb{N} $ with an arbitrary number in $ \mathbb{N} $ will be by itself an even element of $ \mathbb{Z}^+ $ . This claim is proven by reason that the numbers $ <nat:434> $ , $ <nat:464> $ , $ <nat:472> $ , $ <nat:252> $ , $ <nat:60> $ , $ <nat:310> $ , $ <nat:306> $ , and $ <nat:272> $ are trivially even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:s> <var:O> <var:R> <var:p> <var:n> <var:L> <var:Y> <var:y> : nat , Nat . even ( <nat:434> * <var:R> + <nat:464> * <var:y> + <nat:472> * <var:s> + <nat:252> * <var:Y> + <nat:60> * <var:p> + <nat:310> * <var:L> + <nat:306> * <var:n> + <nat:272> * <var:O> + <nat:190> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:434> = true ) . { auto . } assert ( <genH> : Nat . even <nat:464> = true ) . { auto . } assert ( <genH> : Nat . even <nat:472> = true ) . { auto . } assert ( <genH> : Nat . even <nat:252> = true ) . { auto . } assert ( <genH> : Nat . even <nat:60> = true ) . { auto . } assert ( <genH> : Nat . even <nat:310> = true ) . { auto . } assert ( <genH> : Nat . even <nat:306> = true ) . { auto . } assert ( <genH> : Nat . even <nat:272> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:434> * <var:R> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:464> * <var:y> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:472> * <var:s> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:252> * <var:Y> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:60> * <var:p> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:310> * <var:L> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:306> * <var:n> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:272> * <var:O> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 