\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Claim that assuming there exist $ <var:q> $ , $ <var:N> $ , $ <var:m> $ , $ <var:l> $ , $ <var:i> $ , $ <var:j> $ , $ <var:G> $ , $ <var:r> $ , $ <var:Z> \in \mathbb{Z}^+ $ such that $ <var:j> $ , $ <var:G> $ , $ <var:i> $ , $ <var:Z> $ , $ <var:q> $ , $ <var:l> $ , $ <var:m> $ , $ <var:N> $ and $ <var:r> \geq <nat:2> $ . Let that some number $ <var:U> $ will be a <def:nine-composite> whole number assuming $ <var:m> \times <var:q> \times <var:Z> \times <var:j> \times <var:l> \times <var:G> \times <var:i> \times <var:N> \times <var:r> = <var:U> $ . Consequently <nat:17740800> is a <def:nine-composite> whole number . \end{theorem} \begin{proof} Recall a <def:nine-composite> natural number is the product between $ <var:G> $ , $ <var:m> $ , $ <var:j> $ , $ <var:N> $ , $ <var:i> $ , $ <var:r> $ , $ <var:l> $ , $ <var:q> $ and $ <var:Z> $ more than or equal to <nat:2> . Observe $ <nat:5> $ , $ <nat:4> $ , $ <nat:10> $ , $ <nat:8> $ , $ <nat:11> $ , $ <nat:12> $ , $ <nat:6> $ , $ <nat:7> $ , $ <nat:2> $ are larger than or equal to <nat:2> . Similarly observe that too $ <nat:17740800> = <nat:6> \times <nat:4> \times <nat:7> \times <nat:10> \times <nat:2> \times <nat:5> \times <nat:8> \times <nat:12> \times <nat:11> = <var:q> \times <var:r> \times <var:Z> \times <var:m> \times <var:j> \times <var:l> \times <var:i> \times <var:G> \times <var:N> $ . So , <nat:17740800> is a <def:nine-composite> positive integer has been validated . Because of this , $ <var:Z> \cdot <var:j> \cdot <var:r> \cdot <var:i> \cdot <var:m> \cdot <var:q> \cdot <var:l> \cdot <var:G> \cdot <var:N> = <nat:17740800> $ is verified . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:nine-composite> ( <var:U> : nat ) := exists <var:q> <var:N> <var:m> <var:l> <var:i> <var:j> <var:G> <var:r> <var:Z> : nat , ( <var:j> >= <nat:2> ) /\ ( <var:G> >= <nat:2> ) /\ ( <var:i> >= <nat:2> ) /\ ( <var:Z> >= <nat:2> ) /\ ( <var:q> >= <nat:2> ) /\ ( <var:l> >= <nat:2> ) /\ ( <var:m> >= <nat:2> ) /\ ( <var:N> >= <nat:2> ) /\ ( <var:r> >= <nat:2> ) /\ ( <var:m> * <var:q> * <var:Z> * <var:j> * <var:l> * <var:G> * <var:i> * <var:N> * <var:r> = <var:U> ) . Theorem <genP:1> : <def:nine-composite> <nat:17740800> . Proof . unfold <def:nine-composite> . assert ( <genH> : <nat:5> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:4> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:10> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:8> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:11> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:12> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:6> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:7> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:2> >= <nat:2> ) . { lia . } exists <nat:6> . exists <nat:11> . exists <nat:10> . exists <nat:5> . exists <nat:8> . exists <nat:2> . exists <nat:12> . exists <nat:4> . exists <nat:7> . repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 