\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:Q> \times <nat:78> + <nat:466> \times <var:E> + <nat:238> \times <var:z> + <var:n> \times <nat:428> + <nat:21> + <var:p> \times <nat:88> + <nat:440> \times <var:V> + <var:L> \times <nat:490> + <var:a> \times <nat:150> $ is guaranteed to be odd . \end{theorem} \begin{proof} The sum $ <var:a> \times <nat:150> + <nat:88> \times <var:p> + <var:V> \times <nat:440> + <nat:490> \times <var:L> + <var:z> \times <nat:238> + <nat:466> \times <var:E> + <var:n> \times <nat:428> + <nat:21> + <var:Q> \times <nat:78> $ is trivially odd from the fact $ <nat:88> \times <var:p> + <nat:428> \times <var:n> + <var:a> \times <nat:150> + <var:E> \times <nat:466> + <nat:78> \times <var:Q> + <var:z> \times <nat:238> + <var:L> \times <nat:490> + <nat:440> \times <var:V> $ is known to be even . The formula $ <nat:78> \cdot <var:Q> + <nat:428> \cdot <var:n> + <var:a> \cdot <nat:150> + <var:p> \cdot <nat:88> + <nat:440> \cdot <var:V> + <var:E> \cdot <nat:466> + <var:L> \cdot <nat:490> + <var:z> \cdot <nat:238> $ is by itself even because the summation between an even number in $ \mathbb{N} $ and an even whole number must be trivially an even natural number plus since multiplying of even integers with some natural number is even . It can be verified that the main result holds . See that $ <nat:21> $ is known as an odd number . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:Q> <var:E> <var:z> <var:n> <var:p> <var:V> <var:L> <var:a> : nat , Nat . odd ( <nat:78> * <var:Q> + <nat:466> * <var:E> + <nat:238> * <var:z> + <nat:428> * <var:n> + <nat:88> * <var:p> + <nat:440> * <var:V> + <nat:490> * <var:L> + <nat:150> * <var:a> + <nat:21> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:78> * <var:Q> + <nat:466> * <var:E> + <nat:238> * <var:z> + <nat:428> * <var:n> + <nat:88> * <var:p> + <nat:440> * <var:V> + <nat:490> * <var:L> + <nat:150> * <var:a> ) = true ) . { repeat rewrite Nat . even_add . repeat rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . odd <nat:21> = true ) . { auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . rewrite <genH> . auto . Qed . 