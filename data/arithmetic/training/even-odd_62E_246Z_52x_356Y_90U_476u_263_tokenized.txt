\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:E> <nat:62> + <nat:90> <var:U> + <nat:52> <var:x> + <var:Z> <nat:246> + <nat:356> <var:Y> + <nat:263> + <nat:476> <var:u> $ is guaranteed to be odd . \end{theorem} \begin{proof} We check our theorem is proven . See that $ <var:E> <nat:62> + <var:Z> <nat:246> + <nat:52> <var:x> + <nat:356> <var:Y> + <var:U> <nat:90> + <nat:476> <var:u> $ is trivially even , by reason that the adding of an even number in $ \mathbb{Z}^+ $ and an even natural number is by its very nature an even number in $ \mathbb{N} $ . Remember the terms $ <nat:246> <var:Z> $ , $ <var:E> <nat:62> $ , $ <nat:476> <var:u> $ , $ <var:U> <nat:90> $ , and moreover $ <nat:52> <var:x> $ are obviously even positive integers . This claim holds from the knowledge the multiplication between an even natural number with a number is guaranteed to be even . Likewise , take note $ <var:Y> <nat:356> $ is obviously even . This fact is proven because taking the product between an even number in $ \mathbb{Z}^+ $ with some natural number will be even . and likewise since the multiplication of even naturals with an arbitrary number in $ \mathbb{Z}^+ $ is guaranteed to be by itself an even natural this proposition holds . Remember the adding of even naturals together with an odd number in $ \mathbb{N} $ must be odd . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:E> <var:U> <var:x> <var:Z> <var:Y> <var:u> : nat , Nat . odd ( <nat:62> * <var:E> + <nat:90> * <var:U> + <nat:52> * <var:x> + <nat:246> * <var:Z> + <nat:356> * <var:Y> + <nat:476> * <var:u> + <nat:263> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:246> * <var:Z> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:62> * <var:E> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:476> * <var:u> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:90> * <var:U> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:52> * <var:x> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:356> * <var:Y> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:62> * <var:E> + <nat:90> * <var:U> + <nat:52> * <var:x> + <nat:246> * <var:Z> + <nat:356> * <var:Y> + <nat:476> * <var:u> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . auto . Qed . 