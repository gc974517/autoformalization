\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} For every natural numbers $ <var:U> $ , $ <var:O> $ , $ <var:f> $ , $ <var:E> $ , $ <var:d> $ , and $ <var:L> $ the sum $ <nat:298> * <var:O> + <var:f> * <nat:332> + <nat:466> * <var:L> + <var:d> * <nat:330> + <nat:486> * <var:E> + <nat:499> + <var:U> * <nat:44> $ will be odd . \end{theorem} \begin{proof} Take note $ <nat:499> $ is guaranteed to be odd . We demonstrate our claim is true . The natural numbers $ <nat:298> $ , $ <nat:332> $ , $ <nat:466> $ , $ <nat:330> $ , $ <nat:486> $ , plus $ <nat:44> $ must be even . So , the products $ <var:O> * <nat:298> $ , $ <nat:332> * <var:f> $ , $ <nat:466> * <var:L> $ , $ <var:d> * <nat:330> $ , $ <var:E> * <nat:486> $ , plus $ <var:U> * <nat:44> $ is guaranteed to be even as well . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:U> <var:O> <var:f> <var:E> <var:d> <var:L> : nat , Nat . odd ( <nat:298> * <var:O> + <nat:332> * <var:f> + <nat:466> * <var:L> + <nat:330> * <var:d> + <nat:486> * <var:E> + <nat:44> * <var:U> + <nat:499> ) = true . Proof . intros . assert ( <genH> : Nat . odd <nat:499> = true ) . { auto . } assert ( <genH> : Nat . even <nat:298> = true ) . { auto . } assert ( <genH> : Nat . even <nat:332> = true ) . { auto . } assert ( <genH> : Nat . even <nat:466> = true ) . { auto . } assert ( <genH> : Nat . even <nat:330> = true ) . { auto . } assert ( <genH> : Nat . even <nat:486> = true ) . { auto . } assert ( <genH> : Nat . even <nat:44> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:298> * <var:O> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:332> * <var:f> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:466> * <var:L> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:330> * <var:d> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:486> * <var:E> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:44> * <var:U> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 