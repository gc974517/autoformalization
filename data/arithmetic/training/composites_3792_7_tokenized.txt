\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Say that $ <var:C> $ is a <def:seven-composite> number with the condition that using some $ <var:A> $ , $ <var:M> $ , $ <var:Z> $ , $ <var:t> $ , $ <var:d> $ , $ <var:u> $ , $ <var:G> \in \mathbb{N} $ we have $ <var:d> $ , $ <var:Z> $ , $ <var:t> $ , $ <var:M> $ , $ <var:G> $ , $ <var:u> $ , $ <var:A> \geq <nat:2> $ plus using some whole number $ <var:C> $ , $ <var:Z> \cdot <var:u> \cdot <var:M> \cdot <var:d> \cdot <var:t> \cdot <var:A> \cdot <var:G> = <var:C> $ . Therefore the whole number <nat:136080> is <def:seven-composite> . \end{theorem} \begin{proof} Remember that <nat:136080> is a <def:seven-composite> natural number when <nat:136080> is the product of $ <var:t> $ , $ <var:A> $ , $ <var:u> $ , $ <var:M> $ , $ <var:G> $ , $ <var:Z> $ , and $ <var:d> $ larger than or equal to <nat:2> . We verify <nat:136080> is a <def:seven-composite> integer . We verify <nat:136080> is <def:seven-composite> considering $ <nat:5> $ , $ <nat:2> $ , $ <nat:12> $ , $ <nat:6> $ , $ <nat:3> $ , $ <nat:9> $ , and $ <nat:7> $ are greater than or equivalent to <nat:2> as well as because $ <var:G> \cdot <var:Z> \cdot <var:t> \cdot <var:A> \cdot <var:u> \cdot <var:M> \cdot <var:d> = <nat:136080> $ implies $ <var:A> = <nat:6> $ , $ <var:u> = <nat:3> $ , $ <var:M> = <nat:12> $ , $ <var:Z> = <nat:5> $ , $ <var:G> = <nat:9> $ , $ <var:t> = <nat:7> $ , $ <var:d> = <nat:2> $ . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:seven-composite> ( <var:C> : nat ) := exists <var:A> <var:M> <var:Z> <var:t> <var:d> <var:u> <var:G> : nat , ( <var:d> >= <nat:2> ) /\ ( <var:Z> >= <nat:2> ) /\ ( <var:t> >= <nat:2> ) /\ ( <var:M> >= <nat:2> ) /\ ( <var:G> >= <nat:2> ) /\ ( <var:u> >= <nat:2> ) /\ ( <var:A> >= <nat:2> ) /\ ( <var:Z> * <var:u> * <var:M> * <var:d> * <var:t> * <var:A> * <var:G> = <var:C> ) . Theorem <genP:1> : <def:seven-composite> <nat:136080> . Proof . unfold <def:seven-composite> . assert ( <genH> : <nat:5> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:2> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:12> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:6> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:3> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:9> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:7> >= <nat:2> ) . { lia . } exists <nat:6> . exists <nat:12> . exists <nat:5> . exists <nat:7> . exists <nat:2> . exists <nat:3> . exists <nat:9> . repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 