\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Granted that we get $ <var:h> = <var:D> \times <var:U> \times <var:O> \times <var:G> \times <var:m> \times <var:j> \times <var:T> \times <var:z> \times <var:u> $ given $ <var:h> \in \mathbb{Z}^+ $ and where $ <var:m> $ , $ <var:T> $ , $ <var:j> $ , $ <var:u> $ , $ <var:O> $ , $ <var:D> $ , $ <var:G> $ , $ <var:z> $ and $ <var:U> \geq <nat:2> $ , then denote that $ <var:h> $ is a <def:nine-composite> integer taking some positive integers $ <var:O> $ , $ <var:D> $ , $ <var:j> $ , $ <var:U> $ , $ <var:u> $ , $ <var:m> $ , $ <var:T> $ , $ <var:z> $ , $ <var:G> $ . Consequently $ <nat:19958400> = <var:h> $ is a <def:nine-composite> integer . \end{theorem} \begin{proof} Take $ <var:U> = <nat:6> $ , $ <var:u> = <nat:5> $ , $ <var:j> = <nat:9> $ , $ <var:z> = <nat:7> $ , $ <var:T> = <nat:11> $ , $ <var:O> = <nat:3> $ , $ <var:m> = <nat:8> $ , $ <var:D> = <nat:4> $ , $ <var:G> = <nat:10> $ . Notice $ <var:D> \cdot <var:j> \cdot <var:T> \cdot <var:z> \cdot <var:U> \cdot <var:G> \cdot <var:m> \cdot <var:u> \cdot <var:O> = <nat:19958400> $ . Additionally observe $ <var:j> = <nat:9> $ , $ <var:D> = <nat:4> $ , $ <var:G> = <nat:10> $ , $ <var:u> = <nat:5> $ , $ <var:T> = <nat:11> $ , $ <var:z> = <nat:7> $ , $ <var:m> = <nat:8> $ , $ <var:U> = <nat:6> $ , and $ <var:O> = <nat:3> \geq <nat:2> $ . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:nine-composite> ( <var:h> : nat ) := exists <var:O> <var:D> <var:j> <var:U> <var:u> <var:m> <var:T> <var:z> <var:G> : nat , ( <var:h> = <var:D> * <var:U> * <var:O> * <var:G> * <var:m> * <var:j> * <var:T> * <var:z> * <var:u> ) /\ ( <var:m> >= <nat:2> ) /\ ( <var:T> >= <nat:2> ) /\ ( <var:j> >= <nat:2> ) /\ ( <var:u> >= <nat:2> ) /\ ( <var:O> >= <nat:2> ) /\ ( <var:D> >= <nat:2> ) /\ ( <var:G> >= <nat:2> ) /\ ( <var:z> >= <nat:2> ) /\ ( <var:U> >= <nat:2> ) . Theorem <genP:1> : <def:nine-composite> <nat:19958400> . Proof . unfold <def:nine-composite> . exists <nat:3> . exists <nat:4> . exists <nat:9> . exists <nat:6> . exists <nat:5> . exists <nat:8> . exists <nat:11> . exists <nat:7> . exists <nat:10> . assert ( <genH> : <nat:9> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:4> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:10> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:5> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:11> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:7> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:8> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:6> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:3> >= <nat:2> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 