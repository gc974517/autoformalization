\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} The positive integer <nat:190080> is the product of numbers $ <var:m> $ , $ <var:d> $ , $ <var:j> $ , $ <var:h> $ , $ <var:E> $ , $ <var:z> $ , and $ <var:H> $ so that $ <var:m> $ , $ <var:j> $ , $ <var:d> $ , $ <var:z> $ , $ <var:H> $ , $ <var:E> $ , and $ <var:h> \geq <nat:2> $ . \end{theorem} \begin{proof} Take $ <var:d> = <nat:9> $ , $ <var:m> = <nat:8> $ , $ <var:j> = <nat:4> $ , $ <var:h> = <nat:10> $ , $ <var:H> = <nat:11> $ , $ <var:z> = <nat:3> $ , $ <var:E> = <nat:2> $ . We present <nat:190080> is the product of some $ <var:j> $ , $ <var:H> $ , $ <var:z> $ , $ <var:E> $ , $ <var:h> $ , $ <var:d> $ , and $ <var:m> $ plus $ <var:H> $ , $ <var:z> $ , $ <var:E> $ , $ <var:j> $ , $ <var:h> $ , $ <var:m> $ and $ <var:d> $ are more than or equal to <nat:2> . We justify our formula is true because $ <var:E> * <var:H> * <var:z> * <var:j> * <var:d> * <var:m> * <var:h> = <nat:190080> $ and as $ <var:j> = <nat:4> $ , $ <var:m> = <nat:8> $ , $ <var:E> = <nat:2> $ , $ <var:H> = <nat:11> $ , $ <var:z> = <nat:3> $ , $ <var:h> = <nat:10> $ and $ <var:d> = <nat:9> $ are more than or equivalent to <nat:2> . \end{proof} \end{document} 
~
Require Import Lia . Theorem <genP:1> : exists <var:m> <var:d> <var:j> <var:h> <var:E> <var:z> <var:H> : nat , ( <nat:190080> = <var:m> * <var:d> * <var:j> * <var:h> * <var:E> * <var:z> * <var:H> ) /\ ( <var:m> >= <nat:2> ) /\ ( <var:j> >= <nat:2> ) /\ ( <var:d> >= <nat:2> ) /\ ( <var:z> >= <nat:2> ) /\ ( <var:H> >= <nat:2> ) /\ ( <var:E> >= <nat:2> ) /\ ( <var:h> >= <nat:2> ) . Proof . exists <nat:8> . exists <nat:9> . exists <nat:4> . exists <nat:10> . exists <nat:2> . exists <nat:3> . exists <nat:11> . assert ( <genH> : <nat:4> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:8> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:2> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:11> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:3> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:10> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:9> >= <nat:2> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 