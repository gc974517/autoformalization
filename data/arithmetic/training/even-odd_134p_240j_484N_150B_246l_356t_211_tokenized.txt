\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:j> \times <nat:240> + <nat:150> \times <var:B> + <nat:134> \times <var:p> + <nat:246> \times <var:l> + <nat:211> + <nat:356> \times <var:t> + <nat:484> \times <var:N> $ must be odd with any whole numbers $ <var:B> $ , $ <var:p> $ , $ <var:l> $ , $ <var:N> $ , $ <var:j> $ , and $ <var:t> $ . \end{theorem} \begin{proof} It can be demonstrated that the summation $ <var:p> \times <nat:134> + <nat:240> \times <var:j> + <nat:211> + <nat:484> \times <var:N> + <nat:150> \times <var:B> + <var:l> \times <nat:246> + <nat:356> \times <var:t> $ will be odd . Recall that $ <nat:211> $ is known as an odd number . On top of this , notice that the coefficients $ <nat:134> $ , $ <nat:240> $ , $ <nat:484> $ , $ <nat:150> $ , $ <nat:246> $ , and $ <nat:356> $ are obviously even . Thus , the pairs $ <nat:134> \cdot <var:p> $ , $ <var:j> \cdot <nat:240> $ , $ <nat:484> \cdot <var:N> $ , $ <nat:150> \cdot <var:B> $ , $ <var:l> \cdot <nat:246> $ , and also $ <var:t> \cdot <nat:356> $ will be even also . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:B> <var:p> <var:l> <var:N> <var:j> <var:t> : nat , Nat . odd ( <nat:240> * <var:j> + <nat:150> * <var:B> + <nat:134> * <var:p> + <nat:246> * <var:l> + <nat:356> * <var:t> + <nat:484> * <var:N> + <nat:211> ) = true . Proof . intros . assert ( <genH> : Nat . odd <nat:211> = true ) . { auto . } assert ( <genH> : Nat . even <nat:134> = true ) . { auto . } assert ( <genH> : Nat . even <nat:240> = true ) . { auto . } assert ( <genH> : Nat . even <nat:484> = true ) . { auto . } assert ( <genH> : Nat . even <nat:150> = true ) . { auto . } assert ( <genH> : Nat . even <nat:246> = true ) . { auto . } assert ( <genH> : Nat . even <nat:356> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:134> * <var:p> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:240> * <var:j> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:484> * <var:N> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:150> * <var:B> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:246> * <var:l> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:356> * <var:t> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 