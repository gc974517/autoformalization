\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:P> \cdot <nat:188> + <nat:64> \cdot <var:Y> + <var:w> \cdot <nat:160> + <nat:169> + <var:Q> \cdot <nat:186> $ will be odd given every natural numbers $ <var:Y> $ , $ <var:P> $ , $ <var:Q> $ , and $ <var:w> $ . \end{theorem} \begin{proof} The products $ <nat:160> \cdot <var:w> $ and likewise $ <nat:188> \cdot <var:P> $ are trivially even naturals . This claim is true as a consequence that taking the product of an even natural number and an arbitrary whole number will be even . The term $ <var:Q> \cdot <nat:186> $ is obviously even . This holds from the fact taking the product between an even whole number with some natural will be instrinsically an even natural . See that the pair $ <nat:64> \cdot <var:Y> $ is known to be an even natural . This claim must be true as a consequence that multiplying between an even integer with some element of $ \mathbb{Z}^+ $ is guaranteed to be an even natural number . The totaling between even whole numbers concurrently and an odd element of $ \mathbb{N} $ is an odd whole number . As a consequence , the sum $ <nat:160> \cdot <var:w> + <var:Y> \cdot <nat:64> + <nat:186> \cdot <var:Q> + <nat:169> + <nat:188> \cdot <var:P> $ obviously is odd . Remember $ <nat:169> $ is known to be odd . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:Y> <var:P> <var:Q> <var:w> : nat , Nat . odd ( <nat:188> * <var:P> + <nat:64> * <var:Y> + <nat:160> * <var:w> + <nat:186> * <var:Q> + <nat:169> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:160> * <var:w> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:188> * <var:P> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:186> * <var:Q> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:64> * <var:Y> ) = true ) . { rewrite Nat . even_mul . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . assert ( <genH> : Nat . odd <nat:169> = true ) . { auto . } rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 