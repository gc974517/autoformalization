\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Granted we have $ <var:n> = <var:X> \cdot <var:v> \cdot <var:E> \cdot <var:u> \cdot <var:g> \cdot <var:f> \cdot <var:e> \cdot <var:q> \cdot <var:I> $ given $ <var:n> \in \mathbb{Z}^+ $ and such that $ <var:X> $ , $ <var:e> $ , $ <var:g> $ , $ <var:E> $ , $ <var:I> $ , $ <var:u> $ , $ <var:q> $ , $ <var:f> $ and $ <var:v> \geq <nat:2> $ , take as given that $ <var:n> $ is a <def:nine-composite> positive integer using some integers $ <var:I> $ , $ <var:f> $ , $ <var:E> $ , $ <var:g> $ , $ <var:u> $ , $ <var:q> $ , $ <var:X> $ , $ <var:e> $ , $ <var:v> $ . Consequently $ <var:n> = <nat:7983360> $ is a <def:nine-composite> positive integer . \end{theorem} \begin{proof} Remember that <nat:7983360> is a <def:nine-composite> integer supposing that it is the product of numbers $ <var:u> $ , $ <var:I> $ , $ <var:X> $ , $ <var:f> $ , $ <var:e> $ , $ <var:g> $ , $ <var:E> $ , $ <var:q> $ , and $ <var:v> $ more than or equivalent to <nat:2> . We verify <nat:7983360> is a <def:nine-composite> whole number . Notice that $ <nat:7983360> = <var:I> * <var:q> * <var:e> * <var:E> * <var:v> * <var:g> * <var:X> * <var:f> * <var:u> $ yields $ <var:q> = <nat:4> $ , $ <var:f> = <nat:7> $ , $ <var:u> = <nat:6> $ , $ <var:X> = <nat:2> $ , $ <var:I> = <nat:11> $ , $ <var:e> = <nat:8> $ , $ <var:g> = <nat:3> $ , $ <var:E> = <nat:9> $ and $ <var:v> = <nat:10> $ . Additionally observe $ <nat:2> $ , $ <nat:4> $ , $ <nat:7> $ , $ <nat:10> $ , $ <nat:9> $ , $ <nat:3> $ , $ <nat:8> $ , $ <nat:11> $ , and $ <nat:6> $ are larger than or equal to <nat:2> . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:nine-composite> ( <var:n> : nat ) := exists <var:I> <var:f> <var:E> <var:g> <var:u> <var:q> <var:X> <var:e> <var:v> : nat , ( <var:n> = <var:X> * <var:v> * <var:E> * <var:u> * <var:g> * <var:f> * <var:e> * <var:q> * <var:I> ) /\ ( <var:X> >= <nat:2> ) /\ ( <var:e> >= <nat:2> ) /\ ( <var:g> >= <nat:2> ) /\ ( <var:E> >= <nat:2> ) /\ ( <var:I> >= <nat:2> ) /\ ( <var:u> >= <nat:2> ) /\ ( <var:q> >= <nat:2> ) /\ ( <var:f> >= <nat:2> ) /\ ( <var:v> >= <nat:2> ) . Theorem <genP:1> : <def:nine-composite> <nat:7983360> . Proof . unfold <def:nine-composite> . exists <nat:11> . exists <nat:7> . exists <nat:9> . exists <nat:3> . exists <nat:6> . exists <nat:4> . exists <nat:2> . exists <nat:8> . exists <nat:10> . assert ( <genH> : <nat:2> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:4> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:7> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:10> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:9> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:3> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:8> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:11> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:6> >= <nat:2> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 