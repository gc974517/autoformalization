\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Taking any positive integers $ <var:K> $ , $ <var:n> $ , $ <var:x> $ , $ <var:B> $ , $ <var:D> $ , $ <var:N> $ , $ <var:H> $ , and $ <var:w> $ the sum $ <var:H> \cdot <nat:450> + <nat:102> \cdot <var:n> + <var:N> \cdot <nat:4> + <nat:158> \cdot <var:K> + <var:w> \cdot <nat:338> + <var:B> \cdot <nat:342> + <nat:141> + <nat:268> \cdot <var:D> + <nat:196> \cdot <var:x> $ is odd . \end{theorem} \begin{proof} $ <nat:196> <var:x> + <nat:268> <var:D> + <var:N> <nat:4> + <nat:338> <var:w> + <nat:342> <var:B> + <nat:450> <var:H> + <nat:158> <var:K> + <nat:102> <var:n> $ is known as even . See the addition between even elements of $ \mathbb{N} $ together and an even integer is guaranteed to be even . Notice that the products $ <nat:102> <var:n> $ , $ <nat:268> <var:D> $ , $ <nat:450> <var:H> $ , $ <var:w> <nat:338> $ , $ <var:N> <nat:4> $ , additionally $ <nat:196> <var:x> $ are known to be even . Adding on , see $ <var:K> <nat:158> $ is obviously an even positive integer . On top of this , the term $ <var:B> <nat:342> $ is obviously even . This fact must be true from the fact the multiplication between an even integer and an arbitrary element of $ \mathbb{Z}^+ $ is in itself an even element of $ \mathbb{Z}^+ $ . We know that the addition between even elements of $ \mathbb{Z}^+ $ concurrently and an odd whole number will be odd . Observe $ <nat:141> $ is clearly an odd number in $ \mathbb{Z}^+ $ . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:K> <var:n> <var:x> <var:B> <var:D> <var:N> <var:H> <var:w> : nat , Nat . odd ( <nat:450> * <var:H> + <nat:102> * <var:n> + <nat:4> * <var:N> + <nat:158> * <var:K> + <nat:338> * <var:w> + <nat:342> * <var:B> + <nat:268> * <var:D> + <nat:196> * <var:x> + <nat:141> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:102> * <var:n> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:268> * <var:D> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:450> * <var:H> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:338> * <var:w> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:4> * <var:N> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:196> * <var:x> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:158> * <var:K> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:342> * <var:B> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:450> * <var:H> + <nat:102> * <var:n> + <nat:4> * <var:N> + <nat:158> * <var:K> + <nat:338> * <var:w> + <nat:342> * <var:B> + <nat:268> * <var:D> + <nat:196> * <var:x> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . assert ( <genH> : Nat . odd <nat:141> = true ) . { auto . } rewrite <- Nat . negb_even . rewrite <genH> . rewrite <genH> . auto . Qed . 