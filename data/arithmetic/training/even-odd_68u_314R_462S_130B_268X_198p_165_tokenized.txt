\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Assuming some unknowns $ <var:B> $ , $ <var:p> $ , $ <var:S> $ , $ <var:R> $ , $ <var:u> $ , and $ <var:X> $ the expression $ <var:u> * <nat:68> + <nat:462> * <var:S> + <var:B> * <nat:130> + <nat:165> + <var:X> * <nat:268> + <nat:198> * <var:p> + <var:R> * <nat:314> $ will be odd . \end{theorem} \begin{proof} Remember that $ <nat:165> $ is guaranteed to be an odd whole number . The totaling between an even integer with an odd natural is guaranteed to be an odd number in $ \mathbb{N} $ . Our main result is proven because $ <nat:68> * <var:u> + <nat:314> * <var:R> + <var:S> * <nat:462> + <nat:130> * <var:B> + <var:X> * <nat:268> + <nat:198> * <var:p> $ is even . Furthermore , see that the products $ <var:u> \cdot <nat:68> $ , $ <nat:314> \cdot <var:R> $ , $ <nat:462> \cdot <var:S> $ , $ <var:B> \cdot <nat:130> $ , $ <var:X> \cdot <nat:268> $ , and also $ <var:p> \cdot <nat:198> $ are obviously even numbers from the knowledge the coefficients $ <nat:68> $ , $ <nat:314> $ , $ <nat:462> $ , $ <nat:130> $ , $ <nat:268> $ , as well as $ <nat:198> $ are known to be even numbers . The lemma must be true as a consequence that the summation between even elements of $ \mathbb{Z}^+ $ with an even number is even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:B> <var:p> <var:S> <var:R> <var:u> <var:X> : nat , Nat . odd ( <nat:68> * <var:u> + <nat:462> * <var:S> + <nat:130> * <var:B> + <nat:268> * <var:X> + <nat:198> * <var:p> + <nat:314> * <var:R> + <nat:165> ) = true . Proof . intros . assert ( <genH> : Nat . odd <nat:165> = true ) . { auto . } rewrite Nat . odd_add . assert ( <genH> : Nat . even <nat:68> = true ) . { auto . } assert ( <genH> : Nat . even <nat:314> = true ) . { auto . } assert ( <genH> : Nat . even <nat:462> = true ) . { auto . } assert ( <genH> : Nat . even <nat:130> = true ) . { auto . } assert ( <genH> : Nat . even <nat:268> = true ) . { auto . } assert ( <genH> : Nat . even <nat:198> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:68> * <var:u> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:314> * <var:R> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:462> * <var:S> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:130> * <var:B> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:268> * <var:X> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:198> * <var:p> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:68> * <var:u> + <nat:462> * <var:S> + <nat:130> * <var:B> + <nat:268> * <var:X> + <nat:198> * <var:p> + <nat:314> * <var:R> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite <- Nat . negb_even . rewrite <genH> . rewrite <genH> . auto . Qed . 