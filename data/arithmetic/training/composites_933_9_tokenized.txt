\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Assume that $ <var:A> $ is a <def:nine-composite> whole number supposing that there exist some $ <var:J> $ , $ <var:o> $ , $ <var:z> $ , $ <var:b> $ , $ <var:a> $ , $ <var:Z> $ , $ <var:P> $ , $ <var:p> $ , $ <var:N> $ where $ <var:z> \times <var:o> \times <var:p> \times <var:P> \times <var:N> \times <var:Z> \times <var:J> \times <var:b> \times <var:a> = <var:A> $ with $ <var:A> \in \mathbb{N} $ as well as so that $ <var:P> $ , $ <var:N> $ , $ <var:Z> $ , $ <var:J> $ , $ <var:b> $ , $ <var:z> $ , $ <var:p> $ , $ <var:o> $ , $ <var:a> \geq <nat:2> $ . Then $ <var:A> = <nat:8709120> $ is a <def:nine-composite> number . \end{theorem} \begin{proof} Remember that <nat:8709120> is a <def:nine-composite> integer supposing that it is the multiplication between natural numbers $ <var:a> $ , $ <var:Z> $ , $ <var:z> $ , $ <var:N> $ , $ <var:o> $ , $ <var:p> $ , $ <var:J> $ , $ <var:b> $ , and $ <var:P> $ so that $ <var:a> $ , $ <var:p> $ , $ <var:N> $ , $ <var:b> $ , $ <var:J> $ , $ <var:o> $ , $ <var:P> $ , $ <var:z> $ , and $ <var:Z> \geq <nat:2> $ . Assume $ <var:P> = <nat:8> $ , $ <var:z> = <nat:10> $ , $ <var:o> = <nat:3> $ , $ <var:Z> = <nat:4> $ , $ <var:p> = <nat:7> $ , $ <var:a> = <nat:9> $ , $ <var:b> = <nat:6> $ , $ <var:J> = <nat:2> $ , and $ <var:N> = <nat:12> $ . We show <nat:8709120> is a <def:nine-composite> whole number . Moreover note $ <var:P> = <nat:8> $ , $ <var:o> = <nat:3> $ , $ <var:Z> = <nat:4> $ , $ <var:b> = <nat:6> $ , $ <var:z> = <nat:10> $ , $ <var:N> = <nat:12> $ , $ <var:J> = <nat:2> $ , $ <var:p> = <nat:7> $ , $ <var:a> = <nat:9> $ are greater than or equivalent to <nat:2> . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:nine-composite> ( <var:A> : nat ) := exists <var:J> <var:o> <var:z> <var:b> <var:a> <var:Z> <var:P> <var:p> <var:N> : nat , ( <var:z> * <var:o> * <var:p> * <var:P> * <var:N> * <var:Z> * <var:J> * <var:b> * <var:a> = <var:A> ) /\ ( <var:P> >= <nat:2> ) /\ ( <var:N> >= <nat:2> ) /\ ( <var:Z> >= <nat:2> ) /\ ( <var:J> >= <nat:2> ) /\ ( <var:b> >= <nat:2> ) /\ ( <var:z> >= <nat:2> ) /\ ( <var:p> >= <nat:2> ) /\ ( <var:o> >= <nat:2> ) /\ ( <var:a> >= <nat:2> ) . Theorem <genP:1> : <def:nine-composite> <nat:8709120> . Proof . unfold <def:nine-composite> . exists <nat:2> . exists <nat:3> . exists <nat:10> . exists <nat:6> . exists <nat:9> . exists <nat:4> . exists <nat:8> . exists <nat:7> . exists <nat:12> . assert ( <genH> : <nat:8> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:3> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:4> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:6> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:10> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:12> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:2> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:7> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:9> >= <nat:2> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 