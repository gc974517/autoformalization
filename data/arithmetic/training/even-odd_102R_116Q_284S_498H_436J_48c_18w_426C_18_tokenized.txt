\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:w> * <nat:18> + <nat:498> * <var:H> + <var:S> * <nat:284> + <nat:436> * <var:J> + <var:R> * <nat:102> + <nat:426> * <var:C> + <nat:18> + <var:c> * <nat:48> + <var:Q> * <nat:116> $ will be even assuming whole numbers $ <var:C> $ , $ <var:Q> $ , $ <var:H> $ , $ <var:R> $ , $ <var:w> $ , $ <var:c> $ , $ <var:S> $ , and $ <var:J> $ . \end{theorem} \begin{proof} It can be shown that the sum $ <var:R> * <nat:102> + <nat:18> + <nat:116> * <var:Q> + <nat:284> * <var:S> + <var:H> * <nat:498> + <nat:436> * <var:J> + <var:c> * <nat:48> + <nat:18> * <var:w> + <var:C> * <nat:426> $ will be even with the fact the adding between even integers collectively with an even number in $ \mathbb{N} $ is guaranteed to be an even number . See the terms $ <nat:102> \times <var:R> $ , $ <nat:116> \times <var:Q> $ , $ <nat:284> \times <var:S> $ , $ <var:H> \times <nat:498> $ , $ <var:J> \times <nat:436> $ , $ <var:c> \times <nat:48> $ , $ <var:w> \times <nat:18> $ , and moreover $ <nat:426> \times <var:C> $ are guaranteed to be even positive integers from the knowledge the positive integers $ <nat:102> $ , $ <nat:116> $ , $ <nat:284> $ , $ <nat:498> $ , $ <nat:436> $ , $ <nat:48> $ , $ <nat:18> $ , in addition to $ <nat:426> $ are obviously even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:C> <var:Q> <var:H> <var:R> <var:w> <var:c> <var:S> <var:J> : nat , Nat . even ( <nat:18> * <var:w> + <nat:498> * <var:H> + <nat:284> * <var:S> + <nat:436> * <var:J> + <nat:102> * <var:R> + <nat:426> * <var:C> + <nat:48> * <var:c> + <nat:116> * <var:Q> + <nat:18> ) = true . Proof . intros . repeat rewrite Nat . even_add . assert ( <genH> : Nat . even <nat:102> = true ) . { auto . } assert ( <genH> : Nat . even <nat:116> = true ) . { auto . } assert ( <genH> : Nat . even <nat:284> = true ) . { auto . } assert ( <genH> : Nat . even <nat:498> = true ) . { auto . } assert ( <genH> : Nat . even <nat:436> = true ) . { auto . } assert ( <genH> : Nat . even <nat:48> = true ) . { auto . } assert ( <genH> : Nat . even <nat:18> = true ) . { auto . } assert ( <genH> : Nat . even <nat:426> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:102> * <var:R> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:116> * <var:Q> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:284> * <var:S> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:498> * <var:H> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:436> * <var:J> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:48> * <var:c> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:18> * <var:w> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:426> * <var:C> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 