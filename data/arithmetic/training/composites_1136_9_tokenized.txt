\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:59875200> $ is equivalent to $ <var:t> * <var:p> * <var:C> * <var:X> * <var:U> * <var:c> * <var:A> * <var:K> * <var:M> $ such that $ <var:A> $ , $ <var:U> $ , $ <var:t> $ , $ <var:K> $ , $ <var:p> $ , $ <var:M> $ , $ <var:X> $ , $ <var:C> $ , and $ <var:c> \geq <nat:2> $ . \end{theorem} \begin{proof} Let $ <var:t> = <nat:3> $ , $ <var:C> = <nat:11> $ , $ <var:p> = <nat:8> $ , $ <var:K> = <nat:12> $ , $ <var:U> = <nat:5> $ , $ <var:X> = <nat:7> $ , $ <var:c> = <nat:6> $ , $ <var:A> = <nat:10> $ , $ <var:M> = <nat:9> $ . We justify our thesis is true because Seeing that $ <nat:12> $ , $ <nat:5> $ , $ <nat:6> $ , $ <nat:9> $ , $ <nat:7> $ , $ <nat:3> $ , $ <nat:8> $ , $ <nat:11> $ , and $ <nat:10> $ are greater than or equal to <nat:2> . Consequently , <nat:59875200> is the product between $ <var:t> $ , $ <var:c> $ , $ <var:M> $ , $ <var:X> $ , $ <var:A> $ , $ <var:U> $ , $ <var:C> $ , $ <var:K> $ , and $ <var:p> \in \mathbb{Z}^+ $ is validated . \end{proof} \end{document} 
~
Require Import Lia . Theorem <genP:1> : exists <var:C> <var:M> <var:X> <var:U> <var:A> <var:c> <var:K> <var:t> <var:p> : nat , ( <nat:59875200> = <var:t> * <var:p> * <var:C> * <var:X> * <var:U> * <var:c> * <var:A> * <var:K> * <var:M> ) /\ ( <var:A> >= <nat:2> ) /\ ( <var:U> >= <nat:2> ) /\ ( <var:t> >= <nat:2> ) /\ ( <var:K> >= <nat:2> ) /\ ( <var:p> >= <nat:2> ) /\ ( <var:M> >= <nat:2> ) /\ ( <var:X> >= <nat:2> ) /\ ( <var:C> >= <nat:2> ) /\ ( <var:c> >= <nat:2> ) . Proof . exists <nat:11> . exists <nat:9> . exists <nat:7> . exists <nat:5> . exists <nat:10> . exists <nat:6> . exists <nat:12> . exists <nat:3> . exists <nat:8> . assert ( <genH> : <nat:12> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:5> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:6> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:9> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:7> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:3> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:8> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:11> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:10> >= <nat:2> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 