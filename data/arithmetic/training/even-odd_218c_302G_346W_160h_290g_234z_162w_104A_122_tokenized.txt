\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} With any positive terms $ <var:c> $ , $ <var:h> $ , $ <var:W> $ , $ <var:G> $ , $ <var:g> $ , $ <var:w> $ , $ <var:z> $ , and $ <var:A> $ the expression $ <nat:346> \cdot <var:W> + <var:z> \cdot <nat:234> + <nat:302> \cdot <var:G> + <var:w> \cdot <nat:162> + <var:c> \cdot <nat:218> + <nat:290> \cdot <var:g> + <nat:160> \cdot <var:h> + <var:A> \cdot <nat:104> + <nat:122> $ must be even . \end{theorem} \begin{proof} The pairs $ <var:h> \times <nat:160> $ , $ <nat:104> \times <var:A> $ , and $ <nat:302> \times <var:G> $ must be even elements of $ \mathbb{N} $ since the integers $ <nat:160> $ , $ <nat:104> $ , plus $ <nat:302> $ are clearly even . The integers $ <nat:218> $ , $ <nat:234> $ , $ <nat:162> $ , and also $ <nat:346> $ are known to be even . Consequently , the pairs $ <var:c> \times <nat:218> $ , $ <nat:234> \times <var:z> $ , $ <nat:162> \times <var:w> $ , additionally $ <var:W> \times <nat:346> $ is guaranteed to be even at the same time . Additionally , the pair $ <nat:290> \times <var:g> $ is obviously an even element of $ \mathbb{Z}^+ $ . This fact is proven from the knowledge the whole number $ <nat:290> $ is clearly an even natural . We prove our proposition is proven . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:c> <var:h> <var:W> <var:G> <var:g> <var:w> <var:z> <var:A> : nat , Nat . even ( <nat:346> * <var:W> + <nat:234> * <var:z> + <nat:302> * <var:G> + <nat:162> * <var:w> + <nat:218> * <var:c> + <nat:290> * <var:g> + <nat:160> * <var:h> + <nat:104> * <var:A> + <nat:122> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:160> = true ) . { auto . } assert ( <genH> : Nat . even <nat:104> = true ) . { auto . } assert ( <genH> : Nat . even <nat:302> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:160> * <var:h> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:104> * <var:A> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:302> * <var:G> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:218> = true ) . { auto . } assert ( <genH> : Nat . even <nat:234> = true ) . { auto . } assert ( <genH> : Nat . even <nat:162> = true ) . { auto . } assert ( <genH> : Nat . even <nat:346> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:218> * <var:c> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:234> * <var:z> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:162> * <var:w> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:346> * <var:W> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:290> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:290> * <var:g> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 