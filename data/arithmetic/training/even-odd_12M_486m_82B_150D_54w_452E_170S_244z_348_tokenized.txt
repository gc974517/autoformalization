\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:m> * <nat:486> + <nat:150> * <var:D> + <nat:82> * <var:B> + <var:E> * <nat:452> + <var:w> * <nat:54> + <nat:12> * <var:M> + <nat:348> + <var:z> * <nat:244> + <var:S> * <nat:170> $ is guaranteed to be even taking some $ <var:z> $ , $ <var:w> $ , $ <var:E> $ , $ <var:m> $ , $ <var:D> $ , $ <var:B> $ , $ <var:M> $ , and $ <var:S> \in \mathbb{Z}^+ $ . \end{theorem} \begin{proof} It can be proven that that $ <nat:348> + <var:M> \cdot <nat:12> + <var:S> \cdot <nat:170> + <nat:54> \cdot <var:w> + <var:E> \cdot <nat:452> + <nat:244> \cdot <var:z> + <nat:150> \cdot <var:D> + <var:B> \cdot <nat:82> + <var:m> \cdot <nat:486> $ is even from the fact $ <var:M> \times <nat:12> + <nat:486> \times <var:m> + <var:B> \times <nat:82> + <var:D> \times <nat:150> + <nat:54> \times <var:w> + <var:E> \times <nat:452> + <var:S> \times <nat:170> + <var:z> \times <nat:244> $ is trivially even . The products $ <nat:12> * <var:M> $ , $ <var:m> * <nat:486> $ , $ <var:B> * <nat:82> $ , $ <nat:150> * <var:D> $ , $ <nat:54> * <var:w> $ , $ <var:E> * <nat:452> $ , $ <nat:170> * <var:S> $ , $ <nat:244> * <var:z> $ , must be even . This claim is proven from the fact taking the product between an even natural with any element of $ \mathbb{N} $ must be even additionally the whole numbers $ <nat:12> $ , $ <nat:486> $ , $ <nat:82> $ , $ <nat:150> $ , $ <nat:54> $ , $ <nat:452> $ , $ <nat:170> $ , $ <nat:244> $ , are guaranteed to be obviously even elements of $ \mathbb{Z}^+ $ . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:z> <var:w> <var:E> <var:m> <var:D> <var:B> <var:M> <var:S> : nat , Nat . even ( <nat:486> * <var:m> + <nat:150> * <var:D> + <nat:82> * <var:B> + <nat:452> * <var:E> + <nat:54> * <var:w> + <nat:12> * <var:M> + <nat:244> * <var:z> + <nat:170> * <var:S> + <nat:348> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:12> = true ) . { auto . } assert ( <genH> : Nat . even <nat:486> = true ) . { auto . } assert ( <genH> : Nat . even <nat:82> = true ) . { auto . } assert ( <genH> : Nat . even <nat:150> = true ) . { auto . } assert ( <genH> : Nat . even <nat:54> = true ) . { auto . } assert ( <genH> : Nat . even <nat:452> = true ) . { auto . } assert ( <genH> : Nat . even <nat:170> = true ) . { auto . } assert ( <genH> : Nat . even <nat:244> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:12> * <var:M> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:486> * <var:m> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:82> * <var:B> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:150> * <var:D> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:54> * <var:w> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:452> * <var:E> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:170> * <var:S> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:244> * <var:z> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:486> * <var:m> + <nat:150> * <var:D> + <nat:82> * <var:B> + <nat:452> * <var:E> + <nat:54> * <var:w> + <nat:12> * <var:M> + <nat:244> * <var:z> + <nat:170> * <var:S> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . even_add . rewrite <genH> . auto . Qed . 