\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:g> <nat:422> + <var:H> <nat:482> + <var:l> <nat:270> + <var:R> <nat:362> + <var:G> <nat:232> + <var:c> <nat:290> + <nat:464> <var:s> + <nat:367> + <var:K> <nat:476> $ will be odd . \end{theorem} \begin{proof} Recall that $ <nat:422> <var:g> + <nat:482> <var:H> + <nat:476> <var:K> + <var:l> <nat:270> + <nat:290> <var:c> + <nat:367> + <var:R> <nat:362> + <var:G> <nat:232> + <nat:464> <var:s> $ is clearly odd from the knowledge $ <var:s> * <nat:464> + <nat:476> * <var:K> + <nat:290> * <var:c> + <var:R> * <nat:362> + <nat:270> * <var:l> + <var:g> * <nat:422> + <nat:482> * <var:H> + <nat:232> * <var:G> $ is clearly even . The leading terms $ <nat:270> $ and $ <nat:464> $ are known to be even naturals See that the leading terms $ <nat:232> $ , $ <nat:482> $ , and moreover $ <nat:476> $ are known to be even whole numbers Adding on , we know the integer $ <nat:290> $ is obviously even Furthermore , the number $ <nat:422> $ is even Adding on , recall that the leading term $ <nat:362> $ is known to be an even whole number Recall that $ <nat:367> $ is guaranteed to be odd . Recall that the summing of even numbers in $ \mathbb{Z}^+ $ concurrently and an odd integer will be an odd natural . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:g> <var:H> <var:l> <var:R> <var:G> <var:c> <var:s> <var:K> : nat , Nat . odd ( <nat:422> * <var:g> + <nat:482> * <var:H> + <nat:270> * <var:l> + <nat:362> * <var:R> + <nat:232> * <var:G> + <nat:290> * <var:c> + <nat:464> * <var:s> + <nat:476> * <var:K> + <nat:367> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:270> = true ) . { auto . } assert ( <genH> : Nat . even <nat:464> = true ) . { auto . } assert ( <genH> : Nat . even <nat:232> = true ) . { auto . } assert ( <genH> : Nat . even <nat:482> = true ) . { auto . } assert ( <genH> : Nat . even <nat:476> = true ) . { auto . } assert ( <genH> : Nat . even <nat:290> = true ) . { auto . } assert ( <genH> : Nat . even <nat:422> = true ) . { auto . } assert ( <genH> : Nat . even <nat:362> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:422> * <var:g> + <nat:482> * <var:H> + <nat:270> * <var:l> + <nat:362> * <var:R> + <nat:232> * <var:G> + <nat:290> * <var:c> + <nat:464> * <var:s> + <nat:476> * <var:K> ) = true ) . { repeat rewrite Nat . even_add . repeat rewrite Nat . even_mul . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } assert ( <genH> : Nat . odd <nat:367> = true ) . { auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . rewrite <genH> . auto . Qed . 