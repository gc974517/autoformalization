\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \newtheorem{definition}{Definition} \begin{document} \begin{definition} We define that $ <var:V> $ is a <def:nine-composite> whole number when for some $ <var:L> $ , $ <var:q> $ , $ <var:c> $ , $ <var:e> $ , $ <var:T> $ , $ <var:h> $ , $ <var:d> $ , $ <var:n> $ , $ <var:b> \in \mathbb{Z}^+ $ we get $ <var:q> $ , $ <var:n> $ , $ <var:h> $ , $ <var:T> $ , $ <var:b> $ , $ <var:L> $ , $ <var:d> $ , $ <var:e> $ , and $ <var:c> \geq <nat:2> $ and with some integer $ <var:V> $ , $ <var:V> = <var:L> \cdot <var:T> \cdot <var:c> \cdot <var:d> \cdot <var:e> \cdot <var:h> \cdot <var:q> \cdot <var:b> \cdot <var:n> $ . \end{definition} \begin{theorem} $ <var:V> = <nat:29937600> $ is <def:nine-composite> . \end{theorem} \begin{proof} Remember that a <def:nine-composite> integer is the multiplication of positive integers $ <var:L> $ , $ <var:n> $ , $ <var:q> $ , $ <var:e> $ , $ <var:d> $ , $ <var:c> $ , $ <var:h> $ , $ <var:T> $ and $ <var:b> $ greater than or equivalent to <nat:2> . We justify <nat:29937600> is <def:nine-composite> . Note that $ <nat:29937600> = <var:c> \times <var:n> \times <var:e> \times <var:b> \times <var:d> \times <var:L> \times <var:q> \times <var:T> \times <var:h> $ produces $ <var:c> = <nat:5> $ , $ <var:n> = <nat:10> $ , $ <var:T> = <nat:3> $ , $ <var:b> = <nat:7> $ , $ <var:q> = <nat:4> $ , $ <var:L> = <nat:9> $ , $ <var:e> = <nat:12> $ , $ <var:h> = <nat:6> $ , and $ <var:d> = <nat:11> $ . Moreover observe $ <nat:3> $ , $ <nat:10> $ , $ <nat:9> $ , $ <nat:11> $ , $ <nat:6> $ , $ <nat:4> $ , $ <nat:12> $ , $ <nat:7> $ and $ <nat:5> $ are greater than or equivalent to <nat:2> . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:nine-composite> ( <var:V> : nat ) := exists <var:L> <var:q> <var:c> <var:e> <var:T> <var:h> <var:d> <var:n> <var:b> : nat , ( <var:q> >= <nat:2> ) /\ ( <var:n> >= <nat:2> ) /\ ( <var:h> >= <nat:2> ) /\ ( <var:T> >= <nat:2> ) /\ ( <var:b> >= <nat:2> ) /\ ( <var:L> >= <nat:2> ) /\ ( <var:d> >= <nat:2> ) /\ ( <var:e> >= <nat:2> ) /\ ( <var:c> >= <nat:2> ) /\ ( <var:V> = <var:L> * <var:T> * <var:c> * <var:d> * <var:e> * <var:h> * <var:q> * <var:b> * <var:n> ) . Theorem <genP:1> : <def:nine-composite> <nat:29937600> . Proof . unfold <def:nine-composite> . exists <nat:9> . exists <nat:4> . exists <nat:5> . exists <nat:12> . exists <nat:3> . exists <nat:6> . exists <nat:11> . exists <nat:10> . exists <nat:7> . assert ( <genH> : <nat:3> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:10> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:9> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:11> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:6> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:4> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:12> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:7> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:5> >= <nat:2> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 