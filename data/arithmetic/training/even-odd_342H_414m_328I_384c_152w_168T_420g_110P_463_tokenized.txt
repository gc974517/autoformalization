\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:342> \cdot <var:H> + <var:w> \cdot <nat:152> + <nat:110> \cdot <var:P> + <var:T> \cdot <nat:168> + <var:g> \cdot <nat:420> + <var:I> \cdot <nat:328> + <nat:384> \cdot <var:c> + <var:m> \cdot <nat:414> + <nat:463> $ is odd . \end{theorem} \begin{proof} The formula $ <nat:168> * <var:T> + <nat:110> * <var:P> + <var:w> * <nat:152> + <var:g> * <nat:420> + <nat:384> * <var:c> + <var:m> * <nat:414> + <nat:463> + <var:I> * <nat:328> + <nat:342> * <var:H> $ is clearly odd from the knowledge the sum $ <var:H> \cdot <nat:342> + <nat:414> \cdot <var:m> + <var:I> \cdot <nat:328> + <var:c> \cdot <nat:384> + <var:w> \cdot <nat:152> + <var:T> \cdot <nat:168> + <var:g> \cdot <nat:420> + <nat:110> \cdot <var:P> $ is known as even . See the product of an even positive integer with an arbitrary number in $ \mathbb{N} $ must be an even integer . The numbers $ <nat:384> $ , $ <nat:342> $ , $ <nat:152> $ , $ <nat:414> $ , and moreover $ <nat:110> $ will be even Building on , take note the integers $ <nat:420> $ as well as $ <nat:168> $ are trivially even positive integers The number $ <nat:328> $ is known to be an even natural By reason that the addition of an even integer and an even number in $ \mathbb{N} $ must be even , See that $ <nat:463> $ is known as odd . The totaling between even numbers in $ \mathbb{N} $ concurrently with an odd number in $ \mathbb{N} $ must be an odd natural number . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:H> <var:w> <var:P> <var:T> <var:g> <var:I> <var:c> <var:m> : nat , Nat . odd ( <nat:342> * <var:H> + <nat:152> * <var:w> + <nat:110> * <var:P> + <nat:168> * <var:T> + <nat:420> * <var:g> + <nat:328> * <var:I> + <nat:384> * <var:c> + <nat:414> * <var:m> + <nat:463> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:384> = true ) . { auto . } assert ( <genH> : Nat . even <nat:342> = true ) . { auto . } assert ( <genH> : Nat . even <nat:152> = true ) . { auto . } assert ( <genH> : Nat . even <nat:414> = true ) . { auto . } assert ( <genH> : Nat . even <nat:110> = true ) . { auto . } assert ( <genH> : Nat . even <nat:420> = true ) . { auto . } assert ( <genH> : Nat . even <nat:168> = true ) . { auto . } assert ( <genH> : Nat . even <nat:328> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:342> * <var:H> + <nat:152> * <var:w> + <nat:110> * <var:P> + <nat:168> * <var:T> + <nat:420> * <var:g> + <nat:328> * <var:I> + <nat:384> * <var:c> + <nat:414> * <var:m> ) = true ) . { repeat rewrite Nat . even_add . repeat rewrite Nat . even_mul . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } assert ( <genH> : Nat . odd <nat:463> = true ) . { auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . rewrite <genH> . auto . Qed . 