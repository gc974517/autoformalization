\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:413> + <nat:120> * <var:t> + <var:P> * <nat:480> + <nat:156> * <var:C> + <nat:78> * <var:M> + <var:c> * <nat:198> + <var:p> * <nat:428> + <nat:196> * <var:V> + <nat:456> * <var:k> $ must be odd assuming some integers $ <var:V> $ , $ <var:M> $ , $ <var:C> $ , $ <var:p> $ , $ <var:c> $ , $ <var:k> $ , $ <var:P> $ , and $ <var:t> $ . \end{theorem} \begin{proof} The positive integers $ <nat:428> $ , $ <nat:456> $ , $ <nat:196> $ , $ <nat:78> $ , in addition to $ <nat:120> $ are even Additionally , take note that the number $ <nat:198> $ is known as an even natural number Take note that the positive integer $ <nat:156> $ is guaranteed to be even We know that the coefficient $ <nat:480> $ is obviously even Take note $ <nat:413> $ is clearly an odd whole number . The multiplication between an even whole number and some natural will be even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:V> <var:M> <var:C> <var:p> <var:c> <var:k> <var:P> <var:t> : nat , Nat . odd ( <nat:120> * <var:t> + <nat:480> * <var:P> + <nat:156> * <var:C> + <nat:78> * <var:M> + <nat:198> * <var:c> + <nat:428> * <var:p> + <nat:196> * <var:V> + <nat:456> * <var:k> + <nat:413> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:428> = true ) . { auto . } assert ( <genH> : Nat . even <nat:456> = true ) . { auto . } assert ( <genH> : Nat . even <nat:196> = true ) . { auto . } assert ( <genH> : Nat . even <nat:78> = true ) . { auto . } assert ( <genH> : Nat . even <nat:120> = true ) . { auto . } assert ( <genH> : Nat . even <nat:198> = true ) . { auto . } assert ( <genH> : Nat . even <nat:156> = true ) . { auto . } assert ( <genH> : Nat . even <nat:480> = true ) . { auto . } assert ( <genH> : Nat . odd <nat:413> = true ) . { auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . repeat rewrite Nat . even_mul . rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 