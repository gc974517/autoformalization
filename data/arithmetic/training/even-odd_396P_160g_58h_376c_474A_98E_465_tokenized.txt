\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Assuming any whole numbers $ <var:c> $ , $ <var:P> $ , $ <var:g> $ , $ <var:A> $ , $ <var:h> $ , and $ <var:E> $ the expression $ <var:E> \cdot <nat:98> + <var:P> \cdot <nat:396> + <var:h> \cdot <nat:58> + <var:A> \cdot <nat:474> + <var:c> \cdot <nat:376> + <var:g> \cdot <nat:160> + <nat:465> $ is odd . \end{theorem} \begin{proof} We show the expression $ <var:P> <nat:396> + <var:g> <nat:160> + <var:h> <nat:58> + <nat:465> + <var:c> <nat:376> + <nat:474> <var:A> + <var:E> <nat:98> $ will be odd . We know $ <nat:465> $ is trivially an odd number in $ \mathbb{N} $ . Furthermore , the products $ <var:P> \times <nat:396> $ , $ <var:g> \times <nat:160> $ , $ <var:h> \times <nat:58> $ , $ <var:c> \times <nat:376> $ , $ <var:A> \times <nat:474> $ , and $ <nat:98> \times <var:E> $ are known as even naturals from the knowledge the product between an even natural number with any whole number is even . This fact is proven as a consequence that the coefficients $ <nat:396> $ , $ <nat:160> $ , $ <nat:58> $ , $ <nat:376> $ , $ <nat:474> $ , and likewise $ <nat:98> $ are obviously even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:c> <var:P> <var:g> <var:A> <var:h> <var:E> : nat , Nat . odd ( <nat:98> * <var:E> + <nat:396> * <var:P> + <nat:58> * <var:h> + <nat:474> * <var:A> + <nat:376> * <var:c> + <nat:160> * <var:g> + <nat:465> ) = true . Proof . intros . assert ( <genH> : Nat . odd <nat:465> = true ) . { auto . } assert ( <genH> : Nat . even <nat:396> = true ) . { auto . } assert ( <genH> : Nat . even <nat:160> = true ) . { auto . } assert ( <genH> : Nat . even <nat:58> = true ) . { auto . } assert ( <genH> : Nat . even <nat:376> = true ) . { auto . } assert ( <genH> : Nat . even <nat:474> = true ) . { auto . } assert ( <genH> : Nat . even <nat:98> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:396> * <var:P> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:160> * <var:g> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:58> * <var:h> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:376> * <var:c> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:474> * <var:A> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:98> * <var:E> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 