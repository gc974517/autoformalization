\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:z> \times <nat:388> + <var:W> \times <nat:356> + <nat:18> \times <var:H> + <var:y> \times <nat:400> + <nat:108> \times <var:P> + <var:N> \times <nat:296> + <var:K> \times <nat:224> + <nat:463> + <nat:146> \times <var:B> $ must be odd . \end{theorem} \begin{proof} $ <nat:356> <var:W> $ is clearly an even integer . Further , recall the products $ <var:P> <nat:108> $ , $ <var:B> <nat:146> $ , and likewise $ <nat:388> <var:z> $ are obviously even naturals . On top of this , recall that the pairs $ <nat:18> <var:H> $ , $ <nat:224> <var:K> $ , and moreover $ <nat:400> <var:y> $ are trivially even natural numbers since taking the product of an even number and some natural number is obviously an even number in $ \mathbb{Z}^+ $ . The pair $ <var:N> <nat:296> $ is clearly even . Remember that $ <nat:463> $ is obviously odd . We demonstrate $ <nat:463> + <nat:108> <var:P> + <var:W> <nat:356> + <var:z> <nat:388> + <nat:400> <var:y> + <nat:146> <var:B> + <nat:224> <var:K> + <var:N> <nat:296> + <nat:18> <var:H> $ is odd . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:z> <var:W> <var:H> <var:y> <var:P> <var:N> <var:K> <var:B> : nat , Nat . odd ( <nat:388> * <var:z> + <nat:356> * <var:W> + <nat:18> * <var:H> + <nat:400> * <var:y> + <nat:108> * <var:P> + <nat:296> * <var:N> + <nat:224> * <var:K> + <nat:146> * <var:B> + <nat:463> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:356> * <var:W> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:108> * <var:P> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:146> * <var:B> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:388> * <var:z> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:18> * <var:H> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:224> * <var:K> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:400> * <var:y> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:296> * <var:N> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . odd <nat:463> = true ) . { auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 