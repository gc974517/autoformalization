\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \newtheorem{definition}{Definition} \begin{document} \begin{definition} We say that $ <var:K> $ is a <def:nine-composite> natural number wherever $ \exists <var:k> $ , $ <var:j> $ , $ <var:D> $ , $ <var:Q> $ , $ <var:G> $ , $ <var:L> $ , $ <var:R> $ , $ <var:W> $ , $ <var:N> \in \mathbb{N} $ such that $ <var:Q> $ , $ <var:L> $ , $ <var:R> $ , $ <var:j> $ , $ <var:k> $ , $ <var:D> $ , $ <var:W> $ , $ <var:N> $ and $ <var:G> \geq <nat:2> $ as well as taking some integer $ <var:K> $ , $ <var:K> = <var:D> * <var:Q> * <var:k> * <var:R> * <var:N> * <var:j> * <var:G> * <var:L> * <var:W> $ . \end{definition} \begin{theorem} $ <nat:15966720> = <var:K> $ is a <def:nine-composite> positive integer . \end{theorem} \begin{proof} Assume $ <var:Q> = <nat:7> $ , $ <var:L> = <nat:12> $ , $ <var:k> = <nat:11> $ , $ <var:j> = <nat:9> $ , $ <var:G> = <nat:2> $ , $ <var:D> = <nat:3> $ , $ <var:R> = <nat:10> $ , $ <var:W> = <nat:4> $ , $ <var:N> = <nat:8> $ . Furthermore observe $ <nat:12> $ , $ <nat:4> $ , $ <nat:3> $ , $ <nat:11> $ , $ <nat:2> $ , $ <nat:10> $ , $ <nat:7> $ , $ <nat:8> $ , $ <nat:9> $ are larger than or equivalent to <nat:2> . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:nine-composite> ( <var:K> : nat ) := exists <var:k> <var:j> <var:D> <var:Q> <var:G> <var:L> <var:R> <var:W> <var:N> : nat , ( <var:Q> >= <nat:2> ) /\ ( <var:L> >= <nat:2> ) /\ ( <var:R> >= <nat:2> ) /\ ( <var:j> >= <nat:2> ) /\ ( <var:k> >= <nat:2> ) /\ ( <var:D> >= <nat:2> ) /\ ( <var:W> >= <nat:2> ) /\ ( <var:N> >= <nat:2> ) /\ ( <var:G> >= <nat:2> ) /\ ( <var:K> = <var:D> * <var:Q> * <var:k> * <var:R> * <var:N> * <var:j> * <var:G> * <var:L> * <var:W> ) . Theorem <genP:1> : <def:nine-composite> <nat:15966720> . Proof . unfold <def:nine-composite> . exists <nat:11> . exists <nat:9> . exists <nat:3> . exists <nat:7> . exists <nat:2> . exists <nat:12> . exists <nat:10> . exists <nat:4> . exists <nat:8> . assert ( <genH> : <nat:12> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:4> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:3> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:11> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:2> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:10> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:7> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:8> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:9> >= <nat:2> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 