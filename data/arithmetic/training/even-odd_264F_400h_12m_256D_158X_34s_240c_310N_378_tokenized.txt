\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:400> \times <var:h> + <nat:34> \times <var:s> + <var:m> \times <nat:12> + <var:N> \times <nat:310> + <var:X> \times <nat:158> + <nat:256> \times <var:D> + <var:c> \times <nat:240> + <var:F> \times <nat:264> + <nat:378> $ will be even . \end{theorem} \begin{proof} Further , the products $ <nat:400> * <var:h> $ , $ <var:s> * <nat:34> $ , $ <nat:12> * <var:m> $ , $ <nat:310> * <var:N> $ , $ <nat:158> * <var:X> $ , $ <var:D> * <nat:256> $ , $ <nat:240> * <var:c> $ , $ <var:F> * <nat:264> $ , are clearly even . This claim must be true from the fact the product of an even number with some element of $ \mathbb{N} $ is even . This holds since the leading terms $ <nat:400> $ , $ <nat:34> $ , $ <nat:12> $ , $ <nat:310> $ , $ <nat:158> $ , $ <nat:256> $ , $ <nat:240> $ , $ <nat:264> $ , are guaranteed to be even . We show $ <var:F> \cdot <nat:264> + <var:h> \cdot <nat:400> + <nat:12> \cdot <var:m> + <nat:378> + <var:D> \cdot <nat:256> + <nat:158> \cdot <var:X> + <var:s> \cdot <nat:34> + <var:c> \cdot <nat:240> + <nat:310> \cdot <var:N> $ is guaranteed to be even . Recall that $ <nat:378> $ is clearly an even element of $ \mathbb{N} $ . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:h> <var:s> <var:m> <var:N> <var:X> <var:D> <var:c> <var:F> : nat , Nat . even ( <nat:400> * <var:h> + <nat:34> * <var:s> + <nat:12> * <var:m> + <nat:310> * <var:N> + <nat:158> * <var:X> + <nat:256> * <var:D> + <nat:240> * <var:c> + <nat:264> * <var:F> + <nat:378> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:400> = true ) . { auto . } assert ( <genH> : Nat . even <nat:34> = true ) . { auto . } assert ( <genH> : Nat . even <nat:12> = true ) . { auto . } assert ( <genH> : Nat . even <nat:310> = true ) . { auto . } assert ( <genH> : Nat . even <nat:158> = true ) . { auto . } assert ( <genH> : Nat . even <nat:256> = true ) . { auto . } assert ( <genH> : Nat . even <nat:240> = true ) . { auto . } assert ( <genH> : Nat . even <nat:264> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:400> * <var:h> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:34> * <var:s> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:12> * <var:m> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:310> * <var:N> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:158> * <var:X> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:256> * <var:D> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:240> * <var:c> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:264> * <var:F> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:378> = true ) . { auto . } repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 