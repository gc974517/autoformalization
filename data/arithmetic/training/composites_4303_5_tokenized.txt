\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Let $ <var:l> $ , $ <var:f> $ , $ <var:O> $ , $ <var:j> $ , $ <var:R> \in \mathbb{Z}^+ $ satisfying the condition that $ <var:l> $ , $ <var:O> $ , $ <var:R> $ , $ <var:f> $ and $ <var:j> > <nat:1> $ . Define that $ <var:h> \in \mathbb{Z}^+ $ will be considered to be <def:five-composite> assuming $ <var:h> = <var:f> * <var:j> * <var:l> * <var:R> * <var:O> $ . Consequently $ <nat:25920> = <var:h> $ is a <def:five-composite> positive integer . \end{theorem} \begin{proof} Allow $ <var:l> = <nat:3> $ , $ <var:R> = <nat:8> $ , $ <var:j> = <nat:12> $ , $ <var:O> = <nat:9> $ , $ <var:f> = <nat:10> $ . Observe $ <nat:12> \times <nat:9> \times <nat:8> \times <nat:3> \times <nat:10> = <var:j> \times <var:O> \times <var:R> \times <var:l> \times <var:f> = <nat:25920> $ . Plus note that $ <var:O> = <nat:9> $ , $ <var:R> = <nat:8> $ , $ <var:j> = <nat:12> $ , $ <var:f> = <nat:10> $ and $ <var:l> = <nat:3> > <nat:1> $ . This produces <nat:25920> is a <def:five-composite> number . As a consequence , $ <nat:25920> = <var:l> \times <var:f> \times <var:R> \times <var:j> \times <var:O> $ is proven . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:five-composite> ( <var:h> : nat ) := exists <var:l> <var:f> <var:O> <var:j> <var:R> : nat , ( <var:l> > <nat:1> ) /\ ( <var:O> > <nat:1> ) /\ ( <var:R> > <nat:1> ) /\ ( <var:f> > <nat:1> ) /\ ( <var:j> > <nat:1> ) /\ ( <var:h> = <var:f> * <var:j> * <var:l> * <var:R> * <var:O> ) . Theorem <genP:1> : <def:five-composite> <nat:25920> . Proof . unfold <def:five-composite> . exists <nat:3> . exists <nat:10> . exists <nat:9> . exists <nat:12> . exists <nat:8> . assert ( <genH> : <nat:9> > <nat:1> ) . { lia . } assert ( <genH> : <nat:8> > <nat:1> ) . { lia . } assert ( <genH> : <nat:12> > <nat:1> ) . { lia . } assert ( <genH> : <nat:10> > <nat:1> ) . { lia . } assert ( <genH> : <nat:3> > <nat:1> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 