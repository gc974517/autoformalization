\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:30> * <var:m> + <nat:29> + <nat:130> * <var:w> + <nat:460> * <var:D> + <var:K> * <nat:348> $ is odd for any whole numbers $ <var:m> $ , $ <var:D> $ , $ <var:K> $ , and $ <var:w> $ . \end{theorem} \begin{proof} We verify the sum $ <var:K> \cdot <nat:348> + <var:D> \cdot <nat:460> + <nat:29> + <var:w> \cdot <nat:130> + <var:m> \cdot <nat:30> $ is odd from the knowledge $ <var:K> \times <nat:348> + <nat:30> \times <var:m> + <var:w> \times <nat:130> + <nat:460> \times <var:D> $ is trivially even . The products $ <nat:30> * <var:m> $ , $ <var:K> * <nat:348> $ , as well as $ <nat:130> * <var:w> $ are clearly even positive integers . This is true by reason that taking the product between an even natural with some element of $ \mathbb{N} $ is an even number . Remember that $ <var:D> * <nat:460> $ is trivially an even whole number . This is true by reason that multiplying of an even natural with some positive integer must be an even natural . Since the addition of an even element of $ \mathbb{Z}^+ $ and an even natural is obviously an even whole number , and moreover as a consequence that taking the product between even elements of $ \mathbb{Z}^+ $ with an arbitrary positive integer is guaranteed to be even . Recall that $ <nat:29> $ is guaranteed to be an odd whole number . We know that the addition between even whole numbers concurrently and an odd whole number is guaranteed to be odd . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:m> <var:D> <var:K> <var:w> : nat , Nat . odd ( <nat:30> * <var:m> + <nat:130> * <var:w> + <nat:460> * <var:D> + <nat:348> * <var:K> + <nat:29> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:30> * <var:m> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:348> * <var:K> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:130> * <var:w> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:460> * <var:D> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:30> * <var:m> + <nat:130> * <var:w> + <nat:460> * <var:D> + <nat:348> * <var:K> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } assert ( <genH> : Nat . odd <nat:29> = true ) . { auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . rewrite <genH> . auto . Qed . 