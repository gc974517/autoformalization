\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Assuming we get $ <var:Y> $ , $ <var:G> $ , $ <var:O> $ , $ <var:c> $ , $ <var:V> \geq <nat:2> $ such that using some number $ <var:p> $ , $ <var:p> = <var:c> \cdot <var:O> \cdot <var:Y> \cdot <var:V> \cdot <var:G> $ using some $ <var:O> $ , $ <var:G> $ , $ <var:V> $ , $ <var:c> $ , $ <var:Y> \in \mathbb{Z}^+ $ , then define that $ <var:p> $ is <def:five-composite> . Consequently $ <var:p> = <nat:13440> $ is a <def:five-composite> integer . \end{theorem} \begin{proof} Remember a <def:five-composite> is the product between $ <var:V> $ , $ <var:G> $ , $ <var:Y> $ , $ <var:c> $ and $ <var:O> $ such that $ <var:O> $ , $ <var:Y> $ , $ <var:c> $ , $ <var:V> $ , and $ <var:G> \geq <nat:2> $ . Observe $ <nat:2> $ , $ <nat:10> $ , $ <nat:12> $ , $ <nat:8> $ , $ <nat:7> \geq <nat:2> $ . Further notice that further $ <nat:13440> = <var:Y> * <var:O> * <var:V> * <var:c> * <var:G> $ gives $ <var:c> = <nat:12> $ , $ <var:Y> = <nat:2> $ , $ <var:G> = <nat:10> $ , $ <var:V> = <nat:7> $ , $ <var:O> = <nat:8> $ . So , <nat:13440> is a <def:five-composite> number is verified . Hence , $ <var:O> $ , $ <var:Y> $ , $ <var:V> $ , $ <var:c> $ and $ <var:G> $ are more than or equivalent to <nat:2> as well as $ <nat:13440> = <var:c> \times <var:V> \times <var:G> \times <var:Y> \times <var:O> $ is validated . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:five-composite> ( <var:p> : nat ) := exists <var:O> <var:G> <var:V> <var:c> <var:Y> : nat , ( <var:Y> >= <nat:2> ) /\ ( <var:G> >= <nat:2> ) /\ ( <var:O> >= <nat:2> ) /\ ( <var:c> >= <nat:2> ) /\ ( <var:V> >= <nat:2> ) /\ ( <var:p> = <var:c> * <var:O> * <var:Y> * <var:V> * <var:G> ) . Theorem <genP:1> : <def:five-composite> <nat:13440> . Proof . unfold <def:five-composite> . assert ( <genH> : <nat:2> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:10> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:12> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:8> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:7> >= <nat:2> ) . { lia . } exists <nat:8> . exists <nat:10> . exists <nat:7> . exists <nat:12> . exists <nat:2> . repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 