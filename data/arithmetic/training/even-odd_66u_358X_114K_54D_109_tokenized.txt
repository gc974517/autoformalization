\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:K> <nat:114> + <nat:109> + <nat:54> <var:D> + <nat:358> <var:X> + <var:u> <nat:66> $ must be odd with any $ <var:D> $ , $ <var:K> $ , $ <var:u> $ , and $ <var:X> $ . \end{theorem} \begin{proof} The summation between an even number in $ \mathbb{Z}^+ $ with an odd number in $ \mathbb{N} $ must be odd . See $ <nat:109> $ is obviously an odd element of $ \mathbb{Z}^+ $ . Take note that the summation $ <nat:109> + <var:u> \times <nat:66> + <nat:358> \times <var:X> + <nat:54> \times <var:D> + <nat:114> \times <var:K> $ is known to be odd from the knowledge the summation $ <nat:66> \cdot <var:u> + <nat:358> \cdot <var:X> + <var:K> \cdot <nat:114> + <nat:54> \cdot <var:D> $ is clearly even . We know that the natural numbers $ <nat:66> $ , $ <nat:358> $ , $ <nat:114> $ , additionally $ <nat:54> $ are obviously even . In consequence , the pairs $ <var:u> <nat:66> $ , $ <var:X> <nat:358> $ , $ <var:K> <nat:114> $ , and also $ <var:D> <nat:54> $ is guaranteed to be even at the same time . By reason that the summation of an even element of $ \mathbb{Z}^+ $ with even naturals is guaranteed to be an even natural number , plus since the product between even natural numbers with an arbitrary natural number is guaranteed to be an even number in $ \mathbb{Z}^+ $ . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:D> <var:K> <var:u> <var:X> : nat , Nat . odd ( <nat:114> * <var:K> + <nat:54> * <var:D> + <nat:358> * <var:X> + <nat:66> * <var:u> + <nat:109> ) = true . Proof . intros . rewrite Nat . odd_add . assert ( <genH> : Nat . odd <nat:109> = true ) . { auto . } assert ( <genH> : Nat . even <nat:66> = true ) . { auto . } assert ( <genH> : Nat . even <nat:358> = true ) . { auto . } assert ( <genH> : Nat . even <nat:114> = true ) . { auto . } assert ( <genH> : Nat . even <nat:54> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:66> * <var:u> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:358> * <var:X> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:114> * <var:K> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:54> * <var:D> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:114> * <var:K> + <nat:54> * <var:D> + <nat:358> * <var:X> + <nat:66> * <var:u> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite <- Nat . negb_even . rewrite <genH> . rewrite <genH> . auto . Qed . 