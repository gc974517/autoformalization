\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Using every unknowns $ <var:h> $ , $ <var:c> $ , $ <var:z> $ , $ <var:b> $ , $ <var:v> $ , $ <var:U> $ , $ <var:f> $ , and $ <var:J> $ the expression $ <var:b> <nat:308> + <var:J> <nat:10> + <var:h> <nat:358> + <var:z> <nat:156> + <var:f> <nat:348> + <nat:418> <var:c> + <var:v> <nat:440> + <var:U> <nat:16> + <nat:109> $ is odd . \end{theorem} \begin{proof} It can be justified that this main result holds . Recall $ <nat:109> $ is obviously an odd positive integer . Notice the integer $ <nat:10> $ is obviously an even element of $ \mathbb{Z}^+ $ . Hence , the product $ <nat:10> * <var:J> $ will be even additionally . $ <nat:156> * <var:z> $ is even . This claim holds since the coefficient $ <nat:156> $ is obviously even . The pair $ <nat:440> * <var:v> $ is guaranteed to be even . This claim is true as a consequence that taking the product between an even element of $ \mathbb{Z}^+ $ and some number in $ \mathbb{N} $ will be an even number in $ \mathbb{N} $ . This claim is proven because the number $ <nat:440> $ is guaranteed to be an even natural . In addition , the positive integer $ <nat:358> $ is obviously an even integer . Accordingly , the product $ <var:h> * <nat:358> $ must be even in addition . Take note that the product $ <var:f> * <nat:348> $ is known as an even element of $ \mathbb{N} $ . This claim holds from the fact multiplying between an even positive integer with an arbitrary natural number must be even . This fact must be true by reason that the leading term $ <nat:348> $ is even . The product $ <var:U> * <nat:16> $ is clearly even from the fact multiplying between an even number in $ \mathbb{N} $ with some number will be even in addition to the leading term $ <nat:16> $ is known to be even . See that $ <var:c> * <nat:418> $ is known to be an even element of $ \mathbb{N} $ because the number $ <nat:418> $ is even . The pair $ <nat:308> * <var:b> $ is known as even . This fact holds since the product between an even element of $ \mathbb{N} $ with a number is guaranteed to be even additionally the number $ <nat:308> $ is an even element of $ \mathbb{Z}^+ $ . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:h> <var:c> <var:z> <var:b> <var:v> <var:U> <var:f> <var:J> : nat , Nat . odd ( <nat:308> * <var:b> + <nat:10> * <var:J> + <nat:358> * <var:h> + <nat:156> * <var:z> + <nat:348> * <var:f> + <nat:418> * <var:c> + <nat:440> * <var:v> + <nat:16> * <var:U> + <nat:109> ) = true . Proof . intros . assert ( <genH> : Nat . odd <nat:109> = true ) . { auto . } assert ( <genH> : Nat . even <nat:10> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:10> * <var:J> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:156> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:156> * <var:z> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:440> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:440> * <var:v> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:358> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:358> * <var:h> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:348> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:348> * <var:f> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:16> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:16> * <var:U> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:418> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:418> * <var:c> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:308> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:308> * <var:b> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 