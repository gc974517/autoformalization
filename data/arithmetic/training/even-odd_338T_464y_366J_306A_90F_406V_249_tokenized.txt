\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:366> \cdot <var:J> + <var:y> \cdot <nat:464> + <var:V> \cdot <nat:406> + <nat:90> \cdot <var:F> + <nat:306> \cdot <var:A> + <nat:249> + <var:T> \cdot <nat:338> $ will be odd assuming natural numbers $ <var:A> $ , $ <var:F> $ , $ <var:T> $ , $ <var:J> $ , $ <var:V> $ , and $ <var:y> $ . \end{theorem} \begin{proof} We check that the formula $ <var:T> * <nat:338> + <var:y> * <nat:464> + <var:J> * <nat:366> + <var:A> * <nat:306> + <var:F> * <nat:90> + <var:V> * <nat:406> $ is known to be even . Recall the pairs $ <nat:306> \times <var:A> $ , $ <var:T> \times <nat:338> $ , $ <var:V> \times <nat:406> $ , as well as $ <nat:366> \times <var:J> $ are even numbers . This holds from the knowledge the product of an even natural number with an arbitrary element of $ \mathbb{N} $ must be an even number in $ \mathbb{N} $ . $ <nat:90> \times <var:F> $ is known as even . We know that $ <nat:464> \times <var:y> $ is guaranteed to be even . The lemma is true as a consequence that the product of even numbers in $ \mathbb{N} $ with any element of $ \mathbb{Z}^+ $ is guaranteed to be even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:A> <var:F> <var:T> <var:J> <var:V> <var:y> : nat , Nat . odd ( <nat:366> * <var:J> + <nat:464> * <var:y> + <nat:406> * <var:V> + <nat:90> * <var:F> + <nat:306> * <var:A> + <nat:338> * <var:T> + <nat:249> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:306> * <var:A> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:338> * <var:T> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:406> * <var:V> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:366> * <var:J> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:90> * <var:F> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:464> * <var:y> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:366> * <var:J> + <nat:464> * <var:y> + <nat:406> * <var:V> + <nat:90> * <var:F> + <nat:306> * <var:A> + <nat:338> * <var:T> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . auto . Qed . 