\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:464> \cdot <var:k> + <nat:90> \cdot <var:f> + <var:L> \cdot <nat:122> + <nat:164> \cdot <var:x> + <var:c> \cdot <nat:44> + <nat:122> + <nat:460> \cdot <var:D> + <var:U> \cdot <nat:106> + <var:j> \cdot <nat:306> $ is even given any unknowns $ <var:f> $ , $ <var:U> $ , $ <var:L> $ , $ <var:j> $ , $ <var:c> $ , $ <var:x> $ , $ <var:k> $ , and $ <var:D> $ . \end{theorem} \begin{proof} The claim is proven from the fact $ <var:D> * <nat:460> + <nat:306> * <var:j> + <nat:106> * <var:U> + <var:c> * <nat:44> + <var:f> * <nat:90> + <nat:122> * <var:L> + <var:k> * <nat:464> + <var:x> * <nat:164> $ is known as even . Notice the totaling between even integers must be even . The products $ <var:U> * <nat:106> $ and also $ <var:f> * <nat:90> $ will be even . The products $ <nat:164> * <var:x> $ , $ <nat:306> * <var:j> $ , $ <var:c> * <nat:44> $ , and $ <nat:464> * <var:k> $ must be even from the knowledge multiplying of an even positive integer and some positive integer is even . Notice that the product $ <nat:460> * <var:D> $ is clearly even . In addition to this , the pair $ <var:L> * <nat:122> $ is trivially an even element of $ \mathbb{N} $ . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:f> <var:U> <var:L> <var:j> <var:c> <var:x> <var:k> <var:D> : nat , Nat . even ( <nat:464> * <var:k> + <nat:90> * <var:f> + <nat:122> * <var:L> + <nat:164> * <var:x> + <nat:44> * <var:c> + <nat:460> * <var:D> + <nat:106> * <var:U> + <nat:306> * <var:j> + <nat:122> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:106> * <var:U> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:90> * <var:f> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:164> * <var:x> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:306> * <var:j> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:44> * <var:c> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:464> * <var:k> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:460> * <var:D> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:122> * <var:L> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:464> * <var:k> + <nat:90> * <var:f> + <nat:122> * <var:L> + <nat:164> * <var:x> + <nat:44> * <var:c> + <nat:460> * <var:D> + <nat:106> * <var:U> + <nat:306> * <var:j> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . even_add . rewrite <genH> . auto . Qed . 