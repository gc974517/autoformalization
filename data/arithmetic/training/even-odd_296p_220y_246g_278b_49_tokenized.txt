\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:p> <nat:296> + <var:y> <nat:220> + <nat:49> + <nat:246> <var:g> + <nat:278> <var:b> $ is guaranteed to be odd . \end{theorem} \begin{proof} The products $ <nat:296> <var:p> $ , $ <var:y> <nat:220> $ , $ <var:g> <nat:246> $ , additionally $ <nat:278> <var:b> $ are even elements of $ \mathbb{N} $ . This claim holds by reason that the multiplication of an even integer and some element of $ \mathbb{Z}^+ $ is by definition an even positive integer . This holds from the fact the numbers $ <nat:296> $ , $ <nat:220> $ , $ <nat:246> $ , and likewise $ <nat:278> $ are known as even . Recall $ <nat:49> $ is clearly odd . We check the proposition is true applying the knowledge the summing of even numbers in $ \mathbb{N} $ successively with an odd element of $ \mathbb{Z}^+ $ must be odd . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:p> <var:y> <var:g> <var:b> : nat , Nat . odd ( <nat:296> * <var:p> + <nat:220> * <var:y> + <nat:246> * <var:g> + <nat:278> * <var:b> + <nat:49> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:296> = true ) . { auto . } assert ( <genH> : Nat . even <nat:220> = true ) . { auto . } assert ( <genH> : Nat . even <nat:246> = true ) . { auto . } assert ( <genH> : Nat . even <nat:278> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:296> * <var:p> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:220> * <var:y> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:246> * <var:g> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:278> * <var:b> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . odd <nat:49> = true ) . { auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 