\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:200> \cdot <var:w> + <var:j> \cdot <nat:344> + <var:T> \cdot <nat:396> + <nat:124> \cdot <var:M> + <var:u> \cdot <nat:314> + <nat:102> \cdot <var:n> + <var:o> \cdot <nat:498> + <nat:413> + <var:G> \cdot <nat:48> $ must be odd with some integers $ <var:M> $ , $ <var:n> $ , $ <var:u> $ , $ <var:o> $ , $ <var:j> $ , $ <var:G> $ , $ <var:T> $ , and $ <var:w> $ . \end{theorem} \begin{proof} See that $ <nat:413> $ is odd . The summing of an even number and an odd integer is guaranteed to be odd . Take note that the terms $ <var:u> \cdot <nat:314> $ , $ <nat:102> \cdot <var:n> $ , $ <nat:200> \cdot <var:w> $ , $ <nat:498> \cdot <var:o> $ , $ <nat:48> \cdot <var:G> $ , $ <nat:344> \cdot <var:j> $ , in addition to $ <nat:396> \cdot <var:T> $ will be even numbers in $ \mathbb{N} $ . Building on , the product $ <nat:124> \cdot <var:M> $ is even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:M> <var:n> <var:u> <var:o> <var:j> <var:G> <var:T> <var:w> : nat , Nat . odd ( <nat:200> * <var:w> + <nat:344> * <var:j> + <nat:396> * <var:T> + <nat:124> * <var:M> + <nat:314> * <var:u> + <nat:102> * <var:n> + <nat:498> * <var:o> + <nat:48> * <var:G> + <nat:413> ) = true . Proof . intros . assert ( <genH> : Nat . odd <nat:413> = true ) . { auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . assert ( <genH> : Nat . even ( <nat:314> * <var:u> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:102> * <var:n> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:200> * <var:w> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:498> * <var:o> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:48> * <var:G> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:344> * <var:j> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:396> * <var:T> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:124> * <var:M> ) = true ) . { rewrite Nat . even_mul . auto . } rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 