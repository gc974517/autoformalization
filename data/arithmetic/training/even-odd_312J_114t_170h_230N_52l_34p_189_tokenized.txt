\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:N> * <nat:230> + <nat:114> * <var:t> + <var:p> * <nat:34> + <var:J> * <nat:312> + <var:h> * <nat:170> + <var:l> * <nat:52> + <nat:189> $ is guaranteed to be odd with every $ <var:J> $ , $ <var:l> $ , $ <var:h> $ , $ <var:t> $ , $ <var:N> $ , and $ <var:p> $ . \end{theorem} \begin{proof} We demonstrate the theorem is proven . The expression $ <var:p> * <nat:34> + <nat:52> * <var:l> + <nat:170> * <var:h> + <nat:312> * <var:J> + <nat:114> * <var:t> + <nat:189> + <var:N> * <nat:230> $ is known to be odd since the expression $ <nat:312> <var:J> + <var:t> <nat:114> + <nat:170> <var:h> + <var:N> <nat:230> + <var:l> <nat:52> + <nat:34> <var:p> $ is guaranteed to be even . Observe that the terms $ <var:p> \times <nat:34> $ , $ <var:h> \times <nat:170> $ , $ <nat:230> \times <var:N> $ , $ <var:l> \times <nat:52> $ , and likewise $ <var:J> \times <nat:312> $ are obviously even . This fact must be true from the fact taking the product between an even integer and any element of $ \mathbb{Z}^+ $ will be even . The product $ <nat:114> \times <var:t> $ is clearly an even natural number . As a consequence that the summing of even natural numbers and an even element of $ \mathbb{Z}^+ $ will be even , our main result is true . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:J> <var:l> <var:h> <var:t> <var:N> <var:p> : nat , Nat . odd ( <nat:230> * <var:N> + <nat:114> * <var:t> + <nat:34> * <var:p> + <nat:312> * <var:J> + <nat:170> * <var:h> + <nat:52> * <var:l> + <nat:189> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:34> * <var:p> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:170> * <var:h> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:230> * <var:N> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:52> * <var:l> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:312> * <var:J> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:114> * <var:t> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:230> * <var:N> + <nat:114> * <var:t> + <nat:34> * <var:p> + <nat:312> * <var:J> + <nat:170> * <var:h> + <nat:52> * <var:l> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . auto . Qed . 