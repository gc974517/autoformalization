\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:t> * <nat:134> + <nat:123> + <nat:396> * <var:P> + <nat:442> * <var:H> + <nat:304> * <var:R> + <var:F> * <nat:378> + <var:x> * <nat:180> + <var:c> * <nat:170> + <var:W> * <nat:364> $ will be odd given all positive numbers $ <var:P> $ , $ <var:H> $ , $ <var:F> $ , $ <var:W> $ , $ <var:R> $ , $ <var:t> $ , $ <var:x> $ , and $ <var:c> $ . \end{theorem} \begin{proof} Take note taking the product between even positive integers must be an even element of $ \mathbb{Z}^+ $ . See that the numbers $ <nat:364> $ , $ <nat:378> $ , $ <nat:442> $ , $ <nat:180> $ , and also $ <nat:170> $ are known to be even In addition , see that the positive integers $ <nat:134> $ plus $ <nat:396> $ are obviously even In addition to this , take note the natural number $ <nat:304> $ is an even element of $ \mathbb{N} $ \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:P> <var:H> <var:F> <var:W> <var:R> <var:t> <var:x> <var:c> : nat , Nat . odd ( <nat:134> * <var:t> + <nat:396> * <var:P> + <nat:442> * <var:H> + <nat:304> * <var:R> + <nat:378> * <var:F> + <nat:180> * <var:x> + <nat:170> * <var:c> + <nat:364> * <var:W> + <nat:123> ) = true . Proof . intros . rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . repeat rewrite Nat . even_mul . assert ( <genH> : Nat . even <nat:364> = true ) . { auto . } assert ( <genH> : Nat . even <nat:378> = true ) . { auto . } assert ( <genH> : Nat . even <nat:442> = true ) . { auto . } assert ( <genH> : Nat . even <nat:180> = true ) . { auto . } assert ( <genH> : Nat . even <nat:170> = true ) . { auto . } assert ( <genH> : Nat . even <nat:134> = true ) . { auto . } assert ( <genH> : Nat . even <nat:396> = true ) . { auto . } assert ( <genH> : Nat . even <nat:304> = true ) . { auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 