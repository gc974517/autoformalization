\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:p> \times <nat:4> + <nat:114> \times <var:P> + <nat:284> \times <var:V> + <nat:272> \times <var:K> + <var:Y> \times <nat:40> + <nat:162> \times <var:O> + <nat:398> $ must be even . \end{theorem} \begin{proof} The addition of an even element of $ \mathbb{N} $ with an even natural is guaranteed to be even . Recall that $ <nat:398> $ is known to be even . The leading term $ <nat:4> $ is known as even . Consequently , the term $ <nat:4> * <var:p> $ is even as well . The product $ <var:P> * <nat:114> $ is known as even . This claim is proven from the knowledge multiplying between an even element of $ \mathbb{Z}^+ $ and an arbitrary number in $ \mathbb{Z}^+ $ will be even . This is proven from the knowledge the natural number $ <nat:114> $ is known to be an even element of $ \mathbb{Z}^+ $ . Adding on , the integer $ <nat:40> $ is known to be even . Hence , the term $ <var:Y> * <nat:40> $ is guaranteed to be even too . Adding on , the term $ <nat:284> * <var:V> $ is even from the fact the natural number $ <nat:284> $ is trivially even . In addition , the leading term $ <nat:272> $ is known as an even whole number . As a consequence , $ <var:K> * <nat:272> $ will be even too . In addition , the leading term $ <nat:162> $ is guaranteed to be even . Hence , $ <var:O> * <nat:162> $ is even additionally . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:p> <var:P> <var:V> <var:K> <var:Y> <var:O> : nat , Nat . even ( <nat:4> * <var:p> + <nat:114> * <var:P> + <nat:284> * <var:V> + <nat:272> * <var:K> + <nat:40> * <var:Y> + <nat:162> * <var:O> + <nat:398> ) = true . Proof . intros . repeat rewrite Nat . even_add . assert ( <genH> : Nat . even <nat:398> = true ) . { auto . } assert ( <genH> : Nat . even <nat:4> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:4> * <var:p> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:114> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:114> * <var:P> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:40> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:40> * <var:Y> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:284> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:284> * <var:V> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:272> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:272> * <var:K> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:162> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:162> * <var:O> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 