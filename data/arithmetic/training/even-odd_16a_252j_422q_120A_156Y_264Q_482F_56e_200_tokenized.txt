\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} For all variables $ <var:Y> $ , $ <var:q> $ , $ <var:A> $ , $ <var:F> $ , $ <var:Q> $ , $ <var:e> $ , $ <var:a> $ , and $ <var:j> $ $ <nat:252> \times <var:j> + <nat:120> \times <var:A> + <var:a> \times <nat:16> + <var:F> \times <nat:482> + <var:Y> \times <nat:156> + <nat:200> + <nat:422> \times <var:q> + <var:Q> \times <nat:264> + <nat:56> \times <var:e> $ will be even . \end{theorem} \begin{proof} Observe that the addition of an even element of $ \mathbb{Z}^+ $ with an even whole number will be an even number in $ \mathbb{N} $ . Take note the natural number $ <nat:16> $ is obviously an even natural . Consequently , $ <nat:16> * <var:a> $ will be even in addition . $ <var:j> * <nat:252> $ is trivially an even positive integer from the fact the product between an even element of $ \mathbb{Z}^+ $ with any number in $ \mathbb{N} $ must be even , which must be true from the knowledge the coefficient $ <nat:252> $ is clearly even . The integer $ <nat:422> $ is trivially an even natural number . For this reason , the term $ <var:q> * <nat:422> $ is even also . Observe the pair $ <nat:120> * <var:A> $ is known to be even as a consequence that taking the product between an even element of $ \mathbb{N} $ with an arbitrary number in $ \mathbb{N} $ must be even . This fact holds by reason that the natural number $ <nat:120> $ is obviously an even integer . The number $ <nat:156> $ is trivially even . Consequently , the pair $ <nat:156> * <var:Y> $ must be even as well . On top of this , the term $ <var:Q> * <nat:264> $ is an even positive integer from the knowledge the product between an even number in $ \mathbb{N} $ with an arbitrary number is guaranteed to be even . This fact must be true from the knowledge the coefficient $ <nat:264> $ is clearly even . See that the whole number $ <nat:482> $ is clearly even . Hence , the product $ <var:F> * <nat:482> $ is guaranteed to be even at the same time . The whole number $ <nat:56> $ is known to be even . So , $ <var:e> * <nat:56> $ must be even too . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:Y> <var:q> <var:A> <var:F> <var:Q> <var:e> <var:a> <var:j> : nat , Nat . even ( <nat:252> * <var:j> + <nat:120> * <var:A> + <nat:16> * <var:a> + <nat:482> * <var:F> + <nat:156> * <var:Y> + <nat:422> * <var:q> + <nat:264> * <var:Q> + <nat:56> * <var:e> + <nat:200> ) = true . Proof . intros . repeat rewrite Nat . even_add . assert ( <genH> : Nat . even <nat:16> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:16> * <var:a> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:252> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:252> * <var:j> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:422> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:422> * <var:q> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:120> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:120> * <var:A> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:156> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:156> * <var:Y> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:264> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:264> * <var:Q> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:482> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:482> * <var:F> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:56> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:56> * <var:e> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 