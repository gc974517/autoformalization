\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \newtheorem{definition}{Definition} \begin{document} \begin{definition} Assume $ <var:s> $ , $ <var:r> $ , $ <var:v> $ , $ <var:R> $ , $ <var:P> $ , $ <var:J> $ , $ <var:K> \in \mathbb{Z}^+ $ satisfying the condition that $ <var:P> $ , $ <var:K> $ , $ <var:R> $ , $ <var:J> $ , $ <var:v> $ , $ <var:s> $ and $ <var:r> > <nat:1> $ . We say that some whole number $ <var:L> $ is defined as a <def:seven-composite> natural number when $ <var:P> \cdot <var:s> \cdot <var:K> \cdot <var:v> \cdot <var:J> \cdot <var:r> \cdot <var:R> = <var:L> $ . \end{definition} \begin{theorem} The whole number <nat:855360> is a <def:seven-composite> number . \end{theorem} \begin{proof} Note $ <nat:855360> = <nat:10> * <nat:6> * <nat:4> * <nat:12> * <nat:11> * <nat:9> * <nat:3> $ . Plus notice that $ <nat:4> $ , $ <nat:6> $ , $ <nat:9> $ , $ <nat:3> $ , $ <nat:10> $ , $ <nat:12> $ , $ <nat:11> > <nat:1> $ . Therefore , <nat:855360> is the product of $ <var:K> $ , $ <var:r> $ , $ <var:v> $ , $ <var:P> $ , $ <var:J> $ , $ <var:R> $ , $ <var:s> \in \mathbb{N} $ is true has been proven . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:seven-composite> ( <var:L> : nat ) := exists <var:s> <var:r> <var:v> <var:R> <var:P> <var:J> <var:K> : nat , ( <var:P> > <nat:1> ) /\ ( <var:K> > <nat:1> ) /\ ( <var:R> > <nat:1> ) /\ ( <var:J> > <nat:1> ) /\ ( <var:v> > <nat:1> ) /\ ( <var:s> > <nat:1> ) /\ ( <var:r> > <nat:1> ) /\ ( <var:P> * <var:s> * <var:K> * <var:v> * <var:J> * <var:r> * <var:R> = <var:L> ) . Theorem <genP:1> : <def:seven-composite> <nat:855360> . Proof . unfold <def:seven-composite> . exists <nat:12> . exists <nat:11> . exists <nat:3> . exists <nat:4> . exists <nat:9> . exists <nat:10> . exists <nat:6> . assert ( <genH> : <nat:4> > <nat:1> ) . { lia . } assert ( <genH> : <nat:6> > <nat:1> ) . { lia . } assert ( <genH> : <nat:9> > <nat:1> ) . { lia . } assert ( <genH> : <nat:3> > <nat:1> ) . { lia . } assert ( <genH> : <nat:10> > <nat:1> ) . { lia . } assert ( <genH> : <nat:12> > <nat:1> ) . { lia . } assert ( <genH> : <nat:11> > <nat:1> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 