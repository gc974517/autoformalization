\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:250> \cdot <var:p> + <nat:36> \cdot <var:s> + <nat:323> + <nat:356> \cdot <var:t> + <nat:70> \cdot <var:z> + <nat:152> \cdot <var:l> + <var:V> \cdot <nat:482> $ is guaranteed to be odd given positive terms $ <var:p> $ , $ <var:l> $ , $ <var:z> $ , $ <var:t> $ , $ <var:s> $ , and $ <var:V> $ . \end{theorem} \begin{proof} Recall that $ <nat:323> $ is obviously an odd integer . It can be proven that the expression $ <var:z> \cdot <nat:70> + <var:s> \cdot <nat:36> + <var:p> \cdot <nat:250> + <var:V> \cdot <nat:482> + <var:t> \cdot <nat:356> + <var:l> \cdot <nat:152> + <nat:323> $ must be odd . $ <var:l> \cdot <nat:152> + <nat:356> \cdot <var:t> + <nat:482> \cdot <var:V> + <var:s> \cdot <nat:36> + <var:z> \cdot <nat:70> + <var:p> \cdot <nat:250> $ is trivially even . We know that the product $ <var:l> <nat:152> $ is obviously even . This fact must be true as a consequence that multiplying of an even integer with some number is guaranteed to be fundamentally an even number . This fact must be true as a consequence that the coefficient $ <nat:152> $ is known as an even natural number . In addition to this , the leading term $ <nat:250> $ is clearly an even integer . Thus , the term $ <var:p> <nat:250> $ is guaranteed to be even at the same time . Remember that the product $ <var:s> <nat:36> $ is guaranteed to be even . This fact is proven from the knowledge the multiplication between an even number with some natural number must be even , which is true from the knowledge the leading term $ <nat:36> $ is guaranteed to be in itself an even natural number . The pair $ <var:z> <nat:70> $ is guaranteed to be even as a consequence that taking the product of an even whole number with an arbitrary positive integer will be even , which is proven because the coefficient $ <nat:70> $ is known as even . Notice that the coefficient $ <nat:482> $ is known as even . Thus , the pair $ <var:V> <nat:482> $ is guaranteed to be even too . Recall that the product $ <nat:356> <var:t> $ is known as even from the knowledge multiplying between an even positive integer with some whole number is by definition an even natural number , and is proven from the fact the integer $ <nat:356> $ is guaranteed to be even . As a consequence that the multiplication between even elements of $ \mathbb{Z}^+ $ and any natural must be even our main result is proven . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:p> <var:l> <var:z> <var:t> <var:s> <var:V> : nat , Nat . odd ( <nat:250> * <var:p> + <nat:36> * <var:s> + <nat:356> * <var:t> + <nat:70> * <var:z> + <nat:152> * <var:l> + <nat:482> * <var:V> + <nat:323> ) = true . Proof . intros . assert ( <genH> : Nat . odd <nat:323> = true ) . { auto . } assert ( <genH> : Nat . even <nat:152> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:152> * <var:l> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:250> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:250> * <var:p> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:36> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:36> * <var:s> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:70> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:70> * <var:z> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:482> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:482> * <var:V> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:356> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:356> * <var:t> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:250> * <var:p> + <nat:36> * <var:s> + <nat:356> * <var:t> + <nat:70> * <var:z> + <nat:152> * <var:l> + <nat:482> * <var:V> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . rewrite <genH> . auto . Qed . 