\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Take $ <var:O> $ , $ <var:r> $ , $ <var:W> $ , $ <var:F> $ , $ <var:T> $ , $ <var:I> $ , $ <var:l> $ as whole numbers . We assume that some whole number $ <var:J> $ is named a <def:seven-composite> whole number if $ <var:J> = <var:T> \times <var:W> \times <var:l> \times <var:F> \times <var:r> \times <var:I> \times <var:O> $ as well as more than <nat:1> . Then the number <nat:332640> is a <def:seven-composite> natural number . \end{theorem} \begin{proof} Remember that a <def:seven-composite> natural number is the product between integers $ <var:O> $ , $ <var:I> $ , $ <var:r> $ , $ <var:F> $ , $ <var:W> $ , $ <var:l> $ , and $ <var:T> $ so that $ <var:I> $ , $ <var:r> $ , $ <var:O> $ , $ <var:l> $ , $ <var:W> $ , $ <var:F> $ , and $ <var:T> > <nat:1> $ . Let $ <var:l> = <nat:8> $ , $ <var:r> = <nat:3> $ , $ <var:I> = <nat:9> $ , $ <var:O> = <nat:2> $ , $ <var:W> = <nat:10> $ , $ <var:F> = <nat:7> $ , and $ <var:T> = <nat:11> $ . We prove <nat:332640> is a <def:seven-composite> number . Observe that $ <nat:11> $ , $ <nat:7> $ , $ <nat:9> $ , $ <nat:10> $ , $ <nat:8> $ , $ <nat:2> $ and $ <nat:3> > <nat:1> $ . Similarly observe that too $ <var:T> \times <var:r> \times <var:I> \times <var:O> \times <var:W> \times <var:F> \times <var:l> = <nat:332640> $ . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:seven-composite> ( <var:J> : nat ) := exists <var:O> <var:r> <var:W> <var:F> <var:T> <var:I> <var:l> : nat , ( <var:J> = <var:T> * <var:W> * <var:l> * <var:F> * <var:r> * <var:I> * <var:O> ) /\ ( <var:O> > <nat:1> ) /\ ( <var:r> > <nat:1> ) /\ ( <var:W> > <nat:1> ) /\ ( <var:F> > <nat:1> ) /\ ( <var:T> > <nat:1> ) /\ ( <var:I> > <nat:1> ) /\ ( <var:l> > <nat:1> ) . Theorem <genP:1> : <def:seven-composite> <nat:332640> . Proof . unfold <def:seven-composite> . exists <nat:2> . exists <nat:3> . exists <nat:10> . exists <nat:7> . exists <nat:11> . exists <nat:9> . exists <nat:8> . assert ( <genH> : <nat:11> > <nat:1> ) . { lia . } assert ( <genH> : <nat:7> > <nat:1> ) . { lia . } assert ( <genH> : <nat:9> > <nat:1> ) . { lia . } assert ( <genH> : <nat:10> > <nat:1> ) . { lia . } assert ( <genH> : <nat:8> > <nat:1> ) . { lia . } assert ( <genH> : <nat:2> > <nat:1> ) . { lia . } assert ( <genH> : <nat:3> > <nat:1> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 