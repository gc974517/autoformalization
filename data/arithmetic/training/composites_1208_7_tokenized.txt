\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Assuming that we have $ <var:e> = <var:F> \times <var:Q> \times <var:T> \times <var:s> \times <var:P> \times <var:d> \times <var:g> $ assuming $ <var:e> \in \mathbb{N} $ and such that $ <var:g> $ , $ <var:Q> $ , $ <var:F> $ , $ <var:T> $ , $ <var:P> $ , $ <var:d> $ , and $ <var:s> \geq <nat:2> $ given some numbers $ <var:P> $ , $ <var:g> $ , $ <var:Q> $ , $ <var:s> $ , $ <var:T> $ , $ <var:d> $ , $ <var:F> $ , then denote that $ <var:e> $ is a <def:seven-composite> number . Therefore $ <nat:120960> = <var:e> $ is a <def:seven-composite> integer . \end{theorem} \begin{proof} We show $ <var:Q> * <var:T> * <var:F> * <var:s> * <var:g> * <var:d> * <var:P> = <nat:120960> $ and $ <var:s> $ , $ <var:Q> $ , $ <var:F> $ , $ <var:d> $ , $ <var:P> $ , $ <var:T> $ and $ <var:g> > <nat:1> $ . Notice $ <nat:8> $ , $ <nat:7> $ , $ <nat:2> $ , $ <nat:3> $ , $ <nat:12> $ , $ <nat:5> $ , $ <nat:6> $ are greater than <nat:1> . Similarly notice moreover $ <var:F> \times <var:T> \times <var:Q> \times <var:d> \times <var:s> \times <var:P> \times <var:g> = <nat:120960> = <nat:2> \times <nat:6> \times <nat:8> \times <nat:3> \times <nat:7> \times <nat:12> \times <nat:5> $ . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:seven-composite> ( <var:e> : nat ) := exists <var:P> <var:g> <var:Q> <var:s> <var:T> <var:d> <var:F> : nat , ( <var:e> = <var:F> * <var:Q> * <var:T> * <var:s> * <var:P> * <var:d> * <var:g> ) /\ ( <var:g> >= <nat:2> ) /\ ( <var:Q> >= <nat:2> ) /\ ( <var:F> >= <nat:2> ) /\ ( <var:T> >= <nat:2> ) /\ ( <var:P> >= <nat:2> ) /\ ( <var:d> >= <nat:2> ) /\ ( <var:s> >= <nat:2> ) . Theorem <genP:1> : <def:seven-composite> <nat:120960> . Proof . unfold <def:seven-composite> . assert ( <genH> : <nat:8> > <nat:1> ) . { lia . } assert ( <genH> : <nat:7> > <nat:1> ) . { lia . } assert ( <genH> : <nat:2> > <nat:1> ) . { lia . } assert ( <genH> : <nat:3> > <nat:1> ) . { lia . } assert ( <genH> : <nat:12> > <nat:1> ) . { lia . } assert ( <genH> : <nat:5> > <nat:1> ) . { lia . } assert ( <genH> : <nat:6> > <nat:1> ) . { lia . } exists <nat:12> . exists <nat:5> . exists <nat:8> . exists <nat:7> . exists <nat:6> . exists <nat:3> . exists <nat:2> . repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 