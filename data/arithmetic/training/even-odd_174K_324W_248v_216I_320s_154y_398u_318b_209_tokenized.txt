\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:209> + <nat:174> <var:K> + <nat:324> <var:W> + <var:v> <nat:248> + <var:I> <nat:216> + <nat:320> <var:s> + <nat:154> <var:y> + <var:u> <nat:398> + <var:b> <nat:318> $ is guaranteed to be odd . \end{theorem} \begin{proof} Remember the pairs $ <var:y> \times <nat:154> $ , $ <var:b> \times <nat:318> $ , $ <var:s> \times <nat:320> $ , $ <var:W> \times <nat:324> $ , $ <var:u> \times <nat:398> $ , and $ <var:I> \times <nat:216> $ are obviously even . Further , the term $ <var:v> \times <nat:248> $ is clearly even . Further , see the pair $ <var:K> \times <nat:174> $ is obviously even since the multiplication between an even whole number with a natural number will be by itself an even number in $ \mathbb{Z}^+ $ . Notice the summation between even natural numbers concurrently and an odd positive integer must be odd . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:K> <var:W> <var:v> <var:I> <var:s> <var:y> <var:u> <var:b> : nat , Nat . odd ( <nat:174> * <var:K> + <nat:324> * <var:W> + <nat:248> * <var:v> + <nat:216> * <var:I> + <nat:320> * <var:s> + <nat:154> * <var:y> + <nat:398> * <var:u> + <nat:318> * <var:b> + <nat:209> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:154> * <var:y> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:318> * <var:b> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:320> * <var:s> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:324> * <var:W> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:398> * <var:u> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:216> * <var:I> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:248> * <var:v> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:174> * <var:K> ) = true ) . { rewrite Nat . even_mul . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 