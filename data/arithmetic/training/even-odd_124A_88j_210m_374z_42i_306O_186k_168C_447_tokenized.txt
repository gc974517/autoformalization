\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:k> \times <nat:186> + <var:j> \times <nat:88> + <var:A> \times <nat:124> + <nat:306> \times <var:O> + <nat:42> \times <var:i> + <nat:447> + <var:z> \times <nat:374> + <var:C> \times <nat:168> + <var:m> \times <nat:210> $ must be odd taking all natural terms $ <var:j> $ , $ <var:k> $ , $ <var:O> $ , $ <var:A> $ , $ <var:m> $ , $ <var:C> $ , $ <var:z> $ , and $ <var:i> $ . \end{theorem} \begin{proof} Remember the expression $ <nat:124> * <var:A> + <var:j> * <nat:88> + <var:m> * <nat:210> + <nat:374> * <var:z> + <nat:42> * <var:i> + <var:O> * <nat:306> + <nat:186> * <var:k> + <var:C> * <nat:168> $ is guaranteed to be even . Additionally , the numbers $ <nat:124> $ , $ <nat:88> $ , $ <nat:210> $ , $ <nat:374> $ , $ <nat:42> $ , $ <nat:306> $ , $ <nat:186> $ , $ <nat:168> $ , are obviously even . As a consequence , the terms $ <nat:124> <var:A> $ , $ <var:j> <nat:88> $ , $ <nat:210> <var:m> $ , $ <var:z> <nat:374> $ , $ <var:i> <nat:42> $ , $ <nat:306> <var:O> $ , $ <nat:186> <var:k> $ , $ <var:C> <nat:168> $ , will be even at the same time . Observe $ <nat:447> $ is trivially odd . The adding of even whole numbers successively and an odd number is odd . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:j> <var:k> <var:O> <var:A> <var:m> <var:C> <var:z> <var:i> : nat , Nat . odd ( <nat:186> * <var:k> + <nat:88> * <var:j> + <nat:124> * <var:A> + <nat:306> * <var:O> + <nat:42> * <var:i> + <nat:374> * <var:z> + <nat:168> * <var:C> + <nat:210> * <var:m> + <nat:447> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:124> = true ) . { auto . } assert ( <genH> : Nat . even <nat:88> = true ) . { auto . } assert ( <genH> : Nat . even <nat:210> = true ) . { auto . } assert ( <genH> : Nat . even <nat:374> = true ) . { auto . } assert ( <genH> : Nat . even <nat:42> = true ) . { auto . } assert ( <genH> : Nat . even <nat:306> = true ) . { auto . } assert ( <genH> : Nat . even <nat:186> = true ) . { auto . } assert ( <genH> : Nat . even <nat:168> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:124> * <var:A> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:88> * <var:j> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:210> * <var:m> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:374> * <var:z> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:42> * <var:i> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:306> * <var:O> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:186> * <var:k> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:168> * <var:C> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:186> * <var:k> + <nat:88> * <var:j> + <nat:124> * <var:A> + <nat:306> * <var:O> + <nat:42> * <var:i> + <nat:374> * <var:z> + <nat:168> * <var:C> + <nat:210> * <var:m> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } assert ( <genH> : Nat . odd <nat:447> = true ) . { auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . rewrite <genH> . auto . Qed . 