\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \newtheorem{definition}{Definition} \begin{document} \begin{definition} We denote that $ <var:v> $ is a <def:nine-composite> integer under the condition there are some positive integers $ <var:J> $ , $ <var:L> $ , $ <var:j> $ , $ <var:F> $ , $ <var:y> $ , $ <var:a> $ , $ <var:q> $ , $ <var:s> $ , $ <var:o> $ such that $ <var:v> = <var:q> \cdot <var:J> \cdot <var:F> \cdot <var:a> \cdot <var:o> \cdot <var:y> \cdot <var:s> \cdot <var:L> \cdot <var:j> $ for some $ <var:v> $ plus so that $ <var:L> $ , $ <var:j> $ , $ <var:J> $ , $ <var:q> $ , $ <var:F> $ , $ <var:o> $ , $ <var:s> $ , $ <var:a> $ , $ <var:y> \geq <nat:2> $ . \end{definition} \begin{theorem} The number <nat:7983360> is a <def:nine-composite> whole number . \end{theorem} \begin{proof} Recall a <def:nine-composite> natural number is the product between whole numbers $ <var:L> $ , $ <var:a> $ , $ <var:j> $ , $ <var:q> $ , $ <var:o> $ , $ <var:s> $ , $ <var:F> $ , $ <var:J> $ , $ <var:y> $ where $ <var:F> $ , $ <var:j> $ , $ <var:q> $ , $ <var:y> $ , $ <var:L> $ , $ <var:J> $ , $ <var:o> $ , $ <var:s> $ , and $ <var:a> \geq <nat:2> $ . Note that $ <nat:7983360> = <var:j> \times <var:o> \times <var:F> \times <var:J> \times <var:L> \times <var:a> \times <var:s> \times <var:y> \times <var:q> $ indicates $ <var:L> = <nat:3> $ , $ <var:q> = <nat:2> $ , $ <var:y> = <nat:8> $ , $ <var:F> = <nat:11> $ , $ <var:a> = <nat:5> $ , $ <var:o> = <nat:4> $ , $ <var:s> = <nat:9> $ , $ <var:J> = <nat:7> $ and $ <var:j> = <nat:12> $ . In addition observe $ <nat:12> $ , $ <nat:11> $ , $ <nat:8> $ , $ <nat:4> $ , $ <nat:5> $ , $ <nat:9> $ , $ <nat:2> $ , $ <nat:3> $ and $ <nat:7> \geq <nat:2> $ . Consequently , <nat:7983360> is a <def:nine-composite> positive integer is validated . As a result , $ <nat:7983360> = <var:o> \times <var:J> \times <var:y> \times <var:a> \times <var:s> \times <var:F> \times <var:j> \times <var:q> \times <var:L> $ is validated . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:nine-composite> ( <var:v> : nat ) := exists <var:J> <var:L> <var:j> <var:F> <var:y> <var:a> <var:q> <var:s> <var:o> : nat , ( <var:v> = <var:q> * <var:J> * <var:F> * <var:a> * <var:o> * <var:y> * <var:s> * <var:L> * <var:j> ) /\ ( <var:L> >= <nat:2> ) /\ ( <var:j> >= <nat:2> ) /\ ( <var:J> >= <nat:2> ) /\ ( <var:q> >= <nat:2> ) /\ ( <var:F> >= <nat:2> ) /\ ( <var:o> >= <nat:2> ) /\ ( <var:s> >= <nat:2> ) /\ ( <var:a> >= <nat:2> ) /\ ( <var:y> >= <nat:2> ) . Theorem <genP:1> : <def:nine-composite> <nat:7983360> . Proof . unfold <def:nine-composite> . exists <nat:7> . exists <nat:3> . exists <nat:12> . exists <nat:11> . exists <nat:8> . exists <nat:5> . exists <nat:2> . exists <nat:9> . exists <nat:4> . assert ( <genH> : <nat:12> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:11> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:8> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:4> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:5> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:9> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:2> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:3> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:7> >= <nat:2> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 