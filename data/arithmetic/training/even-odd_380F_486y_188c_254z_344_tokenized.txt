\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:y> <nat:486> + <var:F> <nat:380> + <var:z> <nat:254> + <nat:344> + <var:c> <nat:188> $ must be even . \end{theorem} \begin{proof} See $ <nat:344> $ is even . Since the totaling between an even number in $ \mathbb{Z}^+ $ with an even number must be even , as a consequence this result must be true . Observe that the summation $ <nat:380> * <var:F> + <var:y> * <nat:486> + <nat:188> * <var:c> + <var:z> * <nat:254> $ is obviously even . The term $ <nat:380> * <var:F> $ is known as an even number . $ <nat:188> * <var:c> $ is obviously an even positive integer because the product between an even integer with any number will be even . On top of this , remember that the product $ <nat:486> * <var:y> $ is obviously even from the knowledge the product between an even number in $ \mathbb{Z}^+ $ and a number in $ \mathbb{Z}^+ $ is guaranteed to be an even whole number . Remember $ <var:z> * <nat:254> $ is an even number in $ \mathbb{Z}^+ $ . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:y> <var:F> <var:z> <var:c> : nat , Nat . even ( <nat:486> * <var:y> + <nat:380> * <var:F> + <nat:254> * <var:z> + <nat:188> * <var:c> + <nat:344> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:344> = true ) . { auto . } rewrite Nat . even_add . assert ( <genH> : Nat . even ( <nat:380> * <var:F> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:188> * <var:c> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:486> * <var:y> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:254> * <var:z> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:486> * <var:y> + <nat:380> * <var:F> + <nat:254> * <var:z> + <nat:188> * <var:c> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite <genH> . rewrite <genH> . auto . Qed . 