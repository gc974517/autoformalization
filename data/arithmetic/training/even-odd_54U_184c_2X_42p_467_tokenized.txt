\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} With some $ <var:p> $ , $ <var:c> $ , $ <var:X> $ , and $ <var:U> \in \mathbb{Z}^+ $ the sum $ <nat:54> <var:U> + <nat:2> <var:X> + <nat:467> + <nat:42> <var:p> + <var:c> <nat:184> $ will be odd . \end{theorem} \begin{proof} Recall that $ <nat:467> $ is known to be odd . We verify the summation $ <var:U> \cdot <nat:54> + <nat:467> + <var:c> \cdot <nat:184> + <var:X> \cdot <nat:2> + <var:p> \cdot <nat:42> $ must be odd . The pairs $ <nat:2> \cdot <var:X> $ and likewise $ <nat:54> \cdot <var:U> $ are obviously even from the knowledge the product of an even number with a whole number is guaranteed to be an even number and moreover the natural numbers $ <nat:2> $ and moreover $ <nat:54> $ will be even . What's more , the natural number $ <nat:184> $ is even . So , the pair $ <var:c> \cdot <nat:184> $ is guaranteed to be even at the same time . What's more , the leading term $ <nat:42> $ is known as even . Hence , the term $ <nat:42> \cdot <var:p> $ will be even at the same time . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:p> <var:c> <var:X> <var:U> : nat , Nat . odd ( <nat:54> * <var:U> + <nat:2> * <var:X> + <nat:42> * <var:p> + <nat:184> * <var:c> + <nat:467> ) = true . Proof . intros . assert ( <genH> : Nat . odd <nat:467> = true ) . { auto . } assert ( <genH> : Nat . even <nat:2> = true ) . { auto . } assert ( <genH> : Nat . even <nat:54> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:2> * <var:X> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:54> * <var:U> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:184> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:184> * <var:c> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:42> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:42> * <var:p> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 