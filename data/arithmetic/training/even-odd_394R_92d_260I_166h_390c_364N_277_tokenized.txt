\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:R> \times <nat:394> + <nat:92> \times <var:d> + <nat:277> + <nat:260> \times <var:I> + <nat:166> \times <var:h> + <var:c> \times <nat:390> + <nat:364> \times <var:N> $ is guaranteed to be odd with any positive numbers $ <var:R> $ , $ <var:I> $ , $ <var:N> $ , $ <var:c> $ , $ <var:h> $ , and $ <var:d> $ . \end{theorem} \begin{proof} The adding between even natural numbers and an odd positive integer is guaranteed to be by definition an odd element of $ \mathbb{N} $ . Observe that the pairs $ <var:d> * <nat:92> $ and $ <nat:166> * <var:h> $ are obviously even numbers in $ \mathbb{N} $ . On top of this , we know $ <var:I> * <nat:260> $ is guaranteed to be an even number . Likewise , observe the term $ <nat:364> * <var:N> $ is trivially even . In addition , the term $ <nat:390> * <var:c> $ is clearly an even integer from the knowledge the product between an even positive integer with some whole number is even . The product $ <var:R> * <nat:394> $ is even . This claim must be true by reason that the product between an even whole number and some element of $ \mathbb{Z}^+ $ is instrinsically an even number in $ \mathbb{Z}^+ $ . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:R> <var:I> <var:N> <var:c> <var:h> <var:d> : nat , Nat . odd ( <nat:394> * <var:R> + <nat:92> * <var:d> + <nat:260> * <var:I> + <nat:166> * <var:h> + <nat:390> * <var:c> + <nat:364> * <var:N> + <nat:277> ) = true . Proof . intros . rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . assert ( <genH> : Nat . even ( <nat:92> * <var:d> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:166> * <var:h> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:260> * <var:I> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:364> * <var:N> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:390> * <var:c> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:394> * <var:R> ) = true ) . { rewrite Nat . even_mul . auto . } rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 