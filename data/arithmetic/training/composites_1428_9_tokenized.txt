\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \newtheorem{definition}{Definition} \begin{document} \begin{definition} Under the condition that we get $ <var:Y> \times <var:J> \times <var:Z> \times <var:M> \times <var:p> \times <var:Q> \times <var:i> \times <var:r> \times <var:c> = <var:b> $ assuming some $ <var:b> $ plus where $ <var:r> $ , $ <var:M> $ , $ <var:Y> $ , $ <var:J> $ , $ <var:c> $ , $ <var:p> $ , $ <var:Z> $ , $ <var:Q> $ , $ <var:i> \geq <nat:2> $ , then we assume that $ <var:b> $ is a <def:nine-composite> natural number with some positive integers $ <var:J> $ , $ <var:Z> $ , $ <var:Y> $ , $ <var:i> $ , $ <var:p> $ , $ <var:Q> $ , $ <var:c> $ , $ <var:r> $ , $ <var:M> $ . \end{definition} \begin{theorem} $ <var:b> = <nat:11975040> $ is a <def:nine-composite> positive integer . \end{theorem} \begin{proof} Recall a <def:nine-composite> is the product of integers $ <var:Q> $ , $ <var:J> $ , $ <var:i> $ , $ <var:Z> $ , $ <var:p> $ , $ <var:Y> $ , $ <var:r> $ , $ <var:c> $ , and $ <var:M> $ so that $ <var:c> $ , $ <var:Q> $ , $ <var:r> $ , $ <var:p> $ , $ <var:i> $ , $ <var:J> $ , $ <var:M> $ , $ <var:Z> $ , $ <var:Y> > <nat:1> $ . Note that $ <nat:6> $ , $ <nat:11> $ , $ <nat:9> $ , $ <nat:10> $ , $ <nat:2> $ , $ <nat:3> $ , $ <nat:7> $ , $ <nat:4> $ and $ <nat:12> $ are greater than <nat:1> . Moreover notice as well $ <var:p> \cdot <var:r> \cdot <var:Q> \cdot <var:M> \cdot <var:c> \cdot <var:Y> \cdot <var:J> \cdot <var:Z> \cdot <var:i> = <nat:11975040> $ produces $ <var:M> = <nat:12> $ , $ <var:c> = <nat:6> $ , $ <var:Y> = <nat:7> $ , $ <var:r> = <nat:11> $ , $ <var:Q> = <nat:10> $ , $ <var:Z> = <nat:2> $ , $ <var:J> = <nat:4> $ , $ <var:p> = <nat:9> $ , and $ <var:i> = <nat:3> $ . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:nine-composite> ( <var:b> : nat ) := exists <var:J> <var:Z> <var:Y> <var:i> <var:p> <var:Q> <var:c> <var:r> <var:M> : nat , ( <var:Y> * <var:J> * <var:Z> * <var:M> * <var:p> * <var:Q> * <var:i> * <var:r> * <var:c> = <var:b> ) /\ ( <var:r> >= <nat:2> ) /\ ( <var:M> >= <nat:2> ) /\ ( <var:Y> >= <nat:2> ) /\ ( <var:J> >= <nat:2> ) /\ ( <var:c> >= <nat:2> ) /\ ( <var:p> >= <nat:2> ) /\ ( <var:Z> >= <nat:2> ) /\ ( <var:Q> >= <nat:2> ) /\ ( <var:i> >= <nat:2> ) . Theorem <genP:1> : <def:nine-composite> <nat:11975040> . Proof . unfold <def:nine-composite> . assert ( <genH> : <nat:6> > <nat:1> ) . { lia . } assert ( <genH> : <nat:11> > <nat:1> ) . { lia . } assert ( <genH> : <nat:9> > <nat:1> ) . { lia . } assert ( <genH> : <nat:10> > <nat:1> ) . { lia . } assert ( <genH> : <nat:2> > <nat:1> ) . { lia . } assert ( <genH> : <nat:3> > <nat:1> ) . { lia . } assert ( <genH> : <nat:7> > <nat:1> ) . { lia . } assert ( <genH> : <nat:4> > <nat:1> ) . { lia . } assert ( <genH> : <nat:12> > <nat:1> ) . { lia . } exists <nat:4> . exists <nat:2> . exists <nat:7> . exists <nat:3> . exists <nat:9> . exists <nat:10> . exists <nat:6> . exists <nat:11> . exists <nat:12> . repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 