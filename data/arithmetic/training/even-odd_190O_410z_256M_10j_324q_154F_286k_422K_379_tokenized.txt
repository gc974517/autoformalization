\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:190> * <var:O> + <var:z> * <nat:410> + <nat:256> * <var:M> + <var:j> * <nat:10> + <nat:379> + <nat:324> * <var:q> + <nat:154> * <var:F> + <var:k> * <nat:286> + <nat:422> * <var:K> $ will be odd . \end{theorem} \begin{proof} It can be checked that the main result is true . Further , take note that the terms $ <var:O> \cdot <nat:190> $ , $ <var:z> \cdot <nat:410> $ , $ <nat:256> \cdot <var:M> $ , $ <var:j> \cdot <nat:10> $ , $ <nat:324> \cdot <var:q> $ , $ <var:F> \cdot <nat:154> $ , $ <nat:286> \cdot <var:k> $ , in addition to $ <nat:422> \cdot <var:K> $ are even . This holds by reason that taking the product of an even whole number and a positive integer is guaranteed to be even additionally the numbers $ <nat:190> $ , $ <nat:410> $ , $ <nat:256> $ , $ <nat:10> $ , $ <nat:324> $ , $ <nat:154> $ , $ <nat:286> $ , and also $ <nat:422> $ are clearly even . The totaling of an even natural and an odd element of $ \mathbb{N} $ must be odd . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:O> <var:z> <var:M> <var:j> <var:q> <var:F> <var:k> <var:K> : nat , Nat . odd ( <nat:190> * <var:O> + <nat:410> * <var:z> + <nat:256> * <var:M> + <nat:10> * <var:j> + <nat:324> * <var:q> + <nat:154> * <var:F> + <nat:286> * <var:k> + <nat:422> * <var:K> + <nat:379> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:190> = true ) . { auto . } assert ( <genH> : Nat . even <nat:410> = true ) . { auto . } assert ( <genH> : Nat . even <nat:256> = true ) . { auto . } assert ( <genH> : Nat . even <nat:10> = true ) . { auto . } assert ( <genH> : Nat . even <nat:324> = true ) . { auto . } assert ( <genH> : Nat . even <nat:154> = true ) . { auto . } assert ( <genH> : Nat . even <nat:286> = true ) . { auto . } assert ( <genH> : Nat . even <nat:422> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:190> * <var:O> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:410> * <var:z> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:256> * <var:M> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:10> * <var:j> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:324> * <var:q> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:154> * <var:F> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:286> * <var:k> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:422> * <var:K> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 