\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \newtheorem{definition}{Definition} \begin{document} \begin{definition} Let $ <var:k> $ , $ <var:Y> $ , $ <var:E> $ , $ <var:U> $ , $ <var:y> $ , $ <var:B> $ , $ <var:S> $ , $ <var:W> $ , $ <var:p> $ be whole numbers so that $ <var:Y> $ , $ <var:p> $ , $ <var:k> $ , $ <var:B> $ , $ <var:E> $ , $ <var:y> $ , $ <var:S> $ , $ <var:W> $ , and $ <var:U> \geq <nat:2> $ . Denote that $ <var:z> \in \mathbb{N} $ is said to be a <def:nine-composite> integer assuming $ <var:W> \cdot <var:E> \cdot <var:Y> \cdot <var:B> \cdot <var:k> \cdot <var:S> \cdot <var:y> \cdot <var:p> \cdot <var:U> = <var:z> $ . \end{definition} \begin{theorem} The number <nat:8553600> is a <def:nine-composite> whole number . \end{theorem} \begin{proof} Allow $ <var:y> = <nat:10> $ , $ <var:S> = <nat:3> $ , $ <var:U> = <nat:4> $ , $ <var:E> = <nat:9> $ , $ <var:W> = <nat:5> $ , $ <var:Y> = <nat:6> $ , $ <var:k> = <nat:11> $ , $ <var:B> = <nat:2> $ , and $ <var:p> = <nat:12> $ . Observe that $ <nat:11> $ , $ <nat:6> $ , $ <nat:2> $ , $ <nat:9> $ , $ <nat:4> $ , $ <nat:12> $ , $ <nat:5> $ , $ <nat:10> $ , and $ <nat:3> \geq <nat:2> $ . Moreover notice additionally $ <nat:8553600> = <var:Y> * <var:B> * <var:y> * <var:E> * <var:U> * <var:k> * <var:p> * <var:S> * <var:W> $ . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:nine-composite> ( <var:z> : nat ) := exists <var:k> <var:Y> <var:E> <var:U> <var:y> <var:B> <var:S> <var:W> <var:p> : nat , ( <var:Y> >= <nat:2> ) /\ ( <var:p> >= <nat:2> ) /\ ( <var:k> >= <nat:2> ) /\ ( <var:B> >= <nat:2> ) /\ ( <var:E> >= <nat:2> ) /\ ( <var:y> >= <nat:2> ) /\ ( <var:S> >= <nat:2> ) /\ ( <var:W> >= <nat:2> ) /\ ( <var:U> >= <nat:2> ) /\ ( <var:W> * <var:E> * <var:Y> * <var:B> * <var:k> * <var:S> * <var:y> * <var:p> * <var:U> = <var:z> ) . Theorem <genP:1> : <def:nine-composite> <nat:8553600> . Proof . unfold <def:nine-composite> . exists <nat:11> . exists <nat:6> . exists <nat:9> . exists <nat:4> . exists <nat:10> . exists <nat:2> . exists <nat:3> . exists <nat:5> . exists <nat:12> . assert ( <genH> : <nat:11> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:6> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:2> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:9> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:4> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:12> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:5> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:10> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:3> >= <nat:2> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 