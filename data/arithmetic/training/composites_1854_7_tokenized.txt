\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} We assume that $ <var:z> $ is a <def:seven-composite> integer wherever there exist some positive integers $ <var:j> $ , $ <var:o> $ , $ <var:Z> $ , $ <var:t> $ , $ <var:h> $ , $ <var:D> $ , $ <var:p> $ where $ <var:p> $ , $ <var:h> $ , $ <var:o> $ , $ <var:j> $ , $ <var:D> $ , $ <var:Z> $ , and $ <var:t> \geq <nat:2> $ and with $ <var:z> \in \mathbb{N} $ , $ <var:D> \cdot <var:h> \cdot <var:o> \cdot <var:j> \cdot <var:t> \cdot <var:p> \cdot <var:Z> = <var:z> $ . Consequently $ <var:z> = <nat:147840> $ is a <def:seven-composite> integer . \end{theorem} \begin{proof} Remember that a <def:seven-composite> whole number is the multiplication between whole numbers $ <var:h> $ , $ <var:p> $ , $ <var:Z> $ , $ <var:t> $ , $ <var:o> $ , $ <var:j> $ , and $ <var:D> $ satisfying the condition that $ <var:j> $ , $ <var:Z> $ , $ <var:D> $ , $ <var:h> $ , $ <var:o> $ , $ <var:p> $ , $ <var:t> \geq <nat:2> $ . Let $ <var:p> = <nat:2> $ , $ <var:o> = <nat:10> $ , $ <var:j> = <nat:7> $ , $ <var:Z> = <nat:3> $ , $ <var:h> = <nat:8> $ , $ <var:t> = <nat:11> $ and $ <var:D> = <nat:4> $ . Note $ <nat:2> $ , $ <nat:4> $ , $ <nat:10> $ , $ <nat:11> $ , $ <nat:8> $ , $ <nat:7> $ , and $ <nat:3> \geq <nat:2> $ . Thus , <nat:147840> is a <def:seven-composite> positive integer has been validated . Thus , $ <nat:147840> = <var:h> * <var:o> * <var:j> * <var:Z> * <var:D> * <var:t> * <var:p> $ has been validated . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:seven-composite> ( <var:z> : nat ) := exists <var:j> <var:o> <var:Z> <var:t> <var:h> <var:D> <var:p> : nat , ( <var:p> >= <nat:2> ) /\ ( <var:h> >= <nat:2> ) /\ ( <var:o> >= <nat:2> ) /\ ( <var:j> >= <nat:2> ) /\ ( <var:D> >= <nat:2> ) /\ ( <var:Z> >= <nat:2> ) /\ ( <var:t> >= <nat:2> ) /\ ( <var:D> * <var:h> * <var:o> * <var:j> * <var:t> * <var:p> * <var:Z> = <var:z> ) . Theorem <genP:1> : <def:seven-composite> <nat:147840> . Proof . unfold <def:seven-composite> . exists <nat:7> . exists <nat:10> . exists <nat:3> . exists <nat:11> . exists <nat:8> . exists <nat:4> . exists <nat:2> . assert ( <genH> : <nat:2> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:4> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:10> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:11> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:8> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:7> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:3> >= <nat:2> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 