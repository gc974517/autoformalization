\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \newtheorem{definition}{Definition} \begin{document} \begin{definition} Take $ <var:A> $ , $ <var:e> $ , $ <var:b> $ , $ <var:C> $ , $ <var:r> $ , $ <var:I> $ , $ <var:R> $ are whole numbers . Take as given that $ <var:E> \in \mathbb{Z}^+ $ is named a <def:seven-composite> natural number given $ <var:b> \cdot <var:C> \cdot <var:r> \cdot <var:R> \cdot <var:A> \cdot <var:e> \cdot <var:I> = <var:E> $ and terms are more than or equivalent to <nat:2> . \end{definition} \begin{theorem} The positive integer <nat:532224> is <def:seven-composite> . \end{theorem} \begin{proof} Take $ <var:e> = <nat:3> $ , $ <var:b> = <nat:8> $ , $ <var:I> = <nat:6> $ , $ <var:A> = <nat:7> $ , $ <var:C> = <nat:11> $ , $ <var:R> = <nat:4> $ , $ <var:r> = <nat:12> $ . Furthermore observe that $ <nat:8> $ , $ <nat:12> $ , $ <nat:4> $ , $ <nat:7> $ , $ <nat:6> $ , $ <nat:3> $ and $ <nat:11> $ are more than or equal to <nat:2> . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:seven-composite> ( <var:E> : nat ) := exists <var:A> <var:e> <var:b> <var:C> <var:r> <var:I> <var:R> : nat , ( <var:b> * <var:C> * <var:r> * <var:R> * <var:A> * <var:e> * <var:I> = <var:E> ) /\ ( <var:A> >= <nat:2> ) /\ ( <var:e> >= <nat:2> ) /\ ( <var:b> >= <nat:2> ) /\ ( <var:C> >= <nat:2> ) /\ ( <var:r> >= <nat:2> ) /\ ( <var:I> >= <nat:2> ) /\ ( <var:R> >= <nat:2> ) . Theorem <genP:1> : <def:seven-composite> <nat:532224> . Proof . unfold <def:seven-composite> . exists <nat:7> . exists <nat:3> . exists <nat:8> . exists <nat:11> . exists <nat:12> . exists <nat:6> . exists <nat:4> . assert ( <genH> : <nat:8> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:12> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:4> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:7> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:6> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:3> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:11> >= <nat:2> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 