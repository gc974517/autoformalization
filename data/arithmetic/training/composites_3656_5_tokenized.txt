\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Let that $ <var:X> $ is a <def:five-composite> positive integer granted there exist $ <var:b> $ , $ <var:M> $ , $ <var:f> $ , $ <var:V> $ , $ <var:v> \in \mathbb{N} $ satisfying the condition that $ <var:v> $ , $ <var:V> $ , $ <var:M> $ , $ <var:f> $ , $ <var:b> \geq <nat:2> $ and using some integer $ <var:X> $ , $ <var:X> = <var:v> * <var:f> * <var:M> * <var:V> * <var:b> $ . Then $ <var:X> = <nat:83160> $ is a <def:five-composite> positive integer . \end{theorem} \begin{proof} We justify <nat:83160> is the product between $ <var:v> $ , $ <var:V> $ , $ <var:f> $ , $ <var:M> $ , $ <var:b> \in \mathbb{N} $ . We verify <nat:83160> is a <def:five-composite> whole number for $ <var:b> \times <var:V> \times <var:M> \times <var:v> \times <var:f> = <nat:83160> $ produces $ <var:v> = <nat:11> $ , $ <var:V> = <nat:12> $ , $ <var:b> = <nat:10> $ , $ <var:f> = <nat:7> $ , and $ <var:M> = <nat:9> $ plus on account of $ <nat:9> $ , $ <nat:12> $ , $ <nat:7> $ , $ <nat:11> $ , $ <nat:10> $ are greater than or equal to <nat:2> . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:five-composite> ( <var:X> : nat ) := exists <var:b> <var:M> <var:f> <var:V> <var:v> : nat , ( <var:v> >= <nat:2> ) /\ ( <var:V> >= <nat:2> ) /\ ( <var:M> >= <nat:2> ) /\ ( <var:f> >= <nat:2> ) /\ ( <var:b> >= <nat:2> ) /\ ( <var:X> = <var:v> * <var:f> * <var:M> * <var:V> * <var:b> ) . Theorem <genP:1> : <def:five-composite> <nat:83160> . Proof . unfold <def:five-composite> . exists <nat:10> . exists <nat:9> . exists <nat:7> . exists <nat:12> . exists <nat:11> . assert ( <genH> : <nat:9> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:12> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:7> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:11> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:10> >= <nat:2> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 