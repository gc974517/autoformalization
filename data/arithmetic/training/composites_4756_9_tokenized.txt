\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \newtheorem{definition}{Definition} \begin{document} \begin{definition} Let $ <var:R> $ , $ <var:u> $ , $ <var:a> $ , $ <var:S> $ , $ <var:B> $ , $ <var:x> $ , $ <var:l> $ , $ <var:O> $ , $ <var:P> $ be whole numbers . Take as given that some whole number $ <var:q> $ will be considered to be <def:nine-composite> when $ <var:q> = <var:a> * <var:R> * <var:l> * <var:x> * <var:u> * <var:B> * <var:P> * <var:S> * <var:O> $ and factors are more than <nat:1> . \end{definition} \begin{theorem} The integer <nat:10886400> is a <def:nine-composite> whole number . \end{theorem} \begin{proof} Recollect that <nat:10886400> is a <def:nine-composite> positive integer if <nat:10886400> is the multiplication of $ <var:l> $ , $ <var:R> $ , $ <var:S> $ , $ <var:x> $ , $ <var:u> $ , $ <var:O> $ , $ <var:P> $ , $ <var:B> $ , $ <var:a> $ more than <nat:1> . We demonstrate <nat:10886400> is a <def:nine-composite> natural number . We justify <nat:10886400> is a <def:nine-composite> natural number by reason of $ <nat:12> \times <nat:3> \times <nat:10> \times <nat:6> \times <nat:2> \times <nat:5> \times <nat:7> \times <nat:9> \times <nat:8> = <nat:10886400> $ as well as $ <nat:8> $ , $ <nat:12> $ , $ <nat:10> $ , $ <nat:5> $ , $ <nat:6> $ , $ <nat:3> $ , $ <nat:7> $ , $ <nat:9> $ , $ <nat:2> > <nat:1> $ . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:nine-composite> ( <var:q> : nat ) := exists <var:R> <var:u> <var:a> <var:S> <var:B> <var:x> <var:l> <var:O> <var:P> : nat , ( <var:q> = <var:a> * <var:R> * <var:l> * <var:x> * <var:u> * <var:B> * <var:P> * <var:S> * <var:O> ) /\ ( <var:R> > <nat:1> ) /\ ( <var:u> > <nat:1> ) /\ ( <var:a> > <nat:1> ) /\ ( <var:S> > <nat:1> ) /\ ( <var:B> > <nat:1> ) /\ ( <var:x> > <nat:1> ) /\ ( <var:l> > <nat:1> ) /\ ( <var:O> > <nat:1> ) /\ ( <var:P> > <nat:1> ) . Theorem <genP:1> : <def:nine-composite> <nat:10886400> . Proof . unfold <def:nine-composite> . exists <nat:12> . exists <nat:10> . exists <nat:8> . exists <nat:3> . exists <nat:5> . exists <nat:9> . exists <nat:6> . exists <nat:7> . exists <nat:2> . assert ( <genH> : <nat:8> > <nat:1> ) . { lia . } assert ( <genH> : <nat:12> > <nat:1> ) . { lia . } assert ( <genH> : <nat:10> > <nat:1> ) . { lia . } assert ( <genH> : <nat:5> > <nat:1> ) . { lia . } assert ( <genH> : <nat:6> > <nat:1> ) . { lia . } assert ( <genH> : <nat:3> > <nat:1> ) . { lia . } assert ( <genH> : <nat:7> > <nat:1> ) . { lia . } assert ( <genH> : <nat:9> > <nat:1> ) . { lia . } assert ( <genH> : <nat:2> > <nat:1> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 