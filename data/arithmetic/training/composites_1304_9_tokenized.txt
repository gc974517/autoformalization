\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} The positive integer <nat:9979200> is the multiplication of whole numbers $ <var:X> $ , $ <var:q> $ , $ <var:y> $ , $ <var:u> $ , $ <var:b> $ , $ <var:g> $ , $ <var:A> $ , $ <var:W> $ , $ <var:s> $ where $ <var:b> $ , $ <var:A> $ , $ <var:X> $ , $ <var:u> $ , $ <var:q> $ , $ <var:y> $ , $ <var:s> $ , $ <var:W> $ and $ <var:g> > <nat:1> $ . \end{theorem} \begin{proof} We prove the theorem is valid by reason of $ <var:u> \cdot <var:g> \cdot <var:y> \cdot <var:s> \cdot <var:b> \cdot <var:q> \cdot <var:X> \cdot <var:W> \cdot <var:A> = <nat:9979200> $ gives $ <var:b> = <nat:6> $ , $ <var:W> = <nat:10> $ , $ <var:X> = <nat:7> $ , $ <var:y> = <nat:5> $ , $ <var:g> = <nat:3> $ , $ <var:u> = <nat:2> $ , $ <var:s> = <nat:9> $ , $ <var:A> = <nat:11> $ , $ <var:q> = <nat:8> $ as well as considering $ <nat:11> $ , $ <nat:6> $ , $ <nat:8> $ , $ <nat:5> $ , $ <nat:10> $ , $ <nat:3> $ , $ <nat:9> $ , $ <nat:7> $ and $ <nat:2> > <nat:1> $ . Consequently , $ <var:u> \cdot <var:y> \cdot <var:A> \cdot <var:W> \cdot <var:q> \cdot <var:g> \cdot <var:X> \cdot <var:s> \cdot <var:b> = <nat:9979200> $ is verified . \end{proof} \end{document} 
~
Require Import Lia . Theorem <genP:1> : exists <var:X> <var:q> <var:y> <var:u> <var:b> <var:g> <var:A> <var:W> <var:s> : nat , ( <nat:9979200> = <var:X> * <var:q> * <var:y> * <var:u> * <var:b> * <var:g> * <var:A> * <var:W> * <var:s> ) /\ ( <var:b> > <nat:1> ) /\ ( <var:A> > <nat:1> ) /\ ( <var:X> > <nat:1> ) /\ ( <var:u> > <nat:1> ) /\ ( <var:q> > <nat:1> ) /\ ( <var:y> > <nat:1> ) /\ ( <var:s> > <nat:1> ) /\ ( <var:W> > <nat:1> ) /\ ( <var:g> > <nat:1> ) . Proof . exists <nat:7> . exists <nat:8> . exists <nat:5> . exists <nat:2> . exists <nat:6> . exists <nat:3> . exists <nat:11> . exists <nat:10> . exists <nat:9> . assert ( <genH> : <nat:11> > <nat:1> ) . { lia . } assert ( <genH> : <nat:6> > <nat:1> ) . { lia . } assert ( <genH> : <nat:8> > <nat:1> ) . { lia . } assert ( <genH> : <nat:5> > <nat:1> ) . { lia . } assert ( <genH> : <nat:10> > <nat:1> ) . { lia . } assert ( <genH> : <nat:3> > <nat:1> ) . { lia . } assert ( <genH> : <nat:9> > <nat:1> ) . { lia . } assert ( <genH> : <nat:7> > <nat:1> ) . { lia . } assert ( <genH> : <nat:2> > <nat:1> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 