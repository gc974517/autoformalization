\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Allow $ <var:n> $ , $ <var:W> $ , $ <var:R> $ , $ <var:m> $ , $ <var:O> $ , $ <var:D> $ , $ <var:t> $ , $ <var:H> $ , and $ <var:X> \in \mathbb{N} $ such that $ <var:O> $ , $ <var:H> $ , $ <var:X> $ , $ <var:D> $ , $ <var:m> $ , $ <var:n> $ , $ <var:t> $ , $ <var:W> $ , and $ <var:R> $ larger than or equivalent to <nat:2> plus satisfying the condition that the integer <nat:4435200> is the product between integers $ <var:n> $ , $ <var:W> $ , $ <var:R> $ , $ <var:m> $ , $ <var:O> $ , $ <var:D> $ , $ <var:t> $ , $ <var:H> $ and $ <var:X> \in \mathbb{N} $ . \end{theorem} \begin{proof} Let $ <var:m> = <nat:5> $ , $ <var:X> = <nat:6> $ , $ <var:n> = <nat:8> $ , $ <var:t> = <nat:7> $ , $ <var:H> = <nat:10> $ , $ <var:W> = <nat:11> $ , $ <var:D> = <nat:2> $ , $ <var:O> = <nat:4> $ and $ <var:R> = <nat:3> $ . Note that $ <var:O> = <nat:4> $ , $ <var:X> = <nat:6> $ , $ <var:m> = <nat:5> $ , $ <var:n> = <nat:8> $ , $ <var:D> = <nat:2> $ , $ <var:H> = <nat:10> $ , $ <var:t> = <nat:7> $ , $ <var:R> = <nat:3> $ , and $ <var:W> = <nat:11> \geq <nat:2> $ . This indicates the proposition is true . \end{proof} \end{document} 
~
Require Import Lia . Theorem <genP:1> : exists <var:n> <var:W> <var:R> <var:m> <var:O> <var:D> <var:t> <var:H> <var:X> : nat , ( <var:O> >= <nat:2> ) /\ ( <var:H> >= <nat:2> ) /\ ( <var:X> >= <nat:2> ) /\ ( <var:D> >= <nat:2> ) /\ ( <var:m> >= <nat:2> ) /\ ( <var:n> >= <nat:2> ) /\ ( <var:t> >= <nat:2> ) /\ ( <var:W> >= <nat:2> ) /\ ( <var:R> >= <nat:2> ) /\ ( <nat:4435200> = <var:n> * <var:W> * <var:R> * <var:m> * <var:O> * <var:D> * <var:t> * <var:H> * <var:X> ) . Proof . exists <nat:8> . exists <nat:11> . exists <nat:3> . exists <nat:5> . exists <nat:4> . exists <nat:2> . exists <nat:7> . exists <nat:10> . exists <nat:6> . assert ( <genH> : <nat:4> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:6> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:5> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:8> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:2> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:10> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:7> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:3> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:11> >= <nat:2> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 