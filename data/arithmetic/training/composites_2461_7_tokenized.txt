\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \newtheorem{definition}{Definition} \begin{document} \begin{definition} Take $ <var:W> $ , $ <var:k> $ , $ <var:n> $ , $ <var:u> $ , $ <var:X> $ , $ <var:Q> $ , $ <var:F> $ as positive integers more than <nat:1> . Say that some $ <var:N> $ will be called a <def:seven-composite> integer if $ <var:X> * <var:k> * <var:n> * <var:F> * <var:W> * <var:u> * <var:Q> = <var:N> $ . \end{definition} \begin{theorem} The positive integer <nat:1140480> is a <def:seven-composite> natural number . \end{theorem} \begin{proof} Recall a <def:seven-composite> whole number is the product between positive integers $ <var:Q> $ , $ <var:k> $ , $ <var:F> $ , $ <var:u> $ , $ <var:n> $ , $ <var:X> $ , and $ <var:W> $ larger than <nat:1> . Take $ <var:F> = <nat:9> $ , $ <var:X> = <nat:4> $ , $ <var:n> = <nat:12> $ , $ <var:k> = <nat:5> $ , $ <var:W> = <nat:6> $ , $ <var:Q> = <nat:11> $ , and $ <var:u> = <nat:8> $ . What's more notice $ <nat:9> $ , $ <nat:5> $ , $ <nat:6> $ , $ <nat:4> $ , $ <nat:8> $ , $ <nat:11> $ , and $ <nat:12> $ are greater than <nat:1> . This suggests <nat:1140480> is a <def:seven-composite> integer . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:seven-composite> ( <var:N> : nat ) := exists <var:W> <var:k> <var:n> <var:u> <var:X> <var:Q> <var:F> : nat , ( <var:W> > <nat:1> ) /\ ( <var:k> > <nat:1> ) /\ ( <var:n> > <nat:1> ) /\ ( <var:u> > <nat:1> ) /\ ( <var:X> > <nat:1> ) /\ ( <var:Q> > <nat:1> ) /\ ( <var:F> > <nat:1> ) /\ ( <var:X> * <var:k> * <var:n> * <var:F> * <var:W> * <var:u> * <var:Q> = <var:N> ) . Theorem <genP:1> : <def:seven-composite> <nat:1140480> . Proof . unfold <def:seven-composite> . exists <nat:6> . exists <nat:5> . exists <nat:12> . exists <nat:8> . exists <nat:4> . exists <nat:11> . exists <nat:9> . assert ( <genH> : <nat:9> > <nat:1> ) . { lia . } assert ( <genH> : <nat:5> > <nat:1> ) . { lia . } assert ( <genH> : <nat:6> > <nat:1> ) . { lia . } assert ( <genH> : <nat:4> > <nat:1> ) . { lia . } assert ( <genH> : <nat:8> > <nat:1> ) . { lia . } assert ( <genH> : <nat:11> > <nat:1> ) . { lia . } assert ( <genH> : <nat:12> > <nat:1> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 