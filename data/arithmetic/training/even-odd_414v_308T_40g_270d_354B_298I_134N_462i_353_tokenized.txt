\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:v> * <nat:414> + <var:T> * <nat:308> + <nat:40> * <var:g> + <var:d> * <nat:270> + <nat:354> * <var:B> + <var:I> * <nat:298> + <nat:134> * <var:N> + <var:i> * <nat:462> + <nat:353> $ is guaranteed to be odd . \end{theorem} \begin{proof} The terms $ <var:I> \times <nat:298> $ , $ <var:v> \times <nat:414> $ , and likewise $ <nat:40> \times <var:g> $ are trivially even elements of $ \mathbb{Z}^+ $ . Likewise , the pairs $ <var:T> \times <nat:308> $ , $ <var:i> \times <nat:462> $ , additionally $ <var:N> \times <nat:134> $ are clearly even numbers in $ \mathbb{N} $ . Furthermore , $ <var:d> \times <nat:270> $ is obviously even . This is proven from the fact the product between an even number in $ \mathbb{N} $ with an arbitrary natural number is trivially an even whole number . The term $ <nat:354> \times <var:B> $ is clearly an even natural . The addition between an even number and an odd element of $ \mathbb{Z}^+ $ must be odd . So , this lemma is true . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:v> <var:T> <var:g> <var:d> <var:B> <var:I> <var:N> <var:i> : nat , Nat . odd ( <nat:414> * <var:v> + <nat:308> * <var:T> + <nat:40> * <var:g> + <nat:270> * <var:d> + <nat:354> * <var:B> + <nat:298> * <var:I> + <nat:134> * <var:N> + <nat:462> * <var:i> + <nat:353> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:298> * <var:I> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:414> * <var:v> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:40> * <var:g> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:308> * <var:T> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:462> * <var:i> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:134> * <var:N> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:270> * <var:d> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:354> * <var:B> ) = true ) . { rewrite Nat . even_mul . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 