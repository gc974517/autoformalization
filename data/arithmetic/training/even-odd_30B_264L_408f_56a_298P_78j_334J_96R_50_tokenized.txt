\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} With $ <var:j> $ , $ <var:a> $ , $ <var:J> $ , $ <var:B> $ , $ <var:P> $ , $ <var:f> $ , $ <var:L> $ , and $ <var:R> \in \mathbb{Z}^+ $ $ <nat:50> + <var:B> \times <nat:30> + <nat:264> \times <var:L> + <var:f> \times <nat:408> + <nat:56> \times <var:a> + <var:P> \times <nat:298> + <nat:78> \times <var:j> + <var:J> \times <nat:334> + <nat:96> \times <var:R> $ must be even . \end{theorem} \begin{proof} In addition , observe the products $ <nat:30> \times <var:B> $ , $ <var:L> \times <nat:264> $ , $ <var:f> \times <nat:408> $ , $ <nat:56> \times <var:a> $ , $ <var:P> \times <nat:298> $ , $ <nat:78> \times <var:j> $ , $ <var:J> \times <nat:334> $ , and moreover $ <var:R> \times <nat:96> $ must be even elements of $ \mathbb{N} $ . This is proven from the fact the multiplication between an even integer and an arbitrary positive integer is guaranteed to be even . This claim holds as a consequence that the numbers $ <nat:30> $ , $ <nat:264> $ , $ <nat:408> $ , $ <nat:56> $ , $ <nat:298> $ , $ <nat:78> $ , $ <nat:334> $ , and also $ <nat:96> $ are guaranteed to be even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:j> <var:a> <var:J> <var:B> <var:P> <var:f> <var:L> <var:R> : nat , Nat . even ( <nat:30> * <var:B> + <nat:264> * <var:L> + <nat:408> * <var:f> + <nat:56> * <var:a> + <nat:298> * <var:P> + <nat:78> * <var:j> + <nat:334> * <var:J> + <nat:96> * <var:R> + <nat:50> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:30> = true ) . { auto . } assert ( <genH> : Nat . even <nat:264> = true ) . { auto . } assert ( <genH> : Nat . even <nat:408> = true ) . { auto . } assert ( <genH> : Nat . even <nat:56> = true ) . { auto . } assert ( <genH> : Nat . even <nat:298> = true ) . { auto . } assert ( <genH> : Nat . even <nat:78> = true ) . { auto . } assert ( <genH> : Nat . even <nat:334> = true ) . { auto . } assert ( <genH> : Nat . even <nat:96> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:30> * <var:B> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:264> * <var:L> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:408> * <var:f> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:56> * <var:a> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:298> * <var:P> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:78> * <var:j> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:334> * <var:J> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:96> * <var:R> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 