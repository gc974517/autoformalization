\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:r> <nat:160> + <nat:256> <var:U> + <var:E> <nat:80> + <nat:110> <var:M> + <nat:230> <var:h> + <nat:66> + <nat:150> <var:w> + <nat:456> <var:I> + <nat:438> <var:O> $ is guaranteed to be even given any $ <var:U> $ , $ <var:E> $ , $ <var:h> $ , $ <var:r> $ , $ <var:w> $ , $ <var:M> $ , $ <var:O> $ , and $ <var:I> \in \mathbb{N} $ . \end{theorem} \begin{proof} Adding on , the coefficients $ <nat:160> $ , $ <nat:256> $ , $ <nat:80> $ , $ <nat:110> $ , $ <nat:230> $ , $ <nat:150> $ , $ <nat:456> $ , additionally $ <nat:438> $ are guaranteed to be even positive integers . In consequence , the terms $ <var:r> <nat:160> $ , $ <var:U> <nat:256> $ , $ <var:E> <nat:80> $ , $ <nat:110> <var:M> $ , $ <var:h> <nat:230> $ , $ <nat:150> <var:w> $ , $ <var:I> <nat:456> $ , plus $ <var:O> <nat:438> $ is even at the same time . We show our claim is proven . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:U> <var:E> <var:h> <var:r> <var:w> <var:M> <var:O> <var:I> : nat , Nat . even ( <nat:160> * <var:r> + <nat:256> * <var:U> + <nat:80> * <var:E> + <nat:110> * <var:M> + <nat:230> * <var:h> + <nat:150> * <var:w> + <nat:456> * <var:I> + <nat:438> * <var:O> + <nat:66> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:160> = true ) . { auto . } assert ( <genH> : Nat . even <nat:256> = true ) . { auto . } assert ( <genH> : Nat . even <nat:80> = true ) . { auto . } assert ( <genH> : Nat . even <nat:110> = true ) . { auto . } assert ( <genH> : Nat . even <nat:230> = true ) . { auto . } assert ( <genH> : Nat . even <nat:150> = true ) . { auto . } assert ( <genH> : Nat . even <nat:456> = true ) . { auto . } assert ( <genH> : Nat . even <nat:438> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:160> * <var:r> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:256> * <var:U> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:80> * <var:E> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:110> * <var:M> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:230> * <var:h> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:150> * <var:w> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:456> * <var:I> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:438> * <var:O> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 