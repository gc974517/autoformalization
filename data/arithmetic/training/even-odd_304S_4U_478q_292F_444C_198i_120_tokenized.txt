\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:S> * <nat:304> + <var:U> * <nat:4> + <var:q> * <nat:478> + <var:F> * <nat:292> + <nat:120> + <var:C> * <nat:444> + <nat:198> * <var:i> $ will be even . \end{theorem} \begin{proof} The summation of even whole numbers concurrently and an even positive integer is guaranteed to be itself an even element of $ \mathbb{Z}^+ $ . Remember that $ <nat:120> $ is obviously even . We know that the natural numbers $ <nat:304> $ , $ <nat:4> $ , $ <nat:478> $ , $ <nat:292> $ , $ <nat:444> $ , plus $ <nat:198> $ are trivially even . As a consequence , the terms $ <nat:304> <var:S> $ , $ <var:U> <nat:4> $ , $ <nat:478> <var:q> $ , $ <nat:292> <var:F> $ , $ <var:C> <nat:444> $ , and $ <nat:198> <var:i> $ will be even as well . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:S> <var:U> <var:q> <var:F> <var:C> <var:i> : nat , Nat . even ( <nat:304> * <var:S> + <nat:4> * <var:U> + <nat:478> * <var:q> + <nat:292> * <var:F> + <nat:444> * <var:C> + <nat:198> * <var:i> + <nat:120> ) = true . Proof . intros . repeat rewrite Nat . even_add . assert ( <genH> : Nat . even <nat:120> = true ) . { auto . } assert ( <genH> : Nat . even <nat:304> = true ) . { auto . } assert ( <genH> : Nat . even <nat:4> = true ) . { auto . } assert ( <genH> : Nat . even <nat:478> = true ) . { auto . } assert ( <genH> : Nat . even <nat:292> = true ) . { auto . } assert ( <genH> : Nat . even <nat:444> = true ) . { auto . } assert ( <genH> : Nat . even <nat:198> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:304> * <var:S> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:4> * <var:U> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:478> * <var:q> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:292> * <var:F> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:444> * <var:C> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:198> * <var:i> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 