\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:F> * <nat:332> + <var:e> * <nat:230> + <var:r> * <nat:138> + <nat:88> * <var:k> + <nat:252> * <var:P> + <var:p> * <nat:246> + <nat:284> * <var:C> + <var:V> * <nat:110> + <nat:44> $ will be even given some unknowns $ <var:p> $ , $ <var:F> $ , $ <var:r> $ , $ <var:P> $ , $ <var:k> $ , $ <var:V> $ , $ <var:C> $ , and $ <var:e> $ . \end{theorem} \begin{proof} See $ <nat:44> $ is known to be even . It can be checked that the summation $ <nat:246> \cdot <var:p> + <nat:44> + <nat:332> \cdot <var:F> + <nat:230> \cdot <var:e> + <var:k> \cdot <nat:88> + <nat:110> \cdot <var:V> + <nat:284> \cdot <var:C> + <var:r> \cdot <nat:138> + <var:P> \cdot <nat:252> $ is even employing the knowledge that the summation between an even number in $ \mathbb{Z}^+ $ and an even element of $ \mathbb{Z}^+ $ is guaranteed to be even . The terms $ <nat:284> * <var:C> $ , $ <nat:332> * <var:F> $ , plus $ <nat:138> * <var:r> $ are guaranteed to be even elements of $ \mathbb{N} $ . This claim is proven as a consequence that taking the product of an even natural number and an arbitrary whole number is an even number in $ \mathbb{N} $ . Additionally , the term $ <var:P> * <nat:252> $ is obviously an even number . Notice the products $ <var:p> * <nat:246> $ , $ <var:e> * <nat:230> $ , and $ <nat:88> * <var:k> $ are even . Further , the product $ <var:V> * <nat:110> $ is trivially even since the product of an even integer with an arbitrary number in $ \mathbb{Z}^+ $ will be even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:p> <var:F> <var:r> <var:P> <var:k> <var:V> <var:C> <var:e> : nat , Nat . even ( <nat:332> * <var:F> + <nat:230> * <var:e> + <nat:138> * <var:r> + <nat:88> * <var:k> + <nat:252> * <var:P> + <nat:246> * <var:p> + <nat:284> * <var:C> + <nat:110> * <var:V> + <nat:44> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:44> = true ) . { auto . } repeat rewrite Nat . even_add . assert ( <genH> : Nat . even ( <nat:284> * <var:C> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:332> * <var:F> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:138> * <var:r> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:252> * <var:P> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:246> * <var:p> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:230> * <var:e> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:88> * <var:k> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:110> * <var:V> ) = true ) . { rewrite Nat . even_mul . auto . } rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 