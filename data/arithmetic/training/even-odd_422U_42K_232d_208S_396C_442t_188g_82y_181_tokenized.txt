\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:422> * <var:U> + <var:K> * <nat:42> + <nat:181> + <nat:232> * <var:d> + <nat:208> * <var:S> + <var:C> * <nat:396> + <nat:442> * <var:t> + <var:g> * <nat:188> + <var:y> * <nat:82> $ will be odd assuming some $ <var:g> $ , $ <var:C> $ , $ <var:d> $ , $ <var:U> $ , $ <var:y> $ , $ <var:t> $ , $ <var:S> $ , and $ <var:K> \in \mathbb{Z}^+ $ . \end{theorem} \begin{proof} Remember $ <nat:181> $ is obviously an odd number . See that the adding between an even integer and an odd whole number must be clearly an odd integer . Observe that the positive integers $ <nat:82> $ , $ <nat:208> $ , additionally $ <nat:42> $ must be even Additionally , observe that the leading term $ <nat:232> $ is guaranteed to be even See the natural number $ <nat:422> $ is obviously even The integers $ <nat:442> $ in addition to $ <nat:188> $ are clearly even elements of $ \mathbb{Z}^+ $ The integer $ <nat:396> $ is an even whole number \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:g> <var:C> <var:d> <var:U> <var:y> <var:t> <var:S> <var:K> : nat , Nat . odd ( <nat:422> * <var:U> + <nat:42> * <var:K> + <nat:232> * <var:d> + <nat:208> * <var:S> + <nat:396> * <var:C> + <nat:442> * <var:t> + <nat:188> * <var:g> + <nat:82> * <var:y> + <nat:181> ) = true . Proof . intros . assert ( <genH> : Nat . odd <nat:181> = true ) . { auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . assert ( <genH> : Nat . even <nat:82> = true ) . { auto . } assert ( <genH> : Nat . even <nat:208> = true ) . { auto . } assert ( <genH> : Nat . even <nat:42> = true ) . { auto . } assert ( <genH> : Nat . even <nat:232> = true ) . { auto . } assert ( <genH> : Nat . even <nat:422> = true ) . { auto . } assert ( <genH> : Nat . even <nat:442> = true ) . { auto . } assert ( <genH> : Nat . even <nat:188> = true ) . { auto . } assert ( <genH> : Nat . even <nat:396> = true ) . { auto . } repeat rewrite Nat . even_mul . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 