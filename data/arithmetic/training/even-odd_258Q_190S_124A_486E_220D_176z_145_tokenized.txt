\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Given every natural terms $ <var:S> $ , $ <var:A> $ , $ <var:Q> $ , $ <var:z> $ , $ <var:D> $ , and $ <var:E> $ $ <var:z> * <nat:176> + <var:E> * <nat:486> + <var:D> * <nat:220> + <nat:258> * <var:Q> + <nat:124> * <var:A> + <nat:190> * <var:S> + <nat:145> $ will be odd . \end{theorem} \begin{proof} The sum $ <nat:258> * <var:Q> + <var:S> * <nat:190> + <var:A> * <nat:124> + <var:E> * <nat:486> + <nat:220> * <var:D> + <var:z> * <nat:176> $ is known as even . See that the positive integers $ <nat:258> $ , $ <nat:190> $ , $ <nat:124> $ , $ <nat:486> $ , $ <nat:220> $ , and moreover $ <nat:176> $ are guaranteed to be even whole numbers . Then , the pairs $ <var:Q> \times <nat:258> $ , $ <nat:190> \times <var:S> $ , $ <var:A> \times <nat:124> $ , $ <var:E> \times <nat:486> $ , $ <nat:220> \times <var:D> $ , and $ <nat:176> \times <var:z> $ will be even at the same time . As a consequence that the product between an even natural number and some number in $ \mathbb{Z}^+ $ must be even the lemma is proven . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:S> <var:A> <var:Q> <var:z> <var:D> <var:E> : nat , Nat . odd ( <nat:176> * <var:z> + <nat:486> * <var:E> + <nat:220> * <var:D> + <nat:258> * <var:Q> + <nat:124> * <var:A> + <nat:190> * <var:S> + <nat:145> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:258> = true ) . { auto . } assert ( <genH> : Nat . even <nat:190> = true ) . { auto . } assert ( <genH> : Nat . even <nat:124> = true ) . { auto . } assert ( <genH> : Nat . even <nat:486> = true ) . { auto . } assert ( <genH> : Nat . even <nat:220> = true ) . { auto . } assert ( <genH> : Nat . even <nat:176> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:258> * <var:Q> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:190> * <var:S> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:124> * <var:A> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:486> * <var:E> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:220> * <var:D> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:176> * <var:z> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:176> * <var:z> + <nat:486> * <var:E> + <nat:220> * <var:D> + <nat:258> * <var:Q> + <nat:124> * <var:A> + <nat:190> * <var:S> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . auto . Qed . 