\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:444> * <var:L> + <nat:378> * <var:M> + <var:i> * <nat:472> + <var:o> * <nat:276> + <nat:3> + <var:J> * <nat:304> + <nat:454> * <var:w> $ is guaranteed to be odd . \end{theorem} \begin{proof} The products $ <var:L> \cdot <nat:444> $ , $ <nat:378> \cdot <var:M> $ , $ <nat:472> \cdot <var:i> $ , $ <var:o> \cdot <nat:276> $ , $ <nat:304> \cdot <var:J> $ , plus $ <var:w> \cdot <nat:454> $ will be even . This must be true since the product between an even element of $ \mathbb{N} $ with a natural must be clearly an even integer , which is proven from the knowledge the numbers $ <nat:444> $ , $ <nat:378> $ , $ <nat:472> $ , $ <nat:276> $ , $ <nat:304> $ , and likewise $ <nat:454> $ are trivially even naturals . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:L> <var:M> <var:i> <var:o> <var:J> <var:w> : nat , Nat . odd ( <nat:444> * <var:L> + <nat:378> * <var:M> + <nat:472> * <var:i> + <nat:276> * <var:o> + <nat:304> * <var:J> + <nat:454> * <var:w> + <nat:3> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:444> = true ) . { auto . } assert ( <genH> : Nat . even <nat:378> = true ) . { auto . } assert ( <genH> : Nat . even <nat:472> = true ) . { auto . } assert ( <genH> : Nat . even <nat:276> = true ) . { auto . } assert ( <genH> : Nat . even <nat:304> = true ) . { auto . } assert ( <genH> : Nat . even <nat:454> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:444> * <var:L> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:378> * <var:M> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:472> * <var:i> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:276> * <var:o> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:304> * <var:J> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:454> * <var:w> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 