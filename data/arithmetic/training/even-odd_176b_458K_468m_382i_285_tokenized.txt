\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:458> * <var:K> + <nat:176> * <var:b> + <var:i> * <nat:382> + <var:m> * <nat:468> + <nat:285> $ must be odd . \end{theorem} \begin{proof} Remember $ <nat:285> $ is guaranteed to be an odd element of $ \mathbb{Z}^+ $ . We justify our theorem is true . The formula $ <var:K> \cdot <nat:458> + <nat:285> + <nat:468> \cdot <var:m> + <nat:382> \cdot <var:i> + <var:b> \cdot <nat:176> $ is guaranteed to be odd from the fact the formula $ <var:m> * <nat:468> + <var:K> * <nat:458> + <var:i> * <nat:382> + <nat:176> * <var:b> $ is known as even . See the number $ <nat:176> $ is known to be an even integer . Accordingly , the product $ <nat:176> * <var:b> $ must be even at the same time . The product $ <nat:458> * <var:K> $ is known as an even integer . This is true since the leading term $ <nat:458> $ is trivially even . Building on , the term $ <var:m> * <nat:468> $ is obviously even . This fact must be true as a consequence that the leading term $ <nat:468> $ is even . Further , the whole number $ <nat:382> $ is clearly even . In consequence , $ <nat:382> * <var:i> $ is even also . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:K> <var:b> <var:i> <var:m> : nat , Nat . odd ( <nat:458> * <var:K> + <nat:176> * <var:b> + <nat:382> * <var:i> + <nat:468> * <var:m> + <nat:285> ) = true . Proof . intros . assert ( <genH> : Nat . odd <nat:285> = true ) . { auto . } assert ( <genH> : Nat . even <nat:176> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:176> * <var:b> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:458> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:458> * <var:K> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:468> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:468> * <var:m> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:382> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:382> * <var:i> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:458> * <var:K> + <nat:176> * <var:b> + <nat:382> * <var:i> + <nat:468> * <var:m> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . rewrite <genH> . auto . Qed . 