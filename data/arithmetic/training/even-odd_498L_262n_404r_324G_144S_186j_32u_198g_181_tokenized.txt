\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Taking positive terms $ <var:u> $ , $ <var:g> $ , $ <var:r> $ , $ <var:S> $ , $ <var:j> $ , $ <var:L> $ , $ <var:G> $ , and $ <var:n> $ the summation $ <nat:262> * <var:n> + <var:r> * <nat:404> + <var:j> * <nat:186> + <nat:144> * <var:S> + <nat:181> + <nat:324> * <var:G> + <nat:498> * <var:L> + <nat:32> * <var:u> + <var:g> * <nat:198> $ is guaranteed to be odd . \end{theorem} \begin{proof} It can be shown that the sum $ <nat:498> \times <var:L> + <var:n> \times <nat:262> + <nat:404> \times <var:r> + <nat:181> + <nat:324> \times <var:G> + <nat:144> \times <var:S> + <var:j> \times <nat:186> + <var:u> \times <nat:32> + <var:g> \times <nat:198> $ is odd . The pairs $ <var:G> \cdot <nat:324> $ , $ <var:r> \cdot <nat:404> $ , and $ <var:L> \cdot <nat:498> $ are guaranteed to be even numbers . In addition , observe that the terms $ <var:u> \cdot <nat:32> $ and $ <var:g> \cdot <nat:198> $ must be even . Notice the product $ <var:S> \cdot <nat:144> $ is obviously even . This claim holds from the fact taking the product of an even positive integer and an arbitrary positive integer is guaranteed to be even . What's more , notice $ <nat:186> \cdot <var:j> $ is clearly even . Additionally , notice the pair $ <nat:262> \cdot <var:n> $ is known as an even natural number . The summing of even numbers in $ \mathbb{N} $ with an odd natural is odd . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:u> <var:g> <var:r> <var:S> <var:j> <var:L> <var:G> <var:n> : nat , Nat . odd ( <nat:262> * <var:n> + <nat:404> * <var:r> + <nat:186> * <var:j> + <nat:144> * <var:S> + <nat:324> * <var:G> + <nat:498> * <var:L> + <nat:32> * <var:u> + <nat:198> * <var:g> + <nat:181> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:324> * <var:G> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:404> * <var:r> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:498> * <var:L> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:32> * <var:u> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:198> * <var:g> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:144> * <var:S> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:186> * <var:j> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:262> * <var:n> ) = true ) . { rewrite Nat . even_mul . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 