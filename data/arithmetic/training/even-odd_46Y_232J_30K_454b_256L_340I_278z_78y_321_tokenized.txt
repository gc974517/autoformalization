\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:321> + <var:Y> \cdot <nat:46> + <var:J> \cdot <nat:232> + <var:K> \cdot <nat:30> + <var:b> \cdot <nat:454> + <nat:256> \cdot <var:L> + <nat:340> \cdot <var:I> + <var:z> \cdot <nat:278> + <nat:78> \cdot <var:y> $ must be odd . \end{theorem} \begin{proof} Notice that the positive integers $ <nat:46> $ , $ <nat:232> $ , $ <nat:30> $ , $ <nat:454> $ , $ <nat:256> $ , $ <nat:340> $ , $ <nat:278> $ , and moreover $ <nat:78> $ are known to be even . In consequence , the pairs $ <var:Y> \times <nat:46> $ , $ <var:J> \times <nat:232> $ , $ <var:K> \times <nat:30> $ , $ <nat:454> \times <var:b> $ , $ <nat:256> \times <var:L> $ , $ <nat:340> \times <var:I> $ , $ <var:z> \times <nat:278> $ , and $ <var:y> \times <nat:78> $ is even as well . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:Y> <var:J> <var:K> <var:b> <var:L> <var:I> <var:z> <var:y> : nat , Nat . odd ( <nat:46> * <var:Y> + <nat:232> * <var:J> + <nat:30> * <var:K> + <nat:454> * <var:b> + <nat:256> * <var:L> + <nat:340> * <var:I> + <nat:278> * <var:z> + <nat:78> * <var:y> + <nat:321> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:46> = true ) . { auto . } assert ( <genH> : Nat . even <nat:232> = true ) . { auto . } assert ( <genH> : Nat . even <nat:30> = true ) . { auto . } assert ( <genH> : Nat . even <nat:454> = true ) . { auto . } assert ( <genH> : Nat . even <nat:256> = true ) . { auto . } assert ( <genH> : Nat . even <nat:340> = true ) . { auto . } assert ( <genH> : Nat . even <nat:278> = true ) . { auto . } assert ( <genH> : Nat . even <nat:78> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:46> * <var:Y> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:232> * <var:J> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:30> * <var:K> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:454> * <var:b> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:256> * <var:L> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:340> * <var:I> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:278> * <var:z> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:78> * <var:y> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 