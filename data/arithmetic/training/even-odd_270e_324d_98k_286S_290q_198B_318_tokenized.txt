\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:e> \times <nat:270> + <nat:324> \times <var:d> + <var:k> \times <nat:98> + <nat:318> + <nat:286> \times <var:S> + <var:q> \times <nat:290> + <nat:198> \times <var:B> $ is guaranteed to be even with some whole numbers $ <var:d> $ , $ <var:q> $ , $ <var:B> $ , $ <var:S> $ , $ <var:k> $ , and $ <var:e> $ . \end{theorem} \begin{proof} Likewise , we know that the products $ <var:e> \cdot <nat:270> $ , $ <nat:324> \cdot <var:d> $ , $ <var:k> \cdot <nat:98> $ , $ <nat:286> \cdot <var:S> $ , $ <nat:290> \cdot <var:q> $ , as well as $ <var:B> \cdot <nat:198> $ are guaranteed to be even . This claim must be true from the knowledge the coefficients $ <nat:270> $ , $ <nat:324> $ , $ <nat:98> $ , $ <nat:286> $ , $ <nat:290> $ , as well as $ <nat:198> $ are even positive integers . We know $ <nat:318> $ is even . It can be checked that the theorem holds . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:d> <var:q> <var:B> <var:S> <var:k> <var:e> : nat , Nat . even ( <nat:270> * <var:e> + <nat:324> * <var:d> + <nat:98> * <var:k> + <nat:286> * <var:S> + <nat:290> * <var:q> + <nat:198> * <var:B> + <nat:318> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:270> = true ) . { auto . } assert ( <genH> : Nat . even <nat:324> = true ) . { auto . } assert ( <genH> : Nat . even <nat:98> = true ) . { auto . } assert ( <genH> : Nat . even <nat:286> = true ) . { auto . } assert ( <genH> : Nat . even <nat:290> = true ) . { auto . } assert ( <genH> : Nat . even <nat:198> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:270> * <var:e> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:324> * <var:d> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:98> * <var:k> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:286> * <var:S> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:290> * <var:q> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:198> * <var:B> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:318> = true ) . { auto . } repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 