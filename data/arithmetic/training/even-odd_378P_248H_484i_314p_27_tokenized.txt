\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:i> \cdot <nat:484> + <nat:27> + <var:H> \cdot <nat:248> + <var:p> \cdot <nat:314> + <nat:378> \cdot <var:P> $ is guaranteed to be odd . \end{theorem} \begin{proof} Take note the leading term $ <nat:248> $ is guaranteed to be even . For this reason , the term $ <var:H> \times <nat:248> $ will be even also . Adding on , the term $ <nat:314> \times <var:p> $ is obviously an even whole number . This claim must be true from the fact the number $ <nat:314> $ is guaranteed to be an even element of $ \mathbb{Z}^+ $ . Additionally , remember that the whole number $ <nat:484> $ is even . For this reason , $ <nat:484> \times <var:i> $ is guaranteed to be even in addition . The product $ <nat:378> \times <var:P> $ is clearly an even number in $ \mathbb{Z}^+ $ . This fact is true because the product of an even element of $ \mathbb{N} $ and any natural must be clearly an even number in $ \mathbb{N} $ and the number $ <nat:378> $ is known to be even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:i> <var:H> <var:p> <var:P> : nat , Nat . odd ( <nat:484> * <var:i> + <nat:248> * <var:H> + <nat:314> * <var:p> + <nat:378> * <var:P> + <nat:27> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:248> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:248> * <var:H> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:314> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:314> * <var:p> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:484> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:484> * <var:i> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:378> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:378> * <var:P> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 