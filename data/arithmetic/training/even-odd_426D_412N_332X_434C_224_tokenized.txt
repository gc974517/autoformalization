\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:434> <var:C> + <var:X> <nat:332> + <var:N> <nat:412> + <nat:426> <var:D> + <nat:224> $ will be even . \end{theorem} \begin{proof} Recall that $ <nat:224> $ is obviously even . It can be demonstrated that the summation $ <nat:224> + <nat:412> <var:N> + <nat:426> <var:D> + <var:X> <nat:332> + <var:C> <nat:434> $ is guaranteed to be even . It can be proven that that the summation $ <var:D> * <nat:426> + <var:N> * <nat:412> + <nat:332> * <var:X> + <nat:434> * <var:C> $ is guaranteed to be even , from the fact the adding between an even number in $ \mathbb{Z}^+ $ and an even element of $ \mathbb{N} $ is guaranteed to be even . We know the whole numbers $ <nat:426> $ , $ <nat:412> $ , $ <nat:332> $ , and $ <nat:434> $ are obviously even elements of $ \mathbb{N} $ . Then , the products $ <nat:426> * <var:D> $ , $ <var:N> * <nat:412> $ , $ <var:X> * <nat:332> $ , as well as $ <nat:434> * <var:C> $ is guaranteed to be even as well . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:C> <var:X> <var:N> <var:D> : nat , Nat . even ( <nat:434> * <var:C> + <nat:332> * <var:X> + <nat:412> * <var:N> + <nat:426> * <var:D> + <nat:224> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:224> = true ) . { auto . } assert ( <genH> : Nat . even <nat:426> = true ) . { auto . } assert ( <genH> : Nat . even <nat:412> = true ) . { auto . } assert ( <genH> : Nat . even <nat:332> = true ) . { auto . } assert ( <genH> : Nat . even <nat:434> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:426> * <var:D> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:412> * <var:N> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:332> * <var:X> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:434> * <var:C> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:434> * <var:C> + <nat:332> * <var:X> + <nat:412> * <var:N> + <nat:426> * <var:D> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . auto . Qed . 