\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:i> \times <nat:136> + <nat:182> \times <var:X> + <nat:326> \times <var:q> + <nat:162> \times <var:Y> + <nat:120> \times <var:W> + <nat:485> + <var:S> \times <nat:418> + <nat:458> \times <var:s> + <nat:158> \times <var:O> $ is odd assuming every positive numbers $ <var:s> $ , $ <var:S> $ , $ <var:i> $ , $ <var:q> $ , $ <var:W> $ , $ <var:O> $ , $ <var:X> $ , and $ <var:Y> $ . \end{theorem} \begin{proof} It can be verified that the expression $ <var:q> <nat:326> + <nat:485> + <nat:162> <var:Y> + <nat:418> <var:S> + <var:O> <nat:158> + <nat:458> <var:s> + <var:i> <nat:136> + <var:X> <nat:182> + <nat:120> <var:W> $ is guaranteed to be odd . The natural number $ <nat:182> $ is obviously even Notice the coefficients $ <nat:418> $ , $ <nat:458> $ , $ <nat:162> $ , $ <nat:158> $ , $ <nat:120> $ , and $ <nat:326> $ are known as even positive integers Further , the whole number $ <nat:136> $ is clearly even Notice multiplying between even elements of $ \mathbb{Z}^+ $ is guaranteed to be an even number in $ \mathbb{Z}^+ $ . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:s> <var:S> <var:i> <var:q> <var:W> <var:O> <var:X> <var:Y> : nat , Nat . odd ( <nat:136> * <var:i> + <nat:182> * <var:X> + <nat:326> * <var:q> + <nat:162> * <var:Y> + <nat:120> * <var:W> + <nat:418> * <var:S> + <nat:458> * <var:s> + <nat:158> * <var:O> + <nat:485> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:182> = true ) . { auto . } assert ( <genH> : Nat . even <nat:418> = true ) . { auto . } assert ( <genH> : Nat . even <nat:458> = true ) . { auto . } assert ( <genH> : Nat . even <nat:162> = true ) . { auto . } assert ( <genH> : Nat . even <nat:158> = true ) . { auto . } assert ( <genH> : Nat . even <nat:120> = true ) . { auto . } assert ( <genH> : Nat . even <nat:326> = true ) . { auto . } assert ( <genH> : Nat . even <nat:136> = true ) . { auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . repeat rewrite Nat . even_mul . rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 