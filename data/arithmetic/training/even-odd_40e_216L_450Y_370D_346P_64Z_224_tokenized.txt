\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Assuming every natural numbers $ <var:P> $ , $ <var:D> $ , $ <var:L> $ , $ <var:e> $ , $ <var:Y> $ , and $ <var:Z> $ $ <var:e> * <nat:40> + <nat:224> + <var:L> * <nat:216> + <nat:450> * <var:Y> + <var:D> * <nat:370> + <nat:346> * <var:P> + <var:Z> * <nat:64> $ is even . \end{theorem} \begin{proof} Furthermore , the natural numbers $ <nat:40> $ , $ <nat:216> $ , $ <nat:450> $ , $ <nat:370> $ , $ <nat:346> $ , additionally $ <nat:64> $ are known as even . As a consequence , the products $ <nat:40> * <var:e> $ , $ <var:L> * <nat:216> $ , $ <var:Y> * <nat:450> $ , $ <nat:370> * <var:D> $ , $ <var:P> * <nat:346> $ , additionally $ <var:Z> * <nat:64> $ must be even also . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:P> <var:D> <var:L> <var:e> <var:Y> <var:Z> : nat , Nat . even ( <nat:40> * <var:e> + <nat:216> * <var:L> + <nat:450> * <var:Y> + <nat:370> * <var:D> + <nat:346> * <var:P> + <nat:64> * <var:Z> + <nat:224> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:40> = true ) . { auto . } assert ( <genH> : Nat . even <nat:216> = true ) . { auto . } assert ( <genH> : Nat . even <nat:450> = true ) . { auto . } assert ( <genH> : Nat . even <nat:370> = true ) . { auto . } assert ( <genH> : Nat . even <nat:346> = true ) . { auto . } assert ( <genH> : Nat . even <nat:64> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:40> * <var:e> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:216> * <var:L> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:450> * <var:Y> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:370> * <var:D> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:346> * <var:P> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:64> * <var:Z> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 