\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:476> + <var:g> * <nat:8> + <nat:456> * <var:f> + <nat:74> * <var:r> + <var:b> * <nat:58> + <nat:214> * <var:j> + <nat:6> * <var:X> $ is guaranteed to be even . \end{theorem} \begin{proof} What's more , the pairs $ <var:g> \cdot <nat:8> $ , $ <nat:456> \cdot <var:f> $ , $ <var:r> \cdot <nat:74> $ , $ <var:b> \cdot <nat:58> $ , $ <var:j> \cdot <nat:214> $ , and likewise $ <nat:6> \cdot <var:X> $ are guaranteed to be even as a consequence that the numbers $ <nat:8> $ , $ <nat:456> $ , $ <nat:74> $ , $ <nat:58> $ , $ <nat:214> $ , and $ <nat:6> $ are even . The summation between even naturals successively with an even number in $ \mathbb{N} $ will be even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:g> <var:f> <var:r> <var:b> <var:j> <var:X> : nat , Nat . even ( <nat:8> * <var:g> + <nat:456> * <var:f> + <nat:74> * <var:r> + <nat:58> * <var:b> + <nat:214> * <var:j> + <nat:6> * <var:X> + <nat:476> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:8> = true ) . { auto . } assert ( <genH> : Nat . even <nat:456> = true ) . { auto . } assert ( <genH> : Nat . even <nat:74> = true ) . { auto . } assert ( <genH> : Nat . even <nat:58> = true ) . { auto . } assert ( <genH> : Nat . even <nat:214> = true ) . { auto . } assert ( <genH> : Nat . even <nat:6> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:8> * <var:g> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:456> * <var:f> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:74> * <var:r> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:58> * <var:b> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:214> * <var:j> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:6> * <var:X> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 