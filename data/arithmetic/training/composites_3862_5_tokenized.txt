\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \newtheorem{definition}{Definition} \begin{document} \begin{definition} There exist $ <var:m> $ , $ <var:e> $ , $ <var:q> $ , $ <var:B> $ , $ <var:v> \in \mathbb{Z}^+ $ satisfying the condition that $ <var:e> $ , $ <var:m> $ , $ <var:B> $ , $ <var:v> $ , $ <var:q> \geq <nat:2> $ . Take that $ <var:p> \in \mathbb{Z}^+ $ is defined to be a <def:five-composite> natural number assuming $ <var:p> = <var:m> \times <var:v> \times <var:B> \times <var:e> \times <var:q> $ . \end{definition} \begin{theorem} The positive integer <nat:47520> is a <def:five-composite> natural number . \end{theorem} \begin{proof} Notice $ <nat:5> $ , $ <nat:8> $ , $ <nat:12> $ , $ <nat:11> $ , $ <nat:9> $ are greater than or equal to <nat:2> . Similarly note still $ <var:q> * <var:e> * <var:m> * <var:B> * <var:v> = <nat:47520> $ implies $ <var:e> = <nat:5> $ , $ <var:m> = <nat:9> $ , $ <var:v> = <nat:8> $ , $ <var:B> = <nat:11> $ and $ <var:q> = <nat:12> $ . This implies the principle holds . Because of this , <nat:47520> is the product between some natural numbers $ <var:q> $ , $ <var:B> $ , $ <var:e> $ , $ <var:m> $ and $ <var:v> $ is validated . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:five-composite> ( <var:p> : nat ) := exists <var:m> <var:e> <var:q> <var:B> <var:v> : nat , ( <var:e> >= <nat:2> ) /\ ( <var:m> >= <nat:2> ) /\ ( <var:B> >= <nat:2> ) /\ ( <var:v> >= <nat:2> ) /\ ( <var:q> >= <nat:2> ) /\ ( <var:p> = <var:m> * <var:v> * <var:B> * <var:e> * <var:q> ) . Theorem <genP:1> : <def:five-composite> <nat:47520> . Proof . unfold <def:five-composite> . assert ( <genH> : <nat:5> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:8> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:12> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:11> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:9> >= <nat:2> ) . { lia . } exists <nat:9> . exists <nat:5> . exists <nat:12> . exists <nat:11> . exists <nat:8> . repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 