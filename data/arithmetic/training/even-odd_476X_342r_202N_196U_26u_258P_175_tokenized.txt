\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Using any $ <var:u> $ , $ <var:r> $ , $ <var:N> $ , $ <var:X> $ , $ <var:P> $ , and $ <var:U> $ the formula $ <nat:175> + <var:X> \times <nat:476> + <var:U> \times <nat:196> + <var:u> \times <nat:26> + <var:r> \times <nat:342> + <nat:202> \times <var:N> + <var:P> \times <nat:258> $ is odd . \end{theorem} \begin{proof} The claim must be true because $ <var:X> \cdot <nat:476> + <nat:342> \cdot <var:r> + <nat:202> \cdot <var:N> + <nat:196> \cdot <var:U> + <var:u> \cdot <nat:26> + <var:P> \cdot <nat:258> $ is even . Likewise , the products $ <var:X> \cdot <nat:476> $ , $ <var:r> \cdot <nat:342> $ , $ <nat:202> \cdot <var:N> $ , $ <var:U> \cdot <nat:196> $ , $ <nat:26> \cdot <var:u> $ , and moreover $ <var:P> \cdot <nat:258> $ are trivially even because the leading terms $ <nat:476> $ , $ <nat:342> $ , $ <nat:202> $ , $ <nat:196> $ , $ <nat:26> $ , and moreover $ <nat:258> $ are obviously even . It can be checked that our lemma must be true . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:u> <var:r> <var:N> <var:X> <var:P> <var:U> : nat , Nat . odd ( <nat:476> * <var:X> + <nat:196> * <var:U> + <nat:26> * <var:u> + <nat:342> * <var:r> + <nat:202> * <var:N> + <nat:258> * <var:P> + <nat:175> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:476> = true ) . { auto . } assert ( <genH> : Nat . even <nat:342> = true ) . { auto . } assert ( <genH> : Nat . even <nat:202> = true ) . { auto . } assert ( <genH> : Nat . even <nat:196> = true ) . { auto . } assert ( <genH> : Nat . even <nat:26> = true ) . { auto . } assert ( <genH> : Nat . even <nat:258> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:476> * <var:X> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:342> * <var:r> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:202> * <var:N> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:196> * <var:U> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:26> * <var:u> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:258> * <var:P> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:476> * <var:X> + <nat:196> * <var:U> + <nat:26> * <var:u> + <nat:342> * <var:r> + <nat:202> * <var:N> + <nat:258> * <var:P> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . auto . Qed . 