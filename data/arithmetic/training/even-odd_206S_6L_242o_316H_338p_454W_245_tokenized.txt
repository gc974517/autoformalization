\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:o> \cdot <nat:242> + <var:S> \cdot <nat:206> + <nat:316> \cdot <var:H> + <nat:6> \cdot <var:L> + <nat:454> \cdot <var:W> + <nat:338> \cdot <var:p> + <nat:245> $ must be odd with variables $ <var:p> $ , $ <var:W> $ , $ <var:L> $ , $ <var:S> $ , $ <var:H> $ , and $ <var:o> $ . \end{theorem} \begin{proof} We use the fact the sum $ <nat:316> * <var:H> + <var:S> * <nat:206> + <var:p> * <nat:338> + <nat:245> + <nat:6> * <var:L> + <nat:454> * <var:W> + <var:o> * <nat:242> $ is known as odd as a consequence that the sum $ <nat:206> * <var:S> + <nat:6> * <var:L> + <nat:242> * <var:o> + <nat:316> * <var:H> + <var:p> * <nat:338> + <nat:454> * <var:W> $ is guaranteed to be even , since the totaling of even numbers in $ \mathbb{N} $ collectively with an even element of $ \mathbb{N} $ is by definition an even natural . Observe the whole numbers $ <nat:206> $ , $ <nat:6> $ , $ <nat:242> $ , $ <nat:316> $ , $ <nat:338> $ , $ <nat:454> $ , are guaranteed to be even . Then , the pairs $ <nat:206> \times <var:S> $ , $ <nat:6> \times <var:L> $ , $ <nat:242> \times <var:o> $ , $ <var:H> \times <nat:316> $ , $ <var:p> \times <nat:338> $ , $ <var:W> \times <nat:454> $ , must be even at the same time . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:p> <var:W> <var:L> <var:S> <var:H> <var:o> : nat , Nat . odd ( <nat:242> * <var:o> + <nat:206> * <var:S> + <nat:316> * <var:H> + <nat:6> * <var:L> + <nat:454> * <var:W> + <nat:338> * <var:p> + <nat:245> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:206> = true ) . { auto . } assert ( <genH> : Nat . even <nat:6> = true ) . { auto . } assert ( <genH> : Nat . even <nat:242> = true ) . { auto . } assert ( <genH> : Nat . even <nat:316> = true ) . { auto . } assert ( <genH> : Nat . even <nat:338> = true ) . { auto . } assert ( <genH> : Nat . even <nat:454> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:206> * <var:S> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:6> * <var:L> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:242> * <var:o> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:316> * <var:H> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:338> * <var:p> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:454> * <var:W> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:242> * <var:o> + <nat:206> * <var:S> + <nat:316> * <var:H> + <nat:6> * <var:L> + <nat:454> * <var:W> + <nat:338> * <var:p> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . auto . Qed . 