\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \newtheorem{definition}{Definition} \begin{document} \begin{definition} $ \exists <var:u> $ , $ <var:O> $ , $ <var:z> $ , $ <var:e> $ , $ <var:I> $ , $ <var:i> $ , $ <var:y> $ , $ <var:q> $ , $ <var:x> \in \mathbb{Z}^+ $ larger than or equal to <nat:2> . Take that some integer $ <var:Q> $ is defined to be a <def:nine-composite> positive integer if $ <var:Q> = <var:z> \cdot <var:e> \cdot <var:q> \cdot <var:u> \cdot <var:i> \cdot <var:y> \cdot <var:O> \cdot <var:x> \cdot <var:I> $ . \end{definition} \begin{theorem} The positive integer <nat:13685760> is <def:nine-composite> . \end{theorem} \begin{proof} Assume $ <var:q> = <nat:3> $ , $ <var:u> = <nat:8> $ , $ <var:x> = <nat:12> $ , $ <var:e> = <nat:6> $ , $ <var:y> = <nat:4> $ , $ <var:O> = <nat:2> $ , $ <var:z> = <nat:11> $ , $ <var:i> = <nat:9> $ , $ <var:I> = <nat:10> $ . We present <nat:13685760> is <def:nine-composite> because $ <nat:4> $ , $ <nat:9> $ , $ <nat:10> $ , $ <nat:8> $ , $ <nat:12> $ , $ <nat:6> $ , $ <nat:2> $ , $ <nat:3> $ and $ <nat:11> $ are larger than or equal to <nat:2> as well as in view of $ <var:z> \cdot <var:I> \cdot <var:O> \cdot <var:i> \cdot <var:u> \cdot <var:y> \cdot <var:x> \cdot <var:q> \cdot <var:e> = <nat:13685760> $ . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:nine-composite> ( <var:Q> : nat ) := exists <var:u> <var:O> <var:z> <var:e> <var:I> <var:i> <var:y> <var:q> <var:x> : nat , ( <var:u> >= <nat:2> ) /\ ( <var:O> >= <nat:2> ) /\ ( <var:z> >= <nat:2> ) /\ ( <var:e> >= <nat:2> ) /\ ( <var:I> >= <nat:2> ) /\ ( <var:i> >= <nat:2> ) /\ ( <var:y> >= <nat:2> ) /\ ( <var:q> >= <nat:2> ) /\ ( <var:x> >= <nat:2> ) /\ ( <var:Q> = <var:z> * <var:e> * <var:q> * <var:u> * <var:i> * <var:y> * <var:O> * <var:x> * <var:I> ) . Theorem <genP:1> : <def:nine-composite> <nat:13685760> . Proof . unfold <def:nine-composite> . exists <nat:8> . exists <nat:2> . exists <nat:11> . exists <nat:6> . exists <nat:10> . exists <nat:9> . exists <nat:4> . exists <nat:3> . exists <nat:12> . assert ( <genH> : <nat:4> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:9> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:10> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:8> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:12> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:6> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:2> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:3> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:11> >= <nat:2> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 