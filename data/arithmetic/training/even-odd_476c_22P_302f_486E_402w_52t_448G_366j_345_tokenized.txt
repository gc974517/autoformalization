\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Using every $ <var:G> $ , $ <var:j> $ , $ <var:E> $ , $ <var:t> $ , $ <var:f> $ , $ <var:c> $ , $ <var:P> $ , and $ <var:w> \in \mathbb{N} $ the expression $ <var:c> \cdot <nat:476> + <nat:22> \cdot <var:P> + <nat:302> \cdot <var:f> + <var:E> \cdot <nat:486> + <nat:402> \cdot <var:w> + <nat:345> + <nat:52> \cdot <var:t> + <var:G> \cdot <nat:448> + <nat:366> \cdot <var:j> $ must be odd . \end{theorem} \begin{proof} The terms $ <var:c> * <nat:476> $ , $ <nat:22> * <var:P> $ , $ <var:f> * <nat:302> $ , $ <nat:486> * <var:E> $ , $ <nat:402> * <var:w> $ , $ <var:t> * <nat:52> $ , $ <var:G> * <nat:448> $ , and also $ <var:j> * <nat:366> $ are even . This must be true since taking the product of an even element of $ \mathbb{Z}^+ $ with any element of $ \mathbb{N} $ will be even , which holds because the numbers $ <nat:476> $ , $ <nat:22> $ , $ <nat:302> $ , $ <nat:486> $ , $ <nat:402> $ , $ <nat:52> $ , $ <nat:448> $ , and also $ <nat:366> $ are clearly even naturals . Because the addition between even elements of $ \mathbb{Z}^+ $ with an odd natural is odd , as a result the proposition must be true . We know $ <nat:345> $ is clearly an odd number in $ \mathbb{N} $ . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:G> <var:j> <var:E> <var:t> <var:f> <var:c> <var:P> <var:w> : nat , Nat . odd ( <nat:476> * <var:c> + <nat:22> * <var:P> + <nat:302> * <var:f> + <nat:486> * <var:E> + <nat:402> * <var:w> + <nat:52> * <var:t> + <nat:448> * <var:G> + <nat:366> * <var:j> + <nat:345> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:476> = true ) . { auto . } assert ( <genH> : Nat . even <nat:22> = true ) . { auto . } assert ( <genH> : Nat . even <nat:302> = true ) . { auto . } assert ( <genH> : Nat . even <nat:486> = true ) . { auto . } assert ( <genH> : Nat . even <nat:402> = true ) . { auto . } assert ( <genH> : Nat . even <nat:52> = true ) . { auto . } assert ( <genH> : Nat . even <nat:448> = true ) . { auto . } assert ( <genH> : Nat . even <nat:366> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:476> * <var:c> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:22> * <var:P> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:302> * <var:f> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:486> * <var:E> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:402> * <var:w> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:52> * <var:t> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:448> * <var:G> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:366> * <var:j> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . assert ( <genH> : Nat . odd <nat:345> = true ) . { auto . } rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 