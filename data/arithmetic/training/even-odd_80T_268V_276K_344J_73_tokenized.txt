\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:T> \cdot <nat:80> + <nat:73> + <var:V> \cdot <nat:268> + <var:J> \cdot <nat:344> + <var:K> \cdot <nat:276> $ is odd with whole numbers $ <var:J> $ , $ <var:K> $ , $ <var:T> $ , and $ <var:V> $ . \end{theorem} \begin{proof} The summation between even elements of $ \mathbb{Z}^+ $ together with an odd positive integer is an odd natural . Notice $ <nat:73> $ is known to be odd . We utilize $ <var:V> * <nat:268> + <nat:80> * <var:T> + <var:J> * <nat:344> + <var:K> * <nat:276> + <nat:73> $ is guaranteed to be odd because $ <var:T> <nat:80> + <nat:268> <var:V> + <nat:276> <var:K> + <var:J> <nat:344> $ is guaranteed to be even . Observe that the leading terms $ <nat:80> $ , $ <nat:268> $ , $ <nat:276> $ , plus $ <nat:344> $ are known to be even numbers . Thus , the terms $ <var:T> \cdot <nat:80> $ , $ <nat:268> \cdot <var:V> $ , $ <var:K> \cdot <nat:276> $ , plus $ <var:J> \cdot <nat:344> $ is even as well . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:J> <var:K> <var:T> <var:V> : nat , Nat . odd ( <nat:80> * <var:T> + <nat:268> * <var:V> + <nat:344> * <var:J> + <nat:276> * <var:K> + <nat:73> ) = true . Proof . intros . rewrite Nat . odd_add . assert ( <genH> : Nat . odd <nat:73> = true ) . { auto . } assert ( <genH> : Nat . even <nat:80> = true ) . { auto . } assert ( <genH> : Nat . even <nat:268> = true ) . { auto . } assert ( <genH> : Nat . even <nat:276> = true ) . { auto . } assert ( <genH> : Nat . even <nat:344> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:80> * <var:T> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:268> * <var:V> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:276> * <var:K> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:344> * <var:J> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:80> * <var:T> + <nat:268> * <var:V> + <nat:344> * <var:J> + <nat:276> * <var:K> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite <- Nat . negb_even . rewrite <genH> . rewrite <genH> . auto . Qed . 