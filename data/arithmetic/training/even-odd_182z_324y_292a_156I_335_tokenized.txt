\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:335> + <var:z> * <nat:182> + <nat:156> * <var:I> + <nat:324> * <var:y> + <nat:292> * <var:a> $ is odd . \end{theorem} \begin{proof} We work with the assumption the fact the formula $ <nat:156> \cdot <var:I> + <var:z> \cdot <nat:182> + <var:a> \cdot <nat:292> + <nat:324> \cdot <var:y> $ is known to be even . Remember the addition between even numbers in $ \mathbb{Z}^+ $ collectively and an even number is fundamentally an even natural number . The coefficient $ <nat:182> $ is guaranteed to be even . As a consequence , $ <nat:182> <var:z> $ must be even also . Further , observe $ <var:y> <nat:324> $ is guaranteed to be even from the fact the multiplication of an even number in $ \mathbb{N} $ with some number in $ \mathbb{Z}^+ $ is by itself an even positive integer and the number $ <nat:324> $ is trivially an even positive integer . The natural number $ <nat:156> $ is obviously even . As a consequence , the term $ <var:I> <nat:156> $ will be even additionally . Notice that the integer $ <nat:292> $ is clearly an even number in $ \mathbb{Z}^+ $ . So , the product $ <var:a> <nat:292> $ must be even additionally . and likewise from the knowledge the multiplication between an even whole number and any number in $ \mathbb{N} $ will be an even number in $ \mathbb{Z}^+ $ the formula $ <nat:182> * <var:z> + <nat:324> * <var:y> + <nat:292> * <var:a> + <nat:156> * <var:I> $ must be by its very nature even . It can be justified that the proposition must be true . Recall $ <nat:335> $ is odd . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:z> <var:I> <var:y> <var:a> : nat , Nat . odd ( <nat:182> * <var:z> + <nat:156> * <var:I> + <nat:324> * <var:y> + <nat:292> * <var:a> + <nat:335> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:182> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:182> * <var:z> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:324> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:324> * <var:y> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:156> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:156> * <var:I> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:292> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:292> * <var:a> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:182> * <var:z> + <nat:156> * <var:I> + <nat:324> * <var:y> + <nat:292> * <var:a> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } assert ( <genH> : Nat . odd <nat:335> = true ) . { auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . rewrite <genH> . auto . Qed . 