\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \newtheorem{definition}{Definition} \begin{document} \begin{definition} Take that $ <var:Q> $ is a <def:nine-composite> whole number supposing that there are $ <var:h> $ , $ <var:D> $ , $ <var:c> $ , $ <var:U> $ , $ <var:B> $ , $ <var:s> $ , $ <var:V> $ , $ <var:f> $ , $ <var:u> \in \mathbb{Z}^+ $ where $ <var:D> $ , $ <var:U> $ , $ <var:u> $ , $ <var:h> $ , $ <var:f> $ , $ <var:c> $ , $ <var:s> $ , $ <var:V> $ , $ <var:B> \geq <nat:2> $ and taking $ <var:Q> \in \mathbb{Z}^+ $ , $ <var:Q> = <var:h> \cdot <var:D> \cdot <var:s> \cdot <var:u> \cdot <var:c> \cdot <var:f> \cdot <var:B> \cdot <var:V> \cdot <var:U> $ . \end{definition} \begin{theorem} $ <nat:5443200> = <var:Q> $ is a <def:nine-composite> integer . \end{theorem} \begin{proof} Assume $ <var:h> = <nat:6> $ , $ <var:D> = <nat:2> $ , $ <var:s> = <nat:5> $ , $ <var:u> = <nat:12> $ , $ <var:f> = <nat:3> $ , $ <var:c> = <nat:10> $ , $ <var:U> = <nat:7> $ , $ <var:V> = <nat:4> $ and $ <var:B> = <nat:9> $ . Furthermore observe $ <var:B> = <nat:9> $ , $ <var:U> = <nat:7> $ , $ <var:f> = <nat:3> $ , $ <var:u> = <nat:12> $ , $ <var:D> = <nat:2> $ , $ <var:V> = <nat:4> $ , $ <var:s> = <nat:5> $ , $ <var:c> = <nat:10> $ and $ <var:h> = <nat:6> $ are greater than or equal to <nat:2> . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:nine-composite> ( <var:Q> : nat ) := exists <var:h> <var:D> <var:c> <var:U> <var:B> <var:s> <var:V> <var:f> <var:u> : nat , ( <var:D> >= <nat:2> ) /\ ( <var:U> >= <nat:2> ) /\ ( <var:u> >= <nat:2> ) /\ ( <var:h> >= <nat:2> ) /\ ( <var:f> >= <nat:2> ) /\ ( <var:c> >= <nat:2> ) /\ ( <var:s> >= <nat:2> ) /\ ( <var:V> >= <nat:2> ) /\ ( <var:B> >= <nat:2> ) /\ ( <var:Q> = <var:h> * <var:D> * <var:s> * <var:u> * <var:c> * <var:f> * <var:B> * <var:V> * <var:U> ) . Theorem <genP:1> : <def:nine-composite> <nat:5443200> . Proof . unfold <def:nine-composite> . exists <nat:6> . exists <nat:2> . exists <nat:10> . exists <nat:7> . exists <nat:9> . exists <nat:5> . exists <nat:4> . exists <nat:3> . exists <nat:12> . assert ( <genH> : <nat:9> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:7> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:3> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:12> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:2> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:4> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:5> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:10> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:6> >= <nat:2> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 