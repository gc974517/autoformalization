\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Allow $ <var:L> $ , $ <var:A> $ , $ <var:D> $ , $ <var:U> $ , $ <var:x> $ , $ <var:t> $ , $ <var:B> $ , $ <var:C> $ , $ <var:r> \in \mathbb{Z}^+ $ . We define that $ <var:m> \in \mathbb{N} $ will be a <def:nine-composite> positive integer assuming $ <var:m> = <var:D> \cdot <var:L> \cdot <var:x> \cdot <var:t> \cdot <var:A> \cdot <var:C> \cdot <var:r> \cdot <var:U> \cdot <var:B> $ plus unique factors are more than or equivalent to <nat:2> . Consequently $ <nat:7983360> = <var:m> $ is a <def:nine-composite> integer . \end{theorem} \begin{proof} Recall a <def:nine-composite> integer is the multiplication of whole numbers $ <var:U> $ , $ <var:C> $ , $ <var:D> $ , $ <var:x> $ , $ <var:A> $ , $ <var:L> $ , $ <var:B> $ , $ <var:r> $ , $ <var:t> $ such that $ <var:D> $ , $ <var:x> $ , $ <var:B> $ , $ <var:r> $ , $ <var:U> $ , $ <var:t> $ , $ <var:L> $ , $ <var:C> $ , and $ <var:A> \geq <nat:2> $ . Observe that $ <nat:9> * <nat:12> * <nat:2> * <nat:5> * <nat:7> * <nat:11> * <nat:8> * <nat:4> * <nat:3> = <nat:7983360> $ . In addition observe $ <nat:5> $ , $ <nat:9> $ , $ <nat:12> $ , $ <nat:3> $ , $ <nat:7> $ , $ <nat:4> $ , $ <nat:8> $ , $ <nat:2> $ , $ <nat:11> $ are more than or equal to <nat:2> . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:nine-composite> ( <var:m> : nat ) := exists <var:L> <var:A> <var:D> <var:U> <var:x> <var:t> <var:B> <var:C> <var:r> : nat , ( <var:m> = <var:D> * <var:L> * <var:x> * <var:t> * <var:A> * <var:C> * <var:r> * <var:U> * <var:B> ) /\ ( <var:L> >= <nat:2> ) /\ ( <var:A> >= <nat:2> ) /\ ( <var:D> >= <nat:2> ) /\ ( <var:U> >= <nat:2> ) /\ ( <var:x> >= <nat:2> ) /\ ( <var:t> >= <nat:2> ) /\ ( <var:B> >= <nat:2> ) /\ ( <var:C> >= <nat:2> ) /\ ( <var:r> >= <nat:2> ) . Theorem <genP:1> : <def:nine-composite> <nat:7983360> . Proof . unfold <def:nine-composite> . exists <nat:11> . exists <nat:8> . exists <nat:12> . exists <nat:7> . exists <nat:3> . exists <nat:4> . exists <nat:2> . exists <nat:9> . exists <nat:5> . assert ( <genH> : <nat:5> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:9> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:12> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:3> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:7> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:4> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:8> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:2> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:11> >= <nat:2> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 