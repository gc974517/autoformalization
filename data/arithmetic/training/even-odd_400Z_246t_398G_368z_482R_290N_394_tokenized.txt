\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:394> + <var:Z> <nat:400> + <var:t> <nat:246> + <nat:398> <var:G> + <nat:368> <var:z> + <var:R> <nat:482> + <var:N> <nat:290> $ is guaranteed to be even taking any unknowns $ <var:Z> $ , $ <var:z> $ , $ <var:R> $ , $ <var:N> $ , $ <var:t> $ , and $ <var:G> $ . \end{theorem} \begin{proof} Remember that the products $ <var:Z> * <nat:400> $ , $ <nat:246> * <var:t> $ , $ <nat:398> * <var:G> $ , $ <var:z> * <nat:368> $ , $ <var:R> * <nat:482> $ , and moreover $ <var:N> * <nat:290> $ are known to be even because the numbers $ <nat:400> $ , $ <nat:246> $ , $ <nat:398> $ , $ <nat:368> $ , $ <nat:482> $ , in addition to $ <nat:290> $ will be obviously even natural numbers . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:Z> <var:z> <var:R> <var:N> <var:t> <var:G> : nat , Nat . even ( <nat:400> * <var:Z> + <nat:246> * <var:t> + <nat:398> * <var:G> + <nat:368> * <var:z> + <nat:482> * <var:R> + <nat:290> * <var:N> + <nat:394> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:400> = true ) . { auto . } assert ( <genH> : Nat . even <nat:246> = true ) . { auto . } assert ( <genH> : Nat . even <nat:398> = true ) . { auto . } assert ( <genH> : Nat . even <nat:368> = true ) . { auto . } assert ( <genH> : Nat . even <nat:482> = true ) . { auto . } assert ( <genH> : Nat . even <nat:290> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:400> * <var:Z> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:246> * <var:t> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:398> * <var:G> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:368> * <var:z> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:482> * <var:R> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:290> * <var:N> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 