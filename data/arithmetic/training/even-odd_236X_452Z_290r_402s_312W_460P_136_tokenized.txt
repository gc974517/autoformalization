\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:236> \times <var:X> + <nat:136> + <var:Z> \times <nat:452> + <nat:290> \times <var:r> + <nat:402> \times <var:s> + <nat:312> \times <var:W> + <nat:460> \times <var:P> $ is guaranteed to be even with unknowns $ <var:W> $ , $ <var:s> $ , $ <var:P> $ , $ <var:r> $ , $ <var:X> $ , and $ <var:Z> $ . \end{theorem} \begin{proof} Recall the summing of an even whole number and an even positive integer must be even . We know $ <nat:136> $ is an even whole number . Furthermore , we know that the pairs $ <nat:236> <var:X> $ , $ <var:Z> <nat:452> $ , $ <nat:290> <var:r> $ , $ <nat:402> <var:s> $ , $ <var:W> <nat:312> $ , and moreover $ <var:P> <nat:460> $ will be even numbers in $ \mathbb{Z}^+ $ from the fact the leading terms $ <nat:236> $ , $ <nat:452> $ , $ <nat:290> $ , $ <nat:402> $ , $ <nat:312> $ , and likewise $ <nat:460> $ are obviously even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:W> <var:s> <var:P> <var:r> <var:X> <var:Z> : nat , Nat . even ( <nat:236> * <var:X> + <nat:452> * <var:Z> + <nat:290> * <var:r> + <nat:402> * <var:s> + <nat:312> * <var:W> + <nat:460> * <var:P> + <nat:136> ) = true . Proof . intros . repeat rewrite Nat . even_add . assert ( <genH> : Nat . even <nat:136> = true ) . { auto . } assert ( <genH> : Nat . even <nat:236> = true ) . { auto . } assert ( <genH> : Nat . even <nat:452> = true ) . { auto . } assert ( <genH> : Nat . even <nat:290> = true ) . { auto . } assert ( <genH> : Nat . even <nat:402> = true ) . { auto . } assert ( <genH> : Nat . even <nat:312> = true ) . { auto . } assert ( <genH> : Nat . even <nat:460> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:236> * <var:X> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:452> * <var:Z> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:290> * <var:r> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:402> * <var:s> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:312> * <var:W> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:460> * <var:P> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 