\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:446> <var:a> + <nat:414> <var:j> + <nat:496> <var:Z> + <nat:194> <var:o> + <var:F> <nat:268> + <nat:480> <var:A> + <nat:174> $ must be even . \end{theorem} \begin{proof} The terms $ <nat:268> <var:F> $ , $ <nat:480> <var:A> $ , $ <var:Z> <nat:496> $ , as well as $ <nat:194> <var:o> $ are trivially even whole numbers . This fact is proven because the natural numbers $ <nat:268> $ , $ <nat:480> $ , $ <nat:496> $ , and likewise $ <nat:194> $ are known as even . Remember that the leading term $ <nat:414> $ is known as even . For this reason , the pair $ <var:j> <nat:414> $ is guaranteed to be even as well . The leading term $ <nat:446> $ is guaranteed to be even . Hence , $ <nat:446> <var:a> $ will be even also . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:a> <var:j> <var:Z> <var:o> <var:F> <var:A> : nat , Nat . even ( <nat:446> * <var:a> + <nat:414> * <var:j> + <nat:496> * <var:Z> + <nat:194> * <var:o> + <nat:268> * <var:F> + <nat:480> * <var:A> + <nat:174> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:268> = true ) . { auto . } assert ( <genH> : Nat . even <nat:480> = true ) . { auto . } assert ( <genH> : Nat . even <nat:496> = true ) . { auto . } assert ( <genH> : Nat . even <nat:194> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:268> * <var:F> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:480> * <var:A> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:496> * <var:Z> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:194> * <var:o> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:414> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:414> * <var:j> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:446> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:446> * <var:a> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 