\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:7983360> $ is $ <var:Q> \cdot <var:r> \cdot <var:e> \cdot <var:G> \cdot <var:q> \cdot <var:J> \cdot <var:E> \cdot <var:T> \cdot <var:W> $ such that $ <var:q> $ , $ <var:e> $ , $ <var:T> $ , $ <var:G> $ , $ <var:E> $ , $ <var:J> $ , $ <var:Q> $ , $ <var:W> $ and $ <var:r> $ greater than or equivalent to <nat:2> . \end{theorem} \begin{proof} Take $ <var:G> = <nat:2> $ , $ <var:q> = <nat:7> $ , $ <var:J> = <nat:6> $ , $ <var:r> = <nat:3> $ , $ <var:W> = <nat:8> $ , $ <var:e> = <nat:4> $ , $ <var:Q> = <nat:11> $ , $ <var:T> = <nat:10> $ and $ <var:E> = <nat:9> $ . We present $ <nat:7983360> = <var:Q> \times <var:q> \times <var:T> \times <var:G> \times <var:W> \times <var:e> \times <var:r> \times <var:J> \times <var:E> $ . Further notice $ <var:e> = <nat:4> $ , $ <var:Q> = <nat:11> $ , $ <var:r> = <nat:3> $ , $ <var:W> = <nat:8> $ , $ <var:J> = <nat:6> $ , $ <var:G> = <nat:2> $ , $ <var:q> = <nat:7> $ , $ <var:T> = <nat:10> $ , and $ <var:E> = <nat:9> \geq <nat:2> $ . This implies our proposition is valid . \end{proof} \end{document} 
~
Require Import Lia . Theorem <genP:1> : exists <var:q> <var:G> <var:e> <var:W> <var:J> <var:E> <var:T> <var:r> <var:Q> : nat , ( <nat:7983360> = <var:Q> * <var:r> * <var:e> * <var:G> * <var:q> * <var:J> * <var:E> * <var:T> * <var:W> ) /\ ( <var:q> >= <nat:2> ) /\ ( <var:e> >= <nat:2> ) /\ ( <var:T> >= <nat:2> ) /\ ( <var:G> >= <nat:2> ) /\ ( <var:E> >= <nat:2> ) /\ ( <var:J> >= <nat:2> ) /\ ( <var:Q> >= <nat:2> ) /\ ( <var:W> >= <nat:2> ) /\ ( <var:r> >= <nat:2> ) . Proof . exists <nat:7> . exists <nat:2> . exists <nat:4> . exists <nat:8> . exists <nat:6> . exists <nat:9> . exists <nat:10> . exists <nat:3> . exists <nat:11> . assert ( <genH> : <nat:4> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:11> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:3> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:8> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:6> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:2> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:7> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:10> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:9> >= <nat:2> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 