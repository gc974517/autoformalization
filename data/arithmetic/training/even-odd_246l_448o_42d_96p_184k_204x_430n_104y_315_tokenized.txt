\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} With positive terms $ <var:o> $ , $ <var:d> $ , $ <var:k> $ , $ <var:p> $ , $ <var:x> $ , $ <var:l> $ , $ <var:n> $ , and $ <var:y> $ $ <var:k> \cdot <nat:184> + <var:y> \cdot <nat:104> + <var:x> \cdot <nat:204> + <nat:246> \cdot <var:l> + <nat:448> \cdot <var:o> + <var:p> \cdot <nat:96> + <nat:315> + <nat:42> \cdot <var:d> + <nat:430> \cdot <var:n> $ will be odd . \end{theorem} \begin{proof} The summing of an even number and an odd number in $ \mathbb{N} $ is guaranteed to be odd . Take note that the pairs $ <var:n> <nat:430> $ , $ <var:l> <nat:246> $ , $ <nat:204> <var:x> $ , $ <var:y> <nat:104> $ , and likewise $ <nat:448> <var:o> $ must be even . The terms $ <nat:96> <var:p> $ and $ <var:k> <nat:184> $ are guaranteed to be even numbers . This holds from the fact the multiplication of an even number and an arbitrary integer is guaranteed to be by definition an even positive integer . Remember that the pair $ <nat:42> <var:d> $ is known to be an even natural because taking the product between an even element of $ \mathbb{N} $ and a whole number is trivially an even element of $ \mathbb{N} $ . We check the sum $ <nat:315> + <nat:246> \cdot <var:l> + <nat:448> \cdot <var:o> + <nat:42> \cdot <var:d> + <var:p> \cdot <nat:96> + <nat:184> \cdot <var:k> + <var:x> \cdot <nat:204> + <nat:430> \cdot <var:n> + <nat:104> \cdot <var:y> $ is odd . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:o> <var:d> <var:k> <var:p> <var:x> <var:l> <var:n> <var:y> : nat , Nat . odd ( <nat:184> * <var:k> + <nat:104> * <var:y> + <nat:204> * <var:x> + <nat:246> * <var:l> + <nat:448> * <var:o> + <nat:96> * <var:p> + <nat:42> * <var:d> + <nat:430> * <var:n> + <nat:315> ) = true . Proof . intros . rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . assert ( <genH> : Nat . even ( <nat:430> * <var:n> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:246> * <var:l> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:204> * <var:x> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:104> * <var:y> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:448> * <var:o> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:96> * <var:p> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:184> * <var:k> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:42> * <var:d> ) = true ) . { rewrite Nat . even_mul . auto . } rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 