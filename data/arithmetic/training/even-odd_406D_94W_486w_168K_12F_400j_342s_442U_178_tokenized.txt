\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} For some terms $ <var:W> $ , $ <var:s> $ , $ <var:w> $ , $ <var:D> $ , $ <var:F> $ , $ <var:K> $ , $ <var:U> $ , and $ <var:j> $ $ <nat:342> \cdot <var:s> + <var:D> \cdot <nat:406> + <var:F> \cdot <nat:12> + <var:j> \cdot <nat:400> + <nat:442> \cdot <var:U> + <nat:178> + <nat:94> \cdot <var:W> + <var:w> \cdot <nat:486> + <var:K> \cdot <nat:168> $ will be even . \end{theorem} \begin{proof} $ <var:j> <nat:400> + <nat:442> <var:U> + <nat:486> <var:w> + <var:F> <nat:12> + <nat:178> + <nat:94> <var:W> + <var:K> <nat:168> + <nat:342> <var:s> + <var:D> <nat:406> $ is trivially even as a consequence that $ <var:s> \times <nat:342> + <var:U> \times <nat:442> + <nat:168> \times <var:K> + <nat:12> \times <var:F> + <var:j> \times <nat:400> + <nat:486> \times <var:w> + <nat:94> \times <var:W> + <var:D> \times <nat:406> $ is guaranteed to be even . The product $ <var:D> <nat:406> $ is guaranteed to be even . This is true since the coefficient $ <nat:406> $ is clearly in itself an even whole number . Further , observe that the integers $ <nat:342> $ , $ <nat:486> $ , $ <nat:442> $ , $ <nat:168> $ , in addition to $ <nat:400> $ are known to be even numbers in $ \mathbb{N} $ . As a consequence , the pairs $ <var:s> <nat:342> $ , $ <var:w> <nat:486> $ , $ <nat:442> <var:U> $ , $ <nat:168> <var:K> $ , as well as $ <var:j> <nat:400> $ must be even additionally . Observe that the term $ <var:W> <nat:94> $ is guaranteed to be an even number in $ \mathbb{N} $ from the fact the multiplication of an even number in $ \mathbb{N} $ with any element of $ \mathbb{Z}^+ $ will be even and moreover the leading term $ <nat:94> $ is trivially even . Remember that the positive integer $ <nat:12> $ is obviously an even natural . So , the product $ <var:F> <nat:12> $ is even at the same time . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:W> <var:s> <var:w> <var:D> <var:F> <var:K> <var:U> <var:j> : nat , Nat . even ( <nat:342> * <var:s> + <nat:406> * <var:D> + <nat:12> * <var:F> + <nat:400> * <var:j> + <nat:442> * <var:U> + <nat:94> * <var:W> + <nat:486> * <var:w> + <nat:168> * <var:K> + <nat:178> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:406> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:406> * <var:D> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:342> = true ) . { auto . } assert ( <genH> : Nat . even <nat:486> = true ) . { auto . } assert ( <genH> : Nat . even <nat:442> = true ) . { auto . } assert ( <genH> : Nat . even <nat:168> = true ) . { auto . } assert ( <genH> : Nat . even <nat:400> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:342> * <var:s> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:486> * <var:w> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:442> * <var:U> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:168> * <var:K> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:400> * <var:j> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:94> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:94> * <var:W> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:12> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:12> * <var:F> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:342> * <var:s> + <nat:406> * <var:D> + <nat:12> * <var:F> + <nat:400> * <var:j> + <nat:442> * <var:U> + <nat:94> * <var:W> + <nat:486> * <var:w> + <nat:168> * <var:K> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . even_add . rewrite <genH> . auto . Qed . 