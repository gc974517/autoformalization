\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:G> * <var:k> * <var:j> * <var:w> * <var:H> * <var:W> * <var:d> $ is equivalent to $ <nat:100800> $ given $ <var:j> $ , $ <var:k> $ , $ <var:w> $ , $ <var:d> $ , $ <var:W> $ , $ <var:G> $ and $ <var:H> \in \mathbb{N} $ so that $ <var:W> $ , $ <var:d> $ , $ <var:w> $ , $ <var:k> $ , $ <var:G> $ , $ <var:H> $ , $ <var:j> \geq <nat:2> $ . \end{theorem} \begin{proof} Assume $ <var:G> = <nat:6> $ , $ <var:k> = <nat:5> $ , $ <var:w> = <nat:10> $ , $ <var:W> = <nat:8> $ , $ <var:j> = <nat:2> $ , $ <var:H> = <nat:7> $ and $ <var:d> = <nat:3> $ . We justify our principle is valid for $ <var:j> = <nat:2> $ , $ <var:d> = <nat:3> $ , $ <var:G> = <nat:6> $ , $ <var:w> = <nat:10> $ , $ <var:H> = <nat:7> $ , $ <var:k> = <nat:5> $ , and $ <var:W> = <nat:8> \geq <nat:2> $ plus for $ <nat:100800> = <nat:3> \cdot <nat:5> \cdot <nat:10> \cdot <nat:2> \cdot <nat:7> \cdot <nat:8> \cdot <nat:6> $ . Consequently , $ <var:W> $ , $ <var:w> $ , $ <var:H> $ , $ <var:j> $ , $ <var:d> $ , $ <var:G> $ , $ <var:k> $ are greater than or equivalent to <nat:2> as well as $ <nat:100800> = <var:w> \times <var:j> \times <var:k> \times <var:d> \times <var:G> \times <var:W> \times <var:H> $ has been validated . \end{proof} \end{document} 
~
Require Import Lia . Theorem <genP:1> : exists <var:j> <var:k> <var:w> <var:d> <var:W> <var:G> <var:H> : nat , ( <var:G> * <var:k> * <var:j> * <var:w> * <var:H> * <var:W> * <var:d> = <nat:100800> ) /\ ( <var:W> >= <nat:2> ) /\ ( <var:d> >= <nat:2> ) /\ ( <var:w> >= <nat:2> ) /\ ( <var:k> >= <nat:2> ) /\ ( <var:G> >= <nat:2> ) /\ ( <var:H> >= <nat:2> ) /\ ( <var:j> >= <nat:2> ) . Proof . exists <nat:2> . exists <nat:5> . exists <nat:10> . exists <nat:3> . exists <nat:8> . exists <nat:6> . exists <nat:7> . assert ( <genH> : <nat:2> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:3> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:6> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:10> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:7> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:5> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:8> >= <nat:2> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 