\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:138> * <var:I> + <nat:169> + <var:M> * <nat:466> + <var:T> * <nat:456> + <nat:270> * <var:Q> $ must be odd given any whole numbers $ <var:I> $ , $ <var:T> $ , $ <var:Q> $ , and $ <var:M> $ . \end{theorem} \begin{proof} Take note that the expression $ <nat:138> \times <var:I> + <nat:466> \times <var:M> + <nat:169> + <nat:456> \times <var:T> + <nat:270> \times <var:Q> $ is trivially odd since the sum $ <nat:138> * <var:I> + <var:T> * <nat:456> + <nat:270> * <var:Q> + <var:M> * <nat:466> $ is obviously even . Notice that the addition between an even number with an even element of $ \mathbb{N} $ will be itself an even number . See that the terms $ <var:Q> \times <nat:270> $ , $ <var:I> \times <nat:138> $ , and moreover $ <nat:456> \times <var:T> $ are clearly even naturals from the fact multiplying between an even natural number and an arbitrary number in $ \mathbb{Z}^+ $ will be clearly an even natural . In addition , the product $ <var:M> \times <nat:466> $ is even . Recall that the summation of even numbers in $ \mathbb{Z}^+ $ collectively with an odd positive integer must be an odd number in $ \mathbb{Z}^+ $ . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:I> <var:T> <var:Q> <var:M> : nat , Nat . odd ( <nat:138> * <var:I> + <nat:466> * <var:M> + <nat:456> * <var:T> + <nat:270> * <var:Q> + <nat:169> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:270> * <var:Q> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:138> * <var:I> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:456> * <var:T> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:466> * <var:M> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:138> * <var:I> + <nat:466> * <var:M> + <nat:456> * <var:T> + <nat:270> * <var:Q> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . auto . Qed . 