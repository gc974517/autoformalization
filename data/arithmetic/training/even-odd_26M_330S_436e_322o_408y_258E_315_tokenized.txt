\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:315> + <var:S> \cdot <nat:330> + <var:o> \cdot <nat:322> + <nat:26> \cdot <var:M> + <var:y> \cdot <nat:408> + <var:E> \cdot <nat:258> + <var:e> \cdot <nat:436> $ must be odd . \end{theorem} \begin{proof} The adding of even elements of $ \mathbb{Z}^+ $ collectively and an odd integer is odd . The products $ <nat:330> \times <var:S> $ , $ <var:y> \times <nat:408> $ , $ <nat:436> \times <var:e> $ , and likewise $ <nat:322> \times <var:o> $ are known to be even by reason that taking the product of an even integer with any number in $ \mathbb{Z}^+ $ will be even , and holds from the fact the coefficients $ <nat:330> $ , $ <nat:408> $ , $ <nat:436> $ , additionally $ <nat:322> $ are obviously fundamentally even integers . The product $ <var:M> \times <nat:26> $ is trivially an even whole number from the fact the number $ <nat:26> $ is trivially even . See the pair $ <nat:258> \times <var:E> $ is an even positive integer as a consequence that the product between an even element of $ \mathbb{N} $ with some number will be even . This holds from the knowledge the number $ <nat:258> $ is trivially an even positive integer . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:S> <var:o> <var:M> <var:y> <var:E> <var:e> : nat , Nat . odd ( <nat:330> * <var:S> + <nat:322> * <var:o> + <nat:26> * <var:M> + <nat:408> * <var:y> + <nat:258> * <var:E> + <nat:436> * <var:e> + <nat:315> ) = true . Proof . intros . rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . assert ( <genH> : Nat . even <nat:330> = true ) . { auto . } assert ( <genH> : Nat . even <nat:408> = true ) . { auto . } assert ( <genH> : Nat . even <nat:436> = true ) . { auto . } assert ( <genH> : Nat . even <nat:322> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:330> * <var:S> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:408> * <var:y> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:436> * <var:e> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:322> * <var:o> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:26> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:26> * <var:M> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:258> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:258> * <var:E> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 