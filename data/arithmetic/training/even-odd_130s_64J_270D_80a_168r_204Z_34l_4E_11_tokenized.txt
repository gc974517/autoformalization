\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:130> * <var:s> + <nat:34> * <var:l> + <var:D> * <nat:270> + <var:r> * <nat:168> + <nat:64> * <var:J> + <nat:4> * <var:E> + <var:Z> * <nat:204> + <nat:80> * <var:a> + <nat:11> $ will be odd . \end{theorem} \begin{proof} Observe that the formula $ <nat:270> * <var:D> + <var:J> * <nat:64> + <var:E> * <nat:4> + <var:s> * <nat:130> + <nat:80> * <var:a> + <var:Z> * <nat:204> + <var:r> * <nat:168> + <var:l> * <nat:34> $ is even , by reason that the summation of even numbers in $ \mathbb{Z}^+ $ collectively and an even element of $ \mathbb{N} $ must be even . Remember that the numbers $ <nat:64> $ , $ <nat:80> $ , $ <nat:130> $ , $ <nat:270> $ , $ <nat:34> $ , $ <nat:4> $ , as well as $ <nat:168> $ are trivially even positive integers Furthermore , take note the whole number $ <nat:204> $ is clearly an even natural plus by reason that the multiplication of even positive integers with some positive integer is guaranteed to be an even element of $ \mathbb{N} $ the summation $ <nat:130> \times <var:s> + <nat:64> \times <var:J> + <var:D> \times <nat:270> + <nat:80> \times <var:a> + <nat:168> \times <var:r> + <var:Z> \times <nat:204> + <nat:34> \times <var:l> + <nat:4> \times <var:E> $ will be by itself even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:s> <var:l> <var:D> <var:r> <var:J> <var:E> <var:Z> <var:a> : nat , Nat . odd ( <nat:130> * <var:s> + <nat:34> * <var:l> + <nat:270> * <var:D> + <nat:168> * <var:r> + <nat:64> * <var:J> + <nat:4> * <var:E> + <nat:204> * <var:Z> + <nat:80> * <var:a> + <nat:11> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:64> = true ) . { auto . } assert ( <genH> : Nat . even <nat:80> = true ) . { auto . } assert ( <genH> : Nat . even <nat:130> = true ) . { auto . } assert ( <genH> : Nat . even <nat:270> = true ) . { auto . } assert ( <genH> : Nat . even <nat:34> = true ) . { auto . } assert ( <genH> : Nat . even <nat:4> = true ) . { auto . } assert ( <genH> : Nat . even <nat:168> = true ) . { auto . } assert ( <genH> : Nat . even <nat:204> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:130> * <var:s> + <nat:34> * <var:l> + <nat:270> * <var:D> + <nat:168> * <var:r> + <nat:64> * <var:J> + <nat:4> * <var:E> + <nat:204> * <var:Z> + <nat:80> * <var:a> ) = true ) . { repeat rewrite Nat . even_add . repeat rewrite Nat . even_mul . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . auto . Qed . 