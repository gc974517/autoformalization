\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Assuming every whole numbers $ <var:Z> $ , $ <var:j> $ , $ <var:b> $ , and $ <var:X> $ $ <nat:431> + <var:X> * <nat:296> + <var:j> * <nat:264> + <var:b> * <nat:474> + <nat:446> * <var:Z> $ must be odd . \end{theorem} \begin{proof} This main result is proven because $ <var:X> \times <nat:296> + <nat:474> \times <var:b> + <nat:264> \times <var:j> + <var:Z> \times <nat:446> $ is clearly even . The integers $ <nat:264> $ , $ <nat:474> $ , plus $ <nat:296> $ are obviously even . Thus , the products $ <var:j> \cdot <nat:264> $ , $ <var:b> \cdot <nat:474> $ , as well as $ <var:X> \cdot <nat:296> $ must be even as well . We know the natural number $ <nat:446> $ is guaranteed to be an even whole number . For this reason , the product $ <nat:446> \cdot <var:Z> $ is guaranteed to be even as well . The summation $ <var:Z> * <nat:446> + <var:b> * <nat:474> + <nat:296> * <var:X> + <var:j> * <nat:264> $ will be even from the knowledge the product between even numbers in $ \mathbb{Z}^+ $ with a natural is in itself an even number in $ \mathbb{N} $ . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:Z> <var:j> <var:b> <var:X> : nat , Nat . odd ( <nat:296> * <var:X> + <nat:264> * <var:j> + <nat:474> * <var:b> + <nat:446> * <var:Z> + <nat:431> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:264> = true ) . { auto . } assert ( <genH> : Nat . even <nat:474> = true ) . { auto . } assert ( <genH> : Nat . even <nat:296> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:264> * <var:j> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:474> * <var:b> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:296> * <var:X> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:446> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:446> * <var:Z> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:296> * <var:X> + <nat:264> * <var:j> + <nat:474> * <var:b> + <nat:446> * <var:Z> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . auto . Qed . 