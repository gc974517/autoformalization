\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:84> \cdot <var:Y> + <nat:230> + <nat:176> \cdot <var:Q> + <var:W> \cdot <nat:466> + <var:Z> \cdot <nat:246> + <var:u> \cdot <nat:150> + <nat:336> \cdot <var:s> + <var:h> \cdot <nat:298> + <nat:432> \cdot <var:m> $ is guaranteed to be even assuming some whole numbers $ <var:Y> $ , $ <var:u> $ , $ <var:Q> $ , $ <var:s> $ , $ <var:h> $ , $ <var:Z> $ , $ <var:m> $ , and $ <var:W> $ . \end{theorem} \begin{proof} This theorem is proven by reason that $ <nat:176> \times <var:Q> + <var:W> \times <nat:466> + <var:s> \times <nat:336> + <nat:246> \times <var:Z> + <var:h> \times <nat:298> + <nat:432> \times <var:m> + <nat:84> \times <var:Y> + <var:u> \times <nat:150> $ is obviously even . We know the products $ <nat:176> \cdot <var:Q> $ , $ <nat:298> \cdot <var:h> $ , $ <nat:84> \cdot <var:Y> $ , $ <nat:150> \cdot <var:u> $ , $ <nat:432> \cdot <var:m> $ , $ <var:Z> \cdot <nat:246> $ , and also $ <var:s> \cdot <nat:336> $ will be even positive integers . This claim must be true as a consequence that taking the product of an even natural number with some positive integer will be an even element of $ \mathbb{N} $ . This claim must be true by reason that the whole numbers $ <nat:176> $ , $ <nat:298> $ , $ <nat:84> $ , $ <nat:150> $ , $ <nat:432> $ , $ <nat:246> $ , and $ <nat:336> $ are guaranteed to be obviously even numbers in $ \mathbb{N} $ . Furthermore , take note that the positive integer $ <nat:466> $ is known as an even number . In consequence , the term $ <var:W> \cdot <nat:466> $ is guaranteed to be even additionally . From the knowledge taking the product of an even integer and a number is by its very nature an even number in $ \mathbb{N} $ our claim holds . Because the summing of even numbers in $ \mathbb{N} $ collectively and an even number in $ \mathbb{Z}^+ $ is guaranteed to be even , thus this claim is true . Remember that $ <nat:230> $ is guaranteed to be an even number in $ \mathbb{Z}^+ $ . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:Y> <var:u> <var:Q> <var:s> <var:h> <var:Z> <var:m> <var:W> : nat , Nat . even ( <nat:84> * <var:Y> + <nat:176> * <var:Q> + <nat:466> * <var:W> + <nat:246> * <var:Z> + <nat:150> * <var:u> + <nat:336> * <var:s> + <nat:298> * <var:h> + <nat:432> * <var:m> + <nat:230> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:176> = true ) . { auto . } assert ( <genH> : Nat . even <nat:298> = true ) . { auto . } assert ( <genH> : Nat . even <nat:84> = true ) . { auto . } assert ( <genH> : Nat . even <nat:150> = true ) . { auto . } assert ( <genH> : Nat . even <nat:432> = true ) . { auto . } assert ( <genH> : Nat . even <nat:246> = true ) . { auto . } assert ( <genH> : Nat . even <nat:336> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:176> * <var:Q> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:298> * <var:h> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:84> * <var:Y> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:150> * <var:u> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:432> * <var:m> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:246> * <var:Z> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:336> * <var:s> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:466> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:466> * <var:W> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:84> * <var:Y> + <nat:176> * <var:Q> + <nat:466> * <var:W> + <nat:246> * <var:Z> + <nat:150> * <var:u> + <nat:336> * <var:s> + <nat:298> * <var:h> + <nat:432> * <var:m> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . even_add . assert ( <genH> : Nat . even <nat:230> = true ) . { auto . } rewrite <genH> . rewrite <genH> . auto . Qed . 