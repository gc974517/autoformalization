\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \newtheorem{definition}{Definition} \begin{document} \begin{definition} We claim that $ <var:h> $ is a <def:five-composite> number under the condition there are $ <var:H> $ , $ <var:A> $ , $ <var:M> $ , $ <var:o> $ , $ <var:J> \in \mathbb{N} $ satisfying the condition that satisfying the condition that $ <var:A> $ , $ <var:o> $ , $ <var:J> $ , $ <var:M> $ , and $ <var:H> > <nat:1> $ plus for some positive integer $ <var:h> $ , $ <var:h> = <var:J> \cdot <var:A> \cdot <var:M> \cdot <var:H> \cdot <var:o> $ . \end{definition} \begin{theorem} $ <nat:23100> = <var:h> $ is a <def:five-composite> positive integer . \end{theorem} \begin{proof} Remember <nat:23100> is a <def:five-composite> whole number only if it is the product between numbers $ <var:A> $ , $ <var:M> $ , $ <var:H> $ , $ <var:J> $ , and $ <var:o> $ larger than <nat:1> . Allow $ <var:J> = <nat:11> $ , $ <var:H> = <nat:6> $ , $ <var:A> = <nat:10> $ , $ <var:o> = <nat:5> $ and $ <var:M> = <nat:7> $ . We confirm <nat:23100> is a <def:five-composite> whole number . Further observe $ <var:A> = <nat:10> $ , $ <var:o> = <nat:5> $ , $ <var:M> = <nat:7> $ , $ <var:J> = <nat:11> $ , and $ <var:H> = <nat:6> > <nat:1> $ . This shows the theory holds . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:five-composite> ( <var:h> : nat ) := exists <var:H> <var:A> <var:M> <var:o> <var:J> : nat , ( <var:A> > <nat:1> ) /\ ( <var:o> > <nat:1> ) /\ ( <var:J> > <nat:1> ) /\ ( <var:M> > <nat:1> ) /\ ( <var:H> > <nat:1> ) /\ ( <var:h> = <var:J> * <var:A> * <var:M> * <var:H> * <var:o> ) . Theorem <genP:1> : <def:five-composite> <nat:23100> . Proof . unfold <def:five-composite> . exists <nat:6> . exists <nat:10> . exists <nat:7> . exists <nat:5> . exists <nat:11> . assert ( <genH> : <nat:10> > <nat:1> ) . { lia . } assert ( <genH> : <nat:5> > <nat:1> ) . { lia . } assert ( <genH> : <nat:7> > <nat:1> ) . { lia . } assert ( <genH> : <nat:11> > <nat:1> ) . { lia . } assert ( <genH> : <nat:6> > <nat:1> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 