\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:44> \times <var:S> + <var:V> \times <nat:2> + <nat:169> + <nat:406> \times <var:F> + <var:T> \times <nat:46> $ must be odd . \end{theorem} \begin{proof} Take note the addition of an even number in $ \mathbb{Z}^+ $ and an odd number in $ \mathbb{N} $ is guaranteed to be fundamentally an odd integer . We know that $ <nat:169> $ is odd . We utilize the fact that the summation $ <nat:169> + <var:T> \cdot <nat:46> + <nat:2> \cdot <var:V> + <nat:406> \cdot <var:F> + <nat:44> \cdot <var:S> $ is obviously odd by reason that $ <var:F> \times <nat:406> + <nat:44> \times <var:S> + <nat:2> \times <var:V> + <nat:46> \times <var:T> $ is trivially even . Likewise , the leading terms $ <nat:406> $ , $ <nat:44> $ , $ <nat:2> $ , additionally $ <nat:46> $ are trivially even natural numbers . In consequence , the terms $ <var:F> <nat:406> $ , $ <nat:44> <var:S> $ , $ <nat:2> <var:V> $ , and also $ <var:T> <nat:46> $ will be even as well . Since the totaling of even elements of $ \mathbb{Z}^+ $ and even whole numbers is guaranteed to be an even number in $ \mathbb{Z}^+ $ , the summation $ <var:S> <nat:44> + <var:T> <nat:46> + <var:F> <nat:406> + <var:V> <nat:2> $ will be even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:S> <var:V> <var:F> <var:T> : nat , Nat . odd ( <nat:44> * <var:S> + <nat:2> * <var:V> + <nat:406> * <var:F> + <nat:46> * <var:T> + <nat:169> ) = true . Proof . intros . rewrite Nat . odd_add . assert ( <genH> : Nat . odd <nat:169> = true ) . { auto . } assert ( <genH> : Nat . even <nat:406> = true ) . { auto . } assert ( <genH> : Nat . even <nat:44> = true ) . { auto . } assert ( <genH> : Nat . even <nat:2> = true ) . { auto . } assert ( <genH> : Nat . even <nat:46> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:406> * <var:F> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:44> * <var:S> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:2> * <var:V> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:46> * <var:T> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:44> * <var:S> + <nat:2> * <var:V> + <nat:406> * <var:F> + <nat:46> * <var:T> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite <- Nat . negb_even . rewrite <genH> . rewrite <genH> . auto . Qed . 