\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Taking any variables $ <var:j> $ , $ <var:K> $ , $ <var:x> $ , $ <var:U> $ , $ <var:c> $ , and $ <var:G> $ the expression $ <nat:434> <var:c> + <nat:99> + <var:G> <nat:470> + <var:U> <nat:326> + <nat:110> <var:K> + <var:x> <nat:394> + <var:j> <nat:108> $ is guaranteed to be odd . \end{theorem} \begin{proof} This lemma must be true because $ <nat:326> \cdot <var:U> + <nat:434> \cdot <var:c> + <nat:394> \cdot <var:x> + <var:K> \cdot <nat:110> + <nat:108> \cdot <var:j> + <nat:470> \cdot <var:G> $ is known as even . We know that multiplying between even numbers in $ \mathbb{N} $ must be even . The numbers $ <nat:108> $ , $ <nat:470> $ , $ <nat:326> $ , and moreover $ <nat:434> $ are clearly even naturals Remember the leading term $ <nat:394> $ is clearly an even element of $ \mathbb{Z}^+ $ Observe that the number $ <nat:110> $ is known to be even This proposition must be true by reason that the summation of an even element of $ \mathbb{N} $ and an even number in $ \mathbb{Z}^+ $ must be even . We check the expression $ <nat:99> + <var:K> \cdot <nat:110> + <nat:470> \cdot <var:G> + <var:x> \cdot <nat:394> + <nat:108> \cdot <var:j> + <nat:326> \cdot <var:U> + <var:c> \cdot <nat:434> $ will be odd . Recall that $ <nat:99> $ is trivially odd . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:j> <var:K> <var:x> <var:U> <var:c> <var:G> : nat , Nat . odd ( <nat:434> * <var:c> + <nat:470> * <var:G> + <nat:326> * <var:U> + <nat:110> * <var:K> + <nat:394> * <var:x> + <nat:108> * <var:j> + <nat:99> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:108> = true ) . { auto . } assert ( <genH> : Nat . even <nat:470> = true ) . { auto . } assert ( <genH> : Nat . even <nat:326> = true ) . { auto . } assert ( <genH> : Nat . even <nat:434> = true ) . { auto . } assert ( <genH> : Nat . even <nat:394> = true ) . { auto . } assert ( <genH> : Nat . even <nat:110> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:434> * <var:c> + <nat:470> * <var:G> + <nat:326> * <var:U> + <nat:110> * <var:K> + <nat:394> * <var:x> + <nat:108> * <var:j> ) = true ) . { repeat rewrite Nat . even_add . repeat rewrite Nat . even_mul . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } assert ( <genH> : Nat . odd <nat:99> = true ) . { auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . rewrite <genH> . auto . Qed . 