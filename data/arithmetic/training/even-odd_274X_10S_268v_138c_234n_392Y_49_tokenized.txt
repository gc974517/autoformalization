\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:274> <var:X> + <var:S> <nat:10> + <var:v> <nat:268> + <nat:138> <var:c> + <nat:234> <var:n> + <nat:49> + <nat:392> <var:Y> $ will be odd assuming all variables $ <var:v> $ , $ <var:X> $ , $ <var:Y> $ , $ <var:n> $ , $ <var:c> $ , and $ <var:S> $ . \end{theorem} \begin{proof} It can be proven that our proposition holds . See that $ <nat:49> $ is trivially an odd element of $ \mathbb{Z}^+ $ . The pairs $ <nat:274> \times <var:X> $ , $ <var:S> \times <nat:10> $ , $ <nat:268> \times <var:v> $ , $ <nat:138> \times <var:c> $ , $ <var:n> \times <nat:234> $ , as well as $ <nat:392> \times <var:Y> $ are known as even naturals because the product between an even natural number with some integer will be even and also the leading terms $ <nat:274> $ , $ <nat:10> $ , $ <nat:268> $ , $ <nat:138> $ , $ <nat:234> $ , plus $ <nat:392> $ are guaranteed to be obviously even natural numbers . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:v> <var:X> <var:Y> <var:n> <var:c> <var:S> : nat , Nat . odd ( <nat:274> * <var:X> + <nat:10> * <var:S> + <nat:268> * <var:v> + <nat:138> * <var:c> + <nat:234> * <var:n> + <nat:392> * <var:Y> + <nat:49> ) = true . Proof . intros . assert ( <genH> : Nat . odd <nat:49> = true ) . { auto . } assert ( <genH> : Nat . even <nat:274> = true ) . { auto . } assert ( <genH> : Nat . even <nat:10> = true ) . { auto . } assert ( <genH> : Nat . even <nat:268> = true ) . { auto . } assert ( <genH> : Nat . even <nat:138> = true ) . { auto . } assert ( <genH> : Nat . even <nat:234> = true ) . { auto . } assert ( <genH> : Nat . even <nat:392> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:274> * <var:X> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:10> * <var:S> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:268> * <var:v> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:138> * <var:c> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:234> * <var:n> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:392> * <var:Y> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 