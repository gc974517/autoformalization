\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:198> * <var:G> + <nat:129> + <nat:86> * <var:l> + <nat:76> * <var:J> + <var:M> * <nat:270> + <var:P> * <nat:354> + <nat:456> * <var:j> + <nat:324> * <var:S> + <var:O> * <nat:160> $ will be odd . \end{theorem} \begin{proof} It can be demonstrated that this proposition holds . We know that $ <nat:129> $ is trivially an odd natural number . We utilize that the formula $ <nat:270> * <var:M> + <nat:86> * <var:l> + <var:J> * <nat:76> + <var:G> * <nat:198> + <nat:160> * <var:O> + <var:P> * <nat:354> + <var:S> * <nat:324> + <var:j> * <nat:456> $ is clearly even . Notice that the leading term $ <nat:354> $ is trivially even On top of this , the numbers $ <nat:160> $ , $ <nat:198> $ , plus $ <nat:324> $ are known as even elements of $ \mathbb{Z}^+ $ We know that the whole numbers $ <nat:456> $ additionally $ <nat:270> $ are even elements of $ \mathbb{N} $ Remember the positive integer $ <nat:86> $ is guaranteed to be even Likewise , we know the natural number $ <nat:76> $ is trivially an even number in $ \mathbb{Z}^+ $ \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:G> <var:l> <var:J> <var:M> <var:P> <var:j> <var:S> <var:O> : nat , Nat . odd ( <nat:198> * <var:G> + <nat:86> * <var:l> + <nat:76> * <var:J> + <nat:270> * <var:M> + <nat:354> * <var:P> + <nat:456> * <var:j> + <nat:324> * <var:S> + <nat:160> * <var:O> + <nat:129> ) = true . Proof . intros . assert ( <genH> : Nat . odd <nat:129> = true ) . { auto . } assert ( <genH> : Nat . even <nat:354> = true ) . { auto . } assert ( <genH> : Nat . even <nat:160> = true ) . { auto . } assert ( <genH> : Nat . even <nat:198> = true ) . { auto . } assert ( <genH> : Nat . even <nat:324> = true ) . { auto . } assert ( <genH> : Nat . even <nat:456> = true ) . { auto . } assert ( <genH> : Nat . even <nat:270> = true ) . { auto . } assert ( <genH> : Nat . even <nat:86> = true ) . { auto . } assert ( <genH> : Nat . even <nat:76> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:198> * <var:G> + <nat:86> * <var:l> + <nat:76> * <var:J> + <nat:270> * <var:M> + <nat:354> * <var:P> + <nat:456> * <var:j> + <nat:324> * <var:S> + <nat:160> * <var:O> ) = true ) . { repeat rewrite Nat . even_add . repeat rewrite Nat . even_mul . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . rewrite <genH> . auto . Qed . 