\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:y> * <nat:106> + <nat:486> * <var:O> + <nat:76> * <var:q> + <nat:287> + <nat:190> * <var:A> $ must be odd with whole numbers $ <var:y> $ , $ <var:q> $ , $ <var:O> $ , and $ <var:A> $ . \end{theorem} \begin{proof} It can be shown that the sum $ <nat:106> \times <var:y> + <nat:76> \times <var:q> + <var:O> \times <nat:486> + <nat:287> + <nat:190> \times <var:A> $ is odd . The positive integer $ <nat:190> $ is even . Therefore , the pair $ <nat:190> \times <var:A> $ must be even as well . Likewise , take note the term $ <var:q> \times <nat:76> $ is known as an even element of $ \mathbb{N} $ by reason that taking the product between an even number in $ \mathbb{N} $ with an arbitrary integer must be an even whole number , which is true from the fact the positive integer $ <nat:76> $ is obviously even . In addition to this , notice the pair $ <nat:486> \times <var:O> $ is guaranteed to be an even number in $ \mathbb{N} $ by reason that the natural number $ <nat:486> $ is known to be even . We know that the positive integer $ <nat:106> $ is trivially even . Therefore , the term $ <var:y> \times <nat:106> $ is guaranteed to be even as well . Notice that the summing of an even number in $ \mathbb{Z}^+ $ and an odd element of $ \mathbb{N} $ is an odd natural . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:y> <var:q> <var:O> <var:A> : nat , Nat . odd ( <nat:106> * <var:y> + <nat:486> * <var:O> + <nat:76> * <var:q> + <nat:190> * <var:A> + <nat:287> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:190> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:190> * <var:A> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:76> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:76> * <var:q> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:486> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:486> * <var:O> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:106> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:106> * <var:y> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 