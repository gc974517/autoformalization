\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \newtheorem{definition}{Definition} \begin{document} \begin{definition} Assume $ <var:A> $ , $ <var:d> $ , $ <var:r> $ , $ <var:Z> $ , $ <var:a> $ , $ <var:z> $ , $ <var:w> $ are natural numbers greater than <nat:1> . Take that $ <var:D> \in \mathbb{N} $ is considered to be a <def:seven-composite> natural number assuming $ <var:D> = <var:A> * <var:r> * <var:Z> * <var:w> * <var:a> * <var:d> * <var:z> $ . \end{definition} \begin{theorem} The natural number <nat:777600> is a <def:seven-composite> number . \end{theorem} \begin{proof} We present $ <var:a> $ , $ <var:z> $ , $ <var:w> $ , $ <var:d> $ , $ <var:Z> $ , $ <var:r> $ and $ <var:A> $ are larger than <nat:1> as well as $ <nat:777600> = <var:a> \cdot <var:d> \cdot <var:r> \cdot <var:w> \cdot <var:Z> \cdot <var:z> \cdot <var:A> $ . Notice $ <nat:777600> = <var:d> * <var:r> * <var:A> * <var:Z> * <var:a> * <var:w> * <var:z> $ hints $ <var:Z> = <nat:9> $ , $ <var:z> = <nat:8> $ , $ <var:w> = <nat:5> $ , $ <var:A> = <nat:12> $ , $ <var:d> = <nat:10> $ , $ <var:r> = <nat:3> $ , $ <var:a> = <nat:6> $ . Additionally note that $ <nat:12> $ , $ <nat:8> $ , $ <nat:5> $ , $ <nat:3> $ , $ <nat:6> $ , $ <nat:9> $ , $ <nat:10> > <nat:1> $ . This implies <nat:777600> is a <def:seven-composite> positive integer . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:seven-composite> ( <var:D> : nat ) := exists <var:A> <var:d> <var:r> <var:Z> <var:a> <var:z> <var:w> : nat , ( <var:A> > <nat:1> ) /\ ( <var:d> > <nat:1> ) /\ ( <var:r> > <nat:1> ) /\ ( <var:Z> > <nat:1> ) /\ ( <var:a> > <nat:1> ) /\ ( <var:z> > <nat:1> ) /\ ( <var:w> > <nat:1> ) /\ ( <var:D> = <var:A> * <var:r> * <var:Z> * <var:w> * <var:a> * <var:d> * <var:z> ) . Theorem <genP:1> : <def:seven-composite> <nat:777600> . Proof . unfold <def:seven-composite> . exists <nat:12> . exists <nat:10> . exists <nat:3> . exists <nat:9> . exists <nat:6> . exists <nat:8> . exists <nat:5> . assert ( <genH> : <nat:12> > <nat:1> ) . { lia . } assert ( <genH> : <nat:8> > <nat:1> ) . { lia . } assert ( <genH> : <nat:5> > <nat:1> ) . { lia . } assert ( <genH> : <nat:3> > <nat:1> ) . { lia . } assert ( <genH> : <nat:6> > <nat:1> ) . { lia . } assert ( <genH> : <nat:9> > <nat:1> ) . { lia . } assert ( <genH> : <nat:10> > <nat:1> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 