\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \newtheorem{definition}{Definition} \begin{document} \begin{definition} Granted that we have $ <var:b> $ , $ <var:l> $ , $ <var:E> $ , $ <var:P> $ , $ <var:j> $ , $ <var:N> $ , $ <var:h> \geq <nat:2> $ so that with $ <var:f> \in \mathbb{Z}^+ $ , $ <var:j> \times <var:N> \times <var:b> \times <var:E> \times <var:P> \times <var:l> \times <var:h> = <var:f> $ assuming some $ <var:l> $ , $ <var:E> $ , $ <var:b> $ , $ <var:P> $ , $ <var:h> $ , $ <var:N> $ , $ <var:j> $ , we assume that $ <var:f> $ is a <def:seven-composite> whole number . \end{definition} \begin{theorem} The number <nat:1663200> is a <def:seven-composite> positive integer . \end{theorem} \begin{proof} Recall that a <def:seven-composite> number is the multiplication of numbers $ <var:j> $ , $ <var:N> $ , $ <var:P> $ , $ <var:l> $ , $ <var:h> $ , $ <var:b> $ and $ <var:E> $ satisfying the condition that $ <var:b> $ , $ <var:l> $ , $ <var:h> $ , $ <var:E> $ , $ <var:N> $ , $ <var:P> $ , $ <var:j> \geq <nat:2> $ . Let $ <var:N> = <nat:7> $ , $ <var:P> = <nat:4> $ , $ <var:E> = <nat:12> $ , $ <var:h> = <nat:5> $ , $ <var:b> = <nat:9> $ , $ <var:l> = <nat:11> $ , $ <var:j> = <nat:10> $ . Moreover notice that $ <var:j> = <nat:10> $ , $ <var:l> = <nat:11> $ , $ <var:N> = <nat:7> $ , $ <var:E> = <nat:12> $ , $ <var:h> = <nat:5> $ , $ <var:P> = <nat:4> $ and $ <var:b> = <nat:9> $ are larger than or equal to <nat:2> . This yields <nat:1663200> is <def:seven-composite> . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:seven-composite> ( <var:f> : nat ) := exists <var:l> <var:E> <var:b> <var:P> <var:h> <var:N> <var:j> : nat , ( <var:b> >= <nat:2> ) /\ ( <var:l> >= <nat:2> ) /\ ( <var:E> >= <nat:2> ) /\ ( <var:P> >= <nat:2> ) /\ ( <var:j> >= <nat:2> ) /\ ( <var:N> >= <nat:2> ) /\ ( <var:h> >= <nat:2> ) /\ ( <var:j> * <var:N> * <var:b> * <var:E> * <var:P> * <var:l> * <var:h> = <var:f> ) . Theorem <genP:1> : <def:seven-composite> <nat:1663200> . Proof . unfold <def:seven-composite> . exists <nat:11> . exists <nat:12> . exists <nat:9> . exists <nat:4> . exists <nat:5> . exists <nat:7> . exists <nat:10> . assert ( <genH> : <nat:10> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:11> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:7> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:12> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:5> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:4> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:9> >= <nat:2> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 