\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Taking natural terms $ <var:T> $ , $ <var:u> $ , $ <var:J> $ , $ <var:h> $ , $ <var:U> $ , and $ <var:g> $ $ <nat:134> * <var:h> + <nat:483> + <nat:450> * <var:g> + <nat:260> * <var:J> + <var:U> * <nat:272> + <nat:98> * <var:u> + <var:T> * <nat:48> $ will be odd . \end{theorem} \begin{proof} The formula $ <var:u> \cdot <nat:98> + <nat:450> \cdot <var:g> + <nat:483> + <var:h> \cdot <nat:134> + <var:U> \cdot <nat:272> + <var:J> \cdot <nat:260> + <nat:48> \cdot <var:T> $ is obviously odd from the fact the expression $ <nat:134> \cdot <var:h> + <var:u> \cdot <nat:98> + <nat:272> \cdot <var:U> + <var:J> \cdot <nat:260> + <var:T> \cdot <nat:48> + <var:g> \cdot <nat:450> $ is trivially even , by reason that the addition between an even number and an even number will be an even positive integer . See the products $ <nat:272> \times <var:U> $ in addition to $ <var:J> \times <nat:260> $ are known as even whole numbers . This claim is proven from the knowledge the product between an even natural with an arbitrary number is guaranteed to be an even integer . Notice the pair $ <var:g> \times <nat:450> $ is obviously an even whole number . Additionally , the terms $ <var:T> \times <nat:48> $ additionally $ <nat:98> \times <var:u> $ are even . This claim is proven since taking the product of an even number in $ \mathbb{N} $ with some natural must be an even whole number . $ <var:h> \times <nat:134> $ is trivially even . We know that the addition of an even natural number with an odd number in $ \mathbb{Z}^+ $ must be itself an odd natural . Observe that $ <nat:483> $ is clearly an odd integer . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:T> <var:u> <var:J> <var:h> <var:U> <var:g> : nat , Nat . odd ( <nat:134> * <var:h> + <nat:450> * <var:g> + <nat:260> * <var:J> + <nat:272> * <var:U> + <nat:98> * <var:u> + <nat:48> * <var:T> + <nat:483> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:272> * <var:U> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:260> * <var:J> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:450> * <var:g> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:48> * <var:T> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:98> * <var:u> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:134> * <var:h> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:134> * <var:h> + <nat:450> * <var:g> + <nat:260> * <var:J> + <nat:272> * <var:U> + <nat:98> * <var:u> + <nat:48> * <var:T> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . assert ( <genH> : Nat . odd <nat:483> = true ) . { auto . } rewrite <- Nat . negb_even . rewrite <genH> . rewrite <genH> . auto . Qed . 