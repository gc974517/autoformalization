\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:182> <var:h> + <nat:478> <var:z> + <nat:138> <var:L> + <nat:45> + <nat:400> <var:s> $ must be odd . \end{theorem} \begin{proof} We prove the sum $ <nat:400> \cdot <var:s> + <nat:138> \cdot <var:L> + <nat:182> \cdot <var:h> + <var:z> \cdot <nat:478> $ is guaranteed to be even . See that the adding between even natural numbers concurrently and an even integer is guaranteed to be obviously an even element of $ \mathbb{Z}^+ $ . See that the coefficient $ <nat:182> $ is known to be an even number in $ \mathbb{Z}^+ $ . Therefore , $ <nat:182> * <var:h> $ is guaranteed to be even also . We know that the number $ <nat:138> $ is trivially an even whole number . So , the pair $ <nat:138> * <var:L> $ must be even also . See the natural number $ <nat:478> $ is known to be even . Hence , $ <var:z> * <nat:478> $ is guaranteed to be even too . Building on , the product $ <nat:400> * <var:s> $ is guaranteed to be even . This fact must be true from the knowledge the number $ <nat:400> $ is clearly even . and likewise since taking the product of an even number and some number will be an even natural $ <var:z> * <nat:478> + <var:L> * <nat:138> + <var:h> * <nat:182> + <var:s> * <nat:400> $ is guaranteed to be in itself even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:h> <var:z> <var:L> <var:s> : nat , Nat . odd ( <nat:182> * <var:h> + <nat:478> * <var:z> + <nat:138> * <var:L> + <nat:400> * <var:s> + <nat:45> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:182> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:182> * <var:h> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:138> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:138> * <var:L> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:478> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:478> * <var:z> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:400> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:400> * <var:s> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:182> * <var:h> + <nat:478> * <var:z> + <nat:138> * <var:L> + <nat:400> * <var:s> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . auto . Qed . 