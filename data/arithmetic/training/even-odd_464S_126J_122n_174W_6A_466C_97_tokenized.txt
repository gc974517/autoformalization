\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:97> + <var:C> \times <nat:466> + <var:A> \times <nat:6> + <nat:464> \times <var:S> + <nat:174> \times <var:W> + <var:J> \times <nat:126> + <var:n> \times <nat:122> $ is odd . \end{theorem} \begin{proof} It can be demonstrated that our lemma must be true . We know that $ <nat:97> $ is clearly odd . The whole numbers $ <nat:466> $ , $ <nat:122> $ , in addition to $ <nat:174> $ are known to be even naturals . Therefore , the products $ <var:C> <nat:466> $ , $ <var:n> <nat:122> $ , plus $ <nat:174> <var:W> $ must be even also . The natural numbers $ <nat:6> $ in addition to $ <nat:126> $ will be even natural numbers . As a consequence , the pairs $ <var:A> <nat:6> $ in addition to $ <var:J> <nat:126> $ must be even in addition . The coefficient $ <nat:464> $ is known to be even . In consequence , the pair $ <var:S> <nat:464> $ is even at the same time . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:C> <var:A> <var:S> <var:W> <var:J> <var:n> : nat , Nat . odd ( <nat:466> * <var:C> + <nat:6> * <var:A> + <nat:464> * <var:S> + <nat:174> * <var:W> + <nat:126> * <var:J> + <nat:122> * <var:n> + <nat:97> ) = true . Proof . intros . assert ( <genH> : Nat . odd <nat:97> = true ) . { auto . } assert ( <genH> : Nat . even <nat:466> = true ) . { auto . } assert ( <genH> : Nat . even <nat:122> = true ) . { auto . } assert ( <genH> : Nat . even <nat:174> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:466> * <var:C> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:122> * <var:n> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:174> * <var:W> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:6> = true ) . { auto . } assert ( <genH> : Nat . even <nat:126> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:6> * <var:A> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:126> * <var:J> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:464> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:464> * <var:S> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 