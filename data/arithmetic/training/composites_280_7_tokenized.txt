\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Define that $ <var:V> $ is a <def:seven-composite> integer whenever assuming some whole numbers $ <var:K> $ , $ <var:y> $ , $ <var:r> $ , $ <var:E> $ , $ <var:L> $ , $ <var:j> $ , $ <var:n> $ we get where $ <var:L> $ , $ <var:K> $ , $ <var:y> $ , $ <var:E> $ , $ <var:n> $ , $ <var:j> $ , and $ <var:r> > <nat:1> $ as well as given $ <var:V> \in \mathbb{Z}^+ $ , $ <var:r> \times <var:K> \times <var:E> \times <var:y> \times <var:L> \times <var:n> \times <var:j> = <var:V> $ . Then $ <var:V> = <nat:1108800> $ is a <def:seven-composite> whole number . \end{theorem} \begin{proof} Remember that <nat:1108800> is a <def:seven-composite> natural number supposing that it is the multiplication of integers $ <var:r> $ , $ <var:L> $ , $ <var:y> $ , $ <var:E> $ , $ <var:n> $ , $ <var:j> $ , $ <var:K> $ larger than <nat:1> . Let $ <var:y> = <nat:3> $ , $ <var:K> = <nat:8> $ , $ <var:r> = <nat:7> $ , $ <var:E> = <nat:10> $ , $ <var:L> = <nat:5> $ , $ <var:j> = <nat:11> $ , and $ <var:n> = <nat:12> $ . We show <nat:1108800> is a <def:seven-composite> integer . Observe $ <nat:12> $ , $ <nat:7> $ , $ <nat:10> $ , $ <nat:5> $ , $ <nat:3> $ , $ <nat:8> $ and $ <nat:11> $ are more than <nat:1> . This yields <nat:1108800> is a <def:seven-composite> whole number . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:seven-composite> ( <var:V> : nat ) := exists <var:K> <var:y> <var:r> <var:E> <var:L> <var:j> <var:n> : nat , ( <var:L> > <nat:1> ) /\ ( <var:K> > <nat:1> ) /\ ( <var:y> > <nat:1> ) /\ ( <var:E> > <nat:1> ) /\ ( <var:n> > <nat:1> ) /\ ( <var:j> > <nat:1> ) /\ ( <var:r> > <nat:1> ) /\ ( <var:r> * <var:K> * <var:E> * <var:y> * <var:L> * <var:n> * <var:j> = <var:V> ) . Theorem <genP:1> : <def:seven-composite> <nat:1108800> . Proof . unfold <def:seven-composite> . exists <nat:8> . exists <nat:3> . exists <nat:7> . exists <nat:10> . exists <nat:5> . exists <nat:11> . exists <nat:12> . assert ( <genH> : <nat:12> > <nat:1> ) . { lia . } assert ( <genH> : <nat:7> > <nat:1> ) . { lia . } assert ( <genH> : <nat:10> > <nat:1> ) . { lia . } assert ( <genH> : <nat:5> > <nat:1> ) . { lia . } assert ( <genH> : <nat:3> > <nat:1> ) . { lia . } assert ( <genH> : <nat:8> > <nat:1> ) . { lia . } assert ( <genH> : <nat:11> > <nat:1> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 