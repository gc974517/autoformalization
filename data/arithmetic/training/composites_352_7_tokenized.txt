\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Denote that $ <var:t> $ is <def:seven-composite> supposing taking some natural numbers $ <var:y> $ , $ <var:D> $ , $ <var:R> $ , $ <var:Z> $ , $ <var:Q> $ , $ <var:u> $ , $ <var:P> $ we have $ <var:t> = <var:Z> \times <var:u> \times <var:R> \times <var:y> \times <var:Q> \times <var:P> \times <var:D> $ given $ <var:t> \in \mathbb{N} $ plus where $ <var:R> $ , $ <var:Z> $ , $ <var:P> $ , $ <var:Q> $ , $ <var:u> $ , $ <var:y> $ , and $ <var:D> \geq <nat:2> $ . Accordingly the positive integer <nat:1140480> is a <def:seven-composite> whole number . \end{theorem} \begin{proof} Recollect that <nat:1140480> is a <def:seven-composite> number if and only if it is the multiplication of $ <var:Q> $ , $ <var:R> $ , $ <var:P> $ , $ <var:Z> $ , $ <var:y> $ , $ <var:u> $ and $ <var:D> $ more than <nat:1> . Assume $ <var:R> = <nat:11> $ , $ <var:u> = <nat:9> $ , $ <var:Z> = <nat:12> $ , $ <var:y> = <nat:8> $ , $ <var:Q> = <nat:5> $ , $ <var:D> = <nat:6> $ , and $ <var:P> = <nat:4> $ . We justify <nat:1140480> is a <def:seven-composite> integer . Note that $ <nat:12> $ , $ <nat:4> $ , $ <nat:5> $ , $ <nat:9> $ , $ <nat:6> $ , $ <nat:11> $ and $ <nat:8> $ are larger than <nat:1> . Similarly notice too $ <var:R> \cdot <var:Z> \cdot <var:D> \cdot <var:y> \cdot <var:P> \cdot <var:u> \cdot <var:Q> = <nat:1140480> $ . This hints <nat:1140480> is a <def:seven-composite> integer . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:seven-composite> ( <var:t> : nat ) := exists <var:y> <var:D> <var:R> <var:Z> <var:Q> <var:u> <var:P> : nat , ( <var:t> = <var:Z> * <var:u> * <var:R> * <var:y> * <var:Q> * <var:P> * <var:D> ) /\ ( <var:R> >= <nat:2> ) /\ ( <var:Z> >= <nat:2> ) /\ ( <var:P> >= <nat:2> ) /\ ( <var:Q> >= <nat:2> ) /\ ( <var:u> >= <nat:2> ) /\ ( <var:y> >= <nat:2> ) /\ ( <var:D> >= <nat:2> ) . Theorem <genP:1> : <def:seven-composite> <nat:1140480> . Proof . unfold <def:seven-composite> . exists <nat:8> . exists <nat:6> . exists <nat:11> . exists <nat:12> . exists <nat:5> . exists <nat:9> . exists <nat:4> . assert ( <genH> : <nat:12> > <nat:1> ) . { lia . } assert ( <genH> : <nat:4> > <nat:1> ) . { lia . } assert ( <genH> : <nat:5> > <nat:1> ) . { lia . } assert ( <genH> : <nat:9> > <nat:1> ) . { lia . } assert ( <genH> : <nat:6> > <nat:1> ) . { lia . } assert ( <genH> : <nat:11> > <nat:1> ) . { lia . } assert ( <genH> : <nat:8> > <nat:1> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 