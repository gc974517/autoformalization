\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} For some natural terms $ <var:x> $ , $ <var:R> $ , $ <var:g> $ , $ <var:q> $ , $ <var:m> $ , $ <var:W> $ , $ <var:N> $ , and $ <var:X> $ the expression $ <var:q> * <nat:178> + <var:W> * <nat:464> + <var:R> * <nat:328> + <var:g> * <nat:476> + <var:x> * <nat:158> + <nat:431> + <nat:188> * <var:m> + <var:X> * <nat:262> + <var:N> * <nat:354> $ is guaranteed to be odd . \end{theorem} \begin{proof} The product of an even whole number and a number in $ \mathbb{Z}^+ $ is guaranteed to be an even number . The positive integers $ <nat:464> $ , $ <nat:188> $ , and likewise $ <nat:476> $ must be even The positive integers $ <nat:158> $ , $ <nat:178> $ , and also $ <nat:262> $ are guaranteed to be even naturals What's more , the whole number $ <nat:354> $ is known as an even number in $ \mathbb{Z}^+ $ Observe that the whole number $ <nat:328> $ is obviously even It can be checked that the sum $ <nat:262> \times <var:X> + <var:N> \times <nat:354> + <var:R> \times <nat:328> + <nat:178> \times <var:q> + <nat:158> \times <var:x> + <var:g> \times <nat:476> + <nat:431> + <var:m> \times <nat:188> + <var:W> \times <nat:464> $ must be odd . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:x> <var:R> <var:g> <var:q> <var:m> <var:W> <var:N> <var:X> : nat , Nat . odd ( <nat:178> * <var:q> + <nat:464> * <var:W> + <nat:328> * <var:R> + <nat:476> * <var:g> + <nat:158> * <var:x> + <nat:188> * <var:m> + <nat:262> * <var:X> + <nat:354> * <var:N> + <nat:431> ) = true . Proof . intros . rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . repeat rewrite Nat . even_mul . assert ( <genH> : Nat . even <nat:464> = true ) . { auto . } assert ( <genH> : Nat . even <nat:188> = true ) . { auto . } assert ( <genH> : Nat . even <nat:476> = true ) . { auto . } assert ( <genH> : Nat . even <nat:158> = true ) . { auto . } assert ( <genH> : Nat . even <nat:178> = true ) . { auto . } assert ( <genH> : Nat . even <nat:262> = true ) . { auto . } assert ( <genH> : Nat . even <nat:354> = true ) . { auto . } assert ( <genH> : Nat . even <nat:328> = true ) . { auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 