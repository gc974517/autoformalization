\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Denote that $ <var:m> $ is a <def:seven-composite> number only if for some natural numbers $ <var:O> $ , $ <var:r> $ , $ <var:Q> $ , $ <var:Z> $ , $ <var:y> $ , $ <var:p> $ , $ <var:T> $ we get $ <var:T> $ , $ <var:Q> $ , $ <var:O> $ , $ <var:p> $ , $ <var:r> $ , $ <var:y> $ , $ <var:Z> \geq <nat:2> $ plus assuming some number $ <var:m> $ , $ <var:Q> \cdot <var:T> \cdot <var:Z> \cdot <var:r> \cdot <var:p> \cdot <var:y> \cdot <var:O> = <var:m> $ . Therefore the whole number <nat:453600> is a <def:seven-composite> integer . \end{theorem} \begin{proof} Note that $ <nat:6> $ , $ <nat:3> $ , $ <nat:8> $ , $ <nat:10> $ , $ <nat:7> $ , $ <nat:5> $ and $ <nat:9> $ are larger than or equivalent to <nat:2> . Additionally observe that too $ <nat:453600> = <var:T> * <var:y> * <var:O> * <var:r> * <var:p> * <var:Z> * <var:Q> $ implies $ <var:y> = <nat:10> $ , $ <var:r> = <nat:3> $ , $ <var:Z> = <nat:6> $ , $ <var:T> = <nat:9> $ , $ <var:Q> = <nat:5> $ , $ <var:O> = <nat:7> $ , and $ <var:p> = <nat:8> $ . This suggests <nat:453600> is a <def:seven-composite> number . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:seven-composite> ( <var:m> : nat ) := exists <var:O> <var:r> <var:Q> <var:Z> <var:y> <var:p> <var:T> : nat , ( <var:T> >= <nat:2> ) /\ ( <var:Q> >= <nat:2> ) /\ ( <var:O> >= <nat:2> ) /\ ( <var:p> >= <nat:2> ) /\ ( <var:r> >= <nat:2> ) /\ ( <var:y> >= <nat:2> ) /\ ( <var:Z> >= <nat:2> ) /\ ( <var:Q> * <var:T> * <var:Z> * <var:r> * <var:p> * <var:y> * <var:O> = <var:m> ) . Theorem <genP:1> : <def:seven-composite> <nat:453600> . Proof . unfold <def:seven-composite> . assert ( <genH> : <nat:6> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:3> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:8> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:10> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:7> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:5> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:9> >= <nat:2> ) . { lia . } exists <nat:7> . exists <nat:3> . exists <nat:5> . exists <nat:6> . exists <nat:10> . exists <nat:8> . exists <nat:9> . repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 