\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:M> \times <nat:432> + <var:a> \times <nat:94> + <nat:490> \times <var:D> + <nat:346> \times <var:S> + <nat:485> + <nat:348> \times <var:H> + <nat:484> \times <var:d> + <nat:212> \times <var:p> + <nat:206> \times <var:q> $ must be odd . \end{theorem} \begin{proof} We apply the understanding the expression $ <nat:490> \times <var:D> + <var:d> \times <nat:484> + <nat:348> \times <var:H> + <var:q> \times <nat:206> + <var:a> \times <nat:94> + <var:S> \times <nat:346> + <nat:432> \times <var:M> + <var:p> \times <nat:212> $ is trivially even . We know that the products $ <nat:432> \cdot <var:M> $ , $ <nat:348> \cdot <var:H> $ , $ <var:d> \cdot <nat:484> $ , $ <var:a> \cdot <nat:94> $ , plus $ <nat:346> \cdot <var:S> $ must be even integers . Adding on , the terms $ <var:D> \cdot <nat:490> $ and likewise $ <var:p> \cdot <nat:212> $ are trivially even elements of $ \mathbb{N} $ . This fact holds from the fact taking the product of an even positive integer and an arbitrary number is guaranteed to be an even whole number . Additionally , take note the pair $ <nat:206> \cdot <var:q> $ is known to be even . This is proven from the knowledge the multiplication between an even positive integer with some element of $ \mathbb{N} $ will be an even number in $ \mathbb{N} $ . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:M> <var:a> <var:D> <var:S> <var:H> <var:d> <var:p> <var:q> : nat , Nat . odd ( <nat:432> * <var:M> + <nat:94> * <var:a> + <nat:490> * <var:D> + <nat:346> * <var:S> + <nat:348> * <var:H> + <nat:484> * <var:d> + <nat:212> * <var:p> + <nat:206> * <var:q> + <nat:485> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:432> * <var:M> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:348> * <var:H> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:484> * <var:d> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:94> * <var:a> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:346> * <var:S> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:490> * <var:D> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:212> * <var:p> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:206> * <var:q> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:432> * <var:M> + <nat:94> * <var:a> + <nat:490> * <var:D> + <nat:346> * <var:S> + <nat:348> * <var:H> + <nat:484> * <var:d> + <nat:212> * <var:p> + <nat:206> * <var:q> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . auto . Qed . 