\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \newtheorem{definition}{Definition} \begin{document} \begin{definition} Iff we get $ <var:t> = <var:O> * <var:z> * <var:C> * <var:p> * <var:u> * <var:K> * <var:I> $ for $ <var:t> \in \mathbb{Z}^+ $ plus where $ <var:C> $ , $ <var:I> $ , $ <var:p> $ , $ <var:K> $ , $ <var:O> $ , $ <var:u> $ , $ <var:z> \geq <nat:2> $ , then assume that $ <var:t> $ is <def:seven-composite> with some positive integers $ <var:p> $ , $ <var:C> $ , $ <var:I> $ , $ <var:z> $ , $ <var:K> $ , $ <var:u> $ , $ <var:O> $ . \end{definition} \begin{theorem} The whole number <nat:201600> is <def:seven-composite> . \end{theorem} \begin{proof} Assume $ <var:C> = <nat:2> $ , $ <var:K> = <nat:7> $ , $ <var:I> = <nat:5> $ , $ <var:O> = <nat:8> $ , $ <var:p> = <nat:3> $ , $ <var:z> = <nat:10> $ , and $ <var:u> = <nat:12> $ . Observe $ <var:z> = <nat:10> $ , $ <var:O> = <nat:8> $ , $ <var:p> = <nat:3> $ , $ <var:I> = <nat:5> $ , $ <var:C> = <nat:2> $ , $ <var:u> = <nat:12> $ , $ <var:K> = <nat:7> $ are more than <nat:1> . This gives the thesis is true . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:seven-composite> ( <var:t> : nat ) := exists <var:p> <var:C> <var:I> <var:z> <var:K> <var:u> <var:O> : nat , ( <var:t> = <var:O> * <var:z> * <var:C> * <var:p> * <var:u> * <var:K> * <var:I> ) /\ ( <var:C> >= <nat:2> ) /\ ( <var:I> >= <nat:2> ) /\ ( <var:p> >= <nat:2> ) /\ ( <var:K> >= <nat:2> ) /\ ( <var:O> >= <nat:2> ) /\ ( <var:u> >= <nat:2> ) /\ ( <var:z> >= <nat:2> ) . Theorem <genP:1> : <def:seven-composite> <nat:201600> . Proof . unfold <def:seven-composite> . exists <nat:3> . exists <nat:2> . exists <nat:5> . exists <nat:10> . exists <nat:7> . exists <nat:12> . exists <nat:8> . assert ( <genH> : <nat:10> > <nat:1> ) . { lia . } assert ( <genH> : <nat:8> > <nat:1> ) . { lia . } assert ( <genH> : <nat:3> > <nat:1> ) . { lia . } assert ( <genH> : <nat:5> > <nat:1> ) . { lia . } assert ( <genH> : <nat:2> > <nat:1> ) . { lia . } assert ( <genH> : <nat:12> > <nat:1> ) . { lia . } assert ( <genH> : <nat:7> > <nat:1> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 