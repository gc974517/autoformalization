\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:480> <var:h> + <var:K> <nat:138> + <nat:56> + <nat:490> <var:I> + <var:R> <nat:130> + <nat:300> <var:A> + <var:o> <nat:72> + <nat:476> <var:B> + <var:Z> <nat:268> $ will be even with all whole numbers $ <var:B> $ , $ <var:o> $ , $ <var:R> $ , $ <var:h> $ , $ <var:I> $ , $ <var:K> $ , $ <var:A> $ , and $ <var:Z> $ . \end{theorem} \begin{proof} The summing between an even positive integer with an even element of $ \mathbb{Z}^+ $ will be an even whole number . Adding on , the positive integers $ <nat:480> $ , $ <nat:138> $ , $ <nat:490> $ , $ <nat:130> $ , $ <nat:300> $ , $ <nat:72> $ , $ <nat:476> $ , as well as $ <nat:268> $ are clearly even . Accordingly , the terms $ <nat:480> * <var:h> $ , $ <nat:138> * <var:K> $ , $ <nat:490> * <var:I> $ , $ <var:R> * <nat:130> $ , $ <nat:300> * <var:A> $ , $ <nat:72> * <var:o> $ , $ <var:B> * <nat:476> $ , and likewise $ <var:Z> * <nat:268> $ is guaranteed to be even additionally . It can be proven that our result holds . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:B> <var:o> <var:R> <var:h> <var:I> <var:K> <var:A> <var:Z> : nat , Nat . even ( <nat:480> * <var:h> + <nat:138> * <var:K> + <nat:490> * <var:I> + <nat:130> * <var:R> + <nat:300> * <var:A> + <nat:72> * <var:o> + <nat:476> * <var:B> + <nat:268> * <var:Z> + <nat:56> ) = true . Proof . intros . repeat rewrite Nat . even_add . assert ( <genH> : Nat . even <nat:480> = true ) . { auto . } assert ( <genH> : Nat . even <nat:138> = true ) . { auto . } assert ( <genH> : Nat . even <nat:490> = true ) . { auto . } assert ( <genH> : Nat . even <nat:130> = true ) . { auto . } assert ( <genH> : Nat . even <nat:300> = true ) . { auto . } assert ( <genH> : Nat . even <nat:72> = true ) . { auto . } assert ( <genH> : Nat . even <nat:476> = true ) . { auto . } assert ( <genH> : Nat . even <nat:268> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:480> * <var:h> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:138> * <var:K> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:490> * <var:I> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:130> * <var:R> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:300> * <var:A> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:72> * <var:o> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:476> * <var:B> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:268> * <var:Z> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 