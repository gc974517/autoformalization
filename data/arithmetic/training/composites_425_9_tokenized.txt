\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \newtheorem{definition}{Definition} \begin{document} \begin{definition} With the condition we have $ <var:p> = <var:l> \times <var:d> \times <var:v> \times <var:h> \times <var:r> \times <var:G> \times <var:q> \times <var:B> \times <var:V> $ given some integer $ <var:p> $ and so that $ <var:V> $ , $ <var:h> $ , $ <var:v> $ , $ <var:d> $ , $ <var:l> $ , $ <var:B> $ , $ <var:q> $ , $ <var:r> $ and $ <var:G> \geq <nat:2> $ , say that $ <var:p> $ is <def:nine-composite> with some integers $ <var:h> $ , $ <var:v> $ , $ <var:l> $ , $ <var:V> $ , $ <var:B> $ , $ <var:r> $ , $ <var:d> $ , $ <var:q> $ , $ <var:G> $ . \end{definition} \begin{theorem} The integer <nat:7257600> is <def:nine-composite> . \end{theorem} \begin{proof} Take $ <var:G> = <nat:3> $ , $ <var:V> = <nat:4> $ , $ <var:B> = <nat:10> $ , $ <var:v> = <nat:2> $ , $ <var:q> = <nat:7> $ , $ <var:h> = <nat:8> $ , $ <var:l> = <nat:9> $ , $ <var:d> = <nat:12> $ and $ <var:r> = <nat:5> $ . Note $ <var:l> = <nat:9> $ , $ <var:q> = <nat:7> $ , $ <var:r> = <nat:5> $ , $ <var:G> = <nat:3> $ , $ <var:B> = <nat:10> $ , $ <var:V> = <nat:4> $ , $ <var:d> = <nat:12> $ , $ <var:v> = <nat:2> $ and $ <var:h> = <nat:8> \geq <nat:2> $ . In addition notice moreover $ <var:d> \times <var:G> \times <var:r> \times <var:B> \times <var:h> \times <var:q> \times <var:V> \times <var:l> \times <var:v> = <nat:7257600> $ . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:nine-composite> ( <var:p> : nat ) := exists <var:h> <var:v> <var:l> <var:V> <var:B> <var:r> <var:d> <var:q> <var:G> : nat , ( <var:p> = <var:l> * <var:d> * <var:v> * <var:h> * <var:r> * <var:G> * <var:q> * <var:B> * <var:V> ) /\ ( <var:V> >= <nat:2> ) /\ ( <var:h> >= <nat:2> ) /\ ( <var:v> >= <nat:2> ) /\ ( <var:d> >= <nat:2> ) /\ ( <var:l> >= <nat:2> ) /\ ( <var:B> >= <nat:2> ) /\ ( <var:q> >= <nat:2> ) /\ ( <var:r> >= <nat:2> ) /\ ( <var:G> >= <nat:2> ) . Theorem <genP:1> : <def:nine-composite> <nat:7257600> . Proof . unfold <def:nine-composite> . exists <nat:8> . exists <nat:2> . exists <nat:9> . exists <nat:4> . exists <nat:10> . exists <nat:5> . exists <nat:12> . exists <nat:7> . exists <nat:3> . assert ( <genH> : <nat:9> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:7> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:5> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:3> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:10> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:4> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:12> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:2> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:8> >= <nat:2> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 