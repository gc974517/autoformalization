\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:110> \times <var:O> + <nat:464> \times <var:Q> + <nat:302> \times <var:h> + <nat:330> \times <var:n> + <nat:33> + <var:S> \times <nat:2> + <nat:420> \times <var:f> $ is odd assuming every unknowns $ <var:h> $ , $ <var:S> $ , $ <var:Q> $ , $ <var:O> $ , $ <var:f> $ , and $ <var:n> $ . \end{theorem} \begin{proof} See $ <nat:33> $ is guaranteed to be an odd number . We verify the theorem must be true . In addition to this , the product $ <nat:420> * <var:f> $ is known as an even number from the knowledge the whole number $ <nat:420> $ is clearly itself an even whole number . In addition to this , remember the number $ <nat:302> $ is known as even . Consequently , the pair $ <nat:302> * <var:h> $ is even also . Additionally , remember that the coefficient $ <nat:2> $ is known as even . For this reason , the term $ <var:S> * <nat:2> $ is even in addition . On top of this , the pair $ <var:O> * <nat:110> $ is guaranteed to be an even number in $ \mathbb{N} $ . This fact is proven as a consequence that the whole number $ <nat:110> $ is obviously even . Likewise , take note the term $ <nat:330> * <var:n> $ is obviously an even whole number as a consequence that multiplying of an even number and an arbitrary number in $ \mathbb{N} $ is guaranteed to be an even number in $ \mathbb{Z}^+ $ , which holds by reason that the integer $ <nat:330> $ is guaranteed to be even . Adding on , $ <var:Q> * <nat:464> $ is trivially an even element of $ \mathbb{Z}^+ $ by reason that the integer $ <nat:464> $ is known to be even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:h> <var:S> <var:Q> <var:O> <var:f> <var:n> : nat , Nat . odd ( <nat:110> * <var:O> + <nat:464> * <var:Q> + <nat:302> * <var:h> + <nat:330> * <var:n> + <nat:2> * <var:S> + <nat:420> * <var:f> + <nat:33> ) = true . Proof . intros . assert ( <genH> : Nat . odd <nat:33> = true ) . { auto . } assert ( <genH> : Nat . even <nat:420> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:420> * <var:f> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:302> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:302> * <var:h> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:2> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:2> * <var:S> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:110> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:110> * <var:O> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:330> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:330> * <var:n> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:464> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:464> * <var:Q> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 