\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:480> <var:C> + <nat:327> + <nat:280> <var:l> + <var:o> <nat:402> + <var:D> <nat:498> + <nat:428> <var:O> + <var:P> <nat:478> + <var:L> <nat:14> + <var:U> <nat:272> $ will be odd . \end{theorem} \begin{proof} Recall that the leading terms $ <nat:480> $ , $ <nat:272> $ , as well as $ <nat:428> $ are guaranteed to be even positive integers Likewise , the number $ <nat:478> $ is obviously an even whole number Additionally , the whole numbers $ <nat:498> $ , $ <nat:14> $ , additionally $ <nat:402> $ are known to be even See that the positive integer $ <nat:280> $ is known as even It can be shown that that the formula $ <nat:327> + <nat:14> * <var:L> + <var:U> * <nat:272> + <var:O> * <nat:428> + <nat:480> * <var:C> + <var:o> * <nat:402> + <nat:498> * <var:D> + <var:P> * <nat:478> + <nat:280> * <var:l> $ will be odd . We know the summation of even natural numbers collectively with an odd element of $ \mathbb{N} $ is odd . Take note that $ <nat:327> $ is known as odd . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:C> <var:l> <var:o> <var:D> <var:O> <var:P> <var:L> <var:U> : nat , Nat . odd ( <nat:480> * <var:C> + <nat:280> * <var:l> + <nat:402> * <var:o> + <nat:498> * <var:D> + <nat:428> * <var:O> + <nat:478> * <var:P> + <nat:14> * <var:L> + <nat:272> * <var:U> + <nat:327> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:480> = true ) . { auto . } assert ( <genH> : Nat . even <nat:272> = true ) . { auto . } assert ( <genH> : Nat . even <nat:428> = true ) . { auto . } assert ( <genH> : Nat . even <nat:478> = true ) . { auto . } assert ( <genH> : Nat . even <nat:498> = true ) . { auto . } assert ( <genH> : Nat . even <nat:14> = true ) . { auto . } assert ( <genH> : Nat . even <nat:402> = true ) . { auto . } assert ( <genH> : Nat . even <nat:280> = true ) . { auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . assert ( <genH> : Nat . odd <nat:327> = true ) . { auto . } repeat rewrite Nat . even_mul . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 