\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:b> \times <nat:156> + <var:a> \times <nat:436> + <var:f> \times <nat:36> + <nat:339> + <nat:200> \times <var:D> $ must be odd . \end{theorem} \begin{proof} We know that $ <nat:339> $ is known to be an odd element of $ \mathbb{Z}^+ $ . The addition of even numbers in $ \mathbb{Z}^+ $ collectively and an odd number in $ \mathbb{N} $ will be an odd element of $ \mathbb{Z}^+ $ . The term $ <nat:436> \times <var:a> $ is even . This fact is proven since multiplying between an even number with an arbitrary element of $ \mathbb{Z}^+ $ is guaranteed to be even . This holds from the knowledge the coefficient $ <nat:436> $ is trivially fundamentally an even element of $ \mathbb{Z}^+ $ . Likewise , remember that the integers $ <nat:200> $ in addition to $ <nat:156> $ are obviously even natural numbers . Therefore , the terms $ <nat:200> \times <var:D> $ additionally $ <var:b> \times <nat:156> $ is even also . The coefficient $ <nat:36> $ is clearly even . Then , the pair $ <nat:36> \times <var:f> $ must be even additionally . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:b> <var:a> <var:f> <var:D> : nat , Nat . odd ( <nat:156> * <var:b> + <nat:436> * <var:a> + <nat:36> * <var:f> + <nat:200> * <var:D> + <nat:339> ) = true . Proof . intros . assert ( <genH> : Nat . odd <nat:339> = true ) . { auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . assert ( <genH> : Nat . even <nat:436> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:436> * <var:a> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:200> = true ) . { auto . } assert ( <genH> : Nat . even <nat:156> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:200> * <var:D> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:156> * <var:b> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:36> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:36> * <var:f> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 