\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Whenever $ \exists <var:v> $ , $ <var:g> $ , $ <var:e> $ , $ <var:F> $ , $ <var:W> $ , $ <var:k> $ , $ <var:b> \in \mathbb{Z}^+ $ so that $ <var:W> $ , $ <var:F> $ , $ <var:k> $ , $ <var:b> $ , $ <var:g> $ , $ <var:e> $ , and $ <var:v> > <nat:1> $ . Assume that $ <var:P> \in \mathbb{N} $ will be considered <def:seven-composite> if $ <var:b> \cdot <var:e> \cdot <var:W> \cdot <var:v> \cdot <var:g> \cdot <var:k> \cdot <var:F> = <var:P> $ . Thus the natural number <nat:181440> is <def:seven-composite> . \end{theorem} \begin{proof} Assume $ <var:e> = <nat:5> $ , $ <var:k> = <nat:2> $ , $ <var:g> = <nat:4> $ , $ <var:F> = <nat:7> $ , $ <var:b> = <nat:9> $ , $ <var:v> = <nat:12> $ and $ <var:W> = <nat:6> $ . We present the statement is valid as By reason of $ <nat:7> $ , $ <nat:2> $ , $ <nat:4> $ , $ <nat:5> $ , $ <nat:6> $ , $ <nat:9> $ , and $ <nat:12> $ are greater than <nat:1> . Consequently , $ <nat:181440> = <var:F> \times <var:k> \times <var:e> \times <var:g> \times <var:b> \times <var:v> \times <var:W> $ is validated . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:seven-composite> ( <var:P> : nat ) := exists <var:v> <var:g> <var:e> <var:F> <var:W> <var:k> <var:b> : nat , ( <var:W> > <nat:1> ) /\ ( <var:F> > <nat:1> ) /\ ( <var:k> > <nat:1> ) /\ ( <var:b> > <nat:1> ) /\ ( <var:g> > <nat:1> ) /\ ( <var:e> > <nat:1> ) /\ ( <var:v> > <nat:1> ) /\ ( <var:b> * <var:e> * <var:W> * <var:v> * <var:g> * <var:k> * <var:F> = <var:P> ) . Theorem <genP:1> : <def:seven-composite> <nat:181440> . Proof . unfold <def:seven-composite> . exists <nat:12> . exists <nat:4> . exists <nat:5> . exists <nat:7> . exists <nat:6> . exists <nat:2> . exists <nat:9> . assert ( <genH> : <nat:7> > <nat:1> ) . { lia . } assert ( <genH> : <nat:2> > <nat:1> ) . { lia . } assert ( <genH> : <nat:4> > <nat:1> ) . { lia . } assert ( <genH> : <nat:5> > <nat:1> ) . { lia . } assert ( <genH> : <nat:6> > <nat:1> ) . { lia . } assert ( <genH> : <nat:9> > <nat:1> ) . { lia . } assert ( <genH> : <nat:12> > <nat:1> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 