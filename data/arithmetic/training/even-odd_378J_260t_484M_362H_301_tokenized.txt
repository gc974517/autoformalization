\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:M> \times <nat:484> + <var:H> \times <nat:362> + <nat:260> \times <var:t> + <var:J> \times <nat:378> + <nat:301> $ will be odd . \end{theorem} \begin{proof} Recall that the adding between an even integer with an odd positive integer must be odd . Observe $ <nat:301> $ is clearly an odd positive integer . It can be proven that the expression $ <nat:260> <var:t> + <var:H> <nat:362> + <var:M> <nat:484> + <nat:378> <var:J> $ is clearly even . We know the pairs $ <var:t> <nat:260> $ , $ <var:H> <nat:362> $ , $ <nat:484> <var:M> $ , additionally $ <nat:378> <var:J> $ are known as even . This is proven since the leading terms $ <nat:260> $ , $ <nat:362> $ , $ <nat:484> $ , and likewise $ <nat:378> $ must be instrinsically even numbers in $ \mathbb{N} $ . As a consequence that the product of an even integer with some number is even $ <nat:378> \times <var:J> + <nat:260> \times <var:t> + <var:M> \times <nat:484> + <var:H> \times <nat:362> $ is even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:M> <var:H> <var:t> <var:J> : nat , Nat . odd ( <nat:484> * <var:M> + <nat:362> * <var:H> + <nat:260> * <var:t> + <nat:378> * <var:J> + <nat:301> ) = true . Proof . intros . rewrite Nat . odd_add . assert ( <genH> : Nat . odd <nat:301> = true ) . { auto . } assert ( <genH> : Nat . even <nat:260> = true ) . { auto . } assert ( <genH> : Nat . even <nat:362> = true ) . { auto . } assert ( <genH> : Nat . even <nat:484> = true ) . { auto . } assert ( <genH> : Nat . even <nat:378> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:260> * <var:t> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:362> * <var:H> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:484> * <var:M> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:378> * <var:J> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:484> * <var:M> + <nat:362> * <var:H> + <nat:260> * <var:t> + <nat:378> * <var:J> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite <- Nat . negb_even . rewrite <genH> . rewrite <genH> . auto . Qed . 