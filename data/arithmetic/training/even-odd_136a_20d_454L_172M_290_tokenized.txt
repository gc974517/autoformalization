\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:290> + <nat:136> <var:a> + <nat:454> <var:L> + <var:d> <nat:20> + <var:M> <nat:172> $ will be even given terms $ <var:d> $ , $ <var:M> $ , $ <var:L> $ , and $ <var:a> $ . \end{theorem} \begin{proof} We prove $ <nat:172> * <var:M> + <var:a> * <nat:136> + <nat:454> * <var:L> + <nat:290> + <var:d> * <nat:20> $ is trivially even by reason that $ <var:L> \cdot <nat:454> + <nat:136> \cdot <var:a> + <nat:20> \cdot <var:d> + <nat:172> \cdot <var:M> $ is known to be even . The pairs $ <nat:20> * <var:d> $ , $ <var:L> * <nat:454> $ , and moreover $ <nat:136> * <var:a> $ are known as even . This is true as a consequence that multiplying of an even element of $ \mathbb{Z}^+ $ and an arbitrary natural number is even . Recall $ <nat:172> * <var:M> $ is known as even . See that $ <nat:290> $ is trivially even . The summing between even numbers in $ \mathbb{N} $ successively is even . In consequence , $ <var:a> \times <nat:136> + <nat:290> + <var:d> \times <nat:20> + <var:L> \times <nat:454> + <nat:172> \times <var:M> $ must be even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:d> <var:M> <var:L> <var:a> : nat , Nat . even ( <nat:136> * <var:a> + <nat:454> * <var:L> + <nat:20> * <var:d> + <nat:172> * <var:M> + <nat:290> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:20> * <var:d> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:454> * <var:L> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:136> * <var:a> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:172> * <var:M> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:136> * <var:a> + <nat:454> * <var:L> + <nat:20> * <var:d> + <nat:172> * <var:M> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:290> = true ) . { auto . } rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . auto . Qed . 