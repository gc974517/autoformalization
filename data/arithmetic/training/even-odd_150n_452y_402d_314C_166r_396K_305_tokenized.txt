\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:402> \cdot <var:d> + <nat:314> \cdot <var:C> + <nat:396> \cdot <var:K> + <var:r> \cdot <nat:166> + <nat:305> + <nat:150> \cdot <var:n> + <var:y> \cdot <nat:452> $ is odd . \end{theorem} \begin{proof} The summation of even elements of $ \mathbb{Z}^+ $ together with an odd number in $ \mathbb{N} $ is odd . We utilize the knowledge that $ <nat:396> * <var:K> + <var:C> * <nat:314> + <nat:452> * <var:y> + <nat:402> * <var:d> + <var:r> * <nat:166> + <var:n> * <nat:150> $ is known to be even . The leading term $ <nat:452> $ is clearly an even number . Thus , $ <var:y> * <nat:452> $ will be even in addition . Observe the pair $ <var:n> * <nat:150> $ is obviously even because the integer $ <nat:150> $ is guaranteed to be an even element of $ \mathbb{N} $ . Take note the pair $ <var:K> * <nat:396> $ is even . This fact is proven as a consequence that the natural number $ <nat:396> $ is clearly even . What's more , the term $ <var:C> * <nat:314> $ is trivially an even whole number because the natural number $ <nat:314> $ is known to be an even integer . Likewise , we know the number $ <nat:402> $ is known as an even positive integer . Thus , $ <nat:402> * <var:d> $ must be even as well . Building on , take note the pair $ <nat:166> * <var:r> $ is trivially even as a consequence that taking the product of an even natural and some natural number is guaranteed to be even . This must be true from the knowledge the positive integer $ <nat:166> $ is guaranteed to be even . It can be justified that $ <nat:305> + <var:n> <nat:150> + <var:y> <nat:452> + <var:d> <nat:402> + <var:C> <nat:314> + <nat:166> <var:r> + <nat:396> <var:K> $ is odd . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:d> <var:C> <var:K> <var:r> <var:n> <var:y> : nat , Nat . odd ( <nat:402> * <var:d> + <nat:314> * <var:C> + <nat:396> * <var:K> + <nat:166> * <var:r> + <nat:150> * <var:n> + <nat:452> * <var:y> + <nat:305> ) = true . Proof . intros . rewrite Nat . odd_add . assert ( <genH> : Nat . even <nat:452> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:452> * <var:y> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:150> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:150> * <var:n> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:396> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:396> * <var:K> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:314> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:314> * <var:C> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:402> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:402> * <var:d> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:166> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:166> * <var:r> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:402> * <var:d> + <nat:314> * <var:C> + <nat:396> * <var:K> + <nat:166> * <var:r> + <nat:150> * <var:n> + <nat:452> * <var:y> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite <- Nat . negb_even . rewrite <genH> . auto . Qed . 