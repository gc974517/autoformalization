\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Using terms $ <var:N> $ , $ <var:Y> $ , $ <var:u> $ , $ <var:R> $ , $ <var:r> $ , $ <var:s> $ , $ <var:U> $ , and $ <var:f> $ $ <var:s> * <nat:168> + <nat:210> * <var:Y> + <var:f> * <nat:484> + <var:R> * <nat:206> + <var:u> * <nat:340> + <nat:120> * <var:U> + <var:r> * <nat:246> + <nat:110> * <var:N> + <nat:357> $ is odd . \end{theorem} \begin{proof} Take note that the integer $ <nat:120> $ is known as even We know that the coefficients $ <nat:206> $ , $ <nat:340> $ , $ <nat:110> $ , $ <nat:484> $ , and also $ <nat:210> $ are even positive integers Adding on , the whole number $ <nat:168> $ is an even whole number The leading term $ <nat:246> $ is obviously an even element of $ \mathbb{Z}^+ $ The adding between an even element of $ \mathbb{N} $ with an odd natural will be odd as well as the product between even integers must be even . In consequence , this result must be true . Take note that $ <nat:357> $ is trivially odd . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:N> <var:Y> <var:u> <var:R> <var:r> <var:s> <var:U> <var:f> : nat , Nat . odd ( <nat:168> * <var:s> + <nat:210> * <var:Y> + <nat:484> * <var:f> + <nat:206> * <var:R> + <nat:340> * <var:u> + <nat:120> * <var:U> + <nat:246> * <var:r> + <nat:110> * <var:N> + <nat:357> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:120> = true ) . { auto . } assert ( <genH> : Nat . even <nat:206> = true ) . { auto . } assert ( <genH> : Nat . even <nat:340> = true ) . { auto . } assert ( <genH> : Nat . even <nat:110> = true ) . { auto . } assert ( <genH> : Nat . even <nat:484> = true ) . { auto . } assert ( <genH> : Nat . even <nat:210> = true ) . { auto . } assert ( <genH> : Nat . even <nat:168> = true ) . { auto . } assert ( <genH> : Nat . even <nat:246> = true ) . { auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . repeat rewrite Nat . even_mul . assert ( <genH> : Nat . odd <nat:357> = true ) . { auto . } rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 