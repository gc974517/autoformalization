\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} With every $ <var:U> $ , $ <var:R> $ , $ <var:f> $ , $ <var:N> $ , $ <var:p> $ , $ <var:v> $ , $ <var:G> $ , and $ <var:a> $ the sum $ <nat:120> * <var:U> + <nat:166> * <var:a> + <var:N> * <nat:426> + <nat:436> * <var:R> + <var:G> * <nat:22> + <nat:496> * <var:p> + <nat:250> * <var:f> + <var:v> * <nat:308> + <nat:435> $ will be odd . \end{theorem} \begin{proof} Observe $ <nat:435> $ is clearly odd . The adding of even natural numbers concurrently with an odd whole number is guaranteed to be an odd number . Thus , our theorem is proven . Our main result is true from the knowledge $ <nat:426> * <var:N> + <nat:22> * <var:G> + <nat:308> * <var:v> + <var:a> * <nat:166> + <nat:250> * <var:f> + <var:p> * <nat:496> + <nat:120> * <var:U> + <nat:436> * <var:R> $ is known as even . In addition , the leading terms $ <nat:426> $ , $ <nat:22> $ , $ <nat:308> $ , $ <nat:166> $ , $ <nat:250> $ , $ <nat:496> $ , $ <nat:120> $ , $ <nat:436> $ , are clearly even . Then , the terms $ <var:N> * <nat:426> $ , $ <nat:22> * <var:G> $ , $ <var:v> * <nat:308> $ , $ <var:a> * <nat:166> $ , $ <nat:250> * <var:f> $ , $ <var:p> * <nat:496> $ , $ <nat:120> * <var:U> $ , $ <nat:436> * <var:R> $ , is even in addition . Since the adding of even numbers in $ \mathbb{N} $ with even integers will be an even number , and likewise since taking the product between even elements of $ \mathbb{N} $ and an arbitrary element of $ \mathbb{N} $ is guaranteed to be even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:U> <var:R> <var:f> <var:N> <var:p> <var:v> <var:G> <var:a> : nat , Nat . odd ( <nat:120> * <var:U> + <nat:166> * <var:a> + <nat:426> * <var:N> + <nat:436> * <var:R> + <nat:22> * <var:G> + <nat:496> * <var:p> + <nat:250> * <var:f> + <nat:308> * <var:v> + <nat:435> ) = true . Proof . intros . assert ( <genH> : Nat . odd <nat:435> = true ) . { auto . } rewrite Nat . odd_add . assert ( <genH> : Nat . even <nat:426> = true ) . { auto . } assert ( <genH> : Nat . even <nat:22> = true ) . { auto . } assert ( <genH> : Nat . even <nat:308> = true ) . { auto . } assert ( <genH> : Nat . even <nat:166> = true ) . { auto . } assert ( <genH> : Nat . even <nat:250> = true ) . { auto . } assert ( <genH> : Nat . even <nat:496> = true ) . { auto . } assert ( <genH> : Nat . even <nat:120> = true ) . { auto . } assert ( <genH> : Nat . even <nat:436> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:426> * <var:N> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:22> * <var:G> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:308> * <var:v> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:166> * <var:a> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:250> * <var:f> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:496> * <var:p> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:120> * <var:U> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:436> * <var:R> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:120> * <var:U> + <nat:166> * <var:a> + <nat:426> * <var:N> + <nat:436> * <var:R> + <nat:22> * <var:G> + <nat:496> * <var:p> + <nat:250> * <var:f> + <nat:308> * <var:v> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite <- Nat . negb_even . rewrite <genH> . rewrite <genH> . auto . Qed . 