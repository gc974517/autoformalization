\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \newtheorem{definition}{Definition} \begin{document} \begin{definition} There exist natural numbers $ <var:n> $ , $ <var:f> $ , $ <var:J> $ , $ <var:h> $ , $ <var:q> $ , $ <var:o> $ , $ <var:Y> $ more than or equal to <nat:2> . Say that $ <var:z> \in \mathbb{N} $ is a <def:seven-composite> number if $ <var:J> * <var:h> * <var:Y> * <var:n> * <var:o> * <var:q> * <var:f> = <var:z> $ . \end{definition} \begin{theorem} $ <nat:151200> = <var:z> $ is <def:seven-composite> . \end{theorem} \begin{proof} Recall <nat:151200> is <def:seven-composite> given it is the multiplication between $ <var:n> $ , $ <var:Y> $ , $ <var:q> $ , $ <var:h> $ , $ <var:J> $ , $ <var:f> $ , $ <var:o> $ larger than or equal to <nat:2> . We present <nat:151200> is a <def:seven-composite> whole number as $ <nat:6> * <nat:3> * <nat:2> * <nat:10> * <nat:7> * <nat:12> * <nat:5> = <nat:151200> = <var:n> * <var:f> * <var:o> * <var:q> * <var:Y> * <var:J> * <var:h> $ and for $ <nat:6> $ , $ <nat:3> $ , $ <nat:5> $ , $ <nat:7> $ , $ <nat:10> $ , $ <nat:12> $ , $ <nat:2> $ are more than or equivalent to <nat:2> . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:seven-composite> ( <var:z> : nat ) := exists <var:n> <var:f> <var:J> <var:h> <var:q> <var:o> <var:Y> : nat , ( <var:n> >= <nat:2> ) /\ ( <var:f> >= <nat:2> ) /\ ( <var:J> >= <nat:2> ) /\ ( <var:h> >= <nat:2> ) /\ ( <var:q> >= <nat:2> ) /\ ( <var:o> >= <nat:2> ) /\ ( <var:Y> >= <nat:2> ) /\ ( <var:J> * <var:h> * <var:Y> * <var:n> * <var:o> * <var:q> * <var:f> = <var:z> ) . Theorem <genP:1> : <def:seven-composite> <nat:151200> . Proof . unfold <def:seven-composite> . exists <nat:6> . exists <nat:3> . exists <nat:12> . exists <nat:5> . exists <nat:10> . exists <nat:2> . exists <nat:7> . assert ( <genH> : <nat:6> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:3> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:5> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:7> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:10> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:12> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:2> >= <nat:2> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 