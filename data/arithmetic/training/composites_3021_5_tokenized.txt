\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \newtheorem{definition}{Definition} \begin{document} \begin{definition} Take $ <var:z> $ , $ <var:o> $ , $ <var:y> $ , $ <var:G> $ , $ <var:a> $ are positive integers . Claim that $ <var:M> \in \mathbb{Z}^+ $ is considered to be a <def:five-composite> whole number when $ <var:M> = <var:y> * <var:o> * <var:a> * <var:z> * <var:G> $ plus factors are larger than or equal to <nat:2> . \end{definition} \begin{theorem} The whole number <nat:2304> is a <def:five-composite> whole number . \end{theorem} \begin{proof} Remember <nat:2304> is a <def:five-composite> whole number wherever it is the multiplication between integers $ <var:a> $ , $ <var:z> $ , $ <var:y> $ , $ <var:o> $ and $ <var:G> $ so that $ <var:G> $ , $ <var:o> $ , $ <var:a> $ , $ <var:z> $ , $ <var:y> \geq <nat:2> $ . Note $ <nat:3> $ , $ <nat:12> $ , $ <nat:2> $ , $ <nat:8> $ , $ <nat:4> \geq <nat:2> $ . Also notice additionally $ <nat:12> \times <nat:2> \times <nat:4> \times <nat:8> \times <nat:3> = <var:G> \times <var:z> \times <var:o> \times <var:y> \times <var:a> = <nat:2304> $ . This shows the result is valid . Therefore , <nat:2304> is a <def:five-composite> number has been validated . Because of this , <nat:2304> is the product of $ <var:G> $ , $ <var:o> $ , $ <var:a> $ , $ <var:y> $ , and $ <var:z> \in \mathbb{N} $ and $ <var:G> $ , $ <var:a> $ , $ <var:y> $ , $ <var:o> $ , and $ <var:z> \geq <nat:2> $ has been verified . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:five-composite> ( <var:M> : nat ) := exists <var:z> <var:o> <var:y> <var:G> <var:a> : nat , ( <var:M> = <var:y> * <var:o> * <var:a> * <var:z> * <var:G> ) /\ ( <var:z> >= <nat:2> ) /\ ( <var:o> >= <nat:2> ) /\ ( <var:y> >= <nat:2> ) /\ ( <var:G> >= <nat:2> ) /\ ( <var:a> >= <nat:2> ) . Theorem <genP:1> : <def:five-composite> <nat:2304> . Proof . unfold <def:five-composite> . assert ( <genH> : <nat:3> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:12> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:2> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:8> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:4> >= <nat:2> ) . { lia . } exists <nat:2> . exists <nat:4> . exists <nat:8> . exists <nat:12> . exists <nat:3> . repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 