\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:6652800> $ is $ <var:B> * <var:x> * <var:v> * <var:V> * <var:Q> * <var:k> * <var:q> * <var:U> * <var:a> $ given $ <var:Q> $ , $ <var:q> $ , $ <var:k> $ , $ <var:U> $ , $ <var:a> $ , $ <var:B> $ , $ <var:x> $ , $ <var:V> $ , and $ <var:v> $ so that $ <var:x> $ , $ <var:v> $ , $ <var:k> $ , $ <var:Q> $ , $ <var:V> $ , $ <var:U> $ , $ <var:a> $ , $ <var:B> $ , $ <var:q> $ larger than <nat:1> . \end{theorem} \begin{proof} Allow $ <var:a> = <nat:5> $ , $ <var:v> = <nat:10> $ , $ <var:Q> = <nat:4> $ , $ <var:V> = <nat:12> $ , $ <var:U> = <nat:6> $ , $ <var:q> = <nat:2> $ , $ <var:B> = <nat:3> $ , $ <var:x> = <nat:11> $ , $ <var:k> = <nat:7> $ . What's more notice $ <nat:11> $ , $ <nat:4> $ , $ <nat:12> $ , $ <nat:10> $ , $ <nat:5> $ , $ <nat:6> $ , $ <nat:2> $ , $ <nat:7> $ and $ <nat:3> > <nat:1> $ . \end{proof} \end{document} 
~
Require Import Lia . Theorem <genP:1> : exists <var:Q> <var:q> <var:k> <var:U> <var:a> <var:B> <var:x> <var:V> <var:v> : nat , ( <nat:6652800> = <var:B> * <var:x> * <var:v> * <var:V> * <var:Q> * <var:k> * <var:q> * <var:U> * <var:a> ) /\ ( <var:x> > <nat:1> ) /\ ( <var:v> > <nat:1> ) /\ ( <var:k> > <nat:1> ) /\ ( <var:Q> > <nat:1> ) /\ ( <var:V> > <nat:1> ) /\ ( <var:U> > <nat:1> ) /\ ( <var:a> > <nat:1> ) /\ ( <var:B> > <nat:1> ) /\ ( <var:q> > <nat:1> ) . Proof . exists <nat:4> . exists <nat:2> . exists <nat:7> . exists <nat:6> . exists <nat:5> . exists <nat:3> . exists <nat:11> . exists <nat:12> . exists <nat:10> . assert ( <genH> : <nat:11> > <nat:1> ) . { lia . } assert ( <genH> : <nat:4> > <nat:1> ) . { lia . } assert ( <genH> : <nat:12> > <nat:1> ) . { lia . } assert ( <genH> : <nat:10> > <nat:1> ) . { lia . } assert ( <genH> : <nat:5> > <nat:1> ) . { lia . } assert ( <genH> : <nat:6> > <nat:1> ) . { lia . } assert ( <genH> : <nat:2> > <nat:1> ) . { lia . } assert ( <genH> : <nat:7> > <nat:1> ) . { lia . } assert ( <genH> : <nat:3> > <nat:1> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 