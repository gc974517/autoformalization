\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:z> \cdot <nat:314> + <nat:409> + <var:p> \cdot <nat:422> + <var:J> \cdot <nat:130> + <nat:40> \cdot <var:x> + <var:Q> \cdot <nat:194> + <nat:200> \cdot <var:O> + <nat:266> \cdot <var:g> + <var:y> \cdot <nat:158> $ must be odd given every $ <var:z> $ , $ <var:x> $ , $ <var:Q> $ , $ <var:g> $ , $ <var:p> $ , $ <var:J> $ , $ <var:O> $ , and $ <var:y> \in \mathbb{Z}^+ $ . \end{theorem} \begin{proof} The terms $ <nat:422> <var:p> $ , $ <nat:266> <var:g> $ , $ <var:O> <nat:200> $ , $ <var:y> <nat:158> $ , $ <nat:194> <var:Q> $ , $ <var:x> <nat:40> $ , and also $ <var:J> <nat:130> $ must be even positive integers . This holds from the fact the product of an even element of $ \mathbb{N} $ with a element of $ \mathbb{Z}^+ $ will be an even natural , and must be true since the coefficients $ <nat:422> $ , $ <nat:266> $ , $ <nat:200> $ , $ <nat:158> $ , $ <nat:194> $ , $ <nat:40> $ , as well as $ <nat:130> $ must be even numbers in $ \mathbb{N} $ . In addition to this , we know the product $ <nat:314> <var:z> $ is trivially even from the fact the leading term $ <nat:314> $ is guaranteed to be an even number . We prove our claim is true . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:z> <var:x> <var:Q> <var:g> <var:p> <var:J> <var:O> <var:y> : nat , Nat . odd ( <nat:314> * <var:z> + <nat:422> * <var:p> + <nat:130> * <var:J> + <nat:40> * <var:x> + <nat:194> * <var:Q> + <nat:200> * <var:O> + <nat:266> * <var:g> + <nat:158> * <var:y> + <nat:409> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:422> = true ) . { auto . } assert ( <genH> : Nat . even <nat:266> = true ) . { auto . } assert ( <genH> : Nat . even <nat:200> = true ) . { auto . } assert ( <genH> : Nat . even <nat:158> = true ) . { auto . } assert ( <genH> : Nat . even <nat:194> = true ) . { auto . } assert ( <genH> : Nat . even <nat:40> = true ) . { auto . } assert ( <genH> : Nat . even <nat:130> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:422> * <var:p> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:266> * <var:g> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:200> * <var:O> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:158> * <var:y> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:194> * <var:Q> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:40> * <var:x> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:130> * <var:J> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:314> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:314> * <var:z> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 