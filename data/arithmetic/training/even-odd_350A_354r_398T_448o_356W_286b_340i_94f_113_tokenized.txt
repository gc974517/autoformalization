\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:113> + <nat:350> \cdot <var:A> + <var:r> \cdot <nat:354> + <nat:340> \cdot <var:i> + <nat:398> \cdot <var:T> + <nat:448> \cdot <var:o> + <var:W> \cdot <nat:356> + <nat:94> \cdot <var:f> + <var:b> \cdot <nat:286> $ is guaranteed to be odd with integers $ <var:A> $ , $ <var:r> $ , $ <var:W> $ , $ <var:f> $ , $ <var:b> $ , $ <var:i> $ , $ <var:T> $ , and $ <var:o> $ . \end{theorem} \begin{proof} We employ the fact the expression $ <var:A> \cdot <nat:350> + <nat:354> \cdot <var:r> + <var:T> \cdot <nat:398> + <nat:448> \cdot <var:o> + <var:W> \cdot <nat:356> + <nat:286> \cdot <var:b> + <nat:340> \cdot <var:i> + <nat:94> \cdot <var:f> $ is even . The product $ <var:f> \cdot <nat:94> $ is guaranteed to be even . The product $ <nat:354> \cdot <var:r> $ is obviously even . Further , observe $ <var:o> \cdot <nat:448> $ is even by reason that multiplying of an even element of $ \mathbb{N} $ and a integer is even . The pairs $ <nat:350> \cdot <var:A> $ , $ <var:b> \cdot <nat:286> $ , additionally $ <nat:340> \cdot <var:i> $ must be even . The pair $ <nat:356> \cdot <var:W> $ is known to be even from the knowledge multiplying between an even positive integer and any integer will be even . Building on , the term $ <nat:398> \cdot <var:T> $ is known as even since the multiplication of an even natural and some integer will be an even whole number . This claim holds by reason that the multiplication between an even element of $ \mathbb{N} $ with any number is even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:A> <var:r> <var:W> <var:f> <var:b> <var:i> <var:T> <var:o> : nat , Nat . odd ( <nat:350> * <var:A> + <nat:354> * <var:r> + <nat:340> * <var:i> + <nat:398> * <var:T> + <nat:448> * <var:o> + <nat:356> * <var:W> + <nat:94> * <var:f> + <nat:286> * <var:b> + <nat:113> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:94> * <var:f> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:354> * <var:r> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:448> * <var:o> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:350> * <var:A> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:286> * <var:b> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:340> * <var:i> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:356> * <var:W> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:398> * <var:T> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:350> * <var:A> + <nat:354> * <var:r> + <nat:340> * <var:i> + <nat:398> * <var:T> + <nat:448> * <var:o> + <nat:356> * <var:W> + <nat:94> * <var:f> + <nat:286> * <var:b> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . auto . Qed . 