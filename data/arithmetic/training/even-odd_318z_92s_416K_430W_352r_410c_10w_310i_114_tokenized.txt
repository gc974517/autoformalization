\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:318> \cdot <var:z> + <nat:92> \cdot <var:s> + <var:K> \cdot <nat:416> + <nat:430> \cdot <var:W> + <nat:114> + <var:r> \cdot <nat:352> + <nat:410> \cdot <var:c> + <var:w> \cdot <nat:10> + <nat:310> \cdot <var:i> $ is guaranteed to be even with every $ <var:r> $ , $ <var:K> $ , $ <var:W> $ , $ <var:c> $ , $ <var:w> $ , $ <var:z> $ , $ <var:s> $ , and $ <var:i> \in \mathbb{N} $ . \end{theorem} \begin{proof} See the integers $ <nat:318> $ , $ <nat:92> $ , $ <nat:416> $ , $ <nat:430> $ , $ <nat:352> $ , $ <nat:410> $ , $ <nat:10> $ , as well as $ <nat:310> $ are trivially even . For this reason , the pairs $ <var:z> \cdot <nat:318> $ , $ <var:s> \cdot <nat:92> $ , $ <nat:416> \cdot <var:K> $ , $ <var:W> \cdot <nat:430> $ , $ <var:r> \cdot <nat:352> $ , $ <var:c> \cdot <nat:410> $ , $ <var:w> \cdot <nat:10> $ , plus $ <var:i> \cdot <nat:310> $ will be even also . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:r> <var:K> <var:W> <var:c> <var:w> <var:z> <var:s> <var:i> : nat , Nat . even ( <nat:318> * <var:z> + <nat:92> * <var:s> + <nat:416> * <var:K> + <nat:430> * <var:W> + <nat:352> * <var:r> + <nat:410> * <var:c> + <nat:10> * <var:w> + <nat:310> * <var:i> + <nat:114> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:318> = true ) . { auto . } assert ( <genH> : Nat . even <nat:92> = true ) . { auto . } assert ( <genH> : Nat . even <nat:416> = true ) . { auto . } assert ( <genH> : Nat . even <nat:430> = true ) . { auto . } assert ( <genH> : Nat . even <nat:352> = true ) . { auto . } assert ( <genH> : Nat . even <nat:410> = true ) . { auto . } assert ( <genH> : Nat . even <nat:10> = true ) . { auto . } assert ( <genH> : Nat . even <nat:310> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:318> * <var:z> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:92> * <var:s> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:416> * <var:K> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:430> * <var:W> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:352> * <var:r> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:410> * <var:c> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:10> * <var:w> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:310> * <var:i> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 