\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:90> <var:B> + <nat:102> <var:s> + <var:j> <nat:154> + <nat:290> <var:W> + <var:G> <nat:86> + <nat:211> + <nat:480> <var:h> $ is odd assuming $ <var:B> $ , $ <var:s> $ , $ <var:G> $ , $ <var:h> $ , $ <var:W> $ , and $ <var:j> \in \mathbb{Z}^+ $ . \end{theorem} \begin{proof} The addition of an even natural and an odd number is an odd positive integer . See $ <nat:211> $ is obviously an odd number in $ \mathbb{N} $ . $ <nat:154> <var:j> + <nat:102> <var:s> + <var:W> <nat:290> + <nat:90> <var:B> + <var:h> <nat:480> + <nat:211> + <nat:86> <var:G> $ is clearly odd by reason that the sum $ <var:s> * <nat:102> + <nat:90> * <var:B> + <var:W> * <nat:290> + <nat:480> * <var:h> + <var:G> * <nat:86> + <nat:154> * <var:j> $ is known to be even . The terms $ <var:G> * <nat:86> $ , $ <nat:102> * <var:s> $ , $ <nat:90> * <var:B> $ , plus $ <nat:480> * <var:h> $ are trivially even numbers in $ \mathbb{N} $ . This must be true from the fact taking the product of an even positive integer and any natural number is clearly an even element of $ \mathbb{N} $ . Additionally , $ <var:j> * <nat:154> $ is guaranteed to be an even element of $ \mathbb{Z}^+ $ . See that the term $ <nat:290> * <var:W> $ is known to be an even number in $ \mathbb{N} $ . This fact holds since the product between an even natural number with a integer must be by definition an even number in $ \mathbb{Z}^+ $ . As a consequence that the addition of an even integer and an even positive integer is even , $ <var:W> <nat:290> + <var:B> <nat:90> + <var:G> <nat:86> + <var:j> <nat:154> + <nat:102> <var:s> + <var:h> <nat:480> $ is guaranteed to be even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:B> <var:s> <var:G> <var:h> <var:W> <var:j> : nat , Nat . odd ( <nat:90> * <var:B> + <nat:102> * <var:s> + <nat:154> * <var:j> + <nat:290> * <var:W> + <nat:86> * <var:G> + <nat:480> * <var:h> + <nat:211> ) = true . Proof . intros . rewrite Nat . odd_add . assert ( <genH> : Nat . odd <nat:211> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:86> * <var:G> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:102> * <var:s> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:90> * <var:B> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:480> * <var:h> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:154> * <var:j> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:290> * <var:W> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:90> * <var:B> + <nat:102> * <var:s> + <nat:154> * <var:j> + <nat:290> * <var:W> + <nat:86> * <var:G> + <nat:480> * <var:h> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite <- Nat . negb_even . rewrite <genH> . rewrite <genH> . auto . Qed . 