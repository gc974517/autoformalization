\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:b> <nat:300> + <nat:153> + <var:S> <nat:336> + <var:d> <nat:58> + <nat:468> <var:J> $ is guaranteed to be odd with all unknowns $ <var:d> $ , $ <var:J> $ , $ <var:S> $ , and $ <var:b> $ . \end{theorem} \begin{proof} We demonstrate $ <nat:300> \cdot <var:b> + <nat:336> \cdot <var:S> + <nat:58> \cdot <var:d> + <nat:468> \cdot <var:J> + <nat:153> $ is guaranteed to be odd . Our claim must be true because $ <nat:468> <var:J> + <nat:300> <var:b> + <nat:58> <var:d> + <nat:336> <var:S> $ is clearly even . Additionally , the products $ <var:J> <nat:468> $ , $ <nat:300> <var:b> $ , $ <nat:58> <var:d> $ , and moreover $ <var:S> <nat:336> $ are clearly even natural numbers by reason that the product between an even element of $ \mathbb{Z}^+ $ with a number in $ \mathbb{Z}^+ $ is itself an even natural as well as the whole numbers $ <nat:468> $ , $ <nat:300> $ , $ <nat:58> $ , and also $ <nat:336> $ must be even . Since taking the product between an even natural with some integer is guaranteed to be itself an even number in $ \mathbb{N} $ this proposition must be true . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:d> <var:J> <var:S> <var:b> : nat , Nat . odd ( <nat:300> * <var:b> + <nat:336> * <var:S> + <nat:58> * <var:d> + <nat:468> * <var:J> + <nat:153> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:468> = true ) . { auto . } assert ( <genH> : Nat . even <nat:300> = true ) . { auto . } assert ( <genH> : Nat . even <nat:58> = true ) . { auto . } assert ( <genH> : Nat . even <nat:336> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:468> * <var:J> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:300> * <var:b> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:58> * <var:d> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:336> * <var:S> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:300> * <var:b> + <nat:336> * <var:S> + <nat:58> * <var:d> + <nat:468> * <var:J> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . auto . Qed . 