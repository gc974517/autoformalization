\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} The positive integer <nat:19958400> is the product between natural numbers $ <var:U> $ , $ <var:e> $ , $ <var:P> $ , $ <var:o> $ , $ <var:h> $ , $ <var:Q> $ , $ <var:a> $ , $ <var:K> $ and $ <var:R> $ where $ <var:U> $ , $ <var:Q> $ , $ <var:h> $ , $ <var:a> $ , $ <var:P> $ , $ <var:o> $ , $ <var:e> $ , $ <var:K> $ and $ <var:R> \geq <nat:2> $ . \end{theorem} \begin{proof} Take $ <var:R> = <nat:9> $ , $ <var:P> = <nat:8> $ , $ <var:U> = <nat:3> $ , $ <var:e> = <nat:2> $ , $ <var:a> = <nat:11> $ , $ <var:o> = <nat:10> $ , $ <var:K> = <nat:12> $ , $ <var:h> = <nat:7> $ , and $ <var:Q> = <nat:5> $ . Note $ <var:e> = <nat:2> $ , $ <var:h> = <nat:7> $ , $ <var:R> = <nat:9> $ , $ <var:U> = <nat:3> $ , $ <var:P> = <nat:8> $ , $ <var:K> = <nat:12> $ , $ <var:a> = <nat:11> $ , $ <var:o> = <nat:10> $ and $ <var:Q> = <nat:5> \geq <nat:2> $ . Similarly notice still $ <var:U> * <var:o> * <var:a> * <var:P> * <var:h> * <var:e> * <var:R> * <var:K> * <var:Q> = <nat:19958400> $ . \end{proof} \end{document} 
~
Require Import Lia . Theorem <genP:1> : exists <var:U> <var:e> <var:P> <var:o> <var:h> <var:Q> <var:a> <var:K> <var:R> : nat , ( <nat:19958400> = <var:U> * <var:e> * <var:P> * <var:o> * <var:h> * <var:Q> * <var:a> * <var:K> * <var:R> ) /\ ( <var:U> >= <nat:2> ) /\ ( <var:Q> >= <nat:2> ) /\ ( <var:h> >= <nat:2> ) /\ ( <var:a> >= <nat:2> ) /\ ( <var:P> >= <nat:2> ) /\ ( <var:o> >= <nat:2> ) /\ ( <var:e> >= <nat:2> ) /\ ( <var:K> >= <nat:2> ) /\ ( <var:R> >= <nat:2> ) . Proof . exists <nat:3> . exists <nat:2> . exists <nat:8> . exists <nat:10> . exists <nat:7> . exists <nat:5> . exists <nat:11> . exists <nat:12> . exists <nat:9> . assert ( <genH> : <nat:2> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:7> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:9> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:3> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:8> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:12> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:11> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:10> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:5> >= <nat:2> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 