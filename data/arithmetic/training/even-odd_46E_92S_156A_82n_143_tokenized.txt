\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:92> \times <var:S> + <nat:46> \times <var:E> + <nat:156> \times <var:A> + <nat:82> \times <var:n> + <nat:143> $ will be odd . \end{theorem} \begin{proof} The totaling of an even number in $ \mathbb{N} $ with an odd natural must be an odd number in $ \mathbb{Z}^+ $ . See that the sum $ <var:S> <nat:92> + <nat:143> + <var:A> <nat:156> + <nat:46> <var:E> + <var:n> <nat:82> $ is odd since the formula $ <nat:46> * <var:E> + <nat:92> * <var:S> + <var:A> * <nat:156> + <nat:82> * <var:n> $ is guaranteed to be even , as a consequence that the summation between even naturals concurrently and an even natural number is guaranteed to be even . The pairs $ <nat:46> \times <var:E> $ , $ <nat:92> \times <var:S> $ , $ <var:A> \times <nat:156> $ , additionally $ <var:n> \times <nat:82> $ are even natural numbers . This fact is true since the positive integers $ <nat:46> $ , $ <nat:92> $ , $ <nat:156> $ , additionally $ <nat:82> $ are obviously even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:S> <var:E> <var:A> <var:n> : nat , Nat . odd ( <nat:92> * <var:S> + <nat:46> * <var:E> + <nat:156> * <var:A> + <nat:82> * <var:n> + <nat:143> ) = true . Proof . intros . rewrite Nat . odd_add . assert ( <genH> : Nat . even <nat:46> = true ) . { auto . } assert ( <genH> : Nat . even <nat:92> = true ) . { auto . } assert ( <genH> : Nat . even <nat:156> = true ) . { auto . } assert ( <genH> : Nat . even <nat:82> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:46> * <var:E> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:92> * <var:S> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:156> * <var:A> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:82> * <var:n> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:92> * <var:S> + <nat:46> * <var:E> + <nat:156> * <var:A> + <nat:82> * <var:n> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite <- Nat . negb_even . rewrite <genH> . auto . Qed . 