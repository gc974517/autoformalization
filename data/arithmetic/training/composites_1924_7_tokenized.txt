\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \newtheorem{definition}{Definition} \begin{document} \begin{definition} With the condition that there exist $ <var:s> $ , $ <var:r> $ , $ <var:d> $ , $ <var:V> $ , $ <var:C> $ , $ <var:q> $ , $ <var:g> \in \mathbb{Z}^+ $ let that $ <var:U> \in \mathbb{Z}^+ $ is considered to be a <def:seven-composite> whole number when $ <var:U> = <var:V> \cdot <var:s> \cdot <var:C> \cdot <var:g> \cdot <var:q> \cdot <var:d> \cdot <var:r> $ and larger than <nat:1> . \end{definition} \begin{theorem} $ <var:U> = <nat:570240> $ is <def:seven-composite> . \end{theorem} \begin{proof} Remember a <def:seven-composite> positive integer is the product of natural numbers $ <var:g> $ , $ <var:r> $ , $ <var:q> $ , $ <var:V> $ , $ <var:s> $ , $ <var:C> $ and $ <var:d> $ larger than <nat:1> . We justify <nat:570240> is a <def:seven-composite> natural number . Observe that $ <nat:2> \cdot <nat:8> \cdot <nat:5> \cdot <nat:9> \cdot <nat:6> \cdot <nat:11> \cdot <nat:12> = <nat:570240> $ . Also notice $ <nat:12> $ , $ <nat:9> $ , $ <nat:11> $ , $ <nat:6> $ , $ <nat:2> $ , $ <nat:5> $ , $ <nat:8> $ are greater than <nat:1> . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:seven-composite> ( <var:U> : nat ) := exists <var:s> <var:r> <var:d> <var:V> <var:C> <var:q> <var:g> : nat , ( <var:U> = <var:V> * <var:s> * <var:C> * <var:g> * <var:q> * <var:d> * <var:r> ) /\ ( <var:s> > <nat:1> ) /\ ( <var:r> > <nat:1> ) /\ ( <var:d> > <nat:1> ) /\ ( <var:V> > <nat:1> ) /\ ( <var:C> > <nat:1> ) /\ ( <var:q> > <nat:1> ) /\ ( <var:g> > <nat:1> ) . Theorem <genP:1> : <def:seven-composite> <nat:570240> . Proof . unfold <def:seven-composite> . exists <nat:12> . exists <nat:9> . exists <nat:6> . exists <nat:11> . exists <nat:2> . exists <nat:8> . exists <nat:5> . assert ( <genH> : <nat:12> > <nat:1> ) . { lia . } assert ( <genH> : <nat:9> > <nat:1> ) . { lia . } assert ( <genH> : <nat:11> > <nat:1> ) . { lia . } assert ( <genH> : <nat:6> > <nat:1> ) . { lia . } assert ( <genH> : <nat:2> > <nat:1> ) . { lia . } assert ( <genH> : <nat:5> > <nat:1> ) . { lia . } assert ( <genH> : <nat:8> > <nat:1> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 