\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:a> \times <nat:266> + <nat:224> \times <var:n> + <var:V> \times <nat:316> + <nat:474> \times <var:u> + <nat:202> \times <var:J> + <nat:104> \times <var:A> + <nat:440> $ will be even for all $ <var:V> $ , $ <var:a> $ , $ <var:u> $ , $ <var:n> $ , $ <var:J> $ , and $ <var:A> $ . \end{theorem} \begin{proof} Notice $ <nat:440> $ is guaranteed to be even . It can be proven that our theorem must be true . The coefficients $ <nat:202> $ , $ <nat:224> $ , $ <nat:104> $ , and $ <nat:474> $ are even integers . Hence , the pairs $ <var:J> \times <nat:202> $ , $ <nat:224> \times <var:n> $ , $ <nat:104> \times <var:A> $ , and likewise $ <var:u> \times <nat:474> $ must be even additionally . The leading term $ <nat:266> $ is known to be even . Thus , $ <var:a> \times <nat:266> $ is guaranteed to be even too . Remember the term $ <nat:316> \times <var:V> $ is trivially even . This holds because the product of an even positive integer with an arbitrary number is guaranteed to be an even number in $ \mathbb{N} $ . This claim is true as a consequence that the coefficient $ <nat:316> $ is obviously even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:V> <var:a> <var:u> <var:n> <var:J> <var:A> : nat , Nat . even ( <nat:266> * <var:a> + <nat:224> * <var:n> + <nat:316> * <var:V> + <nat:474> * <var:u> + <nat:202> * <var:J> + <nat:104> * <var:A> + <nat:440> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:440> = true ) . { auto . } assert ( <genH> : Nat . even <nat:202> = true ) . { auto . } assert ( <genH> : Nat . even <nat:224> = true ) . { auto . } assert ( <genH> : Nat . even <nat:104> = true ) . { auto . } assert ( <genH> : Nat . even <nat:474> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:202> * <var:J> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:224> * <var:n> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:104> * <var:A> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:474> * <var:u> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:266> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:266> * <var:a> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:316> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:316> * <var:V> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 