\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Given every integers $ <var:p> $ , $ <var:s> $ , $ <var:q> $ , $ <var:R> $ , $ <var:C> $ , and $ <var:a> $ the sum $ <nat:158> * <var:q> + <nat:388> * <var:C> + <var:a> * <nat:174> + <var:R> * <nat:122> + <nat:144> * <var:s> + <nat:193> + <nat:274> * <var:p> $ is odd . \end{theorem} \begin{proof} The term $ <nat:158> <var:q> $ is known as an even number in $ \mathbb{N} $ . This fact holds as a consequence that the multiplication of an even whole number with any integer is even . This must be true by reason that the integer $ <nat:158> $ is obviously even . In addition , recall that the number $ <nat:174> $ is even . Hence , the product $ <var:a> <nat:174> $ is even also . See that the whole number $ <nat:122> $ is obviously an even positive integer . Therefore , the term $ <var:R> <nat:122> $ is guaranteed to be even at the same time . Notice the pair $ <var:s> <nat:144> $ is an even element of $ \mathbb{N} $ . This fact is true since the whole number $ <nat:144> $ is known to be even . The number $ <nat:388> $ is an even number . Hence , $ <nat:388> <var:C> $ is even at the same time . See the coefficient $ <nat:274> $ is clearly even . As a consequence , the product $ <nat:274> <var:p> $ is guaranteed to be even additionally . Take note that $ <nat:193> $ is known as an odd natural . We justify $ <var:q> \cdot <nat:158> + <var:a> \cdot <nat:174> + <nat:388> \cdot <var:C> + <var:s> \cdot <nat:144> + <nat:193> + <nat:274> \cdot <var:p> + <nat:122> \cdot <var:R> $ must be odd . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:p> <var:s> <var:q> <var:R> <var:C> <var:a> : nat , Nat . odd ( <nat:158> * <var:q> + <nat:388> * <var:C> + <nat:174> * <var:a> + <nat:122> * <var:R> + <nat:144> * <var:s> + <nat:274> * <var:p> + <nat:193> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:158> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:158> * <var:q> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:174> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:174> * <var:a> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:122> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:122> * <var:R> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:144> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:144> * <var:s> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:388> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:388> * <var:C> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:274> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:274> * <var:p> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . odd <nat:193> = true ) . { auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 