\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \newtheorem{definition}{Definition} \begin{document} \begin{definition} Let $ <var:w> $ , $ <var:A> $ , $ <var:F> $ , $ <var:V> $ , $ <var:M> \in \mathbb{Z}^+ $ such that $ <var:V> $ , $ <var:M> $ , $ <var:F> $ , $ <var:A> $ , $ <var:w> > <nat:1> $ . We assume that $ <var:L> \in \mathbb{Z}^+ $ will be considered to be a <def:five-composite> whole number when $ <var:A> * <var:V> * <var:M> * <var:w> * <var:F> = <var:L> $ . \end{definition} \begin{theorem} $ <nat:36960> = <var:L> $ is <def:five-composite> . \end{theorem} \begin{proof} Remember a <def:five-composite> positive integer is the multiplication of numbers $ <var:F> $ , $ <var:M> $ , $ <var:w> $ , $ <var:V> $ and $ <var:A> $ satisfying the condition that $ <var:M> $ , $ <var:w> $ , $ <var:A> $ , $ <var:V> $ and $ <var:F> > <nat:1> $ . Notice $ <nat:10> $ , $ <nat:7> $ , $ <nat:11> $ , $ <nat:6> $ , and $ <nat:8> > <nat:1> $ . Further notice that likewise $ <nat:36960> = <nat:11> * <nat:10> * <nat:8> * <nat:6> * <nat:7> $ . So , <nat:36960> is a <def:five-composite> integer is validated . Therefore , $ <nat:36960> = <var:F> \cdot <var:V> \cdot <var:M> \cdot <var:A> \cdot <var:w> $ is proven . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:five-composite> ( <var:L> : nat ) := exists <var:w> <var:A> <var:F> <var:V> <var:M> : nat , ( <var:V> > <nat:1> ) /\ ( <var:M> > <nat:1> ) /\ ( <var:F> > <nat:1> ) /\ ( <var:A> > <nat:1> ) /\ ( <var:w> > <nat:1> ) /\ ( <var:A> * <var:V> * <var:M> * <var:w> * <var:F> = <var:L> ) . Theorem <genP:1> : <def:five-composite> <nat:36960> . Proof . unfold <def:five-composite> . assert ( <genH> : <nat:10> > <nat:1> ) . { lia . } assert ( <genH> : <nat:7> > <nat:1> ) . { lia . } assert ( <genH> : <nat:11> > <nat:1> ) . { lia . } assert ( <genH> : <nat:6> > <nat:1> ) . { lia . } assert ( <genH> : <nat:8> > <nat:1> ) . { lia . } exists <nat:6> . exists <nat:11> . exists <nat:8> . exists <nat:10> . exists <nat:7> . repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 