\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Using some whole numbers $ <var:D> $ , $ <var:u> $ , $ <var:T> $ , $ <var:c> $ , $ <var:v> $ , and $ <var:G> $ the formula $ <var:v> \cdot <nat:196> + <nat:4> \cdot <var:c> + <nat:42> \cdot <var:D> + <var:u> \cdot <nat:148> + <nat:464> \cdot <var:T> + <nat:168> \cdot <var:G> + <nat:149> $ is odd . \end{theorem} \begin{proof} We justify the formula $ <var:T> \cdot <nat:464> + <var:D> \cdot <nat:42> + <nat:196> \cdot <var:v> + <nat:149> + <nat:148> \cdot <var:u> + <nat:168> \cdot <var:G> + <nat:4> \cdot <var:c> $ is guaranteed to be odd . Recall the term $ <var:v> \times <nat:196> $ is known as an even natural number . Recall the terms $ <var:G> \times <nat:168> $ , $ <nat:4> \times <var:c> $ , and likewise $ <nat:148> \times <var:u> $ are clearly even . This is proven since the product between an even natural and an arbitrary element of $ \mathbb{N} $ is guaranteed to be an even whole number . Observe the term $ <var:D> \times <nat:42> $ is known as even . Likewise , the term $ <nat:464> \times <var:T> $ is known as an even number in $ \mathbb{N} $ since taking the product of an even element of $ \mathbb{Z}^+ $ with a positive integer will be fundamentally an even natural . The adding between even numbers and an odd element of $ \mathbb{N} $ is guaranteed to be an odd integer . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:D> <var:u> <var:T> <var:c> <var:v> <var:G> : nat , Nat . odd ( <nat:196> * <var:v> + <nat:4> * <var:c> + <nat:42> * <var:D> + <nat:148> * <var:u> + <nat:464> * <var:T> + <nat:168> * <var:G> + <nat:149> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:196> * <var:v> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:168> * <var:G> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:4> * <var:c> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:148> * <var:u> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:42> * <var:D> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:464> * <var:T> ) = true ) . { rewrite Nat . even_mul . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 