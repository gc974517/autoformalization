\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} For every $ <var:Q> $ , $ <var:C> $ , $ <var:F> $ , $ <var:v> $ , $ <var:T> $ , $ <var:y> $ , $ <var:g> $ , and $ <var:K> \in \mathbb{Z}^+ $ the summation $ <var:C> * <nat:134> + <var:F> * <nat:74> + <var:Q> * <nat:198> + <nat:149> + <nat:416> * <var:K> + <var:T> * <nat:68> + <var:g> * <nat:72> + <nat:172> * <var:y> + <var:v> * <nat:100> $ will be odd . \end{theorem} \begin{proof} Observe the numbers $ <nat:100> $ , $ <nat:68> $ , $ <nat:134> $ , $ <nat:172> $ , $ <nat:74> $ , $ <nat:198> $ , and also $ <nat:416> $ are even numbers in $ \mathbb{Z}^+ $ In addition , notice that the whole number $ <nat:72> $ is known to be an even number Taking the product of an even natural number and some whole number is even . Accordingly , the expression $ <var:v> <nat:100> + <var:K> <nat:416> + <nat:149> + <nat:198> <var:Q> + <nat:68> <var:T> + <nat:134> <var:C> + <var:g> <nat:72> + <nat:172> <var:y> + <nat:74> <var:F> $ is guaranteed to be odd . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:Q> <var:C> <var:F> <var:v> <var:T> <var:y> <var:g> <var:K> : nat , Nat . odd ( <nat:134> * <var:C> + <nat:74> * <var:F> + <nat:198> * <var:Q> + <nat:416> * <var:K> + <nat:68> * <var:T> + <nat:72> * <var:g> + <nat:172> * <var:y> + <nat:100> * <var:v> + <nat:149> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:100> = true ) . { auto . } assert ( <genH> : Nat . even <nat:68> = true ) . { auto . } assert ( <genH> : Nat . even <nat:134> = true ) . { auto . } assert ( <genH> : Nat . even <nat:172> = true ) . { auto . } assert ( <genH> : Nat . even <nat:74> = true ) . { auto . } assert ( <genH> : Nat . even <nat:198> = true ) . { auto . } assert ( <genH> : Nat . even <nat:416> = true ) . { auto . } assert ( <genH> : Nat . even <nat:72> = true ) . { auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . repeat rewrite Nat . even_mul . rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 