\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Taking some positive numbers $ <var:L> $ , $ <var:m> $ , $ <var:G> $ , $ <var:o> $ , $ <var:v> $ , and $ <var:w> $ the sum $ <var:G> * <nat:280> + <var:w> * <nat:248> + <var:v> * <nat:200> + <nat:29> + <var:m> * <nat:34> + <nat:114> * <var:L> + <nat:228> * <var:o> $ will be odd . \end{theorem} \begin{proof} The formula $ <var:o> \times <nat:228> + <var:L> \times <nat:114> + <nat:280> \times <var:G> + <var:w> \times <nat:248> + <var:v> \times <nat:200> + <var:m> \times <nat:34> $ is known to be even . The product $ <var:v> <nat:200> $ is known as an even number . This claim is true from the knowledge the product between an even number and a natural number must be an even number . Additionally , the term $ <var:o> <nat:228> $ is known as even because the product of an even number and a number must be even . The products $ <nat:114> <var:L> $ and also $ <nat:248> <var:w> $ are obviously even . On top of this , the term $ <nat:280> <var:G> $ is obviously an even number in $ \mathbb{N} $ . $ <var:m> <nat:34> $ is even . This is proven by reason that multiplying of an even number with a natural number must be even . This claim is true from the fact the product between an even positive integer and some number in $ \mathbb{Z}^+ $ must be even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:L> <var:m> <var:G> <var:o> <var:v> <var:w> : nat , Nat . odd ( <nat:280> * <var:G> + <nat:248> * <var:w> + <nat:200> * <var:v> + <nat:34> * <var:m> + <nat:114> * <var:L> + <nat:228> * <var:o> + <nat:29> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:200> * <var:v> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:228> * <var:o> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:114> * <var:L> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:248> * <var:w> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:280> * <var:G> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:34> * <var:m> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:280> * <var:G> + <nat:248> * <var:w> + <nat:200> * <var:v> + <nat:34> * <var:m> + <nat:114> * <var:L> + <nat:228> * <var:o> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . auto . Qed . 