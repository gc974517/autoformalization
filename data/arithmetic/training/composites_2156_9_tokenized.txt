\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Wherever there exist natural numbers $ <var:Z> $ , $ <var:l> $ , $ <var:L> $ , $ <var:y> $ , $ <var:N> $ , $ <var:K> $ , $ <var:f> $ , $ <var:B> $ , $ <var:Y> $ then take that some number $ <var:h> $ is considered to be a <def:nine-composite> whole number assuming $ <var:f> \cdot <var:N> \cdot <var:Z> \cdot <var:K> \cdot <var:l> \cdot <var:y> \cdot <var:Y> \cdot <var:B> \cdot <var:L> = <var:h> $ plus unique terms are more than or equal to <nat:2> . For this reason the positive integer <nat:9979200> is a <def:nine-composite> natural number . \end{theorem} \begin{proof} Let $ <var:l> = <nat:8> $ , $ <var:L> = <nat:2> $ , $ <var:B> = <nat:9> $ , $ <var:Y> = <nat:11> $ , $ <var:y> = <nat:10> $ , $ <var:Z> = <nat:3> $ , $ <var:K> = <nat:7> $ , $ <var:f> = <nat:6> $ and $ <var:N> = <nat:5> $ . We verify $ <var:B> \times <var:K> \times <var:f> \times <var:L> \times <var:N> \times <var:l> \times <var:y> \times <var:Z> \times <var:Y> = <nat:9979200> $ plus $ <var:l> $ , $ <var:Z> $ , $ <var:K> $ , $ <var:y> $ , $ <var:B> $ , $ <var:L> $ , $ <var:N> $ , $ <var:f> $ and $ <var:Y> \geq <nat:2> $ . Notice that $ <nat:3> \cdot <nat:7> \cdot <nat:2> \cdot <nat:5> \cdot <nat:10> \cdot <nat:9> \cdot <nat:11> \cdot <nat:8> \cdot <nat:6> = <nat:9979200> $ . Similarly observe that $ <var:B> = <nat:9> $ , $ <var:f> = <nat:6> $ , $ <var:Z> = <nat:3> $ , $ <var:N> = <nat:5> $ , $ <var:l> = <nat:8> $ , $ <var:y> = <nat:10> $ , $ <var:L> = <nat:2> $ , $ <var:K> = <nat:7> $ , $ <var:Y> = <nat:11> $ are larger than or equivalent to <nat:2> . This gives <nat:9979200> is a <def:nine-composite> positive integer . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:nine-composite> ( <var:h> : nat ) := exists <var:Z> <var:l> <var:L> <var:y> <var:N> <var:K> <var:f> <var:B> <var:Y> : nat , ( <var:f> * <var:N> * <var:Z> * <var:K> * <var:l> * <var:y> * <var:Y> * <var:B> * <var:L> = <var:h> ) /\ ( <var:Z> >= <nat:2> ) /\ ( <var:l> >= <nat:2> ) /\ ( <var:L> >= <nat:2> ) /\ ( <var:y> >= <nat:2> ) /\ ( <var:N> >= <nat:2> ) /\ ( <var:K> >= <nat:2> ) /\ ( <var:f> >= <nat:2> ) /\ ( <var:B> >= <nat:2> ) /\ ( <var:Y> >= <nat:2> ) . Theorem <genP:1> : <def:nine-composite> <nat:9979200> . Proof . unfold <def:nine-composite> . exists <nat:3> . exists <nat:8> . exists <nat:2> . exists <nat:10> . exists <nat:5> . exists <nat:7> . exists <nat:6> . exists <nat:9> . exists <nat:11> . assert ( <genH> : <nat:9> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:6> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:3> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:5> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:8> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:10> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:2> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:7> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:11> >= <nat:2> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 