\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Assuming every positive numbers $ <var:g> $ , $ <var:E> $ , $ <var:v> $ , $ <var:t> $ , $ <var:Y> $ , $ <var:G> $ , $ <var:o> $ , and $ <var:z> $ the formula $ <nat:58> <var:z> + <nat:46> <var:G> + <nat:40> <var:E> + <nat:300> <var:o> + <var:g> <nat:472> + <nat:246> <var:Y> + <nat:174> <var:t> + <var:v> <nat:252> + <nat:31> $ must be odd . \end{theorem} \begin{proof} The summation between even whole numbers and an odd number in $ \mathbb{N} $ is guaranteed to be odd . Notice the integers $ <nat:58> $ , $ <nat:46> $ , $ <nat:40> $ , $ <nat:300> $ , $ <nat:472> $ , $ <nat:246> $ , $ <nat:174> $ , $ <nat:252> $ , must be even whole numbers . Therefore , the terms $ <var:z> * <nat:58> $ , $ <nat:46> * <var:G> $ , $ <nat:40> * <var:E> $ , $ <nat:300> * <var:o> $ , $ <nat:472> * <var:g> $ , $ <nat:246> * <var:Y> $ , $ <var:t> * <nat:174> $ , $ <nat:252> * <var:v> $ , is even additionally . We check the formula $ <nat:472> \cdot <var:g> + <nat:46> \cdot <var:G> + <nat:40> \cdot <var:E> + <nat:300> \cdot <var:o> + <nat:174> \cdot <var:t> + <var:z> \cdot <nat:58> + <nat:31> + <nat:246> \cdot <var:Y> + <var:v> \cdot <nat:252> $ must be odd . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:g> <var:E> <var:v> <var:t> <var:Y> <var:G> <var:o> <var:z> : nat , Nat . odd ( <nat:58> * <var:z> + <nat:46> * <var:G> + <nat:40> * <var:E> + <nat:300> * <var:o> + <nat:472> * <var:g> + <nat:246> * <var:Y> + <nat:174> * <var:t> + <nat:252> * <var:v> + <nat:31> ) = true . Proof . intros . rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . assert ( <genH> : Nat . even <nat:58> = true ) . { auto . } assert ( <genH> : Nat . even <nat:46> = true ) . { auto . } assert ( <genH> : Nat . even <nat:40> = true ) . { auto . } assert ( <genH> : Nat . even <nat:300> = true ) . { auto . } assert ( <genH> : Nat . even <nat:472> = true ) . { auto . } assert ( <genH> : Nat . even <nat:246> = true ) . { auto . } assert ( <genH> : Nat . even <nat:174> = true ) . { auto . } assert ( <genH> : Nat . even <nat:252> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:58> * <var:z> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:46> * <var:G> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:40> * <var:E> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:300> * <var:o> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:472> * <var:g> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:246> * <var:Y> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:174> * <var:t> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:252> * <var:v> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 