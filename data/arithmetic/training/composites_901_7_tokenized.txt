\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:213840> $ equals $ <var:c> \cdot <var:w> \cdot <var:N> \cdot <var:Q> \cdot <var:j> \cdot <var:a> \cdot <var:S> $ with $ <var:w> $ , $ <var:N> $ , $ <var:S> $ , $ <var:c> $ , $ <var:a> $ , $ <var:j> $ and $ <var:Q> $ such that $ <var:Q> $ , $ <var:S> $ , $ <var:w> $ , $ <var:c> $ , $ <var:j> $ , $ <var:N> $ , and $ <var:a> $ more than or equivalent to <nat:2> . \end{theorem} \begin{proof} Allow $ <var:j> = <nat:3> $ , $ <var:Q> = <nat:6> $ , $ <var:N> = <nat:12> $ , $ <var:c> = <nat:2> $ , $ <var:a> = <nat:9> $ , $ <var:w> = <nat:11> $ , $ <var:S> = <nat:5> $ . Notice that $ <var:c> * <var:S> * <var:Q> * <var:N> * <var:j> * <var:a> * <var:w> = <nat:213840> $ . Moreover observe $ <var:a> = <nat:9> $ , $ <var:S> = <nat:5> $ , $ <var:j> = <nat:3> $ , $ <var:N> = <nat:12> $ , $ <var:w> = <nat:11> $ , $ <var:Q> = <nat:6> $ and $ <var:c> = <nat:2> \geq <nat:2> $ . As a result , $ <var:Q> \times <var:N> \times <var:a> \times <var:w> \times <var:S> \times <var:c> \times <var:j> = <nat:213840> $ plus $ <var:N> $ , $ <var:c> $ , $ <var:w> $ , $ <var:a> $ , $ <var:j> $ , $ <var:Q> $ , and $ <var:S> \geq <nat:2> $ is proven . \end{proof} \end{document} 
~
Require Import Lia . Theorem <genP:1> : exists <var:w> <var:N> <var:S> <var:c> <var:a> <var:j> <var:Q> : nat , ( <nat:213840> = <var:c> * <var:w> * <var:N> * <var:Q> * <var:j> * <var:a> * <var:S> ) /\ ( <var:Q> >= <nat:2> ) /\ ( <var:S> >= <nat:2> ) /\ ( <var:w> >= <nat:2> ) /\ ( <var:c> >= <nat:2> ) /\ ( <var:j> >= <nat:2> ) /\ ( <var:N> >= <nat:2> ) /\ ( <var:a> >= <nat:2> ) . Proof . exists <nat:11> . exists <nat:12> . exists <nat:5> . exists <nat:2> . exists <nat:9> . exists <nat:3> . exists <nat:6> . assert ( <genH> : <nat:9> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:5> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:3> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:12> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:11> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:6> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:2> >= <nat:2> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 