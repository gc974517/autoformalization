\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:U> <nat:310> + <nat:274> <var:G> + <nat:338> <var:Q> + <nat:470> <var:t> + <var:x> <nat:302> + <var:R> <nat:304> + <nat:286> <var:o> + <var:I> <nat:494> + <nat:63> $ must be odd with all $ <var:G> $ , $ <var:x> $ , $ <var:t> $ , $ <var:I> $ , $ <var:o> $ , $ <var:R> $ , $ <var:U> $ , and $ <var:Q> \in \mathbb{N} $ . \end{theorem} \begin{proof} The expression $ <nat:286> * <var:o> + <nat:338> * <var:Q> + <var:x> * <nat:302> + <var:I> * <nat:494> + <var:t> * <nat:470> + <nat:310> * <var:U> + <nat:274> * <var:G> + <var:R> * <nat:304> $ is guaranteed to be even . The terms $ <nat:286> <var:o> $ , $ <var:R> <nat:304> $ , $ <var:x> <nat:302> $ , $ <nat:494> <var:I> $ , and also $ <var:U> <nat:310> $ are known as even natural numbers . This fact holds as a consequence that the multiplication of an even integer with some positive integer must be even . What's more , observe that the term $ <nat:338> <var:Q> $ is guaranteed to be an even whole number . Observe $ <var:t> <nat:470> $ is trivially even by reason that taking the product between an even number in $ \mathbb{N} $ with an arbitrary integer is even . Take note the pair $ <nat:274> <var:G> $ is guaranteed to be even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:G> <var:x> <var:t> <var:I> <var:o> <var:R> <var:U> <var:Q> : nat , Nat . odd ( <nat:310> * <var:U> + <nat:274> * <var:G> + <nat:338> * <var:Q> + <nat:470> * <var:t> + <nat:302> * <var:x> + <nat:304> * <var:R> + <nat:286> * <var:o> + <nat:494> * <var:I> + <nat:63> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:286> * <var:o> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:304> * <var:R> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:302> * <var:x> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:494> * <var:I> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:310> * <var:U> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:338> * <var:Q> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:470> * <var:t> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:274> * <var:G> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:310> * <var:U> + <nat:274> * <var:G> + <nat:338> * <var:Q> + <nat:470> * <var:t> + <nat:302> * <var:x> + <nat:304> * <var:R> + <nat:286> * <var:o> + <nat:494> * <var:I> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . auto . Qed . 