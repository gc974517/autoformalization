\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \newtheorem{definition}{Definition} \begin{document} \begin{definition} We say that $ <var:Y> $ is <def:seven-composite> granted that given some natural numbers $ <var:A> $ , $ <var:a> $ , $ <var:K> $ , $ <var:e> $ , $ <var:n> $ , $ <var:X> $ , $ <var:S> $ we get $ <var:S> $ , $ <var:X> $ , $ <var:n> $ , $ <var:e> $ , $ <var:A> $ , $ <var:a> $ , and $ <var:K> \geq <nat:2> $ plus with $ <var:Y> \in \mathbb{N} $ , $ <var:Y> = <var:A> \times <var:X> \times <var:K> \times <var:n> \times <var:a> \times <var:e> \times <var:S> $ . \end{definition} \begin{theorem} $ <nat:285120> = <var:Y> $ is a <def:seven-composite> natural number . \end{theorem} \begin{proof} Remember a <def:seven-composite> natural number is the multiplication of numbers $ <var:K> $ , $ <var:A> $ , $ <var:a> $ , $ <var:X> $ , $ <var:e> $ , $ <var:S> $ , $ <var:n> $ more than or equal to <nat:2> . Observe $ <nat:12> $ , $ <nat:6> $ , $ <nat:5> $ , $ <nat:11> $ , $ <nat:9> $ , $ <nat:2> $ and $ <nat:4> $ are greater than or equivalent to <nat:2> . Further notice that too $ <var:S> \times <var:e> \times <var:K> \times <var:n> \times <var:a> \times <var:A> \times <var:X> = <nat:285120> $ yields $ <var:A> = <nat:11> $ , $ <var:n> = <nat:4> $ , $ <var:K> = <nat:9> $ , $ <var:a> = <nat:6> $ , $ <var:S> = <nat:2> $ , $ <var:e> = <nat:12> $ , $ <var:X> = <nat:5> $ . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:seven-composite> ( <var:Y> : nat ) := exists <var:A> <var:a> <var:K> <var:e> <var:n> <var:X> <var:S> : nat , ( <var:S> >= <nat:2> ) /\ ( <var:X> >= <nat:2> ) /\ ( <var:n> >= <nat:2> ) /\ ( <var:e> >= <nat:2> ) /\ ( <var:A> >= <nat:2> ) /\ ( <var:a> >= <nat:2> ) /\ ( <var:K> >= <nat:2> ) /\ ( <var:Y> = <var:A> * <var:X> * <var:K> * <var:n> * <var:a> * <var:e> * <var:S> ) . Theorem <genP:1> : <def:seven-composite> <nat:285120> . Proof . unfold <def:seven-composite> . assert ( <genH> : <nat:12> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:6> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:5> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:11> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:9> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:2> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:4> >= <nat:2> ) . { lia . } exists <nat:11> . exists <nat:6> . exists <nat:9> . exists <nat:12> . exists <nat:4> . exists <nat:5> . exists <nat:2> . repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 