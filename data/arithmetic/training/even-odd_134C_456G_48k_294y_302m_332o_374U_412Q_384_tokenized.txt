\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Taking all natural numbers $ <var:y> $ , $ <var:o> $ , $ <var:G> $ , $ <var:U> $ , $ <var:C> $ , $ <var:m> $ , $ <var:k> $ , and $ <var:Q> $ $ <var:C> \times <nat:134> + <nat:456> \times <var:G> + <var:y> \times <nat:294> + <nat:412> \times <var:Q> + <var:k> \times <nat:48> + <nat:302> \times <var:m> + <nat:332> \times <var:o> + <nat:374> \times <var:U> + <nat:384> $ is guaranteed to be even . \end{theorem} \begin{proof} We employ that the summation $ <nat:134> * <var:C> + <var:G> * <nat:456> + <var:k> * <nat:48> + <nat:294> * <var:y> + <var:m> * <nat:302> + <var:o> * <nat:332> + <nat:374> * <var:U> + <var:Q> * <nat:412> $ is guaranteed to be even . Observe the products $ <var:C> \times <nat:134> $ , $ <nat:456> \times <var:G> $ , $ <nat:48> \times <var:k> $ , $ <nat:294> \times <var:y> $ , $ <nat:302> \times <var:m> $ , $ <var:o> \times <nat:332> $ , $ <var:U> \times <nat:374> $ , $ <nat:412> \times <var:Q> $ , must be even natural numbers . This fact is true since taking the product between an even natural number and a positive integer must be even . This claim must be true from the knowledge the positive integers $ <nat:134> $ , $ <nat:456> $ , $ <nat:48> $ , $ <nat:294> $ , $ <nat:302> $ , $ <nat:332> $ , $ <nat:374> $ , $ <nat:412> $ , must be by themselves even positive integers . The lemma holds by reason that the totaling between an even positive integer with an even natural will be by its very nature an even number and likewise as a consequence that the product between an even natural with some element of $ \mathbb{N} $ must be an even element of $ \mathbb{Z}^+ $ . Remember $ <nat:384> $ is even . The summing between an even natural number and an even integer is even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:y> <var:o> <var:G> <var:U> <var:C> <var:m> <var:k> <var:Q> : nat , Nat . even ( <nat:134> * <var:C> + <nat:456> * <var:G> + <nat:294> * <var:y> + <nat:412> * <var:Q> + <nat:48> * <var:k> + <nat:302> * <var:m> + <nat:332> * <var:o> + <nat:374> * <var:U> + <nat:384> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:134> = true ) . { auto . } assert ( <genH> : Nat . even <nat:456> = true ) . { auto . } assert ( <genH> : Nat . even <nat:48> = true ) . { auto . } assert ( <genH> : Nat . even <nat:294> = true ) . { auto . } assert ( <genH> : Nat . even <nat:302> = true ) . { auto . } assert ( <genH> : Nat . even <nat:332> = true ) . { auto . } assert ( <genH> : Nat . even <nat:374> = true ) . { auto . } assert ( <genH> : Nat . even <nat:412> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:134> * <var:C> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:456> * <var:G> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:48> * <var:k> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:294> * <var:y> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:302> * <var:m> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:332> * <var:o> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:374> * <var:U> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:412> * <var:Q> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:134> * <var:C> + <nat:456> * <var:G> + <nat:294> * <var:y> + <nat:412> * <var:Q> + <nat:48> * <var:k> + <nat:302> * <var:m> + <nat:332> * <var:o> + <nat:374> * <var:U> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:384> = true ) . { auto . } rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . auto . Qed . 