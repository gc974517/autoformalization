\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} We assume that whenever there are natural numbers $ <var:i> $ , $ <var:j> $ , $ <var:O> $ , $ <var:w> $ , $ <var:g> $ , $ <var:V> $ , $ <var:c> $ then say that $ <var:E> \in \mathbb{Z}^+ $ will be a <def:seven-composite> positive integer assuming $ <var:E> = <var:w> \cdot <var:j> \cdot <var:c> \cdot <var:g> \cdot <var:O> \cdot <var:V> \cdot <var:i> $ and such that $ <var:w> $ , $ <var:c> $ , $ <var:g> $ , $ <var:O> $ , $ <var:i> $ , $ <var:V> $ , and $ <var:j> > <nat:1> $ . Therefore the natural number <nat:554400> is a <def:seven-composite> natural number . \end{theorem} \begin{proof} Take $ <var:c> = <nat:10> $ , $ <var:g> = <nat:8> $ , $ <var:w> = <nat:7> $ , $ <var:i> = <nat:5> $ , $ <var:j> = <nat:2> $ , $ <var:V> = <nat:11> $ and $ <var:O> = <nat:9> $ . We prove <nat:554400> is a <def:seven-composite> number on account of $ <var:i> = <nat:5> $ , $ <var:c> = <nat:10> $ , $ <var:w> = <nat:7> $ , $ <var:j> = <nat:2> $ , $ <var:O> = <nat:9> $ , $ <var:g> = <nat:8> $ , $ <var:V> = <nat:11> > <nat:1> $ . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:seven-composite> ( <var:E> : nat ) := exists <var:i> <var:j> <var:O> <var:w> <var:g> <var:V> <var:c> : nat , ( <var:E> = <var:w> * <var:j> * <var:c> * <var:g> * <var:O> * <var:V> * <var:i> ) /\ ( <var:w> > <nat:1> ) /\ ( <var:c> > <nat:1> ) /\ ( <var:g> > <nat:1> ) /\ ( <var:O> > <nat:1> ) /\ ( <var:i> > <nat:1> ) /\ ( <var:V> > <nat:1> ) /\ ( <var:j> > <nat:1> ) . Theorem <genP:1> : <def:seven-composite> <nat:554400> . Proof . unfold <def:seven-composite> . exists <nat:5> . exists <nat:2> . exists <nat:9> . exists <nat:7> . exists <nat:8> . exists <nat:11> . exists <nat:10> . assert ( <genH> : <nat:5> > <nat:1> ) . { lia . } assert ( <genH> : <nat:10> > <nat:1> ) . { lia . } assert ( <genH> : <nat:7> > <nat:1> ) . { lia . } assert ( <genH> : <nat:2> > <nat:1> ) . { lia . } assert ( <genH> : <nat:9> > <nat:1> ) . { lia . } assert ( <genH> : <nat:8> > <nat:1> ) . { lia . } assert ( <genH> : <nat:11> > <nat:1> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 