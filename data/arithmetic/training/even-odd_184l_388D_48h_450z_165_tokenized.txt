\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:l> * <nat:184> + <nat:165> + <var:z> * <nat:450> + <nat:388> * <var:D> + <nat:48> * <var:h> $ is guaranteed to be odd . \end{theorem} \begin{proof} Take note that $ <nat:165> $ is odd . It can be shown that this main result holds . We employ the fact the formula $ <var:l> \times <nat:184> + <var:D> \times <nat:388> + <var:h> \times <nat:48> + <var:z> \times <nat:450> $ is guaranteed to be even , as a consequence that the totaling of an even natural with an even whole number is even . See that the terms $ <var:h> * <nat:48> $ and moreover $ <nat:450> * <var:z> $ are guaranteed to be even elements of $ \mathbb{Z}^+ $ . This is proven as a consequence that multiplying between an even element of $ \mathbb{N} $ with a number is an even number in $ \mathbb{N} $ . What's more , the term $ <nat:388> * <var:D> $ is trivially even as a consequence that taking the product between an even whole number with an arbitrary number in $ \mathbb{Z}^+ $ will be trivially an even number in $ \mathbb{Z}^+ $ . Observe that the term $ <nat:184> * <var:l> $ is trivially an even number in $ \mathbb{Z}^+ $ . and moreover by reason that the multiplication of an even natural with any number in $ \mathbb{N} $ will be an even natural number our main result holds . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:l> <var:z> <var:D> <var:h> : nat , Nat . odd ( <nat:184> * <var:l> + <nat:450> * <var:z> + <nat:388> * <var:D> + <nat:48> * <var:h> + <nat:165> ) = true . Proof . intros . assert ( <genH> : Nat . odd <nat:165> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:48> * <var:h> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:450> * <var:z> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:388> * <var:D> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:184> * <var:l> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:184> * <var:l> + <nat:450> * <var:z> + <nat:388> * <var:D> + <nat:48> * <var:h> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . rewrite <genH> . auto . Qed . 