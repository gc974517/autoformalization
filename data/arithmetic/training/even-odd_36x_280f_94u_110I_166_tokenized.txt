\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Assuming any $ <var:I> $ , $ <var:u> $ , $ <var:x> $ , and $ <var:f> $ $ <var:f> * <nat:280> + <nat:166> + <var:u> * <nat:94> + <nat:36> * <var:x> + <var:I> * <nat:110> $ will be even . \end{theorem} \begin{proof} We apply the fact $ <nat:280> \times <var:f> + <nat:166> + <var:x> \times <nat:36> + <nat:110> \times <var:I> + <var:u> \times <nat:94> $ is guaranteed to be even from the fact the expression $ <nat:280> \times <var:f> + <var:u> \times <nat:94> + <nat:36> \times <var:x> + <nat:110> \times <var:I> $ is trivially even . Take note that the numbers $ <nat:36> $ , $ <nat:94> $ , in addition to $ <nat:110> $ will be even integers . As a consequence , the terms $ <nat:36> * <var:x> $ , $ <nat:94> * <var:u> $ , in addition to $ <var:I> * <nat:110> $ must be even too . Additionally , the natural number $ <nat:280> $ is known to be an even number . For this reason , $ <var:f> * <nat:280> $ must be even in addition . By reason that multiplying between an even number in $ \mathbb{Z}^+ $ and an arbitrary positive integer must be by definition an even positive integer the result must be true . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:I> <var:u> <var:x> <var:f> : nat , Nat . even ( <nat:280> * <var:f> + <nat:94> * <var:u> + <nat:36> * <var:x> + <nat:110> * <var:I> + <nat:166> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:36> = true ) . { auto . } assert ( <genH> : Nat . even <nat:94> = true ) . { auto . } assert ( <genH> : Nat . even <nat:110> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:36> * <var:x> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:94> * <var:u> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:110> * <var:I> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:280> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:280> * <var:f> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:280> * <var:f> + <nat:94> * <var:u> + <nat:36> * <var:x> + <nat:110> * <var:I> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . even_add . rewrite <genH> . auto . Qed . 