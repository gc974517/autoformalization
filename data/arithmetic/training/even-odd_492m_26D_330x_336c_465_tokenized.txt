\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:26> <var:D> + <nat:465> + <nat:336> <var:c> + <var:x> <nat:330> + <nat:492> <var:m> $ is odd . \end{theorem} \begin{proof} We employ that $ <var:c> * <nat:336> + <nat:465> + <var:x> * <nat:330> + <var:D> * <nat:26> + <var:m> * <nat:492> $ is known to be odd because $ <var:c> * <nat:336> + <nat:26> * <var:D> + <var:m> * <nat:492> + <var:x> * <nat:330> $ is known as even . Recall that the terms $ <nat:26> * <var:D> $ , $ <var:m> * <nat:492> $ , additionally $ <nat:336> * <var:c> $ are obviously even since the multiplication between an even natural number with an arbitrary natural will be an even integer . The pair $ <nat:330> * <var:x> $ is known as an even natural . This is true as a consequence that multiplying between an even integer with any number in $ \mathbb{N} $ must be even . The summation $ <nat:492> * <var:m> + <nat:26> * <var:D> + <var:x> * <nat:330> + <nat:336> * <var:c> $ is by definition even since the product of even elements of $ \mathbb{Z}^+ $ with an arbitrary natural number is guaranteed to be an even element of $ \mathbb{N} $ . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:D> <var:c> <var:x> <var:m> : nat , Nat . odd ( <nat:26> * <var:D> + <nat:336> * <var:c> + <nat:330> * <var:x> + <nat:492> * <var:m> + <nat:465> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:26> * <var:D> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:492> * <var:m> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:336> * <var:c> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:330> * <var:x> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:26> * <var:D> + <nat:336> * <var:c> + <nat:330> * <var:x> + <nat:492> * <var:m> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . auto . Qed . 