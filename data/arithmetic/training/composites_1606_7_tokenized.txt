\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} When there exist $ <var:L> $ , $ <var:C> $ , $ <var:c> $ , $ <var:o> $ , $ <var:R> $ , $ <var:U> $ , $ <var:H> $ then say that $ <var:e> \in \mathbb{Z}^+ $ is called <def:seven-composite> given $ <var:L> * <var:R> * <var:H> * <var:C> * <var:U> * <var:c> * <var:o> = <var:e> $ plus such that $ <var:c> $ , $ <var:o> $ , $ <var:L> $ , $ <var:U> $ , $ <var:H> $ , $ <var:R> $ , $ <var:C> \geq <nat:2> $ . Accordingly the natural number <nat:2217600> is <def:seven-composite> . \end{theorem} \begin{proof} We prove <nat:2217600> is the multiplication between some positive integers $ <var:R> $ , $ <var:c> $ , $ <var:H> $ , $ <var:U> $ , $ <var:o> $ , $ <var:L> $ , and $ <var:C> $ . Notice $ <nat:6> * <nat:5> * <nat:11> * <nat:8> * <nat:12> * <nat:7> * <nat:10> = <var:c> * <var:R> * <var:U> * <var:H> * <var:L> * <var:C> * <var:o> = <nat:2217600> $ . Similarly notice that $ <nat:11> $ , $ <nat:8> $ , $ <nat:12> $ , $ <nat:7> $ , $ <nat:10> $ , $ <nat:6> $ , $ <nat:5> \geq <nat:2> $ . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:seven-composite> ( <var:e> : nat ) := exists <var:L> <var:C> <var:c> <var:o> <var:R> <var:U> <var:H> : nat , ( <var:L> * <var:R> * <var:H> * <var:C> * <var:U> * <var:c> * <var:o> = <var:e> ) /\ ( <var:c> >= <nat:2> ) /\ ( <var:o> >= <nat:2> ) /\ ( <var:L> >= <nat:2> ) /\ ( <var:U> >= <nat:2> ) /\ ( <var:H> >= <nat:2> ) /\ ( <var:R> >= <nat:2> ) /\ ( <var:C> >= <nat:2> ) . Theorem <genP:1> : <def:seven-composite> <nat:2217600> . Proof . unfold <def:seven-composite> . exists <nat:12> . exists <nat:7> . exists <nat:6> . exists <nat:10> . exists <nat:5> . exists <nat:11> . exists <nat:8> . assert ( <genH> : <nat:11> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:8> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:12> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:7> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:10> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:6> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:5> >= <nat:2> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 