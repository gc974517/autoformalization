\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Using any $ <var:B> $ , $ <var:n> $ , $ <var:v> $ , $ <var:P> $ , $ <var:w> $ , and $ <var:Y> \in \mathbb{Z}^+ $ the formula $ <nat:41> + <var:Y> \cdot <nat:166> + <var:B> \cdot <nat:222> + <nat:110> \cdot <var:P> + <nat:170> \cdot <var:n> + <var:w> \cdot <nat:242> + <var:v> \cdot <nat:440> $ must be odd . \end{theorem} \begin{proof} It can be checked that $ <var:v> \cdot <nat:440> + <nat:222> \cdot <var:B> + <nat:166> \cdot <var:Y> + <nat:110> \cdot <var:P> + <nat:41> + <nat:242> \cdot <var:w> + <nat:170> \cdot <var:n> $ is odd . Observe the products $ <nat:110> \times <var:P> $ , $ <var:n> \times <nat:170> $ , $ <var:B> \times <nat:222> $ , $ <var:v> \times <nat:440> $ , and $ <nat:166> \times <var:Y> $ will be even numbers in $ \mathbb{Z}^+ $ by reason that taking the product between an even positive integer and an arbitrary natural is guaranteed to be even . Building on , $ <nat:242> \times <var:w> $ is clearly an even element of $ \mathbb{Z}^+ $ by reason that multiplying between an even whole number with some natural will be even . The adding between an even natural with an odd natural number is an odd number in $ \mathbb{N} $ . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:B> <var:n> <var:v> <var:P> <var:w> <var:Y> : nat , Nat . odd ( <nat:166> * <var:Y> + <nat:222> * <var:B> + <nat:110> * <var:P> + <nat:170> * <var:n> + <nat:242> * <var:w> + <nat:440> * <var:v> + <nat:41> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:110> * <var:P> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:170> * <var:n> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:222> * <var:B> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:440> * <var:v> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:166> * <var:Y> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:242> * <var:w> ) = true ) . { rewrite Nat . even_mul . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 