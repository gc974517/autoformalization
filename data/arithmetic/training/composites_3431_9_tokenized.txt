\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:o> \times <var:B> \times <var:I> \times <var:U> \times <var:K> \times <var:T> \times <var:P> \times <var:O> \times <var:N> $ is the same as $ <nat:39916800> $ for $ <var:K> $ , $ <var:O> $ , $ <var:U> $ , $ <var:B> $ , $ <var:I> $ , $ <var:N> $ , $ <var:T> $ , $ <var:o> $ and $ <var:P> \in \mathbb{Z}^+ $ so that $ <var:B> $ , $ <var:O> $ , $ <var:K> $ , $ <var:P> $ , $ <var:N> $ , $ <var:o> $ , $ <var:U> $ , $ <var:T> $ and $ <var:I> $ greater than or equal to <nat:2> . \end{theorem} \begin{proof} Allow $ <var:I> = <nat:5> $ , $ <var:T> = <nat:6> $ , $ <var:N> = <nat:2> $ , $ <var:U> = <nat:11> $ , $ <var:o> = <nat:10> $ , $ <var:P> = <nat:9> $ , $ <var:K> = <nat:8> $ , $ <var:O> = <nat:7> $ and $ <var:B> = <nat:12> $ . We verify our result holds because $ <var:O> = <nat:7> $ , $ <var:P> = <nat:9> $ , $ <var:B> = <nat:12> $ , $ <var:I> = <nat:5> $ , $ <var:N> = <nat:2> $ , $ <var:K> = <nat:8> $ , $ <var:o> = <nat:10> $ , $ <var:U> = <nat:11> $ and $ <var:T> = <nat:6> $ are greater than or equal to <nat:2> as well as as $ <var:B> * <var:P> * <var:o> * <var:U> * <var:I> * <var:O> * <var:N> * <var:K> * <var:T> = <nat:39916800> $ . \end{proof} \end{document} 
~
Require Import Lia . Theorem <genP:1> : exists <var:K> <var:O> <var:U> <var:B> <var:I> <var:N> <var:T> <var:o> <var:P> : nat , ( <var:o> * <var:B> * <var:I> * <var:U> * <var:K> * <var:T> * <var:P> * <var:O> * <var:N> = <nat:39916800> ) /\ ( <var:B> >= <nat:2> ) /\ ( <var:O> >= <nat:2> ) /\ ( <var:K> >= <nat:2> ) /\ ( <var:P> >= <nat:2> ) /\ ( <var:N> >= <nat:2> ) /\ ( <var:o> >= <nat:2> ) /\ ( <var:U> >= <nat:2> ) /\ ( <var:T> >= <nat:2> ) /\ ( <var:I> >= <nat:2> ) . Proof . exists <nat:8> . exists <nat:7> . exists <nat:11> . exists <nat:12> . exists <nat:5> . exists <nat:2> . exists <nat:6> . exists <nat:10> . exists <nat:9> . assert ( <genH> : <nat:7> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:9> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:12> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:5> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:2> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:8> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:10> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:11> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:6> >= <nat:2> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 