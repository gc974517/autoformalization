\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Let $ <var:D> $ , $ <var:y> $ , $ <var:v> $ , $ <var:l> $ , $ <var:g> $ , $ <var:o> $ , $ <var:j> $ , $ <var:B> $ and $ <var:L> $ be whole numbers so that $ <var:l> $ , $ <var:y> $ , $ <var:g> $ , $ <var:j> $ , $ <var:o> $ , $ <var:v> $ , $ <var:L> $ , $ <var:B> $ , and $ <var:D> > <nat:1> $ and so that $ <nat:7983360> $ is $ <var:j> \times <var:o> \times <var:l> \times <var:y> \times <var:L> \times <var:g> \times <var:B> \times <var:v> \times <var:D> $ . \end{theorem} \begin{proof} Note that $ <nat:7983360> = <nat:6> * <nat:11> * <nat:2> * <nat:4> * <nat:9> * <nat:8> * <nat:3> * <nat:7> * <nat:10> $ . What's more notice $ <nat:11> $ , $ <nat:2> $ , $ <nat:4> $ , $ <nat:7> $ , $ <nat:3> $ , $ <nat:8> $ , $ <nat:6> $ , $ <nat:10> $ , and $ <nat:9> > <nat:1> $ . This suggests the proposition is true . \end{proof} \end{document} 
~
Require Import Lia . Theorem <genP:1> : exists <var:D> <var:y> <var:v> <var:l> <var:g> <var:o> <var:j> <var:B> <var:L> : nat , ( <var:l> > <nat:1> ) /\ ( <var:y> > <nat:1> ) /\ ( <var:g> > <nat:1> ) /\ ( <var:j> > <nat:1> ) /\ ( <var:o> > <nat:1> ) /\ ( <var:v> > <nat:1> ) /\ ( <var:L> > <nat:1> ) /\ ( <var:B> > <nat:1> ) /\ ( <var:D> > <nat:1> ) /\ ( <nat:7983360> = <var:j> * <var:o> * <var:l> * <var:y> * <var:L> * <var:g> * <var:B> * <var:v> * <var:D> ) . Proof . exists <nat:2> . exists <nat:8> . exists <nat:11> . exists <nat:7> . exists <nat:10> . exists <nat:3> . exists <nat:6> . exists <nat:4> . exists <nat:9> . assert ( <genH> : <nat:11> > <nat:1> ) . { lia . } assert ( <genH> : <nat:2> > <nat:1> ) . { lia . } assert ( <genH> : <nat:4> > <nat:1> ) . { lia . } assert ( <genH> : <nat:7> > <nat:1> ) . { lia . } assert ( <genH> : <nat:3> > <nat:1> ) . { lia . } assert ( <genH> : <nat:8> > <nat:1> ) . { lia . } assert ( <genH> : <nat:6> > <nat:1> ) . { lia . } assert ( <genH> : <nat:10> > <nat:1> ) . { lia . } assert ( <genH> : <nat:9> > <nat:1> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 