\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:N> * <nat:28> + <nat:304> * <var:B> + <nat:462> * <var:r> + <var:M> * <nat:426> + <var:G> * <nat:168> + <nat:332> * <var:V> + <nat:203> + <var:X> * <nat:342> + <var:z> * <nat:488> $ is odd . \end{theorem} \begin{proof} This theorem holds by reason that $ <var:M> <nat:426> + <nat:462> <var:r> + <var:z> <nat:488> + <var:X> <nat:342> + <nat:304> <var:B> + <var:V> <nat:332> + <var:N> <nat:28> + <nat:168> <var:G> $ is guaranteed to be even . The pairs $ <nat:426> \times <var:M> $ , $ <var:X> \times <nat:342> $ , $ <nat:168> \times <var:G> $ , $ <var:N> \times <nat:28> $ , and likewise $ <var:V> \times <nat:332> $ are clearly even elements of $ \mathbb{N} $ from the fact the integers $ <nat:426> $ , $ <nat:342> $ , $ <nat:168> $ , $ <nat:28> $ , and moreover $ <nat:332> $ will be even . Building on , observe that the natural numbers $ <nat:462> $ plus $ <nat:488> $ are trivially even . Therefore , the products $ <nat:462> \times <var:r> $ as well as $ <var:z> \times <nat:488> $ is guaranteed to be even in addition . The leading term $ <nat:304> $ is even . For this reason , the term $ <var:B> \times <nat:304> $ must be even as well . Remember that $ <nat:203> $ is guaranteed to be an odd number . It can be shown that $ <nat:203> + <nat:332> * <var:V> + <var:M> * <nat:426> + <var:G> * <nat:168> + <var:N> * <nat:28> + <nat:304> * <var:B> + <nat:342> * <var:X> + <var:r> * <nat:462> + <nat:488> * <var:z> $ must be odd . We know that the summing between even whole numbers collectively and an odd positive integer will be an odd number in $ \mathbb{Z}^+ $ . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:N> <var:B> <var:r> <var:M> <var:G> <var:V> <var:X> <var:z> : nat , Nat . odd ( <nat:28> * <var:N> + <nat:304> * <var:B> + <nat:462> * <var:r> + <nat:426> * <var:M> + <nat:168> * <var:G> + <nat:332> * <var:V> + <nat:342> * <var:X> + <nat:488> * <var:z> + <nat:203> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:426> = true ) . { auto . } assert ( <genH> : Nat . even <nat:342> = true ) . { auto . } assert ( <genH> : Nat . even <nat:168> = true ) . { auto . } assert ( <genH> : Nat . even <nat:28> = true ) . { auto . } assert ( <genH> : Nat . even <nat:332> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:426> * <var:M> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:342> * <var:X> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:168> * <var:G> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:28> * <var:N> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:332> * <var:V> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:462> = true ) . { auto . } assert ( <genH> : Nat . even <nat:488> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:462> * <var:r> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:488> * <var:z> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:304> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:304> * <var:B> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:28> * <var:N> + <nat:304> * <var:B> + <nat:462> * <var:r> + <nat:426> * <var:M> + <nat:168> * <var:G> + <nat:332> * <var:V> + <nat:342> * <var:X> + <nat:488> * <var:z> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } assert ( <genH> : Nat . odd <nat:203> = true ) . { auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . rewrite <genH> . auto . Qed . 