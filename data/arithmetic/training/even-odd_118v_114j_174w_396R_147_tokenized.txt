\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:147> + <var:w> \times <nat:174> + <var:R> \times <nat:396> + <nat:114> \times <var:j> + <var:v> \times <nat:118> $ is guaranteed to be odd . \end{theorem} \begin{proof} Observe $ <nat:147> $ is guaranteed to be odd . From the fact the totaling of even numbers in $ \mathbb{Z}^+ $ and an odd element of $ \mathbb{N} $ must be an odd element of $ \mathbb{N} $ , as a result the expression $ <nat:174> \times <var:w> + <var:j> \times <nat:114> + <var:R> \times <nat:396> + <var:v> \times <nat:118> + <nat:147> $ in itself will be odd . See the terms $ <nat:118> <var:v> $ , $ <nat:396> <var:R> $ , as well as $ <nat:114> <var:j> $ are known to be even . This must be true by reason that the product between an even element of $ \mathbb{Z}^+ $ with an arbitrary number in $ \mathbb{N} $ must be even , and holds because the coefficients $ <nat:118> $ , $ <nat:396> $ , as well as $ <nat:114> $ must be even . In addition , remember that the leading term $ <nat:174> $ is trivially even . For this reason , the product $ <nat:174> <var:w> $ is even as well . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:w> <var:R> <var:j> <var:v> : nat , Nat . odd ( <nat:174> * <var:w> + <nat:396> * <var:R> + <nat:114> * <var:j> + <nat:118> * <var:v> + <nat:147> ) = true . Proof . intros . assert ( <genH> : Nat . odd <nat:147> = true ) . { auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . assert ( <genH> : Nat . even <nat:118> = true ) . { auto . } assert ( <genH> : Nat . even <nat:396> = true ) . { auto . } assert ( <genH> : Nat . even <nat:114> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:118> * <var:v> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:396> * <var:R> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:114> * <var:j> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:174> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:174> * <var:w> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 