\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Given some $ <var:J> $ , $ <var:v> $ , $ <var:i> $ , $ <var:L> $ , $ <var:t> $ , $ <var:P> $ , $ <var:l> $ , and $ <var:T> $ the formula $ <nat:324> <var:J> + <nat:460> <var:v> + <nat:114> <var:t> + <nat:476> <var:i> + <var:l> <nat:416> + <var:T> <nat:472> + <nat:25> + <nat:420> <var:L> + <nat:382> <var:P> $ is guaranteed to be odd . \end{theorem} \begin{proof} By reason that the addition between an even number in $ \mathbb{Z}^+ $ with an odd element of $ \mathbb{Z}^+ $ must be odd , as a result the lemma must be true . It can be shown that that $ <nat:476> * <var:i> + <nat:324> * <var:J> + <var:l> * <nat:416> + <nat:382> * <var:P> + <var:t> * <nat:114> + <var:v> * <nat:460> + <var:T> * <nat:472> + <nat:420> * <var:L> $ is guaranteed to be even . The terms $ <nat:476> <var:i> $ , $ <var:L> <nat:420> $ , $ <nat:416> <var:l> $ , $ <nat:472> <var:T> $ , as well as $ <nat:382> <var:P> $ are guaranteed to be even . Likewise , the products $ <var:J> <nat:324> $ and likewise $ <var:t> <nat:114> $ are guaranteed to be even integers . This fact is proven by reason that the product of an even number in $ \mathbb{N} $ with a element of $ \mathbb{Z}^+ $ is guaranteed to be in itself an even integer . Furthermore , notice that the product $ <var:v> <nat:460> $ is obviously even . Since the addition between even positive integers with even numbers in $ \mathbb{Z}^+ $ must be even , additionally as a consequence that multiplying between an even positive integer with a natural is even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:J> <var:v> <var:i> <var:L> <var:t> <var:P> <var:l> <var:T> : nat , Nat . odd ( <nat:324> * <var:J> + <nat:460> * <var:v> + <nat:114> * <var:t> + <nat:476> * <var:i> + <nat:416> * <var:l> + <nat:472> * <var:T> + <nat:420> * <var:L> + <nat:382> * <var:P> + <nat:25> ) = true . Proof . intros . rewrite Nat . odd_add . assert ( <genH> : Nat . even ( <nat:476> * <var:i> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:420> * <var:L> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:416> * <var:l> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:472> * <var:T> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:382> * <var:P> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:324> * <var:J> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:114> * <var:t> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:460> * <var:v> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:324> * <var:J> + <nat:460> * <var:v> + <nat:114> * <var:t> + <nat:476> * <var:i> + <nat:416> * <var:l> + <nat:472> * <var:T> + <nat:420> * <var:L> + <nat:382> * <var:P> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite <- Nat . negb_even . rewrite <genH> . auto . Qed . 