\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Claim that $ <var:h> $ is a <def:nine-composite> integer under the condition assuming some natural numbers $ <var:m> $ , $ <var:t> $ , $ <var:K> $ , $ <var:G> $ , $ <var:H> $ , $ <var:O> $ , $ <var:x> $ , $ <var:p> $ , $ <var:Z> $ we get $ <var:G> * <var:K> * <var:H> * <var:O> * <var:p> * <var:m> * <var:x> * <var:Z> * <var:t> = <var:h> $ with $ <var:h> \in \mathbb{N} $ plus satisfying the condition that $ <var:m> $ , $ <var:Z> $ , $ <var:O> $ , $ <var:x> $ , $ <var:K> $ , $ <var:t> $ , $ <var:G> $ , $ <var:p> $ , and $ <var:H> \geq <nat:2> $ . So $ <nat:17107200> = <var:h> $ is a <def:nine-composite> positive integer . \end{theorem} \begin{proof} Remember <nat:17107200> is a <def:nine-composite> integer under the condition that <nat:17107200> is the multiplication of $ <var:m> $ , $ <var:Z> $ , $ <var:t> $ , $ <var:x> $ , $ <var:G> $ , $ <var:p> $ , $ <var:O> $ , $ <var:H> $ , and $ <var:K> $ larger than or equivalent to <nat:2> . Allow $ <var:G> = <nat:2> $ , $ <var:p> = <nat:9> $ , $ <var:H> = <nat:12> $ , $ <var:O> = <nat:3> $ , $ <var:m> = <nat:8> $ , $ <var:t> = <nat:10> $ , $ <var:x> = <nat:5> $ , $ <var:K> = <nat:11> $ and $ <var:Z> = <nat:6> $ . Notice that $ <nat:5> $ , $ <nat:12> $ , $ <nat:11> $ , $ <nat:8> $ , $ <nat:10> $ , $ <nat:3> $ , $ <nat:6> $ , $ <nat:2> $ , $ <nat:9> $ are more than or equivalent to <nat:2> . This indicates <nat:17107200> is a <def:nine-composite> positive integer . As a result , <nat:17107200> is a <def:nine-composite> number has been verified . Thus , <nat:17107200> is the multiplication of $ <var:O> $ , $ <var:Z> $ , $ <var:x> $ , $ <var:G> $ , $ <var:H> $ , $ <var:p> $ , $ <var:K> $ , $ <var:t> $ , and $ <var:m> \in \mathbb{N} $ is validated . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:nine-composite> ( <var:h> : nat ) := exists <var:m> <var:t> <var:K> <var:G> <var:H> <var:O> <var:x> <var:p> <var:Z> : nat , ( <var:G> * <var:K> * <var:H> * <var:O> * <var:p> * <var:m> * <var:x> * <var:Z> * <var:t> = <var:h> ) /\ ( <var:m> >= <nat:2> ) /\ ( <var:Z> >= <nat:2> ) /\ ( <var:O> >= <nat:2> ) /\ ( <var:x> >= <nat:2> ) /\ ( <var:K> >= <nat:2> ) /\ ( <var:t> >= <nat:2> ) /\ ( <var:G> >= <nat:2> ) /\ ( <var:p> >= <nat:2> ) /\ ( <var:H> >= <nat:2> ) . Theorem <genP:1> : <def:nine-composite> <nat:17107200> . Proof . unfold <def:nine-composite> . exists <nat:8> . exists <nat:10> . exists <nat:11> . exists <nat:2> . exists <nat:12> . exists <nat:3> . exists <nat:5> . exists <nat:9> . exists <nat:6> . assert ( <genH> : <nat:5> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:12> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:11> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:8> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:10> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:3> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:6> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:2> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:9> >= <nat:2> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 