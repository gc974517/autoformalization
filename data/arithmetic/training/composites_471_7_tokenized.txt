\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Let that only if $ \exists <var:i> $ , $ <var:g> $ , $ <var:b> $ , $ <var:p> $ , $ <var:u> $ , $ <var:D> $ , $ <var:J> \in \mathbb{N} $ then denote that some number $ <var:U> $ will be named a <def:seven-composite> natural number given $ <var:U> = <var:J> \cdot <var:D> \cdot <var:i> \cdot <var:g> \cdot <var:p> \cdot <var:u> \cdot <var:b> $ as well as terms are more than or equivalent to <nat:2> . Consequently $ <nat:316800> = <var:U> $ is a <def:seven-composite> natural number . \end{theorem} \begin{proof} Recall that a <def:seven-composite> is the multiplication of natural numbers $ <var:J> $ , $ <var:g> $ , $ <var:i> $ , $ <var:b> $ , $ <var:p> $ , $ <var:D> $ and $ <var:u> $ so that $ <var:J> $ , $ <var:D> $ , $ <var:p> $ , $ <var:g> $ , $ <var:i> $ , $ <var:u> $ and $ <var:b> \geq <nat:2> $ . Let $ <var:u> = <nat:9> $ , $ <var:i> = <nat:11> $ , $ <var:J> = <nat:8> $ , $ <var:D> = <nat:10> $ , $ <var:g> = <nat:2> $ , $ <var:b> = <nat:5> $ , and $ <var:p> = <nat:4> $ . Notice $ <var:J> = <nat:8> $ , $ <var:b> = <nat:5> $ , $ <var:D> = <nat:10> $ , $ <var:i> = <nat:11> $ , $ <var:g> = <nat:2> $ , $ <var:u> = <nat:9> $ , $ <var:p> = <nat:4> \geq <nat:2> $ . This produces our claim is true . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:seven-composite> ( <var:U> : nat ) := exists <var:i> <var:g> <var:b> <var:p> <var:u> <var:D> <var:J> : nat , ( <var:U> = <var:J> * <var:D> * <var:i> * <var:g> * <var:p> * <var:u> * <var:b> ) /\ ( <var:i> >= <nat:2> ) /\ ( <var:g> >= <nat:2> ) /\ ( <var:b> >= <nat:2> ) /\ ( <var:p> >= <nat:2> ) /\ ( <var:u> >= <nat:2> ) /\ ( <var:D> >= <nat:2> ) /\ ( <var:J> >= <nat:2> ) . Theorem <genP:1> : <def:seven-composite> <nat:316800> . Proof . unfold <def:seven-composite> . exists <nat:11> . exists <nat:2> . exists <nat:5> . exists <nat:4> . exists <nat:9> . exists <nat:10> . exists <nat:8> . assert ( <genH> : <nat:8> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:5> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:10> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:11> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:2> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:9> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:4> >= <nat:2> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 