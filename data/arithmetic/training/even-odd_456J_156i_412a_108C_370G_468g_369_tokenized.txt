\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:G> <nat:370> + <var:J> <nat:456> + <nat:468> <var:g> + <nat:369> + <nat:156> <var:i> + <var:a> <nat:412> + <nat:108> <var:C> $ is odd . \end{theorem} \begin{proof} We justify that $ <var:G> <nat:370> + <var:i> <nat:156> + <nat:412> <var:a> + <nat:468> <var:g> + <nat:108> <var:C> + <var:J> <nat:456> + <nat:369> $ is known as odd from the fact the expression $ <var:a> \times <nat:412> + <var:G> \times <nat:370> + <nat:456> \times <var:J> + <nat:108> \times <var:C> + <var:g> \times <nat:468> + <var:i> \times <nat:156> $ is clearly even . We know the products $ <nat:412> \times <var:a> $ and likewise $ <nat:468> \times <var:g> $ are guaranteed to be even . Building on , we know that the pair $ <var:G> \times <nat:370> $ is guaranteed to be even . Remember the pairs $ <var:i> \times <nat:156> $ and likewise $ <nat:108> \times <var:C> $ are trivially even numbers . This must be true from the fact the product of an even element of $ \mathbb{N} $ with an arbitrary positive integer must be by itself an even integer . Further , the term $ <nat:456> \times <var:J> $ is obviously an even element of $ \mathbb{N} $ . Because taking the product of an even natural number and some number is an even number $ <var:C> <nat:108> + <nat:370> <var:G> + <var:i> <nat:156> + <nat:456> <var:J> + <var:g> <nat:468> + <var:a> <nat:412> $ will be even . Observe that $ <nat:369> $ is trivially an odd positive integer . It can be shown that the formula $ <nat:456> \cdot <var:J> + <var:i> \cdot <nat:156> + <nat:369> + <var:a> \cdot <nat:412> + <nat:108> \cdot <var:C> + <nat:370> \cdot <var:G> + <nat:468> \cdot <var:g> $ must be odd . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:G> <var:J> <var:g> <var:i> <var:a> <var:C> : nat , Nat . odd ( <nat:370> * <var:G> + <nat:456> * <var:J> + <nat:468> * <var:g> + <nat:156> * <var:i> + <nat:412> * <var:a> + <nat:108> * <var:C> + <nat:369> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:412> * <var:a> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:468> * <var:g> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:370> * <var:G> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:156> * <var:i> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:108> * <var:C> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:456> * <var:J> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:370> * <var:G> + <nat:456> * <var:J> + <nat:468> * <var:g> + <nat:156> * <var:i> + <nat:412> * <var:a> + <nat:108> * <var:C> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } assert ( <genH> : Nat . odd <nat:369> = true ) . { auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . rewrite <genH> . auto . Qed . 