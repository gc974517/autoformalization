\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Taking all natural numbers $ <var:v> $ , $ <var:O> $ , $ <var:p> $ , $ <var:l> $ , $ <var:P> $ , and $ <var:o> $ $ <var:o> \times <nat:464> + <nat:451> + <nat:30> \times <var:l> + <nat:192> \times <var:p> + <nat:388> \times <var:v> + <var:P> \times <nat:246> + <nat:144> \times <var:O> $ will be odd . \end{theorem} \begin{proof} Recall $ <var:l> \times <nat:30> + <nat:192> \times <var:p> + <var:v> \times <nat:388> + <nat:451> + <var:P> \times <nat:246> + <var:O> \times <nat:144> + <var:o> \times <nat:464> $ is known as odd from the knowledge the formula $ <nat:30> * <var:l> + <nat:246> * <var:P> + <nat:464> * <var:o> + <var:p> * <nat:192> + <var:O> * <nat:144> + <nat:388> * <var:v> $ is obviously even . We know the numbers $ <nat:144> $ , $ <nat:246> $ , $ <nat:388> $ , and $ <nat:464> $ are known to be even numbers in $ \mathbb{Z}^+ $ In addition , we know that the positive integer $ <nat:192> $ is trivially even The leading term $ <nat:30> $ is known as an even element of $ \mathbb{N} $ \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:v> <var:O> <var:p> <var:l> <var:P> <var:o> : nat , Nat . odd ( <nat:464> * <var:o> + <nat:30> * <var:l> + <nat:192> * <var:p> + <nat:388> * <var:v> + <nat:246> * <var:P> + <nat:144> * <var:O> + <nat:451> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:144> = true ) . { auto . } assert ( <genH> : Nat . even <nat:246> = true ) . { auto . } assert ( <genH> : Nat . even <nat:388> = true ) . { auto . } assert ( <genH> : Nat . even <nat:464> = true ) . { auto . } assert ( <genH> : Nat . even <nat:192> = true ) . { auto . } assert ( <genH> : Nat . even <nat:30> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:464> * <var:o> + <nat:30> * <var:l> + <nat:192> * <var:p> + <nat:388> * <var:v> + <nat:246> * <var:P> + <nat:144> * <var:O> ) = true ) . { repeat rewrite Nat . even_add . repeat rewrite Nat . even_mul . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . auto . Qed . 