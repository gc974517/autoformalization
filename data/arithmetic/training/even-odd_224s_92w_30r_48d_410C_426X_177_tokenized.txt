\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:X> <nat:426> + <var:w> <nat:92> + <nat:30> <var:r> + <var:s> <nat:224> + <nat:48> <var:d> + <nat:177> + <var:C> <nat:410> $ must be odd . \end{theorem} \begin{proof} We know that $ <nat:177> $ is guaranteed to be an odd number in $ \mathbb{N} $ . It can be shown that that the summation $ <var:X> \times <nat:426> + <var:w> \times <nat:92> + <var:d> \times <nat:48> + <nat:224> \times <var:s> + <nat:177> + <nat:410> \times <var:C> + <var:r> \times <nat:30> $ will be odd . We know the adding between an even number with an odd element of $ \mathbb{Z}^+ $ will be odd . This proposition must be true from the fact $ <var:C> * <nat:410> + <var:d> * <nat:48> + <var:s> * <nat:224> + <var:w> * <nat:92> + <nat:426> * <var:X> + <var:r> * <nat:30> $ is obviously even . The pair $ <var:s> * <nat:224> $ is clearly an even natural . Likewise , the products $ <nat:48> * <var:d> $ and $ <nat:410> * <var:C> $ are even . Adding on , we know the pairs $ <nat:426> * <var:X> $ and $ <var:w> * <nat:92> $ are obviously even elements of $ \mathbb{Z}^+ $ from the fact taking the product of an even number with an arbitrary element of $ \mathbb{Z}^+ $ is by its very nature an even positive integer . Likewise , the product $ <var:r> * <nat:30> $ is even . This fact holds because the product between an even natural and an arbitrary integer must be even . Because the addition between even numbers and an even positive integer must be an even element of $ \mathbb{Z}^+ $ , the formula $ <nat:224> * <var:s> + <nat:92> * <var:w> + <nat:30> * <var:r> + <var:d> * <nat:48> + <nat:410> * <var:C> + <var:X> * <nat:426> $ is even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:X> <var:w> <var:r> <var:s> <var:d> <var:C> : nat , Nat . odd ( <nat:426> * <var:X> + <nat:92> * <var:w> + <nat:30> * <var:r> + <nat:224> * <var:s> + <nat:48> * <var:d> + <nat:410> * <var:C> + <nat:177> ) = true . Proof . intros . assert ( <genH> : Nat . odd <nat:177> = true ) . { auto . } rewrite Nat . odd_add . assert ( <genH> : Nat . even ( <nat:224> * <var:s> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:48> * <var:d> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:410> * <var:C> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:426> * <var:X> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:92> * <var:w> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:30> * <var:r> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:426> * <var:X> + <nat:92> * <var:w> + <nat:30> * <var:r> + <nat:224> * <var:s> + <nat:48> * <var:d> + <nat:410> * <var:C> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite <- Nat . negb_even . rewrite <genH> . rewrite <genH> . auto . Qed . 