\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} For some positive terms $ <var:m> $ , $ <var:l> $ , $ <var:o> $ , $ <var:k> $ , $ <var:w> $ , $ <var:h> $ , $ <var:S> $ , and $ <var:G> $ the formula $ <nat:273> + <var:h> <nat:340> + <nat:306> <var:S> + <var:G> <nat:440> + <var:k> <nat:442> + <nat:30> <var:l> + <nat:334> <var:o> + <var:m> <nat:194> + <var:w> <nat:414> $ must be odd . \end{theorem} \begin{proof} The summing of an even integer with an odd number is an odd integer . The terms $ <nat:340> \times <var:h> $ , $ <nat:414> \times <var:w> $ , $ <var:k> \times <nat:442> $ , $ <var:G> \times <nat:440> $ , $ <nat:334> \times <var:o> $ , in addition to $ <nat:306> \times <var:S> $ are known to be even from the fact the product of an even element of $ \mathbb{N} $ with some number in $ \mathbb{N} $ must be an even whole number . The pair $ <var:l> \times <nat:30> $ is trivially an even natural . On top of this , notice the term $ <nat:194> \times <var:m> $ is trivially even from the fact the product between an even number with some element of $ \mathbb{N} $ will be an even number . It can be justified that the claim is proven . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:m> <var:l> <var:o> <var:k> <var:w> <var:h> <var:S> <var:G> : nat , Nat . odd ( <nat:340> * <var:h> + <nat:306> * <var:S> + <nat:440> * <var:G> + <nat:442> * <var:k> + <nat:30> * <var:l> + <nat:334> * <var:o> + <nat:194> * <var:m> + <nat:414> * <var:w> + <nat:273> ) = true . Proof . intros . rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . assert ( <genH> : Nat . even ( <nat:340> * <var:h> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:414> * <var:w> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:442> * <var:k> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:440> * <var:G> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:334> * <var:o> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:306> * <var:S> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:30> * <var:l> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:194> * <var:m> ) = true ) . { rewrite Nat . even_mul . auto . } rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 