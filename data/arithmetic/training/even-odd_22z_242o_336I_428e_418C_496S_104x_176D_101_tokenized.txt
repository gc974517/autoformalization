\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:z> <nat:22> + <var:S> <nat:496> + <var:e> <nat:428> + <nat:418> <var:C> + <nat:101> + <var:I> <nat:336> + <nat:242> <var:o> + <nat:104> <var:x> + <nat:176> <var:D> $ is guaranteed to be odd . \end{theorem} \begin{proof} The adding between even numbers collectively with an odd natural number must be trivially an odd natural . It can be shown that $ <var:o> <nat:242> + <nat:496> <var:S> + <var:C> <nat:418> + <nat:176> <var:D> + <var:x> <nat:104> + <var:e> <nat:428> + <nat:22> <var:z> + <nat:336> <var:I> $ is even . We know the products $ <nat:242> <var:o> $ , $ <var:x> <nat:104> $ , $ <var:z> <nat:22> $ , $ <nat:176> <var:D> $ , plus $ <nat:418> <var:C> $ are obviously even elements of $ \mathbb{Z}^+ $ . The pairs $ <nat:428> <var:e> $ and also $ <var:I> <nat:336> $ are clearly even numbers . This claim must be true by reason that taking the product between an even natural and a integer will be itself an even positive integer . Further , see that the product $ <nat:496> <var:S> $ is known to be even . The summation $ <var:z> \cdot <nat:22> + <nat:242> \cdot <var:o> + <var:I> \cdot <nat:336> + <var:e> \cdot <nat:428> + <nat:418> \cdot <var:C> + <var:S> \cdot <nat:496> + <nat:104> \cdot <var:x> + <var:D> \cdot <nat:176> $ is even as a consequence that the adding of even natural numbers with an even whole number will be even and likewise since the multiplication of an even number in $ \mathbb{N} $ with any number in $ \mathbb{Z}^+ $ is guaranteed to be even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:z> <var:S> <var:e> <var:C> <var:I> <var:o> <var:x> <var:D> : nat , Nat . odd ( <nat:22> * <var:z> + <nat:496> * <var:S> + <nat:428> * <var:e> + <nat:418> * <var:C> + <nat:336> * <var:I> + <nat:242> * <var:o> + <nat:104> * <var:x> + <nat:176> * <var:D> + <nat:101> ) = true . Proof . intros . rewrite Nat . odd_add . assert ( <genH> : Nat . even ( <nat:242> * <var:o> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:104> * <var:x> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:22> * <var:z> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:176> * <var:D> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:418> * <var:C> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:428> * <var:e> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:336> * <var:I> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:496> * <var:S> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:22> * <var:z> + <nat:496> * <var:S> + <nat:428> * <var:e> + <nat:418> * <var:C> + <nat:336> * <var:I> + <nat:242> * <var:o> + <nat:104> * <var:x> + <nat:176> * <var:D> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite <- Nat . negb_even . rewrite <genH> . auto . Qed . 