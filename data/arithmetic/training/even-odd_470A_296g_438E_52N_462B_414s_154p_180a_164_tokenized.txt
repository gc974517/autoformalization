\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:A> * <nat:470> + <nat:164> + <nat:296> * <var:g> + <var:E> * <nat:438> + <var:N> * <nat:52> + <nat:462> * <var:B> + <var:s> * <nat:414> + <var:p> * <nat:154> + <nat:180> * <var:a> $ will be even given some $ <var:g> $ , $ <var:p> $ , $ <var:E> $ , $ <var:a> $ , $ <var:B> $ , $ <var:N> $ , $ <var:A> $ , and $ <var:s> \in \mathbb{N} $ . \end{theorem} \begin{proof} On top of this , the terms $ <var:A> <nat:470> $ , $ <var:g> <nat:296> $ , $ <var:E> <nat:438> $ , $ <var:N> <nat:52> $ , $ <var:B> <nat:462> $ , $ <var:s> <nat:414> $ , $ <var:p> <nat:154> $ , as well as $ <nat:180> <var:a> $ are clearly even elements of $ \mathbb{Z}^+ $ . This claim must be true since taking the product between an even natural number and a positive integer is in itself an even number in $ \mathbb{Z}^+ $ . This fact is true from the knowledge the numbers $ <nat:470> $ , $ <nat:296> $ , $ <nat:438> $ , $ <nat:52> $ , $ <nat:462> $ , $ <nat:414> $ , $ <nat:154> $ , additionally $ <nat:180> $ are even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:g> <var:p> <var:E> <var:a> <var:B> <var:N> <var:A> <var:s> : nat , Nat . even ( <nat:470> * <var:A> + <nat:296> * <var:g> + <nat:438> * <var:E> + <nat:52> * <var:N> + <nat:462> * <var:B> + <nat:414> * <var:s> + <nat:154> * <var:p> + <nat:180> * <var:a> + <nat:164> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:470> = true ) . { auto . } assert ( <genH> : Nat . even <nat:296> = true ) . { auto . } assert ( <genH> : Nat . even <nat:438> = true ) . { auto . } assert ( <genH> : Nat . even <nat:52> = true ) . { auto . } assert ( <genH> : Nat . even <nat:462> = true ) . { auto . } assert ( <genH> : Nat . even <nat:414> = true ) . { auto . } assert ( <genH> : Nat . even <nat:154> = true ) . { auto . } assert ( <genH> : Nat . even <nat:180> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:470> * <var:A> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:296> * <var:g> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:438> * <var:E> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:52> * <var:N> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:462> * <var:B> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:414> * <var:s> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:154> * <var:p> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:180> * <var:a> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 