\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:284> * <var:K> + <nat:210> * <var:J> + <nat:454> * <var:b> + <var:Q> * <nat:64> + <nat:386> * <var:X> + <nat:318> * <var:N> + <nat:26> * <var:p> + <nat:136> * <var:i> + <nat:209> $ is odd . \end{theorem} \begin{proof} Observe the adding between an even number with an odd integer is by itself an odd whole number . Take note that $ <nat:209> $ is clearly an odd whole number . We apply the knowledge $ <var:J> \times <nat:210> + <var:Q> \times <nat:64> + <var:X> \times <nat:386> + <var:b> \times <nat:454> + <var:K> \times <nat:284> + <nat:26> \times <var:p> + <var:i> \times <nat:136> + <nat:318> \times <var:N> $ is known as even , from the knowledge the summation of an even element of $ \mathbb{N} $ with an even whole number is even . The coefficients $ <nat:318> $ , $ <nat:64> $ , $ <nat:454> $ , $ <nat:210> $ , $ <nat:386> $ , $ <nat:284> $ , plus $ <nat:136> $ are clearly even elements of $ \mathbb{N} $ Adding on , notice that the natural number $ <nat:26> $ is known to be even additionally by reason that multiplying of an even number in $ \mathbb{N} $ with any element of $ \mathbb{N} $ must be fundamentally an even number in $ \mathbb{N} $ the sum $ <nat:386> * <var:X> + <var:K> * <nat:284> + <var:i> * <nat:136> + <var:J> * <nat:210> + <nat:454> * <var:b> + <nat:26> * <var:p> + <var:Q> * <nat:64> + <var:N> * <nat:318> $ is guaranteed to be by itself even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:K> <var:J> <var:b> <var:Q> <var:X> <var:N> <var:p> <var:i> : nat , Nat . odd ( <nat:284> * <var:K> + <nat:210> * <var:J> + <nat:454> * <var:b> + <nat:64> * <var:Q> + <nat:386> * <var:X> + <nat:318> * <var:N> + <nat:26> * <var:p> + <nat:136> * <var:i> + <nat:209> ) = true . Proof . intros . rewrite Nat . odd_add . assert ( <genH> : Nat . odd <nat:209> = true ) . { auto . } assert ( <genH> : Nat . even <nat:318> = true ) . { auto . } assert ( <genH> : Nat . even <nat:64> = true ) . { auto . } assert ( <genH> : Nat . even <nat:454> = true ) . { auto . } assert ( <genH> : Nat . even <nat:210> = true ) . { auto . } assert ( <genH> : Nat . even <nat:386> = true ) . { auto . } assert ( <genH> : Nat . even <nat:284> = true ) . { auto . } assert ( <genH> : Nat . even <nat:136> = true ) . { auto . } assert ( <genH> : Nat . even <nat:26> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:284> * <var:K> + <nat:210> * <var:J> + <nat:454> * <var:b> + <nat:64> * <var:Q> + <nat:386> * <var:X> + <nat:318> * <var:N> + <nat:26> * <var:p> + <nat:136> * <var:i> ) = true ) . { repeat rewrite Nat . even_add . repeat rewrite Nat . even_mul . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite <- Nat . negb_even . rewrite <genH> . rewrite <genH> . auto . Qed . 