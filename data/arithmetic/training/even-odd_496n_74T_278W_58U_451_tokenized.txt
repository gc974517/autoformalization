\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:U> <nat:58> + <var:T> <nat:74> + <var:n> <nat:496> + <var:W> <nat:278> + <nat:451> $ is odd assuming every positive integers $ <var:T> $ , $ <var:n> $ , $ <var:U> $ , and $ <var:W> $ . \end{theorem} \begin{proof} We apply the assumption the knowledge the expression $ <nat:74> \cdot <var:T> + <var:W> \cdot <nat:278> + <nat:451> + <nat:58> \cdot <var:U> + <var:n> \cdot <nat:496> $ is known as odd since $ <var:U> \cdot <nat:58> + <var:T> \cdot <nat:74> + <nat:278> \cdot <var:W> + <var:n> \cdot <nat:496> $ is clearly even . Observe the leading terms $ <nat:496> $ as well as $ <nat:58> $ will be even Adding on , we know the number $ <nat:278> $ is obviously even See the integer $ <nat:74> $ is guaranteed to be even The summation $ <var:U> \cdot <nat:58> + <nat:74> \cdot <var:T> + <var:W> \cdot <nat:278> + <nat:496> \cdot <var:n> $ will be by itself even from the knowledge the product between even numbers with some integer is even . We justify the expression $ <nat:496> <var:n> + <var:T> <nat:74> + <var:W> <nat:278> + <nat:58> <var:U> + <nat:451> $ is guaranteed to be odd with the addition of an even number in $ \mathbb{Z}^+ $ and an odd number in $ \mathbb{N} $ must be odd . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:T> <var:n> <var:U> <var:W> : nat , Nat . odd ( <nat:58> * <var:U> + <nat:74> * <var:T> + <nat:496> * <var:n> + <nat:278> * <var:W> + <nat:451> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:496> = true ) . { auto . } assert ( <genH> : Nat . even <nat:58> = true ) . { auto . } assert ( <genH> : Nat . even <nat:278> = true ) . { auto . } assert ( <genH> : Nat . even <nat:74> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:58> * <var:U> + <nat:74> * <var:T> + <nat:496> * <var:n> + <nat:278> * <var:W> ) = true ) . { repeat rewrite Nat . even_add . repeat rewrite Nat . even_mul . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . auto . Qed . 