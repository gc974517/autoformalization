\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:N> \cdot <nat:182> + <nat:482> \cdot <var:q> + <nat:228> \cdot <var:z> + <var:Y> \cdot <nat:106> + <nat:244> \cdot <var:o> + <var:R> \cdot <nat:120> + <var:m> \cdot <nat:70> + <nat:448> \cdot <var:M> + <nat:253> $ must be odd given every $ <var:z> $ , $ <var:M> $ , $ <var:q> $ , $ <var:N> $ , $ <var:o> $ , $ <var:Y> $ , $ <var:m> $ , and $ <var:R> \in \mathbb{Z}^+ $ . \end{theorem} \begin{proof} The product $ <nat:120> \cdot <var:R> $ is clearly an even number in $ \mathbb{N} $ . This fact must be true as a consequence that the multiplication of an even natural and a integer will be by definition an even positive integer . This claim must be true because the whole number $ <nat:120> $ is known as an even positive integer . In addition to this , the positive integer $ <nat:448> $ is obviously even . Therefore , $ <var:M> \cdot <nat:448> $ will be even at the same time . The pair $ <nat:244> \cdot <var:o> $ is obviously an even number in $ \mathbb{N} $ . This fact is true from the knowledge the whole number $ <nat:244> $ is even . Furthermore , recall that the integer $ <nat:106> $ is trivially even . As a consequence , $ <nat:106> \cdot <var:Y> $ will be even additionally . Take note that the term $ <var:m> \cdot <nat:70> $ is known to be even . This claim is proven from the fact multiplying of an even number and an arbitrary positive integer is guaranteed to be instrinsically an even natural . This claim is true because the whole number $ <nat:70> $ is even . On top of this , the coefficient $ <nat:182> $ is known to be even . Accordingly , the product $ <var:N> \cdot <nat:182> $ must be even too . On top of this , remember that the term $ <nat:482> \cdot <var:q> $ is guaranteed to be even . This is true from the knowledge the positive integer $ <nat:482> $ is even . The product $ <nat:228> \cdot <var:z> $ is obviously even . This claim is true by reason that the natural number $ <nat:228> $ is trivially even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:z> <var:M> <var:q> <var:N> <var:o> <var:Y> <var:m> <var:R> : nat , Nat . odd ( <nat:182> * <var:N> + <nat:482> * <var:q> + <nat:228> * <var:z> + <nat:106> * <var:Y> + <nat:244> * <var:o> + <nat:120> * <var:R> + <nat:70> * <var:m> + <nat:448> * <var:M> + <nat:253> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:120> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:120> * <var:R> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:448> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:448> * <var:M> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:244> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:244> * <var:o> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:106> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:106> * <var:Y> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:70> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:70> * <var:m> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:182> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:182> * <var:N> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:482> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:482> * <var:q> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:228> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:228> * <var:z> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 