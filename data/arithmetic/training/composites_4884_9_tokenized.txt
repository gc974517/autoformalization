\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} If we get $ <var:z> = <var:f> * <var:h> * <var:M> * <var:O> * <var:H> * <var:i> * <var:r> * <var:N> * <var:k> $ with some positive integer $ <var:z> $ as well as so that $ <var:i> $ , $ <var:k> $ , $ <var:h> $ , $ <var:O> $ , $ <var:f> $ , $ <var:H> $ , $ <var:M> $ , $ <var:N> $ and $ <var:r> \geq <nat:2> $ , claim that $ <var:z> $ is a <def:nine-composite> natural number with some $ <var:O> $ , $ <var:i> $ , $ <var:H> $ , $ <var:h> $ , $ <var:r> $ , $ <var:f> $ , $ <var:M> $ , $ <var:N> $ , $ <var:k> $ . Accordingly $ <var:z> = <nat:4354560> $ is a <def:nine-composite> number . \end{theorem} \begin{proof} We demonstrate $ <var:O> * <var:f> * <var:M> * <var:k> * <var:h> * <var:r> * <var:H> * <var:N> * <var:i> = <nat:4354560> $ . Note that $ <nat:3> $ , $ <nat:7> $ , $ <nat:2> $ , $ <nat:9> $ , $ <nat:5> $ , $ <nat:6> $ , $ <nat:12> $ , $ <nat:8> $ , and $ <nat:4> \geq <nat:2> $ . Similarly observe that likewise $ <nat:6> \cdot <nat:12> \cdot <nat:9> \cdot <nat:5> \cdot <nat:3> \cdot <nat:2> \cdot <nat:4> \cdot <nat:8> \cdot <nat:7> = <nat:4354560> = <var:f> \cdot <var:H> \cdot <var:h> \cdot <var:O> \cdot <var:k> \cdot <var:r> \cdot <var:i> \cdot <var:M> \cdot <var:N> $ . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:nine-composite> ( <var:z> : nat ) := exists <var:O> <var:i> <var:H> <var:h> <var:r> <var:f> <var:M> <var:N> <var:k> : nat , ( <var:z> = <var:f> * <var:h> * <var:M> * <var:O> * <var:H> * <var:i> * <var:r> * <var:N> * <var:k> ) /\ ( <var:i> >= <nat:2> ) /\ ( <var:k> >= <nat:2> ) /\ ( <var:h> >= <nat:2> ) /\ ( <var:O> >= <nat:2> ) /\ ( <var:f> >= <nat:2> ) /\ ( <var:H> >= <nat:2> ) /\ ( <var:M> >= <nat:2> ) /\ ( <var:N> >= <nat:2> ) /\ ( <var:r> >= <nat:2> ) . Theorem <genP:1> : <def:nine-composite> <nat:4354560> . Proof . unfold <def:nine-composite> . assert ( <genH> : <nat:3> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:7> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:2> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:9> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:5> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:6> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:12> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:8> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:4> >= <nat:2> ) . { lia . } exists <nat:5> . exists <nat:4> . exists <nat:12> . exists <nat:9> . exists <nat:2> . exists <nat:6> . exists <nat:8> . exists <nat:7> . exists <nat:3> . repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 