\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Using natural numbers $ <var:H> $ , $ <var:t> $ , $ <var:D> $ , $ <var:L> $ , $ <var:X> $ , and $ <var:B> $ the expression $ <nat:392> \cdot <var:H> + <nat:330> + <var:B> \cdot <nat:282> + <nat:212> \cdot <var:t> + <nat:246> \cdot <var:L> + <nat:386> \cdot <var:X> + <var:D> \cdot <nat:82> $ is guaranteed to be even . \end{theorem} \begin{proof} The addition of an even natural number with an even element of $ \mathbb{N} $ is even . The proposition holds because $ <var:t> * <nat:212> + <var:D> * <nat:82> + <var:B> * <nat:282> + <var:L> * <nat:246> + <nat:392> * <var:H> + <var:X> * <nat:386> $ is known to be even . Take note that the leading terms $ <nat:212> $ , $ <nat:82> $ , $ <nat:282> $ , $ <nat:246> $ , $ <nat:392> $ , in addition to $ <nat:386> $ are even integers . Accordingly , the products $ <var:t> * <nat:212> $ , $ <var:D> * <nat:82> $ , $ <nat:282> * <var:B> $ , $ <var:L> * <nat:246> $ , $ <nat:392> * <var:H> $ , and moreover $ <nat:386> * <var:X> $ is guaranteed to be even in addition . From the fact the summation of even positive integers with even elements of $ \mathbb{N} $ is guaranteed to be an even element of $ \mathbb{N} $ , and as a consequence that taking the product of an even number in $ \mathbb{Z}^+ $ and any element of $ \mathbb{N} $ will be even . We justify the claim is true . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:H> <var:t> <var:D> <var:L> <var:X> <var:B> : nat , Nat . even ( <nat:392> * <var:H> + <nat:282> * <var:B> + <nat:212> * <var:t> + <nat:246> * <var:L> + <nat:386> * <var:X> + <nat:82> * <var:D> + <nat:330> ) = true . Proof . intros . rewrite Nat . even_add . assert ( <genH> : Nat . even <nat:212> = true ) . { auto . } assert ( <genH> : Nat . even <nat:82> = true ) . { auto . } assert ( <genH> : Nat . even <nat:282> = true ) . { auto . } assert ( <genH> : Nat . even <nat:246> = true ) . { auto . } assert ( <genH> : Nat . even <nat:392> = true ) . { auto . } assert ( <genH> : Nat . even <nat:386> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:212> * <var:t> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:82> * <var:D> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:282> * <var:B> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:246> * <var:L> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:392> * <var:H> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:386> * <var:X> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:392> * <var:H> + <nat:282> * <var:B> + <nat:212> * <var:t> + <nat:246> * <var:L> + <nat:386> * <var:X> + <nat:82> * <var:D> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite <genH> . auto . Qed . 