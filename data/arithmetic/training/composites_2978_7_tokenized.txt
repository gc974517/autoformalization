\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Assume $ <var:V> $ , $ <var:e> $ , $ <var:K> $ , $ <var:G> $ , $ <var:t> $ , $ <var:E> $ and $ <var:D> \in \mathbb{Z}^+ $ satisfying the condition that $ <var:K> $ , $ <var:E> $ , $ <var:t> $ , $ <var:D> $ , $ <var:V> $ , $ <var:G> $ , $ <var:e> \geq <nat:2> $ . $ <var:t> \cdot <var:e> \cdot <var:V> \cdot <var:K> \cdot <var:D> \cdot <var:G> \cdot <var:E> $ equals $ <nat:633600> $ . \end{theorem} \begin{proof} Let $ <var:t> = <nat:12> $ , $ <var:e> = <nat:8> $ , $ <var:G> = <nat:10> $ , $ <var:K> = <nat:5> $ , $ <var:D> = <nat:3> $ , $ <var:V> = <nat:4> $ , and $ <var:E> = <nat:11> $ . We justify $ <nat:633600> = <var:e> \times <var:D> \times <var:K> \times <var:V> \times <var:G> \times <var:t> \times <var:E> $ . Moreover note $ <var:E> = <nat:11> $ , $ <var:V> = <nat:4> $ , $ <var:K> = <nat:5> $ , $ <var:e> = <nat:8> $ , $ <var:G> = <nat:10> $ , $ <var:t> = <nat:12> $ and $ <var:D> = <nat:3> $ are greater than or equivalent to <nat:2> . This produces the theorem is valid . \end{proof} \end{document} 
~
Require Import Lia . Theorem <genP:1> : exists <var:V> <var:e> <var:K> <var:G> <var:t> <var:E> <var:D> : nat , ( <var:K> >= <nat:2> ) /\ ( <var:E> >= <nat:2> ) /\ ( <var:t> >= <nat:2> ) /\ ( <var:D> >= <nat:2> ) /\ ( <var:V> >= <nat:2> ) /\ ( <var:G> >= <nat:2> ) /\ ( <var:e> >= <nat:2> ) /\ ( <var:t> * <var:e> * <var:V> * <var:K> * <var:D> * <var:G> * <var:E> = <nat:633600> ) . Proof . exists <nat:4> . exists <nat:8> . exists <nat:5> . exists <nat:10> . exists <nat:12> . exists <nat:11> . exists <nat:3> . assert ( <genH> : <nat:11> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:4> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:5> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:8> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:10> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:12> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:3> >= <nat:2> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 