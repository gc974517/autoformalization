\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Take that $ <var:j> $ is a <def:seven-composite> number if using some whole numbers $ <var:g> $ , $ <var:d> $ , $ <var:Y> $ , $ <var:C> $ , $ <var:k> $ , $ <var:Q> $ , $ <var:F> $ we get $ <var:Y> $ , $ <var:g> $ , $ <var:d> $ , $ <var:k> $ , $ <var:F> $ , $ <var:C> $ , and $ <var:Q> \geq <nat:2> $ as well as with some number $ <var:j> $ , $ <var:j> = <var:C> \times <var:F> \times <var:Y> \times <var:g> \times <var:Q> \times <var:k> \times <var:d> $ . So $ <var:j> = <nat:110880> $ is a <def:seven-composite> number . \end{theorem} \begin{proof} Observe that $ <nat:3> \times <nat:7> \times <nat:11> \times <nat:2> \times <nat:10> \times <nat:6> \times <nat:4> = <nat:110880> $ . Furthermore observe $ <nat:2> $ , $ <nat:6> $ , $ <nat:3> $ , $ <nat:4> $ , $ <nat:11> $ , $ <nat:7> $ and $ <nat:10> $ are greater than or equal to <nat:2> . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:seven-composite> ( <var:j> : nat ) := exists <var:g> <var:d> <var:Y> <var:C> <var:k> <var:Q> <var:F> : nat , ( <var:Y> >= <nat:2> ) /\ ( <var:g> >= <nat:2> ) /\ ( <var:d> >= <nat:2> ) /\ ( <var:k> >= <nat:2> ) /\ ( <var:F> >= <nat:2> ) /\ ( <var:C> >= <nat:2> ) /\ ( <var:Q> >= <nat:2> ) /\ ( <var:j> = <var:C> * <var:F> * <var:Y> * <var:g> * <var:Q> * <var:k> * <var:d> ) . Theorem <genP:1> : <def:seven-composite> <nat:110880> . Proof . unfold <def:seven-composite> . exists <nat:10> . exists <nat:4> . exists <nat:7> . exists <nat:11> . exists <nat:6> . exists <nat:3> . exists <nat:2> . assert ( <genH> : <nat:2> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:6> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:3> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:4> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:11> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:7> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:10> >= <nat:2> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 