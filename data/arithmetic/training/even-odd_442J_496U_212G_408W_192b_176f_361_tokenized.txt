\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:W> \times <nat:408> + <nat:442> \times <var:J> + <nat:176> \times <var:f> + <var:b> \times <nat:192> + <nat:496> \times <var:U> + <var:G> \times <nat:212> + <nat:361> $ is guaranteed to be odd . \end{theorem} \begin{proof} The summing between even integers with an odd element of $ \mathbb{Z}^+ $ must be odd . Notice $ <nat:361> $ is known to be an odd number in $ \mathbb{Z}^+ $ . We apply the assumption $ <var:J> \times <nat:442> + <var:U> \times <nat:496> + <var:G> \times <nat:212> + <nat:408> \times <var:W> + <nat:192> \times <var:b> + <var:f> \times <nat:176> $ is guaranteed to be even . The whole numbers $ <nat:212> $ , $ <nat:176> $ , plus $ <nat:192> $ must be even numbers in $ \mathbb{Z}^+ $ Recall the number $ <nat:408> $ is obviously even Adding on , take note that the leading term $ <nat:442> $ is obviously an even integer We know that the leading term $ <nat:496> $ is obviously an even number \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:W> <var:J> <var:f> <var:b> <var:U> <var:G> : nat , Nat . odd ( <nat:408> * <var:W> + <nat:442> * <var:J> + <nat:176> * <var:f> + <nat:192> * <var:b> + <nat:496> * <var:U> + <nat:212> * <var:G> + <nat:361> ) = true . Proof . intros . rewrite Nat . odd_add . assert ( <genH> : Nat . odd <nat:361> = true ) . { auto . } assert ( <genH> : Nat . even <nat:212> = true ) . { auto . } assert ( <genH> : Nat . even <nat:176> = true ) . { auto . } assert ( <genH> : Nat . even <nat:192> = true ) . { auto . } assert ( <genH> : Nat . even <nat:408> = true ) . { auto . } assert ( <genH> : Nat . even <nat:442> = true ) . { auto . } assert ( <genH> : Nat . even <nat:496> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:408> * <var:W> + <nat:442> * <var:J> + <nat:176> * <var:f> + <nat:192> * <var:b> + <nat:496> * <var:U> + <nat:212> * <var:G> ) = true ) . { repeat rewrite Nat . even_add . repeat rewrite Nat . even_mul . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite <- Nat . negb_even . rewrite <genH> . rewrite <genH> . auto . Qed . 