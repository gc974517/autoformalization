\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Assume $ <var:O> $ , $ <var:N> $ , $ <var:z> $ , $ <var:I> $ , $ <var:t> $ , $ <var:A> $ , $ <var:Z> \in \mathbb{Z}^+ $ . We define that some number $ <var:e> $ is called a <def:seven-composite> positive integer given $ <var:e> = <var:O> * <var:N> * <var:I> * <var:Z> * <var:z> * <var:A> * <var:t> $ as well as so that $ <var:t> $ , $ <var:A> $ , $ <var:N> $ , $ <var:Z> $ , $ <var:z> $ , $ <var:O> $ and $ <var:I> \geq <nat:2> $ . For this reason <nat:178200> is a <def:seven-composite> number . \end{theorem} \begin{proof} Note $ <var:O> * <var:Z> * <var:N> * <var:A> * <var:I> * <var:t> * <var:z> = <nat:178200> $ shows $ <var:N> = <nat:2> $ , $ <var:z> = <nat:9> $ , $ <var:A> = <nat:10> $ , $ <var:O> = <nat:11> $ , $ <var:I> = <nat:3> $ , $ <var:Z> = <nat:6> $ , and $ <var:t> = <nat:5> $ . Furthermore observe $ <nat:3> $ , $ <nat:5> $ , $ <nat:11> $ , $ <nat:2> $ , $ <nat:9> $ , $ <nat:10> $ , $ <nat:6> $ are greater than or equivalent to <nat:2> . This shows our formula holds . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:seven-composite> ( <var:e> : nat ) := exists <var:O> <var:N> <var:z> <var:I> <var:t> <var:A> <var:Z> : nat , ( <var:e> = <var:O> * <var:N> * <var:I> * <var:Z> * <var:z> * <var:A> * <var:t> ) /\ ( <var:t> >= <nat:2> ) /\ ( <var:A> >= <nat:2> ) /\ ( <var:N> >= <nat:2> ) /\ ( <var:Z> >= <nat:2> ) /\ ( <var:z> >= <nat:2> ) /\ ( <var:O> >= <nat:2> ) /\ ( <var:I> >= <nat:2> ) . Theorem <genP:1> : <def:seven-composite> <nat:178200> . Proof . unfold <def:seven-composite> . exists <nat:11> . exists <nat:2> . exists <nat:9> . exists <nat:3> . exists <nat:5> . exists <nat:10> . exists <nat:6> . assert ( <genH> : <nat:3> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:5> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:11> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:2> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:9> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:10> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:6> >= <nat:2> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 