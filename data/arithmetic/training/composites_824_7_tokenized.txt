\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \newtheorem{definition}{Definition} \begin{document} \begin{definition} There exist $ <var:G> $ , $ <var:W> $ , $ <var:r> $ , $ <var:w> $ , $ <var:a> $ , $ <var:U> $ , $ <var:s> \in \mathbb{N} $ such that $ <var:W> $ , $ <var:G> $ , $ <var:U> $ , $ <var:a> $ , $ <var:w> $ , $ <var:r> $ , and $ <var:s> \geq <nat:2> $ . Take as given that some natural number $ <var:q> $ is named a <def:seven-composite> positive integer assuming $ <var:q> = <var:w> \cdot <var:s> \cdot <var:U> \cdot <var:G> \cdot <var:W> \cdot <var:r> \cdot <var:a> $ . \end{definition} \begin{theorem} $ <var:q> = <nat:181440> $ is <def:seven-composite> . \end{theorem} \begin{proof} We verify $ <var:w> $ , $ <var:a> $ , $ <var:s> $ , $ <var:U> $ , $ <var:W> $ , $ <var:r> $ , $ <var:G> \geq <nat:2> $ plus $ <var:G> * <var:U> * <var:W> * <var:a> * <var:w> * <var:s> * <var:r> = <nat:181440> $ . Note that $ <nat:12> $ , $ <nat:2> $ , $ <nat:5> $ , $ <nat:9> $ , $ <nat:8> $ , $ <nat:7> $ and $ <nat:3> $ are more than or equal to <nat:2> . Similarly note that as well $ <var:a> \times <var:r> \times <var:s> \times <var:W> \times <var:G> \times <var:w> \times <var:U> = <nat:181440> $ gives $ <var:a> = <nat:9> $ , $ <var:r> = <nat:8> $ , $ <var:w> = <nat:5> $ , $ <var:W> = <nat:2> $ , $ <var:U> = <nat:12> $ , $ <var:s> = <nat:7> $ , $ <var:G> = <nat:3> $ . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:seven-composite> ( <var:q> : nat ) := exists <var:G> <var:W> <var:r> <var:w> <var:a> <var:U> <var:s> : nat , ( <var:W> >= <nat:2> ) /\ ( <var:G> >= <nat:2> ) /\ ( <var:U> >= <nat:2> ) /\ ( <var:a> >= <nat:2> ) /\ ( <var:w> >= <nat:2> ) /\ ( <var:r> >= <nat:2> ) /\ ( <var:s> >= <nat:2> ) /\ ( <var:q> = <var:w> * <var:s> * <var:U> * <var:G> * <var:W> * <var:r> * <var:a> ) . Theorem <genP:1> : <def:seven-composite> <nat:181440> . Proof . unfold <def:seven-composite> . assert ( <genH> : <nat:12> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:2> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:5> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:9> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:8> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:7> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:3> >= <nat:2> ) . { lia . } exists <nat:3> . exists <nat:2> . exists <nat:8> . exists <nat:5> . exists <nat:9> . exists <nat:12> . exists <nat:7> . repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 