\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Given all $ <var:R> $ , $ <var:x> $ , $ <var:s> $ , $ <var:V> $ , $ <var:N> $ , and $ <var:t> \in \mathbb{N} $ $ <nat:140> * <var:t> + <var:N> * <nat:364> + <nat:344> * <var:x> + <nat:416> * <var:R> + <nat:375> + <var:V> * <nat:114> + <var:s> * <nat:92> $ is odd . \end{theorem} \begin{proof} The summation between an even positive integer with an odd number is odd . The pairs $ <var:s> \times <nat:92> $ , $ <nat:114> \times <var:V> $ , and likewise $ <nat:344> \times <var:x> $ are known as even numbers in $ \mathbb{N} $ . Further , take note the terms $ <var:N> \times <nat:364> $ and $ <nat:416> \times <var:R> $ are trivially even elements of $ \mathbb{Z}^+ $ . Observe that the pair $ <var:t> \times <nat:140> $ is obviously even since taking the product between an even number in $ \mathbb{Z}^+ $ and any number is guaranteed to be even . We verify the summation $ <nat:140> \cdot <var:t> + <nat:375> + <nat:92> \cdot <var:s> + <nat:364> \cdot <var:N> + <nat:344> \cdot <var:x> + <var:V> \cdot <nat:114> + <nat:416> \cdot <var:R> $ must be odd . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:R> <var:x> <var:s> <var:V> <var:N> <var:t> : nat , Nat . odd ( <nat:140> * <var:t> + <nat:364> * <var:N> + <nat:344> * <var:x> + <nat:416> * <var:R> + <nat:114> * <var:V> + <nat:92> * <var:s> + <nat:375> ) = true . Proof . intros . rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . assert ( <genH> : Nat . even ( <nat:92> * <var:s> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:114> * <var:V> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:344> * <var:x> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:364> * <var:N> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:416> * <var:R> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:140> * <var:t> ) = true ) . { rewrite Nat . even_mul . auto . } rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 