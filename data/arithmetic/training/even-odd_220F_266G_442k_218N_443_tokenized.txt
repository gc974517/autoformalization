\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Assuming any whole numbers $ <var:k> $ , $ <var:N> $ , $ <var:F> $ , and $ <var:G> $ $ <nat:443> + <nat:220> \cdot <var:F> + <var:G> \cdot <nat:266> + <nat:218> \cdot <var:N> + <var:k> \cdot <nat:442> $ will be odd . \end{theorem} \begin{proof} Recall the product $ <var:F> <nat:220> $ is known to be an even integer as a consequence that multiplying between an even number and any natural is guaranteed to be instrinsically an even whole number , and is proven as a consequence that the positive integer $ <nat:220> $ is guaranteed to be fundamentally an even integer . What's more , the term $ <var:G> <nat:266> $ is guaranteed to be even since the coefficient $ <nat:266> $ is even . Additionally , the natural number $ <nat:218> $ is an even number in $ \mathbb{Z}^+ $ . Therefore , the product $ <var:N> <nat:218> $ is guaranteed to be even as well . Observe that $ <nat:442> <var:k> $ is known as an even number . This fact is true by reason that the natural number $ <nat:442> $ is known to be an even number in $ \mathbb{Z}^+ $ . We know the addition of even elements of $ \mathbb{Z}^+ $ successively and an odd number in $ \mathbb{Z}^+ $ is odd . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:k> <var:N> <var:F> <var:G> : nat , Nat . odd ( <nat:220> * <var:F> + <nat:266> * <var:G> + <nat:218> * <var:N> + <nat:442> * <var:k> + <nat:443> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:220> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:220> * <var:F> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:266> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:266> * <var:G> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:218> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:218> * <var:N> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even <nat:442> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:442> * <var:k> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 