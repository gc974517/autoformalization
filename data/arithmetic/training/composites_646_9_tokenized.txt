\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \newtheorem{definition}{Definition} \begin{document} \begin{definition} Wherever we get $ <var:v> $ , $ <var:l> $ , $ <var:i> $ , $ <var:V> $ , $ <var:U> $ , $ <var:b> $ , $ <var:d> $ , $ <var:a> $ and $ <var:n> \geq <nat:2> $ such that assuming some $ <var:D> $ , $ <var:b> \times <var:v> \times <var:l> \times <var:a> \times <var:i> \times <var:U> \times <var:n> \times <var:d> \times <var:V> = <var:D> $ using some $ <var:b> $ , $ <var:n> $ , $ <var:d> $ , $ <var:U> $ , $ <var:i> $ , $ <var:l> $ , $ <var:V> $ , $ <var:v> $ , $ <var:a> \in \mathbb{N} $ , then we claim that $ <var:D> $ is a <def:nine-composite> natural number . \end{definition} \begin{theorem} The number <nat:13685760> is a <def:nine-composite> natural number . \end{theorem} \begin{proof} Remember <nat:13685760> is a <def:nine-composite> integer assuming it is the product of whole numbers $ <var:i> $ , $ <var:l> $ , $ <var:d> $ , $ <var:a> $ , $ <var:b> $ , $ <var:V> $ , $ <var:v> $ , $ <var:U> $ , and $ <var:n> $ satisfying the condition that $ <var:n> $ , $ <var:l> $ , $ <var:v> $ , $ <var:d> $ , $ <var:b> $ , $ <var:U> $ , $ <var:V> $ , $ <var:a> $ and $ <var:i> \geq <nat:2> $ . We verify <nat:13685760> is a <def:nine-composite> number . We verify <nat:13685760> is a <def:nine-composite> integer as $ <nat:8> $ , $ <nat:3> $ , $ <nat:6> $ , $ <nat:9> $ , $ <nat:4> $ , $ <nat:11> $ , $ <nat:12> $ , $ <nat:2> $ and $ <nat:10> \geq <nat:2> $ as well as seeing that $ <nat:13685760> = <nat:3> \times <nat:8> \times <nat:4> \times <nat:9> \times <nat:2> \times <nat:11> \times <nat:12> \times <nat:6> \times <nat:10> $ . \end{proof} \end{document} 
~
Require Import Lia . Definition <def:nine-composite> ( <var:D> : nat ) := exists <var:b> <var:n> <var:d> <var:U> <var:i> <var:l> <var:V> <var:v> <var:a> : nat , ( <var:v> >= <nat:2> ) /\ ( <var:l> >= <nat:2> ) /\ ( <var:i> >= <nat:2> ) /\ ( <var:V> >= <nat:2> ) /\ ( <var:U> >= <nat:2> ) /\ ( <var:b> >= <nat:2> ) /\ ( <var:d> >= <nat:2> ) /\ ( <var:a> >= <nat:2> ) /\ ( <var:n> >= <nat:2> ) /\ ( <var:b> * <var:v> * <var:l> * <var:a> * <var:i> * <var:U> * <var:n> * <var:d> * <var:V> = <var:D> ) . Theorem <genP:1> : <def:nine-composite> <nat:13685760> . Proof . unfold <def:nine-composite> . assert ( <genH> : <nat:8> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:3> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:6> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:9> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:4> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:11> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:12> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:2> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:10> >= <nat:2> ) . { lia . } exists <nat:4> . exists <nat:8> . exists <nat:9> . exists <nat:12> . exists <nat:2> . exists <nat:3> . exists <nat:11> . exists <nat:10> . exists <nat:6> . repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 