\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} With any positive numbers $ <var:E> $ , $ <var:n> $ , $ <var:j> $ , $ <var:N> $ , $ <var:p> $ , and $ <var:K> $ the summation $ <nat:76> * <var:j> + <nat:4> * <var:n> + <nat:113> + <nat:248> * <var:E> + <var:N> * <nat:474> + <nat:406> * <var:p> + <nat:320> * <var:K> $ must be odd . \end{theorem} \begin{proof} It can be shown that that the summation $ <var:N> * <nat:474> + <nat:4> * <var:n> + <nat:320> * <var:K> + <var:E> * <nat:248> + <nat:76> * <var:j> + <nat:406> * <var:p> $ is even . Likewise , the coefficients $ <nat:474> $ , $ <nat:4> $ , $ <nat:320> $ , $ <nat:248> $ , $ <nat:76> $ , as well as $ <nat:406> $ are even . Then , the terms $ <var:N> \cdot <nat:474> $ , $ <var:n> \cdot <nat:4> $ , $ <nat:320> \cdot <var:K> $ , $ <var:E> \cdot <nat:248> $ , $ <var:j> \cdot <nat:76> $ , as well as $ <nat:406> \cdot <var:p> $ is even at the same time . Because the adding of an even number in $ \mathbb{N} $ with an even integer must be an even integer , our result is proven . Notice $ <nat:113> $ is known as an odd number in $ \mathbb{N} $ . See that the adding between even whole numbers collectively with an odd element of $ \mathbb{Z}^+ $ must be odd . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:E> <var:n> <var:j> <var:N> <var:p> <var:K> : nat , Nat . odd ( <nat:76> * <var:j> + <nat:4> * <var:n> + <nat:248> * <var:E> + <nat:474> * <var:N> + <nat:406> * <var:p> + <nat:320> * <var:K> + <nat:113> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:474> = true ) . { auto . } assert ( <genH> : Nat . even <nat:4> = true ) . { auto . } assert ( <genH> : Nat . even <nat:320> = true ) . { auto . } assert ( <genH> : Nat . even <nat:248> = true ) . { auto . } assert ( <genH> : Nat . even <nat:76> = true ) . { auto . } assert ( <genH> : Nat . even <nat:406> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:474> * <var:N> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:4> * <var:n> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:320> * <var:K> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:248> * <var:E> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:76> * <var:j> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:406> * <var:p> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:76> * <var:j> + <nat:4> * <var:n> + <nat:248> * <var:E> + <nat:474> * <var:N> + <nat:406> * <var:p> + <nat:320> * <var:K> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } assert ( <genH> : Nat . odd <nat:113> = true ) . { auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . rewrite <genH> . auto . Qed . 