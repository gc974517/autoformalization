\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} The positive integer <nat:4989600> is the multiplication between numbers $ <var:u> $ , $ <var:Y> $ , $ <var:d> $ , $ <var:X> $ , $ <var:U> $ , $ <var:v> $ , $ <var:t> $ , $ <var:j> $ and $ <var:h> \in \mathbb{N} $ such that $ <var:v> $ , $ <var:X> $ , $ <var:d> $ , $ <var:Y> $ , $ <var:t> $ , $ <var:h> $ , $ <var:j> $ , $ <var:U> $ and $ <var:u> \geq <nat:2> $ . \end{theorem} \begin{proof} Take $ <var:u> = <nat:3> $ , $ <var:h> = <nat:7> $ , $ <var:j> = <nat:9> $ , $ <var:Y> = <nat:2> $ , $ <var:t> = <nat:4> $ , $ <var:X> = <nat:11> $ , $ <var:U> = <nat:6> $ , $ <var:v> = <nat:5> $ and $ <var:d> = <nat:10> $ . We justify the thesis holds considering In view of $ <var:Y> = <nat:2> $ , $ <var:X> = <nat:11> $ , $ <var:h> = <nat:7> $ , $ <var:d> = <nat:10> $ , $ <var:u> = <nat:3> $ , $ <var:v> = <nat:5> $ , $ <var:U> = <nat:6> $ , $ <var:j> = <nat:9> $ , and $ <var:t> = <nat:4> $ are larger than or equivalent to <nat:2> . As a result , $ <var:X> * <var:j> * <var:u> * <var:d> * <var:v> * <var:h> * <var:U> * <var:t> * <var:Y> = <nat:4989600> $ is verified . \end{proof} \end{document} 
~
Require Import Lia . Theorem <genP:1> : exists <var:u> <var:Y> <var:d> <var:X> <var:U> <var:v> <var:t> <var:j> <var:h> : nat , ( <nat:4989600> = <var:u> * <var:Y> * <var:d> * <var:X> * <var:U> * <var:v> * <var:t> * <var:j> * <var:h> ) /\ ( <var:v> >= <nat:2> ) /\ ( <var:X> >= <nat:2> ) /\ ( <var:d> >= <nat:2> ) /\ ( <var:Y> >= <nat:2> ) /\ ( <var:t> >= <nat:2> ) /\ ( <var:h> >= <nat:2> ) /\ ( <var:j> >= <nat:2> ) /\ ( <var:U> >= <nat:2> ) /\ ( <var:u> >= <nat:2> ) . Proof . exists <nat:3> . exists <nat:2> . exists <nat:10> . exists <nat:11> . exists <nat:6> . exists <nat:5> . exists <nat:4> . exists <nat:9> . exists <nat:7> . assert ( <genH> : <nat:2> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:11> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:7> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:10> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:3> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:5> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:6> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:9> >= <nat:2> ) . { lia . } assert ( <genH> : <nat:4> >= <nat:2> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 