\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} For any integers $ <var:B> $ , $ <var:C> $ , $ <var:t> $ , $ <var:p> $ , $ <var:b> $ , and $ <var:Y> $ the formula $ <var:B> \cdot <nat:36> + <nat:228> \cdot <var:t> + <var:Y> \cdot <nat:20> + <nat:321> + <nat:386> \cdot <var:C> + <var:p> \cdot <nat:2> + <var:b> \cdot <nat:212> $ will be odd . \end{theorem} \begin{proof} The totaling of an even number in $ \mathbb{N} $ with an odd integer is guaranteed to be an odd number in $ \mathbb{Z}^+ $ . The terms $ <var:C> <nat:386> $ , $ <var:p> <nat:2> $ , plus $ <var:B> <nat:36> $ are clearly even . Remember that the pairs $ <nat:20> <var:Y> $ additionally $ <var:b> <nat:212> $ will be even elements of $ \mathbb{N} $ from the fact the multiplication between an even number in $ \mathbb{N} $ with any number in $ \mathbb{N} $ is instrinsically an even number in $ \mathbb{N} $ . Notice $ <nat:228> <var:t> $ is known as even . This is true since multiplying of an even number in $ \mathbb{Z}^+ $ and a number in $ \mathbb{Z}^+ $ will be instrinsically an even natural number . It can be shown that the summation $ <var:t> \cdot <nat:228> + <nat:212> \cdot <var:b> + <var:p> \cdot <nat:2> + <nat:321> + <nat:36> \cdot <var:B> + <var:Y> \cdot <nat:20> + <nat:386> \cdot <var:C> $ must be odd . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:B> <var:C> <var:t> <var:p> <var:b> <var:Y> : nat , Nat . odd ( <nat:36> * <var:B> + <nat:228> * <var:t> + <nat:20> * <var:Y> + <nat:386> * <var:C> + <nat:2> * <var:p> + <nat:212> * <var:b> + <nat:321> ) = true . Proof . intros . rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . assert ( <genH> : Nat . even ( <nat:386> * <var:C> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:2> * <var:p> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:36> * <var:B> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:20> * <var:Y> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:212> * <var:b> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:228> * <var:t> ) = true ) . { rewrite Nat . even_mul . auto . } rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 