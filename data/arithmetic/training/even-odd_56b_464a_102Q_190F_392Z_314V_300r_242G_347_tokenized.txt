\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:Z> \cdot <nat:392> + <var:Q> \cdot <nat:102> + <var:b> \cdot <nat:56> + <nat:242> \cdot <var:G> + <var:a> \cdot <nat:464> + <var:F> \cdot <nat:190> + <nat:314> \cdot <var:V> + <nat:300> \cdot <var:r> + <nat:347> $ is odd assuming $ <var:Z> $ , $ <var:b> $ , $ <var:F> $ , $ <var:Q> $ , $ <var:G> $ , $ <var:a> $ , $ <var:r> $ , and $ <var:V> $ . \end{theorem} \begin{proof} We show the sum $ <var:b> \cdot <nat:56> + <nat:464> \cdot <var:a> + <nat:102> \cdot <var:Q> + <var:F> \cdot <nat:190> + <nat:392> \cdot <var:Z> + <var:V> \cdot <nat:314> + <nat:347> + <var:r> \cdot <nat:300> + <nat:242> \cdot <var:G> $ is guaranteed to be odd . Notice that the products $ <var:V> \cdot <nat:314> $ , $ <var:Z> \cdot <nat:392> $ , $ <nat:102> \cdot <var:Q> $ , $ <nat:242> \cdot <var:G> $ , $ <var:b> \cdot <nat:56> $ , and likewise $ <var:r> \cdot <nat:300> $ are known to be even . The product $ <nat:190> \cdot <var:F> $ is known as even because taking the product of an even integer and an arbitrary natural is an even element of $ \mathbb{Z}^+ $ . The term $ <var:a> \cdot <nat:464> $ is obviously even . This fact is proven as a consequence that taking the product of an even number in $ \mathbb{Z}^+ $ and any integer is guaranteed to be even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:Z> <var:b> <var:F> <var:Q> <var:G> <var:a> <var:r> <var:V> : nat , Nat . odd ( <nat:392> * <var:Z> + <nat:102> * <var:Q> + <nat:56> * <var:b> + <nat:242> * <var:G> + <nat:464> * <var:a> + <nat:190> * <var:F> + <nat:314> * <var:V> + <nat:300> * <var:r> + <nat:347> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:314> * <var:V> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:392> * <var:Z> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:102> * <var:Q> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:242> * <var:G> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:56> * <var:b> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:300> * <var:r> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:190> * <var:F> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:464> * <var:a> ) = true ) . { rewrite Nat . even_mul . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 