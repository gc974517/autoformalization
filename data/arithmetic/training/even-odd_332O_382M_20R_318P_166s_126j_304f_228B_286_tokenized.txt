\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Using all $ <var:O> $ , $ <var:f> $ , $ <var:s> $ , $ <var:j> $ , $ <var:P> $ , $ <var:R> $ , $ <var:M> $ , and $ <var:B> $ the summation $ <var:s> \cdot <nat:166> + <nat:228> \cdot <var:B> + <var:f> \cdot <nat:304> + <var:R> \cdot <nat:20> + <nat:382> \cdot <var:M> + <nat:318> \cdot <var:P> + <var:O> \cdot <nat:332> + <var:j> \cdot <nat:126> + <nat:286> $ is even . \end{theorem} \begin{proof} Observe that $ <nat:286> $ is trivially an even number . Remember the summation between even numbers in $ \mathbb{N} $ concurrently will be even . The result is true from the knowledge $ <var:O> \times <nat:332> + <var:P> \times <nat:318> + <var:f> \times <nat:304> + <var:s> \times <nat:166> + <var:j> \times <nat:126> + <nat:228> \times <var:B> + <var:M> \times <nat:382> + <nat:20> \times <var:R> $ is obviously even . What's more , the integers $ <nat:332> $ , $ <nat:318> $ , $ <nat:304> $ , $ <nat:166> $ , $ <nat:126> $ , $ <nat:228> $ , $ <nat:382> $ , additionally $ <nat:20> $ must be even . So , the products $ <nat:332> <var:O> $ , $ <var:P> <nat:318> $ , $ <nat:304> <var:f> $ , $ <nat:166> <var:s> $ , $ <nat:126> <var:j> $ , $ <nat:228> <var:B> $ , $ <var:M> <nat:382> $ , in addition to $ <nat:20> <var:R> $ must be even also . The summation $ <nat:332> * <var:O> + <nat:382> * <var:M> + <nat:20> * <var:R> + <nat:318> * <var:P> + <var:s> * <nat:166> + <var:j> * <nat:126> + <nat:304> * <var:f> + <nat:228> * <var:B> $ is even because the summing of even elements of $ \mathbb{N} $ and an even number in $ \mathbb{N} $ must be an even number in $ \mathbb{N} $ in addition to because taking the product of even numbers with some natural number is even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:O> <var:f> <var:s> <var:j> <var:P> <var:R> <var:M> <var:B> : nat , Nat . even ( <nat:166> * <var:s> + <nat:228> * <var:B> + <nat:304> * <var:f> + <nat:20> * <var:R> + <nat:382> * <var:M> + <nat:318> * <var:P> + <nat:332> * <var:O> + <nat:126> * <var:j> + <nat:286> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:286> = true ) . { auto . } rewrite Nat . even_add . assert ( <genH> : Nat . even <nat:332> = true ) . { auto . } assert ( <genH> : Nat . even <nat:318> = true ) . { auto . } assert ( <genH> : Nat . even <nat:304> = true ) . { auto . } assert ( <genH> : Nat . even <nat:166> = true ) . { auto . } assert ( <genH> : Nat . even <nat:126> = true ) . { auto . } assert ( <genH> : Nat . even <nat:228> = true ) . { auto . } assert ( <genH> : Nat . even <nat:382> = true ) . { auto . } assert ( <genH> : Nat . even <nat:20> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:332> * <var:O> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:318> * <var:P> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:304> * <var:f> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:166> * <var:s> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:126> * <var:j> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:228> * <var:B> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:382> * <var:M> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:20> * <var:R> ) = true ) . { rewrite Nat . even_mul . rewrite <genH> . auto . } assert ( <genH> : Nat . even ( <nat:166> * <var:s> + <nat:228> * <var:B> + <nat:304> * <var:f> + <nat:20> * <var:R> + <nat:382> * <var:M> + <nat:318> * <var:P> + <nat:332> * <var:O> + <nat:126> * <var:j> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite <genH> . rewrite <genH> . auto . Qed . 