\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <var:p> \cdot <nat:434> + <nat:68> \cdot <var:q> + <var:R> \cdot <nat:58> + <var:i> \cdot <nat:66> + <nat:38> \cdot <var:F> + <var:t> \cdot <nat:18> + <nat:411> $ will be odd . \end{theorem} \begin{proof} We verify the theorem holds . $ <nat:66> <var:i> + <nat:18> <var:t> + <nat:68> <var:q> + <nat:38> <var:F> + <nat:434> <var:p> + <nat:411> + <nat:58> <var:R> $ is odd from the knowledge the summation $ <var:F> * <nat:38> + <nat:68> * <var:q> + <var:p> * <nat:434> + <var:i> * <nat:66> + <var:R> * <nat:58> + <nat:18> * <var:t> $ is known to be even . Observe the integers $ <nat:434> $ , $ <nat:66> $ , $ <nat:38> $ , $ <nat:18> $ , additionally $ <nat:58> $ are even numbers in $ \mathbb{Z}^+ $ The whole number $ <nat:68> $ is obviously an even integer As a consequence that the summation of even elements of $ \mathbb{N} $ and even numbers is guaranteed to be even , our claim holds . Notice the adding between an even number and an odd number must be itself an odd element of $ \mathbb{Z}^+ $ . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:p> <var:q> <var:R> <var:i> <var:F> <var:t> : nat , Nat . odd ( <nat:434> * <var:p> + <nat:68> * <var:q> + <nat:58> * <var:R> + <nat:66> * <var:i> + <nat:38> * <var:F> + <nat:18> * <var:t> + <nat:411> ) = true . Proof . intros . assert ( <genH> : Nat . even <nat:434> = true ) . { auto . } assert ( <genH> : Nat . even <nat:66> = true ) . { auto . } assert ( <genH> : Nat . even <nat:38> = true ) . { auto . } assert ( <genH> : Nat . even <nat:18> = true ) . { auto . } assert ( <genH> : Nat . even <nat:58> = true ) . { auto . } assert ( <genH> : Nat . even <nat:68> = true ) . { auto . } assert ( <genH> : Nat . even ( <nat:434> * <var:p> + <nat:68> * <var:q> + <nat:58> * <var:R> + <nat:66> * <var:i> + <nat:38> * <var:F> + <nat:18> * <var:t> ) = true ) . { repeat rewrite Nat . even_add . repeat rewrite Nat . even_mul . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . auto . Qed . 