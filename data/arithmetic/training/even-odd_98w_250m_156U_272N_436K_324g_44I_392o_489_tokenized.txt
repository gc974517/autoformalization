\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ <nat:489> + <var:N> * <nat:272> + <var:U> * <nat:156> + <nat:324> * <var:g> + <nat:436> * <var:K> + <var:m> * <nat:250> + <var:I> * <nat:44> + <var:o> * <nat:392> + <nat:98> * <var:w> $ is guaranteed to be odd taking all variables $ <var:N> $ , $ <var:I> $ , $ <var:g> $ , $ <var:m> $ , $ <var:o> $ , $ <var:K> $ , $ <var:U> $ , and $ <var:w> $ . \end{theorem} \begin{proof} The adding of even whole numbers successively and an odd number will be odd . The expression $ <nat:98> * <var:w> + <var:N> * <nat:272> + <var:U> * <nat:156> + <var:o> * <nat:392> + <nat:324> * <var:g> + <var:m> * <nat:250> + <nat:44> * <var:I> + <nat:489> + <var:K> * <nat:436> $ is obviously odd from the knowledge $ <nat:436> \times <var:K> + <var:g> \times <nat:324> + <var:m> \times <nat:250> + <var:I> \times <nat:44> + <nat:98> \times <var:w> + <nat:392> \times <var:o> + <nat:272> \times <var:N> + <var:U> \times <nat:156> $ is guaranteed to be even . It can be justified that $ <nat:98> \cdot <var:w> + <var:m> \cdot <nat:250> + <nat:156> \cdot <var:U> + <nat:272> \cdot <var:N> + <nat:436> \cdot <var:K> + <var:g> \cdot <nat:324> + <nat:489> + <nat:44> \cdot <var:I> + <nat:392> \cdot <var:o> $ is guaranteed to be odd . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:N> <var:I> <var:g> <var:m> <var:o> <var:K> <var:U> <var:w> : nat , Nat . odd ( <nat:272> * <var:N> + <nat:156> * <var:U> + <nat:324> * <var:g> + <nat:436> * <var:K> + <nat:250> * <var:m> + <nat:44> * <var:I> + <nat:392> * <var:o> + <nat:98> * <var:w> + <nat:489> ) = true . Proof . intros . rewrite Nat . odd_add . assert ( <genH> : Nat . even ( <nat:272> * <var:N> + <nat:156> * <var:U> + <nat:324> * <var:g> + <nat:436> * <var:K> + <nat:250> * <var:m> + <nat:44> * <var:I> + <nat:392> * <var:o> + <nat:98> * <var:w> ) = true ) . { repeat rewrite Nat . even_add . repeat rewrite Nat . even_mul . auto . } rewrite <- Nat . negb_even . rewrite <genH> . auto . Qed . 