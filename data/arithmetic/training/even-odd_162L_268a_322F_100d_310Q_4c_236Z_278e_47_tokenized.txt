\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} Given some natural terms $ <var:c> $ , $ <var:d> $ , $ <var:Q> $ , $ <var:Z> $ , $ <var:e> $ , $ <var:F> $ , $ <var:L> $ , and $ <var:a> $ the summation $ <var:L> * <nat:162> + <nat:47> + <var:a> * <nat:268> + <nat:322> * <var:F> + <nat:100> * <var:d> + <nat:310> * <var:Q> + <var:c> * <nat:4> + <var:Z> * <nat:236> + <var:e> * <nat:278> $ is guaranteed to be odd . \end{theorem} \begin{proof} The addition of an even integer with an odd element of $ \mathbb{Z}^+ $ is guaranteed to be odd . Take note the pairs $ <nat:162> \cdot <var:L> $ , $ <var:e> \cdot <nat:278> $ , $ <nat:268> \cdot <var:a> $ , $ <var:Z> \cdot <nat:236> $ , $ <nat:4> \cdot <var:c> $ , as well as $ <var:F> \cdot <nat:322> $ are trivially even by reason that the multiplication of an even natural and a whole number is an even natural number . Remember the pair $ <var:Q> \cdot <nat:310> $ is guaranteed to be even . Recall that the product $ <nat:100> \cdot <var:d> $ is trivially even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:c> <var:d> <var:Q> <var:Z> <var:e> <var:F> <var:L> <var:a> : nat , Nat . odd ( <nat:162> * <var:L> + <nat:268> * <var:a> + <nat:322> * <var:F> + <nat:100> * <var:d> + <nat:310> * <var:Q> + <nat:4> * <var:c> + <nat:236> * <var:Z> + <nat:278> * <var:e> + <nat:47> ) = true . Proof . intros . rewrite Nat . odd_add . rewrite <- Nat . negb_even . repeat rewrite Nat . even_add . assert ( <genH> : Nat . even ( <nat:162> * <var:L> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:278> * <var:e> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:268> * <var:a> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:236> * <var:Z> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:4> * <var:c> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:322> * <var:F> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:310> * <var:Q> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:100> * <var:d> ) = true ) . { rewrite Nat . even_mul . auto . } rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . Qed . 