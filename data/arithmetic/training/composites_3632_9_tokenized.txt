\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} $ \exists <var:r> $ , $ <var:W> $ , $ <var:f> $ , $ <var:y> $ , $ <var:k> $ , $ <var:L> $ , $ <var:H> $ , $ <var:h> $ , $ <var:V> $ so that $ <var:W> $ , $ <var:r> $ , $ <var:f> $ , $ <var:y> $ , $ <var:k> $ , $ <var:L> $ , $ <var:V> $ , $ <var:H> $ , and $ <var:h> $ more than <nat:1> as well as satisfying the condition that the positive integer <nat:17740800> is the product between positive integers $ <var:r> $ , $ <var:W> $ , $ <var:f> $ , $ <var:y> $ , $ <var:k> $ , $ <var:L> $ , $ <var:H> $ , $ <var:h> $ and $ <var:V> $ . \end{theorem} \begin{proof} Observe that $ <nat:17740800> = <nat:8> \times <nat:2> \times <nat:11> \times <nat:7> \times <nat:6> \times <nat:4> \times <nat:12> \times <nat:5> \times <nat:10> = <var:L> \times <var:f> \times <var:r> \times <var:V> \times <var:k> \times <var:W> \times <var:y> \times <var:h> \times <var:H> $ . Further note $ <nat:6> $ , $ <nat:4> $ , $ <nat:11> $ , $ <nat:8> $ , $ <nat:2> $ , $ <nat:12> $ , $ <nat:5> $ , $ <nat:10> $ and $ <nat:7> > <nat:1> $ . \end{proof} \end{document} 
~
Require Import Lia . Theorem <genP:1> : exists <var:r> <var:W> <var:f> <var:y> <var:k> <var:L> <var:H> <var:h> <var:V> : nat , ( <var:W> > <nat:1> ) /\ ( <var:r> > <nat:1> ) /\ ( <var:f> > <nat:1> ) /\ ( <var:y> > <nat:1> ) /\ ( <var:k> > <nat:1> ) /\ ( <var:L> > <nat:1> ) /\ ( <var:V> > <nat:1> ) /\ ( <var:H> > <nat:1> ) /\ ( <var:h> > <nat:1> ) /\ ( <nat:17740800> = <var:r> * <var:W> * <var:f> * <var:y> * <var:k> * <var:L> * <var:H> * <var:h> * <var:V> ) . Proof . exists <nat:11> . exists <nat:4> . exists <nat:2> . exists <nat:12> . exists <nat:6> . exists <nat:8> . exists <nat:10> . exists <nat:5> . exists <nat:7> . assert ( <genH> : <nat:6> > <nat:1> ) . { lia . } assert ( <genH> : <nat:4> > <nat:1> ) . { lia . } assert ( <genH> : <nat:11> > <nat:1> ) . { lia . } assert ( <genH> : <nat:8> > <nat:1> ) . { lia . } assert ( <genH> : <nat:2> > <nat:1> ) . { lia . } assert ( <genH> : <nat:12> > <nat:1> ) . { lia . } assert ( <genH> : <nat:5> > <nat:1> ) . { lia . } assert ( <genH> : <nat:10> > <nat:1> ) . { lia . } assert ( <genH> : <nat:7> > <nat:1> ) . { lia . } repeat split . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . all : try apply <genH> . Qed . 