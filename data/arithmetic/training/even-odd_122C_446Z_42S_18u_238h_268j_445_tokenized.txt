\documentclass[12pt]{article} \usepackage{amsthm,amsfonts,amssymb} \newtheorem{theorem}{Theorem} \begin{document} \begin{theorem} For every unknowns $ <var:C> $ , $ <var:u> $ , $ <var:S> $ , $ <var:h> $ , $ <var:Z> $ , and $ <var:j> $ the sum $ <nat:446> <var:Z> + <nat:445> + <nat:122> <var:C> + <nat:268> <var:j> + <var:h> <nat:238> + <var:u> <nat:18> + <var:S> <nat:42> $ must be odd . \end{theorem} \begin{proof} We demonstrate the result is true . $ <nat:122> \times <var:C> + <nat:446> \times <var:Z> + <var:S> \times <nat:42> + <var:u> \times <nat:18> + <nat:238> \times <var:h> + <var:j> \times <nat:268> $ is clearly even . The products $ <var:Z> \cdot <nat:446> $ , $ <nat:238> \cdot <var:h> $ , $ <nat:42> \cdot <var:S> $ , in addition to $ <var:j> \cdot <nat:268> $ are even numbers . The product $ <var:C> \cdot <nat:122> $ is guaranteed to be an even positive integer . $ <var:u> \cdot <nat:18> $ is obviously even . Because the summation between even elements of $ \mathbb{N} $ with even numbers must be in itself an even whole number , and moreover from the knowledge the product of an even number and some element of $ \mathbb{Z}^+ $ must be even . \end{proof} \end{document} 
~
Require Import Arith . Theorem <genP:1> : forall <var:C> <var:u> <var:S> <var:h> <var:Z> <var:j> : nat , Nat . odd ( <nat:446> * <var:Z> + <nat:122> * <var:C> + <nat:268> * <var:j> + <nat:238> * <var:h> + <nat:18> * <var:u> + <nat:42> * <var:S> + <nat:445> ) = true . Proof . intros . assert ( <genH> : Nat . even ( <nat:446> * <var:Z> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:238> * <var:h> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:42> * <var:S> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:268> * <var:j> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:122> * <var:C> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:18> * <var:u> ) = true ) . { rewrite Nat . even_mul . auto . } assert ( <genH> : Nat . even ( <nat:446> * <var:Z> + <nat:122> * <var:C> + <nat:268> * <var:j> + <nat:238> * <var:h> + <nat:18> * <var:u> + <nat:42> * <var:S> ) = true ) . { repeat rewrite Nat . even_add . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . rewrite <genH> . auto . } rewrite Nat . odd_add . rewrite <- Nat . negb_even . rewrite <genH> . auto . Qed . 