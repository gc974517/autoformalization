\begin{document} \begin{definition} Consider a set of commands <def:poly> in \emph{Imp} as follows \begin{verbatim} <var:P0> := <nat:5> ; <var:X> := <var:P0> \end{verbatim} \end{definition} \begin{theorem} Allow $ <var:B> = <var:l> $ before interpreting the series of commands , then $ <var:X> = <nat:5> $ after set of commands terminates . \end{theorem} \begin{proof} The method of proof for our set of instructions can be demonstrated by typical Hoare reasoning . After , we have the environment update command giving $ <nat:5> $ toward $ <var:P0>$ . This advances the condition $ \{ <var:B> = <var:l> \} $ toward the condition $ \{ <var:B> = <var:l> \land <var:P0> = <nat:5> \} $ . This is shown to be logically sound through the assignment rule obtained from typical Hoare reasoning . Further , we see the variable binding command \verb | <var:X> := <var:P0> | . This transfers the condition $ \{ <var:B> = <var:l> \land <var:P0> = <nat:5> \} $ to $ \{ <var:B> = <var:l> \land <var:X> = <nat:5> \} $ . \end{proof} \end{document} 
~
Require Import String . From PLF Require Import Imp . From PLF Require Import Hoare . Definition <var:P0> : string := " <var:P0> " . Definition <def:poly> := <var:P0> := <nat:5> ; <var:X> := <var:P0> . Theorem <genH:poly_code_correct> : forall <var:l> : nat , {{ <var:B> = <var:l> }} <def:poly> {{ <var:X> = <nat:5> }} . Proof . intros . apply hoare_seq with ( Q := ( ( <var:B> = <var:l> /\ <var:P0> = <nat:5> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:B> = <var:l> /\ <var:X> = <nat:5> ) ) %assertion ) . all : eapply hoare_consequence_pre ; try ( apply hoare_asgn || assn_auto'' ) . Qed . 