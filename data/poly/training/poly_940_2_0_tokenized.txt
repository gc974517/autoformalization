\begin{document} \begin{definition} Consider the following series of instructions <def:poly> in \emph{Imp} such that \begin{verbatim} <var:j0> := <nat:8> ; <var:J> := <var:j0> \end{verbatim} \end{definition} \begin{theorem} Define the following code segment <def:poly> . Allow it to hold that $ <var:g> = <var:A> $ , given some $ <var:A> \in \mathbb{N} $ , prior to evaluating our set of commands , it holds that we have $ <var:J> = <nat:8> $ after set of commands executes . \end{theorem} \begin{proof} Demonstrating correctness of our series of instructions is evident using standard Hoare logic . After , we have the binding statement \verb | <var:j0> := <nat:8> ; | . This line advances the condition $ \{ <var:g> = <var:A> \} $ into the postcondition $ \{ <var:g> = <var:A> \land <var:j0> = <nat:8> \} $ . This is ensured using the assignment inference rule found in typical Hoare techniques . Advancing , we see the assignment line assigning $ <var:j0$ toward $ <var:J>$ . This forwards the precondition $ \{ <var:g> = <var:A> \land <var:j0> = <nat:8> \} $ as the condition $ \{ <var:g> = <var:A> \land <var:J> = <nat:8> \} $ . \end{proof} \end{document} 
~
Require Import String . From PLF Require Import Imp . From PLF Require Import Hoare . Definition <var:j0> : string := " <var:j0> " . Definition <def:poly> := <var:j0> := <nat:8> ; <var:J> := <var:j0> . Theorem <genH:poly_code_correct> : forall <var:A> : nat , {{ <var:g> = <var:A> }} <def:poly> {{ <var:J> = <nat:8> }} . Proof . intros . apply hoare_seq with ( Q := ( ( <var:g> = <var:A> /\ <var:j0> = <nat:8> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:g> = <var:A> /\ <var:J> = <nat:8> ) ) %assertion ) . all : eapply hoare_consequence_pre ; try ( apply hoare_asgn || assn_auto'' ) . Qed . 