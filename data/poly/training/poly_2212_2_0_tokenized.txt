\begin{document} \begin{theorem} Let the following code segment in \emph{Imp} as \begin{verbatim} <var:I0> := <nat:6> ; <var:y> := <var:I0> \end{verbatim} Allow it to be that $ <var:G> = <var:w> $ before evaluating our series of commands it follows that we see $ <var:y> = <nat:6> $ . \end{theorem} \begin{proof} Utilizing Hoare techniques gives : \begin{eqnarray} \{ <var:G> = <var:w> \} \\ <var:I0> := <nat:6> ; \\ \{ <var:G> = <var:w> \land <var:I0> = <nat:6> \} \\ <var:y> := <var:I0> \\ \{ <var:G> = <var:w> \land <var:y> = <nat:6> \} \end{eqnarray} Given the above , the set of commands has been shown correct . \end{proof} \end{document} 
~
Require Import String . From PLF Require Import Imp . From PLF Require Import Hoare . Definition <var:I0> : string := " <var:I0> " . Theorem <genH:poly_code_correct> : forall <var:w> : nat , {{ <var:G> = <var:w> }} <var:I0> := <nat:6> ; <var:y> := <var:I0> {{ <var:y> = <nat:6> }} . Proof . intros . apply hoare_seq with ( Q := ( ( <var:G> = <var:w> /\ <var:I0> = <nat:6> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:G> = <var:w> /\ <var:y> = <nat:6> ) ) %assertion ) . all : eapply hoare_consequence_pre ; try ( apply hoare_asgn || assn_auto'' ) . Qed . 