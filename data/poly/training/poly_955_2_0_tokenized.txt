\begin{document} \begin{theorem} Take the following segment of code as \begin{verbatim} <var:m0> := <nat:4> ; <var:p> := <var:m0> \end{verbatim} Given that $ <var:g> = <var:Q> $ before running our code segment it must be that $ <var:p> = <nat:4> $ . \end{theorem} \begin{proof} The proof of our list of commands can be demonstrated by usual Hoare reasoning . Advancing on , we have \[ \begin{tabular} {rcl} \{ <var:g> = <var:Q> \} & <var:m0> := <nat:4> & \{ <var:g> = <var:Q> \land <var:m0> = <nat:4> \} \\ \{ <var:g> = <var:Q> \land <var:m0> = <nat:4> \} & <var:p> := <var:m0& \{ <var:g> = <var:Q> \land <var:p> = <nat:4> \} \end{tabular} \end{proof} \end{document} 
~
Require Import String . From PLF Require Import Imp . From PLF Require Import Hoare . Definition <var:m0> : string := " <var:m0> " . Theorem <genH:poly_code_correct> : forall <var:Q> : nat , {{ <var:g> = <var:Q> }} <var:m0> := <nat:4> ; <var:p> := <var:m0> {{ <var:p> = <nat:4> }} . Proof . intros . apply hoare_seq with ( Q := ( ( <var:g> = <var:Q> /\ <var:m0> = <nat:4> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:g> = <var:Q> /\ <var:p> = <nat:4> ) ) %assertion ) . all : eapply hoare_consequence_pre ; try ( apply hoare_asgn || assn_auto'' ) . Qed . 