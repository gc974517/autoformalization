\begin{document} \begin{theorem} Let the following code segment in \emph{Imp} as follows \begin{verbatim} <var:a0> := <nat:4> ; <var:z> := <var:a0> \end{verbatim} Allowing $ <var:C> = <var:m> $ --- with some natural coefficients $ <var:m> $ --- before the evaluation of our series of instructions , it follows that we have $ <var:z> = <nat:4> $ . \end{theorem} \begin{proof} Utilizing usual Hoare techniques gives us : \begin{eqnarray} \{ <var:C> = <var:m> \} \\ <var:a0> := <nat:4> ; \\ \{ <var:C> = <var:m> \land <var:a0> = <nat:4> \} \\ <var:z> := <var:a0> \\ \{ <var:C> = <var:m> \land <var:z> = <nat:4> \} \end{eqnarray} Therefore , the code segment has been proven correct . \end{proof} \end{document} 
~
Require Import String . From PLF Require Import Imp . From PLF Require Import Hoare . Definition <var:a0> : string := " <var:a0> " . Theorem <genH:poly_code_correct> : forall <var:m> : nat , {{ <var:C> = <var:m> }} <var:a0> := <nat:4> ; <var:z> := <var:a0> {{ <var:z> = <nat:4> }} . Proof . intros . apply hoare_seq with ( Q := ( ( <var:C> = <var:m> /\ <var:a0> = <nat:4> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:C> = <var:m> /\ <var:z> = <nat:4> ) ) %assertion ) . all : eapply hoare_consequence_pre ; try ( apply hoare_asgn || assn_auto'' ) . Qed . 