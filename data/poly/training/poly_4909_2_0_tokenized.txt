\begin{document} \begin{theorem} Consider a list of instructions : \begin{verbatim} <var:G0> := <nat:8> ; <var:b> := <var:G0> \end{verbatim} Given $ <var:C> = <var:r> $ ahead of executing our list of commands it follows that we have $ <var:b> = <nat:8> $ after list of commands is done . \end{theorem} \begin{proof} \begin{eqnarray} \{ <var:C> = <var:r> \} \\ <var:G0> := <nat:8> ; \\ \{ <var:C> = <var:r> \land <var:G0> = <nat:8> \} \\ <var:b> := <var:G0> \\ \{ <var:C> = <var:r> \land <var:b> = <nat:8> \} \end{eqnarray} The application of Hoare reasoning ends the proof . \end{proof} \end{document} 
~
Require Import String . From PLF Require Import Imp . From PLF Require Import Hoare . Definition <var:G0> : string := " <var:G0> " . Theorem <genH:poly_code_correct> : forall <var:r> : nat , {{ <var:C> = <var:r> }} <var:G0> := <nat:8> ; <var:b> := <var:G0> {{ <var:b> = <nat:8> }} . Proof . intros . apply hoare_seq with ( Q := ( ( <var:C> = <var:r> /\ <var:G0> = <nat:8> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:C> = <var:r> /\ <var:b> = <nat:8> ) ) %assertion ) . all : eapply hoare_consequence_pre ; try ( apply hoare_asgn || assn_auto'' ) . Qed . 