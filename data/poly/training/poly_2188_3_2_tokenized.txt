\begin{document} \begin{definition} Take a series of instructions <def:poly> in \emph{Imp} as follows \begin{verbatim} <var:z> := <nat:4> ; <var:z> := <nat:4> + <var:z> * <var:y> ; <var:z> := <nat:1> + <var:z> * <var:y> \end{verbatim} \end{definition} \begin{theorem} Take a list of instructions <def:poly> . Assume it to be that $ <var:y> = <var:Q> $ prior to the evaluation of this series of commands it holds that we have $ <var:z> = <nat:4> \cdot <var:Q> ^ <nat:2> + <nat:4> \cdot <var:Q> + <nat:1> $ . \end{theorem} \begin{proof} Showing our claim about correctness for our list of commands can be demonstrated with usual Hoare techniques . Jumping to the upcoming commands in our code , \begin{verbatim} { <var:y> = <var:Q> } <var:z> := <nat:4> { <var:y> = <var:Q> \land <var:z> = <nat:4> } { <var:y> = <var:Q> \land <var:z> = <nat:4> } <var:z> := <nat:4> + <var:z> * <var:y> { <var:y> = <var:Q> \land <var:z> = <nat:4> \cdot <var:Q> + <nat:4> } { <var:y> = <var:Q> \land <var:z> = <nat:4> \cdot <var:Q> + <nat:4> } <var:z> := <nat:1> + <var:z> * <var:y{ <var:y> = <var:Q> \land <var:z> = <nat:4> \cdot <var:Q> ^ <nat:2> + <nat:4> \cdot <var:Q> + <nat:1> } \end{verbatim} This is sound with the environment update rule from usual Hoare logic . \end{proof} \end{document} 
~
Require Import String . From PLF Require Import Imp . From PLF Require Import Hoare . Definition <def:poly> := <var:z> := <nat:4> ; <var:z> := <nat:4> + <var:z> * <var:y> ; <var:z> := <nat:1> + <var:z> * <var:y> . Theorem <genH:poly_code_correct> : forall <var:Q> : nat , {{ <var:y> = <var:Q> }} <def:poly> {{ <var:z> = <nat:4> * <var:Q> ^ <nat:2> + <nat:4> * <var:Q> + <nat:1> }} . Proof . intros . apply hoare_seq with ( Q := ( ( <var:y> = <var:Q> /\ <var:z> = <nat:4> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:y> = <var:Q> /\ <var:z> = <nat:4> * <var:Q> + <nat:4> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:y> = <var:Q> /\ <var:z> = <nat:4> * <var:Q> ^ <nat:2> + <nat:4> * <var:Q> + <nat:1> ) ) %assertion ) . all : eapply hoare_consequence_pre ; try ( apply hoare_asgn || assn_auto'' ) . Qed . 