\begin{document} \begin{theorem} Let the following series of instructions such that \begin{verbatim} <var:I0> := <nat:1> ; <var:I1> := <nat:4> ; <var:I1> := <var:I1> * <var:i> ; <var:R> := <var:I1> ; <var:R> := <var:R> + <var:I0> \end{verbatim} Assuming that we have $ <var:i> = <var:u> $ prior to evaluating our list of commands it holds that $ <var:R> = <nat:4> \times <var:u> + <nat:1> $ when series of instructions has terminated . \end{theorem} \begin{proof} Proving correctness for this series of commands is demonstrated by Hoare techniques . Focusing on the upcoming line contained in the series of instructions , we see the command defining $ <nat:1> $ to $ <var:I0>$ . This statement takes the precondition $ \{ <var:i> = <var:u> \} $ toward the postcondition $ \{ <var:i> = <var:u> \land <var:I0> = <nat:1> \} $ . Stepping through , we have the binding statement \verb | <var:I1> := <nat:4> ; | . This line redefines the condition $ \{ <var:i> = <var:u> \land <var:I0> = <nat:1> \} $ to the condition $ \{ <var:i> = <var:u> \land <var:I0> = <nat:1> \land <var:I1> = <nat:4> \} $ . Now , we have the environment update statement \verb | <var:I1> := <var:I1> * <var:i> ; | . This line moves $ \{ <var:i> = <var:u> \land <var:I0> = <nat:1> \land <var:I1> = <nat:4> \} $ toward the condition $ \{ <var:i> = <var:u> \land <var:I0> = <nat:1> \land <var:I1> = <nat:4> \cdot <var:u> \} $ . This is guaranteed with the assignment law of usual Hoare techniques . Keeping momentum , we see the binding line \verb | <var:R> := <var:I1> ; | . This takes the condition $ \{ <var:i> = <var:u> \land <var:I0> = <nat:1> \land <var:I1> = <nat:4> \cdot <var:u> \} $ as the postcondition $ \{ <var:i> = <var:u> \land <var:I0> = <nat:1> \land <var:R> = <nat:4> \cdot <var:u> \} $ . This is ensured with the assignment rule defined in Hoare reasoning . Moving on to the next step , we see the binding command letting $ <var:R> + <var:I0$ toward $ <var:R>$ . This forwards the precondition $ \{ <var:i> = <var:u> \land <var:I0> = <nat:1> \land <var:R> = <nat:4> \cdot <var:u> \} $ as the postcondition $ \{ <var:i> = <var:u> \land <var:R> = <nat:4> \cdot <var:u> + <nat:1> \} $ . This is deduced using the assignment rule defined by standard Hoare reasoning . \end{proof} \end{document} 
~
Require Import String . From PLF Require Import Imp . From PLF Require Import Hoare . Definition <var:I0> : string := " <var:I0> " . Definition <var:I1> : string := " <var:I1> " . Theorem <genH:poly_code_correct> : forall <var:u> : nat , {{ <var:i> = <var:u> }} <var:I0> := <nat:1> ; <var:I1> := <nat:4> ; <var:I1> := <var:I1> * <var:i> ; <var:R> := <var:I1> ; <var:R> := <var:R> + <var:I0> {{ <var:R> = <nat:4> * <var:u> + <nat:1> }} . Proof . intros . apply hoare_seq with ( Q := ( ( <var:i> = <var:u> /\ <var:I0> = <nat:1> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:i> = <var:u> /\ <var:I0> = <nat:1> /\ <var:I1> = <nat:4> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:i> = <var:u> /\ <var:I0> = <nat:1> /\ <var:I1> = <nat:4> * <var:u> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:i> = <var:u> /\ <var:I0> = <nat:1> /\ <var:R> = <nat:4> * <var:u> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:i> = <var:u> /\ <var:R> = <nat:4> * <var:u> + <nat:1> ) ) %assertion ) . all : eapply hoare_consequence_pre ; try ( apply hoare_asgn || assn_auto'' ) . Qed . 