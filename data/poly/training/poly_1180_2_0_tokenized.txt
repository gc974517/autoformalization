\begin{document} \begin{theorem} Let the following list of instructions in \emph{Imp} such that \begin{verbatim} <var:u0> := <nat:1> ; <var:Q> := <var:u0> \end{verbatim} Assuming that we have $ <var:Y> = <var:f> $ prior to executing this segment of code it holds that we have $ <var:Q> = <nat:1> $ . \end{theorem} \begin{proof} The argument for this set of commands is accomplished through Hoare reasoning . Focusing on the subsequent statements in the segment of code , we see \[ \begin{tabular} {rcl} \{ <var:Y> = <var:f> \} & <var:u0> := <nat:1> & \{ <var:Y> = <var:f> \land <var:u0> = <nat:1> \} \\ \{ <var:Y> = <var:f> \land <var:u0> = <nat:1> \} & <var:Q> := <var:u0& \{ <var:Y> = <var:f> \land <var:Q> = <nat:1> \} \end{tabular} \end{proof} \end{document} 
~
Require Import String . From PLF Require Import Imp . From PLF Require Import Hoare . Definition <var:u0> : string := " <var:u0> " . Theorem <genH:poly_code_correct> : forall <var:f> : nat , {{ <var:Y> = <var:f> }} <var:u0> := <nat:1> ; <var:Q> := <var:u0> {{ <var:Q> = <nat:1> }} . Proof . intros . apply hoare_seq with ( Q := ( ( <var:Y> = <var:f> /\ <var:u0> = <nat:1> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:Y> = <var:f> /\ <var:Q> = <nat:1> ) ) %assertion ) . all : eapply hoare_consequence_pre ; try ( apply hoare_asgn || assn_auto'' ) . Qed . 