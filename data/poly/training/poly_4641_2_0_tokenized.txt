\begin{document} \begin{definition} Take the following code <def:poly> in \emph{Imp} : \begin{verbatim} <var:O0> := <nat:7> ; <var:Z> := <var:O0> \end{verbatim} \end{definition} \begin{theorem} Let the following series of commands <def:poly> . Given that we have $ <var:W> = <var:u> $ prior to the execution of the list of instructions , it follows that we see $ <var:Z> = <nat:7> $ when program has terminated . \end{theorem} \begin{proof} \begin{eqnarray} \{ <var:W> = <var:u> \} \\ <var:O0> := <nat:7> ; \\ \{ <var:W> = <var:u> \land <var:O0> = <nat:7> \} \\ <var:Z> := <var:O0> \\ \{ <var:W> = <var:u> \land <var:Z> = <nat:7> \} \end{eqnarray} Using usual Hoare reasoning ends the proof . \end{proof} \end{document} 
~
Require Import String . From PLF Require Import Imp . From PLF Require Import Hoare . Definition <var:O0> : string := " <var:O0> " . Definition <def:poly> := <var:O0> := <nat:7> ; <var:Z> := <var:O0> . Theorem <genH:poly_code_correct> : forall <var:u> : nat , {{ <var:W> = <var:u> }} <def:poly> {{ <var:Z> = <nat:7> }} . Proof . intros . apply hoare_seq with ( Q := ( ( <var:W> = <var:u> /\ <var:O0> = <nat:7> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:W> = <var:u> /\ <var:Z> = <nat:7> ) ) %assertion ) . all : eapply hoare_consequence_pre ; try ( apply hoare_asgn || assn_auto'' ) . Qed . 