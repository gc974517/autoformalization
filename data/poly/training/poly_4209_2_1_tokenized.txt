\begin{document} \begin{theorem} Take a program in \emph{Imp} as \begin{verbatim} <var:B0> := <nat:2> ; <var:J> := <var:B0> \end{verbatim} Assume that we have $ <var:x> = <var:y> $ , for some natural coefficients $ <var:y> $ , ahead of running the program it follows that we have $ <var:J> = <nat:2> $ . \end{theorem} \begin{proof} \begin{eqnarray} \{ <var:x> = <var:y> \} \\ <var:B0> := <nat:2> ; \\ \{ <var:x> = <var:y> \land <var:B0> = <nat:2> \} \\ <var:J> := <var:B0> \\ \{ <var:x> = <var:y> \land <var:J> = <nat:2> \} \end{eqnarray} Using Hoare reasoning completes the proof . \end{proof} \end{document} 
~
Require Import String . From PLF Require Import Imp . From PLF Require Import Hoare . Definition <var:B0> : string := " <var:B0> " . Theorem <genH:poly_code_correct> : forall <var:y> : nat , {{ <var:x> = <var:y> }} <var:B0> := <nat:2> ; <var:J> := <var:B0> {{ <var:J> = <nat:2> }} . Proof . intros . apply hoare_seq with ( Q := ( ( <var:x> = <var:y> /\ <var:B0> = <nat:2> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:x> = <var:y> /\ <var:J> = <nat:2> ) ) %assertion ) . all : eapply hoare_consequence_pre ; try ( apply hoare_asgn || assn_auto'' ) . Qed . 