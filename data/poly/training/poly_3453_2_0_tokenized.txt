\begin{document} \begin{theorem} Take a segment of code in \emph{Imp} : \begin{verbatim} <var:C0> := <nat:5> ; <var:K> := <var:C0> \end{verbatim} Allowing for natural coefficients $ <var:j> $ that $ <var:I> = <var:j> $ prior to running our program , it must be that we have $ <var:K> = <nat:5> $ . \end{theorem} \begin{proof} \begin{eqnarray} \{ <var:I> = <var:j> \} \\ <var:C0> := <nat:5> ; \\ \{ <var:I> = <var:j> \land <var:C0> = <nat:5> \} \\ <var:K> := <var:C0> \\ \{ <var:I> = <var:j> \land <var:K> = <nat:5> \} \end{eqnarray} The application of typical Hoare logic finalizes the proof . \end{proof} \end{document} 
~
Require Import String . From PLF Require Import Imp . From PLF Require Import Hoare . Definition <var:C0> : string := " <var:C0> " . Theorem <genH:poly_code_correct> : forall <var:j> : nat , {{ <var:I> = <var:j> }} <var:C0> := <nat:5> ; <var:K> := <var:C0> {{ <var:K> = <nat:5> }} . Proof . intros . apply hoare_seq with ( Q := ( ( <var:I> = <var:j> /\ <var:C0> = <nat:5> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:I> = <var:j> /\ <var:K> = <nat:5> ) ) %assertion ) . all : eapply hoare_consequence_pre ; try ( apply hoare_asgn || assn_auto'' ) . Qed . 