\begin{document} \begin{theorem} We define a set of instructions such that \begin{verbatim} <var:Y1> := <var:G> ; <var:Y2> := <var:Y1> * <var:G> ; <var:Y3> := <var:Y2> * <var:G> ; <var:Y0> := <nat:3> ; <var:Y1> := <var:Y1> * <nat:5> ; <var:Y2> := <var:Y2> * <nat:2> ; <var:Y3> := <var:Y3> * <nat:2> ; <var:S> := <var:Y3> <var:S> := <var:S> + <var:Y2> <var:S> := <var:S> + <var:Y1> <var:S> := <var:S> + <var:Y0> \end{verbatim} Assuming it to be that $ <var:G> = <var:u> $ ( for some positive coefficients $ <var:u> $ ) ahead of interpreting the set of instructions it holds that we have $ <var:S> = <nat:2> \times <var:u> ^ <nat:3> + <nat:2> \times <var:u> ^ <nat:2> + <nat:5> \times <var:u> + <nat:3> $ . \end{theorem} \begin{proof} \begin{eqnarray} \{ <var:G> = <var:u> \} \\ <var:Y1> := <var:G> ; \\ \{ <var:G> = <var:u> \land <var:Y1> = <var:u> \} \\ <var:Y2> := <var:Y1> * <var:G> ; \\ \{ <var:G> = <var:u> \land <var:Y1> = <var:u> \land <var:Y2> = <var:u> ^ <nat:2> \} \\ <var:Y3> := <var:Y2> * <var:G> ; \\ \{ <var:G> = <var:u> \land <var:Y1> = <var:u> \land <var:Y2> = <var:u> ^ <nat:2> \land <var:Y3> = <var:u> ^ <nat:3> \} \\ <var:Y0> := <nat:3> ; \\ \{ <var:G> = <var:u> \land <var:Y1> = <var:u> \land <var:Y2> = <var:u> ^ <nat:2> \land <var:Y3> = <var:u> ^ <nat:3> \land <var:Y0> = <nat:3> \} \\ <var:Y1> := <var:Y1> * <nat:5> ; \\ \{ <var:G> = <var:u> \land <var:Y1> = <nat:5> \cdot <var:u> \land <var:Y2> = <var:u> ^ <nat:2> \land <var:Y3> = <var:u> ^ <nat:3> \land <var:Y0> = <nat:3> \} \\ <var:Y2> := <var:Y2> * <nat:2> ; \\ \{ <var:G> = <var:u> \land <var:Y1> = <nat:5> \cdot <var:u> \land <var:Y2> = <nat:2> \cdot <var:u> ^ <nat:2> \land <var:Y3> = <var:u> ^ <nat:3> \land <var:Y0> = <nat:3> \} \\ <var:Y3> := <var:Y3> * <nat:2> ; \\ \{ <var:G> = <var:u> \land <var:Y1> = <nat:5> \cdot <var:u> \land <var:Y2> = <nat:2> \cdot <var:u> ^ <nat:2> \land <var:Y3> = <nat:2> \cdot <var:u> ^ <nat:3> \land <var:Y0> = <nat:3> \} \\ <var:S> := <var:Y3> \\ \{ <var:G> = <var:u> \land <var:Y1> = <nat:5> \cdot <var:u> \land <var:Y2> = <nat:2> \cdot <var:u> ^ <nat:2> \land <var:Y0> = <nat:3> \land <var:S> = <nat:2> \cdot <var:u> ^ <nat:3> \} \\ <var:S> := <var:S> + <var:Y2> \\ \{ <var:G> = <var:u> \land <var:Y1> = <nat:5> \cdot <var:u> \land <var:Y0> = <nat:3> \land <var:S> = <nat:2> \cdot <var:u> ^ <nat:3> + <nat:2> \cdot <var:u> ^ <nat:2> \} \\ <var:S> := <var:S> + <var:Y1> \\ \{ <var:G> = <var:u> \land <var:Y0> = <nat:3> \land <var:S> = <nat:2> \cdot <var:u> ^ <nat:3> + <nat:2> \cdot <var:u> ^ <nat:2> + <nat:5> \cdot <var:u> \} \\ <var:S> := <var:S> + <var:Y0> \\ \{ <var:G> = <var:u> \land <var:S> = <nat:2> \cdot <var:u> ^ <nat:3> + <nat:2> \cdot <var:u> ^ <nat:2> + <nat:5> \cdot <var:u> + <nat:3> \} \end{eqnarray} Utilizing usual Hoare techniques resolves the argument . \end{proof} \end{document} 
~
Require Import String . From PLF Require Import Imp . From PLF Require Import Hoare . Definition <var:Y0> : string := " <var:Y0> " . Definition <var:Y1> : string := " <var:Y1> " . Definition <var:Y2> : string := " <var:Y2> " . Definition <var:Y3> : string := " <var:Y3> " . Theorem <genH:poly_code_correct> : forall <var:u> : nat , {{ <var:G> = <var:u> }} <var:Y1> := <var:G> ; <var:Y2> := <var:Y1> * <var:G> ; <var:Y3> := <var:Y2> * <var:G> ; <var:Y0> := <nat:3> ; <var:Y1> := <var:Y1> * <nat:5> ; <var:Y2> := <var:Y2> * <nat:2> ; <var:Y3> := <var:Y3> * <nat:2> ; <var:S> := <var:Y3> <var:S> := <var:S> + <var:Y2> <var:S> := <var:S> + <var:Y1> <var:S> := <var:S> + <var:Y0> {{ <var:S> = <nat:2> * <var:u> ^ <nat:3> + <nat:2> * <var:u> ^ <nat:2> + <nat:5> * <var:u> + <nat:3> }} . Proof . intros . apply hoare_seq with ( Q := ( ( <var:G> = <var:u> /\ <var:Y1> = <var:u> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:G> = <var:u> /\ <var:Y1> = <var:u> /\ <var:Y2> = <var:u> ^ <nat:2> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:G> = <var:u> /\ <var:Y1> = <var:u> /\ <var:Y2> = <var:u> ^ <nat:2> /\ <var:Y3> = <var:u> ^ <nat:3> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:G> = <var:u> /\ <var:Y1> = <var:u> /\ <var:Y2> = <var:u> ^ <nat:2> /\ <var:Y3> = <var:u> ^ <nat:3> /\ <var:Y0> = <nat:3> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:G> = <var:u> /\ <var:Y1> = <nat:5> * <var:u> /\ <var:Y2> = <var:u> ^ <nat:2> /\ <var:Y3> = <var:u> ^ <nat:3> /\ <var:Y0> = <nat:3> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:G> = <var:u> /\ <var:Y1> = <nat:5> * <var:u> /\ <var:Y2> = <nat:2> * <var:u> ^ <nat:2> /\ <var:Y3> = <var:u> ^ <nat:3> /\ <var:Y0> = <nat:3> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:G> = <var:u> /\ <var:Y1> = <nat:5> * <var:u> /\ <var:Y2> = <nat:2> * <var:u> ^ <nat:2> /\ <var:Y3> = <nat:2> * <var:u> ^ <nat:3> /\ <var:Y0> = <nat:3> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:G> = <var:u> /\ <var:Y1> = <nat:5> * <var:u> /\ <var:Y2> = <nat:2> * <var:u> ^ <nat:2> /\ <var:Y0> = <nat:3> /\ <var:S> = <nat:2> * <var:u> ^ <nat:3> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:G> = <var:u> /\ <var:Y1> = <nat:5> * <var:u> /\ <var:Y0> = <nat:3> /\ <var:S> = <nat:2> * <var:u> ^ <nat:3> + <nat:2> * <var:u> ^ <nat:2> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:G> = <var:u> /\ <var:Y0> = <nat:3> /\ <var:S> = <nat:2> * <var:u> ^ <nat:3> + <nat:2> * <var:u> ^ <nat:2> + <nat:5> * <var:u> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:G> = <var:u> /\ <var:S> = <nat:2> * <var:u> ^ <nat:3> + <nat:2> * <var:u> ^ <nat:2> + <nat:5> * <var:u> + <nat:3> ) ) %assertion ) . all : eapply hoare_consequence_pre ; try ( apply hoare_asgn || assn_auto'' ) . Qed . 