\begin{document} \begin{theorem} Consider the following program as follows \begin{verbatim} <var:C0> := <nat:7> ; <var:H> := <var:C0> \end{verbatim} Assume given every positive coefficients $ <var:i> $ that we have $ <var:L> = <var:i> $ prior to the execution of this series of commands it must be that we have $ <var:H> = <nat:7> $ after set of commands executes . \end{theorem} \begin{proof} Showing our claim about correctness for the program is clear using standard Hoare techniques . Moving on to the next step , we have \begin{verbatim} { <var:L> = <var:i> } <var:C0> := <nat:7> { <var:L> = <var:i> \land <var:C0> = <nat:7> } { <var:L> = <var:i> \land <var:C0> = <nat:7> } <var:H> := <var:C0{ <var:L> = <var:i> \land <var:H> = <nat:7> } \end{verbatim} This is shown with the binding inference rule of usual Hoare logic . \end{proof} \end{document} 
~
Require Import String . From PLF Require Import Imp . From PLF Require Import Hoare . Definition <var:C0> : string := " <var:C0> " . Theorem <genH:poly_code_correct> : forall <var:i> : nat , {{ <var:L> = <var:i> }} <var:C0> := <nat:7> ; <var:H> := <var:C0> {{ <var:H> = <nat:7> }} . Proof . intros . apply hoare_seq with ( Q := ( ( <var:L> = <var:i> /\ <var:C0> = <nat:7> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:L> = <var:i> /\ <var:H> = <nat:7> ) ) %assertion ) . all : eapply hoare_consequence_pre ; try ( apply hoare_asgn || assn_auto'' ) . Qed . 