\begin{document} \begin{definition} Define the following series of commands <def:poly> in \emph{Imp} : \begin{verbatim} <var:k0> := <nat:6> ; <var:t> := <var:k0> \end{verbatim} \end{definition} \begin{theorem} Given that we have $ <var:H> = <var:s> $ before evaluating this series of commands , it must be that we have $ <var:t> = <nat:6> $ . \end{theorem} \begin{proof} Showing our claim about correctness for this list of commands is clear using Hoare reasoning . Moving forward to the next step , we have \verb | { <var:H> = <var:s> } <var:k0> := <nat:6> { <var:H> = <var:s> \land <var:k0> = <nat:6> } | and \verb | { <var:H> = <var:s> \land <var:k0> = <nat:6> } <var:t> := <var:k0{ <var:H> = <var:s> \land <var:t> = <nat:6> } | . \end{proof} \end{document} 
~
Require Import String . From PLF Require Import Imp . From PLF Require Import Hoare . Definition <var:k0> : string := " <var:k0> " . Definition <def:poly> := <var:k0> := <nat:6> ; <var:t> := <var:k0> . Theorem <genH:poly_code_correct> : forall <var:s> : nat , {{ <var:H> = <var:s> }} <def:poly> {{ <var:t> = <nat:6> }} . Proof . intros . apply hoare_seq with ( Q := ( ( <var:H> = <var:s> /\ <var:k0> = <nat:6> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:H> = <var:s> /\ <var:t> = <nat:6> ) ) %assertion ) . all : eapply hoare_consequence_pre ; try ( apply hoare_asgn || assn_auto'' ) . Qed . 