\begin{document} \begin{theorem} Define a segment of code as follows \begin{verbatim} <var:A0> := <nat:5> ; <var:J> := <var:A0> \end{verbatim} Assume it to be that $ <var:t> = <var:I> $ , given all natural coefficients $ <var:I> $ , prior to evaluating our series of commands it holds that we see $ <var:J> = <nat:5> $ . \end{theorem} \begin{proof} The flow of logic for the code segment can be done through standard Hoare techniques . Immediately following , \begin{verbatim} { <var:t> = <var:I> } <var:A0> := <nat:5> { <var:t> = <var:I> \land <var:A0> = <nat:5> } { <var:t> = <var:I> \land <var:A0> = <nat:5> } <var:J> := <var:A0{ <var:t> = <var:I> \land <var:J> = <nat:5> } \end{verbatim} \end{proof} \end{document} 
~
Require Import String . From PLF Require Import Imp . From PLF Require Import Hoare . Definition <var:A0> : string := " <var:A0> " . Theorem <genH:poly_code_correct> : forall <var:I> : nat , {{ <var:t> = <var:I> }} <var:A0> := <nat:5> ; <var:J> := <var:A0> {{ <var:J> = <nat:5> }} . Proof . intros . apply hoare_seq with ( Q := ( ( <var:t> = <var:I> /\ <var:A0> = <nat:5> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:t> = <var:I> /\ <var:J> = <nat:5> ) ) %assertion ) . all : eapply hoare_consequence_pre ; try ( apply hoare_asgn || assn_auto'' ) . Qed . 