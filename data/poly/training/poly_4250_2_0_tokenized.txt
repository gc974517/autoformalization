\begin{document} \begin{theorem} Consider the following list of commands in \emph{Imp} as \begin{verbatim} <var:p0> := <nat:5> ; <var:R> := <var:p0> \end{verbatim} Allowing that $ <var:c> = <var:j> $ , for every natural coefficients $ <var:j> $ , before executing this code it must be that $ <var:R> = <nat:5> $ . \end{theorem} \begin{proof} Showing our claim about correctness for the program is accomplished by standard Hoare logic . Following , the environment update code assigning $ <nat:5> $ into $ <var:p0>$ . This takes $ \{ <var:c> = <var:j> \} $ toward the postcondition $ \{ <var:c> = <var:j> \land <var:p0> = <nat:5> \} $ . Now , we see the variable binding line defining $ <var:p0$ toward $ <var:R>$ . This command moves the precondition $ \{ <var:c> = <var:j> \land <var:p0> = <nat:5> \} $ into $ \{ <var:c> = <var:j> \land <var:R> = <nat:5> \} $ . \end{proof} \end{document} 
~
Require Import String . From PLF Require Import Imp . From PLF Require Import Hoare . Definition <var:p0> : string := " <var:p0> " . Theorem <genH:poly_code_correct> : forall <var:j> : nat , {{ <var:c> = <var:j> }} <var:p0> := <nat:5> ; <var:R> := <var:p0> {{ <var:R> = <nat:5> }} . Proof . intros . apply hoare_seq with ( Q := ( ( <var:c> = <var:j> /\ <var:p0> = <nat:5> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:c> = <var:j> /\ <var:R> = <nat:5> ) ) %assertion ) . all : eapply hoare_consequence_pre ; try ( apply hoare_asgn || assn_auto'' ) . Qed . 