\begin{document} \begin{definition} Take the following list of commands <def:poly> in \emph{Imp} as \begin{verbatim} <var:b0> := <nat:6> ; <var:p> := <var:b0> \end{verbatim} \end{definition} \begin{theorem} Consider the following list of commands <def:poly> . Assume it to be that $ <var:I> = <var:g> $ ( for positive coefficients $ <var:g> $ ) before evaluating this list of instructions , it follows that we have $ <var:p> = <nat:6> $ once list of instructions terminates . \end{theorem} \begin{proof} Demonstrating correctness of the code segment is done using typical Hoare techniques . Jumping to the following lines contained in the segment of code , \[ \begin{tabular} {rcl} \{ <var:I> = <var:g> \} & <var:b0> := <nat:6> & \{ <var:I> = <var:g> \land <var:b0> = <nat:6> \} \\ \{ <var:I> = <var:g> \land <var:b0> = <nat:6> \} & <var:p> := <var:b0& \{ <var:I> = <var:g> \land <var:p> = <nat:6> \} \end{tabular} \end{proof} \end{document} 
~
Require Import String . From PLF Require Import Imp . From PLF Require Import Hoare . Definition <var:b0> : string := " <var:b0> " . Definition <def:poly> := <var:b0> := <nat:6> ; <var:p> := <var:b0> . Theorem <genH:poly_code_correct> : forall <var:g> : nat , {{ <var:I> = <var:g> }} <def:poly> {{ <var:p> = <nat:6> }} . Proof . intros . apply hoare_seq with ( Q := ( ( <var:I> = <var:g> /\ <var:b0> = <nat:6> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:I> = <var:g> /\ <var:p> = <nat:6> ) ) %assertion ) . all : eapply hoare_consequence_pre ; try ( apply hoare_asgn || assn_auto'' ) . Qed . 