\begin{document} \begin{theorem} We define a code such that \begin{verbatim} <var:D0> := <nat:7> ; <var:D1> := <nat:6> ; <var:D1> := <var:D1> * <var:r> ; <var:k> := <var:D1> ; <var:k> := <var:k> + <var:D0> \end{verbatim} Allowing it to be that $ <var:r> = <var:w> $ ( given $ <var:w> $ ) prior to the evaluation of this code it holds that $ <var:k> = <nat:6> * <var:w> + <nat:7> $ . \end{theorem} \begin{proof} Demonstrating correctness of our set of instructions is demonstrated using usual Hoare reasoning . Taking a look at the subsequent line of code found in the set of commands , the statement defining $ <nat:7> $ toward $ <var:D0>$ . This command moves $ \{ <var:r> = <var:w> \} $ into $ \{ <var:r> = <var:w> \land <var:D0> = <nat:7> \} $ . Considering the subsequent piece of code in the series of commands , we have the environment update statement \verb | <var:D1> := <nat:6> ; | . This command transfers the condition $ \{ <var:r> = <var:w> \land <var:D0> = <nat:7> \} $ to the condition $ \{ <var:r> = <var:w> \land <var:D0> = <nat:7> \land <var:D1> = <nat:6> \} $ . This is known to be sound by the assignment inference rule given by Hoare techniques . Honing in on the upcoming step in the list of commands , we have the variable binding command \verb | <var:D1> := <var:D1> * <var:r> ; | . This advances the precondition $ \{ <var:r> = <var:w> \land <var:D0> = <nat:7> \land <var:D1> = <nat:6> \} $ toward the postcondition $ \{ <var:r> = <var:w> \land <var:D0> = <nat:7> \land <var:D1> = <nat:6> \cdot <var:w> \} $ . This is shown with the assignment law from standard Hoare techniques . Advancing , we have the statement defining $ <var:D1> $ to $ <var:k>$ . This command transfers the precondition $ \{ <var:r> = <var:w> \land <var:D0> = <nat:7> \land <var:D1> = <nat:6> \cdot <var:w> \} $ to the condition $ \{ <var:r> = <var:w> \land <var:D0> = <nat:7> \land <var:k> = <nat:6> \cdot <var:w> \} $ . This is known to be sound by the assignment scheme found in typical Hoare logic . Advancing to the proceeding line of code in the series of commands , the environment update statement \verb | <var:k> := <var:k> + <var:D0> | . This command advances the condition $ \{ <var:r> = <var:w> \land <var:D0> = <nat:7> \land <var:k> = <nat:6> \cdot <var:w> \} $ into the postcondition $ \{ <var:r> = <var:w> \land <var:k> = <nat:6> \cdot <var:w> + <nat:7> \} $ . \end{proof} \end{document} 
~
Require Import String . From PLF Require Import Imp . From PLF Require Import Hoare . Definition <var:D0> : string := " <var:D0> " . Definition <var:D1> : string := " <var:D1> " . Theorem <genH:poly_code_correct> : forall <var:w> : nat , {{ <var:r> = <var:w> }} <var:D0> := <nat:7> ; <var:D1> := <nat:6> ; <var:D1> := <var:D1> * <var:r> ; <var:k> := <var:D1> ; <var:k> := <var:k> + <var:D0> {{ <var:k> = <nat:6> * <var:w> + <nat:7> }} . Proof . intros . apply hoare_seq with ( Q := ( ( <var:r> = <var:w> /\ <var:D0> = <nat:7> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:r> = <var:w> /\ <var:D0> = <nat:7> /\ <var:D1> = <nat:6> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:r> = <var:w> /\ <var:D0> = <nat:7> /\ <var:D1> = <nat:6> * <var:w> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:r> = <var:w> /\ <var:D0> = <nat:7> /\ <var:k> = <nat:6> * <var:w> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:r> = <var:w> /\ <var:k> = <nat:6> * <var:w> + <nat:7> ) ) %assertion ) . all : eapply hoare_consequence_pre ; try ( apply hoare_asgn || assn_auto'' ) . Qed . 