\begin{document} \begin{theorem} Consider a set of commands in \emph{Imp} as follows \begin{verbatim} <var:S0> := <nat:6> ; <var:n> := <var:S0> \end{verbatim} Assume --- letting whole numbers $ <var:p> $ --- $ <var:Y> = <var:p> $ ahead of interpreting this set of commands , it holds that we see $ <var:n> = <nat:6> $ . \end{theorem} \begin{proof} The application of Hoare reasoning results in : \begin{eqnarray} \{ <var:Y> = <var:p> \} \\ <var:S0> := <nat:6> ; \\ \{ <var:Y> = <var:p> \land <var:S0> = <nat:6> \} \\ <var:n> := <var:S0> \\ \{ <var:Y> = <var:p> \land <var:n> = <nat:6> \} \end{eqnarray} Given the above , the set of commands has been proven correct . \end{proof} \end{document} 
~
Require Import String . From PLF Require Import Imp . From PLF Require Import Hoare . Definition <var:S0> : string := " <var:S0> " . Theorem <genH:poly_code_correct> : forall <var:p> : nat , {{ <var:Y> = <var:p> }} <var:S0> := <nat:6> ; <var:n> := <var:S0> {{ <var:n> = <nat:6> }} . Proof . intros . apply hoare_seq with ( Q := ( ( <var:Y> = <var:p> /\ <var:S0> = <nat:6> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:Y> = <var:p> /\ <var:n> = <nat:6> ) ) %assertion ) . all : eapply hoare_consequence_pre ; try ( apply hoare_asgn || assn_auto'' ) . Qed . 