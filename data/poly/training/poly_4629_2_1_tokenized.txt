\begin{document} \begin{definition} Take the following series of commands <def:poly> in \emph{Imp} as follows \begin{verbatim} <var:j0> := <nat:8> ; <var:p> := <var:j0> \end{verbatim} \end{definition} \begin{theorem} Define the following list of instructions <def:poly> in \emph{Imp} . Assuming , given all $ <var:z> \in \mathbb{Z}^+ $ , that we have $ <var:E> = <var:z> $ before evaluating this set of instructions it follows that $ <var:p> = <nat:8> $ once series of instructions exits . \end{theorem} \begin{proof} The flow of logic for this series of commands can be done using Hoare logic . Considering the subsequent statement seen in our list of instructions , we have the environment update line defining $ <nat:8> $ toward $ <var:j0>$ . This takes the condition $ \{ <var:E> = <var:z> \} $ into $ \{ <var:E> = <var:z> \land <var:j0> = <nat:8> \} $ . Advancing to the next step , we have the variable assignmet command giving $ <var:j0$ toward $ <var:p>$ . This redefines the condition $ \{ <var:E> = <var:z> \land <var:j0> = <nat:8> \} $ to the condition $ \{ <var:E> = <var:z> \land <var:p> = <nat:8> \} $ . \end{proof} \end{document} 
~
Require Import String . From PLF Require Import Imp . From PLF Require Import Hoare . Definition <var:j0> : string := " <var:j0> " . Definition <def:poly> := <var:j0> := <nat:8> ; <var:p> := <var:j0> . Theorem <genH:poly_code_correct> : forall <var:z> : nat , {{ <var:E> = <var:z> }} <def:poly> {{ <var:p> = <nat:8> }} . Proof . intros . apply hoare_seq with ( Q := ( ( <var:E> = <var:z> /\ <var:j0> = <nat:8> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:E> = <var:z> /\ <var:p> = <nat:8> ) ) %assertion ) . all : eapply hoare_consequence_pre ; try ( apply hoare_asgn || assn_auto'' ) . Qed . 