\begin{document} \begin{definition} Let the following list of commands <def:poly> in \emph{Imp} as follows \begin{verbatim} <var:B0> := <nat:6> ; <var:p> := <var:B0> \end{verbatim} \end{definition} \begin{theorem} Define the following list of instructions <def:poly> in \emph{Imp} . Assume it to be that $ <var:t> = <var:r> $ --- assuming some positive coefficients $ <var:r> $ --- ahead of the execution of this code , it holds that $ <var:p> = <nat:6> $ once set of commands exits . \end{theorem} \begin{proof} Using standard Hoare techniques produces : \begin{eqnarray} \{ <var:t> = <var:r> \} \\ <var:B0> := <nat:6> ; \\ \{ <var:t> = <var:r> \land <var:B0> = <nat:6> \} \\ <var:p> := <var:B0> \\ \{ <var:t> = <var:r> \land <var:p> = <nat:6> \} \end{eqnarray} Considering the preceding argument , this series of instructions has been shown to be correct . \end{proof} \end{document} 
~
Require Import String . From PLF Require Import Imp . From PLF Require Import Hoare . Definition <var:B0> : string := " <var:B0> " . Definition <def:poly> := <var:B0> := <nat:6> ; <var:p> := <var:B0> . Theorem <genH:poly_code_correct> : forall <var:r> : nat , {{ <var:t> = <var:r> }} <def:poly> {{ <var:p> = <nat:6> }} . Proof . intros . apply hoare_seq with ( Q := ( ( <var:t> = <var:r> /\ <var:B0> = <nat:6> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:t> = <var:r> /\ <var:p> = <nat:6> ) ) %assertion ) . all : eapply hoare_consequence_pre ; try ( apply hoare_asgn || assn_auto'' ) . Qed . 