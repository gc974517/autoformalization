\begin{document} \begin{definition} Define the following list of commands <def:poly> in \emph{Imp} as follows \begin{verbatim} <var:K0> := <nat:6> ; <var:X> := <var:K0> \end{verbatim} \end{definition} \begin{theorem} Allowing it to be that $ <var:Q> = <var:w> $ ( given every natural numbers $ <var:w> $ ) ahead of the evaluation of the series of instructions it follows that we have $ <var:X> = <nat:6> $ . \end{theorem} \begin{proof} Proving correctness for our code segment can be demonstrated with Hoare logic . Honing in on the subsequent lines contained in our series of instructions , \[ \begin{tabular} {rcl} \{ <var:Q> = <var:w> \} & <var:K0> := <nat:6> & \{ <var:Q> = <var:w> \land <var:K0> = <nat:6> \} \\ \{ <var:Q> = <var:w> \land <var:K0> = <nat:6> \} & <var:X> := <var:K0& \{ <var:Q> = <var:w> \land <var:X> = <nat:6> \} \end{tabular} \end{proof} \end{document} 
~
Require Import String . From PLF Require Import Imp . From PLF Require Import Hoare . Definition <var:K0> : string := " <var:K0> " . Definition <def:poly> := <var:K0> := <nat:6> ; <var:X> := <var:K0> . Theorem <genH:poly_code_correct> : forall <var:w> : nat , {{ <var:Q> = <var:w> }} <def:poly> {{ <var:X> = <nat:6> }} . Proof . intros . apply hoare_seq with ( Q := ( ( <var:Q> = <var:w> /\ <var:K0> = <nat:6> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:Q> = <var:w> /\ <var:X> = <nat:6> ) ) %assertion ) . all : eapply hoare_consequence_pre ; try ( apply hoare_asgn || assn_auto'' ) . Qed . 