\begin{document} \begin{theorem} Define the following list of commands in \emph{Imp} such that \begin{verbatim} <var:u> := <nat:4> ; <var:u> := <nat:2> + <var:u> * <var:V> \end{verbatim} Assume that $ <var:V> = <var:y> $ ( given natural coefficients $ <var:y> $ ) prior to the evaluation of this set of commands , it must be that we see $ <var:u> = <nat:4> * <var:y> + <nat:2> $ after set of instructions has finished executing . \end{theorem} \begin{proof} Proving correctness for the code segment is shown through typical Hoare logic . Next , the binding command \verb | <var:u> := <nat:4> ; | . This advances the condition $ \{ <var:V> = <var:y> \} $ as the postcondition $ \{ <var:V> = <var:y> \land <var:u> = <nat:4> \} $ . This is known to be sound through the assignment scheme given by Hoare logic . Jumping to the proceeding statement in our series of commands , we see the variable assignmet code defining $ <nat:2> + <var:u> * <var:V$ to $ <var:u>$ . This takes the condition $ \{ <var:V> = <var:y> \land <var:u> = <nat:4> \} $ as the condition $ \{ <var:V> = <var:y> \land <var:u> = <nat:4> \cdot <var:y> + <nat:2> \} $ . This is sound by the assignment inference rule from usual Hoare reasoning . \end{proof} \end{document} 
~
Require Import String . From PLF Require Import Imp . From PLF Require Import Hoare . Theorem <genH:poly_code_correct> : forall <var:y> : nat , {{ <var:V> = <var:y> }} <var:u> := <nat:4> ; <var:u> := <nat:2> + <var:u> * <var:V> {{ <var:u> = <nat:4> * <var:y> + <nat:2> }} . Proof . intros . apply hoare_seq with ( Q := ( ( <var:V> = <var:y> /\ <var:u> = <nat:4> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:V> = <var:y> /\ <var:u> = <nat:4> * <var:y> + <nat:2> ) ) %assertion ) . all : eapply hoare_consequence_pre ; try ( apply hoare_asgn || assn_auto'' ) . Qed . 