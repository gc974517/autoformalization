\begin{document} \begin{theorem} Consider a set of commands as follows \begin{verbatim} <var:t0> := <nat:6> ; <var:V> := <var:t0> \end{verbatim} Assume it to hold that $ <var:m> = <var:J> $ before interpreting the program , it must be that we see $ <var:V> = <nat:6> $ . \end{theorem} \begin{proof} \begin{eqnarray} \{ <var:m> = <var:J> \} \\ <var:t0> := <nat:6> ; \\ \{ <var:m> = <var:J> \land <var:t0> = <nat:6> \} \\ <var:V> := <var:t0> \\ \{ <var:m> = <var:J> \land <var:V> = <nat:6> \} \end{eqnarray} The application of Hoare techniques finishes the proof . \end{proof} \end{document} 
~
Require Import String . From PLF Require Import Imp . From PLF Require Import Hoare . Definition <var:t0> : string := " <var:t0> " . Theorem <genH:poly_code_correct> : forall <var:J> : nat , {{ <var:m> = <var:J> }} <var:t0> := <nat:6> ; <var:V> := <var:t0> {{ <var:V> = <nat:6> }} . Proof . intros . apply hoare_seq with ( Q := ( ( <var:m> = <var:J> /\ <var:t0> = <nat:6> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:m> = <var:J> /\ <var:V> = <nat:6> ) ) %assertion ) . all : eapply hoare_consequence_pre ; try ( apply hoare_asgn || assn_auto'' ) . Qed . 