\begin{document} \begin{definition} Consider a series of commands <def:poly> in \emph{Imp} such that \begin{verbatim} <var:a0> := <nat:9> ; <var:Y> := <var:a0> \end{verbatim} \end{definition} \begin{theorem} Given that we have $ <var:i> = <var:w> $ prior to interpreting our series of commands , it follows that we see $ <var:Y> = <nat:9> $ after series of commands has finished executing . \end{theorem} \begin{proof} Using standard Hoare logic gives : \begin{eqnarray} \{ <var:i> = <var:w> \} \\ <var:a0> := <nat:9> ; \\ \{ <var:i> = <var:w> \land <var:a0> = <nat:9> \} \\ <var:Y> := <var:a0> \\ \{ <var:i> = <var:w> \land <var:Y> = <nat:9> \} \end{eqnarray} Hence , the set of commands has been demonstrated to be correct . \end{proof} \end{document} 
~
Require Import String . From PLF Require Import Imp . From PLF Require Import Hoare . Definition <var:a0> : string := " <var:a0> " . Definition <def:poly> := <var:a0> := <nat:9> ; <var:Y> := <var:a0> . Theorem <genH:poly_code_correct> : forall <var:w> : nat , {{ <var:i> = <var:w> }} <def:poly> {{ <var:Y> = <nat:9> }} . Proof . intros . apply hoare_seq with ( Q := ( ( <var:i> = <var:w> /\ <var:a0> = <nat:9> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:i> = <var:w> /\ <var:Y> = <nat:9> ) ) %assertion ) . all : eapply hoare_consequence_pre ; try ( apply hoare_asgn || assn_auto'' ) . Qed . 