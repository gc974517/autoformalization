\begin{document} \begin{theorem} Take the following list of instructions in \emph{Imp} as \begin{verbatim} <var:v0> := <nat:6> ; <var:o> := <var:v0> \end{verbatim} Allow $ <var:M> = <var:m> $ ahead of the execution of the list of commands it must be that $ <var:o> = <nat:6> $ when code executes . \end{theorem} \begin{proof} Proving correctness for this list of instructions is clear through standard Hoare logic . Going forward , we have \[ \begin{tabular} {rcl} \{ <var:M> = <var:m> \} & <var:v0> := <nat:6> & \{ <var:M> = <var:m> \land <var:v0> = <nat:6> \} \\ \{ <var:M> = <var:m> \land <var:v0> = <nat:6> \} & <var:o> := <var:v0& \{ <var:M> = <var:m> \land <var:o> = <nat:6> \} \end{tabular} \end{proof} \end{document} 
~
Require Import String . From PLF Require Import Imp . From PLF Require Import Hoare . Definition <var:v0> : string := " <var:v0> " . Theorem <genH:poly_code_correct> : forall <var:m> : nat , {{ <var:M> = <var:m> }} <var:v0> := <nat:6> ; <var:o> := <var:v0> {{ <var:o> = <nat:6> }} . Proof . intros . apply hoare_seq with ( Q := ( ( <var:M> = <var:m> /\ <var:v0> = <nat:6> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:M> = <var:m> /\ <var:o> = <nat:6> ) ) %assertion ) . all : eapply hoare_consequence_pre ; try ( apply hoare_asgn || assn_auto'' ) . Qed . 