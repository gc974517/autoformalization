\begin{document} \begin{definition} Let the following code <def:poly> in \emph{Imp} as \begin{verbatim} <var:O> := <nat:4> ; <var:O> := <nat:4> + <var:O> * <var:s> \end{verbatim} \end{definition} \begin{theorem} Take the following set of commands <def:poly> in \emph{Imp} . Given ( given $ <var:X> \in \mathbb{N} $ ) it to hold that $ <var:s> = <var:X> $ prior to running the code segment it must be that we have $ <var:O> = <nat:4> * <var:X> + <nat:4> $ . \end{theorem} \begin{proof} Utilizing typical Hoare logic produces : \begin{eqnarray} \{ <var:s> = <var:X> \} \\ <var:O> := <nat:4> ; \\ \{ <var:s> = <var:X> \land <var:O> = <nat:4> \} \\ <var:O> := <nat:4> + <var:O> * <var:s> \\ \{ <var:s> = <var:X> \land <var:O> = <nat:4> \cdot <var:X> + <nat:4> \} \end{eqnarray} As a consequence , our code is validated as correct . \end{proof} \end{document} 
~
Require Import String . From PLF Require Import Imp . From PLF Require Import Hoare . Definition <def:poly> := <var:O> := <nat:4> ; <var:O> := <nat:4> + <var:O> * <var:s> . Theorem <genH:poly_code_correct> : forall <var:X> : nat , {{ <var:s> = <var:X> }} <def:poly> {{ <var:O> = <nat:4> * <var:X> + <nat:4> }} . Proof . intros . apply hoare_seq with ( Q := ( ( <var:s> = <var:X> /\ <var:O> = <nat:4> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:s> = <var:X> /\ <var:O> = <nat:4> * <var:X> + <nat:4> ) ) %assertion ) . all : eapply hoare_consequence_pre ; try ( apply hoare_asgn || assn_auto'' ) . Qed . 