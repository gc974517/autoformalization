\begin{document} \begin{theorem} Take the following set of commands in \emph{Imp} as follows \begin{verbatim} <var:V0> := <nat:4> ; <var:D> := <var:V0> \end{verbatim} Given --- given all positive coefficients $ <var:h> $ --- it to be that $ <var:x> = <var:h> $ prior to the execution of the segment of code it must be that $ <var:D> = <nat:4> $ . \end{theorem} \begin{proof} The application of usual Hoare techniques gives us : \begin{eqnarray} \{ <var:x> = <var:h> \} \\ <var:V0> := <nat:4> ; \\ \{ <var:x> = <var:h> \land <var:V0> = <nat:4> \} \\ <var:D> := <var:V0> \\ \{ <var:x> = <var:h> \land <var:D> = <nat:4> \} \end{eqnarray} Given the preceding argument , the program has been proven correct . \end{proof} \end{document} 
~
Require Import String . From PLF Require Import Imp . From PLF Require Import Hoare . Definition <var:V0> : string := " <var:V0> " . Theorem <genH:poly_code_correct> : forall <var:h> : nat , {{ <var:x> = <var:h> }} <var:V0> := <nat:4> ; <var:D> := <var:V0> {{ <var:D> = <nat:4> }} . Proof . intros . apply hoare_seq with ( Q := ( ( <var:x> = <var:h> /\ <var:V0> = <nat:4> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:x> = <var:h> /\ <var:D> = <nat:4> ) ) %assertion ) . all : eapply hoare_consequence_pre ; try ( apply hoare_asgn || assn_auto'' ) . Qed . 