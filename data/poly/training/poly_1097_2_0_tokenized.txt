\begin{document} \begin{theorem} Take the following segment of code in \emph{Imp} as \begin{verbatim} <var:C0> := <nat:7> ; <var:G> := <var:C0> \end{verbatim} Assuming it to be that $ <var:E> = <var:L> $ prior to the evaluation of our set of commands it follows that $ <var:G> = <nat:7> $ after set of commands has exited . \end{theorem} \begin{proof} The course of logic for our set of instructions is shown with typical Hoare techniques . Following , we have \begin{eqnarray} \{ <var:E> = <var:L> \} \, <var:C0> := <nat:7> \, \{ <var:E> = <var:L> \land <var:C0> = <nat:7> \} \\ \{ <var:E> = <var:L> \land <var:C0> = <nat:7> \} \, <var:G> := <var:C0\, \{ <var:E> = <var:L> \land <var:G> = <nat:7> \} \end{eqnarray} \end{proof} \end{document} 
~
Require Import String . From PLF Require Import Imp . From PLF Require Import Hoare . Definition <var:C0> : string := " <var:C0> " . Theorem <genH:poly_code_correct> : forall <var:L> : nat , {{ <var:E> = <var:L> }} <var:C0> := <nat:7> ; <var:G> := <var:C0> {{ <var:G> = <nat:7> }} . Proof . intros . apply hoare_seq with ( Q := ( ( <var:E> = <var:L> /\ <var:C0> = <nat:7> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:E> = <var:L> /\ <var:G> = <nat:7> ) ) %assertion ) . all : eapply hoare_consequence_pre ; try ( apply hoare_asgn || assn_auto'' ) . Qed . 