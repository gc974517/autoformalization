\begin{document} \begin{definition} Consider the following set of instructions <def:poly> in \emph{Imp} : \begin{verbatim} <var:b0> := <nat:8> ; <var:u> := <var:b0> \end{verbatim} \end{definition} \begin{theorem} Allowing that we have $ <var:x> = <var:y> $ ahead of running this set of commands it must be that we see $ <var:u> = <nat:8> $ . \end{theorem} \begin{proof} Demonstrating correctness of the series of commands is evident with standard Hoare techniques . Moving forward to the next line of code seen in our set of instructions , we have the binding statement \verb | <var:b0> := <nat:8> ; | . This moves the condition $ \{ <var:x> = <var:y> \} $ toward $ \{ <var:x> = <var:y> \land <var:b0> = <nat:8> \} $ . This is given using the assignment scheme given by standard Hoare logic . Paying attention to the next step seen in the series of commands , we see the line letting $ <var:b0$ into $ <var:u>$ . This statement moves $ \{ <var:x> = <var:y> \land <var:b0> = <nat:8> \} $ to the condition $ \{ <var:x> = <var:y> \land <var:u> = <nat:8> \} $ . \end{proof} \end{document} 
~
Require Import String . From PLF Require Import Imp . From PLF Require Import Hoare . Definition <var:b0> : string := " <var:b0> " . Definition <def:poly> := <var:b0> := <nat:8> ; <var:u> := <var:b0> . Theorem <genH:poly_code_correct> : forall <var:y> : nat , {{ <var:x> = <var:y> }} <def:poly> {{ <var:u> = <nat:8> }} . Proof . intros . apply hoare_seq with ( Q := ( ( <var:x> = <var:y> /\ <var:b0> = <nat:8> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:x> = <var:y> /\ <var:u> = <nat:8> ) ) %assertion ) . all : eapply hoare_consequence_pre ; try ( apply hoare_asgn || assn_auto'' ) . Qed . 