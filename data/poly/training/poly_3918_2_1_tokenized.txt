\begin{document} \begin{theorem} Let the following code in \emph{Imp} as follows \begin{verbatim} <var:M0> := <nat:6> ; <var:R> := <var:M0> \end{verbatim} Given that $ <var:w> = <var:S> $ ( given all natural numbers $ <var:S> $ ) ahead of the evaluation of the code , it must be that we have $ <var:R> = <nat:6> $ . \end{theorem} \begin{proof} Utilizing typical Hoare logic yields : \begin{eqnarray} \{ <var:w> = <var:S> \} \\ <var:M0> := <nat:6> ; \\ \{ <var:w> = <var:S> \land <var:M0> = <nat:6> \} \\ <var:R> := <var:M0> \\ \{ <var:w> = <var:S> \land <var:R> = <nat:6> \} \end{eqnarray} Therefore , this series of commands is proven correct . \end{proof} \end{document} 
~
Require Import String . From PLF Require Import Imp . From PLF Require Import Hoare . Definition <var:M0> : string := " <var:M0> " . Theorem <genH:poly_code_correct> : forall <var:S> : nat , {{ <var:w> = <var:S> }} <var:M0> := <nat:6> ; <var:R> := <var:M0> {{ <var:R> = <nat:6> }} . Proof . intros . apply hoare_seq with ( Q := ( ( <var:w> = <var:S> /\ <var:M0> = <nat:6> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:w> = <var:S> /\ <var:R> = <nat:6> ) ) %assertion ) . all : eapply hoare_consequence_pre ; try ( apply hoare_asgn || assn_auto'' ) . Qed . 