\begin{document} \begin{definition} We define the following series of commands <def:poly> in \emph{Imp} as \begin{verbatim} <var:m0> := <nat:9> ; <var:K> := <var:m0> \end{verbatim} \end{definition} \begin{theorem} Allow that $ <var:h> = <var:T> $ ( for all $ <var:T> \in \mathbb{Z}^+ $ ) ahead of executing the code segment , it holds that we see $ <var:K> = <nat:9> $ . \end{theorem} \begin{proof} Proving correctness for the code segment can be shown by Hoare reasoning . Advancing to the next step , the binding code defining $ <nat:9> $ into $ <var:m0>$ . This forwards the condition $ \{ <var:h> = <var:T> \} $ toward $ \{ <var:h> = <var:T> \land <var:m0> = <nat:9> \} $ . Now , the variable binding command giving $ <var:m0$ to $ <var:K>$ . This transfers $ \{ <var:h> = <var:T> \land <var:m0> = <nat:9> \} $ to $ \{ <var:h> = <var:T> \land <var:K> = <nat:9> \} $ . This is deduced with the assignment rule from typical Hoare techniques . \end{proof} \end{document} 
~
Require Import String . From PLF Require Import Imp . From PLF Require Import Hoare . Definition <var:m0> : string := " <var:m0> " . Definition <def:poly> := <var:m0> := <nat:9> ; <var:K> := <var:m0> . Theorem <genH:poly_code_correct> : forall <var:T> : nat , {{ <var:h> = <var:T> }} <def:poly> {{ <var:K> = <nat:9> }} . Proof . intros . apply hoare_seq with ( Q := ( ( <var:h> = <var:T> /\ <var:m0> = <nat:9> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:h> = <var:T> /\ <var:K> = <nat:9> ) ) %assertion ) . all : eapply hoare_consequence_pre ; try ( apply hoare_asgn || assn_auto'' ) . Qed . 