\begin{document} \begin{theorem} Let the following list of instructions in \emph{Imp} as follows \begin{verbatim} <var:t0> := <nat:7> ; <var:E> := <var:t0> \end{verbatim} Allow $ <var:L> = <var:a> $ before executing this set of instructions it holds that we have $ <var:E> = <nat:7> $ . \end{theorem} \begin{proof} Applying Hoare reasoning yields : \begin{eqnarray} \{ <var:L> = <var:a> \} \\ <var:t0> := <nat:7> ; \\ \{ <var:L> = <var:a> \land <var:t0> = <nat:7> \} \\ <var:E> := <var:t0> \\ \{ <var:L> = <var:a> \land <var:E> = <nat:7> \} \end{eqnarray} Hence , the set of commands has been shown to be correct . \end{proof} \end{document} 
~
Require Import String . From PLF Require Import Imp . From PLF Require Import Hoare . Definition <var:t0> : string := " <var:t0> " . Theorem <genH:poly_code_correct> : forall <var:a> : nat , {{ <var:L> = <var:a> }} <var:t0> := <nat:7> ; <var:E> := <var:t0> {{ <var:E> = <nat:7> }} . Proof . intros . apply hoare_seq with ( Q := ( ( <var:L> = <var:a> /\ <var:t0> = <nat:7> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:L> = <var:a> /\ <var:E> = <nat:7> ) ) %assertion ) . all : eapply hoare_consequence_pre ; try ( apply hoare_asgn || assn_auto'' ) . Qed . 