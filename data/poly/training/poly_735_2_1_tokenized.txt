\begin{document} \begin{theorem} We define the following set of commands in \emph{Imp} such that \begin{verbatim} <var:B0> := <nat:2> ; <var:u> := <var:B0> \end{verbatim} Assuming that $ <var:C> = <var:d> $ for $ <var:d> \in \mathbb{N} $ before the execution of this set of commands it must be that we have $ <var:u> = <nat:2> $ after list of instructions has executed . \end{theorem} \begin{proof} The application of typical Hoare techniques gives us : \begin{eqnarray} \{ <var:C> = <var:d> \} \\ <var:B0> := <nat:2> ; \\ \{ <var:C> = <var:d> \land <var:B0> = <nat:2> \} \\ <var:u> := <var:B0> \\ \{ <var:C> = <var:d> \land <var:u> = <nat:2> \} \end{eqnarray} Given the preceding argument , our list of instructions has been shown to be correct . \end{proof} \end{document} 
~
Require Import String . From PLF Require Import Imp . From PLF Require Import Hoare . Definition <var:B0> : string := " <var:B0> " . Theorem <genH:poly_code_correct> : forall <var:d> : nat , {{ <var:C> = <var:d> }} <var:B0> := <nat:2> ; <var:u> := <var:B0> {{ <var:u> = <nat:2> }} . Proof . intros . apply hoare_seq with ( Q := ( ( <var:C> = <var:d> /\ <var:B0> = <nat:2> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:C> = <var:d> /\ <var:u> = <nat:2> ) ) %assertion ) . all : eapply hoare_consequence_pre ; try ( apply hoare_asgn || assn_auto'' ) . Qed . 