\begin{document} \begin{definition} Take the following set of instructions <def:poly> in \emph{Imp} such that \begin{verbatim} <var:B0> := <nat:5> ; <var:c> := <var:B0> \end{verbatim} \end{definition} \begin{theorem} Consider a set of commands <def:poly> . Allowing it to hold that $ <var:s> = <var:I> $ before evaluating this series of instructions , then we see $ <var:c> = <nat:5> $ . \end{theorem} \begin{proof} Observe the below decorated series of instructions . \begin{eqnarray} \{ <var:s> = <var:I> \} \\ <var:B0> := <nat:5> ; \\ \{ <var:s> = <var:I> \land <var:B0> = <nat:5> \} \\ <var:c> := <var:B0> \\ \{ <var:s> = <var:I> \land <var:c> = <nat:5> \} \end{eqnarray} Applying usual Hoare techniques accomplishes the proof . \end{proof} \end{document} 
~
Require Import String . From PLF Require Import Imp . From PLF Require Import Hoare . Definition <var:B0> : string := " <var:B0> " . Definition <def:poly> := <var:B0> := <nat:5> ; <var:c> := <var:B0> . Theorem <genH:poly_code_correct> : forall <var:I> : nat , {{ <var:s> = <var:I> }} <def:poly> {{ <var:c> = <nat:5> }} . Proof . intros . apply hoare_seq with ( Q := ( ( <var:s> = <var:I> /\ <var:B0> = <nat:5> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:s> = <var:I> /\ <var:c> = <nat:5> ) ) %assertion ) . all : eapply hoare_consequence_pre ; try ( apply hoare_asgn || assn_auto'' ) . Qed . 