\begin{document} \begin{theorem} We define the following list of commands as \begin{verbatim} <var:B0> := <nat:4> ; <var:n> := <var:B0> \end{verbatim} Given it to hold that $ <var:l> = <var:y> $ ahead of the execution of this code segment , it follows that we see $ <var:n> = <nat:4> $ . \end{theorem} \begin{proof} Proving correctness for our series of commands is shown by Hoare reasoning . Considering the following step contained in our list of instructions , we see \verb | { <var:l> = <var:y> } <var:B0> := <nat:4> { <var:l> = <var:y> \land <var:B0> = <nat:4> } | . Paying attention to the next piece of code seen in our set of commands , we have \verb | { <var:l> = <var:y> } <var:B0> := <nat:4> { <var:l> = <var:y> \land <var:B0> = <nat:4> } | . This is ensured using the scheme from usual Hoare reasoning . \end{proof} \end{document} 
~
Require Import String . From PLF Require Import Imp . From PLF Require Import Hoare . Definition <var:B0> : string := " <var:B0> " . Theorem <genH:poly_code_correct> : forall <var:y> : nat , {{ <var:l> = <var:y> }} <var:B0> := <nat:4> ; <var:n> := <var:B0> {{ <var:n> = <nat:4> }} . Proof . intros . apply hoare_seq with ( Q := ( ( <var:l> = <var:y> /\ <var:B0> = <nat:4> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:l> = <var:y> /\ <var:n> = <nat:4> ) ) %assertion ) . all : eapply hoare_consequence_pre ; try ( apply hoare_asgn || assn_auto'' ) . Qed . 