\begin{document} \begin{theorem} Consider the following series of commands such that \begin{verbatim} <var:S> := <nat:3> ; <var:S> := <nat:3> + <var:S> * <var:Z> ; <var:S> := <nat:1> + <var:S> * <var:Z> \end{verbatim} Allow it to be that $ <var:Z> = <var:y> $ , for every natural numbers $ <var:y> $ , ahead of interpreting this code then $ <var:S> = <nat:3> \times <var:y> ^ <nat:2> + <nat:3> \times <var:y> + <nat:1> $ after set of instructions has exited . \end{theorem} \begin{proof} The application of usual Hoare logic returns : \begin{eqnarray} \{ <var:Z> = <var:y> \} \\ <var:S> := <nat:3> ; \\ \{ <var:Z> = <var:y> \land <var:S> = <nat:3> \} \\ <var:S> := <nat:3> + <var:S> * <var:Z> ; \\ \{ <var:Z> = <var:y> \land <var:S> = <nat:3> \times <var:y> + <nat:3> \} \\ <var:S> := <nat:1> + <var:S> * <var:Z> \\ \{ <var:Z> = <var:y> \land <var:S> = <nat:3> \times <var:y> ^ <nat:2> + <nat:3> \times <var:y> + <nat:1> \} \end{eqnarray} Hence , this program has been shown to be correct . \end{proof} \end{document} 
~
Require Import String . From PLF Require Import Imp . From PLF Require Import Hoare . Theorem <genH:poly_code_correct> : forall <var:y> : nat , {{ <var:Z> = <var:y> }} <var:S> := <nat:3> ; <var:S> := <nat:3> + <var:S> * <var:Z> ; <var:S> := <nat:1> + <var:S> * <var:Z> {{ <var:S> = <nat:3> * <var:y> ^ <nat:2> + <nat:3> * <var:y> + <nat:1> }} . Proof . intros . apply hoare_seq with ( Q := ( ( <var:Z> = <var:y> /\ <var:S> = <nat:3> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:Z> = <var:y> /\ <var:S> = <nat:3> * <var:y> + <nat:3> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:Z> = <var:y> /\ <var:S> = <nat:3> * <var:y> ^ <nat:2> + <nat:3> * <var:y> + <nat:1> ) ) %assertion ) . all : eapply hoare_consequence_pre ; try ( apply hoare_asgn || assn_auto'' ) . Qed . 