\begin{document} \begin{definition} Define the following series of instructions <def:poly> in \emph{Imp} : \begin{verbatim} <var:F> := <nat:2> ; <var:F> := <nat:3> + <var:F> * <var:S> ; <var:F> := <nat:3> + <var:F> * <var:S> \end{verbatim} \end{definition} \begin{theorem} Consider a list of commands <def:poly> . Allow $ <var:S> = <var:X> $ prior to executing our segment of code , it follows that $ <var:F> = <nat:2> \cdot <var:X> ^ <nat:2> + <nat:3> \cdot <var:X> + <nat:3> $ . \end{theorem} \begin{proof} Using typical Hoare techniques produces : \begin{eqnarray} \{ <var:S> = <var:X> \} \\ <var:F> := <nat:2> ; \\ \{ <var:S> = <var:X> \land <var:F> = <nat:2> \} \\ <var:F> := <nat:3> + <var:F> * <var:S> ; \\ \{ <var:S> = <var:X> \land <var:F> = <nat:2> \cdot <var:X> + <nat:3> \} \\ <var:F> := <nat:3> + <var:F> * <var:S> \\ \{ <var:S> = <var:X> \land <var:F> = <nat:2> \cdot <var:X> ^ <nat:2> + <nat:3> \cdot <var:X> + <nat:3> \} \end{eqnarray} Allowing the execution of the list of commands returns : \begin{eqnarray} \end{eqnarray} Hence , the set of commands is proven correct . \end{proof} \end{document} 
~
Require Import String . From PLF Require Import Imp . From PLF Require Import Hoare . Definition <def:poly> := <var:F> := <nat:2> ; <var:F> := <nat:3> + <var:F> * <var:S> ; <var:F> := <nat:3> + <var:F> * <var:S> . Theorem <genH:poly_code_correct> : forall <var:X> : nat , {{ <var:S> = <var:X> }} <def:poly> {{ <var:F> = <nat:2> * <var:X> ^ <nat:2> + <nat:3> * <var:X> + <nat:3> }} . Proof . intros . apply hoare_seq with ( Q := ( ( <var:S> = <var:X> /\ <var:F> = <nat:2> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:S> = <var:X> /\ <var:F> = <nat:2> * <var:X> + <nat:3> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:S> = <var:X> /\ <var:F> = <nat:2> * <var:X> ^ <nat:2> + <nat:3> * <var:X> + <nat:3> ) ) %assertion ) . all : eapply hoare_consequence_pre ; try ( apply hoare_asgn || assn_auto'' ) . Qed . 