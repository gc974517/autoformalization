\begin{document} \begin{theorem} We define a series of commands as follows \begin{verbatim} <var:h0> := <nat:1> ; <var:G> := <var:h0> \end{verbatim} Assuming $ <var:K> = <var:l> $ ( letting natural numbers $ <var:l> $ ) before running the series of commands then we have $ <var:G> = <nat:1> $ . \end{theorem} \begin{proof} Proving correctness for the set of instructions can be demonstrated with this decorated set of instructions . \begin{eqnarray} \{ <var:K> = <var:l> \} \\ <var:h0> := <nat:1> ; \\ \{ <var:K> = <var:l> \land <var:h0> = <nat:1> \} \\ <var:G> := <var:h0> \\ \{ <var:K> = <var:l> \land <var:G> = <nat:1> \} \end{eqnarray} Applying Hoare logic solves the proof . \end{proof} \end{document} 
~
Require Import String . From PLF Require Import Imp . From PLF Require Import Hoare . Definition <var:h0> : string := " <var:h0> " . Theorem <genH:poly_code_correct> : forall <var:l> : nat , {{ <var:K> = <var:l> }} <var:h0> := <nat:1> ; <var:G> := <var:h0> {{ <var:G> = <nat:1> }} . Proof . intros . apply hoare_seq with ( Q := ( ( <var:K> = <var:l> /\ <var:h0> = <nat:1> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:K> = <var:l> /\ <var:G> = <nat:1> ) ) %assertion ) . all : eapply hoare_consequence_pre ; try ( apply hoare_asgn || assn_auto'' ) . Qed . 