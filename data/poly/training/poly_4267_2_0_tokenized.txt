\begin{document} \begin{theorem} We define the following set of commands as follows \begin{verbatim} <var:A0> := <nat:6> ; <var:U> := <var:A0> \end{verbatim} Given that we have $ <var:a> = <var:W> $ ahead of the execution of the series of commands it follows that $ <var:U> = <nat:6> $ once series of instructions has terminated . \end{theorem} \begin{proof} Applying Hoare techniques returns : \begin{eqnarray} \{ <var:a> = <var:W> \} \\ <var:A0> := <nat:6> ; \\ \{ <var:a> = <var:W> \land <var:A0> = <nat:6> \} \\ <var:U> := <var:A0> \\ \{ <var:a> = <var:W> \land <var:U> = <nat:6> \} \end{eqnarray} As a result , this list of instructions is validated as correct . \end{proof} \end{document} 
~
Require Import String . From PLF Require Import Imp . From PLF Require Import Hoare . Definition <var:A0> : string := " <var:A0> " . Theorem <genH:poly_code_correct> : forall <var:W> : nat , {{ <var:a> = <var:W> }} <var:A0> := <nat:6> ; <var:U> := <var:A0> {{ <var:U> = <nat:6> }} . Proof . intros . apply hoare_seq with ( Q := ( ( <var:a> = <var:W> /\ <var:A0> = <nat:6> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:a> = <var:W> /\ <var:U> = <nat:6> ) ) %assertion ) . all : eapply hoare_consequence_pre ; try ( apply hoare_asgn || assn_auto'' ) . Qed . 