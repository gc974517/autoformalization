\begin{document} \begin{theorem} Consider the following program in \emph{Imp} such that \begin{verbatim} <var:C0> := <nat:5> ; <var:h> := <var:C0> \end{verbatim} Assuming it to hold that $ <var:x> = <var:J> $ before the execution of the segment of code it must be that $ <var:h> = <nat:5> $ after series of instructions terminates . \end{theorem} \begin{proof} Showing our claim about correctness for our list of instructions is clear with standard Hoare techniques . Shifting focus toward the proceeding line seen in our list of instructions , the assignment command giving $ <nat:5> $ to $ <var:C0>$ . This code transfers the condition $ \{ <var:x> = <var:J> \} $ into $ \{ <var:x> = <var:J> \land <var:C0> = <nat:5> \} $ . Taking another step toward the subsequent piece of code in our series of commands , we have the variable assignmet line \verb | <var:h> := <var:C0> | . This statement advances the condition $ \{ <var:x> = <var:J> \land <var:C0> = <nat:5> \} $ to the condition $ \{ <var:x> = <var:J> \land <var:h> = <nat:5> \} $ . \end{proof} \end{document} 
~
Require Import String . From PLF Require Import Imp . From PLF Require Import Hoare . Definition <var:C0> : string := " <var:C0> " . Theorem <genH:poly_code_correct> : forall <var:J> : nat , {{ <var:x> = <var:J> }} <var:C0> := <nat:5> ; <var:h> := <var:C0> {{ <var:h> = <nat:5> }} . Proof . intros . apply hoare_seq with ( Q := ( ( <var:x> = <var:J> /\ <var:C0> = <nat:5> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:x> = <var:J> /\ <var:h> = <nat:5> ) ) %assertion ) . all : eapply hoare_consequence_pre ; try ( apply hoare_asgn || assn_auto'' ) . Qed . 