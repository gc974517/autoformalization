\begin{document} \begin{theorem} We define a set of commands as follows \begin{verbatim} <var:o> := <nat:4> ; <var:o> := <nat:4> + <var:o> * <var:e> ; <var:o> := <nat:3> + <var:o> * <var:e> \end{verbatim} Allow for some positive integer coefficients $ <var:l> $ it to hold that $ <var:e> = <var:l> $ before running the set of commands , it must be that we see $ <var:o> = <nat:4> * <var:l> ^ <nat:2> + <nat:4> * <var:l> + <nat:3> $ when code is done . \end{theorem} \begin{proof} The course of logic for our list of commands can be demonstrated using usual Hoare techniques . Now , we see \[ \begin{tabular} {rcl} \{ <var:e> = <var:l> \} & <var:o> := <nat:4> & \{ <var:e> = <var:l> \land <var:o> = <nat:4> \} \\ \{ <var:e> = <var:l> \land <var:o> = <nat:4> \} & <var:o> := <nat:4> + <var:o> * <var:e> & \{ <var:e> = <var:l> \land <var:o> = <nat:4> \times <var:l> + <nat:4> \} \end{tabular} Considering the subsequent statement in the series of instructions , we see \[ \begin{tabular} {rcl} \{ <var:e> = <var:l> \} & <var:o> := <nat:4> & \{ <var:e> = <var:l> \land <var:o> = <nat:4> \} \end{tabular} \end{proof} \end{document} 
~
Require Import String . From PLF Require Import Imp . From PLF Require Import Hoare . Theorem <genH:poly_code_correct> : forall <var:l> : nat , {{ <var:e> = <var:l> }} <var:o> := <nat:4> ; <var:o> := <nat:4> + <var:o> * <var:e> ; <var:o> := <nat:3> + <var:o> * <var:e> {{ <var:o> = <nat:4> * <var:l> ^ <nat:2> + <nat:4> * <var:l> + <nat:3> }} . Proof . intros . apply hoare_seq with ( Q := ( ( <var:e> = <var:l> /\ <var:o> = <nat:4> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:e> = <var:l> /\ <var:o> = <nat:4> * <var:l> + <nat:4> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:e> = <var:l> /\ <var:o> = <nat:4> * <var:l> ^ <nat:2> + <nat:4> * <var:l> + <nat:3> ) ) %assertion ) . all : eapply hoare_consequence_pre ; try ( apply hoare_asgn || assn_auto'' ) . Qed . 