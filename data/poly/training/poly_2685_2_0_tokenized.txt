\begin{document} \begin{theorem} Let the following segment of code : \begin{verbatim} <var:L0> := <nat:2> ; <var:Z> := <var:L0> \end{verbatim} Assume it to be that $ <var:b> = <var:C> $ prior to the execution of this series of commands it holds that $ <var:Z> = <nat:2> $ . \end{theorem} \begin{proof} \begin{eqnarray} \{ <var:b> = <var:C> \} \\ <var:L0> := <nat:2> ; \\ \{ <var:b> = <var:C> \land <var:L0> = <nat:2> \} \\ <var:Z> := <var:L0> \\ \{ <var:b> = <var:C> \land <var:Z> = <nat:2> \} \end{eqnarray} Using typical Hoare reasoning resolves the argument . \end{proof} \end{document} 
~
Require Import String . From PLF Require Import Imp . From PLF Require Import Hoare . Definition <var:L0> : string := " <var:L0> " . Theorem <genH:poly_code_correct> : forall <var:C> : nat , {{ <var:b> = <var:C> }} <var:L0> := <nat:2> ; <var:Z> := <var:L0> {{ <var:Z> = <nat:2> }} . Proof . intros . apply hoare_seq with ( Q := ( ( <var:b> = <var:C> /\ <var:L0> = <nat:2> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:b> = <var:C> /\ <var:Z> = <nat:2> ) ) %assertion ) . all : eapply hoare_consequence_pre ; try ( apply hoare_asgn || assn_auto'' ) . Qed . 