\begin{document} \begin{theorem} Consider a set of commands : \begin{verbatim} <var:T0> := <nat:2> ; <var:Q> := <var:T0> \end{verbatim} Allowing $ <var:b> = <var:a> $ before executing the program , it follows that we see $ <var:Q> = <nat:2> $ after series of commands has exited . \end{theorem} \begin{proof} Showing our claim about correctness for this series of commands is done using the below decorated series of commands . \begin{eqnarray} \{ <var:b> = <var:a> \} \\ <var:T0> := <nat:2> ; \\ \{ <var:b> = <var:a> \land <var:T0> = <nat:2> \} \\ <var:Q> := <var:T0> \\ \{ <var:b> = <var:a> \land <var:Q> = <nat:2> \} \end{eqnarray} The application of Hoare reasoning finalizes the argument . \end{proof} \end{document} 
~
Require Import String . From PLF Require Import Imp . From PLF Require Import Hoare . Definition <var:T0> : string := " <var:T0> " . Theorem <genH:poly_code_correct> : forall <var:a> : nat , {{ <var:b> = <var:a> }} <var:T0> := <nat:2> ; <var:Q> := <var:T0> {{ <var:Q> = <nat:2> }} . Proof . intros . apply hoare_seq with ( Q := ( ( <var:b> = <var:a> /\ <var:T0> = <nat:2> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:b> = <var:a> /\ <var:Q> = <nat:2> ) ) %assertion ) . all : eapply hoare_consequence_pre ; try ( apply hoare_asgn || assn_auto'' ) . Qed . 