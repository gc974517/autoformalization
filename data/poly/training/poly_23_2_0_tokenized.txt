\begin{document} \begin{theorem} Let the following program in \emph{Imp} such that \begin{verbatim} <var:P0> := <nat:8> ; <var:b> := <var:P0> \end{verbatim} Allowing that we have $ <var:Y> = <var:p> $ for all natural numbers $ <var:p> $ ahead of the evaluation of this list of commands it must be that we have $ <var:b> = <nat:8> $ once series of instructions has exited . \end{theorem} \begin{proof} \begin{eqnarray} \{ <var:Y> = <var:p> \} \\ <var:P0> := <nat:8> ; \\ \{ <var:Y> = <var:p> \land <var:P0> = <nat:8> \} \\ <var:b> := <var:P0> \\ \{ <var:Y> = <var:p> \land <var:b> = <nat:8> \} \end{eqnarray} The application of Hoare logic finalizes the proof . \end{proof} \end{document} 
~
Require Import String . From PLF Require Import Imp . From PLF Require Import Hoare . Definition <var:P0> : string := " <var:P0> " . Theorem <genH:poly_code_correct> : forall <var:p> : nat , {{ <var:Y> = <var:p> }} <var:P0> := <nat:8> ; <var:b> := <var:P0> {{ <var:b> = <nat:8> }} . Proof . intros . apply hoare_seq with ( Q := ( ( <var:Y> = <var:p> /\ <var:P0> = <nat:8> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:Y> = <var:p> /\ <var:b> = <nat:8> ) ) %assertion ) . all : eapply hoare_consequence_pre ; try ( apply hoare_asgn || assn_auto'' ) . Qed . 