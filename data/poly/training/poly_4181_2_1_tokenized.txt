\begin{document} \begin{theorem} Consider a set of commands as follows \begin{verbatim} <var:x0> := <nat:7> ; <var:f> := <var:x0> \end{verbatim} Allowing , assuming some natural coefficients $ <var:M> $ , that $ <var:W> = <var:M> $ ahead of evaluating our set of commands , it follows that we see $ <var:f> = <nat:7> $ . \end{theorem} \begin{proof} Demonstrating correctness of the segment of code can be demonstrated using usual Hoare techniques . Shifting focus toward the subsequent line of code seen in our program , we have \[ \begin{tabular} {rcl} \{ <var:W> = <var:M> \} & <var:x0> := <nat:7> & \{ <var:W> = <var:M> \land <var:x0> = <nat:7> \} \end{tabular} This is deduced with the variable assignmet scheme in usual Hoare techniques . Considering the next piece of code contained in the series of instructions , \[ \begin{tabular} {rcl} \{ <var:W> = <var:M> \} & <var:x0> := <nat:7> & \{ <var:W> = <var:M> \land <var:x0> = <nat:7> \} \end{tabular} This is known to be sound through the variable binding law obtained from standard Hoare logic . \end{proof} \end{document} 
~
Require Import String . From PLF Require Import Imp . From PLF Require Import Hoare . Definition <var:x0> : string := " <var:x0> " . Theorem <genH:poly_code_correct> : forall <var:M> : nat , {{ <var:W> = <var:M> }} <var:x0> := <nat:7> ; <var:f> := <var:x0> {{ <var:f> = <nat:7> }} . Proof . intros . apply hoare_seq with ( Q := ( ( <var:W> = <var:M> /\ <var:x0> = <nat:7> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:W> = <var:M> /\ <var:f> = <nat:7> ) ) %assertion ) . all : eapply hoare_consequence_pre ; try ( apply hoare_asgn || assn_auto'' ) . Qed . 