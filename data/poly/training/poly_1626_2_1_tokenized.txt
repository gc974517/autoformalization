\begin{document} \begin{definition} Take a series of instructions <def:poly> in \emph{Imp} as follows \begin{verbatim} <var:H0> := <nat:3> ; <var:P> := <var:H0> \end{verbatim} \end{definition} \begin{theorem} Given --- given any $ <var:r> \in \mathbb{Z}^+ $ --- it to be that $ <var:y> = <var:r> $ prior to the evaluation of our list of commands , it follows that $ <var:P> = <nat:3> $ . \end{theorem} \begin{proof} Arguing the correctness of the series of commands can be demonstrated through usual Hoare logic . Moving onward , the variable update line \verb | <var:H0> := <nat:3> ; | . This forwards the precondition $ \{ <var:y> = <var:r> \} $ as the condition $ \{ <var:y> = <var:r> \land <var:H0> = <nat:3> \} $ . This is ensured using the assignment scheme from standard Hoare reasoning . Moving on , we have the variable binding line \verb | <var:P> := <var:H0> | . This line forwards $ \{ <var:y> = <var:r> \land <var:H0> = <nat:3> \} $ toward $ \{ <var:y> = <var:r> \land <var:P> = <nat:3> \} $ . \end{proof} \end{document} 
~
Require Import String . From PLF Require Import Imp . From PLF Require Import Hoare . Definition <var:H0> : string := " <var:H0> " . Definition <def:poly> := <var:H0> := <nat:3> ; <var:P> := <var:H0> . Theorem <genH:poly_code_correct> : forall <var:r> : nat , {{ <var:y> = <var:r> }} <def:poly> {{ <var:P> = <nat:3> }} . Proof . intros . apply hoare_seq with ( Q := ( ( <var:y> = <var:r> /\ <var:H0> = <nat:3> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:y> = <var:r> /\ <var:P> = <nat:3> ) ) %assertion ) . all : eapply hoare_consequence_pre ; try ( apply hoare_asgn || assn_auto'' ) . Qed . 