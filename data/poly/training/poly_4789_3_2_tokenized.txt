\begin{document} \begin{theorem} Let the following series of commands in \emph{Imp} as \begin{verbatim} <var:v> := <nat:4> ; <var:v> := <nat:2> + <var:v> * <var:N> ; <var:v> := <nat:1> + <var:v> * <var:N> \end{verbatim} Allowing for all whole numbers $ <var:a> $ it to be that $ <var:N> = <var:a> $ before interpreting this set of commands , it must be that we see $ <var:v> = <nat:4> \times <var:a> ^ <nat:2> + <nat:2> \times <var:a> + <nat:1> $ . \end{theorem} \begin{proof} Using Hoare techniques produces : \begin{eqnarray} \{ <var:N> = <var:a> \} \\ <var:v> := <nat:4> ; \\ \{ <var:N> = <var:a> \land <var:v> = <nat:4> \} \\ <var:v> := <nat:2> + <var:v> * <var:N> ; \\ \{ <var:N> = <var:a> \land <var:v> = <nat:4> \cdot <var:a> + <nat:2> \} \\ <var:v> := <nat:1> + <var:v> * <var:N> \\ \{ <var:N> = <var:a> \land <var:v> = <nat:4> \cdot <var:a> ^ <nat:2> + <nat:2> \cdot <var:a> + <nat:1> \} \end{eqnarray} Given the preceding argument , the code segment has been proven correct . \end{proof} \end{document} 
~
Require Import String . From PLF Require Import Imp . From PLF Require Import Hoare . Theorem <genH:poly_code_correct> : forall <var:a> : nat , {{ <var:N> = <var:a> }} <var:v> := <nat:4> ; <var:v> := <nat:2> + <var:v> * <var:N> ; <var:v> := <nat:1> + <var:v> * <var:N> {{ <var:v> = <nat:4> * <var:a> ^ <nat:2> + <nat:2> * <var:a> + <nat:1> }} . Proof . intros . apply hoare_seq with ( Q := ( ( <var:N> = <var:a> /\ <var:v> = <nat:4> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:N> = <var:a> /\ <var:v> = <nat:4> * <var:a> + <nat:2> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:N> = <var:a> /\ <var:v> = <nat:4> * <var:a> ^ <nat:2> + <nat:2> * <var:a> + <nat:1> ) ) %assertion ) . all : eapply hoare_consequence_pre ; try ( apply hoare_asgn || assn_auto'' ) . Qed . 