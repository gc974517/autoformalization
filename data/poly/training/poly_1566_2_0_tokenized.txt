\begin{document} \begin{definition} Take a set of commands <def:poly> in \emph{Imp} as follows \begin{verbatim} <var:q0> := <nat:8> ; <var:C> := <var:q0> \end{verbatim} \end{definition} \begin{theorem} Consider the following code <def:poly> . Given ( for every $ <var:l> \in \mathbb{Z}^+ $ ) it to be that $ <var:n> = <var:l> $ ahead of interpreting our list of commands it holds that we have $ <var:C> = <nat:8> $ . \end{theorem} \begin{proof} Proving correctness for this series of instructions is demonstrated through standard Hoare techniques . Stepping through , \begin{eqnarray} \{ <var:n> = <var:l> \} \, <var:q0> := <nat:8> \, \{ <var:n> = <var:l> \land <var:q0> = <nat:8> \} \end{eqnarray} Taking another step toward the upcoming command contained in our list of commands , \begin{eqnarray} \{ <var:n> = <var:l> \} \, <var:q0> := <nat:8> \, \{ <var:n> = <var:l> \land <var:q0> = <nat:8> \} \end{eqnarray} \end{proof} \end{document} 
~
Require Import String . From PLF Require Import Imp . From PLF Require Import Hoare . Definition <var:q0> : string := " <var:q0> " . Definition <def:poly> := <var:q0> := <nat:8> ; <var:C> := <var:q0> . Theorem <genH:poly_code_correct> : forall <var:l> : nat , {{ <var:n> = <var:l> }} <def:poly> {{ <var:C> = <nat:8> }} . Proof . intros . apply hoare_seq with ( Q := ( ( <var:n> = <var:l> /\ <var:q0> = <nat:8> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:n> = <var:l> /\ <var:C> = <nat:8> ) ) %assertion ) . all : eapply hoare_consequence_pre ; try ( apply hoare_asgn || assn_auto'' ) . Qed . 