\begin{document} \begin{definition} We define the following list of commands <def:poly> in \emph{Imp} such that \begin{verbatim} <var:h0> := <nat:4> ; <var:C> := <var:h0> \end{verbatim} \end{definition} \begin{theorem} Assuming it to be that $ <var:Q> = <var:J> $ --- for any $ <var:J> \in \mathbb{N} $ --- before the execution of the set of commands it holds that $ <var:C> = <nat:4> $ after set of commands finishes . \end{theorem} \begin{proof} The method of proof for the set of commands is evident through usual Hoare reasoning . Paying attention to the proceeding command found in the code , the statement yielding $ <nat:4> $ toward $ <var:h0>$ . This advances the condition $ \{ <var:Q> = <var:J> \} $ toward the postcondition $ \{ <var:Q> = <var:J> \land <var:h0> = <nat:4> \} $ . This is deduced through the assignment inference rule given in Hoare logic . Advancing on , we see the assignment statement binding $ <var:h0$ toward $ <var:C>$ . This takes the condition $ \{ <var:Q> = <var:J> \land <var:h0> = <nat:4> \} $ toward the condition $ \{ <var:Q> = <var:J> \land <var:C> = <nat:4> \} $ . \end{proof} \end{document} 
~
Require Import String . From PLF Require Import Imp . From PLF Require Import Hoare . Definition <var:h0> : string := " <var:h0> " . Definition <def:poly> := <var:h0> := <nat:4> ; <var:C> := <var:h0> . Theorem <genH:poly_code_correct> : forall <var:J> : nat , {{ <var:Q> = <var:J> }} <def:poly> {{ <var:C> = <nat:4> }} . Proof . intros . apply hoare_seq with ( Q := ( ( <var:Q> = <var:J> /\ <var:h0> = <nat:4> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:Q> = <var:J> /\ <var:C> = <nat:4> ) ) %assertion ) . all : eapply hoare_consequence_pre ; try ( apply hoare_asgn || assn_auto'' ) . Qed . 