\begin{document} \begin{definition} Let the following set of commands <def:poly> in \emph{Imp} as \begin{verbatim} <var:G0> := <nat:2> ; <var:q> := <var:G0> \end{verbatim} \end{definition} \begin{theorem} Consider the following code <def:poly> in \emph{Imp} . Allow it to hold that $ <var:I> = <var:R> $ given every natural numbers $ <var:R> $ ahead of the execution of our series of commands , it follows that we have $ <var:q> = <nat:2> $ . \end{theorem} \begin{proof} Using usual Hoare techniques results in : \begin{eqnarray} \{ <var:I> = <var:R> \} \\ <var:G0> := <nat:2> ; \\ \{ <var:I> = <var:R> \land <var:G0> = <nat:2> \} \\ <var:q> := <var:G0> \\ \{ <var:I> = <var:R> \land <var:q> = <nat:2> \} \end{eqnarray} Given the above , the series of commands has been proven correct . \end{proof} \end{document} 
~
Require Import String . From PLF Require Import Imp . From PLF Require Import Hoare . Definition <var:G0> : string := " <var:G0> " . Definition <def:poly> := <var:G0> := <nat:2> ; <var:q> := <var:G0> . Theorem <genH:poly_code_correct> : forall <var:R> : nat , {{ <var:I> = <var:R> }} <def:poly> {{ <var:q> = <nat:2> }} . Proof . intros . apply hoare_seq with ( Q := ( ( <var:I> = <var:R> /\ <var:G0> = <nat:2> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:I> = <var:R> /\ <var:q> = <nat:2> ) ) %assertion ) . all : eapply hoare_consequence_pre ; try ( apply hoare_asgn || assn_auto'' ) . Qed . 