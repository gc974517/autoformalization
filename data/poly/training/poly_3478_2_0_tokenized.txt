\begin{document} \begin{theorem} Consider a segment of code such that \begin{verbatim} <var:b0> := <nat:6> ; <var:s> := <var:b0> \end{verbatim} Assuming $ <var:w> = <var:j> $ prior to the evaluation of our program it holds that we see $ <var:s> = <nat:6> $ once list of commands has finished executing . \end{theorem} \begin{proof} The way to prove correctness for this code segment can be accomplished through usual Hoare logic . After , \begin{eqnarray} \{ <var:w> = <var:j> \} \, <var:b0> := <nat:6> \, \{ <var:w> = <var:j> \land <var:b0> = <nat:6> \} \\ \{ <var:w> = <var:j> \land <var:b0> = <nat:6> \} \, <var:s> := <var:b0\, \{ <var:w> = <var:j> \land <var:s> = <nat:6> \} \end{eqnarray} \end{proof} \end{document} 
~
Require Import String . From PLF Require Import Imp . From PLF Require Import Hoare . Definition <var:b0> : string := " <var:b0> " . Theorem <genH:poly_code_correct> : forall <var:j> : nat , {{ <var:w> = <var:j> }} <var:b0> := <nat:6> ; <var:s> := <var:b0> {{ <var:s> = <nat:6> }} . Proof . intros . apply hoare_seq with ( Q := ( ( <var:w> = <var:j> /\ <var:b0> = <nat:6> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:w> = <var:j> /\ <var:s> = <nat:6> ) ) %assertion ) . all : eapply hoare_consequence_pre ; try ( apply hoare_asgn || assn_auto'' ) . Qed . 