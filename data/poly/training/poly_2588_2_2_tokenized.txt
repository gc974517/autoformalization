\begin{document} \begin{definition} Let the following program <def:poly> in \emph{Imp} such that \begin{verbatim} <var:b> := <nat:1> ; <var:b> := <nat:2> + <var:b> * <var:p> \end{verbatim} \end{definition} \begin{theorem} Assuming for all natural coefficients $ <var:c> $ that we have $ <var:p> = <var:c> $ before interpreting this code segment it must be that $ <var:b> = <nat:1> \times <var:c> + <nat:2> $ after series of instructions is done executing . \end{theorem} \begin{proof} Utilizing typical Hoare techniques returns : \begin{eqnarray} \{ <var:p> = <var:c> \} \\ <var:b> := <nat:1> ; \\ \{ <var:p> = <var:c> \land <var:b> = <nat:1> \} \\ <var:b> := <nat:2> + <var:b> * <var:p> \\ \{ <var:p> = <var:c> \land <var:b> = <nat:1> * <var:c> + <nat:2> \} \end{eqnarray} Considering the above , our set of instructions has been shown correct . \end{proof} \end{document} 
~
Require Import String . From PLF Require Import Imp . From PLF Require Import Hoare . Definition <def:poly> := <var:b> := <nat:1> ; <var:b> := <nat:2> + <var:b> * <var:p> . Theorem <genH:poly_code_correct> : forall <var:c> : nat , {{ <var:p> = <var:c> }} <def:poly> {{ <var:b> = <nat:1> * <var:c> + <nat:2> }} . Proof . intros . apply hoare_seq with ( Q := ( ( <var:p> = <var:c> /\ <var:b> = <nat:1> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:p> = <var:c> /\ <var:b> = <nat:1> * <var:c> + <nat:2> ) ) %assertion ) . all : eapply hoare_consequence_pre ; try ( apply hoare_asgn || assn_auto'' ) . Qed . 