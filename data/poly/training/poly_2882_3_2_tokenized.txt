\begin{document} \begin{definition} We define a list of instructions <def:poly> in \emph{Imp} such that \begin{verbatim} <var:c> := <nat:4> ; <var:c> := <nat:4> + <var:c> * <var:R> ; <var:c> := <nat:2> + <var:c> * <var:R> \end{verbatim} \end{definition} \begin{theorem} Take a list of instructions <def:poly> . Allow with some $ <var:h> \in \mathbb{N} $ $ <var:R> = <var:h> $ ahead of the evaluation of this code it holds that we have $ <var:c> = <nat:4> \times <var:h> ^ <nat:2> + <nat:4> \times <var:h> + <nat:2> $ . \end{theorem} \begin{proof} Applying Hoare techniques gives us : \begin{eqnarray} \{ <var:R> = <var:h> \} \\ <var:c> := <nat:4> ; \\ \{ <var:R> = <var:h> \land <var:c> = <nat:4> \} \\ <var:c> := <nat:4> + <var:c> * <var:R> ; \\ \{ <var:R> = <var:h> \land <var:c> = <nat:4> \cdot <var:h> + <nat:4> \} \\ <var:c> := <nat:2> + <var:c> * <var:R> \\ \{ <var:R> = <var:h> \land <var:c> = <nat:4> \cdot <var:h> ^ <nat:2> + <nat:4> \cdot <var:h> + <nat:2> \} \end{eqnarray} Therefore , the code has been shown correct . \end{proof} \end{document} 
~
Require Import String . From PLF Require Import Imp . From PLF Require Import Hoare . Definition <def:poly> := <var:c> := <nat:4> ; <var:c> := <nat:4> + <var:c> * <var:R> ; <var:c> := <nat:2> + <var:c> * <var:R> . Theorem <genH:poly_code_correct> : forall <var:h> : nat , {{ <var:R> = <var:h> }} <def:poly> {{ <var:c> = <nat:4> * <var:h> ^ <nat:2> + <nat:4> * <var:h> + <nat:2> }} . Proof . intros . apply hoare_seq with ( Q := ( ( <var:R> = <var:h> /\ <var:c> = <nat:4> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:R> = <var:h> /\ <var:c> = <nat:4> * <var:h> + <nat:4> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:R> = <var:h> /\ <var:c> = <nat:4> * <var:h> ^ <nat:2> + <nat:4> * <var:h> + <nat:2> ) ) %assertion ) . all : eapply hoare_consequence_pre ; try ( apply hoare_asgn || assn_auto'' ) . Qed . 