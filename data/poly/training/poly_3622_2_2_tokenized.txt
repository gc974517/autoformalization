\begin{document} \begin{definition} Consider the following segment of code <def:poly> in \emph{Imp} : \begin{verbatim} <var:d> := <nat:2> ; <var:d> := <nat:2> + <var:d> * <var:v> \end{verbatim} \end{definition} \begin{theorem} Allowing --- given all natural numbers $ <var:i> $ --- $ <var:v> = <var:i> $ before the execution of this set of instructions , it must be that $ <var:d> = <nat:2> \cdot <var:i> + <nat:2> $ . \end{theorem} \begin{proof} The application of typical Hoare techniques returns : \begin{eqnarray} \{ <var:v> = <var:i> \} \\ <var:d> := <nat:2> ; \\ \{ <var:v> = <var:i> \land <var:d> = <nat:2> \} \\ <var:d> := <nat:2> + <var:d> * <var:v> \\ \{ <var:v> = <var:i> \land <var:d> = <nat:2> \cdot <var:i> + <nat:2> \} \end{eqnarray} Thusly , our series of commands is proven correct . \end{proof} \end{document} 
~
Require Import String . From PLF Require Import Imp . From PLF Require Import Hoare . Definition <def:poly> := <var:d> := <nat:2> ; <var:d> := <nat:2> + <var:d> * <var:v> . Theorem <genH:poly_code_correct> : forall <var:i> : nat , {{ <var:v> = <var:i> }} <def:poly> {{ <var:d> = <nat:2> * <var:i> + <nat:2> }} . Proof . intros . apply hoare_seq with ( Q := ( ( <var:v> = <var:i> /\ <var:d> = <nat:2> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:v> = <var:i> /\ <var:d> = <nat:2> * <var:i> + <nat:2> ) ) %assertion ) . all : eapply hoare_consequence_pre ; try ( apply hoare_asgn || assn_auto'' ) . Qed . 