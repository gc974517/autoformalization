\begin{document} \begin{definition} Take the following series of commands <def:poly> in \emph{Imp} as follows \begin{verbatim} <var:c> := <nat:4> ; <var:c> := <nat:1> + <var:c> * <var:W> \end{verbatim} \end{definition} \begin{theorem} Allow that we have $ <var:W> = <var:C> $ --- assuming some $ <var:C> \in \mathbb{Z}^+ $ --- prior to the execution of this segment of code it holds that we see $ <var:c> = <nat:4> * <var:C> + <nat:1> $ . \end{theorem} \begin{proof} Arguing the correctness of this program can be accomplished by standard Hoare logic . Advancing to the subsequent lines of codefound in the set of instructions , we have \begin{eqnarray} \{ <var:W> = <var:C> \} \, <var:c> := <nat:4> \, \{ <var:W> = <var:C> \land <var:c> = <nat:4> \} \\ \{ <var:W> = <var:C> \land <var:c> = <nat:4> \} \, <var:c> := <nat:1> + <var:c> * <var:W\, \{ <var:W> = <var:C> \land <var:c> = <nat:4> * <var:C> + <nat:1> \} \end{eqnarray} \end{proof} \end{document} 
~
Require Import String . From PLF Require Import Imp . From PLF Require Import Hoare . Definition <def:poly> := <var:c> := <nat:4> ; <var:c> := <nat:1> + <var:c> * <var:W> . Theorem <genH:poly_code_correct> : forall <var:C> : nat , {{ <var:W> = <var:C> }} <def:poly> {{ <var:c> = <nat:4> * <var:C> + <nat:1> }} . Proof . intros . apply hoare_seq with ( Q := ( ( <var:W> = <var:C> /\ <var:c> = <nat:4> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:W> = <var:C> /\ <var:c> = <nat:4> * <var:C> + <nat:1> ) ) %assertion ) . all : eapply hoare_consequence_pre ; try ( apply hoare_asgn || assn_auto'' ) . Qed . 