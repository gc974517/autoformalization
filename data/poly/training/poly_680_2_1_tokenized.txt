\begin{document} \begin{definition} Take a list of commands <def:poly> in \emph{Imp} as follows \begin{verbatim} <var:x0> := <nat:4> ; <var:b> := <var:x0> \end{verbatim} \end{definition} \begin{theorem} Define a series of commands <def:poly> in \emph{Imp} . Allow that we have $ <var:N> = <var:X> $ --- given all natural coefficients $ <var:X> $ --- ahead of interpreting this code segment it holds that $ <var:b> = <nat:4> $ . \end{theorem} \begin{proof} Arguing the correctness of the list of commands is accomplished through typical Hoare reasoning . Taking another step toward the next piece of code seen in our list of instructions , we have the variable assignmet statement letting $ <nat:4> $ as $ <var:x0>$ . This command transfers $ \{ <var:N> = <var:X> \} $ into the condition $ \{ <var:N> = <var:X> \land <var:x0> = <nat:4> \} $ . After , we have the variable update statement binding $ <var:x0$ into $ <var:b>$ . This redefines the condition $ \{ <var:N> = <var:X> \land <var:x0> = <nat:4> \} $ as the postcondition $ \{ <var:N> = <var:X> \land <var:b> = <nat:4> \} $ . \end{proof} \end{document} 
~
Require Import String . From PLF Require Import Imp . From PLF Require Import Hoare . Definition <var:x0> : string := " <var:x0> " . Definition <def:poly> := <var:x0> := <nat:4> ; <var:b> := <var:x0> . Theorem <genH:poly_code_correct> : forall <var:X> : nat , {{ <var:N> = <var:X> }} <def:poly> {{ <var:b> = <nat:4> }} . Proof . intros . apply hoare_seq with ( Q := ( ( <var:N> = <var:X> /\ <var:x0> = <nat:4> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:N> = <var:X> /\ <var:b> = <nat:4> ) ) %assertion ) . all : eapply hoare_consequence_pre ; try ( apply hoare_asgn || assn_auto'' ) . Qed . 