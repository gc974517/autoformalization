\begin{document} \begin{theorem} Take a segment of code as follows \begin{verbatim} <var:g0> := <nat:5> ; <var:Y> := <var:g0> \end{verbatim} Allow it to be that $ <var:X> = <var:t> $ ahead of evaluating our set of commands , it holds that we have $ <var:Y> = <nat:5> $ . \end{theorem} \begin{proof} Let the below decorated segment of code . \begin{eqnarray} \{ <var:X> = <var:t> \} \\ <var:g0> := <nat:5> ; \\ \{ <var:X> = <var:t> \land <var:g0> = <nat:5> \} \\ <var:Y> := <var:g0> \\ \{ <var:X> = <var:t> \land <var:Y> = <nat:5> \} \end{eqnarray} Utilizing typical Hoare reasoning solves the goal . \end{proof} \end{document} 
~
Require Import String . From PLF Require Import Imp . From PLF Require Import Hoare . Definition <var:g0> : string := " <var:g0> " . Theorem <genH:poly_code_correct> : forall <var:t> : nat , {{ <var:X> = <var:t> }} <var:g0> := <nat:5> ; <var:Y> := <var:g0> {{ <var:Y> = <nat:5> }} . Proof . intros . apply hoare_seq with ( Q := ( ( <var:X> = <var:t> /\ <var:g0> = <nat:5> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:X> = <var:t> /\ <var:Y> = <nat:5> ) ) %assertion ) . all : eapply hoare_consequence_pre ; try ( apply hoare_asgn || assn_auto'' ) . Qed . 