\begin{document} \begin{definition} Take the following program <def:poly> in \emph{Imp} : \begin{verbatim} <var:K0> := <nat:8> ; <var:j> := <var:K0> \end{verbatim} \end{definition} \begin{theorem} Define the following series of instructions <def:poly> . Given $ <var:A> = <var:z> $ , for every whole numbers $ <var:z> $ , prior to the evaluation of our list of instructions , then $ <var:j> = <nat:8> $ . \end{theorem} \begin{proof} \begin{eqnarray} \{ <var:A> = <var:z> \} \\ <var:K0> := <nat:8> ; \\ \{ <var:A> = <var:z> \land <var:K0> = <nat:8> \} \\ <var:j> := <var:K0> \\ \{ <var:A> = <var:z> \land <var:j> = <nat:8> \} \end{eqnarray} The application of typical Hoare techniques finishes the proof . \end{proof} \end{document} 
~
Require Import String . From PLF Require Import Imp . From PLF Require Import Hoare . Definition <var:K0> : string := " <var:K0> " . Definition <def:poly> := <var:K0> := <nat:8> ; <var:j> := <var:K0> . Theorem <genH:poly_code_correct> : forall <var:z> : nat , {{ <var:A> = <var:z> }} <def:poly> {{ <var:j> = <nat:8> }} . Proof . intros . apply hoare_seq with ( Q := ( ( <var:A> = <var:z> /\ <var:K0> = <nat:8> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:A> = <var:z> /\ <var:j> = <nat:8> ) ) %assertion ) . all : eapply hoare_consequence_pre ; try ( apply hoare_asgn || assn_auto'' ) . Qed . 