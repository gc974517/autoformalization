\begin{document} \begin{theorem} Consider the following program such that \begin{verbatim} <var:j0> := <nat:7> ; <var:Q> := <var:j0> \end{verbatim} Allow assuming some positive integer coefficients $ <var:M> $ it to hold that $ <var:m> = <var:M> $ before running the segment of code , then we see $ <var:Q> = <nat:7> $ after set of instructions has finished . \end{theorem} \begin{proof} Demonstrating correctness of this set of instructions can be demonstrated by Hoare techniques . Following , we see \[ \begin{tabular} {rcl} \{ <var:m> = <var:M> \} & <var:j0> := <nat:7> & \{ <var:m> = <var:M> \land <var:j0> = <nat:7> \} \\ \{ <var:m> = <var:M> \land <var:j0> = <nat:7> \} & <var:Q> := <var:j0& \{ <var:m> = <var:M> \land <var:Q> = <nat:7> \} \end{tabular} \end{proof} \end{document} 
~
Require Import String . From PLF Require Import Imp . From PLF Require Import Hoare . Definition <var:j0> : string := " <var:j0> " . Theorem <genH:poly_code_correct> : forall <var:M> : nat , {{ <var:m> = <var:M> }} <var:j0> := <nat:7> ; <var:Q> := <var:j0> {{ <var:Q> = <nat:7> }} . Proof . intros . apply hoare_seq with ( Q := ( ( <var:m> = <var:M> /\ <var:j0> = <nat:7> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:m> = <var:M> /\ <var:Q> = <nat:7> ) ) %assertion ) . all : eapply hoare_consequence_pre ; try ( apply hoare_asgn || assn_auto'' ) . Qed . 