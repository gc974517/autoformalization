\begin{document} \begin{definition} Consider the following series of instructions <def:poly> in \emph{Imp} as follows \begin{verbatim} <var:W0> := <nat:5> ; <var:U> := <var:W0> \end{verbatim} \end{definition} \begin{theorem} Assuming that we have $ <var:N> = <var:e> $ prior to interpreting the program , it must be that we have $ <var:U> = <nat:5> $ once segment of code has exited . \end{theorem} \begin{proof} Showing our claim about correctness for the code is given using the below decorated segment of code . \begin{eqnarray} \{ <var:N> = <var:e> \} \\ <var:W0> := <nat:5> ; \\ \{ <var:N> = <var:e> \land <var:W0> = <nat:5> \} \\ <var:U> := <var:W0> \\ \{ <var:N> = <var:e> \land <var:U> = <nat:5> \} \end{eqnarray} Utilizing usual Hoare techniques resolves the argument . \end{proof} \end{document} 
~
Require Import String . From PLF Require Import Imp . From PLF Require Import Hoare . Definition <var:W0> : string := " <var:W0> " . Definition <def:poly> := <var:W0> := <nat:5> ; <var:U> := <var:W0> . Theorem <genH:poly_code_correct> : forall <var:e> : nat , {{ <var:N> = <var:e> }} <def:poly> {{ <var:U> = <nat:5> }} . Proof . intros . apply hoare_seq with ( Q := ( ( <var:N> = <var:e> /\ <var:W0> = <nat:5> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:N> = <var:e> /\ <var:U> = <nat:5> ) ) %assertion ) . all : eapply hoare_consequence_pre ; try ( apply hoare_asgn || assn_auto'' ) . Qed . 