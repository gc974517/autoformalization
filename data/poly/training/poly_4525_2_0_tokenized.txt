\begin{document} \begin{theorem} Let the following program in \emph{Imp} : \begin{verbatim} <var:h0> := <nat:3> ; <var:I> := <var:h0> \end{verbatim} Allowing that we have $ <var:Y> = <var:j> $ , given some $ <var:j> $ , prior to the execution of our series of commands it follows that $ <var:I> = <nat:3> $ . \end{theorem} \begin{proof} Observe the below decorated code . \begin{eqnarray} \{ <var:Y> = <var:j> \} \\ <var:h0> := <nat:3> ; \\ \{ <var:Y> = <var:j> \land <var:h0> = <nat:3> \} \\ <var:I> := <var:h0> \\ \{ <var:Y> = <var:j> \land <var:I> = <nat:3> \} \end{eqnarray} Applying usual Hoare logic accomplishes the argument . \end{proof} \end{document} 
~
Require Import String . From PLF Require Import Imp . From PLF Require Import Hoare . Definition <var:h0> : string := " <var:h0> " . Theorem <genH:poly_code_correct> : forall <var:j> : nat , {{ <var:Y> = <var:j> }} <var:h0> := <nat:3> ; <var:I> := <var:h0> {{ <var:I> = <nat:3> }} . Proof . intros . apply hoare_seq with ( Q := ( ( <var:Y> = <var:j> /\ <var:h0> = <nat:3> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:Y> = <var:j> /\ <var:I> = <nat:3> ) ) %assertion ) . all : eapply hoare_consequence_pre ; try ( apply hoare_asgn || assn_auto'' ) . Qed . 