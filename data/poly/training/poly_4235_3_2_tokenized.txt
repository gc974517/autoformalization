\begin{document} \begin{definition} Let the following program <def:poly> in \emph{Imp} as follows \begin{verbatim} <var:O> := <nat:4> ; <var:O> := <var:O> * <var:r> ; <var:O> := <nat:4> + <var:O> * <var:r> \end{verbatim} \end{definition} \begin{theorem} Assume that $ <var:r> = <var:P> $ before the execution of the series of instructions it holds that we have $ <var:O> = <nat:4> * <var:P> ^ <nat:2> + <nat:4> $ . \end{theorem} \begin{proof} The application of Hoare reasoning returns : \begin{eqnarray} \{ <var:r> = <var:P> \} \\ <var:O> := <nat:4> ; \\ \{ <var:r> = <var:P> \land <var:O> = <nat:4> \} \\ <var:O> := <var:O> * <var:r> ; \\ \{ <var:r> = <var:P> \land <var:O> = <nat:4> * <var:P> + \} \\ <var:O> := <nat:4> + <var:O> * <var:r> \\ \{ <var:r> = <var:P> \land <var:O> = <nat:4> * <var:P> ^ <nat:2> + <nat:4> \} \end{eqnarray} Given the preceding argument , our set of commands is demonstrated to be correct . \end{proof} \end{document} 
~
Require Import String . From PLF Require Import Imp . From PLF Require Import Hoare . Definition <def:poly> := <var:O> := <nat:4> ; <var:O> := <var:O> * <var:r> ; <var:O> := <nat:4> + <var:O> * <var:r> . Theorem <genH:poly_code_correct> : forall <var:P> : nat , {{ <var:r> = <var:P> }} <def:poly> {{ <var:O> = <nat:4> * <var:P> ^ <nat:2> + <nat:4> }} . Proof . intros . apply hoare_seq with ( Q := ( ( <var:r> = <var:P> /\ <var:O> = <nat:4> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:r> = <var:P> /\ <var:O> = <nat:4> * <var:P> + ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:r> = <var:P> /\ <var:O> = <nat:4> * <var:P> ^ <nat:2> + <nat:4> ) ) %assertion ) . all : eapply hoare_consequence_pre ; try ( apply hoare_asgn || assn_auto'' ) . Qed . 