\begin{document} \begin{definition} Consider the following series of instructions <def:poly> in \emph{Imp} : \begin{verbatim} <var:X0> := <nat:3> ; <var:Z> := <var:X0> \end{verbatim} \end{definition} \begin{theorem} Assume that $ <var:O> = <var:D> $ ahead of executing this list of commands it follows that we have $ <var:Z> = <nat:3> $ . \end{theorem} \begin{proof} Applying Hoare techniques results in : \begin{eqnarray} \{ <var:O> = <var:D> \} \\ <var:X0> := <nat:3> ; \\ \{ <var:O> = <var:D> \land <var:X0> = <nat:3> \} \\ <var:Z> := <var:X0> \\ \{ <var:O> = <var:D> \land <var:Z> = <nat:3> \} \end{eqnarray} Given the above , the series of commands is shown correct . \end{proof} \end{document} 
~
Require Import String . From PLF Require Import Imp . From PLF Require Import Hoare . Definition <var:X0> : string := " <var:X0> " . Definition <def:poly> := <var:X0> := <nat:3> ; <var:Z> := <var:X0> . Theorem <genH:poly_code_correct> : forall <var:D> : nat , {{ <var:O> = <var:D> }} <def:poly> {{ <var:Z> = <nat:3> }} . Proof . intros . apply hoare_seq with ( Q := ( ( <var:O> = <var:D> /\ <var:X0> = <nat:3> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:O> = <var:D> /\ <var:Z> = <nat:3> ) ) %assertion ) . all : eapply hoare_consequence_pre ; try ( apply hoare_asgn || assn_auto'' ) . Qed . 