\begin{document} \begin{theorem} Consider a set of instructions as \begin{verbatim} <var:S0> := <nat:6> ; <var:p> := <var:S0> \end{verbatim} Given ( for any natural coefficients $ <var:C> $ ) $ <var:J> = <var:C> $ prior to the evaluation of this set of commands , it holds that $ <var:p> = <nat:6> $ after set of commands has terminated . \end{theorem} \begin{proof} The argument for this list of instructions can be seen using standard Hoare logic . Shifting focus toward the upcoming line in the code , we have the environment update code \verb | <var:S0> := <nat:6> ; | . This moves $ \{ <var:J> = <var:C> \} $ into $ \{ <var:J> = <var:C> \land <var:S0> = <nat:6> \} $ . This is deduced with the assignment rule from Hoare techniques . Considering the following line seen in our code , we see the binding command letting $ <var:S0$ to $ <var:p>$ . This statement transfers the condition $ \{ <var:J> = <var:C> \land <var:S0> = <nat:6> \} $ toward $ \{ <var:J> = <var:C> \land <var:p> = <nat:6> \} $ . \end{proof} \end{document} 
~
Require Import String . From PLF Require Import Imp . From PLF Require Import Hoare . Definition <var:S0> : string := " <var:S0> " . Theorem <genH:poly_code_correct> : forall <var:C> : nat , {{ <var:J> = <var:C> }} <var:S0> := <nat:6> ; <var:p> := <var:S0> {{ <var:p> = <nat:6> }} . Proof . intros . apply hoare_seq with ( Q := ( ( <var:J> = <var:C> /\ <var:S0> = <nat:6> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:J> = <var:C> /\ <var:p> = <nat:6> ) ) %assertion ) . all : eapply hoare_consequence_pre ; try ( apply hoare_asgn || assn_auto'' ) . Qed . 