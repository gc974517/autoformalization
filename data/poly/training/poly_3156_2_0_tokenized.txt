\begin{document} \begin{definition} Define a set of instructions <def:poly> in \emph{Imp} as \begin{verbatim} <var:R0> := <nat:5> ; <var:X> := <var:R0> \end{verbatim} \end{definition} \begin{theorem} Consider the following list of commands <def:poly> in \emph{Imp} . Allowing that $ <var:b> = <var:j> $ --- assuming some positive integer coefficients $ <var:j> $ --- prior to the execution of this series of instructions , it holds that we see $ <var:X> = <nat:5> $ after list of commands executes . \end{theorem} \begin{proof} The course of logic for this set of instructions can be given with the below decorated list of commands . \begin{eqnarray} \{ <var:b> = <var:j> \} \\ <var:R0> := <nat:5> ; \\ \{ <var:b> = <var:j> \land <var:R0> = <nat:5> \} \\ <var:X> := <var:R0> \\ \{ <var:b> = <var:j> \land <var:X> = <nat:5> \} \end{eqnarray} Using typical Hoare reasoning completes the goal . \end{proof} \end{document} 
~
Require Import String . From PLF Require Import Imp . From PLF Require Import Hoare . Definition <var:R0> : string := " <var:R0> " . Definition <def:poly> := <var:R0> := <nat:5> ; <var:X> := <var:R0> . Theorem <genH:poly_code_correct> : forall <var:j> : nat , {{ <var:b> = <var:j> }} <def:poly> {{ <var:X> = <nat:5> }} . Proof . intros . apply hoare_seq with ( Q := ( ( <var:b> = <var:j> /\ <var:R0> = <nat:5> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:b> = <var:j> /\ <var:X> = <nat:5> ) ) %assertion ) . all : eapply hoare_consequence_pre ; try ( apply hoare_asgn || assn_auto'' ) . Qed . 