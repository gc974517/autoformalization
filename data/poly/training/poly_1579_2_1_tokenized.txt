\begin{document} \begin{theorem} Let the following code segment : \begin{verbatim} <var:W0> := <nat:5> ; <var:s> := <var:W0> \end{verbatim} Assuming $ <var:h> = <var:y> $ before the execution of this set of commands , it holds that we see $ <var:s> = <nat:5> $ when series of instructions has exited . \end{theorem} \begin{proof} Proving correctness for this code can be done using Hoare techniques . Jumping to the next line of code found in our series of commands , we have the environment update line letting $ <nat:5> $ to $ <var:W0>$ . This command moves the condition $ \{ <var:h> = <var:y> \} $ as $ \{ <var:h> = <var:y> \land <var:W0> = <nat:5> \} $ . Considering the subsequent line of code contained in the series of commands , we see the variable binding line yielding $ <var:W0$ as $ <var:s>$ . This redefines the precondition $ \{ <var:h> = <var:y> \land <var:W0> = <nat:5> \} $ to the postcondition $ \{ <var:h> = <var:y> \land <var:s> = <nat:5> \} $ . \end{proof} \end{document} 
~
Require Import String . From PLF Require Import Imp . From PLF Require Import Hoare . Definition <var:W0> : string := " <var:W0> " . Theorem <genH:poly_code_correct> : forall <var:y> : nat , {{ <var:h> = <var:y> }} <var:W0> := <nat:5> ; <var:s> := <var:W0> {{ <var:s> = <nat:5> }} . Proof . intros . apply hoare_seq with ( Q := ( ( <var:h> = <var:y> /\ <var:W0> = <nat:5> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:h> = <var:y> /\ <var:s> = <nat:5> ) ) %assertion ) . all : eapply hoare_consequence_pre ; try ( apply hoare_asgn || assn_auto'' ) . Qed . 