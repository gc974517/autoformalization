\begin{document} \begin{theorem} We define the following set of instructions in \emph{Imp} : \begin{verbatim} <var:a0> := <nat:4> ; <var:f> := <var:a0> \end{verbatim} Allowing it to hold that $ <var:j> = <var:I> $ ( given any natural coefficients $ <var:I> $ ) ahead of interpreting our list of instructions it must be that we have $ <var:f> = <nat:4> $ . \end{theorem} \begin{proof} \begin{eqnarray} \{ <var:j> = <var:I> \} \\ <var:a0> := <nat:4> ; \\ \{ <var:j> = <var:I> \land <var:a0> = <nat:4> \} \\ <var:f> := <var:a0> \\ \{ <var:j> = <var:I> \land <var:f> = <nat:4> \} \end{eqnarray} Applying usual Hoare techniques accomplishes the argument . \end{proof} \end{document} 
~
Require Import String . From PLF Require Import Imp . From PLF Require Import Hoare . Definition <var:a0> : string := " <var:a0> " . Theorem <genH:poly_code_correct> : forall <var:I> : nat , {{ <var:j> = <var:I> }} <var:a0> := <nat:4> ; <var:f> := <var:a0> {{ <var:f> = <nat:4> }} . Proof . intros . apply hoare_seq with ( Q := ( ( <var:j> = <var:I> /\ <var:a0> = <nat:4> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:j> = <var:I> /\ <var:f> = <nat:4> ) ) %assertion ) . all : eapply hoare_consequence_pre ; try ( apply hoare_asgn || assn_auto'' ) . Qed . 