\begin{document} \begin{definition} We define a code segment <def:poly> in \emph{Imp} as follows \begin{verbatim} <var:W0> := <nat:4> ; <var:k> := <var:W0> \end{verbatim} \end{definition} \begin{theorem} Assume , given every natural coefficients $ <var:f> $ , it to be that $ <var:m> = <var:f> $ before interpreting our program then we have $ <var:k> = <nat:4> $ when series of instructions has finished . \end{theorem} \begin{proof} Observe the following decorated list of instructions . \begin{eqnarray} \{ <var:m> = <var:f> \} \\ <var:W0> := <nat:4> ; \\ \{ <var:m> = <var:f> \land <var:W0> = <nat:4> \} \\ <var:k> := <var:W0> \\ \{ <var:m> = <var:f> \land <var:k> = <nat:4> \} \end{eqnarray} Using Hoare reasoning finishes the proof . \end{proof} \end{document} 
~
Require Import String . From PLF Require Import Imp . From PLF Require Import Hoare . Definition <var:W0> : string := " <var:W0> " . Definition <def:poly> := <var:W0> := <nat:4> ; <var:k> := <var:W0> . Theorem <genH:poly_code_correct> : forall <var:f> : nat , {{ <var:m> = <var:f> }} <def:poly> {{ <var:k> = <nat:4> }} . Proof . intros . apply hoare_seq with ( Q := ( ( <var:m> = <var:f> /\ <var:W0> = <nat:4> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:m> = <var:f> /\ <var:k> = <nat:4> ) ) %assertion ) . all : eapply hoare_consequence_pre ; try ( apply hoare_asgn || assn_auto'' ) . Qed . 