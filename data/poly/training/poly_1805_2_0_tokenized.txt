\begin{document} \begin{definition} Consider the following set of commands <def:poly> in \emph{Imp} as follows \begin{verbatim} <var:j0> := <nat:5> ; <var:k> := <var:j0> \end{verbatim} \end{definition} \begin{theorem} Given it to hold that $ <var:v> = <var:y> $ prior to running our code segment , it holds that we see $ <var:k> = <nat:5> $ . \end{theorem} \begin{proof} Applying usual Hoare techniques produces : \begin{eqnarray} \{ <var:v> = <var:y> \} \\ <var:j0> := <nat:5> ; \\ \{ <var:v> = <var:y> \land <var:j0> = <nat:5> \} \\ <var:k> := <var:j0> \\ \{ <var:v> = <var:y> \land <var:k> = <nat:5> \} \end{eqnarray} Considering the above , this set of instructions has been shown correct . \end{proof} \end{document} 
~
Require Import String . From PLF Require Import Imp . From PLF Require Import Hoare . Definition <var:j0> : string := " <var:j0> " . Definition <def:poly> := <var:j0> := <nat:5> ; <var:k> := <var:j0> . Theorem <genH:poly_code_correct> : forall <var:y> : nat , {{ <var:v> = <var:y> }} <def:poly> {{ <var:k> = <nat:5> }} . Proof . intros . apply hoare_seq with ( Q := ( ( <var:v> = <var:y> /\ <var:j0> = <nat:5> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:v> = <var:y> /\ <var:k> = <nat:5> ) ) %assertion ) . all : eapply hoare_consequence_pre ; try ( apply hoare_asgn || assn_auto'' ) . Qed . 