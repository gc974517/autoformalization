\begin{document} \begin{theorem} Define a series of commands such that \begin{verbatim} <var:H0> := <nat:1> ; <var:C> := <var:H0> \end{verbatim} Assume that we have $ <var:t> = <var:d> $ --- assuming some natural numbers $ <var:d> $ --- before running our list of commands , it holds that we see $ <var:C> = <nat:1> $ when set of commands is done . \end{theorem} \begin{proof} \begin{eqnarray} \{ <var:t> = <var:d> \} \\ <var:H0> := <nat:1> ; \\ \{ <var:t> = <var:d> \land <var:H0> = <nat:1> \} \\ <var:C> := <var:H0> \\ \{ <var:t> = <var:d> \land <var:C> = <nat:1> \} \end{eqnarray} Utilizing typical Hoare reasoning accomplishes the proof . \end{proof} \end{document} 
~
Require Import String . From PLF Require Import Imp . From PLF Require Import Hoare . Definition <var:H0> : string := " <var:H0> " . Theorem <genH:poly_code_correct> : forall <var:d> : nat , {{ <var:t> = <var:d> }} <var:H0> := <nat:1> ; <var:C> := <var:H0> {{ <var:C> = <nat:1> }} . Proof . intros . apply hoare_seq with ( Q := ( ( <var:t> = <var:d> /\ <var:H0> = <nat:1> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:t> = <var:d> /\ <var:C> = <nat:1> ) ) %assertion ) . all : eapply hoare_consequence_pre ; try ( apply hoare_asgn || assn_auto'' ) . Qed . 