\begin{document} \begin{definition} Let the following segment of code <def:poly> in \emph{Imp} : \begin{verbatim} <var:X0> := <nat:4> ; <var:t> := <var:X0> \end{verbatim} \end{definition} \begin{theorem} We define the following series of instructions <def:poly> . Given that we have $ <var:Q> = <var:s> $ --- taking natural coefficients $ <var:s> $ --- ahead of running the code segment , it must be that we have $ <var:t> = <nat:4> $ once code segment has finished executing . \end{theorem} \begin{proof} Using typical Hoare techniques gives us : \begin{eqnarray} \{ <var:Q> = <var:s> \} \\ <var:X0> := <nat:4> ; \\ \{ <var:Q> = <var:s> \land <var:X0> = <nat:4> \} \\ <var:t> := <var:X0> \\ \{ <var:Q> = <var:s> \land <var:t> = <nat:4> \} \end{eqnarray} Given the preceding argument , the segment of code has been proven correct . \end{proof} \end{document} 
~
Require Import String . From PLF Require Import Imp . From PLF Require Import Hoare . Definition <var:X0> : string := " <var:X0> " . Definition <def:poly> := <var:X0> := <nat:4> ; <var:t> := <var:X0> . Theorem <genH:poly_code_correct> : forall <var:s> : nat , {{ <var:Q> = <var:s> }} <def:poly> {{ <var:t> = <nat:4> }} . Proof . intros . apply hoare_seq with ( Q := ( ( <var:Q> = <var:s> /\ <var:X0> = <nat:4> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:Q> = <var:s> /\ <var:t> = <nat:4> ) ) %assertion ) . all : eapply hoare_consequence_pre ; try ( apply hoare_asgn || assn_auto'' ) . Qed . 