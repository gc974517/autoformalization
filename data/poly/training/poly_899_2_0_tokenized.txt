\begin{document} \begin{theorem} We define the following set of instructions in \emph{Imp} as follows \begin{verbatim} <var:X0> := <nat:3> ; <var:j> := <var:X0> \end{verbatim} Assuming it to be that $ <var:W> = <var:H> $ ahead of the execution of our list of commands it holds that we see $ <var:j> = <nat:3> $ after set of commands has executed . \end{theorem} \begin{proof} The way to prove correctness for our series of instructions is clear through the below decorated series of commands . \begin{eqnarray} \{ <var:W> = <var:H> \} \\ <var:X0> := <nat:3> ; \\ \{ <var:W> = <var:H> \land <var:X0> = <nat:3> \} \\ <var:j> := <var:X0> \\ \{ <var:W> = <var:H> \land <var:j> = <nat:3> \} \end{eqnarray} Utilizing standard Hoare techniques finishes the argument . \end{proof} \end{document} 
~
Require Import String . From PLF Require Import Imp . From PLF Require Import Hoare . Definition <var:X0> : string := " <var:X0> " . Theorem <genH:poly_code_correct> : forall <var:H> : nat , {{ <var:W> = <var:H> }} <var:X0> := <nat:3> ; <var:j> := <var:X0> {{ <var:j> = <nat:3> }} . Proof . intros . apply hoare_seq with ( Q := ( ( <var:W> = <var:H> /\ <var:X0> = <nat:3> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:W> = <var:H> /\ <var:j> = <nat:3> ) ) %assertion ) . all : eapply hoare_consequence_pre ; try ( apply hoare_asgn || assn_auto'' ) . Qed . 