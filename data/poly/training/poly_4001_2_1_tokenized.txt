\begin{document} \begin{theorem} Consider the following segment of code such that \begin{verbatim} <var:J0> := <nat:8> ; <var:K> := <var:J0> \end{verbatim} Allow --- taking natural numbers $ <var:q> $ --- it to be that $ <var:O> = <var:q> $ ahead of executing this list of instructions , it holds that we see $ <var:K> = <nat:8> $ . \end{theorem} \begin{proof} \begin{eqnarray} \{ <var:O> = <var:q> \} \\ <var:J0> := <nat:8> ; \\ \{ <var:O> = <var:q> \land <var:J0> = <nat:8> \} \\ <var:K> := <var:J0> \\ \{ <var:O> = <var:q> \land <var:K> = <nat:8> \} \end{eqnarray} Utilizing Hoare techniques ends the goal . \end{proof} \end{document} 
~
Require Import String . From PLF Require Import Imp . From PLF Require Import Hoare . Definition <var:J0> : string := " <var:J0> " . Theorem <genH:poly_code_correct> : forall <var:q> : nat , {{ <var:O> = <var:q> }} <var:J0> := <nat:8> ; <var:K> := <var:J0> {{ <var:K> = <nat:8> }} . Proof . intros . apply hoare_seq with ( Q := ( ( <var:O> = <var:q> /\ <var:J0> = <nat:8> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:O> = <var:q> /\ <var:K> = <nat:8> ) ) %assertion ) . all : eapply hoare_consequence_pre ; try ( apply hoare_asgn || assn_auto'' ) . Qed . 