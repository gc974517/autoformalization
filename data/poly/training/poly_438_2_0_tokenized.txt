\begin{document} \begin{theorem} Take the following set of commands such that \begin{verbatim} <var:c0> := <nat:6> ; <var:B> := <var:c0> \end{verbatim} Given that we have $ <var:T> = <var:H> $ ahead of executing our set of commands it follows that we have $ <var:B> = <nat:6> $ . \end{theorem} \begin{proof} Utilizing typical Hoare techniques produces : \begin{eqnarray} \{ <var:T> = <var:H> \} \\ <var:c0> := <nat:6> ; \\ \{ <var:T> = <var:H> \land <var:c0> = <nat:6> \} \\ <var:B> := <var:c0> \\ \{ <var:T> = <var:H> \land <var:B> = <nat:6> \} \end{eqnarray} Given the preceding argument , this segment of code is shown correct . \end{proof} \end{document} 
~
Require Import String . From PLF Require Import Imp . From PLF Require Import Hoare . Definition <var:c0> : string := " <var:c0> " . Theorem <genH:poly_code_correct> : forall <var:H> : nat , {{ <var:T> = <var:H> }} <var:c0> := <nat:6> ; <var:B> := <var:c0> {{ <var:B> = <nat:6> }} . Proof . intros . apply hoare_seq with ( Q := ( ( <var:T> = <var:H> /\ <var:c0> = <nat:6> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:T> = <var:H> /\ <var:B> = <nat:6> ) ) %assertion ) . all : eapply hoare_consequence_pre ; try ( apply hoare_asgn || assn_auto'' ) . Qed . 