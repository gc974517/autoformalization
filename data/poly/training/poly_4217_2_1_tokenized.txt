\begin{document} \begin{definition} We define a set of commands <def:poly> in \emph{Imp} as \begin{verbatim} <var:p0> := <nat:5> ; <var:N> := <var:p0> \end{verbatim} \end{definition} \begin{theorem} Define the following series of instructions <def:poly> in \emph{Imp} . Given it to be that $ <var:k> = <var:G> $ before running this code segment , it follows that we have $ <var:N> = <nat:5> $ . \end{theorem} \begin{proof} Proving correctness for the code can be given using usual Hoare techniques . Taking another step toward the following line of code contained in the series of instructions , the binding line defining $ <nat:5> $ toward $ <var:p0>$ . This command moves the precondition $ \{ <var:k> = <var:G> \} $ to $ \{ <var:k> = <var:G> \land <var:p0> = <nat:5> \} $ . Observing the proceeding bit of code contained in the series of instructions , we see the variable binding statement \verb | <var:N> := <var:p0> | . This line transfers the precondition $ \{ <var:k> = <var:G> \land <var:p0> = <nat:5> \} $ into $ \{ <var:k> = <var:G> \land <var:N> = <nat:5> \} $ . \end{proof} \end{document} 
~
Require Import String . From PLF Require Import Imp . From PLF Require Import Hoare . Definition <var:p0> : string := " <var:p0> " . Definition <def:poly> := <var:p0> := <nat:5> ; <var:N> := <var:p0> . Theorem <genH:poly_code_correct> : forall <var:G> : nat , {{ <var:k> = <var:G> }} <def:poly> {{ <var:N> = <nat:5> }} . Proof . intros . apply hoare_seq with ( Q := ( ( <var:k> = <var:G> /\ <var:p0> = <nat:5> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:k> = <var:G> /\ <var:N> = <nat:5> ) ) %assertion ) . all : eapply hoare_consequence_pre ; try ( apply hoare_asgn || assn_auto'' ) . Qed . 