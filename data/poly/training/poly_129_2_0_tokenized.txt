\begin{document} \begin{theorem} Take the following list of instructions as \begin{verbatim} <var:D0> := <nat:4> ; <var:S> := <var:D0> \end{verbatim} Allow it to be that $ <var:b> = <var:i> $ , given positive coefficients $ <var:i> $ , prior to the execution of the list of commands , it holds that $ <var:S> = <nat:4> $ once set of commands terminates . \end{theorem} \begin{proof} The argument for this code segment can be given with typical Hoare reasoning . Moving on to the next step , we see \begin{verbatim} { <var:b> = <var:i> } <var:D0> := <nat:4> { <var:b> = <var:i> \land <var:D0> = <nat:4> } { <var:b> = <var:i> \land <var:D0> = <nat:4> } <var:S> := <var:D0{ <var:b> = <var:i> \land <var:S> = <nat:4> } \end{verbatim} \end{proof} \end{document} 
~
Require Import String . From PLF Require Import Imp . From PLF Require Import Hoare . Definition <var:D0> : string := " <var:D0> " . Theorem <genH:poly_code_correct> : forall <var:i> : nat , {{ <var:b> = <var:i> }} <var:D0> := <nat:4> ; <var:S> := <var:D0> {{ <var:S> = <nat:4> }} . Proof . intros . apply hoare_seq with ( Q := ( ( <var:b> = <var:i> /\ <var:D0> = <nat:4> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:b> = <var:i> /\ <var:S> = <nat:4> ) ) %assertion ) . all : eapply hoare_consequence_pre ; try ( apply hoare_asgn || assn_auto'' ) . Qed . 