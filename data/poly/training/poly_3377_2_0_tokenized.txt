\begin{document} \begin{theorem} Let the following series of instructions in \emph{Imp} such that \begin{verbatim} <var:j0> := <nat:5> ; <var:C> := <var:j0> \end{verbatim} Assuming it to be that $ <var:r> = <var:F> $ for all natural coefficients $ <var:F> $ ahead of executing our code segment , it holds that $ <var:C> = <nat:5> $ . \end{theorem} \begin{proof} The argument for this code segment is done with Hoare techniques . Considering the proceeding step seen in the list of instructions , we see the environment update line giving $ <nat:5> $ into $ <var:j0>$ . This forwards the precondition $ \{ <var:r> = <var:F> \} $ toward the condition $ \{ <var:r> = <var:F> \land <var:j0> = <nat:5> \} $ . This is shown to be logically sound by the assignment rule found in Hoare reasoning . Advancing to the next step , we have the variable binding statement letting $ <var:j0$ into $ <var:C>$ . This forwards the precondition $ \{ <var:r> = <var:F> \land <var:j0> = <nat:5> \} $ into the postcondition $ \{ <var:r> = <var:F> \land <var:C> = <nat:5> \} $ . \end{proof} \end{document} 
~
Require Import String . From PLF Require Import Imp . From PLF Require Import Hoare . Definition <var:j0> : string := " <var:j0> " . Theorem <genH:poly_code_correct> : forall <var:F> : nat , {{ <var:r> = <var:F> }} <var:j0> := <nat:5> ; <var:C> := <var:j0> {{ <var:C> = <nat:5> }} . Proof . intros . apply hoare_seq with ( Q := ( ( <var:r> = <var:F> /\ <var:j0> = <nat:5> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:r> = <var:F> /\ <var:C> = <nat:5> ) ) %assertion ) . all : eapply hoare_consequence_pre ; try ( apply hoare_asgn || assn_auto'' ) . Qed . 