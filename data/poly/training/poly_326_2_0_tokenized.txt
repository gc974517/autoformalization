\begin{document} \begin{theorem} We define a set of commands in \emph{Imp} as follows \begin{verbatim} <var:l0> := <nat:4> ; <var:M> := <var:l0> \end{verbatim} Assuming it to be that $ <var:H> = <var:W> $ ahead of the evaluation of the list of instructions it holds that we see $ <var:M> = <nat:4> $ after list of instructions has finished . \end{theorem} \begin{proof} The argument for the list of commands is given through standard Hoare techniques . After , \verb | { <var:H> = <var:W> } <var:l0> := <nat:4> { <var:H> = <var:W> \land <var:l0> = <nat:4> } | . Stepping through , we have \verb | { <var:H> = <var:W> } <var:l0> := <nat:4> { <var:H> = <var:W> \land <var:l0> = <nat:4> } | . \end{proof} \end{document} 
~
Require Import String . From PLF Require Import Imp . From PLF Require Import Hoare . Definition <var:l0> : string := " <var:l0> " . Theorem <genH:poly_code_correct> : forall <var:W> : nat , {{ <var:H> = <var:W> }} <var:l0> := <nat:4> ; <var:M> := <var:l0> {{ <var:M> = <nat:4> }} . Proof . intros . apply hoare_seq with ( Q := ( ( <var:H> = <var:W> /\ <var:l0> = <nat:4> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:H> = <var:W> /\ <var:M> = <nat:4> ) ) %assertion ) . all : eapply hoare_consequence_pre ; try ( apply hoare_asgn || assn_auto'' ) . Qed . 