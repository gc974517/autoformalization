\begin{document} \begin{theorem} Let the following program as \begin{verbatim} <var:F0> := <nat:5> ; <var:v> := <var:F0> \end{verbatim} Allowing $ <var:a> = <var:Z> $ , with some natural coefficients $ <var:Z> $ , before evaluating our set of commands then we have $ <var:v> = <nat:5> $ . \end{theorem} \begin{proof} Utilizing typical Hoare reasoning produces : \begin{eqnarray} \{ <var:a> = <var:Z> \} \\ <var:F0> := <nat:5> ; \\ \{ <var:a> = <var:Z> \land <var:F0> = <nat:5> \} \\ <var:v> := <var:F0> \\ \{ <var:a> = <var:Z> \land <var:v> = <nat:5> \} \end{eqnarray} Thusly , our set of commands has been demonstrated to be correct . \end{proof} \end{document} 
~
Require Import String . From PLF Require Import Imp . From PLF Require Import Hoare . Definition <var:F0> : string := " <var:F0> " . Theorem <genH:poly_code_correct> : forall <var:Z> : nat , {{ <var:a> = <var:Z> }} <var:F0> := <nat:5> ; <var:v> := <var:F0> {{ <var:v> = <nat:5> }} . Proof . intros . apply hoare_seq with ( Q := ( ( <var:a> = <var:Z> /\ <var:F0> = <nat:5> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:a> = <var:Z> /\ <var:v> = <nat:5> ) ) %assertion ) . all : eapply hoare_consequence_pre ; try ( apply hoare_asgn || assn_auto'' ) . Qed . 