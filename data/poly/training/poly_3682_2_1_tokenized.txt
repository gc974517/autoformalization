\begin{document} \begin{theorem} Consider the following set of instructions as \begin{verbatim} <var:t0> := <nat:3> ; <var:U> := <var:t0> \end{verbatim} Allow , for every natural numbers $ <var:X> $ , that we have $ <var:e> = <var:X> $ ahead of executing our list of commands , it follows that we see $ <var:U> = <nat:3> $ once code has terminated . \end{theorem} \begin{proof} Using usual Hoare reasoning yields : \begin{eqnarray} \{ <var:e> = <var:X> \} \\ <var:t0> := <nat:3> ; \\ \{ <var:e> = <var:X> \land <var:t0> = <nat:3> \} \\ <var:U> := <var:t0> \\ \{ <var:e> = <var:X> \land <var:U> = <nat:3> \} \end{eqnarray} Given the preceding argument , our list of commands is demonstrated to be correct . \end{proof} \end{document} 
~
Require Import String . From PLF Require Import Imp . From PLF Require Import Hoare . Definition <var:t0> : string := " <var:t0> " . Theorem <genH:poly_code_correct> : forall <var:X> : nat , {{ <var:e> = <var:X> }} <var:t0> := <nat:3> ; <var:U> := <var:t0> {{ <var:U> = <nat:3> }} . Proof . intros . apply hoare_seq with ( Q := ( ( <var:e> = <var:X> /\ <var:t0> = <nat:3> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:e> = <var:X> /\ <var:U> = <nat:3> ) ) %assertion ) . all : eapply hoare_consequence_pre ; try ( apply hoare_asgn || assn_auto'' ) . Qed . 