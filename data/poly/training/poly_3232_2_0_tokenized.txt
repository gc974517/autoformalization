\begin{document} \begin{definition} Consider the following segment of code <def:poly> in \emph{Imp} as follows \begin{verbatim} <var:u0> := <nat:9> ; <var:E> := <var:u0> \end{verbatim} \end{definition} \begin{theorem} Given , given any positive numbers $ <var:v> $ , it to hold that $ <var:x> = <var:v> $ before running the series of instructions it follows that we have $ <var:E> = <nat:9> $ . \end{theorem} \begin{proof} Proving correctness for this code segment can be demonstrated with Hoare techniques . Paying attention to the proceeding bit of code found in our series of instructions , \begin{verbatim} { <var:x> = <var:v> } <var:u0> := <nat:9> { <var:x> = <var:v> \land <var:u0> = <nat:9> } \end{verbatim} This is deduced using the law of usual Hoare techniques . Moving on to the next line contained in our set of instructions , we have \begin{verbatim} { <var:x> = <var:v> } <var:u0> := <nat:9> { <var:x> = <var:v> \land <var:u0> = <nat:9> } \end{verbatim} \end{proof} \end{document} 
~
Require Import String . From PLF Require Import Imp . From PLF Require Import Hoare . Definition <var:u0> : string := " <var:u0> " . Definition <def:poly> := <var:u0> := <nat:9> ; <var:E> := <var:u0> . Theorem <genH:poly_code_correct> : forall <var:v> : nat , {{ <var:x> = <var:v> }} <def:poly> {{ <var:E> = <nat:9> }} . Proof . intros . apply hoare_seq with ( Q := ( ( <var:x> = <var:v> /\ <var:u0> = <nat:9> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:x> = <var:v> /\ <var:E> = <nat:9> ) ) %assertion ) . all : eapply hoare_consequence_pre ; try ( apply hoare_asgn || assn_auto'' ) . Qed . 