\begin{document} \begin{definition} We define the following set of commands <def:poly> in \emph{Imp} : \begin{verbatim} <var:C0> := <nat:8> ; <var:c> := <var:C0> \end{verbatim} \end{definition} \begin{theorem} Given $ <var:O> = <var:F> $ , given any $ <var:F> \in \mathbb{N} $ , before evaluating our list of instructions , it holds that we see $ <var:c> = <nat:8> $ . \end{theorem} \begin{proof} The course of logic for our segment of code can be accomplished through typical Hoare techniques . Immediately following , the environment update line giving $ <nat:8> $ as $ <var:C0>$ . This line redefines $ \{ <var:O> = <var:F> \} $ toward $ \{ <var:O> = <var:F> \land <var:C0> = <nat:8> \} $ . Paying attention to the proceeding bit of code found in the set of commands , we see the environment update command binding $ <var:C0$ to $ <var:c>$ . This line redefines the condition $ \{ <var:O> = <var:F> \land <var:C0> = <nat:8> \} $ to the postcondition $ \{ <var:O> = <var:F> \land <var:c> = <nat:8> \} $ . \end{proof} \end{document} 
~
Require Import String . From PLF Require Import Imp . From PLF Require Import Hoare . Definition <var:C0> : string := " <var:C0> " . Definition <def:poly> := <var:C0> := <nat:8> ; <var:c> := <var:C0> . Theorem <genH:poly_code_correct> : forall <var:F> : nat , {{ <var:O> = <var:F> }} <def:poly> {{ <var:c> = <nat:8> }} . Proof . intros . apply hoare_seq with ( Q := ( ( <var:O> = <var:F> /\ <var:C0> = <nat:8> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:O> = <var:F> /\ <var:c> = <nat:8> ) ) %assertion ) . all : eapply hoare_consequence_pre ; try ( apply hoare_asgn || assn_auto'' ) . Qed . 