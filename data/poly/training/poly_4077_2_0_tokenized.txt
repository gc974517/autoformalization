\begin{document} \begin{theorem} Consider a set of commands as \begin{verbatim} <var:d0> := <nat:5> ; <var:X> := <var:d0> \end{verbatim} Assuming $ <var:w> = <var:Z> $ before running the series of commands , it holds that we have $ <var:X> = <nat:5> $ . \end{theorem} \begin{proof} The method of proof for this list of commands is given by usual Hoare logic . Following , \[ \begin{tabular} {rcl} \{ <var:w> = <var:Z> \} & <var:d0> := <nat:5> & \{ <var:w> = <var:Z> \land <var:d0> = <nat:5> \} \\ \{ <var:w> = <var:Z> \land <var:d0> = <nat:5> \} & <var:X> := <var:d0& \{ <var:w> = <var:Z> \land <var:X> = <nat:5> \} \end{tabular} This is shown to be logically sound using the variable binding law given by Hoare logic . \end{proof} \end{document} 
~
Require Import String . From PLF Require Import Imp . From PLF Require Import Hoare . Definition <var:d0> : string := " <var:d0> " . Theorem <genH:poly_code_correct> : forall <var:Z> : nat , {{ <var:w> = <var:Z> }} <var:d0> := <nat:5> ; <var:X> := <var:d0> {{ <var:X> = <nat:5> }} . Proof . intros . apply hoare_seq with ( Q := ( ( <var:w> = <var:Z> /\ <var:d0> = <nat:5> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:w> = <var:Z> /\ <var:X> = <nat:5> ) ) %assertion ) . all : eapply hoare_consequence_pre ; try ( apply hoare_asgn || assn_auto'' ) . Qed . 