\begin{document} \begin{definition} Take the following set of instructions <def:poly> in \emph{Imp} : \begin{verbatim} <var:m0> := <nat:4> ; <var:K> := <var:m0> \end{verbatim} \end{definition} \begin{theorem} Take the following code <def:poly> in \emph{Imp} . Allowing , letting positive coefficients $ <var:y> $ , it to hold that $ <var:E> = <var:y> $ ahead of running our list of instructions it follows that $ <var:K> = <nat:4> $ . \end{theorem} \begin{proof} Showing our claim about correctness for the series of commands can be done by usual Hoare logic . Going forward , we have the environment update statement yielding $ <nat:4> $ as $ <var:m0>$ . This statement takes the condition $ \{ <var:E> = <var:y> \} $ into the condition $ \{ <var:E> = <var:y> \land <var:m0> = <nat:4> \} $ . Jumping to the upcoming command contained in the code segment , we see the binding line \verb | <var:K> := <var:m0> | . This transfers $ \{ <var:E> = <var:y> \land <var:m0> = <nat:4> \} $ toward the condition $ \{ <var:E> = <var:y> \land <var:K> = <nat:4> \} $ . \end{proof} \end{document} 
~
Require Import String . From PLF Require Import Imp . From PLF Require Import Hoare . Definition <var:m0> : string := " <var:m0> " . Definition <def:poly> := <var:m0> := <nat:4> ; <var:K> := <var:m0> . Theorem <genH:poly_code_correct> : forall <var:y> : nat , {{ <var:E> = <var:y> }} <def:poly> {{ <var:K> = <nat:4> }} . Proof . intros . apply hoare_seq with ( Q := ( ( <var:E> = <var:y> /\ <var:m0> = <nat:4> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:E> = <var:y> /\ <var:K> = <nat:4> ) ) %assertion ) . all : eapply hoare_consequence_pre ; try ( apply hoare_asgn || assn_auto'' ) . Qed . 