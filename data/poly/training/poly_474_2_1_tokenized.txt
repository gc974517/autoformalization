\begin{document} \begin{definition} Let the following segment of code <def:poly> in \emph{Imp} : \begin{verbatim} <var:l0> := <nat:4> ; <var:e> := <var:l0> \end{verbatim} \end{definition} \begin{theorem} Allowing that we have $ <var:C> = <var:U> $ given all natural coefficients $ <var:U> $ before evaluating this code , it must be that we see $ <var:e> = <nat:4> $ . \end{theorem} \begin{proof} Applying standard Hoare reasoning results in : \begin{eqnarray} \{ <var:C> = <var:U> \} \\ <var:l0> := <nat:4> ; \\ \{ <var:C> = <var:U> \land <var:l0> = <nat:4> \} \\ <var:e> := <var:l0> \\ \{ <var:C> = <var:U> \land <var:e> = <nat:4> \} \end{eqnarray} Therefore , the segment of code is validated as correct . \end{proof} \end{document} 
~
Require Import String . From PLF Require Import Imp . From PLF Require Import Hoare . Definition <var:l0> : string := " <var:l0> " . Definition <def:poly> := <var:l0> := <nat:4> ; <var:e> := <var:l0> . Theorem <genH:poly_code_correct> : forall <var:U> : nat , {{ <var:C> = <var:U> }} <def:poly> {{ <var:e> = <nat:4> }} . Proof . intros . apply hoare_seq with ( Q := ( ( <var:C> = <var:U> /\ <var:l0> = <nat:4> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:C> = <var:U> /\ <var:e> = <nat:4> ) ) %assertion ) . all : eapply hoare_consequence_pre ; try ( apply hoare_asgn || assn_auto'' ) . Qed . 