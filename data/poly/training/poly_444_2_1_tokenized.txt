\begin{document} \begin{theorem} Take the following segment of code in \emph{Imp} as follows \begin{verbatim} <var:R0> := <nat:7> ; <var:N> := <var:R0> \end{verbatim} Assuming --- given some natural coefficients $ <var:B> $ --- that $ <var:E> = <var:B> $ prior to the evaluation of this set of instructions , it must be that we see $ <var:N> = <nat:7> $ . \end{theorem} \begin{proof} Using typical Hoare techniques gives : \begin{eqnarray} \{ <var:E> = <var:B> \} \\ <var:R0> := <nat:7> ; \\ \{ <var:E> = <var:B> \land <var:R0> = <nat:7> \} \\ <var:N> := <var:R0> \\ \{ <var:E> = <var:B> \land <var:N> = <nat:7> \} \end{eqnarray} Thus , our code has been demonstrated to be correct . \end{proof} \end{document} 
~
Require Import String . From PLF Require Import Imp . From PLF Require Import Hoare . Definition <var:R0> : string := " <var:R0> " . Theorem <genH:poly_code_correct> : forall <var:B> : nat , {{ <var:E> = <var:B> }} <var:R0> := <nat:7> ; <var:N> := <var:R0> {{ <var:N> = <nat:7> }} . Proof . intros . apply hoare_seq with ( Q := ( ( <var:E> = <var:B> /\ <var:R0> = <nat:7> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:E> = <var:B> /\ <var:N> = <nat:7> ) ) %assertion ) . all : eapply hoare_consequence_pre ; try ( apply hoare_asgn || assn_auto'' ) . Qed . 