\begin{document} \begin{definition} We define the following series of commands <def:poly> in \emph{Imp} such that \begin{verbatim} <var:Y0> := <nat:8> ; <var:O> := <var:Y0> \end{verbatim} \end{definition} \begin{theorem} Assuming $ <var:S> = <var:a> $ prior to executing the list of commands , it follows that we see $ <var:O> = <nat:8> $ once program has executed . \end{theorem} \begin{proof} The course of logic for the series of commands can be shown with typical Hoare reasoning . Going to the next step , the variable update line \verb | <var:Y0> := <nat:8> ; | . This statement advances $ \{ <var:S> = <var:a> \} $ toward the condition $ \{ <var:S> = <var:a> \land <var:Y0> = <nat:8> \} $ . Advancing to the next step , we see the variable update line binding $ <var:Y0$ toward $ <var:O>$ . This command transfers $ \{ <var:S> = <var:a> \land <var:Y0> = <nat:8> \} $ as the postcondition $ \{ <var:S> = <var:a> \land <var:O> = <nat:8> \} $ . \end{proof} \end{document} 
~
Require Import String . From PLF Require Import Imp . From PLF Require Import Hoare . Definition <var:Y0> : string := " <var:Y0> " . Definition <def:poly> := <var:Y0> := <nat:8> ; <var:O> := <var:Y0> . Theorem <genH:poly_code_correct> : forall <var:a> : nat , {{ <var:S> = <var:a> }} <def:poly> {{ <var:O> = <nat:8> }} . Proof . intros . apply hoare_seq with ( Q := ( ( <var:S> = <var:a> /\ <var:Y0> = <nat:8> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:S> = <var:a> /\ <var:O> = <nat:8> ) ) %assertion ) . all : eapply hoare_consequence_pre ; try ( apply hoare_asgn || assn_auto'' ) . Qed . 