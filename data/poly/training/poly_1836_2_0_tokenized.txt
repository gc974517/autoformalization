\begin{document} \begin{theorem} Take the following program as \begin{verbatim} <var:D0> := <nat:6> ; <var:S> := <var:D0> \end{verbatim} Allow for all $ <var:H> \in \mathbb{N} $ $ <var:s> = <var:H> $ ahead of the evaluation of our list of commands , it follows that $ <var:S> = <nat:6> $ . \end{theorem} \begin{proof} Arguing the correctness of the list of commands is done using the following decorated list of commands . \begin{eqnarray} \{ <var:s> = <var:H> \} \\ <var:D0> := <nat:6> ; \\ \{ <var:s> = <var:H> \land <var:D0> = <nat:6> \} \\ <var:S> := <var:D0> \\ \{ <var:s> = <var:H> \land <var:S> = <nat:6> \} \end{eqnarray} The application of Hoare techniques finishes the argument . \end{proof} \end{document} 
~
Require Import String . From PLF Require Import Imp . From PLF Require Import Hoare . Definition <var:D0> : string := " <var:D0> " . Theorem <genH:poly_code_correct> : forall <var:H> : nat , {{ <var:s> = <var:H> }} <var:D0> := <nat:6> ; <var:S> := <var:D0> {{ <var:S> = <nat:6> }} . Proof . intros . apply hoare_seq with ( Q := ( ( <var:s> = <var:H> /\ <var:D0> = <nat:6> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:s> = <var:H> /\ <var:S> = <nat:6> ) ) %assertion ) . all : eapply hoare_consequence_pre ; try ( apply hoare_asgn || assn_auto'' ) . Qed . 