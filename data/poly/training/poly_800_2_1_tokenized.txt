\begin{document} \begin{theorem} Take a series of commands such that \begin{verbatim} <var:H0> := <nat:7> ; <var:x> := <var:H0> \end{verbatim} Assuming , for any natural coefficients $ <var:t> $ , that $ <var:V> = <var:t> $ prior to running our series of instructions it follows that we see $ <var:x> = <nat:7> $ . \end{theorem} \begin{proof} Applying standard Hoare reasoning results in : \begin{eqnarray} \{ <var:V> = <var:t> \} \\ <var:H0> := <nat:7> ; \\ \{ <var:V> = <var:t> \land <var:H0> = <nat:7> \} \\ <var:x> := <var:H0> \\ \{ <var:V> = <var:t> \land <var:x> = <nat:7> \} \end{eqnarray} Considering the above , our code segment is proven correct . \end{proof} \end{document} 
~
Require Import String . From PLF Require Import Imp . From PLF Require Import Hoare . Definition <var:H0> : string := " <var:H0> " . Theorem <genH:poly_code_correct> : forall <var:t> : nat , {{ <var:V> = <var:t> }} <var:H0> := <nat:7> ; <var:x> := <var:H0> {{ <var:x> = <nat:7> }} . Proof . intros . apply hoare_seq with ( Q := ( ( <var:V> = <var:t> /\ <var:H0> = <nat:7> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:V> = <var:t> /\ <var:x> = <nat:7> ) ) %assertion ) . all : eapply hoare_consequence_pre ; try ( apply hoare_asgn || assn_auto'' ) . Qed . 