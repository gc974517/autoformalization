\begin{document} \begin{theorem} We define a set of commands as \begin{verbatim} <var:Q0> := <nat:9> ; <var:v> := <var:Q0> \end{verbatim} Allowing it to be that $ <var:d> = <var:X> $ for every natural coefficients $ <var:X> $ ahead of the execution of this code segment it holds that we see $ <var:v> = <nat:9> $ . \end{theorem} \begin{proof} We can see that this decorated program . \begin{eqnarray} \{ <var:d> = <var:X> \} \\ <var:Q0> := <nat:9> ; \\ \{ <var:d> = <var:X> \land <var:Q0> = <nat:9> \} \\ <var:v> := <var:Q0> \\ \{ <var:d> = <var:X> \land <var:v> = <nat:9> \} \end{eqnarray} Applying usual Hoare techniques resolves the goal . \end{proof} \end{document} 
~
Require Import String . From PLF Require Import Imp . From PLF Require Import Hoare . Definition <var:Q0> : string := " <var:Q0> " . Theorem <genH:poly_code_correct> : forall <var:X> : nat , {{ <var:d> = <var:X> }} <var:Q0> := <nat:9> ; <var:v> := <var:Q0> {{ <var:v> = <nat:9> }} . Proof . intros . apply hoare_seq with ( Q := ( ( <var:d> = <var:X> /\ <var:Q0> = <nat:9> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:d> = <var:X> /\ <var:v> = <nat:9> ) ) %assertion ) . all : eapply hoare_consequence_pre ; try ( apply hoare_asgn || assn_auto'' ) . Qed . 