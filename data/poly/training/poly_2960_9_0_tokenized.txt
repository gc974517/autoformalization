\begin{document} \begin{theorem} Consider a series of instructions such that \begin{verbatim} <var:w0> := <nat:5> ; <var:w1> := <nat:7> ; <var:w1> := <var:w1> * <var:U> ; <var:w2> := <nat:4> ; <var:w2> := <var:w2> * <var:U> ; <var:w2> := <var:w2> * <var:U> ; <var:v> := <var:w2> ; <var:v> := <var:v> + <var:w1> ; <var:v> := <var:v> + <var:w0> \end{verbatim} Assuming it to be that $ <var:U> = <var:A> $ prior to executing the series of instructions , it follows that $ <var:v> = <nat:4> \cdot <var:A> ^ <nat:2> + <nat:7> \cdot <var:A> + <nat:5> $ . \end{theorem} \begin{proof} Using standard Hoare techniques produces : \begin{eqnarray} \{ <var:U> = <var:A> \} \\ <var:w0> := <nat:5> ; \\ \{ <var:U> = <var:A> \land <var:w0> = <nat:5> \} \\ <var:w1> := <nat:7> ; \\ \{ <var:U> = <var:A> \land <var:w0> = <nat:5> \land <var:w1> = <nat:7> \} \\ <var:w1> := <var:w1> * <var:U> ; \\ \{ <var:U> = <var:A> \land <var:w0> = <nat:5> \land <var:w1> = <nat:7> \times <var:A> \} \\ <var:w2> := <nat:4> ; \\ \{ <var:U> = <var:A> \land <var:w0> = <nat:5> \land <var:w1> = <nat:7> \times <var:A> \land <var:w2> = <nat:4> \} \\ <var:w2> := <var:w2> * <var:U> ; \\ \{ <var:U> = <var:A> \land <var:w0> = <nat:5> \land <var:w1> = <nat:7> \times <var:A> \land <var:w2> = <nat:4> \times <var:A> \} \\ <var:w2> := <var:w2> * <var:U> ; \\ \{ <var:U> = <var:A> \land <var:w0> = <nat:5> \land <var:w1> = <nat:7> \times <var:A> \land <var:w2> = <nat:4> \times <var:A> ^ <nat:2> \} \\ <var:v> := <var:w2> ; \\ \{ <var:U> = <var:A> \land <var:w0> = <nat:5> \land <var:w1> = <nat:7> \times <var:A> \land <var:v> = <nat:4> \times <var:A> ^ <nat:2> \} \\ <var:v> := <var:v> + <var:w1> ; \\ \{ <var:U> = <var:A> \land <var:w0> = <nat:5> \land <var:v> = <nat:4> \times <var:A> ^ <nat:2> + <nat:7> \times <var:A> \} \\ <var:v> := <var:v> + <var:w0> \\ \{ <var:U> = <var:A> \land <var:v> = <nat:4> \times <var:A> ^ <nat:2> + <nat:7> \times <var:A> + <nat:5> \} \end{eqnarray} Thus , this series of instructions is validated as correct . \end{proof} \end{document} 
~
Require Import String . From PLF Require Import Imp . From PLF Require Import Hoare . Definition <var:w0> : string := " <var:w0> " . Definition <var:w1> : string := " <var:w1> " . Definition <var:w2> : string := " <var:w2> " . Theorem <genH:poly_code_correct> : forall <var:A> : nat , {{ <var:U> = <var:A> }} <var:w0> := <nat:5> ; <var:w1> := <nat:7> ; <var:w1> := <var:w1> * <var:U> ; <var:w2> := <nat:4> ; <var:w2> := <var:w2> * <var:U> ; <var:w2> := <var:w2> * <var:U> ; <var:v> := <var:w2> ; <var:v> := <var:v> + <var:w1> ; <var:v> := <var:v> + <var:w0> {{ <var:v> = <nat:4> * <var:A> ^ <nat:2> + <nat:7> * <var:A> + <nat:5> }} . Proof . intros . apply hoare_seq with ( Q := ( ( <var:U> = <var:A> /\ <var:w0> = <nat:5> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:U> = <var:A> /\ <var:w0> = <nat:5> /\ <var:w1> = <nat:7> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:U> = <var:A> /\ <var:w0> = <nat:5> /\ <var:w1> = <nat:7> * <var:A> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:U> = <var:A> /\ <var:w0> = <nat:5> /\ <var:w1> = <nat:7> * <var:A> /\ <var:w2> = <nat:4> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:U> = <var:A> /\ <var:w0> = <nat:5> /\ <var:w1> = <nat:7> * <var:A> /\ <var:w2> = <nat:4> * <var:A> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:U> = <var:A> /\ <var:w0> = <nat:5> /\ <var:w1> = <nat:7> * <var:A> /\ <var:w2> = <nat:4> * <var:A> ^ <nat:2> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:U> = <var:A> /\ <var:w0> = <nat:5> /\ <var:w1> = <nat:7> * <var:A> /\ <var:v> = <nat:4> * <var:A> ^ <nat:2> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:U> = <var:A> /\ <var:w0> = <nat:5> /\ <var:v> = <nat:4> * <var:A> ^ <nat:2> + <nat:7> * <var:A> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:U> = <var:A> /\ <var:v> = <nat:4> * <var:A> ^ <nat:2> + <nat:7> * <var:A> + <nat:5> ) ) %assertion ) . all : eapply hoare_consequence_pre ; try ( apply hoare_asgn || assn_auto'' ) . Qed . 