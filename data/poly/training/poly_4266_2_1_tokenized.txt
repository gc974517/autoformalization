\begin{document} \begin{theorem} Consider the following segment of code as \begin{verbatim} <var:z0> := <nat:8> ; <var:X> := <var:z0> \end{verbatim} Given it to hold that $ <var:N> = <var:b> $ before executing the list of commands it follows that we see $ <var:X> = <nat:8> $ . \end{theorem} \begin{proof} Utilizing usual Hoare techniques returns : \begin{eqnarray} \{ <var:N> = <var:b> \} \\ <var:z0> := <nat:8> ; \\ \{ <var:N> = <var:b> \land <var:z0> = <nat:8> \} \\ <var:X> := <var:z0> \\ \{ <var:N> = <var:b> \land <var:X> = <nat:8> \} \end{eqnarray} Hence , the segment of code has been proven correct . \end{proof} \end{document} 
~
Require Import String . From PLF Require Import Imp . From PLF Require Import Hoare . Definition <var:z0> : string := " <var:z0> " . Theorem <genH:poly_code_correct> : forall <var:b> : nat , {{ <var:N> = <var:b> }} <var:z0> := <nat:8> ; <var:X> := <var:z0> {{ <var:X> = <nat:8> }} . Proof . intros . apply hoare_seq with ( Q := ( ( <var:N> = <var:b> /\ <var:z0> = <nat:8> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:N> = <var:b> /\ <var:X> = <nat:8> ) ) %assertion ) . all : eapply hoare_consequence_pre ; try ( apply hoare_asgn || assn_auto'' ) . Qed . 