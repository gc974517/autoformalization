\begin{document} \begin{theorem} Let the following segment of code in \emph{Imp} : \begin{verbatim} <var:l0> := <nat:8> ; <var:W> := <var:l0> \end{verbatim} Assuming ( for some natural coefficients $ <var:z> $ ) that $ <var:S> = <var:z> $ before interpreting the program , it holds that we see $ <var:W> = <nat:8> $ after code segment terminates . \end{theorem} \begin{proof} The argument for the list of commands is demonstrated through typical Hoare logic . Moving on to the proceeding command seen in our list of instructions , we have the assignment command binding $ <nat:8> $ as $ <var:l0>$ . This statement transfers the precondition $ \{ <var:S> = <var:z> \} $ toward the condition $ \{ <var:S> = <var:z> \land <var:l0> = <nat:8> \} $ . Moving forward to the next step , we have the binding line assigning $ <var:l0$ toward $ <var:W>$ . This transfers $ \{ <var:S> = <var:z> \land <var:l0> = <nat:8> \} $ toward the postcondition $ \{ <var:S> = <var:z> \land <var:W> = <nat:8> \} $ . \end{proof} \end{document} 
~
Require Import String . From PLF Require Import Imp . From PLF Require Import Hoare . Definition <var:l0> : string := " <var:l0> " . Theorem <genH:poly_code_correct> : forall <var:z> : nat , {{ <var:S> = <var:z> }} <var:l0> := <nat:8> ; <var:W> := <var:l0> {{ <var:W> = <nat:8> }} . Proof . intros . apply hoare_seq with ( Q := ( ( <var:S> = <var:z> /\ <var:l0> = <nat:8> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:S> = <var:z> /\ <var:W> = <nat:8> ) ) %assertion ) . all : eapply hoare_consequence_pre ; try ( apply hoare_asgn || assn_auto'' ) . Qed . 