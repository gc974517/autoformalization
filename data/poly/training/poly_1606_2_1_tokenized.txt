\begin{document} \begin{theorem} Define the following list of commands such that \begin{verbatim} <var:t0> := <nat:7> ; <var:c> := <var:t0> \end{verbatim} Assume $ <var:W> = <var:l> $ prior to interpreting this set of commands it holds that we see $ <var:c> = <nat:7> $ when series of commands has finished . \end{theorem} \begin{proof} The way to prove correctness for this series of commands can be demonstrated by typical Hoare logic . Following , we have \verb | { <var:W> = <var:l> } <var:t0> := <nat:7> { <var:W> = <var:l> \land <var:t0> = <nat:7> } | and \verb | { <var:W> = <var:l> \land <var:t0> = <nat:7> } <var:c> := <var:t0{ <var:W> = <var:l> \land <var:c> = <nat:7> } | . \end{proof} \end{document} 
~
Require Import String . From PLF Require Import Imp . From PLF Require Import Hoare . Definition <var:t0> : string := " <var:t0> " . Theorem <genH:poly_code_correct> : forall <var:l> : nat , {{ <var:W> = <var:l> }} <var:t0> := <nat:7> ; <var:c> := <var:t0> {{ <var:c> = <nat:7> }} . Proof . intros . apply hoare_seq with ( Q := ( ( <var:W> = <var:l> /\ <var:t0> = <nat:7> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:W> = <var:l> /\ <var:c> = <nat:7> ) ) %assertion ) . all : eapply hoare_consequence_pre ; try ( apply hoare_asgn || assn_auto'' ) . Qed . 