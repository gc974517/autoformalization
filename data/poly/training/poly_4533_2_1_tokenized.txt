\begin{document} \begin{theorem} We define a series of instructions in \emph{Imp} : \begin{verbatim} <var:g0> := <nat:4> ; <var:s> := <var:g0> \end{verbatim} Given it to hold that $ <var:a> = <var:S> $ prior to executing this list of commands it follows that we have $ <var:s> = <nat:4> $ after series of commands has executed . \end{theorem} \begin{proof} Using usual Hoare logic returns : \begin{eqnarray} \{ <var:a> = <var:S> \} \\ <var:g0> := <nat:4> ; \\ \{ <var:a> = <var:S> \land <var:g0> = <nat:4> \} \\ <var:s> := <var:g0> \\ \{ <var:a> = <var:S> \land <var:s> = <nat:4> \} \end{eqnarray} Thusly , this series of commands is proven correct . \end{proof} \end{document} 
~
Require Import String . From PLF Require Import Imp . From PLF Require Import Hoare . Definition <var:g0> : string := " <var:g0> " . Theorem <genH:poly_code_correct> : forall <var:S> : nat , {{ <var:a> = <var:S> }} <var:g0> := <nat:4> ; <var:s> := <var:g0> {{ <var:s> = <nat:4> }} . Proof . intros . apply hoare_seq with ( Q := ( ( <var:a> = <var:S> /\ <var:g0> = <nat:4> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:a> = <var:S> /\ <var:s> = <nat:4> ) ) %assertion ) . all : eapply hoare_consequence_pre ; try ( apply hoare_asgn || assn_auto'' ) . Qed . 