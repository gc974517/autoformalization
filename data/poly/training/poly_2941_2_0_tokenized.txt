\begin{document} \begin{definition} We define the following set of commands <def:poly> in \emph{Imp} as \begin{verbatim} <var:L0> := <nat:9> ; <var:C> := <var:L0> \end{verbatim} \end{definition} \begin{theorem} Consider the following set of commands <def:poly> in \emph{Imp} . Allowing ( for positive coefficients $ <var:X> $ ) it to be that $ <var:P> = <var:X> $ prior to the evaluation of the set of commands it follows that we see $ <var:C> = <nat:9> $ after code segment has finished . \end{theorem} \begin{proof} Arguing the correctness of our set of commands is accomplished by the following decorated series of commands . \begin{eqnarray} \{ <var:P> = <var:X> \} \\ <var:L0> := <nat:9> ; \\ \{ <var:P> = <var:X> \land <var:L0> = <nat:9> \} \\ <var:C> := <var:L0> \\ \{ <var:P> = <var:X> \land <var:C> = <nat:9> \} \end{eqnarray} Applying usual Hoare techniques resolves the proof . \end{proof} \end{document} 
~
Require Import String . From PLF Require Import Imp . From PLF Require Import Hoare . Definition <var:L0> : string := " <var:L0> " . Definition <def:poly> := <var:L0> := <nat:9> ; <var:C> := <var:L0> . Theorem <genH:poly_code_correct> : forall <var:X> : nat , {{ <var:P> = <var:X> }} <def:poly> {{ <var:C> = <nat:9> }} . Proof . intros . apply hoare_seq with ( Q := ( ( <var:P> = <var:X> /\ <var:L0> = <nat:9> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:P> = <var:X> /\ <var:C> = <nat:9> ) ) %assertion ) . all : eapply hoare_consequence_pre ; try ( apply hoare_asgn || assn_auto'' ) . Qed . 