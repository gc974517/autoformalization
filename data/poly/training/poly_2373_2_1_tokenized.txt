\begin{document} \begin{theorem} We define a series of instructions in \emph{Imp} such that \begin{verbatim} <var:c0> := <nat:2> ; <var:d> := <var:c0> \end{verbatim} Assuming $ <var:N> = <var:X> $ ahead of executing the series of commands , then $ <var:d> = <nat:2> $ . \end{theorem} \begin{proof} \begin{eqnarray} \{ <var:N> = <var:X> \} \\ <var:c0> := <nat:2> ; \\ \{ <var:N> = <var:X> \land <var:c0> = <nat:2> \} \\ <var:d> := <var:c0> \\ \{ <var:N> = <var:X> \land <var:d> = <nat:2> \} \end{eqnarray} Using Hoare techniques completes the argument . \end{proof} \end{document} 
~
Require Import String . From PLF Require Import Imp . From PLF Require Import Hoare . Definition <var:c0> : string := " <var:c0> " . Theorem <genH:poly_code_correct> : forall <var:X> : nat , {{ <var:N> = <var:X> }} <var:c0> := <nat:2> ; <var:d> := <var:c0> {{ <var:d> = <nat:2> }} . Proof . intros . apply hoare_seq with ( Q := ( ( <var:N> = <var:X> /\ <var:c0> = <nat:2> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:N> = <var:X> /\ <var:d> = <nat:2> ) ) %assertion ) . all : eapply hoare_consequence_pre ; try ( apply hoare_asgn || assn_auto'' ) . Qed . 