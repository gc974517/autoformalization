\begin{document} \begin{theorem} Let the following code in \emph{Imp} as \begin{verbatim} <var:c0> := <nat:7> ; <var:p> := <var:c0> \end{verbatim} Allow it to be that $ <var:s> = <var:M> $ before the execution of the code it follows that $ <var:p> = <nat:7> $ . \end{theorem} \begin{proof} The flow of logic for our set of commands is demonstrated using standard Hoare techniques . Stepping through , we see \verb | { <var:s> = <var:M> } <var:c0> := <nat:7> { <var:s> = <var:M> \land <var:c0> = <nat:7> } | . This is given through the rule obtained from usual Hoare techniques . Moving on to the subsequent line of code contained in our code , we have \verb | { <var:s> = <var:M> } <var:c0> := <nat:7> { <var:s> = <var:M> \land <var:c0> = <nat:7> } | . \end{proof} \end{document} 
~
Require Import String . From PLF Require Import Imp . From PLF Require Import Hoare . Definition <var:c0> : string := " <var:c0> " . Theorem <genH:poly_code_correct> : forall <var:M> : nat , {{ <var:s> = <var:M> }} <var:c0> := <nat:7> ; <var:p> := <var:c0> {{ <var:p> = <nat:7> }} . Proof . intros . apply hoare_seq with ( Q := ( ( <var:s> = <var:M> /\ <var:c0> = <nat:7> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:s> = <var:M> /\ <var:p> = <nat:7> ) ) %assertion ) . all : eapply hoare_consequence_pre ; try ( apply hoare_asgn || assn_auto'' ) . Qed . 