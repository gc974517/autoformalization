\begin{document} \begin{theorem} Take the following code segment in \emph{Imp} as follows \begin{verbatim} <var:e0> := <nat:4> ; <var:n> := <var:e0> \end{verbatim} Assume --- for every natural coefficients $ <var:D> $ --- that we have $ <var:L> = <var:D> $ before evaluating our series of commands it follows that we have $ <var:n> = <nat:4> $ once series of commands executes . \end{theorem} \begin{proof} Utilizing typical Hoare logic results in : \begin{eqnarray} \{ <var:L> = <var:D> \} \\ <var:e0> := <nat:4> ; \\ \{ <var:L> = <var:D> \land <var:e0> = <nat:4> \} \\ <var:n> := <var:e0> \\ \{ <var:L> = <var:D> \land <var:n> = <nat:4> \} \end{eqnarray} Given the preceding argument , our list of commands is proven correct . \end{proof} \end{document} 
~
Require Import String . From PLF Require Import Imp . From PLF Require Import Hoare . Definition <var:e0> : string := " <var:e0> " . Theorem <genH:poly_code_correct> : forall <var:D> : nat , {{ <var:L> = <var:D> }} <var:e0> := <nat:4> ; <var:n> := <var:e0> {{ <var:n> = <nat:4> }} . Proof . intros . apply hoare_seq with ( Q := ( ( <var:L> = <var:D> /\ <var:e0> = <nat:4> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:L> = <var:D> /\ <var:n> = <nat:4> ) ) %assertion ) . all : eapply hoare_consequence_pre ; try ( apply hoare_asgn || assn_auto'' ) . Qed . 