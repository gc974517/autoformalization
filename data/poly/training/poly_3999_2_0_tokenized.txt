\begin{document} \begin{definition} Let the following code <def:poly> in \emph{Imp} : \begin{verbatim} <var:Y0> := <nat:6> ; <var:j> := <var:Y0> \end{verbatim} \end{definition} \begin{theorem} Given it to be that $ <var:V> = <var:d> $ prior to running this list of instructions , then $ <var:j> = <nat:6> $ when list of commands executes . \end{theorem} \begin{proof} Using Hoare reasoning results in : \begin{eqnarray} \{ <var:V> = <var:d> \} \\ <var:Y0> := <nat:6> ; \\ \{ <var:V> = <var:d> \land <var:Y0> = <nat:6> \} \\ <var:j> := <var:Y0> \\ \{ <var:V> = <var:d> \land <var:j> = <nat:6> \} \end{eqnarray} Given the above , the set of instructions has been shown correct . \end{proof} \end{document} 
~
Require Import String . From PLF Require Import Imp . From PLF Require Import Hoare . Definition <var:Y0> : string := " <var:Y0> " . Definition <def:poly> := <var:Y0> := <nat:6> ; <var:j> := <var:Y0> . Theorem <genH:poly_code_correct> : forall <var:d> : nat , {{ <var:V> = <var:d> }} <def:poly> {{ <var:j> = <nat:6> }} . Proof . intros . apply hoare_seq with ( Q := ( ( <var:V> = <var:d> /\ <var:Y0> = <nat:6> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:V> = <var:d> /\ <var:j> = <nat:6> ) ) %assertion ) . all : eapply hoare_consequence_pre ; try ( apply hoare_asgn || assn_auto'' ) . Qed . 