\begin{document} \begin{definition} We define the following code <def:poly> in \emph{Imp} : \begin{verbatim} <var:T0> := <nat:1> ; <var:G> := <var:T0> \end{verbatim} \end{definition} \begin{theorem} Assume , assuming some whole numbers $ <var:j> $ , it to be that $ <var:v> = <var:j> $ before evaluating the code segment it follows that $ <var:G> = <nat:1> $ after program terminates . \end{theorem} \begin{proof} Using standard Hoare reasoning gives : \begin{eqnarray} \{ <var:v> = <var:j> \} \\ <var:T0> := <nat:1> ; \\ \{ <var:v> = <var:j> \land <var:T0> = <nat:1> \} \\ <var:G> := <var:T0> \\ \{ <var:v> = <var:j> \land <var:G> = <nat:1> \} \end{eqnarray} Hence , our segment of code is proven correct . \end{proof} \end{document} 
~
Require Import String . From PLF Require Import Imp . From PLF Require Import Hoare . Definition <var:T0> : string := " <var:T0> " . Definition <def:poly> := <var:T0> := <nat:1> ; <var:G> := <var:T0> . Theorem <genH:poly_code_correct> : forall <var:j> : nat , {{ <var:v> = <var:j> }} <def:poly> {{ <var:G> = <nat:1> }} . Proof . intros . apply hoare_seq with ( Q := ( ( <var:v> = <var:j> /\ <var:T0> = <nat:1> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:v> = <var:j> /\ <var:G> = <nat:1> ) ) %assertion ) . all : eapply hoare_consequence_pre ; try ( apply hoare_asgn || assn_auto'' ) . Qed . 