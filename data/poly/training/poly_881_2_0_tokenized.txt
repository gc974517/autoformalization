\begin{document} \begin{theorem} Let the following series of commands : \begin{verbatim} <var:c0> := <nat:4> ; <var:N> := <var:c0> \end{verbatim} Given it to hold that $ <var:j> = <var:s> $ before interpreting this program it holds that we see $ <var:N> = <nat:4> $ . \end{theorem} \begin{proof} \begin{eqnarray} \{ <var:j> = <var:s> \} \\ <var:c0> := <nat:4> ; \\ \{ <var:j> = <var:s> \land <var:c0> = <nat:4> \} \\ <var:N> := <var:c0> \\ \{ <var:j> = <var:s> \land <var:N> = <nat:4> \} \end{eqnarray} Utilizing Hoare techniques accomplishes the argument . \end{proof} \end{document} 
~
Require Import String . From PLF Require Import Imp . From PLF Require Import Hoare . Definition <var:c0> : string := " <var:c0> " . Theorem <genH:poly_code_correct> : forall <var:s> : nat , {{ <var:j> = <var:s> }} <var:c0> := <nat:4> ; <var:N> := <var:c0> {{ <var:N> = <nat:4> }} . Proof . intros . apply hoare_seq with ( Q := ( ( <var:j> = <var:s> /\ <var:c0> = <nat:4> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:j> = <var:s> /\ <var:N> = <nat:4> ) ) %assertion ) . all : eapply hoare_consequence_pre ; try ( apply hoare_asgn || assn_auto'' ) . Qed . 