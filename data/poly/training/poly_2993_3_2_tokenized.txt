\begin{document} \begin{definition} Define a series of commands <def:poly> in \emph{Imp} as follows \begin{verbatim} <var:l> := <nat:3> ; <var:l> := <nat:1> + <var:l> * <var:a> ; <var:l> := <nat:1> + <var:l> * <var:a> \end{verbatim} \end{definition} \begin{theorem} Let the following series of instructions <def:poly> . Given , assuming some positive integers $ <var:m> $ , it to hold that $ <var:a> = <var:m> $ ahead of interpreting our program , then $ <var:l> = <nat:3> \cdot <var:m> ^ <nat:2> + <nat:1> \cdot <var:m> + <nat:1> $ when list of commands finishes . \end{theorem} \begin{proof} Using Hoare reasoning returns : \begin{eqnarray} \{ <var:a> = <var:m> \} \\ <var:l> := <nat:3> ; \\ \{ <var:a> = <var:m> \land <var:l> = <nat:3> \} \\ <var:l> := <nat:1> + <var:l> * <var:a> ; \\ \{ <var:a> = <var:m> \land <var:l> = <nat:3> \cdot <var:m> + <nat:1> \} \\ <var:l> := <nat:1> + <var:l> * <var:a> \\ \{ <var:a> = <var:m> \land <var:l> = <nat:3> \cdot <var:m> ^ <nat:2> + <nat:1> \cdot <var:m> + <nat:1> \} \end{eqnarray} Considering the above , the set of commands is demonstrated to be correct . \end{proof} \end{document} 
~
Require Import String . From PLF Require Import Imp . From PLF Require Import Hoare . Definition <def:poly> := <var:l> := <nat:3> ; <var:l> := <nat:1> + <var:l> * <var:a> ; <var:l> := <nat:1> + <var:l> * <var:a> . Theorem <genH:poly_code_correct> : forall <var:m> : nat , {{ <var:a> = <var:m> }} <def:poly> {{ <var:l> = <nat:3> * <var:m> ^ <nat:2> + <nat:1> * <var:m> + <nat:1> }} . Proof . intros . apply hoare_seq with ( Q := ( ( <var:a> = <var:m> /\ <var:l> = <nat:3> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:a> = <var:m> /\ <var:l> = <nat:3> * <var:m> + <nat:1> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:a> = <var:m> /\ <var:l> = <nat:3> * <var:m> ^ <nat:2> + <nat:1> * <var:m> + <nat:1> ) ) %assertion ) . all : eapply hoare_consequence_pre ; try ( apply hoare_asgn || assn_auto'' ) . Qed . 