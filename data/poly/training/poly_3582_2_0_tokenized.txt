\begin{document} \begin{definition} Take the following series of commands <def:poly> in \emph{Imp} as follows \begin{verbatim} <var:O0> := <nat:8> ; <var:p> := <var:O0> \end{verbatim} \end{definition} \begin{theorem} Assuming it to hold that $ <var:n> = <var:U> $ before interpreting this series of commands , it follows that $ <var:p> = <nat:8> $ . \end{theorem} \begin{proof} \begin{eqnarray} \{ <var:n> = <var:U> \} \\ <var:O0> := <nat:8> ; \\ \{ <var:n> = <var:U> \land <var:O0> = <nat:8> \} \\ <var:p> := <var:O0> \\ \{ <var:n> = <var:U> \land <var:p> = <nat:8> \} \end{eqnarray} The application of standard Hoare reasoning ends the proof . \end{proof} \end{document} 
~
Require Import String . From PLF Require Import Imp . From PLF Require Import Hoare . Definition <var:O0> : string := " <var:O0> " . Definition <def:poly> := <var:O0> := <nat:8> ; <var:p> := <var:O0> . Theorem <genH:poly_code_correct> : forall <var:U> : nat , {{ <var:n> = <var:U> }} <def:poly> {{ <var:p> = <nat:8> }} . Proof . intros . apply hoare_seq with ( Q := ( ( <var:n> = <var:U> /\ <var:O0> = <nat:8> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:n> = <var:U> /\ <var:p> = <nat:8> ) ) %assertion ) . all : eapply hoare_consequence_pre ; try ( apply hoare_asgn || assn_auto'' ) . Qed . 