\begin{document} \begin{definition} Let the following list of commands <def:poly> in \emph{Imp} as \begin{verbatim} <var:a0> := <nat:4> ; <var:o> := <var:a0> \end{verbatim} \end{definition} \begin{theorem} Given $ <var:S> = <var:Q> $ --- assuming some $ <var:Q> \in \mathbb{N} $ --- before the evaluation of this program , it holds that we have $ <var:o> = <nat:4> $ . \end{theorem} \begin{proof} Demonstrating correctness of our series of commands can be demonstrated by standard Hoare techniques . Jumping to the next steps found in our program , we have \[ \begin{tabular} {rcl} \{ <var:S> = <var:Q> \} & <var:a0> := <nat:4> & \{ <var:S> = <var:Q> \land <var:a0> = <nat:4> \} \\ \{ <var:S> = <var:Q> \land <var:a0> = <nat:4> \} & <var:o> := <var:a0& \{ <var:S> = <var:Q> \land <var:o> = <nat:4> \} \end{tabular} \end{proof} \end{document} 
~
Require Import String . From PLF Require Import Imp . From PLF Require Import Hoare . Definition <var:a0> : string := " <var:a0> " . Definition <def:poly> := <var:a0> := <nat:4> ; <var:o> := <var:a0> . Theorem <genH:poly_code_correct> : forall <var:Q> : nat , {{ <var:S> = <var:Q> }} <def:poly> {{ <var:o> = <nat:4> }} . Proof . intros . apply hoare_seq with ( Q := ( ( <var:S> = <var:Q> /\ <var:a0> = <nat:4> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:S> = <var:Q> /\ <var:o> = <nat:4> ) ) %assertion ) . all : eapply hoare_consequence_pre ; try ( apply hoare_asgn || assn_auto'' ) . Qed . 