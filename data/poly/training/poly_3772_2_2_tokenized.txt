\begin{document} \begin{theorem} Let the following set of instructions in \emph{Imp} as \begin{verbatim} <var:e> := <nat:4> ; <var:e> := <nat:4> + <var:e> * <var:t> \end{verbatim} Assume ( given all natural numbers $ <var:i> $ ) it to be that $ <var:t> = <var:i> $ before the execution of this list of instructions then we have $ <var:e> = <nat:4> * <var:i> + <nat:4> $ . \end{theorem} \begin{proof} \begin{eqnarray} \{ <var:t> = <var:i> \} \\ <var:e> := <nat:4> ; \\ \{ <var:t> = <var:i> \land <var:e> = <nat:4> \} \\ <var:e> := <nat:4> + <var:e> * <var:t> \\ \{ <var:t> = <var:i> \land <var:e> = <nat:4> * <var:i> + <nat:4> \} \end{eqnarray} Using usual Hoare reasoning finishes the argument . \end{proof} \end{document} 
~
Require Import String . From PLF Require Import Imp . From PLF Require Import Hoare . Theorem <genH:poly_code_correct> : forall <var:i> : nat , {{ <var:t> = <var:i> }} <var:e> := <nat:4> ; <var:e> := <nat:4> + <var:e> * <var:t> {{ <var:e> = <nat:4> * <var:i> + <nat:4> }} . Proof . intros . apply hoare_seq with ( Q := ( ( <var:t> = <var:i> /\ <var:e> = <nat:4> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:t> = <var:i> /\ <var:e> = <nat:4> * <var:i> + <nat:4> ) ) %assertion ) . all : eapply hoare_consequence_pre ; try ( apply hoare_asgn || assn_auto'' ) . Qed . 