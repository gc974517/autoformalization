\begin{document} \begin{theorem} Take a list of commands : \begin{verbatim} <var:j0> := <nat:8> ; <var:O> := <var:j0> \end{verbatim} Given that $ <var:v> = <var:w> $ ( with some whole numbers $ <var:w> $ ) prior to executing the list of commands it holds that $ <var:O> = <nat:8> $ after series of commands terminates . \end{theorem} \begin{proof} Utilizing typical Hoare logic results in : \begin{eqnarray} \{ <var:v> = <var:w> \} \\ <var:j0> := <nat:8> ; \\ \{ <var:v> = <var:w> \land <var:j0> = <nat:8> \} \\ <var:O> := <var:j0> \\ \{ <var:v> = <var:w> \land <var:O> = <nat:8> \} \end{eqnarray} As a result , our code is demonstrated to be correct . \end{proof} \end{document} 
~
Require Import String . From PLF Require Import Imp . From PLF Require Import Hoare . Definition <var:j0> : string := " <var:j0> " . Theorem <genH:poly_code_correct> : forall <var:w> : nat , {{ <var:v> = <var:w> }} <var:j0> := <nat:8> ; <var:O> := <var:j0> {{ <var:O> = <nat:8> }} . Proof . intros . apply hoare_seq with ( Q := ( ( <var:v> = <var:w> /\ <var:j0> = <nat:8> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:v> = <var:w> /\ <var:O> = <nat:8> ) ) %assertion ) . all : eapply hoare_consequence_pre ; try ( apply hoare_asgn || assn_auto'' ) . Qed . 