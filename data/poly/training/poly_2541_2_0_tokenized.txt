\begin{document} \begin{definition} Consider the following list of commands <def:poly> in \emph{Imp} as \begin{verbatim} <var:a0> := <nat:2> ; <var:Q> := <var:a0> \end{verbatim} \end{definition} \begin{theorem} We define the following set of commands <def:poly> . Assuming it to hold that $ <var:m> = <var:h> $ --- for positive integer coefficients $ <var:h> $ --- prior to the execution of our set of instructions , then we have $ <var:Q> = <nat:2> $ . \end{theorem} \begin{proof} Showing our claim about correctness for this series of commands can be done by standard Hoare reasoning . Advancing on , \begin{eqnarray} \{ <var:m> = <var:h> \} \, <var:a0> := <nat:2> \, \{ <var:m> = <var:h> \land <var:a0> = <nat:2> \} \end{eqnarray} This is guaranteed through the law defined in Hoare techniques . Considering the upcoming line in the series of instructions , we have \begin{eqnarray} \{ <var:m> = <var:h> \} \, <var:a0> := <nat:2> \, \{ <var:m> = <var:h> \land <var:a0> = <nat:2> \} \end{eqnarray} This is rigorously given with the environment update law from standard Hoare reasoning . \end{proof} \end{document} 
~
Require Import String . From PLF Require Import Imp . From PLF Require Import Hoare . Definition <var:a0> : string := " <var:a0> " . Definition <def:poly> := <var:a0> := <nat:2> ; <var:Q> := <var:a0> . Theorem <genH:poly_code_correct> : forall <var:h> : nat , {{ <var:m> = <var:h> }} <def:poly> {{ <var:Q> = <nat:2> }} . Proof . intros . apply hoare_seq with ( Q := ( ( <var:m> = <var:h> /\ <var:a0> = <nat:2> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:m> = <var:h> /\ <var:Q> = <nat:2> ) ) %assertion ) . all : eapply hoare_consequence_pre ; try ( apply hoare_asgn || assn_auto'' ) . Qed . 