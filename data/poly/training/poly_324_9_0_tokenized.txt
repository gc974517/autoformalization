\begin{document} \begin{theorem} Let the following program in \emph{Imp} : \begin{verbatim} <var:y0> := <nat:5> ; <var:y1> := <nat:9> ; <var:y1> := <var:y1> * <var:v> ; <var:y2> := <nat:6> ; <var:y2> := <var:y2> * <var:v> ; <var:y2> := <var:y2> * <var:v> ; <var:W> := <var:y2> ; <var:W> := <var:W> + <var:y1> ; <var:W> := <var:W> + <var:y0> \end{verbatim} Assume --- for all $ <var:T> $ --- it to be that $ <var:v> = <var:T> $ ahead of the execution of this series of commands it holds that $ <var:W> = <nat:6> \times <var:T> ^ <nat:2> + <nat:9> \times <var:T> + <nat:5> $ . \end{theorem} \begin{proof} The application of usual Hoare logic results in : \begin{eqnarray} \{ <var:v> = <var:T> \} \\ <var:y0> := <nat:5> ; \\ \{ <var:v> = <var:T> \land <var:y0> = <nat:5> \} \\ <var:y1> := <nat:9> ; \\ \{ <var:v> = <var:T> \land <var:y0> = <nat:5> \land <var:y1> = <nat:9> \} \\ <var:y1> := <var:y1> * <var:v> ; \\ \{ <var:v> = <var:T> \land <var:y0> = <nat:5> \land <var:y1> = <nat:9> \cdot <var:T> \} \\ <var:y2> := <nat:6> ; \\ \{ <var:v> = <var:T> \land <var:y0> = <nat:5> \land <var:y1> = <nat:9> \cdot <var:T> \land <var:y2> = <nat:6> \} \\ <var:y2> := <var:y2> * <var:v> ; \\ \{ <var:v> = <var:T> \land <var:y0> = <nat:5> \land <var:y1> = <nat:9> \cdot <var:T> \land <var:y2> = <nat:6> \cdot <var:T> \} \\ <var:y2> := <var:y2> * <var:v> ; \\ \{ <var:v> = <var:T> \land <var:y0> = <nat:5> \land <var:y1> = <nat:9> \cdot <var:T> \land <var:y2> = <nat:6> \cdot <var:T> ^ <nat:2> \} \\ <var:W> := <var:y2> ; \\ \{ <var:v> = <var:T> \land <var:y0> = <nat:5> \land <var:y1> = <nat:9> \cdot <var:T> \land <var:W> = <nat:6> \cdot <var:T> ^ <nat:2> \} \\ <var:W> := <var:W> + <var:y1> ; \\ \{ <var:v> = <var:T> \land <var:y0> = <nat:5> \land <var:W> = <nat:6> \cdot <var:T> ^ <nat:2> + <nat:9> \cdot <var:T> \} \\ <var:W> := <var:W> + <var:y0> \\ \{ <var:v> = <var:T> \land <var:W> = <nat:6> \cdot <var:T> ^ <nat:2> + <nat:9> \cdot <var:T> + <nat:5> \} \end{eqnarray} Thusly , our series of instructions has been shown to be correct . \end{proof} \end{document} 
~
Require Import String . From PLF Require Import Imp . From PLF Require Import Hoare . Definition <var:y0> : string := " <var:y0> " . Definition <var:y1> : string := " <var:y1> " . Definition <var:y2> : string := " <var:y2> " . Theorem <genH:poly_code_correct> : forall <var:T> : nat , {{ <var:v> = <var:T> }} <var:y0> := <nat:5> ; <var:y1> := <nat:9> ; <var:y1> := <var:y1> * <var:v> ; <var:y2> := <nat:6> ; <var:y2> := <var:y2> * <var:v> ; <var:y2> := <var:y2> * <var:v> ; <var:W> := <var:y2> ; <var:W> := <var:W> + <var:y1> ; <var:W> := <var:W> + <var:y0> {{ <var:W> = <nat:6> * <var:T> ^ <nat:2> + <nat:9> * <var:T> + <nat:5> }} . Proof . intros . apply hoare_seq with ( Q := ( ( <var:v> = <var:T> /\ <var:y0> = <nat:5> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:v> = <var:T> /\ <var:y0> = <nat:5> /\ <var:y1> = <nat:9> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:v> = <var:T> /\ <var:y0> = <nat:5> /\ <var:y1> = <nat:9> * <var:T> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:v> = <var:T> /\ <var:y0> = <nat:5> /\ <var:y1> = <nat:9> * <var:T> /\ <var:y2> = <nat:6> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:v> = <var:T> /\ <var:y0> = <nat:5> /\ <var:y1> = <nat:9> * <var:T> /\ <var:y2> = <nat:6> * <var:T> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:v> = <var:T> /\ <var:y0> = <nat:5> /\ <var:y1> = <nat:9> * <var:T> /\ <var:y2> = <nat:6> * <var:T> ^ <nat:2> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:v> = <var:T> /\ <var:y0> = <nat:5> /\ <var:y1> = <nat:9> * <var:T> /\ <var:W> = <nat:6> * <var:T> ^ <nat:2> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:v> = <var:T> /\ <var:y0> = <nat:5> /\ <var:W> = <nat:6> * <var:T> ^ <nat:2> + <nat:9> * <var:T> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:v> = <var:T> /\ <var:W> = <nat:6> * <var:T> ^ <nat:2> + <nat:9> * <var:T> + <nat:5> ) ) %assertion ) . all : eapply hoare_consequence_pre ; try ( apply hoare_asgn || assn_auto'' ) . Qed . 