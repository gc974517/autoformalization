\begin{document} \begin{definition} Let the following series of instructions <def:poly> in \emph{Imp} as follows \begin{verbatim} <var:U0> := <nat:4> ; <var:U1> := <nat:6> ; <var:U1> := <var:U1> * <var:j> ; <var:M> := <var:U1> ; <var:M> := <var:M> + <var:U0> \end{verbatim} \end{definition} \begin{theorem} Assuming $ <var:j> = <var:R> $ given every $ <var:R> \in \mathbb{Z}^+ $ prior to the evaluation of this set of commands it follows that we see $ <var:M> = <nat:6> \times <var:R> + <nat:4> $ . \end{theorem} \begin{proof} Demonstrating correctness of our set of instructions is accomplished using Hoare techniques . Shifting focus toward the following steps seen in the program , \[ \begin{tabular} {rcl} \{ <var:j> = <var:R> \} & <var:U0> := <nat:4> & \{ <var:j> = <var:R> \land <var:U0> = <nat:4> \} \\ \{ <var:j> = <var:R> \land <var:U0> = <nat:4> \} & <var:U1> := <nat:6> & \{ <var:j> = <var:R> \land <var:U0> = <nat:4> \land <var:U1> = <nat:6> \} \\ \{ <var:j> = <var:R> \land <var:U0> = <nat:4> \land <var:U1> = <nat:6> \} & <var:U1> := <var:U1> * <var:j> & \{ <var:j> = <var:R> \land <var:U0> = <nat:4> \land <var:U1> = <nat:6> \times <var:R> \} \\ \{ <var:j> = <var:R> \land <var:U0> = <nat:4> \land <var:U1> = <nat:6> \times <var:R> \} & <var:M> := <var:U1> & \{ <var:j> = <var:R> \land <var:U0> = <nat:4> \land <var:M> = <nat:6> \times <var:R> \} \end{tabular} This is ensured through the variable binding rule of Hoare techniques . Paying attention to the proceeding line of code contained in our series of instructions , we have \[ \begin{tabular} {rcl} \{ <var:j> = <var:R> \} & <var:U0> := <nat:4> & \{ <var:j> = <var:R> \land <var:U0> = <nat:4> \} \end{tabular} \end{proof} \end{document} 
~
Require Import String . From PLF Require Import Imp . From PLF Require Import Hoare . Definition <var:U0> : string := " <var:U0> " . Definition <var:U1> : string := " <var:U1> " . Definition <def:poly> := <var:U0> := <nat:4> ; <var:U1> := <nat:6> ; <var:U1> := <var:U1> * <var:j> ; <var:M> := <var:U1> ; <var:M> := <var:M> + <var:U0> . Theorem <genH:poly_code_correct> : forall <var:R> : nat , {{ <var:j> = <var:R> }} <def:poly> {{ <var:M> = <nat:6> * <var:R> + <nat:4> }} . Proof . intros . apply hoare_seq with ( Q := ( ( <var:j> = <var:R> /\ <var:U0> = <nat:4> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:j> = <var:R> /\ <var:U0> = <nat:4> /\ <var:U1> = <nat:6> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:j> = <var:R> /\ <var:U0> = <nat:4> /\ <var:U1> = <nat:6> * <var:R> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:j> = <var:R> /\ <var:U0> = <nat:4> /\ <var:M> = <nat:6> * <var:R> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:j> = <var:R> /\ <var:M> = <nat:6> * <var:R> + <nat:4> ) ) %assertion ) . all : eapply hoare_consequence_pre ; try ( apply hoare_asgn || assn_auto'' ) . Qed . 