\begin{document} \begin{theorem} Let the following series of commands in \emph{Imp} as \begin{verbatim} <var:F> := <nat:1> ; <var:F> := <nat:1> + <var:F> * <var:D> ; <var:F> := <nat:3> + <var:F> * <var:D> ; <var:F> := <var:F> * <var:D> ; <var:F> := <nat:4> + <var:F> * <var:D> ; <var:F> := <nat:1> + <var:F> * <var:D> ; <var:F> := <nat:1> + <var:F> * <var:D> ; <var:F> := <nat:1> + <var:F> * <var:D> ; <var:F> := <nat:2> + <var:F> * <var:D> ; <var:F> := <nat:2> + <var:F> * <var:D> ; <var:F> := <nat:3> + <var:F> * <var:D> \end{verbatim} Allow that $ <var:D> = <var:T> $ ahead of interpreting the series of instructions , then we see $ <var:F> = <nat:1> \cdot <var:T> ^ <nat:10> + <nat:1> \cdot <var:T> ^ <nat:9> + <nat:3> \cdot <var:T> ^ <nat:8> + <nat:4> \cdot <var:T> ^ <nat:6> + <nat:1> \cdot <var:T> ^ <nat:5> + <nat:1> \cdot <var:T> ^ <nat:4> + <nat:1> \cdot <var:T> ^ <nat:3> + <nat:2> \cdot <var:T> ^ <nat:2> + <nat:2> \cdot <var:T> + <nat:3> $ . \end{theorem} \begin{proof} Applying Hoare reasoning produces : \begin{eqnarray} \{ <var:D> = <var:T> \} \\ <var:F> := <nat:1> ; \\ \{ <var:D> = <var:T> \land <var:F> = <nat:1> \} \\ <var:F> := <nat:1> + <var:F> * <var:D> ; \\ \{ <var:D> = <var:T> \land <var:F> = <nat:1> * <var:T> + <nat:1> \} \\ <var:F> := <nat:3> + <var:F> * <var:D> ; \\ \{ <var:D> = <var:T> \land <var:F> = <nat:1> * <var:T> ^ <nat:2> + <nat:1> * <var:T> + <nat:3> \} \\ <var:F> := <var:F> * <var:D> ; \\ \{ <var:D> = <var:T> \land <var:F> = <nat:1> * <var:T> ^ <nat:3> + <nat:1> * <var:T> ^ <nat:2> + <nat:3> * <var:T> + \} \\ <var:F> := <nat:4> + <var:F> * <var:D> ; \\ \{ <var:D> = <var:T> \land <var:F> = <nat:1> * <var:T> ^ <nat:4> + <nat:1> * <var:T> ^ <nat:3> + <nat:3> * <var:T> ^ <nat:2> + <nat:4> \} \\ <var:F> := <nat:1> + <var:F> * <var:D> ; \\ \{ <var:D> = <var:T> \land <var:F> = <nat:1> * <var:T> ^ <nat:5> + <nat:1> * <var:T> ^ <nat:4> + <nat:3> * <var:T> ^ <nat:3> + <nat:4> * <var:T> + <nat:1> \} \\ <var:F> := <nat:1> + <var:F> * <var:D> ; \\ \{ <var:D> = <var:T> \land <var:F> = <nat:1> * <var:T> ^ <nat:6> + <nat:1> * <var:T> ^ <nat:5> + <nat:3> * <var:T> ^ <nat:4> + <nat:4> * <var:T> ^ <nat:2> + <nat:1> * <var:T> + <nat:1> \} \\ <var:F> := <nat:1> + <var:F> * <var:D> ; \\ \{ <var:D> = <var:T> \land <var:F> = <nat:1> * <var:T> ^ <nat:7> + <nat:1> * <var:T> ^ <nat:6> + <nat:3> * <var:T> ^ <nat:5> + <nat:4> * <var:T> ^ <nat:3> + <nat:1> * <var:T> ^ <nat:2> + <nat:1> * <var:T> + <nat:1> \} \\ <var:F> := <nat:2> + <var:F> * <var:D> ; \\ \{ <var:D> = <var:T> \land <var:F> = <nat:1> * <var:T> ^ <nat:8> + <nat:1> * <var:T> ^ <nat:7> + <nat:3> * <var:T> ^ <nat:6> + <nat:4> * <var:T> ^ <nat:4> + <nat:1> * <var:T> ^ <nat:3> + <nat:1> * <var:T> ^ <nat:2> + <nat:1> * <var:T> + <nat:2> \} \\ <var:F> := <nat:2> + <var:F> * <var:D> ; \\ \{ <var:D> = <var:T> \land <var:F> = <nat:1> * <var:T> ^ <nat:9> + <nat:1> * <var:T> ^ <nat:8> + <nat:3> * <var:T> ^ <nat:7> + <nat:4> * <var:T> ^ <nat:5> + <nat:1> * <var:T> ^ <nat:4> + <nat:1> * <var:T> ^ <nat:3> + <nat:1> * <var:T> ^ <nat:2> + <nat:2> * <var:T> + <nat:2> \} \\ <var:F> := <nat:3> + <var:F> * <var:D> \\ \{ <var:D> = <var:T> \land <var:F> = <nat:1> * <var:T> ^ <nat:10> + <nat:1> * <var:T> ^ <nat:9> + <nat:3> * <var:T> ^ <nat:8> + <nat:4> * <var:T> ^ <nat:6> + <nat:1> * <var:T> ^ <nat:5> + <nat:1> * <var:T> ^ <nat:4> + <nat:1> * <var:T> ^ <nat:3> + <nat:2> * <var:T> ^ <nat:2> + <nat:2> * <var:T> + <nat:3> \} \end{eqnarray} Given the above , the list of commands is shown correct . \end{proof} \end{document} 
~
Require Import String . From PLF Require Import Imp . From PLF Require Import Hoare . Theorem <genH:poly_code_correct> : forall <var:T> : nat , {{ <var:D> = <var:T> }} <var:F> := <nat:1> ; <var:F> := <nat:1> + <var:F> * <var:D> ; <var:F> := <nat:3> + <var:F> * <var:D> ; <var:F> := <var:F> * <var:D> ; <var:F> := <nat:4> + <var:F> * <var:D> ; <var:F> := <nat:1> + <var:F> * <var:D> ; <var:F> := <nat:1> + <var:F> * <var:D> ; <var:F> := <nat:1> + <var:F> * <var:D> ; <var:F> := <nat:2> + <var:F> * <var:D> ; <var:F> := <nat:2> + <var:F> * <var:D> ; <var:F> := <nat:3> + <var:F> * <var:D> {{ <var:F> = <nat:1> * <var:T> ^ <nat:10> + <nat:1> * <var:T> ^ <nat:9> + <nat:3> * <var:T> ^ <nat:8> + <nat:4> * <var:T> ^ <nat:6> + <nat:1> * <var:T> ^ <nat:5> + <nat:1> * <var:T> ^ <nat:4> + <nat:1> * <var:T> ^ <nat:3> + <nat:2> * <var:T> ^ <nat:2> + <nat:2> * <var:T> + <nat:3> }} . Proof . intros . apply hoare_seq with ( Q := ( ( <var:D> = <var:T> /\ <var:F> = <nat:1> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:D> = <var:T> /\ <var:F> = <nat:1> * <var:T> + <nat:1> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:D> = <var:T> /\ <var:F> = <nat:1> * <var:T> ^ <nat:2> + <nat:1> * <var:T> + <nat:3> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:D> = <var:T> /\ <var:F> = <nat:1> * <var:T> ^ <nat:3> + <nat:1> * <var:T> ^ <nat:2> + <nat:3> * <var:T> + ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:D> = <var:T> /\ <var:F> = <nat:1> * <var:T> ^ <nat:4> + <nat:1> * <var:T> ^ <nat:3> + <nat:3> * <var:T> ^ <nat:2> + <nat:4> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:D> = <var:T> /\ <var:F> = <nat:1> * <var:T> ^ <nat:5> + <nat:1> * <var:T> ^ <nat:4> + <nat:3> * <var:T> ^ <nat:3> + <nat:4> * <var:T> + <nat:1> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:D> = <var:T> /\ <var:F> = <nat:1> * <var:T> ^ <nat:6> + <nat:1> * <var:T> ^ <nat:5> + <nat:3> * <var:T> ^ <nat:4> + <nat:4> * <var:T> ^ <nat:2> + <nat:1> * <var:T> + <nat:1> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:D> = <var:T> /\ <var:F> = <nat:1> * <var:T> ^ <nat:7> + <nat:1> * <var:T> ^ <nat:6> + <nat:3> * <var:T> ^ <nat:5> + <nat:4> * <var:T> ^ <nat:3> + <nat:1> * <var:T> ^ <nat:2> + <nat:1> * <var:T> + <nat:1> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:D> = <var:T> /\ <var:F> = <nat:1> * <var:T> ^ <nat:8> + <nat:1> * <var:T> ^ <nat:7> + <nat:3> * <var:T> ^ <nat:6> + <nat:4> * <var:T> ^ <nat:4> + <nat:1> * <var:T> ^ <nat:3> + <nat:1> * <var:T> ^ <nat:2> + <nat:1> * <var:T> + <nat:2> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:D> = <var:T> /\ <var:F> = <nat:1> * <var:T> ^ <nat:9> + <nat:1> * <var:T> ^ <nat:8> + <nat:3> * <var:T> ^ <nat:7> + <nat:4> * <var:T> ^ <nat:5> + <nat:1> * <var:T> ^ <nat:4> + <nat:1> * <var:T> ^ <nat:3> + <nat:1> * <var:T> ^ <nat:2> + <nat:2> * <var:T> + <nat:2> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:D> = <var:T> /\ <var:F> = <nat:1> * <var:T> ^ <nat:10> + <nat:1> * <var:T> ^ <nat:9> + <nat:3> * <var:T> ^ <nat:8> + <nat:4> * <var:T> ^ <nat:6> + <nat:1> * <var:T> ^ <nat:5> + <nat:1> * <var:T> ^ <nat:4> + <nat:1> * <var:T> ^ <nat:3> + <nat:2> * <var:T> ^ <nat:2> + <nat:2> * <var:T> + <nat:3> ) ) %assertion ) . all : eapply hoare_consequence_pre ; try ( apply hoare_asgn || assn_auto'' ) . Qed . 