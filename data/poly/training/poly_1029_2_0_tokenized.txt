\begin{document} \begin{theorem} We define a set of commands in \emph{Imp} as \begin{verbatim} <var:E0> := <nat:8> ; <var:l> := <var:E0> \end{verbatim} Allowing for some natural coefficients $ <var:i> $ that we have $ <var:x> = <var:i> $ before running this set of commands it holds that $ <var:l> = <nat:8> $ . \end{theorem} \begin{proof} Let the below decorated list of commands . \begin{eqnarray} \{ <var:x> = <var:i> \} \\ <var:E0> := <nat:8> ; \\ \{ <var:x> = <var:i> \land <var:E0> = <nat:8> \} \\ <var:l> := <var:E0> \\ \{ <var:x> = <var:i> \land <var:l> = <nat:8> \} \end{eqnarray} Applying standard Hoare logic finishes the argument . \end{proof} \end{document} 
~
Require Import String . From PLF Require Import Imp . From PLF Require Import Hoare . Definition <var:E0> : string := " <var:E0> " . Theorem <genH:poly_code_correct> : forall <var:i> : nat , {{ <var:x> = <var:i> }} <var:E0> := <nat:8> ; <var:l> := <var:E0> {{ <var:l> = <nat:8> }} . Proof . intros . apply hoare_seq with ( Q := ( ( <var:x> = <var:i> /\ <var:E0> = <nat:8> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:x> = <var:i> /\ <var:l> = <nat:8> ) ) %assertion ) . all : eapply hoare_consequence_pre ; try ( apply hoare_asgn || assn_auto'' ) . Qed . 