\begin{document} \begin{theorem} Consider a set of commands as follows \begin{verbatim} <var:q0> := <nat:4> ; <var:i> := <var:q0> \end{verbatim} Given ( for every $ <var:S> $ ) it to hold that $ <var:J> = <var:S> $ prior to executing our code segment , it holds that $ <var:i> = <nat:4> $ after code terminates . \end{theorem} \begin{proof} Using Hoare reasoning produces : \begin{eqnarray} \{ <var:J> = <var:S> \} \\ <var:q0> := <nat:4> ; \\ \{ <var:J> = <var:S> \land <var:q0> = <nat:4> \} \\ <var:i> := <var:q0> \\ \{ <var:J> = <var:S> \land <var:i> = <nat:4> \} \end{eqnarray} Therefore , our segment of code is proven correct . \end{proof} \end{document} 
~
Require Import String . From PLF Require Import Imp . From PLF Require Import Hoare . Definition <var:q0> : string := " <var:q0> " . Theorem <genH:poly_code_correct> : forall <var:S> : nat , {{ <var:J> = <var:S> }} <var:q0> := <nat:4> ; <var:i> := <var:q0> {{ <var:i> = <nat:4> }} . Proof . intros . apply hoare_seq with ( Q := ( ( <var:J> = <var:S> /\ <var:q0> = <nat:4> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:J> = <var:S> /\ <var:i> = <nat:4> ) ) %assertion ) . all : eapply hoare_consequence_pre ; try ( apply hoare_asgn || assn_auto'' ) . Qed . 