\begin{document} \begin{definition} Define the following list of commands <def:poly> in \emph{Imp} : \begin{verbatim} <var:G0> := <nat:5> ; <var:l> := <var:G0> \end{verbatim} \end{definition} \begin{theorem} Given ( assuming some natural numbers $ <var:h> $ ) that $ <var:y> = <var:h> $ prior to the evaluation of our code segment it follows that we see $ <var:l> = <nat:5> $ once series of commands terminates . \end{theorem} \begin{proof} Showing our claim about correctness for our list of instructions can be shown using Hoare reasoning . Considering the subsequent pieces of code in our code segment , \[ \begin{tabular} {rcl} \{ <var:y> = <var:h> \} & <var:G0> := <nat:5> & \{ <var:y> = <var:h> \land <var:G0> = <nat:5> \} \\ \{ <var:y> = <var:h> \land <var:G0> = <nat:5> \} & <var:l> := <var:G0& \{ <var:y> = <var:h> \land <var:l> = <nat:5> \} \end{tabular} This is deduced using the inference rule defined in standard Hoare techniques . \end{proof} \end{document} 
~
Require Import String . From PLF Require Import Imp . From PLF Require Import Hoare . Definition <var:G0> : string := " <var:G0> " . Definition <def:poly> := <var:G0> := <nat:5> ; <var:l> := <var:G0> . Theorem <genH:poly_code_correct> : forall <var:h> : nat , {{ <var:y> = <var:h> }} <def:poly> {{ <var:l> = <nat:5> }} . Proof . intros . apply hoare_seq with ( Q := ( ( <var:y> = <var:h> /\ <var:G0> = <nat:5> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:y> = <var:h> /\ <var:l> = <nat:5> ) ) %assertion ) . all : eapply hoare_consequence_pre ; try ( apply hoare_asgn || assn_auto'' ) . Qed . 