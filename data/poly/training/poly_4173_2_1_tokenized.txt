\begin{document} \begin{definition} Define the following program <def:poly> in \emph{Imp} as \begin{verbatim} <var:u0> := <nat:7> ; <var:M> := <var:u0> \end{verbatim} \end{definition} \begin{theorem} Consider the following program <def:poly> . Allowing that we have $ <var:H> = <var:D> $ --- for any natural coefficients $ <var:D> $ --- ahead of the execution of our code segment it follows that we see $ <var:M> = <nat:7> $ . \end{theorem} \begin{proof} Demonstrating correctness of our series of instructions is demonstrated through standard Hoare reasoning . Advancing to the next step , we have \begin{verbatim} { <var:H> = <var:D> } <var:u0> := <nat:7> { <var:H> = <var:D> \land <var:u0> = <nat:7> } \end{verbatim} Next , \begin{verbatim} { <var:H> = <var:D> } <var:u0> := <nat:7> { <var:H> = <var:D> \land <var:u0> = <nat:7> } \end{verbatim} \end{proof} \end{document} 
~
Require Import String . From PLF Require Import Imp . From PLF Require Import Hoare . Definition <var:u0> : string := " <var:u0> " . Definition <def:poly> := <var:u0> := <nat:7> ; <var:M> := <var:u0> . Theorem <genH:poly_code_correct> : forall <var:D> : nat , {{ <var:H> = <var:D> }} <def:poly> {{ <var:M> = <nat:7> }} . Proof . intros . apply hoare_seq with ( Q := ( ( <var:H> = <var:D> /\ <var:u0> = <nat:7> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:H> = <var:D> /\ <var:M> = <nat:7> ) ) %assertion ) . all : eapply hoare_consequence_pre ; try ( apply hoare_asgn || assn_auto'' ) . Qed . 