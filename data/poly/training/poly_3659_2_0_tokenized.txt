\begin{document} \begin{theorem} We define a segment of code in \emph{Imp} as \begin{verbatim} <var:m0> := <nat:7> ; <var:V> := <var:m0> \end{verbatim} Assume that $ <var:Y> = <var:a> $ prior to executing this list of commands , then $ <var:V> = <nat:7> $ when list of commands has finished . \end{theorem} \begin{proof} The argument for our set of commands is clear through standard Hoare reasoning . Advancing , \[ \begin{tabular} {rcl} \{ <var:Y> = <var:a> \} & <var:m0> := <nat:7> & \{ <var:Y> = <var:a> \land <var:m0> = <nat:7> \} \\ \{ <var:Y> = <var:a> \land <var:m0> = <nat:7> \} & <var:V> := <var:m0& \{ <var:Y> = <var:a> \land <var:V> = <nat:7> \} \end{tabular} \end{proof} \end{document} 
~
Require Import String . From PLF Require Import Imp . From PLF Require Import Hoare . Definition <var:m0> : string := " <var:m0> " . Theorem <genH:poly_code_correct> : forall <var:a> : nat , {{ <var:Y> = <var:a> }} <var:m0> := <nat:7> ; <var:V> := <var:m0> {{ <var:V> = <nat:7> }} . Proof . intros . apply hoare_seq with ( Q := ( ( <var:Y> = <var:a> /\ <var:m0> = <nat:7> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:Y> = <var:a> /\ <var:V> = <nat:7> ) ) %assertion ) . all : eapply hoare_consequence_pre ; try ( apply hoare_asgn || assn_auto'' ) . Qed . 