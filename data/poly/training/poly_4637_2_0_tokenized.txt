\begin{document} \begin{definition} Take a series of commands <def:poly> in \emph{Imp} such that \begin{verbatim} <var:V0> := <nat:4> ; <var:a> := <var:V0> \end{verbatim} \end{definition} \begin{theorem} Assume it to be that $ <var:M> = <var:D> $ ahead of the execution of our list of commands it follows that $ <var:a> = <nat:4> $ after set of instructions exits . \end{theorem} \begin{proof} Demonstrating correctness of our list of commands is given by usual Hoare techniques . Moving on to the next step , we see \begin{verbatim} { <var:M> = <var:D> } <var:V0> := <nat:4> { <var:M> = <var:D> \land <var:V0> = <nat:4> } \end{verbatim} Looking at the following line of code seen in our series of instructions , we see \begin{verbatim} { <var:M> = <var:D> } <var:V0> := <nat:4> { <var:M> = <var:D> \land <var:V0> = <nat:4> } \end{verbatim} \end{proof} \end{document} 
~
Require Import String . From PLF Require Import Imp . From PLF Require Import Hoare . Definition <var:V0> : string := " <var:V0> " . Definition <def:poly> := <var:V0> := <nat:4> ; <var:a> := <var:V0> . Theorem <genH:poly_code_correct> : forall <var:D> : nat , {{ <var:M> = <var:D> }} <def:poly> {{ <var:a> = <nat:4> }} . Proof . intros . apply hoare_seq with ( Q := ( ( <var:M> = <var:D> /\ <var:V0> = <nat:4> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:M> = <var:D> /\ <var:a> = <nat:4> ) ) %assertion ) . all : eapply hoare_consequence_pre ; try ( apply hoare_asgn || assn_auto'' ) . Qed . 