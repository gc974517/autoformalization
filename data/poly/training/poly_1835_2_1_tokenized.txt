\begin{document} \begin{theorem} We define the following list of instructions as \begin{verbatim} <var:I0> := <nat:4> ; <var:N> := <var:I0> \end{verbatim} Given that we have $ <var:X> = <var:n> $ before interpreting our list of instructions it holds that we have $ <var:N> = <nat:4> $ after series of instructions is done . \end{theorem} \begin{proof} The proof of our set of commands can be given with usual Hoare reasoning . Observing the next bit of code found in our list of commands , we see \begin{verbatim} { <var:X> = <var:n> } <var:I0> := <nat:4> { <var:X> = <var:n> \land <var:I0> = <nat:4> } \end{verbatim} Moving onward , we have \begin{verbatim} { <var:X> = <var:n> } <var:I0> := <nat:4> { <var:X> = <var:n> \land <var:I0> = <nat:4> } \end{verbatim} \end{proof} \end{document} 
~
Require Import String . From PLF Require Import Imp . From PLF Require Import Hoare . Definition <var:I0> : string := " <var:I0> " . Theorem <genH:poly_code_correct> : forall <var:n> : nat , {{ <var:X> = <var:n> }} <var:I0> := <nat:4> ; <var:N> := <var:I0> {{ <var:N> = <nat:4> }} . Proof . intros . apply hoare_seq with ( Q := ( ( <var:X> = <var:n> /\ <var:I0> = <nat:4> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:X> = <var:n> /\ <var:N> = <nat:4> ) ) %assertion ) . all : eapply hoare_consequence_pre ; try ( apply hoare_asgn || assn_auto'' ) . Qed . 