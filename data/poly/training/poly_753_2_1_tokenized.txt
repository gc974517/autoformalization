\begin{document} \begin{theorem} Consider a set of instructions in \emph{Imp} : \begin{verbatim} <var:a0> := <nat:4> ; <var:l> := <var:a0> \end{verbatim} Assume it to be that $ <var:N> = <var:E> $ ahead of evaluating this series of instructions it holds that we see $ <var:l> = <nat:4> $ after series of instructions has finished executing . \end{theorem} \begin{proof} Utilizing Hoare techniques yields : \begin{eqnarray} \{ <var:N> = <var:E> \} \\ <var:a0> := <nat:4> ; \\ \{ <var:N> = <var:E> \land <var:a0> = <nat:4> \} \\ <var:l> := <var:a0> \\ \{ <var:N> = <var:E> \land <var:l> = <nat:4> \} \end{eqnarray} Considering the above , our set of instructions has been demonstrated to be correct . \end{proof} \end{document} 
~
Require Import String . From PLF Require Import Imp . From PLF Require Import Hoare . Definition <var:a0> : string := " <var:a0> " . Theorem <genH:poly_code_correct> : forall <var:E> : nat , {{ <var:N> = <var:E> }} <var:a0> := <nat:4> ; <var:l> := <var:a0> {{ <var:l> = <nat:4> }} . Proof . intros . apply hoare_seq with ( Q := ( ( <var:N> = <var:E> /\ <var:a0> = <nat:4> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:N> = <var:E> /\ <var:l> = <nat:4> ) ) %assertion ) . all : eapply hoare_consequence_pre ; try ( apply hoare_asgn || assn_auto'' ) . Qed . 