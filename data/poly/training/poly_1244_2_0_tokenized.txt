\begin{document} \begin{theorem} We define the following set of instructions as follows \begin{verbatim} <var:A0> := <nat:4> ; <var:F> := <var:A0> \end{verbatim} Given that $ <var:z> = <var:d> $ ( with some positive coefficients $ <var:d> $ ) ahead of interpreting this segment of code it holds that $ <var:F> = <nat:4> $ once list of commands is done executing . \end{theorem} \begin{proof} Applying Hoare techniques returns : \begin{eqnarray} \{ <var:z> = <var:d> \} \\ <var:A0> := <nat:4> ; \\ \{ <var:z> = <var:d> \land <var:A0> = <nat:4> \} \\ <var:F> := <var:A0> \\ \{ <var:z> = <var:d> \land <var:F> = <nat:4> \} \end{eqnarray} Given the preceding argument , our series of commands has been demonstrated to be correct . \end{proof} \end{document} 
~
Require Import String . From PLF Require Import Imp . From PLF Require Import Hoare . Definition <var:A0> : string := " <var:A0> " . Theorem <genH:poly_code_correct> : forall <var:d> : nat , {{ <var:z> = <var:d> }} <var:A0> := <nat:4> ; <var:F> := <var:A0> {{ <var:F> = <nat:4> }} . Proof . intros . apply hoare_seq with ( Q := ( ( <var:z> = <var:d> /\ <var:A0> = <nat:4> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:z> = <var:d> /\ <var:F> = <nat:4> ) ) %assertion ) . all : eapply hoare_consequence_pre ; try ( apply hoare_asgn || assn_auto'' ) . Qed . 