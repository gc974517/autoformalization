\begin{document} \begin{theorem} Take the following list of instructions in \emph{Imp} : \begin{verbatim} <var:e0> := <nat:3> ; <var:o> := <var:e0> \end{verbatim} Given --- given any positive coefficients $ <var:x> $ --- it to be that $ <var:Y> = <var:x> $ before interpreting the series of commands it follows that we have $ <var:o> = <nat:3> $ . \end{theorem} \begin{proof} Arguing the correctness of the list of commands can be accomplished with this decorated series of commands . \begin{eqnarray} \{ <var:Y> = <var:x> \} \\ <var:e0> := <nat:3> ; \\ \{ <var:Y> = <var:x> \land <var:e0> = <nat:3> \} \\ <var:o> := <var:e0> \\ \{ <var:Y> = <var:x> \land <var:o> = <nat:3> \} \end{eqnarray} The application of typical Hoare logic completes the argument . \end{proof} \end{document} 
~
Require Import String . From PLF Require Import Imp . From PLF Require Import Hoare . Definition <var:e0> : string := " <var:e0> " . Theorem <genH:poly_code_correct> : forall <var:x> : nat , {{ <var:Y> = <var:x> }} <var:e0> := <nat:3> ; <var:o> := <var:e0> {{ <var:o> = <nat:3> }} . Proof . intros . apply hoare_seq with ( Q := ( ( <var:Y> = <var:x> /\ <var:e0> = <nat:3> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:Y> = <var:x> /\ <var:o> = <nat:3> ) ) %assertion ) . all : eapply hoare_consequence_pre ; try ( apply hoare_asgn || assn_auto'' ) . Qed . 