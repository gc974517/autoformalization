\begin{document} \begin{definition} Define the following series of instructions <def:poly> in \emph{Imp} as follows \begin{verbatim} <var:k0> := <nat:4> ; <var:v> := <var:k0> \end{verbatim} \end{definition} \begin{theorem} Assuming $ <var:p> = <var:x> $ , for natural coefficients $ <var:x> $ , prior to running this set of instructions , then we see $ <var:v> = <nat:4> $ . \end{theorem} \begin{proof} The argument for our series of commands is done using usual Hoare logic . Going forward , we see \verb | { <var:p> = <var:x> } <var:k0> := <nat:4> { <var:p> = <var:x> \land <var:k0> = <nat:4> } | and \verb | { <var:p> = <var:x> \land <var:k0> = <nat:4> } <var:v> := <var:k0{ <var:p> = <var:x> \land <var:v> = <nat:4> } | . \end{proof} \end{document} 
~
Require Import String . From PLF Require Import Imp . From PLF Require Import Hoare . Definition <var:k0> : string := " <var:k0> " . Definition <def:poly> := <var:k0> := <nat:4> ; <var:v> := <var:k0> . Theorem <genH:poly_code_correct> : forall <var:x> : nat , {{ <var:p> = <var:x> }} <def:poly> {{ <var:v> = <nat:4> }} . Proof . intros . apply hoare_seq with ( Q := ( ( <var:p> = <var:x> /\ <var:k0> = <nat:4> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:p> = <var:x> /\ <var:v> = <nat:4> ) ) %assertion ) . all : eapply hoare_consequence_pre ; try ( apply hoare_asgn || assn_auto'' ) . Qed . 