\begin{document} \begin{definition} We define the following list of commands <def:poly> in \emph{Imp} : \begin{verbatim} <var:H0> := <nat:4> ; <var:Y> := <var:H0> \end{verbatim} \end{definition} \begin{theorem} Allow ( given all natural coefficients $ <var:m> $ ) it to hold that $ <var:w> = <var:m> $ prior to evaluating the program , it must be that $ <var:Y> = <nat:4> $ once code segment finishes . \end{theorem} \begin{proof} Utilizing typical Hoare reasoning produces : \begin{eqnarray} \{ <var:w> = <var:m> \} \\ <var:H0> := <nat:4> ; \\ \{ <var:w> = <var:m> \land <var:H0> = <nat:4> \} \\ <var:Y> := <var:H0> \\ \{ <var:w> = <var:m> \land <var:Y> = <nat:4> \} \end{eqnarray} Therefore , our set of commands is proven correct . \end{proof} \end{document} 
~
Require Import String . From PLF Require Import Imp . From PLF Require Import Hoare . Definition <var:H0> : string := " <var:H0> " . Definition <def:poly> := <var:H0> := <nat:4> ; <var:Y> := <var:H0> . Theorem <genH:poly_code_correct> : forall <var:m> : nat , {{ <var:w> = <var:m> }} <def:poly> {{ <var:Y> = <nat:4> }} . Proof . intros . apply hoare_seq with ( Q := ( ( <var:w> = <var:m> /\ <var:H0> = <nat:4> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:w> = <var:m> /\ <var:Y> = <nat:4> ) ) %assertion ) . all : eapply hoare_consequence_pre ; try ( apply hoare_asgn || assn_auto'' ) . Qed . 