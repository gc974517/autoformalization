\begin{document} \begin{definition} Take the following series of instructions <def:poly> in \emph{Imp} such that \begin{verbatim} <var:h0> := <nat:6> ; <var:b> := <var:h0> \end{verbatim} \end{definition} \begin{theorem} Given it to be that $ <var:X> = <var:g> $ before the execution of our segment of code it follows that $ <var:b> = <nat:6> $ when set of commands is done . \end{theorem} \begin{proof} Applying usual Hoare logic produces : \begin{eqnarray} \{ <var:X> = <var:g> \} \\ <var:h0> := <nat:6> ; \\ \{ <var:X> = <var:g> \land <var:h0> = <nat:6> \} \\ <var:b> := <var:h0> \\ \{ <var:X> = <var:g> \land <var:b> = <nat:6> \} \end{eqnarray} Thusly , the code is demonstrated to be correct . \end{proof} \end{document} 
~
Require Import String . From PLF Require Import Imp . From PLF Require Import Hoare . Definition <var:h0> : string := " <var:h0> " . Definition <def:poly> := <var:h0> := <nat:6> ; <var:b> := <var:h0> . Theorem <genH:poly_code_correct> : forall <var:g> : nat , {{ <var:X> = <var:g> }} <def:poly> {{ <var:b> = <nat:6> }} . Proof . intros . apply hoare_seq with ( Q := ( ( <var:X> = <var:g> /\ <var:h0> = <nat:6> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:X> = <var:g> /\ <var:b> = <nat:6> ) ) %assertion ) . all : eapply hoare_consequence_pre ; try ( apply hoare_asgn || assn_auto'' ) . Qed . 