\begin{document} \begin{theorem} Take the following code in \emph{Imp} as \begin{verbatim} <var:T0> := <nat:2> ; <var:A> := <var:T0> \end{verbatim} Assume it to be that $ <var:N> = <var:M> $ prior to running this set of commands then $ <var:A> = <nat:2> $ once set of instructions has executed . \end{theorem} \begin{proof} Proving correctness for the series of commands is given by standard Hoare techniques . Following , we have \[ \begin{tabular} {rcl} \{ <var:N> = <var:M> \} & <var:T0> := <nat:2> & \{ <var:N> = <var:M> \land <var:T0> = <nat:2> \} \end{tabular} Moving on , we see \[ \begin{tabular} {rcl} \{ <var:N> = <var:M> \} & <var:T0> := <nat:2> & \{ <var:N> = <var:M> \land <var:T0> = <nat:2> \} \end{tabular} \end{proof} \end{document} 
~
Require Import String . From PLF Require Import Imp . From PLF Require Import Hoare . Definition <var:T0> : string := " <var:T0> " . Theorem <genH:poly_code_correct> : forall <var:M> : nat , {{ <var:N> = <var:M> }} <var:T0> := <nat:2> ; <var:A> := <var:T0> {{ <var:A> = <nat:2> }} . Proof . intros . apply hoare_seq with ( Q := ( ( <var:N> = <var:M> /\ <var:T0> = <nat:2> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:N> = <var:M> /\ <var:A> = <nat:2> ) ) %assertion ) . all : eapply hoare_consequence_pre ; try ( apply hoare_asgn || assn_auto'' ) . Qed . 