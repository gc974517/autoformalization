\begin{document} \begin{theorem} Let the following series of instructions in \emph{Imp} such that \begin{verbatim} <var:j0> := <nat:4> ; <var:N> := <var:j0> \end{verbatim} Allow it to be that $ <var:r> = <var:I> $ before executing our list of commands then we have $ <var:N> = <nat:4> $ . \end{theorem} \begin{proof} Utilizing standard Hoare logic gives : \begin{eqnarray} \{ <var:r> = <var:I> \} \\ <var:j0> := <nat:4> ; \\ \{ <var:r> = <var:I> \land <var:j0> = <nat:4> \} \\ <var:N> := <var:j0> \\ \{ <var:r> = <var:I> \land <var:N> = <nat:4> \} \end{eqnarray} Thus , the set of commands is shown correct . \end{proof} \end{document} 
~
Require Import String . From PLF Require Import Imp . From PLF Require Import Hoare . Definition <var:j0> : string := " <var:j0> " . Theorem <genH:poly_code_correct> : forall <var:I> : nat , {{ <var:r> = <var:I> }} <var:j0> := <nat:4> ; <var:N> := <var:j0> {{ <var:N> = <nat:4> }} . Proof . intros . apply hoare_seq with ( Q := ( ( <var:r> = <var:I> /\ <var:j0> = <nat:4> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:r> = <var:I> /\ <var:N> = <nat:4> ) ) %assertion ) . all : eapply hoare_consequence_pre ; try ( apply hoare_asgn || assn_auto'' ) . Qed . 