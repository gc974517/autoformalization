\begin{document} \begin{definition} Consider the following set of instructions <def:poly> in \emph{Imp} as \begin{verbatim} <var:Y0> := <nat:5> ; <var:C> := <var:Y0> \end{verbatim} \end{definition} \begin{theorem} Let the following list of commands <def:poly> . Given it to hold that $ <var:V> = <var:r> $ before interpreting this series of commands then we see $ <var:C> = <nat:5> $ once series of commands has finished executing . \end{theorem} \begin{proof} \begin{eqnarray} \{ <var:V> = <var:r> \} \\ <var:Y0> := <nat:5> ; \\ \{ <var:V> = <var:r> \land <var:Y0> = <nat:5> \} \\ <var:C> := <var:Y0> \\ \{ <var:V> = <var:r> \land <var:C> = <nat:5> \} \end{eqnarray} Applying usual Hoare logic accomplishes the goal . \end{proof} \end{document} 
~
Require Import String . From PLF Require Import Imp . From PLF Require Import Hoare . Definition <var:Y0> : string := " <var:Y0> " . Definition <def:poly> := <var:Y0> := <nat:5> ; <var:C> := <var:Y0> . Theorem <genH:poly_code_correct> : forall <var:r> : nat , {{ <var:V> = <var:r> }} <def:poly> {{ <var:C> = <nat:5> }} . Proof . intros . apply hoare_seq with ( Q := ( ( <var:V> = <var:r> /\ <var:Y0> = <nat:5> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:V> = <var:r> /\ <var:C> = <nat:5> ) ) %assertion ) . all : eapply hoare_consequence_pre ; try ( apply hoare_asgn || assn_auto'' ) . Qed . 