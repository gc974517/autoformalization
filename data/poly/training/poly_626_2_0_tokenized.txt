\begin{document} \begin{theorem} We define a set of commands in \emph{Imp} as follows \begin{verbatim} <var:J0> := <nat:9> ; <var:r> := <var:J0> \end{verbatim} Assume that we have $ <var:w> = <var:l> $ given all $ <var:l> $ before the execution of our code it follows that we see $ <var:r> = <nat:9> $ once series of commands has executed . \end{theorem} \begin{proof} The argument for this set of commands can be accomplished through Hoare techniques . Paying attention to the next line of code contained in our list of instructions , the variable binding line yielding $ <nat:9> $ into $ <var:J0>$ . This line forwards the condition $ \{ <var:w> = <var:l> \} $ into the postcondition $ \{ <var:w> = <var:l> \land <var:J0> = <nat:9> \} $ . Advancing , we have the command assigning $ <var:J0$ toward $ <var:r>$ . This moves the precondition $ \{ <var:w> = <var:l> \land <var:J0> = <nat:9> \} $ toward the condition $ \{ <var:w> = <var:l> \land <var:r> = <nat:9> \} $ . \end{proof} \end{document} 
~
Require Import String . From PLF Require Import Imp . From PLF Require Import Hoare . Definition <var:J0> : string := " <var:J0> " . Theorem <genH:poly_code_correct> : forall <var:l> : nat , {{ <var:w> = <var:l> }} <var:J0> := <nat:9> ; <var:r> := <var:J0> {{ <var:r> = <nat:9> }} . Proof . intros . apply hoare_seq with ( Q := ( ( <var:w> = <var:l> /\ <var:J0> = <nat:9> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:w> = <var:l> /\ <var:r> = <nat:9> ) ) %assertion ) . all : eapply hoare_consequence_pre ; try ( apply hoare_asgn || assn_auto'' ) . Qed . 