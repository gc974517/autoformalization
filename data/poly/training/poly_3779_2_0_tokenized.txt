\begin{document} \begin{theorem} We define the following list of commands such that \begin{verbatim} <var:G0> := <nat:1> ; <var:z> := <var:G0> \end{verbatim} Assume it to be that $ <var:e> = <var:h> $ ahead of the execution of the list of instructions , it must be that $ <var:z> = <nat:1> $ after segment of code exits . \end{theorem} \begin{proof} Demonstrating correctness of the series of commands can be done with Hoare techniques . Immediately after , we have \begin{verbatim} { <var:e> = <var:h> } <var:G0> := <nat:1> { <var:e> = <var:h> \land <var:G0> = <nat:1> } { <var:e> = <var:h> \land <var:G0> = <nat:1> } <var:z> := <var:G0{ <var:e> = <var:h> \land <var:z> = <nat:1> } \end{verbatim} \end{proof} \end{document} 
~
Require Import String . From PLF Require Import Imp . From PLF Require Import Hoare . Definition <var:G0> : string := " <var:G0> " . Theorem <genH:poly_code_correct> : forall <var:h> : nat , {{ <var:e> = <var:h> }} <var:G0> := <nat:1> ; <var:z> := <var:G0> {{ <var:z> = <nat:1> }} . Proof . intros . apply hoare_seq with ( Q := ( ( <var:e> = <var:h> /\ <var:G0> = <nat:1> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:e> = <var:h> /\ <var:z> = <nat:1> ) ) %assertion ) . all : eapply hoare_consequence_pre ; try ( apply hoare_asgn || assn_auto'' ) . Qed . 