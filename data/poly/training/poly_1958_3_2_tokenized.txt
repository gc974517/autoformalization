\begin{document} \begin{definition} We define the following code <def:poly> in \emph{Imp} such that \begin{verbatim} <var:u> := <nat:2> ; <var:u> := <nat:2> + <var:u> * <var:f> ; <var:u> := <nat:4> + <var:u> * <var:f> \end{verbatim} \end{definition} \begin{theorem} Consider the following set of commands <def:poly> in \emph{Imp} . Allowing $ <var:f> = <var:C> $ prior to interpreting the segment of code it follows that we have $ <var:u> = <nat:2> \cdot <var:C> ^ <nat:2> + <nat:2> \cdot <var:C> + <nat:4> $ . \end{theorem} \begin{proof} Utilizing usual Hoare techniques results in : \begin{eqnarray} \{ <var:f> = <var:C> \} \\ <var:u> := <nat:2> ; \\ \{ <var:f> = <var:C> \land <var:u> = <nat:2> \} \\ <var:u> := <nat:2> + <var:u> * <var:f> ; \\ \{ <var:f> = <var:C> \land <var:u> = <nat:2> \times <var:C> + <nat:2> \} \\ <var:u> := <nat:4> + <var:u> * <var:f> \\ \{ <var:f> = <var:C> \land <var:u> = <nat:2> \times <var:C> ^ <nat:2> + <nat:2> \times <var:C> + <nat:4> \} \end{eqnarray} Considering the above , this segment of code is validated as correct . \end{proof} \end{document} 
~
Require Import String . From PLF Require Import Imp . From PLF Require Import Hoare . Definition <def:poly> := <var:u> := <nat:2> ; <var:u> := <nat:2> + <var:u> * <var:f> ; <var:u> := <nat:4> + <var:u> * <var:f> . Theorem <genH:poly_code_correct> : forall <var:C> : nat , {{ <var:f> = <var:C> }} <def:poly> {{ <var:u> = <nat:2> * <var:C> ^ <nat:2> + <nat:2> * <var:C> + <nat:4> }} . Proof . intros . apply hoare_seq with ( Q := ( ( <var:f> = <var:C> /\ <var:u> = <nat:2> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:f> = <var:C> /\ <var:u> = <nat:2> * <var:C> + <nat:2> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:f> = <var:C> /\ <var:u> = <nat:2> * <var:C> ^ <nat:2> + <nat:2> * <var:C> + <nat:4> ) ) %assertion ) . all : eapply hoare_consequence_pre ; try ( apply hoare_asgn || assn_auto'' ) . Qed . 