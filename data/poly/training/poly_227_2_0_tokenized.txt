\begin{document} \begin{theorem} Take the following series of instructions in \emph{Imp} as \begin{verbatim} <var:Z0> := <nat:8> ; <var:b> := <var:Z0> \end{verbatim} Assuming given all $ <var:O> \in \mathbb{Z}^+ $ $ <var:s> = <var:O> $ ahead of the execution of this series of instructions it holds that we see $ <var:b> = <nat:8> $ . \end{theorem} \begin{proof} We can see that this decorated set of instructions . \begin{eqnarray} \{ <var:s> = <var:O> \} \\ <var:Z0> := <nat:8> ; \\ \{ <var:s> = <var:O> \land <var:Z0> = <nat:8> \} \\ <var:b> := <var:Z0> \\ \{ <var:s> = <var:O> \land <var:b> = <nat:8> \} \end{eqnarray} Utilizing standard Hoare techniques finalizes the proof . \end{proof} \end{document} 
~
Require Import String . From PLF Require Import Imp . From PLF Require Import Hoare . Definition <var:Z0> : string := " <var:Z0> " . Theorem <genH:poly_code_correct> : forall <var:O> : nat , {{ <var:s> = <var:O> }} <var:Z0> := <nat:8> ; <var:b> := <var:Z0> {{ <var:b> = <nat:8> }} . Proof . intros . apply hoare_seq with ( Q := ( ( <var:s> = <var:O> /\ <var:Z0> = <nat:8> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:s> = <var:O> /\ <var:b> = <nat:8> ) ) %assertion ) . all : eapply hoare_consequence_pre ; try ( apply hoare_asgn || assn_auto'' ) . Qed . 