\begin{document} \begin{theorem} Let the following set of commands as \begin{verbatim} <var:I0> := <nat:5> ; <var:A> := <var:I0> \end{verbatim} Given it to be that $ <var:L> = <var:j> $ , for any natural coefficients $ <var:j> $ , prior to evaluating this list of commands , it must be that we see $ <var:A> = <nat:5> $ when code is done executing . \end{theorem} \begin{proof} Applying typical Hoare techniques produces : \begin{eqnarray} \{ <var:L> = <var:j> \} \\ <var:I0> := <nat:5> ; \\ \{ <var:L> = <var:j> \land <var:I0> = <nat:5> \} \\ <var:A> := <var:I0> \\ \{ <var:L> = <var:j> \land <var:A> = <nat:5> \} \end{eqnarray} Given the above , the list of commands is validated as correct . \end{proof} \end{document} 
~
Require Import String . From PLF Require Import Imp . From PLF Require Import Hoare . Definition <var:I0> : string := " <var:I0> " . Theorem <genH:poly_code_correct> : forall <var:j> : nat , {{ <var:L> = <var:j> }} <var:I0> := <nat:5> ; <var:A> := <var:I0> {{ <var:A> = <nat:5> }} . Proof . intros . apply hoare_seq with ( Q := ( ( <var:L> = <var:j> /\ <var:I0> = <nat:5> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:L> = <var:j> /\ <var:A> = <nat:5> ) ) %assertion ) . all : eapply hoare_consequence_pre ; try ( apply hoare_asgn || assn_auto'' ) . Qed . 