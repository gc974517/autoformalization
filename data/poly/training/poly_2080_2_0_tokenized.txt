\begin{document} \begin{theorem} Define the following program as follows \begin{verbatim} <var:N0> := <nat:6> ; <var:k> := <var:N0> \end{verbatim} Given --- with some positive coefficients $ <var:v> $ --- that $ <var:J> = <var:v> $ prior to evaluating this series of commands it must be that $ <var:k> = <nat:6> $ . \end{theorem} \begin{proof} Utilizing Hoare logic gives us : \begin{eqnarray} \{ <var:J> = <var:v> \} \\ <var:N0> := <nat:6> ; \\ \{ <var:J> = <var:v> \land <var:N0> = <nat:6> \} \\ <var:k> := <var:N0> \\ \{ <var:J> = <var:v> \land <var:k> = <nat:6> \} \end{eqnarray} Thus , this series of commands is proven correct . \end{proof} \end{document} 
~
Require Import String . From PLF Require Import Imp . From PLF Require Import Hoare . Definition <var:N0> : string := " <var:N0> " . Theorem <genH:poly_code_correct> : forall <var:v> : nat , {{ <var:J> = <var:v> }} <var:N0> := <nat:6> ; <var:k> := <var:N0> {{ <var:k> = <nat:6> }} . Proof . intros . apply hoare_seq with ( Q := ( ( <var:J> = <var:v> /\ <var:N0> = <nat:6> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:J> = <var:v> /\ <var:k> = <nat:6> ) ) %assertion ) . all : eapply hoare_consequence_pre ; try ( apply hoare_asgn || assn_auto'' ) . Qed . 