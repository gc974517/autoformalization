\begin{document} \begin{theorem} Take the following list of instructions in \emph{Imp} as follows \begin{verbatim} <var:I0> := <nat:5> ; <var:l> := <var:I0> \end{verbatim} Allow that $ <var:H> = <var:U> $ prior to interpreting our list of instructions , it follows that we have $ <var:l> = <nat:5> $ when series of commands has executed . \end{theorem} \begin{proof} The argument for this series of commands is done through the below decorated segment of code . \begin{eqnarray} \{ <var:H> = <var:U> \} \\ <var:I0> := <nat:5> ; \\ \{ <var:H> = <var:U> \land <var:I0> = <nat:5> \} \\ <var:l> := <var:I0> \\ \{ <var:H> = <var:U> \land <var:l> = <nat:5> \} \end{eqnarray} Using standard Hoare reasoning completes the proof . \end{proof} \end{document} 
~
Require Import String . From PLF Require Import Imp . From PLF Require Import Hoare . Definition <var:I0> : string := " <var:I0> " . Theorem <genH:poly_code_correct> : forall <var:U> : nat , {{ <var:H> = <var:U> }} <var:I0> := <nat:5> ; <var:l> := <var:I0> {{ <var:l> = <nat:5> }} . Proof . intros . apply hoare_seq with ( Q := ( ( <var:H> = <var:U> /\ <var:I0> = <nat:5> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:H> = <var:U> /\ <var:l> = <nat:5> ) ) %assertion ) . all : eapply hoare_consequence_pre ; try ( apply hoare_asgn || assn_auto'' ) . Qed . 