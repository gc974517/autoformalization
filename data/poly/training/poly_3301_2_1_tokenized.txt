\begin{document} \begin{theorem} We define a list of commands in \emph{Imp} : \begin{verbatim} <var:K0> := <nat:9> ; <var:y> := <var:K0> \end{verbatim} Assume it to be that $ <var:x> = <var:G> $ ( for natural numbers $ <var:G> $ ) prior to the evaluation of our set of commands it must be that we have $ <var:y> = <nat:9> $ . \end{theorem} \begin{proof} Arguing the correctness of the program is clear using usual Hoare logic . Moving forward to the upcoming statements seen in the series of instructions , \begin{verbatim} { <var:x> = <var:G> } <var:K0> := <nat:9> { <var:x> = <var:G> \land <var:K0> = <nat:9> } { <var:x> = <var:G> \land <var:K0> = <nat:9> } <var:y> := <var:K0{ <var:x> = <var:G> \land <var:y> = <nat:9> } \end{verbatim} \end{proof} \end{document} 
~
Require Import String . From PLF Require Import Imp . From PLF Require Import Hoare . Definition <var:K0> : string := " <var:K0> " . Theorem <genH:poly_code_correct> : forall <var:G> : nat , {{ <var:x> = <var:G> }} <var:K0> := <nat:9> ; <var:y> := <var:K0> {{ <var:y> = <nat:9> }} . Proof . intros . apply hoare_seq with ( Q := ( ( <var:x> = <var:G> /\ <var:K0> = <nat:9> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:x> = <var:G> /\ <var:y> = <nat:9> ) ) %assertion ) . all : eapply hoare_consequence_pre ; try ( apply hoare_asgn || assn_auto'' ) . Qed . 