\begin{document} \begin{theorem} Let the following code segment in \emph{Imp} as follows \begin{verbatim} <var:j0> := <nat:5> ; <var:q> := <var:j0> \end{verbatim} Given it to hold that $ <var:N> = <var:y> $ ahead of the evaluation of this set of instructions it holds that we see $ <var:q> = <nat:5> $ . \end{theorem} \begin{proof} The way to prove correctness for the program can be demonstrated with Hoare reasoning . Advancing to the subsequent lines of codeseen in the series of commands , we have \begin{verbatim} { <var:N> = <var:y> } <var:j0> := <nat:5> { <var:N> = <var:y> \land <var:j0> = <nat:5> } { <var:N> = <var:y> \land <var:j0> = <nat:5> } <var:q> := <var:j0{ <var:N> = <var:y> \land <var:q> = <nat:5> } \end{verbatim} \end{proof} \end{document} 
~
Require Import String . From PLF Require Import Imp . From PLF Require Import Hoare . Definition <var:j0> : string := " <var:j0> " . Theorem <genH:poly_code_correct> : forall <var:y> : nat , {{ <var:N> = <var:y> }} <var:j0> := <nat:5> ; <var:q> := <var:j0> {{ <var:q> = <nat:5> }} . Proof . intros . apply hoare_seq with ( Q := ( ( <var:N> = <var:y> /\ <var:j0> = <nat:5> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:N> = <var:y> /\ <var:q> = <nat:5> ) ) %assertion ) . all : eapply hoare_consequence_pre ; try ( apply hoare_asgn || assn_auto'' ) . Qed . 