\begin{document} \begin{definition} Consider a code <def:poly> in \emph{Imp} as \begin{verbatim} <var:U0> := <nat:2> ; <var:E> := <var:U0> \end{verbatim} \end{definition} \begin{theorem} Define the following set of commands <def:poly> . Assuming it to hold that $ <var:c> = <var:y> $ , given all natural coefficients $ <var:y> $ , ahead of executing this code segment , it follows that we have $ <var:E> = <nat:2> $ . \end{theorem} \begin{proof} Showing our claim about correctness for the list of commands is shown using usual Hoare logic . Moving forward to the next step , the assignment line giving $ <nat:2> $ as $ <var:U0>$ . This command moves the condition $ \{ <var:c> = <var:y> \} $ toward the condition $ \{ <var:c> = <var:y> \land <var:U0> = <nat:2> \} $ . This is shown to be logically sound with the assignment inference rule obtained from Hoare techniques . Moving onward , the variable binding command \verb | <var:E> := <var:U0> | . This line redefines $ \{ <var:c> = <var:y> \land <var:U0> = <nat:2> \} $ to $ \{ <var:c> = <var:y> \land <var:E> = <nat:2> \} $ . This is deduced by the assignment inference rule defined by typical Hoare logic . \end{proof} \end{document} 
~
Require Import String . From PLF Require Import Imp . From PLF Require Import Hoare . Definition <var:U0> : string := " <var:U0> " . Definition <def:poly> := <var:U0> := <nat:2> ; <var:E> := <var:U0> . Theorem <genH:poly_code_correct> : forall <var:y> : nat , {{ <var:c> = <var:y> }} <def:poly> {{ <var:E> = <nat:2> }} . Proof . intros . apply hoare_seq with ( Q := ( ( <var:c> = <var:y> /\ <var:U0> = <nat:2> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:c> = <var:y> /\ <var:E> = <nat:2> ) ) %assertion ) . all : eapply hoare_consequence_pre ; try ( apply hoare_asgn || assn_auto'' ) . Qed . 