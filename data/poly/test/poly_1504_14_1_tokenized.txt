\begin{document} \begin{definition} Take the following series of instructions <def:poly> in \emph{Imp} : \begin{verbatim} <var:y1> := <var:b> ; <var:y2> := <var:y1> * <var:b> ; <var:y3> := <var:y2> * <var:b> ; <var:y4> := <var:y3> * <var:b> ; <var:y0> := <nat:8> ; <var:y1> := <var:y1> * <nat:2> ; <var:y2> := <var:y2> * <nat:1> ; <var:y3> := <var:y3> * <nat:5> ; <var:y4> := <var:y4> * <nat:1> ; <var:c> := <var:y4> <var:c> := <var:c> + <var:y3> <var:c> := <var:c> + <var:y2> <var:c> := <var:c> + <var:y1> <var:c> := <var:c> + <var:y0> \end{verbatim} \end{definition} \begin{theorem} Assume --- given every $ <var:G> \in \mathbb{N} $ --- it to be that $ <var:b> = <var:G> $ ahead of executing our set of instructions , it holds that we see $ <var:c> = <nat:1> \times <var:G> ^ <nat:4> + <nat:5> \times <var:G> ^ <nat:3> + <nat:1> \times <var:G> ^ <nat:2> + <nat:2> \times <var:G> + <nat:8> $ . \end{theorem} \begin{proof} The application of usual Hoare reasoning gives : \begin{eqnarray} \{ <var:b> = <var:G> \} \\ <var:y1> := <var:b> ; \\ \{ <var:b> = <var:G> \land <var:y1> = <var:G> \} \\ <var:y2> := <var:y1> * <var:b> ; \\ \{ <var:b> = <var:G> \land <var:y1> = <var:G> \land <var:y2> = <var:G> ^ <nat:2> \} \\ <var:y3> := <var:y2> * <var:b> ; \\ \{ <var:b> = <var:G> \land <var:y1> = <var:G> \land <var:y2> = <var:G> ^ <nat:2> \land <var:y3> = <var:G> ^ <nat:3> \} \\ <var:y4> := <var:y3> * <var:b> ; \\ \{ <var:b> = <var:G> \land <var:y1> = <var:G> \land <var:y2> = <var:G> ^ <nat:2> \land <var:y3> = <var:G> ^ <nat:3> \land <var:y4> = <var:G> ^ <nat:4> \} \\ <var:y0> := <nat:8> ; \\ \{ <var:b> = <var:G> \land <var:y1> = <var:G> \land <var:y2> = <var:G> ^ <nat:2> \land <var:y3> = <var:G> ^ <nat:3> \land <var:y4> = <var:G> ^ <nat:4> \land <var:y0> = <nat:8> \} \\ <var:y1> := <var:y1> * <nat:2> ; \\ \{ <var:b> = <var:G> \land <var:y1> = <nat:2> \times <var:G> \land <var:y2> = <var:G> ^ <nat:2> \land <var:y3> = <var:G> ^ <nat:3> \land <var:y4> = <var:G> ^ <nat:4> \land <var:y0> = <nat:8> \} \\ <var:y2> := <var:y2> * <nat:1> ; \\ \{ <var:b> = <var:G> \land <var:y1> = <nat:2> \times <var:G> \land <var:y2> = <nat:1> \times <var:G> ^ <nat:2> \land <var:y3> = <var:G> ^ <nat:3> \land <var:y4> = <var:G> ^ <nat:4> \land <var:y0> = <nat:8> \} \\ <var:y3> := <var:y3> * <nat:5> ; \\ \{ <var:b> = <var:G> \land <var:y1> = <nat:2> \times <var:G> \land <var:y2> = <nat:1> \times <var:G> ^ <nat:2> \land <var:y3> = <nat:5> \times <var:G> ^ <nat:3> \land <var:y4> = <var:G> ^ <nat:4> \land <var:y0> = <nat:8> \} \\ <var:y4> := <var:y4> * <nat:1> ; \\ \{ <var:b> = <var:G> \land <var:y1> = <nat:2> \times <var:G> \land <var:y2> = <nat:1> \times <var:G> ^ <nat:2> \land <var:y3> = <nat:5> \times <var:G> ^ <nat:3> \land <var:y4> = <nat:1> \times <var:G> ^ <nat:4> \land <var:y0> = <nat:8> \} \\ <var:c> := <var:y4> \\ \{ <var:b> = <var:G> \land <var:y1> = <nat:2> \times <var:G> \land <var:y2> = <nat:1> \times <var:G> ^ <nat:2> \land <var:y3> = <nat:5> \times <var:G> ^ <nat:3> \land <var:y0> = <nat:8> \land <var:c> = <nat:1> \times <var:G> ^ <nat:4> \} \\ <var:c> := <var:c> + <var:y3> \\ \{ <var:b> = <var:G> \land <var:y1> = <nat:2> \times <var:G> \land <var:y2> = <nat:1> \times <var:G> ^ <nat:2> \land <var:y0> = <nat:8> \land <var:c> = <nat:1> \times <var:G> ^ <nat:4> + <nat:5> \times <var:G> ^ <nat:3> \} \\ <var:c> := <var:c> + <var:y2> \\ \{ <var:b> = <var:G> \land <var:y1> = <nat:2> \times <var:G> \land <var:y0> = <nat:8> \land <var:c> = <nat:1> \times <var:G> ^ <nat:4> + <nat:5> \times <var:G> ^ <nat:3> + <nat:1> \times <var:G> ^ <nat:2> \} \\ <var:c> := <var:c> + <var:y1> \\ \{ <var:b> = <var:G> \land <var:y0> = <nat:8> \land <var:c> = <nat:1> \times <var:G> ^ <nat:4> + <nat:5> \times <var:G> ^ <nat:3> + <nat:1> \times <var:G> ^ <nat:2> + <nat:2> \times <var:G> \} \\ <var:c> := <var:c> + <var:y0> \\ \{ <var:b> = <var:G> \land <var:c> = <nat:1> \times <var:G> ^ <nat:4> + <nat:5> \times <var:G> ^ <nat:3> + <nat:1> \times <var:G> ^ <nat:2> + <nat:2> \times <var:G> + <nat:8> \} \end{eqnarray} Thus , this set of instructions has been demonstrated to be correct . \end{proof} \end{document} 
~
Require Import String . From PLF Require Import Imp . From PLF Require Import Hoare . Definition <var:y0> : string := " <var:y0> " . Definition <var:y1> : string := " <var:y1> " . Definition <var:y2> : string := " <var:y2> " . Definition <var:y3> : string := " <var:y3> " . Definition <var:y4> : string := " <var:y4> " . Definition <def:poly> := <var:y1> := <var:b> ; <var:y2> := <var:y1> * <var:b> ; <var:y3> := <var:y2> * <var:b> ; <var:y4> := <var:y3> * <var:b> ; <var:y0> := <nat:8> ; <var:y1> := <var:y1> * <nat:2> ; <var:y2> := <var:y2> * <nat:1> ; <var:y3> := <var:y3> * <nat:5> ; <var:y4> := <var:y4> * <nat:1> ; <var:c> := <var:y4> <var:c> := <var:c> + <var:y3> <var:c> := <var:c> + <var:y2> <var:c> := <var:c> + <var:y1> <var:c> := <var:c> + <var:y0> . Theorem <genH:poly_code_correct> : forall <var:G> : nat , {{ <var:b> = <var:G> }} <def:poly> {{ <var:c> = <nat:1> * <var:G> ^ <nat:4> + <nat:5> * <var:G> ^ <nat:3> + <nat:1> * <var:G> ^ <nat:2> + <nat:2> * <var:G> + <nat:8> }} . Proof . intros . apply hoare_seq with ( Q := ( ( <var:b> = <var:G> /\ <var:y1> = <var:G> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:b> = <var:G> /\ <var:y1> = <var:G> /\ <var:y2> = <var:G> ^ <nat:2> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:b> = <var:G> /\ <var:y1> = <var:G> /\ <var:y2> = <var:G> ^ <nat:2> /\ <var:y3> = <var:G> ^ <nat:3> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:b> = <var:G> /\ <var:y1> = <var:G> /\ <var:y2> = <var:G> ^ <nat:2> /\ <var:y3> = <var:G> ^ <nat:3> /\ <var:y4> = <var:G> ^ <nat:4> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:b> = <var:G> /\ <var:y1> = <var:G> /\ <var:y2> = <var:G> ^ <nat:2> /\ <var:y3> = <var:G> ^ <nat:3> /\ <var:y4> = <var:G> ^ <nat:4> /\ <var:y0> = <nat:8> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:b> = <var:G> /\ <var:y1> = <nat:2> * <var:G> /\ <var:y2> = <var:G> ^ <nat:2> /\ <var:y3> = <var:G> ^ <nat:3> /\ <var:y4> = <var:G> ^ <nat:4> /\ <var:y0> = <nat:8> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:b> = <var:G> /\ <var:y1> = <nat:2> * <var:G> /\ <var:y2> = <nat:1> * <var:G> ^ <nat:2> /\ <var:y3> = <var:G> ^ <nat:3> /\ <var:y4> = <var:G> ^ <nat:4> /\ <var:y0> = <nat:8> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:b> = <var:G> /\ <var:y1> = <nat:2> * <var:G> /\ <var:y2> = <nat:1> * <var:G> ^ <nat:2> /\ <var:y3> = <nat:5> * <var:G> ^ <nat:3> /\ <var:y4> = <var:G> ^ <nat:4> /\ <var:y0> = <nat:8> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:b> = <var:G> /\ <var:y1> = <nat:2> * <var:G> /\ <var:y2> = <nat:1> * <var:G> ^ <nat:2> /\ <var:y3> = <nat:5> * <var:G> ^ <nat:3> /\ <var:y4> = <nat:1> * <var:G> ^ <nat:4> /\ <var:y0> = <nat:8> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:b> = <var:G> /\ <var:y1> = <nat:2> * <var:G> /\ <var:y2> = <nat:1> * <var:G> ^ <nat:2> /\ <var:y3> = <nat:5> * <var:G> ^ <nat:3> /\ <var:y0> = <nat:8> /\ <var:c> = <nat:1> * <var:G> ^ <nat:4> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:b> = <var:G> /\ <var:y1> = <nat:2> * <var:G> /\ <var:y2> = <nat:1> * <var:G> ^ <nat:2> /\ <var:y0> = <nat:8> /\ <var:c> = <nat:1> * <var:G> ^ <nat:4> + <nat:5> * <var:G> ^ <nat:3> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:b> = <var:G> /\ <var:y1> = <nat:2> * <var:G> /\ <var:y0> = <nat:8> /\ <var:c> = <nat:1> * <var:G> ^ <nat:4> + <nat:5> * <var:G> ^ <nat:3> + <nat:1> * <var:G> ^ <nat:2> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:b> = <var:G> /\ <var:y0> = <nat:8> /\ <var:c> = <nat:1> * <var:G> ^ <nat:4> + <nat:5> * <var:G> ^ <nat:3> + <nat:1> * <var:G> ^ <nat:2> + <nat:2> * <var:G> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:b> = <var:G> /\ <var:c> = <nat:1> * <var:G> ^ <nat:4> + <nat:5> * <var:G> ^ <nat:3> + <nat:1> * <var:G> ^ <nat:2> + <nat:2> * <var:G> + <nat:8> ) ) %assertion ) . all : eapply hoare_consequence_pre ; try ( apply hoare_asgn || assn_auto'' ) . Qed . 