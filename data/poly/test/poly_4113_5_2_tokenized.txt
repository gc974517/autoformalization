\begin{document} \begin{theorem} Take the following code segment such that \begin{verbatim} <var:w> := <nat:4> ; <var:w> := <nat:2> + <var:w> * <var:x> ; <var:w> := <nat:3> + <var:w> * <var:x> ; <var:w> := <nat:1> + <var:w> * <var:x> ; <var:w> := <nat:4> + <var:w> * <var:x> \end{verbatim} Allowing --- for positive coefficients $ <var:t> $ --- that $ <var:x> = <var:t> $ prior to running the program , then $ <var:w> = <nat:4> * <var:t> ^ <nat:4> + <nat:2> * <var:t> ^ <nat:3> + <nat:3> * <var:t> ^ <nat:2> + <nat:1> * <var:t> + <nat:4> $ . \end{theorem} \begin{proof} Showing our claim about correctness for our series of commands is demonstrated with Hoare reasoning . Immediately following , we see the variable update command \verb | <var:w> := <nat:4> ; | . This moves the condition $ \{ <var:x> = <var:t> \} $ toward the condition $ \{ <var:x> = <var:t> \land <var:w> = <nat:4> \} $ . Taking another step toward the proceeding line seen in our segment of code , we see the environment update statement \verb | <var:w> := <nat:2> + <var:w> * <var:x> ; | . This command takes the condition $ \{ <var:x> = <var:t> \land <var:w> = <nat:4> \} $ as the postcondition $ \{ <var:x> = <var:t> \land <var:w> = <nat:4> \times <var:t> + <nat:2> \} $ . Considering the proceeding statement in the list of instructions , the variable update code \verb | <var:w> := <nat:3> + <var:w> * <var:x> ; | . This advances the precondition $ \{ <var:x> = <var:t> \land <var:w> = <nat:4> \times <var:t> + <nat:2> \} $ toward the postcondition $ \{ <var:x> = <var:t> \land <var:w> = <nat:4> \times <var:t> ^ <nat:2> + <nat:2> \times <var:t> + <nat:3> \} $ . Moving forward to the following statement contained in our series of commands , we have the environment update command \verb | <var:w> := <nat:1> + <var:w> * <var:x> ; | . This code forwards $ \{ <var:x> = <var:t> \land <var:w> = <nat:4> \times <var:t> ^ <nat:2> + <nat:2> \times <var:t> + <nat:3> \} $ toward $ \{ <var:x> = <var:t> \land <var:w> = <nat:4> \times <var:t> ^ <nat:3> + <nat:2> \times <var:t> ^ <nat:2> + <nat:3> \times <var:t> + <nat:1> \} $ . This is ensured with the assignment inference rule given in Hoare techniques . Advancing , we have the line yielding $ <nat:4> + <var:w> * <var:x$ toward $ <var:w>$ . This moves the precondition $ \{ <var:x> = <var:t> \land <var:w> = <nat:4> \times <var:t> ^ <nat:3> + <nat:2> \times <var:t> ^ <nat:2> + <nat:3> \times <var:t> + <nat:1> \} $ as the condition $ \{ <var:x> = <var:t> \land <var:w> = <nat:4> \times <var:t> ^ <nat:4> + <nat:2> \times <var:t> ^ <nat:3> + <nat:3> \times <var:t> ^ <nat:2> + <nat:1> \times <var:t> + <nat:4> \} $ . \end{proof} \end{document} 
~
Require Import String . From PLF Require Import Imp . From PLF Require Import Hoare . Theorem <genH:poly_code_correct> : forall <var:t> : nat , {{ <var:x> = <var:t> }} <var:w> := <nat:4> ; <var:w> := <nat:2> + <var:w> * <var:x> ; <var:w> := <nat:3> + <var:w> * <var:x> ; <var:w> := <nat:1> + <var:w> * <var:x> ; <var:w> := <nat:4> + <var:w> * <var:x> {{ <var:w> = <nat:4> * <var:t> ^ <nat:4> + <nat:2> * <var:t> ^ <nat:3> + <nat:3> * <var:t> ^ <nat:2> + <nat:1> * <var:t> + <nat:4> }} . Proof . intros . apply hoare_seq with ( Q := ( ( <var:x> = <var:t> /\ <var:w> = <nat:4> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:x> = <var:t> /\ <var:w> = <nat:4> * <var:t> + <nat:2> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:x> = <var:t> /\ <var:w> = <nat:4> * <var:t> ^ <nat:2> + <nat:2> * <var:t> + <nat:3> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:x> = <var:t> /\ <var:w> = <nat:4> * <var:t> ^ <nat:3> + <nat:2> * <var:t> ^ <nat:2> + <nat:3> * <var:t> + <nat:1> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:x> = <var:t> /\ <var:w> = <nat:4> * <var:t> ^ <nat:4> + <nat:2> * <var:t> ^ <nat:3> + <nat:3> * <var:t> ^ <nat:2> + <nat:1> * <var:t> + <nat:4> ) ) %assertion ) . all : eapply hoare_consequence_pre ; try ( apply hoare_asgn || assn_auto'' ) . Qed . 