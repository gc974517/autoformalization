\begin{document} \begin{definition} Take the following list of commands <def:poly> in \emph{Imp} as follows \begin{verbatim} <var:p0> := <nat:6> ; <var:M> := <var:p0> \end{verbatim} \end{definition} \begin{theorem} Assume given any $ <var:v> \in \mathbb{Z}^+ $ that we have $ <var:b> = <var:v> $ before interpreting the set of instructions it holds that we see $ <var:M> = <nat:6> $ after segment of code is done . \end{theorem} \begin{proof} The application of Hoare techniques results in : \begin{eqnarray} \{ <var:b> = <var:v> \} \\ <var:p0> := <nat:6> ; \\ \{ <var:b> = <var:v> \land <var:p0> = <nat:6> \} \\ <var:M> := <var:p0> \\ \{ <var:b> = <var:v> \land <var:M> = <nat:6> \} \end{eqnarray} Advancing running our set of commands returns : \begin{eqnarray} \end{eqnarray} Hence , our series of instructions has been demonstrated to be correct . \end{proof} \end{document} 
~
Require Import String . From PLF Require Import Imp . From PLF Require Import Hoare . Definition <var:p0> : string := " <var:p0> " . Definition <def:poly> := <var:p0> := <nat:6> ; <var:M> := <var:p0> . Theorem <genH:poly_code_correct> : forall <var:v> : nat , {{ <var:b> = <var:v> }} <def:poly> {{ <var:M> = <nat:6> }} . Proof . intros . apply hoare_seq with ( Q := ( ( <var:b> = <var:v> /\ <var:p0> = <nat:6> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:b> = <var:v> /\ <var:M> = <nat:6> ) ) %assertion ) . all : eapply hoare_consequence_pre ; try ( apply hoare_asgn || assn_auto'' ) . Qed . 