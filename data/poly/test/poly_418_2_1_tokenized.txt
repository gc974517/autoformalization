\begin{document} \begin{definition} Take a list of commands <def:poly> in \emph{Imp} as follows \begin{verbatim} <var:Y0> := <nat:4> ; <var:H> := <var:Y0> \end{verbatim} \end{definition} \begin{theorem} Define the following series of instructions <def:poly> . Allowing --- taking positive coefficients $ <var:S> $ --- it to be that $ <var:W> = <var:S> $ prior to evaluating this set of commands , it must be that we have $ <var:H> = <nat:4> $ after code terminates . \end{theorem} \begin{proof} Demonstrating correctness of our set of instructions can be done through typical Hoare techniques . Going to the next step , we see the code \verb | <var:Y0> := <nat:4> ; | . This command takes $ \{ <var:W> = <var:S> \} $ to $ \{ <var:W> = <var:S> \land <var:Y0> = <nat:4> \} $ . Taking another step toward the subsequent step contained in the code segment , we have the variable assignmet line letting $ <var:Y0$ as $ <var:H>$ . This code advances the condition $ \{ <var:W> = <var:S> \land <var:Y0> = <nat:4> \} $ into $ \{ <var:W> = <var:S> \land <var:H> = <nat:4> \} $ . This is given using the assignment scheme obtained from standard Hoare techniques . \end{proof} \end{document} 
~
Require Import String . From PLF Require Import Imp . From PLF Require Import Hoare . Definition <var:Y0> : string := " <var:Y0> " . Definition <def:poly> := <var:Y0> := <nat:4> ; <var:H> := <var:Y0> . Theorem <genH:poly_code_correct> : forall <var:S> : nat , {{ <var:W> = <var:S> }} <def:poly> {{ <var:H> = <nat:4> }} . Proof . intros . apply hoare_seq with ( Q := ( ( <var:W> = <var:S> /\ <var:Y0> = <nat:4> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:W> = <var:S> /\ <var:H> = <nat:4> ) ) %assertion ) . all : eapply hoare_consequence_pre ; try ( apply hoare_asgn || assn_auto'' ) . Qed . 