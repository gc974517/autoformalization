\begin{document} \begin{definition} Define the following list of commands <def:poly> in \emph{Imp} : \begin{verbatim} <var:v0> := <nat:3> ; <var:N> := <var:v0> \end{verbatim} \end{definition} \begin{theorem} Assume that we have $ <var:h> = <var:b> $ for every positive coefficients $ <var:b> $ before executing our program it holds that we see $ <var:N> = <nat:3> $ . \end{theorem} \begin{proof} Using standard Hoare techniques gives : \begin{eqnarray} \{ <var:h> = <var:b> \} \\ <var:v0> := <nat:3> ; \\ \{ <var:h> = <var:b> \land <var:v0> = <nat:3> \} \\ <var:N> := <var:v0> \\ \{ <var:h> = <var:b> \land <var:N> = <nat:3> \} \end{eqnarray} As a consequence , this series of commands is proven correct . \end{proof} \end{document} 
~
Require Import String . From PLF Require Import Imp . From PLF Require Import Hoare . Definition <var:v0> : string := " <var:v0> " . Definition <def:poly> := <var:v0> := <nat:3> ; <var:N> := <var:v0> . Theorem <genH:poly_code_correct> : forall <var:b> : nat , {{ <var:h> = <var:b> }} <def:poly> {{ <var:N> = <nat:3> }} . Proof . intros . apply hoare_seq with ( Q := ( ( <var:h> = <var:b> /\ <var:v0> = <nat:3> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:h> = <var:b> /\ <var:N> = <nat:3> ) ) %assertion ) . all : eapply hoare_consequence_pre ; try ( apply hoare_asgn || assn_auto'' ) . Qed . 