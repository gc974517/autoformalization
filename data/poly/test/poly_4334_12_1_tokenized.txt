\begin{document} \begin{theorem} We define the following series of instructions : \begin{verbatim} <var:S1> := <var:I> ; <var:S2> := <var:S1> * <var:I> ; <var:S3> := <var:S2> * <var:I> ; <var:S4> := <var:S3> * <var:I> ; <var:S0> := <nat:3> ; <var:S2> := <var:S2> * <nat:9> ; <var:S3> := <var:S3> * <nat:5> ; <var:S4> := <var:S4> * <nat:7> ; <var:u> := <var:S4> <var:u> := <var:u> + <var:S3> <var:u> := <var:u> + <var:S2> <var:u> := <var:u> + <var:S0> \end{verbatim} Given that we have $ <var:I> = <var:T> $ ahead of evaluating this set of commands , it follows that $ <var:u> = <nat:7> \cdot <var:T> ^ <nat:4> + <nat:5> \cdot <var:T> ^ <nat:3> + <nat:9> \cdot <var:T> ^ <nat:2> + <nat:3> $ once list of commands is done . \end{theorem} \begin{proof} Demonstrating correctness of our list of instructions can be accomplished using standard Hoare reasoning . Moving forward to the next step , we have \[ \begin{tabular} {rcl} \{ <var:I> = <var:T> \} & <var:S1> := <var:I> & \{ <var:I> = <var:T> \land <var:S1> = <var:T> \} \\ \{ <var:I> = <var:T> \land <var:S1> = <var:T> \} & <var:S2> := <var:S1> * <var:I> & \{ <var:I> = <var:T> \land <var:S1> = <var:T> \land <var:S2> = <var:T> ^ <nat:2> \} \\ \{ <var:I> = <var:T> \land <var:S1> = <var:T> \land <var:S2> = <var:T> ^ <nat:2> \} & <var:S3> := <var:S2> * <var:I> & \{ <var:I> = <var:T> \land <var:S1> = <var:T> \land <var:S2> = <var:T> ^ <nat:2> \land <var:S3> = <var:T> ^ <nat:3> \} \end{tabular} Advancing to the subsequent steps found in the code segment , \[ \begin{tabular} {rcl} \{ <var:I> = <var:T> \} & <var:S1> := <var:I> & \{ <var:I> = <var:T> \land <var:S1> = <var:T> \} \\ \{ <var:I> = <var:T> \land <var:S1> = <var:T> \} & <var:S2> := <var:S1> * <var:I> & \{ <var:I> = <var:T> \land <var:S1> = <var:T> \land <var:S2> = <var:T> ^ <nat:2> \} \\ \{ <var:I> = <var:T> \land <var:S1> = <var:T> \land <var:S2> = <var:T> ^ <nat:2> \} & <var:S3> := <var:S2> * <var:I> & \{ <var:I> = <var:T> \land <var:S1> = <var:T> \land <var:S2> = <var:T> ^ <nat:2> \land <var:S3> = <var:T> ^ <nat:3> \} \\ \{ <var:I> = <var:T> \land <var:S1> = <var:T> \land <var:S2> = <var:T> ^ <nat:2> \land <var:S3> = <var:T> ^ <nat:3> \} & <var:S4> := <var:S3> * <var:I> & \{ <var:I> = <var:T> \land <var:S1> = <var:T> \land <var:S2> = <var:T> ^ <nat:2> \land <var:S3> = <var:T> ^ <nat:3> \land <var:S4> = <var:T> ^ <nat:4> \} \\ \{ <var:I> = <var:T> \land <var:S1> = <var:T> \land <var:S2> = <var:T> ^ <nat:2> \land <var:S3> = <var:T> ^ <nat:3> \land <var:S4> = <var:T> ^ <nat:4> \} & <var:S0> := <nat:3> & \{ <var:I> = <var:T> \land <var:S1> = <var:T> \land <var:S2> = <var:T> ^ <nat:2> \land <var:S3> = <var:T> ^ <nat:3> \land <var:S4> = <var:T> ^ <nat:4> \land <var:S0> = <nat:3> \} \\ \{ <var:I> = <var:T> \land <var:S1> = <var:T> \land <var:S2> = <var:T> ^ <nat:2> \land <var:S3> = <var:T> ^ <nat:3> \land <var:S4> = <var:T> ^ <nat:4> \land <var:S0> = <nat:3> \} & <var:S2> := <var:S2> * <nat:9> & \{ <var:I> = <var:T> \land <var:S1> = <var:T> \land <var:S2> = <nat:9> * <var:T> ^ <nat:2> \land <var:S3> = <var:T> ^ <nat:3> \land <var:S4> = <var:T> ^ <nat:4> \land <var:S0> = <nat:3> \} \\ \{ <var:I> = <var:T> \land <var:S1> = <var:T> \land <var:S2> = <nat:9> * <var:T> ^ <nat:2> \land <var:S3> = <var:T> ^ <nat:3> \land <var:S4> = <var:T> ^ <nat:4> \land <var:S0> = <nat:3> \} & <var:S3> := <var:S3> * <nat:5> & \{ <var:I> = <var:T> \land <var:S1> = <var:T> \land <var:S2> = <nat:9> * <var:T> ^ <nat:2> \land <var:S3> = <nat:5> * <var:T> ^ <nat:3> \land <var:S4> = <var:T> ^ <nat:4> \land <var:S0> = <nat:3> \} \\ \{ <var:I> = <var:T> \land <var:S1> = <var:T> \land <var:S2> = <nat:9> * <var:T> ^ <nat:2> \land <var:S3> = <nat:5> * <var:T> ^ <nat:3> \land <var:S4> = <var:T> ^ <nat:4> \land <var:S0> = <nat:3> \} & <var:S4> := <var:S4> * <nat:7> & \{ <var:I> = <var:T> \land <var:S1> = <var:T> \land <var:S2> = <nat:9> * <var:T> ^ <nat:2> \land <var:S3> = <nat:5> * <var:T> ^ <nat:3> \land <var:S4> = <nat:7> * <var:T> ^ <nat:4> \land <var:S0> = <nat:3> \} \\ \{ <var:I> = <var:T> \land <var:S1> = <var:T> \land <var:S2> = <nat:9> * <var:T> ^ <nat:2> \land <var:S3> = <nat:5> * <var:T> ^ <nat:3> \land <var:S4> = <nat:7> * <var:T> ^ <nat:4> \land <var:S0> = <nat:3> \} & <var:u> := <var:S4& \{ <var:I> = <var:T> \land <var:S1> = <var:T> \land <var:S2> = <nat:9> * <var:T> ^ <nat:2> \land <var:S3> = <nat:5> * <var:T> ^ <nat:3> \land <var:S0> = <nat:3> \land <var:u> = <nat:7> * <var:T> ^ <nat:4> \} \end{tabular} \end{proof} \end{document} 
~
Require Import String . From PLF Require Import Imp . From PLF Require Import Hoare . Definition <var:S0> : string := " <var:S0> " . Definition <var:S1> : string := " <var:S1> " . Definition <var:S2> : string := " <var:S2> " . Definition <var:S3> : string := " <var:S3> " . Definition <var:S4> : string := " <var:S4> " . Theorem <genH:poly_code_correct> : forall <var:T> : nat , {{ <var:I> = <var:T> }} <var:S1> := <var:I> ; <var:S2> := <var:S1> * <var:I> ; <var:S3> := <var:S2> * <var:I> ; <var:S4> := <var:S3> * <var:I> ; <var:S0> := <nat:3> ; <var:S2> := <var:S2> * <nat:9> ; <var:S3> := <var:S3> * <nat:5> ; <var:S4> := <var:S4> * <nat:7> ; <var:u> := <var:S4> <var:u> := <var:u> + <var:S3> <var:u> := <var:u> + <var:S2> <var:u> := <var:u> + <var:S0> {{ <var:u> = <nat:7> * <var:T> ^ <nat:4> + <nat:5> * <var:T> ^ <nat:3> + <nat:9> * <var:T> ^ <nat:2> + <nat:3> }} . Proof . intros . apply hoare_seq with ( Q := ( ( <var:I> = <var:T> /\ <var:S1> = <var:T> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:I> = <var:T> /\ <var:S1> = <var:T> /\ <var:S2> = <var:T> ^ <nat:2> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:I> = <var:T> /\ <var:S1> = <var:T> /\ <var:S2> = <var:T> ^ <nat:2> /\ <var:S3> = <var:T> ^ <nat:3> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:I> = <var:T> /\ <var:S1> = <var:T> /\ <var:S2> = <var:T> ^ <nat:2> /\ <var:S3> = <var:T> ^ <nat:3> /\ <var:S4> = <var:T> ^ <nat:4> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:I> = <var:T> /\ <var:S1> = <var:T> /\ <var:S2> = <var:T> ^ <nat:2> /\ <var:S3> = <var:T> ^ <nat:3> /\ <var:S4> = <var:T> ^ <nat:4> /\ <var:S0> = <nat:3> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:I> = <var:T> /\ <var:S1> = <var:T> /\ <var:S2> = <nat:9> * <var:T> ^ <nat:2> /\ <var:S3> = <var:T> ^ <nat:3> /\ <var:S4> = <var:T> ^ <nat:4> /\ <var:S0> = <nat:3> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:I> = <var:T> /\ <var:S1> = <var:T> /\ <var:S2> = <nat:9> * <var:T> ^ <nat:2> /\ <var:S3> = <nat:5> * <var:T> ^ <nat:3> /\ <var:S4> = <var:T> ^ <nat:4> /\ <var:S0> = <nat:3> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:I> = <var:T> /\ <var:S1> = <var:T> /\ <var:S2> = <nat:9> * <var:T> ^ <nat:2> /\ <var:S3> = <nat:5> * <var:T> ^ <nat:3> /\ <var:S4> = <nat:7> * <var:T> ^ <nat:4> /\ <var:S0> = <nat:3> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:I> = <var:T> /\ <var:S1> = <var:T> /\ <var:S2> = <nat:9> * <var:T> ^ <nat:2> /\ <var:S3> = <nat:5> * <var:T> ^ <nat:3> /\ <var:S0> = <nat:3> /\ <var:u> = <nat:7> * <var:T> ^ <nat:4> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:I> = <var:T> /\ <var:S1> = <var:T> /\ <var:S2> = <nat:9> * <var:T> ^ <nat:2> /\ <var:S0> = <nat:3> /\ <var:u> = <nat:7> * <var:T> ^ <nat:4> + <nat:5> * <var:T> ^ <nat:3> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:I> = <var:T> /\ <var:S1> = <var:T> /\ <var:S0> = <nat:3> /\ <var:u> = <nat:7> * <var:T> ^ <nat:4> + <nat:5> * <var:T> ^ <nat:3> + <nat:9> * <var:T> ^ <nat:2> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:I> = <var:T> /\ <var:u> = <nat:7> * <var:T> ^ <nat:4> + <nat:5> * <var:T> ^ <nat:3> + <nat:9> * <var:T> ^ <nat:2> + <nat:3> ) ) %assertion ) . all : eapply hoare_consequence_pre ; try ( apply hoare_asgn || assn_auto'' ) . Qed . 