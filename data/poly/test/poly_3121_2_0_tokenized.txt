\begin{document} \begin{theorem} Take the following set of instructions in \emph{Imp} as follows \begin{verbatim} <var:N0> := <nat:5> ; <var:U> := <var:N0> \end{verbatim} Allow it to hold that $ <var:E> = <var:F> $ before interpreting our series of commands it follows that $ <var:U> = <nat:5> $ . \end{theorem} \begin{proof} The method of proof for our set of commands can be demonstrated by typical Hoare logic . Jumping to the proceeding step found in our series of commands , we see the statement \verb | <var:N0> := <nat:5> ; | . This forwards the condition $ \{ <var:E> = <var:F> \} $ into $ \{ <var:E> = <var:F> \land <var:N0> = <nat:5> \} $ . Immediately following , we see the variable binding command \verb | <var:U> := <var:N0> | . This statement takes the condition $ \{ <var:E> = <var:F> \land <var:N0> = <nat:5> \} $ into $ \{ <var:E> = <var:F> \land <var:U> = <nat:5> \} $ . \end{proof} \end{document} 
~
Require Import String . From PLF Require Import Imp . From PLF Require Import Hoare . Definition <var:N0> : string := " <var:N0> " . Theorem <genH:poly_code_correct> : forall <var:F> : nat , {{ <var:E> = <var:F> }} <var:N0> := <nat:5> ; <var:U> := <var:N0> {{ <var:U> = <nat:5> }} . Proof . intros . apply hoare_seq with ( Q := ( ( <var:E> = <var:F> /\ <var:N0> = <nat:5> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:E> = <var:F> /\ <var:U> = <nat:5> ) ) %assertion ) . all : eapply hoare_consequence_pre ; try ( apply hoare_asgn || assn_auto'' ) . Qed . 