\begin{document} \begin{definition} Let the following program <def:poly> in \emph{Imp} as \begin{verbatim} <var:q0> := <nat:7> ; <var:m> := <var:q0> \end{verbatim} \end{definition} \begin{theorem} Allow --- for every natural coefficients $ <var:C> $ --- that $ <var:S> = <var:C> $ before executing this list of instructions it follows that we see $ <var:m> = <nat:7> $ . \end{theorem} \begin{proof} \begin{eqnarray} \{ <var:S> = <var:C> \} \\ <var:q0> := <nat:7> ; \\ \{ <var:S> = <var:C> \land <var:q0> = <nat:7> \} \\ <var:m> := <var:q0> \\ \{ <var:S> = <var:C> \land <var:m> = <nat:7> \} \end{eqnarray} The application of typical Hoare logic accomplishes the argument . \end{proof} \end{document} 
~
Require Import String . From PLF Require Import Imp . From PLF Require Import Hoare . Definition <var:q0> : string := " <var:q0> " . Definition <def:poly> := <var:q0> := <nat:7> ; <var:m> := <var:q0> . Theorem <genH:poly_code_correct> : forall <var:C> : nat , {{ <var:S> = <var:C> }} <def:poly> {{ <var:m> = <nat:7> }} . Proof . intros . apply hoare_seq with ( Q := ( ( <var:S> = <var:C> /\ <var:q0> = <nat:7> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:S> = <var:C> /\ <var:m> = <nat:7> ) ) %assertion ) . all : eapply hoare_consequence_pre ; try ( apply hoare_asgn || assn_auto'' ) . Qed . 