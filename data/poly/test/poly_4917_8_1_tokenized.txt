\begin{document} \begin{definition} We define the following list of instructions <def:poly> in \emph{Imp} as \begin{verbatim} <var:y1> := <var:u> ; <var:y2> := <var:y1> * <var:u> ; <var:y0> := <nat:3> ; <var:y1> := <var:y1> * <nat:5> ; <var:y2> := <var:y2> * <nat:8> ; <var:R> := <var:y2> <var:R> := <var:R> + <var:y1> <var:R> := <var:R> + <var:y0> \end{verbatim} \end{definition} \begin{theorem} Allow it to be that $ <var:u> = <var:T> $ before running our set of commands it must be that we have $ <var:R> = <nat:8> \cdot <var:T> ^ <nat:2> + <nat:5> \cdot <var:T> + <nat:3> $ . \end{theorem} \begin{proof} \begin{eqnarray} \{ <var:u> = <var:T> \} \\ <var:y1> := <var:u> ; \\ \{ <var:u> = <var:T> \land <var:y1> = <var:T> \} \\ <var:y2> := <var:y1> * <var:u> ; \\ \{ <var:u> = <var:T> \land <var:y1> = <var:T> \land <var:y2> = <var:T> ^ <nat:2> \} \\ <var:y0> := <nat:3> ; \\ \{ <var:u> = <var:T> \land <var:y1> = <var:T> \land <var:y2> = <var:T> ^ <nat:2> \land <var:y0> = <nat:3> \} \\ <var:y1> := <var:y1> * <nat:5> ; \\ \{ <var:u> = <var:T> \land <var:y1> = <nat:5> \cdot <var:T> \land <var:y2> = <var:T> ^ <nat:2> \land <var:y0> = <nat:3> \} \\ <var:y2> := <var:y2> * <nat:8> ; \\ \{ <var:u> = <var:T> \land <var:y1> = <nat:5> \cdot <var:T> \land <var:y2> = <nat:8> \cdot <var:T> ^ <nat:2> \land <var:y0> = <nat:3> \} \\ <var:R> := <var:y2> \\ \{ <var:u> = <var:T> \land <var:y1> = <nat:5> \cdot <var:T> \land <var:y0> = <nat:3> \land <var:R> = <nat:8> \cdot <var:T> ^ <nat:2> \} \\ <var:R> := <var:R> + <var:y1> \\ \{ <var:u> = <var:T> \land <var:y0> = <nat:3> \land <var:R> = <nat:8> \cdot <var:T> ^ <nat:2> + <nat:5> \cdot <var:T> \} \\ <var:R> := <var:R> + <var:y0> \\ \{ <var:u> = <var:T> \land <var:R> = <nat:8> \cdot <var:T> ^ <nat:2> + <nat:5> \cdot <var:T> + <nat:3> \} \end{eqnarray} Utilizing Hoare reasoning solves the proof . \end{proof} \end{document} 
~
Require Import String . From PLF Require Import Imp . From PLF Require Import Hoare . Definition <var:y0> : string := " <var:y0> " . Definition <var:y1> : string := " <var:y1> " . Definition <var:y2> : string := " <var:y2> " . Definition <def:poly> := <var:y1> := <var:u> ; <var:y2> := <var:y1> * <var:u> ; <var:y0> := <nat:3> ; <var:y1> := <var:y1> * <nat:5> ; <var:y2> := <var:y2> * <nat:8> ; <var:R> := <var:y2> <var:R> := <var:R> + <var:y1> <var:R> := <var:R> + <var:y0> . Theorem <genH:poly_code_correct> : forall <var:T> : nat , {{ <var:u> = <var:T> }} <def:poly> {{ <var:R> = <nat:8> * <var:T> ^ <nat:2> + <nat:5> * <var:T> + <nat:3> }} . Proof . intros . apply hoare_seq with ( Q := ( ( <var:u> = <var:T> /\ <var:y1> = <var:T> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:u> = <var:T> /\ <var:y1> = <var:T> /\ <var:y2> = <var:T> ^ <nat:2> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:u> = <var:T> /\ <var:y1> = <var:T> /\ <var:y2> = <var:T> ^ <nat:2> /\ <var:y0> = <nat:3> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:u> = <var:T> /\ <var:y1> = <nat:5> * <var:T> /\ <var:y2> = <var:T> ^ <nat:2> /\ <var:y0> = <nat:3> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:u> = <var:T> /\ <var:y1> = <nat:5> * <var:T> /\ <var:y2> = <nat:8> * <var:T> ^ <nat:2> /\ <var:y0> = <nat:3> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:u> = <var:T> /\ <var:y1> = <nat:5> * <var:T> /\ <var:y0> = <nat:3> /\ <var:R> = <nat:8> * <var:T> ^ <nat:2> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:u> = <var:T> /\ <var:y0> = <nat:3> /\ <var:R> = <nat:8> * <var:T> ^ <nat:2> + <nat:5> * <var:T> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:u> = <var:T> /\ <var:R> = <nat:8> * <var:T> ^ <nat:2> + <nat:5> * <var:T> + <nat:3> ) ) %assertion ) . all : eapply hoare_consequence_pre ; try ( apply hoare_asgn || assn_auto'' ) . Qed . 