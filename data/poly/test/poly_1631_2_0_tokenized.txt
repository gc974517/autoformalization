\begin{document} \begin{definition} We define the following code segment <def:poly> in \emph{Imp} as follows \begin{verbatim} <var:j0> := <nat:4> ; <var:W> := <var:j0> \end{verbatim} \end{definition} \begin{theorem} Allowing it to be that $ <var:H> = <var:a> $ prior to the evaluation of our series of instructions it holds that we have $ <var:W> = <nat:4> $ . \end{theorem} \begin{proof} Arguing the correctness of this list of instructions can be given by this decorated series of instructions . \begin{eqnarray} \{ <var:H> = <var:a> \} \\ <var:j0> := <nat:4> ; \\ \{ <var:H> = <var:a> \land <var:j0> = <nat:4> \} \\ <var:W> := <var:j0> \\ \{ <var:H> = <var:a> \land <var:W> = <nat:4> \} \end{eqnarray} The application of typical Hoare reasoning completes the argument . \end{proof} \end{document} 
~
Require Import String . From PLF Require Import Imp . From PLF Require Import Hoare . Definition <var:j0> : string := " <var:j0> " . Definition <def:poly> := <var:j0> := <nat:4> ; <var:W> := <var:j0> . Theorem <genH:poly_code_correct> : forall <var:a> : nat , {{ <var:H> = <var:a> }} <def:poly> {{ <var:W> = <nat:4> }} . Proof . intros . apply hoare_seq with ( Q := ( ( <var:H> = <var:a> /\ <var:j0> = <nat:4> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:H> = <var:a> /\ <var:W> = <nat:4> ) ) %assertion ) . all : eapply hoare_consequence_pre ; try ( apply hoare_asgn || assn_auto'' ) . Qed . 