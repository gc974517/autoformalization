\begin{document} \begin{theorem} Consider a list of commands as follows \begin{verbatim} <var:G0> := <nat:5> ; <var:V> := <var:G0> \end{verbatim} Allowing it to hold that $ <var:D> = <var:y> $ , for every positive coefficients $ <var:y> $ , before interpreting the list of commands , it holds that we see $ <var:V> = <nat:5> $ once set of instructions has terminated . \end{theorem} \begin{proof} The way to prove correctness for the series of commands is demonstrated by usual Hoare techniques . Keeping momentum , we have \begin{eqnarray} \{ <var:D> = <var:y> \} \, <var:G0> := <nat:5> \, \{ <var:D> = <var:y> \land <var:G0> = <nat:5> \} \\ \{ <var:D> = <var:y> \land <var:G0> = <nat:5> \} \, <var:V> := <var:G0\, \{ <var:D> = <var:y> \land <var:V> = <nat:5> \} \end{eqnarray} \end{proof} \end{document} 
~
Require Import String . From PLF Require Import Imp . From PLF Require Import Hoare . Definition <var:G0> : string := " <var:G0> " . Theorem <genH:poly_code_correct> : forall <var:y> : nat , {{ <var:D> = <var:y> }} <var:G0> := <nat:5> ; <var:V> := <var:G0> {{ <var:V> = <nat:5> }} . Proof . intros . apply hoare_seq with ( Q := ( ( <var:D> = <var:y> /\ <var:G0> = <nat:5> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:D> = <var:y> /\ <var:V> = <nat:5> ) ) %assertion ) . all : eapply hoare_consequence_pre ; try ( apply hoare_asgn || assn_auto'' ) . Qed . 