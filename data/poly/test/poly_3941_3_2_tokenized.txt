\begin{document} \begin{theorem} Consider the following set of commands : \begin{verbatim} <var:p> := <nat:1> ; <var:p> := <nat:4> + <var:p> * <var:a> ; <var:p> := <nat:1> + <var:p> * <var:a> \end{verbatim} Given that we have $ <var:a> = <var:i> $ before the evaluation of this set of instructions , then we have $ <var:p> = <nat:1> \cdot <var:i> ^ <nat:2> + <nat:4> \cdot <var:i> + <nat:1> $ . \end{theorem} \begin{proof} The way to prove correctness for our set of commands is accomplished with typical Hoare techniques . Taking another step toward the next pieces of code seen in our series of instructions , we have \begin{eqnarray} \{ <var:a> = <var:i> \} \, <var:p> := <nat:1> \, \{ <var:a> = <var:i> \land <var:p> = <nat:1> \} \\ \{ <var:a> = <var:i> \land <var:p> = <nat:1> \} \, <var:p> := <nat:4> + <var:p> * <var:a> \, \{ <var:a> = <var:i> \land <var:p> = <nat:1> * <var:i> + <nat:4> \} \\ \{ <var:a> = <var:i> \land <var:p> = <nat:1> * <var:i> + <nat:4> \} \, <var:p> := <nat:1> + <var:p> * <var:a\, \{ <var:a> = <var:i> \land <var:p> = <nat:1> * <var:i> ^ <nat:2> + <nat:4> * <var:i> + <nat:1> \} \end{eqnarray} \end{proof} \end{document} 
~
Require Import String . From PLF Require Import Imp . From PLF Require Import Hoare . Theorem <genH:poly_code_correct> : forall <var:i> : nat , {{ <var:a> = <var:i> }} <var:p> := <nat:1> ; <var:p> := <nat:4> + <var:p> * <var:a> ; <var:p> := <nat:1> + <var:p> * <var:a> {{ <var:p> = <nat:1> * <var:i> ^ <nat:2> + <nat:4> * <var:i> + <nat:1> }} . Proof . intros . apply hoare_seq with ( Q := ( ( <var:a> = <var:i> /\ <var:p> = <nat:1> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:a> = <var:i> /\ <var:p> = <nat:1> * <var:i> + <nat:4> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:a> = <var:i> /\ <var:p> = <nat:1> * <var:i> ^ <nat:2> + <nat:4> * <var:i> + <nat:1> ) ) %assertion ) . all : eapply hoare_consequence_pre ; try ( apply hoare_asgn || assn_auto'' ) . Qed . 