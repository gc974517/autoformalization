\begin{document} \begin{definition} We define the following program <def:poly> in \emph{Imp} as follows \begin{verbatim} <var:m0> := <nat:6> ; <var:J> := <var:m0> \end{verbatim} \end{definition} \begin{theorem} Assuming assuming some $ <var:l> \in \mathbb{Z}^+ $ that we have $ <var:y> = <var:l> $ before interpreting this code segment then we see $ <var:J> = <nat:6> $ . \end{theorem} \begin{proof} Proving correctness for this set of commands is given using Hoare techniques . Honing in on the following line in the program , we see the variable update statement \verb | <var:m0> := <nat:6> ; | . This line transfers $ \{ <var:y> = <var:l> \} $ to the postcondition $ \{ <var:y> = <var:l> \land <var:m0> = <nat:6> \} $ . This is deduced by the assignment law in Hoare techniques . Taking a look at the next step contained in our segment of code , we see the assignment code defining $ <var:m0$ as $ <var:J>$ . This transfers the condition $ \{ <var:y> = <var:l> \land <var:m0> = <nat:6> \} $ to the condition $ \{ <var:y> = <var:l> \land <var:J> = <nat:6> \} $ . \end{proof} \end{document} 
~
Require Import String . From PLF Require Import Imp . From PLF Require Import Hoare . Definition <var:m0> : string := " <var:m0> " . Definition <def:poly> := <var:m0> := <nat:6> ; <var:J> := <var:m0> . Theorem <genH:poly_code_correct> : forall <var:l> : nat , {{ <var:y> = <var:l> }} <def:poly> {{ <var:J> = <nat:6> }} . Proof . intros . apply hoare_seq with ( Q := ( ( <var:y> = <var:l> /\ <var:m0> = <nat:6> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:y> = <var:l> /\ <var:J> = <nat:6> ) ) %assertion ) . all : eapply hoare_consequence_pre ; try ( apply hoare_asgn || assn_auto'' ) . Qed . 