\begin{document} \begin{definition} Consider the following code <def:poly> in \emph{Imp} such that \begin{verbatim} <var:C0> := <nat:8> ; <var:k> := <var:C0> \end{verbatim} \end{definition} \begin{theorem} Assume , for every natural numbers $ <var:O> $ , it to hold that $ <var:m> = <var:O> $ prior to the execution of our code segment it follows that we see $ <var:k> = <nat:8> $ . \end{theorem} \begin{proof} The application of standard Hoare reasoning yields : \begin{eqnarray} \{ <var:m> = <var:O> \} \\ <var:C0> := <nat:8> ; \\ \{ <var:m> = <var:O> \land <var:C0> = <nat:8> \} \\ <var:k> := <var:C0> \\ \{ <var:m> = <var:O> \land <var:k> = <nat:8> \} \end{eqnarray} Considering the above , the series of instructions is demonstrated to be correct . \end{proof} \end{document} 
~
Require Import String . From PLF Require Import Imp . From PLF Require Import Hoare . Definition <var:C0> : string := " <var:C0> " . Definition <def:poly> := <var:C0> := <nat:8> ; <var:k> := <var:C0> . Theorem <genH:poly_code_correct> : forall <var:O> : nat , {{ <var:m> = <var:O> }} <def:poly> {{ <var:k> = <nat:8> }} . Proof . intros . apply hoare_seq with ( Q := ( ( <var:m> = <var:O> /\ <var:C0> = <nat:8> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:m> = <var:O> /\ <var:k> = <nat:8> ) ) %assertion ) . all : eapply hoare_consequence_pre ; try ( apply hoare_asgn || assn_auto'' ) . Qed . 