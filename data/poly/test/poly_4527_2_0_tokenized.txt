\begin{document} \begin{definition} We define the following series of instructions <def:poly> in \emph{Imp} such that \begin{verbatim} <var:a0> := <nat:9> ; <var:S> := <var:a0> \end{verbatim} \end{definition} \begin{theorem} Assume $ <var:i> = <var:y> $ ( for every positive integer coefficients $ <var:y> $ ) before running this set of instructions it follows that $ <var:S> = <nat:9> $ . \end{theorem} \begin{proof} \begin{eqnarray} \{ <var:i> = <var:y> \} \\ <var:a0> := <nat:9> ; \\ \{ <var:i> = <var:y> \land <var:a0> = <nat:9> \} \\ <var:S> := <var:a0> \\ \{ <var:i> = <var:y> \land <var:S> = <nat:9> \} \end{eqnarray} The application of standard Hoare techniques ends the proof . \end{proof} \end{document} 
~
Require Import String . From PLF Require Import Imp . From PLF Require Import Hoare . Definition <var:a0> : string := " <var:a0> " . Definition <def:poly> := <var:a0> := <nat:9> ; <var:S> := <var:a0> . Theorem <genH:poly_code_correct> : forall <var:y> : nat , {{ <var:i> = <var:y> }} <def:poly> {{ <var:S> = <nat:9> }} . Proof . intros . apply hoare_seq with ( Q := ( ( <var:i> = <var:y> /\ <var:a0> = <nat:9> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:i> = <var:y> /\ <var:S> = <nat:9> ) ) %assertion ) . all : eapply hoare_consequence_pre ; try ( apply hoare_asgn || assn_auto'' ) . Qed . 