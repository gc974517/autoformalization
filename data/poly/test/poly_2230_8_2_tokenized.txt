\begin{document} \begin{definition} Consider the following list of instructions <def:poly> in \emph{Imp} : \begin{verbatim} <var:J> := <nat:1> ; <var:J> := <nat:4> + <var:J> * <var:U> ; <var:J> := <nat:3> + <var:J> * <var:U> ; <var:J> := <nat:1> + <var:J> * <var:U> ; <var:J> := <nat:2> + <var:J> * <var:U> ; <var:J> := <nat:4> + <var:J> * <var:U> ; <var:J> := <nat:4> + <var:J> * <var:U> ; <var:J> := <nat:1> + <var:J> * <var:U> \end{verbatim} \end{definition} \begin{theorem} Given , for some natural numbers $ <var:p> $ , $ <var:U> = <var:p> $ prior to the evaluation of our list of commands , it follows that $ <var:J> = <nat:1> \times <var:p> ^ <nat:7> + <nat:4> \times <var:p> ^ <nat:6> + <nat:3> \times <var:p> ^ <nat:5> + <nat:1> \times <var:p> ^ <nat:4> + <nat:2> \times <var:p> ^ <nat:3> + <nat:4> \times <var:p> ^ <nat:2> + <nat:4> \times <var:p> + <nat:1> $ . \end{theorem} \begin{proof} The method of proof for this set of commands can be shown with standard Hoare reasoning . Advancing to the next step , we have \begin{verbatim} { <var:U> = <var:p> } <var:J> := <nat:1> { <var:U> = <var:p> \land <var:J> = <nat:1> } { <var:U> = <var:p> \land <var:J> = <nat:1> } <var:J> := <nat:4> + <var:J> * <var:U> { <var:U> = <var:p> \land <var:J> = <nat:1> \times <var:p> + <nat:4> } { <var:U> = <var:p> \land <var:J> = <nat:1> \times <var:p> + <nat:4> } <var:J> := <nat:3> + <var:J> * <var:U> { <var:U> = <var:p> \land <var:J> = <nat:1> \times <var:p> ^ <nat:2> + <nat:4> \times <var:p> + <nat:3> } { <var:U> = <var:p> \land <var:J> = <nat:1> \times <var:p> ^ <nat:2> + <nat:4> \times <var:p> + <nat:3> } <var:J> := <nat:1> + <var:J> * <var:U> { <var:U> = <var:p> \land <var:J> = <nat:1> \times <var:p> ^ <nat:3> + <nat:4> \times <var:p> ^ <nat:2> + <nat:3> \times <var:p> + <nat:1> } { <var:U> = <var:p> \land <var:J> = <nat:1> \times <var:p> ^ <nat:3> + <nat:4> \times <var:p> ^ <nat:2> + <nat:3> \times <var:p> + <nat:1> } <var:J> := <nat:2> + <var:J> * <var:U> { <var:U> = <var:p> \land <var:J> = <nat:1> \times <var:p> ^ <nat:4> + <nat:4> \times <var:p> ^ <nat:3> + <nat:3> \times <var:p> ^ <nat:2> + <nat:1> \times <var:p> + <nat:2> } { <var:U> = <var:p> \land <var:J> = <nat:1> \times <var:p> ^ <nat:4> + <nat:4> \times <var:p> ^ <nat:3> + <nat:3> \times <var:p> ^ <nat:2> + <nat:1> \times <var:p> + <nat:2> } <var:J> := <nat:4> + <var:J> * <var:U> { <var:U> = <var:p> \land <var:J> = <nat:1> \times <var:p> ^ <nat:5> + <nat:4> \times <var:p> ^ <nat:4> + <nat:3> \times <var:p> ^ <nat:3> + <nat:1> \times <var:p> ^ <nat:2> + <nat:2> \times <var:p> + <nat:4> } { <var:U> = <var:p> \land <var:J> = <nat:1> \times <var:p> ^ <nat:5> + <nat:4> \times <var:p> ^ <nat:4> + <nat:3> \times <var:p> ^ <nat:3> + <nat:1> \times <var:p> ^ <nat:2> + <nat:2> \times <var:p> + <nat:4> } <var:J> := <nat:4> + <var:J> * <var:U> { <var:U> = <var:p> \land <var:J> = <nat:1> \times <var:p> ^ <nat:6> + <nat:4> \times <var:p> ^ <nat:5> + <nat:3> \times <var:p> ^ <nat:4> + <nat:1> \times <var:p> ^ <nat:3> + <nat:2> \times <var:p> ^ <nat:2> + <nat:4> \times <var:p> + <nat:4> } { <var:U> = <var:p> \land <var:J> = <nat:1> \times <var:p> ^ <nat:6> + <nat:4> \times <var:p> ^ <nat:5> + <nat:3> \times <var:p> ^ <nat:4> + <nat:1> \times <var:p> ^ <nat:3> + <nat:2> \times <var:p> ^ <nat:2> + <nat:4> \times <var:p> + <nat:4> } <var:J> := <nat:1> + <var:J> * <var:U{ <var:U> = <var:p> \land <var:J> = <nat:1> \times <var:p> ^ <nat:7> + <nat:4> \times <var:p> ^ <nat:6> + <nat:3> \times <var:p> ^ <nat:5> + <nat:1> \times <var:p> ^ <nat:4> + <nat:2> \times <var:p> ^ <nat:3> + <nat:4> \times <var:p> ^ <nat:2> + <nat:4> \times <var:p> + <nat:1> } \end{verbatim} \end{proof} \end{document} 
~
Require Import String . From PLF Require Import Imp . From PLF Require Import Hoare . Definition <def:poly> := <var:J> := <nat:1> ; <var:J> := <nat:4> + <var:J> * <var:U> ; <var:J> := <nat:3> + <var:J> * <var:U> ; <var:J> := <nat:1> + <var:J> * <var:U> ; <var:J> := <nat:2> + <var:J> * <var:U> ; <var:J> := <nat:4> + <var:J> * <var:U> ; <var:J> := <nat:4> + <var:J> * <var:U> ; <var:J> := <nat:1> + <var:J> * <var:U> . Theorem <genH:poly_code_correct> : forall <var:p> : nat , {{ <var:U> = <var:p> }} <def:poly> {{ <var:J> = <nat:1> * <var:p> ^ <nat:7> + <nat:4> * <var:p> ^ <nat:6> + <nat:3> * <var:p> ^ <nat:5> + <nat:1> * <var:p> ^ <nat:4> + <nat:2> * <var:p> ^ <nat:3> + <nat:4> * <var:p> ^ <nat:2> + <nat:4> * <var:p> + <nat:1> }} . Proof . intros . apply hoare_seq with ( Q := ( ( <var:U> = <var:p> /\ <var:J> = <nat:1> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:U> = <var:p> /\ <var:J> = <nat:1> * <var:p> + <nat:4> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:U> = <var:p> /\ <var:J> = <nat:1> * <var:p> ^ <nat:2> + <nat:4> * <var:p> + <nat:3> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:U> = <var:p> /\ <var:J> = <nat:1> * <var:p> ^ <nat:3> + <nat:4> * <var:p> ^ <nat:2> + <nat:3> * <var:p> + <nat:1> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:U> = <var:p> /\ <var:J> = <nat:1> * <var:p> ^ <nat:4> + <nat:4> * <var:p> ^ <nat:3> + <nat:3> * <var:p> ^ <nat:2> + <nat:1> * <var:p> + <nat:2> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:U> = <var:p> /\ <var:J> = <nat:1> * <var:p> ^ <nat:5> + <nat:4> * <var:p> ^ <nat:4> + <nat:3> * <var:p> ^ <nat:3> + <nat:1> * <var:p> ^ <nat:2> + <nat:2> * <var:p> + <nat:4> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:U> = <var:p> /\ <var:J> = <nat:1> * <var:p> ^ <nat:6> + <nat:4> * <var:p> ^ <nat:5> + <nat:3> * <var:p> ^ <nat:4> + <nat:1> * <var:p> ^ <nat:3> + <nat:2> * <var:p> ^ <nat:2> + <nat:4> * <var:p> + <nat:4> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:U> = <var:p> /\ <var:J> = <nat:1> * <var:p> ^ <nat:7> + <nat:4> * <var:p> ^ <nat:6> + <nat:3> * <var:p> ^ <nat:5> + <nat:1> * <var:p> ^ <nat:4> + <nat:2> * <var:p> ^ <nat:3> + <nat:4> * <var:p> ^ <nat:2> + <nat:4> * <var:p> + <nat:1> ) ) %assertion ) . all : eapply hoare_consequence_pre ; try ( apply hoare_asgn || assn_auto'' ) . Qed . 