\begin{document} \begin{theorem} Consider the following list of instructions as follows \begin{verbatim} <var:W0> := <nat:4> ; <var:E> := <var:W0> \end{verbatim} Allowing that we have $ <var:w> = <var:s> $ ahead of the evaluation of this set of commands , it holds that we see $ <var:E> = <nat:4> $ . \end{theorem} \begin{proof} The proof of the list of commands is clear through typical Hoare reasoning . Following , \verb | { <var:w> = <var:s> } <var:W0> := <nat:4> { <var:w> = <var:s> \land <var:W0> = <nat:4> } | and \verb | { <var:w> = <var:s> \land <var:W0> = <nat:4> } <var:E> := <var:W0{ <var:w> = <var:s> \land <var:E> = <nat:4> } | . This is guaranteed by the assignment rule found in typical Hoare reasoning . \end{proof} \end{document} 
~
Require Import String . From PLF Require Import Imp . From PLF Require Import Hoare . Definition <var:W0> : string := " <var:W0> " . Theorem <genH:poly_code_correct> : forall <var:s> : nat , {{ <var:w> = <var:s> }} <var:W0> := <nat:4> ; <var:E> := <var:W0> {{ <var:E> = <nat:4> }} . Proof . intros . apply hoare_seq with ( Q := ( ( <var:w> = <var:s> /\ <var:W0> = <nat:4> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:w> = <var:s> /\ <var:E> = <nat:4> ) ) %assertion ) . all : eapply hoare_consequence_pre ; try ( apply hoare_asgn || assn_auto'' ) . Qed . 