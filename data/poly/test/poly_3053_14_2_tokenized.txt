\begin{document} \begin{theorem} Take a segment of code as follows \begin{verbatim} <var:J> := <nat:3> ; <var:J> := <nat:3> + <var:J> * <var:Y> ; <var:J> := <nat:2> + <var:J> * <var:Y> ; <var:J> := <var:J> * <var:Y> ; <var:J> := <nat:3> + <var:J> * <var:Y> ; <var:J> := <nat:2> + <var:J> * <var:Y> ; <var:J> := <nat:4> + <var:J> * <var:Y> ; <var:J> := <var:J> * <var:Y> ; <var:J> := <nat:2> + <var:J> * <var:Y> ; <var:J> := <nat:1> + <var:J> * <var:Y> ; <var:J> := <nat:2> + <var:J> * <var:Y> ; <var:J> := <nat:1> + <var:J> * <var:Y> ; <var:J> := <nat:2> + <var:J> * <var:Y> ; <var:J> := <nat:3> + <var:J> * <var:Y> \end{verbatim} Given it to be that $ <var:Y> = <var:s> $ --- taking positive numbers $ <var:s> $ --- before running the list of commands then $ <var:J> = <nat:3> \cdot <var:s> ^ <nat:13> + <nat:3> \cdot <var:s> ^ <nat:12> + <nat:2> \cdot <var:s> ^ <nat:11> + <nat:3> \cdot <var:s> ^ <nat:9> + <nat:2> \cdot <var:s> ^ <nat:8> + <nat:4> \cdot <var:s> ^ <nat:7> + <nat:2> \cdot <var:s> ^ <nat:5> + <nat:1> \cdot <var:s> ^ <nat:4> + <nat:2> \cdot <var:s> ^ <nat:3> + <nat:1> \cdot <var:s> ^ <nat:2> + <nat:2> \cdot <var:s> + <nat:3> $ when segment of code finishes . \end{theorem} \begin{proof} Arguing the correctness of our program can be demonstrated by Hoare logic . Moving forward , we have \begin{verbatim} { <var:Y> = <var:s> } <var:J> := <nat:3> { <var:Y> = <var:s> \land <var:J> = <nat:3> } { <var:Y> = <var:s> \land <var:J> = <nat:3> } <var:J> := <nat:3> + <var:J> * <var:Y> { <var:Y> = <var:s> \land <var:J> = <nat:3> \times <var:s> + <nat:3> } \end{verbatim} Keeping momentum , we see \begin{verbatim} { <var:Y> = <var:s> } <var:J> := <nat:3> { <var:Y> = <var:s> \land <var:J> = <nat:3> } { <var:Y> = <var:s> \land <var:J> = <nat:3> } <var:J> := <nat:3> + <var:J> * <var:Y> { <var:Y> = <var:s> \land <var:J> = <nat:3> \times <var:s> + <nat:3> } { <var:Y> = <var:s> \land <var:J> = <nat:3> \times <var:s> + <nat:3> } <var:J> := <nat:2> + <var:J> * <var:Y> { <var:Y> = <var:s> \land <var:J> = <nat:3> \times <var:s> ^ <nat:2> + <nat:3> \times <var:s> + <nat:2> } { <var:Y> = <var:s> \land <var:J> = <nat:3> \times <var:s> ^ <nat:2> + <nat:3> \times <var:s> + <nat:2> } <var:J> := <var:J> * <var:Y> { <var:Y> = <var:s> \land <var:J> = <nat:3> \times <var:s> ^ <nat:3> + <nat:3> \times <var:s> ^ <nat:2> + <nat:2> \times <var:s> + } { <var:Y> = <var:s> \land <var:J> = <nat:3> \times <var:s> ^ <nat:3> + <nat:3> \times <var:s> ^ <nat:2> + <nat:2> \times <var:s> + } <var:J> := <nat:3> + <var:J> * <var:Y> { <var:Y> = <var:s> \land <var:J> = <nat:3> \times <var:s> ^ <nat:4> + <nat:3> \times <var:s> ^ <nat:3> + <nat:2> \times <var:s> ^ <nat:2> + <nat:3> } { <var:Y> = <var:s> \land <var:J> = <nat:3> \times <var:s> ^ <nat:4> + <nat:3> \times <var:s> ^ <nat:3> + <nat:2> \times <var:s> ^ <nat:2> + <nat:3> } <var:J> := <nat:2> + <var:J> * <var:Y> { <var:Y> = <var:s> \land <var:J> = <nat:3> \times <var:s> ^ <nat:5> + <nat:3> \times <var:s> ^ <nat:4> + <nat:2> \times <var:s> ^ <nat:3> + <nat:3> \times <var:s> + <nat:2> } { <var:Y> = <var:s> \land <var:J> = <nat:3> \times <var:s> ^ <nat:5> + <nat:3> \times <var:s> ^ <nat:4> + <nat:2> \times <var:s> ^ <nat:3> + <nat:3> \times <var:s> + <nat:2> } <var:J> := <nat:4> + <var:J> * <var:Y> { <var:Y> = <var:s> \land <var:J> = <nat:3> \times <var:s> ^ <nat:6> + <nat:3> \times <var:s> ^ <nat:5> + <nat:2> \times <var:s> ^ <nat:4> + <nat:3> \times <var:s> ^ <nat:2> + <nat:2> \times <var:s> + <nat:4> } { <var:Y> = <var:s> \land <var:J> = <nat:3> \times <var:s> ^ <nat:6> + <nat:3> \times <var:s> ^ <nat:5> + <nat:2> \times <var:s> ^ <nat:4> + <nat:3> \times <var:s> ^ <nat:2> + <nat:2> \times <var:s> + <nat:4> } <var:J> := <var:J> * <var:Y> { <var:Y> = <var:s> \land <var:J> = <nat:3> \times <var:s> ^ <nat:7> + <nat:3> \times <var:s> ^ <nat:6> + <nat:2> \times <var:s> ^ <nat:5> + <nat:3> \times <var:s> ^ <nat:3> + <nat:2> \times <var:s> ^ <nat:2> + <nat:4> \times <var:s> + } { <var:Y> = <var:s> \land <var:J> = <nat:3> \times <var:s> ^ <nat:7> + <nat:3> \times <var:s> ^ <nat:6> + <nat:2> \times <var:s> ^ <nat:5> + <nat:3> \times <var:s> ^ <nat:3> + <nat:2> \times <var:s> ^ <nat:2> + <nat:4> \times <var:s> + } <var:J> := <nat:2> + <var:J> * <var:Y> { <var:Y> = <var:s> \land <var:J> = <nat:3> \times <var:s> ^ <nat:8> + <nat:3> \times <var:s> ^ <nat:7> + <nat:2> \times <var:s> ^ <nat:6> + <nat:3> \times <var:s> ^ <nat:4> + <nat:2> \times <var:s> ^ <nat:3> + <nat:4> \times <var:s> ^ <nat:2> + <nat:2> } { <var:Y> = <var:s> \land <var:J> = <nat:3> \times <var:s> ^ <nat:8> + <nat:3> \times <var:s> ^ <nat:7> + <nat:2> \times <var:s> ^ <nat:6> + <nat:3> \times <var:s> ^ <nat:4> + <nat:2> \times <var:s> ^ <nat:3> + <nat:4> \times <var:s> ^ <nat:2> + <nat:2> } <var:J> := <nat:1> + <var:J> * <var:Y> { <var:Y> = <var:s> \land <var:J> = <nat:3> \times <var:s> ^ <nat:9> + <nat:3> \times <var:s> ^ <nat:8> + <nat:2> \times <var:s> ^ <nat:7> + <nat:3> \times <var:s> ^ <nat:5> + <nat:2> \times <var:s> ^ <nat:4> + <nat:4> \times <var:s> ^ <nat:3> + <nat:2> \times <var:s> + <nat:1> } { <var:Y> = <var:s> \land <var:J> = <nat:3> \times <var:s> ^ <nat:9> + <nat:3> \times <var:s> ^ <nat:8> + <nat:2> \times <var:s> ^ <nat:7> + <nat:3> \times <var:s> ^ <nat:5> + <nat:2> \times <var:s> ^ <nat:4> + <nat:4> \times <var:s> ^ <nat:3> + <nat:2> \times <var:s> + <nat:1> } <var:J> := <nat:2> + <var:J> * <var:Y> { <var:Y> = <var:s> \land <var:J> = <nat:3> \times <var:s> ^ <nat:10> + <nat:3> \times <var:s> ^ <nat:9> + <nat:2> \times <var:s> ^ <nat:8> + <nat:3> \times <var:s> ^ <nat:6> + <nat:2> \times <var:s> ^ <nat:5> + <nat:4> \times <var:s> ^ <nat:4> + <nat:2> \times <var:s> ^ <nat:2> + <nat:1> \times <var:s> + <nat:2> } { <var:Y> = <var:s> \land <var:J> = <nat:3> \times <var:s> ^ <nat:10> + <nat:3> \times <var:s> ^ <nat:9> + <nat:2> \times <var:s> ^ <nat:8> + <nat:3> \times <var:s> ^ <nat:6> + <nat:2> \times <var:s> ^ <nat:5> + <nat:4> \times <var:s> ^ <nat:4> + <nat:2> \times <var:s> ^ <nat:2> + <nat:1> \times <var:s> + <nat:2> } <var:J> := <nat:1> + <var:J> * <var:Y> { <var:Y> = <var:s> \land <var:J> = <nat:3> \times <var:s> ^ <nat:11> + <nat:3> \times <var:s> ^ <nat:10> + <nat:2> \times <var:s> ^ <nat:9> + <nat:3> \times <var:s> ^ <nat:7> + <nat:2> \times <var:s> ^ <nat:6> + <nat:4> \times <var:s> ^ <nat:5> + <nat:2> \times <var:s> ^ <nat:3> + <nat:1> \times <var:s> ^ <nat:2> + <nat:2> \times <var:s> + <nat:1> } \end{verbatim} \end{proof} \end{document} 
~
Require Import String . From PLF Require Import Imp . From PLF Require Import Hoare . Theorem <genH:poly_code_correct> : forall <var:s> : nat , {{ <var:Y> = <var:s> }} <var:J> := <nat:3> ; <var:J> := <nat:3> + <var:J> * <var:Y> ; <var:J> := <nat:2> + <var:J> * <var:Y> ; <var:J> := <var:J> * <var:Y> ; <var:J> := <nat:3> + <var:J> * <var:Y> ; <var:J> := <nat:2> + <var:J> * <var:Y> ; <var:J> := <nat:4> + <var:J> * <var:Y> ; <var:J> := <var:J> * <var:Y> ; <var:J> := <nat:2> + <var:J> * <var:Y> ; <var:J> := <nat:1> + <var:J> * <var:Y> ; <var:J> := <nat:2> + <var:J> * <var:Y> ; <var:J> := <nat:1> + <var:J> * <var:Y> ; <var:J> := <nat:2> + <var:J> * <var:Y> ; <var:J> := <nat:3> + <var:J> * <var:Y> {{ <var:J> = <nat:3> * <var:s> ^ <nat:13> + <nat:3> * <var:s> ^ <nat:12> + <nat:2> * <var:s> ^ <nat:11> + <nat:3> * <var:s> ^ <nat:9> + <nat:2> * <var:s> ^ <nat:8> + <nat:4> * <var:s> ^ <nat:7> + <nat:2> * <var:s> ^ <nat:5> + <nat:1> * <var:s> ^ <nat:4> + <nat:2> * <var:s> ^ <nat:3> + <nat:1> * <var:s> ^ <nat:2> + <nat:2> * <var:s> + <nat:3> }} . Proof . intros . apply hoare_seq with ( Q := ( ( <var:Y> = <var:s> /\ <var:J> = <nat:3> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:Y> = <var:s> /\ <var:J> = <nat:3> * <var:s> + <nat:3> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:Y> = <var:s> /\ <var:J> = <nat:3> * <var:s> ^ <nat:2> + <nat:3> * <var:s> + <nat:2> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:Y> = <var:s> /\ <var:J> = <nat:3> * <var:s> ^ <nat:3> + <nat:3> * <var:s> ^ <nat:2> + <nat:2> * <var:s> + ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:Y> = <var:s> /\ <var:J> = <nat:3> * <var:s> ^ <nat:4> + <nat:3> * <var:s> ^ <nat:3> + <nat:2> * <var:s> ^ <nat:2> + <nat:3> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:Y> = <var:s> /\ <var:J> = <nat:3> * <var:s> ^ <nat:5> + <nat:3> * <var:s> ^ <nat:4> + <nat:2> * <var:s> ^ <nat:3> + <nat:3> * <var:s> + <nat:2> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:Y> = <var:s> /\ <var:J> = <nat:3> * <var:s> ^ <nat:6> + <nat:3> * <var:s> ^ <nat:5> + <nat:2> * <var:s> ^ <nat:4> + <nat:3> * <var:s> ^ <nat:2> + <nat:2> * <var:s> + <nat:4> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:Y> = <var:s> /\ <var:J> = <nat:3> * <var:s> ^ <nat:7> + <nat:3> * <var:s> ^ <nat:6> + <nat:2> * <var:s> ^ <nat:5> + <nat:3> * <var:s> ^ <nat:3> + <nat:2> * <var:s> ^ <nat:2> + <nat:4> * <var:s> + ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:Y> = <var:s> /\ <var:J> = <nat:3> * <var:s> ^ <nat:8> + <nat:3> * <var:s> ^ <nat:7> + <nat:2> * <var:s> ^ <nat:6> + <nat:3> * <var:s> ^ <nat:4> + <nat:2> * <var:s> ^ <nat:3> + <nat:4> * <var:s> ^ <nat:2> + <nat:2> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:Y> = <var:s> /\ <var:J> = <nat:3> * <var:s> ^ <nat:9> + <nat:3> * <var:s> ^ <nat:8> + <nat:2> * <var:s> ^ <nat:7> + <nat:3> * <var:s> ^ <nat:5> + <nat:2> * <var:s> ^ <nat:4> + <nat:4> * <var:s> ^ <nat:3> + <nat:2> * <var:s> + <nat:1> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:Y> = <var:s> /\ <var:J> = <nat:3> * <var:s> ^ <nat:10> + <nat:3> * <var:s> ^ <nat:9> + <nat:2> * <var:s> ^ <nat:8> + <nat:3> * <var:s> ^ <nat:6> + <nat:2> * <var:s> ^ <nat:5> + <nat:4> * <var:s> ^ <nat:4> + <nat:2> * <var:s> ^ <nat:2> + <nat:1> * <var:s> + <nat:2> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:Y> = <var:s> /\ <var:J> = <nat:3> * <var:s> ^ <nat:11> + <nat:3> * <var:s> ^ <nat:10> + <nat:2> * <var:s> ^ <nat:9> + <nat:3> * <var:s> ^ <nat:7> + <nat:2> * <var:s> ^ <nat:6> + <nat:4> * <var:s> ^ <nat:5> + <nat:2> * <var:s> ^ <nat:3> + <nat:1> * <var:s> ^ <nat:2> + <nat:2> * <var:s> + <nat:1> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:Y> = <var:s> /\ <var:J> = <nat:3> * <var:s> ^ <nat:12> + <nat:3> * <var:s> ^ <nat:11> + <nat:2> * <var:s> ^ <nat:10> + <nat:3> * <var:s> ^ <nat:8> + <nat:2> * <var:s> ^ <nat:7> + <nat:4> * <var:s> ^ <nat:6> + <nat:2> * <var:s> ^ <nat:4> + <nat:1> * <var:s> ^ <nat:3> + <nat:2> * <var:s> ^ <nat:2> + <nat:1> * <var:s> + <nat:2> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:Y> = <var:s> /\ <var:J> = <nat:3> * <var:s> ^ <nat:13> + <nat:3> * <var:s> ^ <nat:12> + <nat:2> * <var:s> ^ <nat:11> + <nat:3> * <var:s> ^ <nat:9> + <nat:2> * <var:s> ^ <nat:8> + <nat:4> * <var:s> ^ <nat:7> + <nat:2> * <var:s> ^ <nat:5> + <nat:1> * <var:s> ^ <nat:4> + <nat:2> * <var:s> ^ <nat:3> + <nat:1> * <var:s> ^ <nat:2> + <nat:2> * <var:s> + <nat:3> ) ) %assertion ) . all : eapply hoare_consequence_pre ; try ( apply hoare_asgn || assn_auto'' ) . Qed . 