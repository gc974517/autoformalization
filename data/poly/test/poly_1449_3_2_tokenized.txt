\begin{document} \begin{theorem} Consider the following series of instructions as follows \begin{verbatim} <var:J> := <nat:1> ; <var:J> := <nat:1> + <var:J> * <var:F> ; <var:J> := <nat:4> + <var:J> * <var:F> \end{verbatim} Assume that we have $ <var:F> = <var:r> $ , given natural coefficients $ <var:r> $ , prior to the execution of our series of commands it holds that we see $ <var:J> = <nat:1> \cdot <var:r> ^ <nat:2> + <nat:1> \cdot <var:r> + <nat:4> $ . \end{theorem} \begin{proof} The argument for the series of commands can be done with typical Hoare techniques . Focusing on the next pieces of code contained in the segment of code , \[ \begin{tabular} {rcl} \{ <var:F> = <var:r> \} & <var:J> := <nat:1> & \{ <var:F> = <var:r> \land <var:J> = <nat:1> \} \\ \{ <var:F> = <var:r> \land <var:J> = <nat:1> \} & <var:J> := <nat:1> + <var:J> * <var:F> & \{ <var:F> = <var:r> \land <var:J> = <nat:1> * <var:r> + <nat:1> \} \\ \{ <var:F> = <var:r> \land <var:J> = <nat:1> * <var:r> + <nat:1> \} & <var:J> := <nat:4> + <var:J> * <var:F& \{ <var:F> = <var:r> \land <var:J> = <nat:1> * <var:r> ^ <nat:2> + <nat:1> * <var:r> + <nat:4> \} \end{tabular} \end{proof} \end{document} 
~
Require Import String . From PLF Require Import Imp . From PLF Require Import Hoare . Theorem <genH:poly_code_correct> : forall <var:r> : nat , {{ <var:F> = <var:r> }} <var:J> := <nat:1> ; <var:J> := <nat:1> + <var:J> * <var:F> ; <var:J> := <nat:4> + <var:J> * <var:F> {{ <var:J> = <nat:1> * <var:r> ^ <nat:2> + <nat:1> * <var:r> + <nat:4> }} . Proof . intros . apply hoare_seq with ( Q := ( ( <var:F> = <var:r> /\ <var:J> = <nat:1> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:F> = <var:r> /\ <var:J> = <nat:1> * <var:r> + <nat:1> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:F> = <var:r> /\ <var:J> = <nat:1> * <var:r> ^ <nat:2> + <nat:1> * <var:r> + <nat:4> ) ) %assertion ) . all : eapply hoare_consequence_pre ; try ( apply hoare_asgn || assn_auto'' ) . Qed . 