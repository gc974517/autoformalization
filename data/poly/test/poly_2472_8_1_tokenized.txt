\begin{document} \begin{theorem} Take the following list of instructions in \emph{Imp} such that \begin{verbatim} <var:v1> := <var:g> ; <var:v2> := <var:v1> * <var:g> ; <var:v0> := <nat:7> ; <var:v1> := <var:v1> * <nat:5> ; <var:v2> := <var:v2> * <nat:9> ; <var:U> := <var:v2> <var:U> := <var:U> + <var:v1> <var:U> := <var:U> + <var:v0> \end{verbatim} Allowing $ <var:g> = <var:R> $ before executing this series of commands it holds that we see $ <var:U> = <nat:9> \cdot <var:R> ^ <nat:2> + <nat:5> \cdot <var:R> + <nat:7> $ once list of commands has executed . \end{theorem} \begin{proof} The application of Hoare techniques yields : \begin{eqnarray} \{ <var:g> = <var:R> \} \\ <var:v1> := <var:g> ; \\ \{ <var:g> = <var:R> \land <var:v1> = <var:R> \} \\ <var:v2> := <var:v1> * <var:g> ; \\ \{ <var:g> = <var:R> \land <var:v1> = <var:R> \land <var:v2> = <var:R> ^ <nat:2> \} \\ <var:v0> := <nat:7> ; \\ \{ <var:g> = <var:R> \land <var:v1> = <var:R> \land <var:v2> = <var:R> ^ <nat:2> \land <var:v0> = <nat:7> \} \\ <var:v1> := <var:v1> * <nat:5> ; \\ \{ <var:g> = <var:R> \land <var:v1> = <nat:5> \times <var:R> \land <var:v2> = <var:R> ^ <nat:2> \land <var:v0> = <nat:7> \} \\ <var:v2> := <var:v2> * <nat:9> ; \\ \{ <var:g> = <var:R> \land <var:v1> = <nat:5> \times <var:R> \land <var:v2> = <nat:9> \times <var:R> ^ <nat:2> \land <var:v0> = <nat:7> \} \\ <var:U> := <var:v2> \\ \{ <var:g> = <var:R> \land <var:v1> = <nat:5> \times <var:R> \land <var:v0> = <nat:7> \land <var:U> = <nat:9> \times <var:R> ^ <nat:2> \} \\ <var:U> := <var:U> + <var:v1> \\ \{ <var:g> = <var:R> \land <var:v0> = <nat:7> \land <var:U> = <nat:9> \times <var:R> ^ <nat:2> + <nat:5> \times <var:R> \} \\ <var:U> := <var:U> + <var:v0> \\ \{ <var:g> = <var:R> \land <var:U> = <nat:9> \times <var:R> ^ <nat:2> + <nat:5> \times <var:R> + <nat:7> \} \end{eqnarray} Considering the preceding argument , the set of instructions is demonstrated to be correct . \end{proof} \end{document} 
~
Require Import String . From PLF Require Import Imp . From PLF Require Import Hoare . Definition <var:v0> : string := " <var:v0> " . Definition <var:v1> : string := " <var:v1> " . Definition <var:v2> : string := " <var:v2> " . Theorem <genH:poly_code_correct> : forall <var:R> : nat , {{ <var:g> = <var:R> }} <var:v1> := <var:g> ; <var:v2> := <var:v1> * <var:g> ; <var:v0> := <nat:7> ; <var:v1> := <var:v1> * <nat:5> ; <var:v2> := <var:v2> * <nat:9> ; <var:U> := <var:v2> <var:U> := <var:U> + <var:v1> <var:U> := <var:U> + <var:v0> {{ <var:U> = <nat:9> * <var:R> ^ <nat:2> + <nat:5> * <var:R> + <nat:7> }} . Proof . intros . apply hoare_seq with ( Q := ( ( <var:g> = <var:R> /\ <var:v1> = <var:R> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:g> = <var:R> /\ <var:v1> = <var:R> /\ <var:v2> = <var:R> ^ <nat:2> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:g> = <var:R> /\ <var:v1> = <var:R> /\ <var:v2> = <var:R> ^ <nat:2> /\ <var:v0> = <nat:7> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:g> = <var:R> /\ <var:v1> = <nat:5> * <var:R> /\ <var:v2> = <var:R> ^ <nat:2> /\ <var:v0> = <nat:7> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:g> = <var:R> /\ <var:v1> = <nat:5> * <var:R> /\ <var:v2> = <nat:9> * <var:R> ^ <nat:2> /\ <var:v0> = <nat:7> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:g> = <var:R> /\ <var:v1> = <nat:5> * <var:R> /\ <var:v0> = <nat:7> /\ <var:U> = <nat:9> * <var:R> ^ <nat:2> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:g> = <var:R> /\ <var:v0> = <nat:7> /\ <var:U> = <nat:9> * <var:R> ^ <nat:2> + <nat:5> * <var:R> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:g> = <var:R> /\ <var:U> = <nat:9> * <var:R> ^ <nat:2> + <nat:5> * <var:R> + <nat:7> ) ) %assertion ) . all : eapply hoare_consequence_pre ; try ( apply hoare_asgn || assn_auto'' ) . Qed . 