\begin{document} \begin{definition} Consider a series of instructions <def:poly> in \emph{Imp} as follows \begin{verbatim} <var:Q1> := <var:E> ; <var:Q2> := <var:Q1> * <var:E> ; <var:Q3> := <var:Q2> * <var:E> ; <var:Q4> := <var:Q3> * <var:E> ; <var:Q0> := <nat:4> ; <var:Q1> := <var:Q1> * <nat:9> ; <var:Q2> := <var:Q2> * <nat:5> ; <var:Q3> := <var:Q3> * <nat:1> ; <var:Q4> := <var:Q4> * <nat:4> ; <var:b> := <var:Q4> <var:b> := <var:b> + <var:Q3> <var:b> := <var:b> + <var:Q2> <var:b> := <var:b> + <var:Q1> <var:b> := <var:b> + <var:Q0> \end{verbatim} \end{definition} \begin{theorem} Consider a segment of code <def:poly> in \emph{Imp} . Allow it to hold that $ <var:E> = <var:o> $ prior to executing our set of instructions , it must be that we see $ <var:b> = <nat:4> \times <var:o> ^ <nat:4> + <nat:1> \times <var:o> ^ <nat:3> + <nat:5> \times <var:o> ^ <nat:2> + <nat:9> \times <var:o> + <nat:4> $ . \end{theorem} \begin{proof} The argument for the list of commands can be shown by usual Hoare reasoning . Moving onward , \[ \begin{tabular} {rcl} \{ <var:E> = <var:o> \} & <var:Q1> := <var:E> & \{ <var:E> = <var:o> \land <var:Q1> = <var:o> \} \\ \{ <var:E> = <var:o> \land <var:Q1> = <var:o> \} & <var:Q2> := <var:Q1> * <var:E> & \{ <var:E> = <var:o> \land <var:Q1> = <var:o> \land <var:Q2> = <var:o> ^ <nat:2> \} \\ \{ <var:E> = <var:o> \land <var:Q1> = <var:o> \land <var:Q2> = <var:o> ^ <nat:2> \} & <var:Q3> := <var:Q2> * <var:E> & \{ <var:E> = <var:o> \land <var:Q1> = <var:o> \land <var:Q2> = <var:o> ^ <nat:2> \land <var:Q3> = <var:o> ^ <nat:3> \} \\ \{ <var:E> = <var:o> \land <var:Q1> = <var:o> \land <var:Q2> = <var:o> ^ <nat:2> \land <var:Q3> = <var:o> ^ <nat:3> \} & <var:Q4> := <var:Q3> * <var:E> & \{ <var:E> = <var:o> \land <var:Q1> = <var:o> \land <var:Q2> = <var:o> ^ <nat:2> \land <var:Q3> = <var:o> ^ <nat:3> \land <var:Q4> = <var:o> ^ <nat:4> \} \\ \{ <var:E> = <var:o> \land <var:Q1> = <var:o> \land <var:Q2> = <var:o> ^ <nat:2> \land <var:Q3> = <var:o> ^ <nat:3> \land <var:Q4> = <var:o> ^ <nat:4> \} & <var:Q0> := <nat:4> & \{ <var:E> = <var:o> \land <var:Q1> = <var:o> \land <var:Q2> = <var:o> ^ <nat:2> \land <var:Q3> = <var:o> ^ <nat:3> \land <var:Q4> = <var:o> ^ <nat:4> \land <var:Q0> = <nat:4> \} \\ \{ <var:E> = <var:o> \land <var:Q1> = <var:o> \land <var:Q2> = <var:o> ^ <nat:2> \land <var:Q3> = <var:o> ^ <nat:3> \land <var:Q4> = <var:o> ^ <nat:4> \land <var:Q0> = <nat:4> \} & <var:Q1> := <var:Q1> * <nat:9> & \{ <var:E> = <var:o> \land <var:Q1> = <nat:9> \cdot <var:o> \land <var:Q2> = <var:o> ^ <nat:2> \land <var:Q3> = <var:o> ^ <nat:3> \land <var:Q4> = <var:o> ^ <nat:4> \land <var:Q0> = <nat:4> \} \\ \{ <var:E> = <var:o> \land <var:Q1> = <nat:9> \cdot <var:o> \land <var:Q2> = <var:o> ^ <nat:2> \land <var:Q3> = <var:o> ^ <nat:3> \land <var:Q4> = <var:o> ^ <nat:4> \land <var:Q0> = <nat:4> \} & <var:Q2> := <var:Q2> * <nat:5> & \{ <var:E> = <var:o> \land <var:Q1> = <nat:9> \cdot <var:o> \land <var:Q2> = <nat:5> \cdot <var:o> ^ <nat:2> \land <var:Q3> = <var:o> ^ <nat:3> \land <var:Q4> = <var:o> ^ <nat:4> \land <var:Q0> = <nat:4> \} \\ \{ <var:E> = <var:o> \land <var:Q1> = <nat:9> \cdot <var:o> \land <var:Q2> = <nat:5> \cdot <var:o> ^ <nat:2> \land <var:Q3> = <var:o> ^ <nat:3> \land <var:Q4> = <var:o> ^ <nat:4> \land <var:Q0> = <nat:4> \} & <var:Q3> := <var:Q3> * <nat:1> & \{ <var:E> = <var:o> \land <var:Q1> = <nat:9> \cdot <var:o> \land <var:Q2> = <nat:5> \cdot <var:o> ^ <nat:2> \land <var:Q3> = <nat:1> \cdot <var:o> ^ <nat:3> \land <var:Q4> = <var:o> ^ <nat:4> \land <var:Q0> = <nat:4> \} \\ \{ <var:E> = <var:o> \land <var:Q1> = <nat:9> \cdot <var:o> \land <var:Q2> = <nat:5> \cdot <var:o> ^ <nat:2> \land <var:Q3> = <nat:1> \cdot <var:o> ^ <nat:3> \land <var:Q4> = <var:o> ^ <nat:4> \land <var:Q0> = <nat:4> \} & <var:Q4> := <var:Q4> * <nat:4> & \{ <var:E> = <var:o> \land <var:Q1> = <nat:9> \cdot <var:o> \land <var:Q2> = <nat:5> \cdot <var:o> ^ <nat:2> \land <var:Q3> = <nat:1> \cdot <var:o> ^ <nat:3> \land <var:Q4> = <nat:4> \cdot <var:o> ^ <nat:4> \land <var:Q0> = <nat:4> \} \\ \{ <var:E> = <var:o> \land <var:Q1> = <nat:9> \cdot <var:o> \land <var:Q2> = <nat:5> \cdot <var:o> ^ <nat:2> \land <var:Q3> = <nat:1> \cdot <var:o> ^ <nat:3> \land <var:Q4> = <nat:4> \cdot <var:o> ^ <nat:4> \land <var:Q0> = <nat:4> \} & <var:b> := <var:Q4& \{ <var:E> = <var:o> \land <var:Q1> = <nat:9> \cdot <var:o> \land <var:Q2> = <nat:5> \cdot <var:o> ^ <nat:2> \land <var:Q3> = <nat:1> \cdot <var:o> ^ <nat:3> \land <var:Q0> = <nat:4> \land <var:b> = <nat:4> \cdot <var:o> ^ <nat:4> \} \\ \{ <var:E> = <var:o> \land <var:Q1> = <nat:9> \cdot <var:o> \land <var:Q2> = <nat:5> \cdot <var:o> ^ <nat:2> \land <var:Q3> = <nat:1> \cdot <var:o> ^ <nat:3> \land <var:Q0> = <nat:4> \land <var:b> = <nat:4> \cdot <var:o> ^ <nat:4> \} & <var:b> := <var:b> + <var:Q3& \{ <var:E> = <var:o> \land <var:Q1> = <nat:9> \cdot <var:o> \land <var:Q2> = <nat:5> \cdot <var:o> ^ <nat:2> \land <var:Q0> = <nat:4> \land <var:b> = <nat:4> \cdot <var:o> ^ <nat:4> + <nat:1> \cdot <var:o> ^ <nat:3> \} \\ \{ <var:E> = <var:o> \land <var:Q1> = <nat:9> \cdot <var:o> \land <var:Q2> = <nat:5> \cdot <var:o> ^ <nat:2> \land <var:Q0> = <nat:4> \land <var:b> = <nat:4> \cdot <var:o> ^ <nat:4> + <nat:1> \cdot <var:o> ^ <nat:3> \} & <var:b> := <var:b> + <var:Q2& \{ <var:E> = <var:o> \land <var:Q1> = <nat:9> \cdot <var:o> \land <var:Q0> = <nat:4> \land <var:b> = <nat:4> \cdot <var:o> ^ <nat:4> + <nat:1> \cdot <var:o> ^ <nat:3> + <nat:5> \cdot <var:o> ^ <nat:2> \} \\ \{ <var:E> = <var:o> \land <var:Q1> = <nat:9> \cdot <var:o> \land <var:Q0> = <nat:4> \land <var:b> = <nat:4> \cdot <var:o> ^ <nat:4> + <nat:1> \cdot <var:o> ^ <nat:3> + <nat:5> \cdot <var:o> ^ <nat:2> \} & <var:b> := <var:b> + <var:Q1& \{ <var:E> = <var:o> \land <var:Q0> = <nat:4> \land <var:b> = <nat:4> \cdot <var:o> ^ <nat:4> + <nat:1> \cdot <var:o> ^ <nat:3> + <nat:5> \cdot <var:o> ^ <nat:2> + <nat:9> \cdot <var:o> \} \end{tabular} This is deduced through the environment update scheme given by usual Hoare reasoning . Taking another step toward the proceeding statement seen in the set of instructions , \[ \begin{tabular} {rcl} \{ <var:E> = <var:o> \} & <var:Q1> := <var:E> & \{ <var:E> = <var:o> \land <var:Q1> = <var:o> \} \end{tabular} \end{proof} \end{document} 
~
Require Import String . From PLF Require Import Imp . From PLF Require Import Hoare . Definition <var:Q0> : string := " <var:Q0> " . Definition <var:Q1> : string := " <var:Q1> " . Definition <var:Q2> : string := " <var:Q2> " . Definition <var:Q3> : string := " <var:Q3> " . Definition <var:Q4> : string := " <var:Q4> " . Definition <def:poly> := <var:Q1> := <var:E> ; <var:Q2> := <var:Q1> * <var:E> ; <var:Q3> := <var:Q2> * <var:E> ; <var:Q4> := <var:Q3> * <var:E> ; <var:Q0> := <nat:4> ; <var:Q1> := <var:Q1> * <nat:9> ; <var:Q2> := <var:Q2> * <nat:5> ; <var:Q3> := <var:Q3> * <nat:1> ; <var:Q4> := <var:Q4> * <nat:4> ; <var:b> := <var:Q4> <var:b> := <var:b> + <var:Q3> <var:b> := <var:b> + <var:Q2> <var:b> := <var:b> + <var:Q1> <var:b> := <var:b> + <var:Q0> . Theorem <genH:poly_code_correct> : forall <var:o> : nat , {{ <var:E> = <var:o> }} <def:poly> {{ <var:b> = <nat:4> * <var:o> ^ <nat:4> + <nat:1> * <var:o> ^ <nat:3> + <nat:5> * <var:o> ^ <nat:2> + <nat:9> * <var:o> + <nat:4> }} . Proof . intros . apply hoare_seq with ( Q := ( ( <var:E> = <var:o> /\ <var:Q1> = <var:o> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:E> = <var:o> /\ <var:Q1> = <var:o> /\ <var:Q2> = <var:o> ^ <nat:2> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:E> = <var:o> /\ <var:Q1> = <var:o> /\ <var:Q2> = <var:o> ^ <nat:2> /\ <var:Q3> = <var:o> ^ <nat:3> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:E> = <var:o> /\ <var:Q1> = <var:o> /\ <var:Q2> = <var:o> ^ <nat:2> /\ <var:Q3> = <var:o> ^ <nat:3> /\ <var:Q4> = <var:o> ^ <nat:4> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:E> = <var:o> /\ <var:Q1> = <var:o> /\ <var:Q2> = <var:o> ^ <nat:2> /\ <var:Q3> = <var:o> ^ <nat:3> /\ <var:Q4> = <var:o> ^ <nat:4> /\ <var:Q0> = <nat:4> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:E> = <var:o> /\ <var:Q1> = <nat:9> * <var:o> /\ <var:Q2> = <var:o> ^ <nat:2> /\ <var:Q3> = <var:o> ^ <nat:3> /\ <var:Q4> = <var:o> ^ <nat:4> /\ <var:Q0> = <nat:4> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:E> = <var:o> /\ <var:Q1> = <nat:9> * <var:o> /\ <var:Q2> = <nat:5> * <var:o> ^ <nat:2> /\ <var:Q3> = <var:o> ^ <nat:3> /\ <var:Q4> = <var:o> ^ <nat:4> /\ <var:Q0> = <nat:4> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:E> = <var:o> /\ <var:Q1> = <nat:9> * <var:o> /\ <var:Q2> = <nat:5> * <var:o> ^ <nat:2> /\ <var:Q3> = <nat:1> * <var:o> ^ <nat:3> /\ <var:Q4> = <var:o> ^ <nat:4> /\ <var:Q0> = <nat:4> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:E> = <var:o> /\ <var:Q1> = <nat:9> * <var:o> /\ <var:Q2> = <nat:5> * <var:o> ^ <nat:2> /\ <var:Q3> = <nat:1> * <var:o> ^ <nat:3> /\ <var:Q4> = <nat:4> * <var:o> ^ <nat:4> /\ <var:Q0> = <nat:4> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:E> = <var:o> /\ <var:Q1> = <nat:9> * <var:o> /\ <var:Q2> = <nat:5> * <var:o> ^ <nat:2> /\ <var:Q3> = <nat:1> * <var:o> ^ <nat:3> /\ <var:Q0> = <nat:4> /\ <var:b> = <nat:4> * <var:o> ^ <nat:4> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:E> = <var:o> /\ <var:Q1> = <nat:9> * <var:o> /\ <var:Q2> = <nat:5> * <var:o> ^ <nat:2> /\ <var:Q0> = <nat:4> /\ <var:b> = <nat:4> * <var:o> ^ <nat:4> + <nat:1> * <var:o> ^ <nat:3> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:E> = <var:o> /\ <var:Q1> = <nat:9> * <var:o> /\ <var:Q0> = <nat:4> /\ <var:b> = <nat:4> * <var:o> ^ <nat:4> + <nat:1> * <var:o> ^ <nat:3> + <nat:5> * <var:o> ^ <nat:2> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:E> = <var:o> /\ <var:Q0> = <nat:4> /\ <var:b> = <nat:4> * <var:o> ^ <nat:4> + <nat:1> * <var:o> ^ <nat:3> + <nat:5> * <var:o> ^ <nat:2> + <nat:9> * <var:o> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:E> = <var:o> /\ <var:b> = <nat:4> * <var:o> ^ <nat:4> + <nat:1> * <var:o> ^ <nat:3> + <nat:5> * <var:o> ^ <nat:2> + <nat:9> * <var:o> + <nat:4> ) ) %assertion ) . all : eapply hoare_consequence_pre ; try ( apply hoare_asgn || assn_auto'' ) . Qed . 