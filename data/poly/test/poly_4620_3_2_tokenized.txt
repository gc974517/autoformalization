\begin{document} \begin{theorem} We define the following code such that \begin{verbatim} <var:n> := <nat:4> ; <var:n> := <nat:2> + <var:n> * <var:g> ; <var:n> := <nat:2> + <var:n> * <var:g> \end{verbatim} Allowing $ <var:g> = <var:h> $ prior to the execution of the program it follows that $ <var:n> = <nat:4> \cdot <var:h> ^ <nat:2> + <nat:2> \cdot <var:h> + <nat:2> $ . \end{theorem} \begin{proof} Proving correctness for this list of instructions is evident through this decorated series of commands . \begin{eqnarray} \{ <var:g> = <var:h> \} \\ <var:n> := <nat:4> ; \\ \{ <var:g> = <var:h> \land <var:n> = <nat:4> \} \\ <var:n> := <nat:2> + <var:n> * <var:g> ; \\ \{ <var:g> = <var:h> \land <var:n> = <nat:4> \times <var:h> + <nat:2> \} \\ <var:n> := <nat:2> + <var:n> * <var:g> \\ \{ <var:g> = <var:h> \land <var:n> = <nat:4> \times <var:h> ^ <nat:2> + <nat:2> \times <var:h> + <nat:2> \} \end{eqnarray} Applying standard Hoare logic finishes the proof . \end{proof} \end{document} 
~
Require Import String . From PLF Require Import Imp . From PLF Require Import Hoare . Theorem <genH:poly_code_correct> : forall <var:h> : nat , {{ <var:g> = <var:h> }} <var:n> := <nat:4> ; <var:n> := <nat:2> + <var:n> * <var:g> ; <var:n> := <nat:2> + <var:n> * <var:g> {{ <var:n> = <nat:4> * <var:h> ^ <nat:2> + <nat:2> * <var:h> + <nat:2> }} . Proof . intros . apply hoare_seq with ( Q := ( ( <var:g> = <var:h> /\ <var:n> = <nat:4> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:g> = <var:h> /\ <var:n> = <nat:4> * <var:h> + <nat:2> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:g> = <var:h> /\ <var:n> = <nat:4> * <var:h> ^ <nat:2> + <nat:2> * <var:h> + <nat:2> ) ) %assertion ) . all : eapply hoare_consequence_pre ; try ( apply hoare_asgn || assn_auto'' ) . Qed . 