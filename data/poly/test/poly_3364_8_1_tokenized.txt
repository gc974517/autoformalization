\begin{document} \begin{theorem} Let the following segment of code such that \begin{verbatim} <var:a1> := <var:B> ; <var:a2> := <var:a1> * <var:B> ; <var:a0> := <nat:9> ; <var:a1> := <var:a1> * <nat:9> ; <var:a2> := <var:a2> * <nat:2> ; <var:i> := <var:a2> <var:i> := <var:i> + <var:a1> <var:i> := <var:i> + <var:a0> \end{verbatim} Assume --- given all natural coefficients $ <var:M> $ --- that we have $ <var:B> = <var:M> $ ahead of interpreting the program , then we see $ <var:i> = <nat:2> \times <var:M> ^ <nat:2> + <nat:9> \times <var:M> + <nat:9> $ . \end{theorem} \begin{proof} Observe the following decorated series of commands . \begin{eqnarray} \{ <var:B> = <var:M> \} \\ <var:a1> := <var:B> ; \\ \{ <var:B> = <var:M> \land <var:a1> = <var:M> \} \\ <var:a2> := <var:a1> * <var:B> ; \\ \{ <var:B> = <var:M> \land <var:a1> = <var:M> \land <var:a2> = <var:M> ^ <nat:2> \} \\ <var:a0> := <nat:9> ; \\ \{ <var:B> = <var:M> \land <var:a1> = <var:M> \land <var:a2> = <var:M> ^ <nat:2> \land <var:a0> = <nat:9> \} \\ <var:a1> := <var:a1> * <nat:9> ; \\ \{ <var:B> = <var:M> \land <var:a1> = <nat:9> \cdot <var:M> \land <var:a2> = <var:M> ^ <nat:2> \land <var:a0> = <nat:9> \} \\ <var:a2> := <var:a2> * <nat:2> ; \\ \{ <var:B> = <var:M> \land <var:a1> = <nat:9> \cdot <var:M> \land <var:a2> = <nat:2> \cdot <var:M> ^ <nat:2> \land <var:a0> = <nat:9> \} \\ <var:i> := <var:a2> \\ \{ <var:B> = <var:M> \land <var:a1> = <nat:9> \cdot <var:M> \land <var:a0> = <nat:9> \land <var:i> = <nat:2> \cdot <var:M> ^ <nat:2> \} \\ <var:i> := <var:i> + <var:a1> \\ \{ <var:B> = <var:M> \land <var:a0> = <nat:9> \land <var:i> = <nat:2> \cdot <var:M> ^ <nat:2> + <nat:9> \cdot <var:M> \} \\ <var:i> := <var:i> + <var:a0> \\ \{ <var:B> = <var:M> \land <var:i> = <nat:2> \cdot <var:M> ^ <nat:2> + <nat:9> \cdot <var:M> + <nat:9> \} \end{eqnarray} Applying usual Hoare reasoning completes the argument . \end{proof} \end{document} 
~
Require Import String . From PLF Require Import Imp . From PLF Require Import Hoare . Definition <var:a0> : string := " <var:a0> " . Definition <var:a1> : string := " <var:a1> " . Definition <var:a2> : string := " <var:a2> " . Theorem <genH:poly_code_correct> : forall <var:M> : nat , {{ <var:B> = <var:M> }} <var:a1> := <var:B> ; <var:a2> := <var:a1> * <var:B> ; <var:a0> := <nat:9> ; <var:a1> := <var:a1> * <nat:9> ; <var:a2> := <var:a2> * <nat:2> ; <var:i> := <var:a2> <var:i> := <var:i> + <var:a1> <var:i> := <var:i> + <var:a0> {{ <var:i> = <nat:2> * <var:M> ^ <nat:2> + <nat:9> * <var:M> + <nat:9> }} . Proof . intros . apply hoare_seq with ( Q := ( ( <var:B> = <var:M> /\ <var:a1> = <var:M> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:B> = <var:M> /\ <var:a1> = <var:M> /\ <var:a2> = <var:M> ^ <nat:2> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:B> = <var:M> /\ <var:a1> = <var:M> /\ <var:a2> = <var:M> ^ <nat:2> /\ <var:a0> = <nat:9> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:B> = <var:M> /\ <var:a1> = <nat:9> * <var:M> /\ <var:a2> = <var:M> ^ <nat:2> /\ <var:a0> = <nat:9> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:B> = <var:M> /\ <var:a1> = <nat:9> * <var:M> /\ <var:a2> = <nat:2> * <var:M> ^ <nat:2> /\ <var:a0> = <nat:9> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:B> = <var:M> /\ <var:a1> = <nat:9> * <var:M> /\ <var:a0> = <nat:9> /\ <var:i> = <nat:2> * <var:M> ^ <nat:2> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:B> = <var:M> /\ <var:a0> = <nat:9> /\ <var:i> = <nat:2> * <var:M> ^ <nat:2> + <nat:9> * <var:M> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:B> = <var:M> /\ <var:i> = <nat:2> * <var:M> ^ <nat:2> + <nat:9> * <var:M> + <nat:9> ) ) %assertion ) . all : eapply hoare_consequence_pre ; try ( apply hoare_asgn || assn_auto'' ) . Qed . 