\begin{document} \begin{theorem} We define a series of commands as follows \begin{verbatim} <var:Q0> := <nat:5> ; <var:Q1> := <nat:8> ; <var:Q1> := <var:Q1> * <var:g> ; <var:Q2> := <nat:7> ; <var:Q2> := <var:Q2> * <var:g> ; <var:Q2> := <var:Q2> * <var:g> ; <var:Y> := <var:Q2> ; <var:Y> := <var:Y> + <var:Q1> ; <var:Y> := <var:Y> + <var:Q0> \end{verbatim} Assuming it to be that $ <var:g> = <var:X> $ before interpreting the series of commands , it follows that we see $ <var:Y> = <nat:7> * <var:X> ^ <nat:2> + <nat:8> * <var:X> + <nat:5> $ . \end{theorem} \begin{proof} Using standard Hoare techniques results in : \begin{eqnarray} \{ <var:g> = <var:X> \} \\ <var:Q0> := <nat:5> ; \\ \{ <var:g> = <var:X> \land <var:Q0> = <nat:5> \} \\ <var:Q1> := <nat:8> ; \\ \{ <var:g> = <var:X> \land <var:Q0> = <nat:5> \land <var:Q1> = <nat:8> \} \\ <var:Q1> := <var:Q1> * <var:g> ; \\ \{ <var:g> = <var:X> \land <var:Q0> = <nat:5> \land <var:Q1> = <nat:8> * <var:X> \} \\ <var:Q2> := <nat:7> ; \\ \{ <var:g> = <var:X> \land <var:Q0> = <nat:5> \land <var:Q1> = <nat:8> * <var:X> \land <var:Q2> = <nat:7> \} \\ <var:Q2> := <var:Q2> * <var:g> ; \\ \{ <var:g> = <var:X> \land <var:Q0> = <nat:5> \land <var:Q1> = <nat:8> * <var:X> \land <var:Q2> = <nat:7> * <var:X> \} \\ <var:Q2> := <var:Q2> * <var:g> ; \\ \{ <var:g> = <var:X> \land <var:Q0> = <nat:5> \land <var:Q1> = <nat:8> * <var:X> \land <var:Q2> = <nat:7> * <var:X> ^ <nat:2> \} \\ <var:Y> := <var:Q2> ; \\ \{ <var:g> = <var:X> \land <var:Q0> = <nat:5> \land <var:Q1> = <nat:8> * <var:X> \land <var:Y> = <nat:7> * <var:X> ^ <nat:2> \} \\ <var:Y> := <var:Y> + <var:Q1> ; \\ \{ <var:g> = <var:X> \land <var:Q0> = <nat:5> \land <var:Y> = <nat:7> * <var:X> ^ <nat:2> + <nat:8> * <var:X> \} \\ <var:Y> := <var:Y> + <var:Q0> \\ \{ <var:g> = <var:X> \land <var:Y> = <nat:7> * <var:X> ^ <nat:2> + <nat:8> * <var:X> + <nat:5> \} \end{eqnarray} As a consequence , our code segment is demonstrated to be correct . \end{proof} \end{document} 
~
Require Import String . From PLF Require Import Imp . From PLF Require Import Hoare . Definition <var:Q0> : string := " <var:Q0> " . Definition <var:Q1> : string := " <var:Q1> " . Definition <var:Q2> : string := " <var:Q2> " . Theorem <genH:poly_code_correct> : forall <var:X> : nat , {{ <var:g> = <var:X> }} <var:Q0> := <nat:5> ; <var:Q1> := <nat:8> ; <var:Q1> := <var:Q1> * <var:g> ; <var:Q2> := <nat:7> ; <var:Q2> := <var:Q2> * <var:g> ; <var:Q2> := <var:Q2> * <var:g> ; <var:Y> := <var:Q2> ; <var:Y> := <var:Y> + <var:Q1> ; <var:Y> := <var:Y> + <var:Q0> {{ <var:Y> = <nat:7> * <var:X> ^ <nat:2> + <nat:8> * <var:X> + <nat:5> }} . Proof . intros . apply hoare_seq with ( Q := ( ( <var:g> = <var:X> /\ <var:Q0> = <nat:5> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:g> = <var:X> /\ <var:Q0> = <nat:5> /\ <var:Q1> = <nat:8> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:g> = <var:X> /\ <var:Q0> = <nat:5> /\ <var:Q1> = <nat:8> * <var:X> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:g> = <var:X> /\ <var:Q0> = <nat:5> /\ <var:Q1> = <nat:8> * <var:X> /\ <var:Q2> = <nat:7> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:g> = <var:X> /\ <var:Q0> = <nat:5> /\ <var:Q1> = <nat:8> * <var:X> /\ <var:Q2> = <nat:7> * <var:X> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:g> = <var:X> /\ <var:Q0> = <nat:5> /\ <var:Q1> = <nat:8> * <var:X> /\ <var:Q2> = <nat:7> * <var:X> ^ <nat:2> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:g> = <var:X> /\ <var:Q0> = <nat:5> /\ <var:Q1> = <nat:8> * <var:X> /\ <var:Y> = <nat:7> * <var:X> ^ <nat:2> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:g> = <var:X> /\ <var:Q0> = <nat:5> /\ <var:Y> = <nat:7> * <var:X> ^ <nat:2> + <nat:8> * <var:X> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:g> = <var:X> /\ <var:Y> = <nat:7> * <var:X> ^ <nat:2> + <nat:8> * <var:X> + <nat:5> ) ) %assertion ) . all : eapply hoare_consequence_pre ; try ( apply hoare_asgn || assn_auto'' ) . Qed . 