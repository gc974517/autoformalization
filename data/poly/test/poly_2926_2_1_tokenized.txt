\begin{document} \begin{definition} Consider the following set of commands <def:poly> in \emph{Imp} such that \begin{verbatim} <var:T0> := <nat:3> ; <var:d> := <var:T0> \end{verbatim} \end{definition} \begin{theorem} Given that we have $ <var:u> = <var:l> $ prior to the evaluation of this code segment it holds that $ <var:d> = <nat:3> $ after list of commands terminates . \end{theorem} \begin{proof} Utilizing typical Hoare reasoning yields : \begin{eqnarray} \{ <var:u> = <var:l> \} \\ <var:T0> := <nat:3> ; \\ \{ <var:u> = <var:l> \land <var:T0> = <nat:3> \} \\ <var:d> := <var:T0> \\ \{ <var:u> = <var:l> \land <var:d> = <nat:3> \} \end{eqnarray} Considering the preceding argument , our code segment has been shown to be correct . \end{proof} \end{document} 
~
Require Import String . From PLF Require Import Imp . From PLF Require Import Hoare . Definition <var:T0> : string := " <var:T0> " . Definition <def:poly> := <var:T0> := <nat:3> ; <var:d> := <var:T0> . Theorem <genH:poly_code_correct> : forall <var:l> : nat , {{ <var:u> = <var:l> }} <def:poly> {{ <var:d> = <nat:3> }} . Proof . intros . apply hoare_seq with ( Q := ( ( <var:u> = <var:l> /\ <var:T0> = <nat:3> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:u> = <var:l> /\ <var:d> = <nat:3> ) ) %assertion ) . all : eapply hoare_consequence_pre ; try ( apply hoare_asgn || assn_auto'' ) . Qed . 