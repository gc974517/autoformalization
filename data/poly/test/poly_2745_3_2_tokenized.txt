\begin{document} \begin{theorem} Consider the following set of instructions in \emph{Imp} as follows \begin{verbatim} <var:t> := <nat:1> ; <var:t> := <nat:3> + <var:t> * <var:p> ; <var:t> := <nat:4> + <var:t> * <var:p> \end{verbatim} Assume $ <var:p> = <var:y> $ before evaluating the program , it holds that $ <var:t> = <nat:1> \times <var:y> ^ <nat:2> + <nat:3> \times <var:y> + <nat:4> $ . \end{theorem} \begin{proof} The application of Hoare reasoning yields : \begin{eqnarray} \{ <var:p> = <var:y> \} \\ <var:t> := <nat:1> ; \\ \{ <var:p> = <var:y> \land <var:t> = <nat:1> \} \\ <var:t> := <nat:3> + <var:t> * <var:p> ; \\ \{ <var:p> = <var:y> \land <var:t> = <nat:1> * <var:y> + <nat:3> \} \\ <var:t> := <nat:4> + <var:t> * <var:p> \\ \{ <var:p> = <var:y> \land <var:t> = <nat:1> * <var:y> ^ <nat:2> + <nat:3> * <var:y> + <nat:4> \} \end{eqnarray} Given the above , our series of commands has been shown to be correct . \end{proof} \end{document} 
~
Require Import String . From PLF Require Import Imp . From PLF Require Import Hoare . Theorem <genH:poly_code_correct> : forall <var:y> : nat , {{ <var:p> = <var:y> }} <var:t> := <nat:1> ; <var:t> := <nat:3> + <var:t> * <var:p> ; <var:t> := <nat:4> + <var:t> * <var:p> {{ <var:t> = <nat:1> * <var:y> ^ <nat:2> + <nat:3> * <var:y> + <nat:4> }} . Proof . intros . apply hoare_seq with ( Q := ( ( <var:p> = <var:y> /\ <var:t> = <nat:1> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:p> = <var:y> /\ <var:t> = <nat:1> * <var:y> + <nat:3> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:p> = <var:y> /\ <var:t> = <nat:1> * <var:y> ^ <nat:2> + <nat:3> * <var:y> + <nat:4> ) ) %assertion ) . all : eapply hoare_consequence_pre ; try ( apply hoare_asgn || assn_auto'' ) . Qed . 