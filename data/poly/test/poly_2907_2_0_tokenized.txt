\begin{document} \begin{theorem} Consider the following segment of code as follows \begin{verbatim} <var:Q0> := <nat:5> ; <var:o> := <var:Q0> \end{verbatim} Allowing it to be that $ <var:V> = <var:S> $ ahead of evaluating this list of commands it must be that we see $ <var:o> = <nat:5> $ . \end{theorem} \begin{proof} The way to prove correctness for this series of commands is demonstrated with Hoare techniques . Taking another step toward the subsequent line contained in our code , the variable update code assigning $ <nat:5> $ into $ <var:Q0>$ . This moves the condition $ \{ <var:V> = <var:S> \} $ into the postcondition $ \{ <var:V> = <var:S> \land <var:Q0> = <nat:5> \} $ . Next , the variable update statement yielding $ <var:Q0$ into $ <var:o>$ . This line advances $ \{ <var:V> = <var:S> \land <var:Q0> = <nat:5> \} $ to the condition $ \{ <var:V> = <var:S> \land <var:o> = <nat:5> \} $ . \end{proof} \end{document} 
~
Require Import String . From PLF Require Import Imp . From PLF Require Import Hoare . Definition <var:Q0> : string := " <var:Q0> " . Theorem <genH:poly_code_correct> : forall <var:S> : nat , {{ <var:V> = <var:S> }} <var:Q0> := <nat:5> ; <var:o> := <var:Q0> {{ <var:o> = <nat:5> }} . Proof . intros . apply hoare_seq with ( Q := ( ( <var:V> = <var:S> /\ <var:Q0> = <nat:5> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:V> = <var:S> /\ <var:o> = <nat:5> ) ) %assertion ) . all : eapply hoare_consequence_pre ; try ( apply hoare_asgn || assn_auto'' ) . Qed . 