\begin{document} \begin{definition} Let the following list of instructions <def:poly> in \emph{Imp} as \begin{verbatim} <var:m> := <nat:4> ; <var:m> := <nat:1> + <var:m> * <var:V> \end{verbatim} \end{definition} \begin{theorem} Consider a series of commands <def:poly> in \emph{Imp} . Assume ( for all positive coefficients $ <var:n> $ ) it to be that $ <var:V> = <var:n> $ ahead of the execution of the series of commands , it follows that we have $ <var:m> = <nat:4> \times <var:n> + <nat:1> $ once series of commands finishes . \end{theorem} \begin{proof} Arguing the correctness of our set of commands can be given through typical Hoare logic . Moving on to the subsequent line contained in our code segment , we have \[ \begin{tabular} {rcl} \{ <var:V> = <var:n> \} & <var:m> := <nat:4> & \{ <var:V> = <var:n> \land <var:m> = <nat:4> \} \end{tabular} Taking a look at the upcoming piece of code seen in our series of instructions , we see \[ \begin{tabular} {rcl} \{ <var:V> = <var:n> \} & <var:m> := <nat:4> & \{ <var:V> = <var:n> \land <var:m> = <nat:4> \} \end{tabular} \end{proof} \end{document} 
~
Require Import String . From PLF Require Import Imp . From PLF Require Import Hoare . Definition <def:poly> := <var:m> := <nat:4> ; <var:m> := <nat:1> + <var:m> * <var:V> . Theorem <genH:poly_code_correct> : forall <var:n> : nat , {{ <var:V> = <var:n> }} <def:poly> {{ <var:m> = <nat:4> * <var:n> + <nat:1> }} . Proof . intros . apply hoare_seq with ( Q := ( ( <var:V> = <var:n> /\ <var:m> = <nat:4> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:V> = <var:n> /\ <var:m> = <nat:4> * <var:n> + <nat:1> ) ) %assertion ) . all : eapply hoare_consequence_pre ; try ( apply hoare_asgn || assn_auto'' ) . Qed . 