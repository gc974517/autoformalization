\begin{document} \begin{definition} Define a list of commands <def:poly> in \emph{Imp} as \begin{verbatim} <var:Y0> := <nat:7> ; <var:E> := <var:Y0> \end{verbatim} \end{definition} \begin{theorem} Assume ( for any $ <var:M> \in \mathbb{N} $ ) it to be that $ <var:l> = <var:M> $ ahead of the evaluation of our set of commands , it follows that $ <var:E> = <nat:7> $ . \end{theorem} \begin{proof} Observe the below decorated list of commands . \begin{eqnarray} \{ <var:l> = <var:M> \} \\ <var:Y0> := <nat:7> ; \\ \{ <var:l> = <var:M> \land <var:Y0> = <nat:7> \} \\ <var:E> := <var:Y0> \\ \{ <var:l> = <var:M> \land <var:E> = <nat:7> \} \end{eqnarray} Utilizing usual Hoare reasoning finishes the argument . \end{proof} \end{document} 
~
Require Import String . From PLF Require Import Imp . From PLF Require Import Hoare . Definition <var:Y0> : string := " <var:Y0> " . Definition <def:poly> := <var:Y0> := <nat:7> ; <var:E> := <var:Y0> . Theorem <genH:poly_code_correct> : forall <var:M> : nat , {{ <var:l> = <var:M> }} <def:poly> {{ <var:E> = <nat:7> }} . Proof . intros . apply hoare_seq with ( Q := ( ( <var:l> = <var:M> /\ <var:Y0> = <nat:7> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:l> = <var:M> /\ <var:E> = <nat:7> ) ) %assertion ) . all : eapply hoare_consequence_pre ; try ( apply hoare_asgn || assn_auto'' ) . Qed . 