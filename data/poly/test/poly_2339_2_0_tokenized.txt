\begin{document} \begin{theorem} Consider a segment of code in \emph{Imp} as follows \begin{verbatim} <var:E0> := <nat:6> ; <var:p> := <var:E0> \end{verbatim} Allow it to be that $ <var:G> = <var:b> $ before interpreting this series of commands , then we see $ <var:p> = <nat:6> $ . \end{theorem} \begin{proof} The application of Hoare techniques gives us : \begin{eqnarray} \{ <var:G> = <var:b> \} \\ <var:E0> := <nat:6> ; \\ \{ <var:G> = <var:b> \land <var:E0> = <nat:6> \} \\ <var:p> := <var:E0> \\ \{ <var:G> = <var:b> \land <var:p> = <nat:6> \} \end{eqnarray} Thusly , the segment of code has been shown to be correct . \end{proof} \end{document} 
~
Require Import String . From PLF Require Import Imp . From PLF Require Import Hoare . Definition <var:E0> : string := " <var:E0> " . Theorem <genH:poly_code_correct> : forall <var:b> : nat , {{ <var:G> = <var:b> }} <var:E0> := <nat:6> ; <var:p> := <var:E0> {{ <var:p> = <nat:6> }} . Proof . intros . apply hoare_seq with ( Q := ( ( <var:G> = <var:b> /\ <var:E0> = <nat:6> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:G> = <var:b> /\ <var:p> = <nat:6> ) ) %assertion ) . all : eapply hoare_consequence_pre ; try ( apply hoare_asgn || assn_auto'' ) . Qed . 