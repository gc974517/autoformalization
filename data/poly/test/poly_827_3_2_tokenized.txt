\begin{document} \begin{theorem} Take a list of instructions such that \begin{verbatim} <var:j> := <nat:4> ; <var:j> := <nat:1> + <var:j> * <var:O> ; <var:j> := <nat:2> + <var:j> * <var:O> \end{verbatim} Allowing that we have $ <var:O> = <var:A> $ ahead of the execution of this set of commands , it follows that $ <var:j> = <nat:4> \cdot <var:A> ^ <nat:2> + <nat:1> \cdot <var:A> + <nat:2> $ once series of commands finishes . \end{theorem} \begin{proof} The argument for our code can be accomplished through usual Hoare techniques . Observing the following pieces of code found in the series of commands , we have \verb | { <var:O> = <var:A> } <var:j> := <nat:4> { <var:O> = <var:A> \land <var:j> = <nat:4> } | , \verb | { <var:O> = <var:A> \land <var:j> = <nat:4> } <var:j> := <nat:1> + <var:j> * <var:O> { <var:O> = <var:A> \land <var:j> = <nat:4> \times <var:A> + <nat:1> } | and \verb | { <var:O> = <var:A> \land <var:j> = <nat:4> \times <var:A> + <nat:1> } <var:j> := <nat:2> + <var:j> * <var:O{ <var:O> = <var:A> \land <var:j> = <nat:4> \times <var:A> ^ <nat:2> + <nat:1> \times <var:A> + <nat:2> } | . This is deduced with the inference rule obtained from Hoare techniques . \end{proof} \end{document} 
~
Require Import String . From PLF Require Import Imp . From PLF Require Import Hoare . Theorem <genH:poly_code_correct> : forall <var:A> : nat , {{ <var:O> = <var:A> }} <var:j> := <nat:4> ; <var:j> := <nat:1> + <var:j> * <var:O> ; <var:j> := <nat:2> + <var:j> * <var:O> {{ <var:j> = <nat:4> * <var:A> ^ <nat:2> + <nat:1> * <var:A> + <nat:2> }} . Proof . intros . apply hoare_seq with ( Q := ( ( <var:O> = <var:A> /\ <var:j> = <nat:4> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:O> = <var:A> /\ <var:j> = <nat:4> * <var:A> + <nat:1> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:O> = <var:A> /\ <var:j> = <nat:4> * <var:A> ^ <nat:2> + <nat:1> * <var:A> + <nat:2> ) ) %assertion ) . all : eapply hoare_consequence_pre ; try ( apply hoare_asgn || assn_auto'' ) . Qed . 