\begin{document} \begin{theorem} Consider a series of commands as \begin{verbatim} <var:D0> := <nat:4> ; <var:w> := <var:D0> \end{verbatim} Given $ <var:p> = <var:y> $ ( given any positive integer coefficients $ <var:y> $ ) before the evaluation of this code segment , it must be that $ <var:w> = <nat:4> $ . \end{theorem} \begin{proof} Applying usual Hoare techniques produces : \begin{eqnarray} \{ <var:p> = <var:y> \} \\ <var:D0> := <nat:4> ; \\ \{ <var:p> = <var:y> \land <var:D0> = <nat:4> \} \\ <var:w> := <var:D0> \\ \{ <var:p> = <var:y> \land <var:w> = <nat:4> \} \end{eqnarray} Considering the preceding argument , this set of instructions has been proven correct . \end{proof} \end{document} 
~
Require Import String . From PLF Require Import Imp . From PLF Require Import Hoare . Definition <var:D0> : string := " <var:D0> " . Theorem <genH:poly_code_correct> : forall <var:y> : nat , {{ <var:p> = <var:y> }} <var:D0> := <nat:4> ; <var:w> := <var:D0> {{ <var:w> = <nat:4> }} . Proof . intros . apply hoare_seq with ( Q := ( ( <var:p> = <var:y> /\ <var:D0> = <nat:4> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:p> = <var:y> /\ <var:w> = <nat:4> ) ) %assertion ) . all : eapply hoare_consequence_pre ; try ( apply hoare_asgn || assn_auto'' ) . Qed . 