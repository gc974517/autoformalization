\begin{document} \begin{definition} Consider a list of instructions <def:poly> in \emph{Imp} as follows \begin{verbatim} <var:l0> := <nat:6> ; <var:x> := <var:l0> \end{verbatim} \end{definition} \begin{theorem} Let the following set of commands <def:poly> in \emph{Imp} . Given that $ <var:S> = <var:w> $ before executing the set of commands it must be that we have $ <var:x> = <nat:6> $ when code has exited . \end{theorem} \begin{proof} Showing our claim about correctness for the code can be given using standard Hoare techniques . Advancing , we have the code \verb | <var:l0> := <nat:6> ; | . This code forwards $ \{ <var:S> = <var:w> \} $ toward the condition $ \{ <var:S> = <var:w> \land <var:l0> = <nat:6> \} $ . This is guaranteed using the assignment inference rule defined in Hoare techniques . Immediately following , we have the statement letting $ <var:l0$ into $ <var:x>$ . This command moves $ \{ <var:S> = <var:w> \land <var:l0> = <nat:6> \} $ into the condition $ \{ <var:S> = <var:w> \land <var:x> = <nat:6> \} $ . \end{proof} \end{document} 
~
Require Import String . From PLF Require Import Imp . From PLF Require Import Hoare . Definition <var:l0> : string := " <var:l0> " . Definition <def:poly> := <var:l0> := <nat:6> ; <var:x> := <var:l0> . Theorem <genH:poly_code_correct> : forall <var:w> : nat , {{ <var:S> = <var:w> }} <def:poly> {{ <var:x> = <nat:6> }} . Proof . intros . apply hoare_seq with ( Q := ( ( <var:S> = <var:w> /\ <var:l0> = <nat:6> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:S> = <var:w> /\ <var:x> = <nat:6> ) ) %assertion ) . all : eapply hoare_consequence_pre ; try ( apply hoare_asgn || assn_auto'' ) . Qed . 