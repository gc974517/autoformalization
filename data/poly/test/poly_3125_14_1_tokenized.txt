\begin{document} \begin{definition} Let the following series of instructions <def:poly> in \emph{Imp} such that \begin{verbatim} <var:O1> := <var:y> ; <var:O2> := <var:O1> * <var:y> ; <var:O3> := <var:O2> * <var:y> ; <var:O4> := <var:O3> * <var:y> ; <var:O0> := <nat:7> ; <var:O1> := <var:O1> * <nat:7> ; <var:O2> := <var:O2> * <nat:4> ; <var:O3> := <var:O3> * <nat:9> ; <var:O4> := <var:O4> * <nat:9> ; <var:a> := <var:O4> <var:a> := <var:a> + <var:O3> <var:a> := <var:a> + <var:O2> <var:a> := <var:a> + <var:O1> <var:a> := <var:a> + <var:O0> \end{verbatim} \end{definition} \begin{theorem} Allow that we have $ <var:y> = <var:j> $ before running the segment of code , then we see $ <var:a> = <nat:9> \times <var:j> ^ <nat:4> + <nat:9> \times <var:j> ^ <nat:3> + <nat:4> \times <var:j> ^ <nat:2> + <nat:7> \times <var:j> + <nat:7> $ . \end{theorem} \begin{proof} The method of proof for the list of instructions is evident through standard Hoare reasoning . Moving forward , we see \begin{verbatim} { <var:y> = <var:j> } <var:O1> := <var:y> { <var:y> = <var:j> \land <var:O1> = <var:j> } \end{verbatim} Moving on to the proceeding step contained in the program , we see \begin{verbatim} { <var:y> = <var:j> } <var:O1> := <var:y> { <var:y> = <var:j> \land <var:O1> = <var:j> } \end{verbatim} Honing in on the subsequent lines of codecontained in our segment of code , we have \begin{verbatim} { <var:y> = <var:j> } <var:O1> := <var:y> { <var:y> = <var:j> \land <var:O1> = <var:j> } { <var:y> = <var:j> \land <var:O1> = <var:j> } <var:O2> := <var:O1> * <var:y> { <var:y> = <var:j> \land <var:O1> = <var:j> \land <var:O2> = <var:j> ^ <nat:2> } { <var:y> = <var:j> \land <var:O1> = <var:j> \land <var:O2> = <var:j> ^ <nat:2> } <var:O3> := <var:O2> * <var:y> { <var:y> = <var:j> \land <var:O1> = <var:j> \land <var:O2> = <var:j> ^ <nat:2> \land <var:O3> = <var:j> ^ <nat:3> } { <var:y> = <var:j> \land <var:O1> = <var:j> \land <var:O2> = <var:j> ^ <nat:2> \land <var:O3> = <var:j> ^ <nat:3> } <var:O4> := <var:O3> * <var:y> { <var:y> = <var:j> \land <var:O1> = <var:j> \land <var:O2> = <var:j> ^ <nat:2> \land <var:O3> = <var:j> ^ <nat:3> \land <var:O4> = <var:j> ^ <nat:4> } { <var:y> = <var:j> \land <var:O1> = <var:j> \land <var:O2> = <var:j> ^ <nat:2> \land <var:O3> = <var:j> ^ <nat:3> \land <var:O4> = <var:j> ^ <nat:4> } <var:O0> := <nat:7> { <var:y> = <var:j> \land <var:O1> = <var:j> \land <var:O2> = <var:j> ^ <nat:2> \land <var:O3> = <var:j> ^ <nat:3> \land <var:O4> = <var:j> ^ <nat:4> \land <var:O0> = <nat:7> } { <var:y> = <var:j> \land <var:O1> = <var:j> \land <var:O2> = <var:j> ^ <nat:2> \land <var:O3> = <var:j> ^ <nat:3> \land <var:O4> = <var:j> ^ <nat:4> \land <var:O0> = <nat:7> } <var:O1> := <var:O1> * <nat:7> { <var:y> = <var:j> \land <var:O1> = <nat:7> \cdot <var:j> \land <var:O2> = <var:j> ^ <nat:2> \land <var:O3> = <var:j> ^ <nat:3> \land <var:O4> = <var:j> ^ <nat:4> \land <var:O0> = <nat:7> } { <var:y> = <var:j> \land <var:O1> = <nat:7> \cdot <var:j> \land <var:O2> = <var:j> ^ <nat:2> \land <var:O3> = <var:j> ^ <nat:3> \land <var:O4> = <var:j> ^ <nat:4> \land <var:O0> = <nat:7> } <var:O2> := <var:O2> * <nat:4> { <var:y> = <var:j> \land <var:O1> = <nat:7> \cdot <var:j> \land <var:O2> = <nat:4> \cdot <var:j> ^ <nat:2> \land <var:O3> = <var:j> ^ <nat:3> \land <var:O4> = <var:j> ^ <nat:4> \land <var:O0> = <nat:7> } { <var:y> = <var:j> \land <var:O1> = <nat:7> \cdot <var:j> \land <var:O2> = <nat:4> \cdot <var:j> ^ <nat:2> \land <var:O3> = <var:j> ^ <nat:3> \land <var:O4> = <var:j> ^ <nat:4> \land <var:O0> = <nat:7> } <var:O3> := <var:O3> * <nat:9> { <var:y> = <var:j> \land <var:O1> = <nat:7> \cdot <var:j> \land <var:O2> = <nat:4> \cdot <var:j> ^ <nat:2> \land <var:O3> = <nat:9> \cdot <var:j> ^ <nat:3> \land <var:O4> = <var:j> ^ <nat:4> \land <var:O0> = <nat:7> } { <var:y> = <var:j> \land <var:O1> = <nat:7> \cdot <var:j> \land <var:O2> = <nat:4> \cdot <var:j> ^ <nat:2> \land <var:O3> = <nat:9> \cdot <var:j> ^ <nat:3> \land <var:O4> = <var:j> ^ <nat:4> \land <var:O0> = <nat:7> } <var:O4> := <var:O4> * <nat:9> { <var:y> = <var:j> \land <var:O1> = <nat:7> \cdot <var:j> \land <var:O2> = <nat:4> \cdot <var:j> ^ <nat:2> \land <var:O3> = <nat:9> \cdot <var:j> ^ <nat:3> \land <var:O4> = <nat:9> \cdot <var:j> ^ <nat:4> \land <var:O0> = <nat:7> } { <var:y> = <var:j> \land <var:O1> = <nat:7> \cdot <var:j> \land <var:O2> = <nat:4> \cdot <var:j> ^ <nat:2> \land <var:O3> = <nat:9> \cdot <var:j> ^ <nat:3> \land <var:O4> = <nat:9> \cdot <var:j> ^ <nat:4> \land <var:O0> = <nat:7> } <var:a> := <var:O4{ <var:y> = <var:j> \land <var:O1> = <nat:7> \cdot <var:j> \land <var:O2> = <nat:4> \cdot <var:j> ^ <nat:2> \land <var:O3> = <nat:9> \cdot <var:j> ^ <nat:3> \land <var:O0> = <nat:7> \land <var:a> = <nat:9> \cdot <var:j> ^ <nat:4> } { <var:y> = <var:j> \land <var:O1> = <nat:7> \cdot <var:j> \land <var:O2> = <nat:4> \cdot <var:j> ^ <nat:2> \land <var:O3> = <nat:9> \cdot <var:j> ^ <nat:3> \land <var:O0> = <nat:7> \land <var:a> = <nat:9> \cdot <var:j> ^ <nat:4> } <var:a> := <var:a> + <var:O3{ <var:y> = <var:j> \land <var:O1> = <nat:7> \cdot <var:j> \land <var:O2> = <nat:4> \cdot <var:j> ^ <nat:2> \land <var:O0> = <nat:7> \land <var:a> = <nat:9> \cdot <var:j> ^ <nat:4> + <nat:9> \cdot <var:j> ^ <nat:3> } \end{verbatim} This is given through the variable update scheme defined by typical Hoare reasoning . Considering the next line in our segment of code , \begin{verbatim} { <var:y> = <var:j> } <var:O1> := <var:y> { <var:y> = <var:j> \land <var:O1> = <var:j> } \end{verbatim} \end{proof} \end{document} 
~
Require Import String . From PLF Require Import Imp . From PLF Require Import Hoare . Definition <var:O0> : string := " <var:O0> " . Definition <var:O1> : string := " <var:O1> " . Definition <var:O2> : string := " <var:O2> " . Definition <var:O3> : string := " <var:O3> " . Definition <var:O4> : string := " <var:O4> " . Definition <def:poly> := <var:O1> := <var:y> ; <var:O2> := <var:O1> * <var:y> ; <var:O3> := <var:O2> * <var:y> ; <var:O4> := <var:O3> * <var:y> ; <var:O0> := <nat:7> ; <var:O1> := <var:O1> * <nat:7> ; <var:O2> := <var:O2> * <nat:4> ; <var:O3> := <var:O3> * <nat:9> ; <var:O4> := <var:O4> * <nat:9> ; <var:a> := <var:O4> <var:a> := <var:a> + <var:O3> <var:a> := <var:a> + <var:O2> <var:a> := <var:a> + <var:O1> <var:a> := <var:a> + <var:O0> . Theorem <genH:poly_code_correct> : forall <var:j> : nat , {{ <var:y> = <var:j> }} <def:poly> {{ <var:a> = <nat:9> * <var:j> ^ <nat:4> + <nat:9> * <var:j> ^ <nat:3> + <nat:4> * <var:j> ^ <nat:2> + <nat:7> * <var:j> + <nat:7> }} . Proof . intros . apply hoare_seq with ( Q := ( ( <var:y> = <var:j> /\ <var:O1> = <var:j> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:y> = <var:j> /\ <var:O1> = <var:j> /\ <var:O2> = <var:j> ^ <nat:2> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:y> = <var:j> /\ <var:O1> = <var:j> /\ <var:O2> = <var:j> ^ <nat:2> /\ <var:O3> = <var:j> ^ <nat:3> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:y> = <var:j> /\ <var:O1> = <var:j> /\ <var:O2> = <var:j> ^ <nat:2> /\ <var:O3> = <var:j> ^ <nat:3> /\ <var:O4> = <var:j> ^ <nat:4> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:y> = <var:j> /\ <var:O1> = <var:j> /\ <var:O2> = <var:j> ^ <nat:2> /\ <var:O3> = <var:j> ^ <nat:3> /\ <var:O4> = <var:j> ^ <nat:4> /\ <var:O0> = <nat:7> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:y> = <var:j> /\ <var:O1> = <nat:7> * <var:j> /\ <var:O2> = <var:j> ^ <nat:2> /\ <var:O3> = <var:j> ^ <nat:3> /\ <var:O4> = <var:j> ^ <nat:4> /\ <var:O0> = <nat:7> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:y> = <var:j> /\ <var:O1> = <nat:7> * <var:j> /\ <var:O2> = <nat:4> * <var:j> ^ <nat:2> /\ <var:O3> = <var:j> ^ <nat:3> /\ <var:O4> = <var:j> ^ <nat:4> /\ <var:O0> = <nat:7> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:y> = <var:j> /\ <var:O1> = <nat:7> * <var:j> /\ <var:O2> = <nat:4> * <var:j> ^ <nat:2> /\ <var:O3> = <nat:9> * <var:j> ^ <nat:3> /\ <var:O4> = <var:j> ^ <nat:4> /\ <var:O0> = <nat:7> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:y> = <var:j> /\ <var:O1> = <nat:7> * <var:j> /\ <var:O2> = <nat:4> * <var:j> ^ <nat:2> /\ <var:O3> = <nat:9> * <var:j> ^ <nat:3> /\ <var:O4> = <nat:9> * <var:j> ^ <nat:4> /\ <var:O0> = <nat:7> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:y> = <var:j> /\ <var:O1> = <nat:7> * <var:j> /\ <var:O2> = <nat:4> * <var:j> ^ <nat:2> /\ <var:O3> = <nat:9> * <var:j> ^ <nat:3> /\ <var:O0> = <nat:7> /\ <var:a> = <nat:9> * <var:j> ^ <nat:4> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:y> = <var:j> /\ <var:O1> = <nat:7> * <var:j> /\ <var:O2> = <nat:4> * <var:j> ^ <nat:2> /\ <var:O0> = <nat:7> /\ <var:a> = <nat:9> * <var:j> ^ <nat:4> + <nat:9> * <var:j> ^ <nat:3> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:y> = <var:j> /\ <var:O1> = <nat:7> * <var:j> /\ <var:O0> = <nat:7> /\ <var:a> = <nat:9> * <var:j> ^ <nat:4> + <nat:9> * <var:j> ^ <nat:3> + <nat:4> * <var:j> ^ <nat:2> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:y> = <var:j> /\ <var:O0> = <nat:7> /\ <var:a> = <nat:9> * <var:j> ^ <nat:4> + <nat:9> * <var:j> ^ <nat:3> + <nat:4> * <var:j> ^ <nat:2> + <nat:7> * <var:j> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:y> = <var:j> /\ <var:a> = <nat:9> * <var:j> ^ <nat:4> + <nat:9> * <var:j> ^ <nat:3> + <nat:4> * <var:j> ^ <nat:2> + <nat:7> * <var:j> + <nat:7> ) ) %assertion ) . all : eapply hoare_consequence_pre ; try ( apply hoare_asgn || assn_auto'' ) . Qed . 