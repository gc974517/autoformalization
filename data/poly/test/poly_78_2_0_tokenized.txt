\begin{document} \begin{theorem} Consider a series of commands such that \begin{verbatim} <var:u0> := <nat:3> ; <var:f> := <var:u0> \end{verbatim} Given $ <var:C> = <var:m> $ before executing the code it must be that $ <var:f> = <nat:3> $ when set of commands has finished executing . \end{theorem} \begin{proof} Applying typical Hoare logic results in : \begin{eqnarray} \{ <var:C> = <var:m> \} \\ <var:u0> := <nat:3> ; \\ \{ <var:C> = <var:m> \land <var:u0> = <nat:3> \} \\ <var:f> := <var:u0> \\ \{ <var:C> = <var:m> \land <var:f> = <nat:3> \} \end{eqnarray} Considering the above , this series of commands is proven correct . \end{proof} \end{document} 
~
Require Import String . From PLF Require Import Imp . From PLF Require Import Hoare . Definition <var:u0> : string := " <var:u0> " . Theorem <genH:poly_code_correct> : forall <var:m> : nat , {{ <var:C> = <var:m> }} <var:u0> := <nat:3> ; <var:f> := <var:u0> {{ <var:f> = <nat:3> }} . Proof . intros . apply hoare_seq with ( Q := ( ( <var:C> = <var:m> /\ <var:u0> = <nat:3> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:C> = <var:m> /\ <var:f> = <nat:3> ) ) %assertion ) . all : eapply hoare_consequence_pre ; try ( apply hoare_asgn || assn_auto'' ) . Qed . 