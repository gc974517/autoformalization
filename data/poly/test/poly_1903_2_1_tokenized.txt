\begin{document} \begin{theorem} Define a segment of code in \emph{Imp} as follows \begin{verbatim} <var:t0> := <nat:7> ; <var:L> := <var:t0> \end{verbatim} Assume , for some natural coefficients $ <var:y> $ , it to be that $ <var:e> = <var:y> $ ahead of the execution of the series of commands , it must be that $ <var:L> = <nat:7> $ after set of commands executes . \end{theorem} \begin{proof} \begin{eqnarray} \{ <var:e> = <var:y> \} \\ <var:t0> := <nat:7> ; \\ \{ <var:e> = <var:y> \land <var:t0> = <nat:7> \} \\ <var:L> := <var:t0> \\ \{ <var:e> = <var:y> \land <var:L> = <nat:7> \} \end{eqnarray} Using Hoare logic ends the argument . \end{proof} \end{document} 
~
Require Import String . From PLF Require Import Imp . From PLF Require Import Hoare . Definition <var:t0> : string := " <var:t0> " . Theorem <genH:poly_code_correct> : forall <var:y> : nat , {{ <var:e> = <var:y> }} <var:t0> := <nat:7> ; <var:L> := <var:t0> {{ <var:L> = <nat:7> }} . Proof . intros . apply hoare_seq with ( Q := ( ( <var:e> = <var:y> /\ <var:t0> = <nat:7> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:e> = <var:y> /\ <var:L> = <nat:7> ) ) %assertion ) . all : eapply hoare_consequence_pre ; try ( apply hoare_asgn || assn_auto'' ) . Qed . 