\begin{document} \begin{definition} Take the following set of commands <def:poly> in \emph{Imp} such that \begin{verbatim} <var:w1> := <var:e> ; <var:w2> := <var:w1> * <var:e> ; <var:w3> := <var:w2> * <var:e> ; <var:w4> := <var:w3> * <var:e> ; <var:w0> := <nat:9> ; <var:w1> := <var:w1> * <nat:1> ; <var:w2> := <var:w2> * <nat:8> ; <var:w3> := <var:w3> * <nat:5> ; <var:w4> := <var:w4> * <nat:9> ; <var:M> := <var:w4> <var:M> := <var:M> + <var:w3> <var:M> := <var:M> + <var:w2> <var:M> := <var:M> + <var:w1> <var:M> := <var:M> + <var:w0> \end{verbatim} \end{definition} \begin{theorem} Take a list of instructions <def:poly> in \emph{Imp} . Allowing ( for some $ <var:j> $ ) it to be that $ <var:e> = <var:j> $ before interpreting this set of commands it must be that $ <var:M> = <nat:9> * <var:j> ^ <nat:4> + <nat:5> * <var:j> ^ <nat:3> + <nat:8> * <var:j> ^ <nat:2> + <nat:1> * <var:j> + <nat:9> $ once code exits . \end{theorem} \begin{proof} Demonstrating correctness of the program is given with Hoare logic . Focusing on the upcoming pieces of code seen in our series of instructions , we have \begin{eqnarray} \{ <var:e> = <var:j> \} \, <var:w1> := <var:e> \, \{ <var:e> = <var:j> \land <var:w1> = <var:j> \} \\ \{ <var:e> = <var:j> \land <var:w1> = <var:j> \} \, <var:w2> := <var:w1> * <var:e> \, \{ <var:e> = <var:j> \land <var:w1> = <var:j> \land <var:w2> = <var:j> ^ <nat:2> \} \\ \{ <var:e> = <var:j> \land <var:w1> = <var:j> \land <var:w2> = <var:j> ^ <nat:2> \} \, <var:w3> := <var:w2> * <var:e> \, \{ <var:e> = <var:j> \land <var:w1> = <var:j> \land <var:w2> = <var:j> ^ <nat:2> \land <var:w3> = <var:j> ^ <nat:3> \} \\ \{ <var:e> = <var:j> \land <var:w1> = <var:j> \land <var:w2> = <var:j> ^ <nat:2> \land <var:w3> = <var:j> ^ <nat:3> \} \, <var:w4> := <var:w3> * <var:e> \, \{ <var:e> = <var:j> \land <var:w1> = <var:j> \land <var:w2> = <var:j> ^ <nat:2> \land <var:w3> = <var:j> ^ <nat:3> \land <var:w4> = <var:j> ^ <nat:4> \} \\ \{ <var:e> = <var:j> \land <var:w1> = <var:j> \land <var:w2> = <var:j> ^ <nat:2> \land <var:w3> = <var:j> ^ <nat:3> \land <var:w4> = <var:j> ^ <nat:4> \} \, <var:w0> := <nat:9> \, \{ <var:e> = <var:j> \land <var:w1> = <var:j> \land <var:w2> = <var:j> ^ <nat:2> \land <var:w3> = <var:j> ^ <nat:3> \land <var:w4> = <var:j> ^ <nat:4> \land <var:w0> = <nat:9> \} \\ \{ <var:e> = <var:j> \land <var:w1> = <var:j> \land <var:w2> = <var:j> ^ <nat:2> \land <var:w3> = <var:j> ^ <nat:3> \land <var:w4> = <var:j> ^ <nat:4> \land <var:w0> = <nat:9> \} \, <var:w1> := <var:w1> * <nat:1> \, \{ <var:e> = <var:j> \land <var:w1> = <nat:1> * <var:j> \land <var:w2> = <var:j> ^ <nat:2> \land <var:w3> = <var:j> ^ <nat:3> \land <var:w4> = <var:j> ^ <nat:4> \land <var:w0> = <nat:9> \} \\ \{ <var:e> = <var:j> \land <var:w1> = <nat:1> * <var:j> \land <var:w2> = <var:j> ^ <nat:2> \land <var:w3> = <var:j> ^ <nat:3> \land <var:w4> = <var:j> ^ <nat:4> \land <var:w0> = <nat:9> \} \, <var:w2> := <var:w2> * <nat:8> \, \{ <var:e> = <var:j> \land <var:w1> = <nat:1> * <var:j> \land <var:w2> = <nat:8> * <var:j> ^ <nat:2> \land <var:w3> = <var:j> ^ <nat:3> \land <var:w4> = <var:j> ^ <nat:4> \land <var:w0> = <nat:9> \} \\ \{ <var:e> = <var:j> \land <var:w1> = <nat:1> * <var:j> \land <var:w2> = <nat:8> * <var:j> ^ <nat:2> \land <var:w3> = <var:j> ^ <nat:3> \land <var:w4> = <var:j> ^ <nat:4> \land <var:w0> = <nat:9> \} \, <var:w3> := <var:w3> * <nat:5> \, \{ <var:e> = <var:j> \land <var:w1> = <nat:1> * <var:j> \land <var:w2> = <nat:8> * <var:j> ^ <nat:2> \land <var:w3> = <nat:5> * <var:j> ^ <nat:3> \land <var:w4> = <var:j> ^ <nat:4> \land <var:w0> = <nat:9> \} \\ \{ <var:e> = <var:j> \land <var:w1> = <nat:1> * <var:j> \land <var:w2> = <nat:8> * <var:j> ^ <nat:2> \land <var:w3> = <nat:5> * <var:j> ^ <nat:3> \land <var:w4> = <var:j> ^ <nat:4> \land <var:w0> = <nat:9> \} \, <var:w4> := <var:w4> * <nat:9> \, \{ <var:e> = <var:j> \land <var:w1> = <nat:1> * <var:j> \land <var:w2> = <nat:8> * <var:j> ^ <nat:2> \land <var:w3> = <nat:5> * <var:j> ^ <nat:3> \land <var:w4> = <nat:9> * <var:j> ^ <nat:4> \land <var:w0> = <nat:9> \} \\ \{ <var:e> = <var:j> \land <var:w1> = <nat:1> * <var:j> \land <var:w2> = <nat:8> * <var:j> ^ <nat:2> \land <var:w3> = <nat:5> * <var:j> ^ <nat:3> \land <var:w4> = <nat:9> * <var:j> ^ <nat:4> \land <var:w0> = <nat:9> \} \, <var:M> := <var:w4\, \{ <var:e> = <var:j> \land <var:w1> = <nat:1> * <var:j> \land <var:w2> = <nat:8> * <var:j> ^ <nat:2> \land <var:w3> = <nat:5> * <var:j> ^ <nat:3> \land <var:w0> = <nat:9> \land <var:M> = <nat:9> * <var:j> ^ <nat:4> \} \\ \{ <var:e> = <var:j> \land <var:w1> = <nat:1> * <var:j> \land <var:w2> = <nat:8> * <var:j> ^ <nat:2> \land <var:w3> = <nat:5> * <var:j> ^ <nat:3> \land <var:w0> = <nat:9> \land <var:M> = <nat:9> * <var:j> ^ <nat:4> \} \, <var:M> := <var:M> + <var:w3\, \{ <var:e> = <var:j> \land <var:w1> = <nat:1> * <var:j> \land <var:w2> = <nat:8> * <var:j> ^ <nat:2> \land <var:w0> = <nat:9> \land <var:M> = <nat:9> * <var:j> ^ <nat:4> + <nat:5> * <var:j> ^ <nat:3> \} \\ \{ <var:e> = <var:j> \land <var:w1> = <nat:1> * <var:j> \land <var:w2> = <nat:8> * <var:j> ^ <nat:2> \land <var:w0> = <nat:9> \land <var:M> = <nat:9> * <var:j> ^ <nat:4> + <nat:5> * <var:j> ^ <nat:3> \} \, <var:M> := <var:M> + <var:w2\, \{ <var:e> = <var:j> \land <var:w1> = <nat:1> * <var:j> \land <var:w0> = <nat:9> \land <var:M> = <nat:9> * <var:j> ^ <nat:4> + <nat:5> * <var:j> ^ <nat:3> + <nat:8> * <var:j> ^ <nat:2> \} \\ \{ <var:e> = <var:j> \land <var:w1> = <nat:1> * <var:j> \land <var:w0> = <nat:9> \land <var:M> = <nat:9> * <var:j> ^ <nat:4> + <nat:5> * <var:j> ^ <nat:3> + <nat:8> * <var:j> ^ <nat:2> \} \, <var:M> := <var:M> + <var:w1\, \{ <var:e> = <var:j> \land <var:w0> = <nat:9> \land <var:M> = <nat:9> * <var:j> ^ <nat:4> + <nat:5> * <var:j> ^ <nat:3> + <nat:8> * <var:j> ^ <nat:2> + <nat:1> * <var:j> \} \end{eqnarray} This is deduced with the assignment law given in Hoare logic . Looking at the proceeding bit of code seen in our list of instructions , we see \begin{eqnarray} \{ <var:e> = <var:j> \} \, <var:w1> := <var:e> \, \{ <var:e> = <var:j> \land <var:w1> = <var:j> \} \end{eqnarray} This is sound using the variable binding scheme of typical Hoare techniques . \end{proof} \end{document} 
~
Require Import String . From PLF Require Import Imp . From PLF Require Import Hoare . Definition <var:w0> : string := " <var:w0> " . Definition <var:w1> : string := " <var:w1> " . Definition <var:w2> : string := " <var:w2> " . Definition <var:w3> : string := " <var:w3> " . Definition <var:w4> : string := " <var:w4> " . Definition <def:poly> := <var:w1> := <var:e> ; <var:w2> := <var:w1> * <var:e> ; <var:w3> := <var:w2> * <var:e> ; <var:w4> := <var:w3> * <var:e> ; <var:w0> := <nat:9> ; <var:w1> := <var:w1> * <nat:1> ; <var:w2> := <var:w2> * <nat:8> ; <var:w3> := <var:w3> * <nat:5> ; <var:w4> := <var:w4> * <nat:9> ; <var:M> := <var:w4> <var:M> := <var:M> + <var:w3> <var:M> := <var:M> + <var:w2> <var:M> := <var:M> + <var:w1> <var:M> := <var:M> + <var:w0> . Theorem <genH:poly_code_correct> : forall <var:j> : nat , {{ <var:e> = <var:j> }} <def:poly> {{ <var:M> = <nat:9> * <var:j> ^ <nat:4> + <nat:5> * <var:j> ^ <nat:3> + <nat:8> * <var:j> ^ <nat:2> + <nat:1> * <var:j> + <nat:9> }} . Proof . intros . apply hoare_seq with ( Q := ( ( <var:e> = <var:j> /\ <var:w1> = <var:j> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:e> = <var:j> /\ <var:w1> = <var:j> /\ <var:w2> = <var:j> ^ <nat:2> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:e> = <var:j> /\ <var:w1> = <var:j> /\ <var:w2> = <var:j> ^ <nat:2> /\ <var:w3> = <var:j> ^ <nat:3> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:e> = <var:j> /\ <var:w1> = <var:j> /\ <var:w2> = <var:j> ^ <nat:2> /\ <var:w3> = <var:j> ^ <nat:3> /\ <var:w4> = <var:j> ^ <nat:4> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:e> = <var:j> /\ <var:w1> = <var:j> /\ <var:w2> = <var:j> ^ <nat:2> /\ <var:w3> = <var:j> ^ <nat:3> /\ <var:w4> = <var:j> ^ <nat:4> /\ <var:w0> = <nat:9> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:e> = <var:j> /\ <var:w1> = <nat:1> * <var:j> /\ <var:w2> = <var:j> ^ <nat:2> /\ <var:w3> = <var:j> ^ <nat:3> /\ <var:w4> = <var:j> ^ <nat:4> /\ <var:w0> = <nat:9> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:e> = <var:j> /\ <var:w1> = <nat:1> * <var:j> /\ <var:w2> = <nat:8> * <var:j> ^ <nat:2> /\ <var:w3> = <var:j> ^ <nat:3> /\ <var:w4> = <var:j> ^ <nat:4> /\ <var:w0> = <nat:9> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:e> = <var:j> /\ <var:w1> = <nat:1> * <var:j> /\ <var:w2> = <nat:8> * <var:j> ^ <nat:2> /\ <var:w3> = <nat:5> * <var:j> ^ <nat:3> /\ <var:w4> = <var:j> ^ <nat:4> /\ <var:w0> = <nat:9> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:e> = <var:j> /\ <var:w1> = <nat:1> * <var:j> /\ <var:w2> = <nat:8> * <var:j> ^ <nat:2> /\ <var:w3> = <nat:5> * <var:j> ^ <nat:3> /\ <var:w4> = <nat:9> * <var:j> ^ <nat:4> /\ <var:w0> = <nat:9> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:e> = <var:j> /\ <var:w1> = <nat:1> * <var:j> /\ <var:w2> = <nat:8> * <var:j> ^ <nat:2> /\ <var:w3> = <nat:5> * <var:j> ^ <nat:3> /\ <var:w0> = <nat:9> /\ <var:M> = <nat:9> * <var:j> ^ <nat:4> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:e> = <var:j> /\ <var:w1> = <nat:1> * <var:j> /\ <var:w2> = <nat:8> * <var:j> ^ <nat:2> /\ <var:w0> = <nat:9> /\ <var:M> = <nat:9> * <var:j> ^ <nat:4> + <nat:5> * <var:j> ^ <nat:3> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:e> = <var:j> /\ <var:w1> = <nat:1> * <var:j> /\ <var:w0> = <nat:9> /\ <var:M> = <nat:9> * <var:j> ^ <nat:4> + <nat:5> * <var:j> ^ <nat:3> + <nat:8> * <var:j> ^ <nat:2> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:e> = <var:j> /\ <var:w0> = <nat:9> /\ <var:M> = <nat:9> * <var:j> ^ <nat:4> + <nat:5> * <var:j> ^ <nat:3> + <nat:8> * <var:j> ^ <nat:2> + <nat:1> * <var:j> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:e> = <var:j> /\ <var:M> = <nat:9> * <var:j> ^ <nat:4> + <nat:5> * <var:j> ^ <nat:3> + <nat:8> * <var:j> ^ <nat:2> + <nat:1> * <var:j> + <nat:9> ) ) %assertion ) . all : eapply hoare_consequence_pre ; try ( apply hoare_asgn || assn_auto'' ) . Qed . 