\begin{document} \begin{definition} We define the following series of commands <def:poly> in \emph{Imp} as \begin{verbatim} <var:q1> := <var:H> ; <var:q2> := <var:q1> * <var:H> ; <var:q3> := <var:q2> * <var:H> ; <var:q4> := <var:q3> * <var:H> ; <var:q0> := <nat:7> ; <var:q1> := <var:q1> * <nat:4> ; <var:q3> := <var:q3> * <nat:4> ; <var:q4> := <var:q4> * <nat:8> ; <var:p> := <var:q4> <var:p> := <var:p> + <var:q3> <var:p> := <var:p> + <var:q1> <var:p> := <var:p> + <var:q0> \end{verbatim} \end{definition} \begin{theorem} Given --- for every whole numbers $ <var:M> $ --- it to hold that $ <var:H> = <var:M> $ before interpreting this code it follows that we see $ <var:p> = <nat:8> \cdot <var:M> ^ <nat:4> + <nat:4> \cdot <var:M> ^ <nat:3> + <nat:4> \cdot <var:M> + <nat:7> $ once list of instructions executes . \end{theorem} \begin{proof} The course of logic for this series of commands is shown using Hoare reasoning . Stepping forward , \begin{verbatim} { <var:H> = <var:M> } <var:q1> := <var:H> { <var:H> = <var:M> \land <var:q1> = <var:M> } { <var:H> = <var:M> \land <var:q1> = <var:M> } <var:q2> := <var:q1> * <var:H> { <var:H> = <var:M> \land <var:q1> = <var:M> \land <var:q2> = <var:M> ^ <nat:2> } { <var:H> = <var:M> \land <var:q1> = <var:M> \land <var:q2> = <var:M> ^ <nat:2> } <var:q3> := <var:q2> * <var:H> { <var:H> = <var:M> \land <var:q1> = <var:M> \land <var:q2> = <var:M> ^ <nat:2> \land <var:q3> = <var:M> ^ <nat:3> } { <var:H> = <var:M> \land <var:q1> = <var:M> \land <var:q2> = <var:M> ^ <nat:2> \land <var:q3> = <var:M> ^ <nat:3> } <var:q4> := <var:q3> * <var:H> { <var:H> = <var:M> \land <var:q1> = <var:M> \land <var:q2> = <var:M> ^ <nat:2> \land <var:q3> = <var:M> ^ <nat:3> \land <var:q4> = <var:M> ^ <nat:4> } { <var:H> = <var:M> \land <var:q1> = <var:M> \land <var:q2> = <var:M> ^ <nat:2> \land <var:q3> = <var:M> ^ <nat:3> \land <var:q4> = <var:M> ^ <nat:4> } <var:q0> := <nat:7> { <var:H> = <var:M> \land <var:q1> = <var:M> \land <var:q2> = <var:M> ^ <nat:2> \land <var:q3> = <var:M> ^ <nat:3> \land <var:q4> = <var:M> ^ <nat:4> \land <var:q0> = <nat:7> } { <var:H> = <var:M> \land <var:q1> = <var:M> \land <var:q2> = <var:M> ^ <nat:2> \land <var:q3> = <var:M> ^ <nat:3> \land <var:q4> = <var:M> ^ <nat:4> \land <var:q0> = <nat:7> } <var:q1> := <var:q1> * <nat:4> { <var:H> = <var:M> \land <var:q1> = <nat:4> \times <var:M> \land <var:q2> = <var:M> ^ <nat:2> \land <var:q3> = <var:M> ^ <nat:3> \land <var:q4> = <var:M> ^ <nat:4> \land <var:q0> = <nat:7> } { <var:H> = <var:M> \land <var:q1> = <nat:4> \times <var:M> \land <var:q2> = <var:M> ^ <nat:2> \land <var:q3> = <var:M> ^ <nat:3> \land <var:q4> = <var:M> ^ <nat:4> \land <var:q0> = <nat:7> } <var:q3> := <var:q3> * <nat:4> { <var:H> = <var:M> \land <var:q1> = <nat:4> \times <var:M> \land <var:q2> = <var:M> ^ <nat:2> \land <var:q3> = <nat:4> \times <var:M> ^ <nat:3> \land <var:q4> = <var:M> ^ <nat:4> \land <var:q0> = <nat:7> } { <var:H> = <var:M> \land <var:q1> = <nat:4> \times <var:M> \land <var:q2> = <var:M> ^ <nat:2> \land <var:q3> = <nat:4> \times <var:M> ^ <nat:3> \land <var:q4> = <var:M> ^ <nat:4> \land <var:q0> = <nat:7> } <var:q4> := <var:q4> * <nat:8> { <var:H> = <var:M> \land <var:q1> = <nat:4> \times <var:M> \land <var:q2> = <var:M> ^ <nat:2> \land <var:q3> = <nat:4> \times <var:M> ^ <nat:3> \land <var:q4> = <nat:8> \times <var:M> ^ <nat:4> \land <var:q0> = <nat:7> } { <var:H> = <var:M> \land <var:q1> = <nat:4> \times <var:M> \land <var:q2> = <var:M> ^ <nat:2> \land <var:q3> = <nat:4> \times <var:M> ^ <nat:3> \land <var:q4> = <nat:8> \times <var:M> ^ <nat:4> \land <var:q0> = <nat:7> } <var:p> := <var:q4{ <var:H> = <var:M> \land <var:q1> = <nat:4> \times <var:M> \land <var:q2> = <var:M> ^ <nat:2> \land <var:q3> = <nat:4> \times <var:M> ^ <nat:3> \land <var:q0> = <nat:7> \land <var:p> = <nat:8> \times <var:M> ^ <nat:4> } { <var:H> = <var:M> \land <var:q1> = <nat:4> \times <var:M> \land <var:q2> = <var:M> ^ <nat:2> \land <var:q3> = <nat:4> \times <var:M> ^ <nat:3> \land <var:q0> = <nat:7> \land <var:p> = <nat:8> \times <var:M> ^ <nat:4> } <var:p> := <var:p> + <var:q3{ <var:H> = <var:M> \land <var:q1> = <nat:4> \times <var:M> \land <var:q2> = <var:M> ^ <nat:2> \land <var:q0> = <nat:7> \land <var:p> = <nat:8> \times <var:M> ^ <nat:4> + <nat:4> \times <var:M> ^ <nat:3> } \end{verbatim} Advancing to the following line seen in our list of commands , \begin{verbatim} { <var:H> = <var:M> } <var:q1> := <var:H> { <var:H> = <var:M> \land <var:q1> = <var:M> } \end{verbatim} This is known to be sound using the environment update rule obtained from standard Hoare logic . Next , \begin{verbatim} { <var:H> = <var:M> } <var:q1> := <var:H> { <var:H> = <var:M> \land <var:q1> = <var:M> } \end{verbatim} \end{proof} \end{document} 
~
Require Import String . From PLF Require Import Imp . From PLF Require Import Hoare . Definition <var:q0> : string := " <var:q0> " . Definition <var:q1> : string := " <var:q1> " . Definition <var:q2> : string := " <var:q2> " . Definition <var:q3> : string := " <var:q3> " . Definition <var:q4> : string := " <var:q4> " . Definition <def:poly> := <var:q1> := <var:H> ; <var:q2> := <var:q1> * <var:H> ; <var:q3> := <var:q2> * <var:H> ; <var:q4> := <var:q3> * <var:H> ; <var:q0> := <nat:7> ; <var:q1> := <var:q1> * <nat:4> ; <var:q3> := <var:q3> * <nat:4> ; <var:q4> := <var:q4> * <nat:8> ; <var:p> := <var:q4> <var:p> := <var:p> + <var:q3> <var:p> := <var:p> + <var:q1> <var:p> := <var:p> + <var:q0> . Theorem <genH:poly_code_correct> : forall <var:M> : nat , {{ <var:H> = <var:M> }} <def:poly> {{ <var:p> = <nat:8> * <var:M> ^ <nat:4> + <nat:4> * <var:M> ^ <nat:3> + <nat:4> * <var:M> + <nat:7> }} . Proof . intros . apply hoare_seq with ( Q := ( ( <var:H> = <var:M> /\ <var:q1> = <var:M> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:H> = <var:M> /\ <var:q1> = <var:M> /\ <var:q2> = <var:M> ^ <nat:2> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:H> = <var:M> /\ <var:q1> = <var:M> /\ <var:q2> = <var:M> ^ <nat:2> /\ <var:q3> = <var:M> ^ <nat:3> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:H> = <var:M> /\ <var:q1> = <var:M> /\ <var:q2> = <var:M> ^ <nat:2> /\ <var:q3> = <var:M> ^ <nat:3> /\ <var:q4> = <var:M> ^ <nat:4> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:H> = <var:M> /\ <var:q1> = <var:M> /\ <var:q2> = <var:M> ^ <nat:2> /\ <var:q3> = <var:M> ^ <nat:3> /\ <var:q4> = <var:M> ^ <nat:4> /\ <var:q0> = <nat:7> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:H> = <var:M> /\ <var:q1> = <nat:4> * <var:M> /\ <var:q2> = <var:M> ^ <nat:2> /\ <var:q3> = <var:M> ^ <nat:3> /\ <var:q4> = <var:M> ^ <nat:4> /\ <var:q0> = <nat:7> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:H> = <var:M> /\ <var:q1> = <nat:4> * <var:M> /\ <var:q2> = <var:M> ^ <nat:2> /\ <var:q3> = <nat:4> * <var:M> ^ <nat:3> /\ <var:q4> = <var:M> ^ <nat:4> /\ <var:q0> = <nat:7> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:H> = <var:M> /\ <var:q1> = <nat:4> * <var:M> /\ <var:q2> = <var:M> ^ <nat:2> /\ <var:q3> = <nat:4> * <var:M> ^ <nat:3> /\ <var:q4> = <nat:8> * <var:M> ^ <nat:4> /\ <var:q0> = <nat:7> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:H> = <var:M> /\ <var:q1> = <nat:4> * <var:M> /\ <var:q2> = <var:M> ^ <nat:2> /\ <var:q3> = <nat:4> * <var:M> ^ <nat:3> /\ <var:q0> = <nat:7> /\ <var:p> = <nat:8> * <var:M> ^ <nat:4> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:H> = <var:M> /\ <var:q1> = <nat:4> * <var:M> /\ <var:q2> = <var:M> ^ <nat:2> /\ <var:q0> = <nat:7> /\ <var:p> = <nat:8> * <var:M> ^ <nat:4> + <nat:4> * <var:M> ^ <nat:3> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:H> = <var:M> /\ <var:q0> = <nat:7> /\ <var:p> = <nat:8> * <var:M> ^ <nat:4> + <nat:4> * <var:M> ^ <nat:3> + <nat:4> * <var:M> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:H> = <var:M> /\ <var:p> = <nat:8> * <var:M> ^ <nat:4> + <nat:4> * <var:M> ^ <nat:3> + <nat:4> * <var:M> + <nat:7> ) ) %assertion ) . all : eapply hoare_consequence_pre ; try ( apply hoare_asgn || assn_auto'' ) . Qed . 