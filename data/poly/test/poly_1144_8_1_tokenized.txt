\begin{document} \begin{theorem} Let the following list of commands in \emph{Imp} as follows \begin{verbatim} <var:L1> := <var:M> ; <var:L2> := <var:L1> * <var:M> ; <var:L0> := <nat:8> ; <var:L1> := <var:L1> * <nat:6> ; <var:L2> := <var:L2> * <nat:8> ; <var:b> := <var:L2> <var:b> := <var:b> + <var:L1> <var:b> := <var:b> + <var:L0> \end{verbatim} Allowing it to be that $ <var:M> = <var:O> $ ahead of the evaluation of this list of commands , it follows that we have $ <var:b> = <nat:8> * <var:O> ^ <nat:2> + <nat:6> * <var:O> + <nat:8> $ . \end{theorem} \begin{proof} The application of usual Hoare techniques yields : \begin{eqnarray} \{ <var:M> = <var:O> \} \\ <var:L1> := <var:M> ; \\ \{ <var:M> = <var:O> \land <var:L1> = <var:O> \} \\ <var:L2> := <var:L1> * <var:M> ; \\ \{ <var:M> = <var:O> \land <var:L1> = <var:O> \land <var:L2> = <var:O> ^ <nat:2> \} \\ <var:L0> := <nat:8> ; \\ \{ <var:M> = <var:O> \land <var:L1> = <var:O> \land <var:L2> = <var:O> ^ <nat:2> \land <var:L0> = <nat:8> \} \\ <var:L1> := <var:L1> * <nat:6> ; \\ \{ <var:M> = <var:O> \land <var:L1> = <nat:6> \times <var:O> \land <var:L2> = <var:O> ^ <nat:2> \land <var:L0> = <nat:8> \} \\ <var:L2> := <var:L2> * <nat:8> ; \\ \{ <var:M> = <var:O> \land <var:L1> = <nat:6> \times <var:O> \land <var:L2> = <nat:8> \times <var:O> ^ <nat:2> \land <var:L0> = <nat:8> \} \\ <var:b> := <var:L2> \\ \{ <var:M> = <var:O> \land <var:L1> = <nat:6> \times <var:O> \land <var:L0> = <nat:8> \land <var:b> = <nat:8> \times <var:O> ^ <nat:2> \} \\ <var:b> := <var:b> + <var:L1> \\ \{ <var:M> = <var:O> \land <var:L0> = <nat:8> \land <var:b> = <nat:8> \times <var:O> ^ <nat:2> + <nat:6> \times <var:O> \} \\ <var:b> := <var:b> + <var:L0> \\ \{ <var:M> = <var:O> \land <var:b> = <nat:8> \times <var:O> ^ <nat:2> + <nat:6> \times <var:O> + <nat:8> \} \end{eqnarray} Hence , the set of commands is demonstrated to be correct . \end{proof} \end{document} 
~
Require Import String . From PLF Require Import Imp . From PLF Require Import Hoare . Definition <var:L0> : string := " <var:L0> " . Definition <var:L1> : string := " <var:L1> " . Definition <var:L2> : string := " <var:L2> " . Theorem <genH:poly_code_correct> : forall <var:O> : nat , {{ <var:M> = <var:O> }} <var:L1> := <var:M> ; <var:L2> := <var:L1> * <var:M> ; <var:L0> := <nat:8> ; <var:L1> := <var:L1> * <nat:6> ; <var:L2> := <var:L2> * <nat:8> ; <var:b> := <var:L2> <var:b> := <var:b> + <var:L1> <var:b> := <var:b> + <var:L0> {{ <var:b> = <nat:8> * <var:O> ^ <nat:2> + <nat:6> * <var:O> + <nat:8> }} . Proof . intros . apply hoare_seq with ( Q := ( ( <var:M> = <var:O> /\ <var:L1> = <var:O> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:M> = <var:O> /\ <var:L1> = <var:O> /\ <var:L2> = <var:O> ^ <nat:2> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:M> = <var:O> /\ <var:L1> = <var:O> /\ <var:L2> = <var:O> ^ <nat:2> /\ <var:L0> = <nat:8> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:M> = <var:O> /\ <var:L1> = <nat:6> * <var:O> /\ <var:L2> = <var:O> ^ <nat:2> /\ <var:L0> = <nat:8> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:M> = <var:O> /\ <var:L1> = <nat:6> * <var:O> /\ <var:L2> = <nat:8> * <var:O> ^ <nat:2> /\ <var:L0> = <nat:8> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:M> = <var:O> /\ <var:L1> = <nat:6> * <var:O> /\ <var:L0> = <nat:8> /\ <var:b> = <nat:8> * <var:O> ^ <nat:2> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:M> = <var:O> /\ <var:L0> = <nat:8> /\ <var:b> = <nat:8> * <var:O> ^ <nat:2> + <nat:6> * <var:O> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:M> = <var:O> /\ <var:b> = <nat:8> * <var:O> ^ <nat:2> + <nat:6> * <var:O> + <nat:8> ) ) %assertion ) . all : eapply hoare_consequence_pre ; try ( apply hoare_asgn || assn_auto'' ) . Qed . 