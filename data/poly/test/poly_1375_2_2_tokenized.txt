\begin{document} \begin{theorem} Let the following series of instructions as \begin{verbatim} <var:A> := <nat:2> ; <var:A> := <nat:2> + <var:A> * <var:s> \end{verbatim} Given it to hold that $ <var:s> = <var:Y> $ prior to interpreting the series of commands it must be that we have $ <var:A> = <nat:2> * <var:Y> + <nat:2> $ . \end{theorem} \begin{proof} Applying standard Hoare techniques produces : \begin{eqnarray} \{ <var:s> = <var:Y> \} \\ <var:A> := <nat:2> ; \\ \{ <var:s> = <var:Y> \land <var:A> = <nat:2> \} \\ <var:A> := <nat:2> + <var:A> * <var:s> \\ \{ <var:s> = <var:Y> \land <var:A> = <nat:2> * <var:Y> + <nat:2> \} \end{eqnarray} As a consequence , the series of commands is demonstrated to be correct . \end{proof} \end{document} 
~
Require Import String . From PLF Require Import Imp . From PLF Require Import Hoare . Theorem <genH:poly_code_correct> : forall <var:Y> : nat , {{ <var:s> = <var:Y> }} <var:A> := <nat:2> ; <var:A> := <nat:2> + <var:A> * <var:s> {{ <var:A> = <nat:2> * <var:Y> + <nat:2> }} . Proof . intros . apply hoare_seq with ( Q := ( ( <var:s> = <var:Y> /\ <var:A> = <nat:2> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:s> = <var:Y> /\ <var:A> = <nat:2> * <var:Y> + <nat:2> ) ) %assertion ) . all : eapply hoare_consequence_pre ; try ( apply hoare_asgn || assn_auto'' ) . Qed . 