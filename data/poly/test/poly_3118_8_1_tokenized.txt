\begin{document} \begin{theorem} Let the following set of commands as follows \begin{verbatim} <var:b1> := <var:u> ; <var:b2> := <var:b1> * <var:u> ; <var:b0> := <nat:9> ; <var:b1> := <var:b1> * <nat:4> ; <var:b2> := <var:b2> * <nat:9> ; <var:P> := <var:b2> <var:P> := <var:P> + <var:b1> <var:P> := <var:P> + <var:b0> \end{verbatim} Allowing , given any whole numbers $ <var:r> $ , that $ <var:u> = <var:r> $ prior to the evaluation of our series of commands it holds that $ <var:P> = <nat:9> \times <var:r> ^ <nat:2> + <nat:4> \times <var:r> + <nat:9> $ when series of instructions terminates . \end{theorem} \begin{proof} Using Hoare logic gives us : \begin{eqnarray} \{ <var:u> = <var:r> \} \\ <var:b1> := <var:u> ; \\ \{ <var:u> = <var:r> \land <var:b1> = <var:r> \} \\ <var:b2> := <var:b1> * <var:u> ; \\ \{ <var:u> = <var:r> \land <var:b1> = <var:r> \land <var:b2> = <var:r> ^ <nat:2> \} \\ <var:b0> := <nat:9> ; \\ \{ <var:u> = <var:r> \land <var:b1> = <var:r> \land <var:b2> = <var:r> ^ <nat:2> \land <var:b0> = <nat:9> \} \\ <var:b1> := <var:b1> * <nat:4> ; \\ \{ <var:u> = <var:r> \land <var:b1> = <nat:4> * <var:r> \land <var:b2> = <var:r> ^ <nat:2> \land <var:b0> = <nat:9> \} \\ <var:b2> := <var:b2> * <nat:9> ; \\ \{ <var:u> = <var:r> \land <var:b1> = <nat:4> * <var:r> \land <var:b2> = <nat:9> * <var:r> ^ <nat:2> \land <var:b0> = <nat:9> \} \\ <var:P> := <var:b2> \\ \{ <var:u> = <var:r> \land <var:b1> = <nat:4> * <var:r> \land <var:b0> = <nat:9> \land <var:P> = <nat:9> * <var:r> ^ <nat:2> \} \\ <var:P> := <var:P> + <var:b1> \\ \{ <var:u> = <var:r> \land <var:b0> = <nat:9> \land <var:P> = <nat:9> * <var:r> ^ <nat:2> + <nat:4> * <var:r> \} \\ <var:P> := <var:P> + <var:b0> \\ \{ <var:u> = <var:r> \land <var:P> = <nat:9> * <var:r> ^ <nat:2> + <nat:4> * <var:r> + <nat:9> \} \end{eqnarray} Given the preceding argument , the list of commands has been demonstrated to be correct . \end{proof} \end{document} 
~
Require Import String . From PLF Require Import Imp . From PLF Require Import Hoare . Definition <var:b0> : string := " <var:b0> " . Definition <var:b1> : string := " <var:b1> " . Definition <var:b2> : string := " <var:b2> " . Theorem <genH:poly_code_correct> : forall <var:r> : nat , {{ <var:u> = <var:r> }} <var:b1> := <var:u> ; <var:b2> := <var:b1> * <var:u> ; <var:b0> := <nat:9> ; <var:b1> := <var:b1> * <nat:4> ; <var:b2> := <var:b2> * <nat:9> ; <var:P> := <var:b2> <var:P> := <var:P> + <var:b1> <var:P> := <var:P> + <var:b0> {{ <var:P> = <nat:9> * <var:r> ^ <nat:2> + <nat:4> * <var:r> + <nat:9> }} . Proof . intros . apply hoare_seq with ( Q := ( ( <var:u> = <var:r> /\ <var:b1> = <var:r> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:u> = <var:r> /\ <var:b1> = <var:r> /\ <var:b2> = <var:r> ^ <nat:2> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:u> = <var:r> /\ <var:b1> = <var:r> /\ <var:b2> = <var:r> ^ <nat:2> /\ <var:b0> = <nat:9> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:u> = <var:r> /\ <var:b1> = <nat:4> * <var:r> /\ <var:b2> = <var:r> ^ <nat:2> /\ <var:b0> = <nat:9> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:u> = <var:r> /\ <var:b1> = <nat:4> * <var:r> /\ <var:b2> = <nat:9> * <var:r> ^ <nat:2> /\ <var:b0> = <nat:9> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:u> = <var:r> /\ <var:b1> = <nat:4> * <var:r> /\ <var:b0> = <nat:9> /\ <var:P> = <nat:9> * <var:r> ^ <nat:2> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:u> = <var:r> /\ <var:b0> = <nat:9> /\ <var:P> = <nat:9> * <var:r> ^ <nat:2> + <nat:4> * <var:r> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:u> = <var:r> /\ <var:P> = <nat:9> * <var:r> ^ <nat:2> + <nat:4> * <var:r> + <nat:9> ) ) %assertion ) . all : eapply hoare_consequence_pre ; try ( apply hoare_asgn || assn_auto'' ) . Qed . 