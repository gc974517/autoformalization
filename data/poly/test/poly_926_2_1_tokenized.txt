\begin{document} \begin{definition} We define a code segment <def:poly> in \emph{Imp} as follows \begin{verbatim} <var:c0> := <nat:3> ; <var:b> := <var:c0> \end{verbatim} \end{definition} \begin{theorem} We define the following series of instructions <def:poly> . Allow $ <var:r> = <var:j> $ before running the list of commands , it holds that we have $ <var:b> = <nat:3> $ . \end{theorem} \begin{proof} Observe that the below decorated set of commands . \begin{eqnarray} \{ <var:r> = <var:j> \} \\ <var:c0> := <nat:3> ; \\ \{ <var:r> = <var:j> \land <var:c0> = <nat:3> \} \\ <var:b> := <var:c0> \\ \{ <var:r> = <var:j> \land <var:b> = <nat:3> \} \end{eqnarray} Using usual Hoare techniques finalizes the proof . \end{proof} \end{document} 
~
Require Import String . From PLF Require Import Imp . From PLF Require Import Hoare . Definition <var:c0> : string := " <var:c0> " . Definition <def:poly> := <var:c0> := <nat:3> ; <var:b> := <var:c0> . Theorem <genH:poly_code_correct> : forall <var:j> : nat , {{ <var:r> = <var:j> }} <def:poly> {{ <var:b> = <nat:3> }} . Proof . intros . apply hoare_seq with ( Q := ( ( <var:r> = <var:j> /\ <var:c0> = <nat:3> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:r> = <var:j> /\ <var:b> = <nat:3> ) ) %assertion ) . all : eapply hoare_consequence_pre ; try ( apply hoare_asgn || assn_auto'' ) . Qed . 