\begin{document} \begin{definition} Consider the following list of instructions <def:poly> in \emph{Imp} : \begin{verbatim} <var:z0> := <nat:1> ; <var:j> := <var:z0> \end{verbatim} \end{definition} \begin{theorem} Consider a code segment <def:poly> in \emph{Imp} . Given ( for some $ <var:F> \in \mathbb{Z}^+ $ ) that $ <var:W> = <var:F> $ prior to executing the set of commands it holds that we have $ <var:j> = <nat:1> $ . \end{theorem} \begin{proof} \begin{eqnarray} \{ <var:W> = <var:F> \} \\ <var:z0> := <nat:1> ; \\ \{ <var:W> = <var:F> \land <var:z0> = <nat:1> \} \\ <var:j> := <var:z0> \\ \{ <var:W> = <var:F> \land <var:j> = <nat:1> \} \end{eqnarray} Utilizing Hoare techniques completes the argument . \end{proof} \end{document} 
~
Require Import String . From PLF Require Import Imp . From PLF Require Import Hoare . Definition <var:z0> : string := " <var:z0> " . Definition <def:poly> := <var:z0> := <nat:1> ; <var:j> := <var:z0> . Theorem <genH:poly_code_correct> : forall <var:F> : nat , {{ <var:W> = <var:F> }} <def:poly> {{ <var:j> = <nat:1> }} . Proof . intros . apply hoare_seq with ( Q := ( ( <var:W> = <var:F> /\ <var:z0> = <nat:1> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:W> = <var:F> /\ <var:j> = <nat:1> ) ) %assertion ) . all : eapply hoare_consequence_pre ; try ( apply hoare_asgn || assn_auto'' ) . Qed . 