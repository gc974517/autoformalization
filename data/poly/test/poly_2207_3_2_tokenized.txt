\begin{document} \begin{definition} Consider the following series of commands <def:poly> in \emph{Imp} : \begin{verbatim} <var:x> := <nat:1> ; <var:x> := <var:x> * <var:O> ; <var:x> := <nat:1> + <var:x> * <var:O> \end{verbatim} \end{definition} \begin{theorem} Assuming for any whole numbers $ <var:X> $ that $ <var:O> = <var:X> $ before interpreting this set of instructions , it follows that we have $ <var:x> = <nat:1> \times <var:X> ^ <nat:2> + <nat:1> $ . \end{theorem} \begin{proof} \begin{eqnarray} \{ <var:O> = <var:X> \} \\ <var:x> := <nat:1> ; \\ \{ <var:O> = <var:X> \land <var:x> = <nat:1> \} \\ <var:x> := <var:x> * <var:O> ; \\ \{ <var:O> = <var:X> \land <var:x> = <nat:1> * <var:X> + \} \\ <var:x> := <nat:1> + <var:x> * <var:O> \\ \{ <var:O> = <var:X> \land <var:x> = <nat:1> * <var:X> ^ <nat:2> + <nat:1> \} \end{eqnarray} The application of Hoare reasoning ends the proof . \end{proof} \end{document} 
~
Require Import String . From PLF Require Import Imp . From PLF Require Import Hoare . Definition <def:poly> := <var:x> := <nat:1> ; <var:x> := <var:x> * <var:O> ; <var:x> := <nat:1> + <var:x> * <var:O> . Theorem <genH:poly_code_correct> : forall <var:X> : nat , {{ <var:O> = <var:X> }} <def:poly> {{ <var:x> = <nat:1> * <var:X> ^ <nat:2> + <nat:1> }} . Proof . intros . apply hoare_seq with ( Q := ( ( <var:O> = <var:X> /\ <var:x> = <nat:1> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:O> = <var:X> /\ <var:x> = <nat:1> * <var:X> + ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:O> = <var:X> /\ <var:x> = <nat:1> * <var:X> ^ <nat:2> + <nat:1> ) ) %assertion ) . all : eapply hoare_consequence_pre ; try ( apply hoare_asgn || assn_auto'' ) . Qed . 