\begin{document} \begin{definition} We define a list of instructions <def:poly> in \emph{Imp} as follows \begin{verbatim} <var:T0> := <nat:5> ; <var:k> := <var:T0> \end{verbatim} \end{definition} \begin{theorem} Let the following list of instructions <def:poly> . Allowing ( for some natural coefficients $ <var:D> $ ) $ <var:r> = <var:D> $ before the execution of this series of instructions it follows that $ <var:k> = <nat:5> $ . \end{theorem} \begin{proof} Showing our claim about correctness for our set of instructions can be shown with usual Hoare techniques . Moving onward , we see the variable update code \verb | <var:T0> := <nat:5> ; | . This redefines $ \{ <var:r> = <var:D> \} $ into the postcondition $ \{ <var:r> = <var:D> \land <var:T0> = <nat:5> \} $ . Next , we see the variable update command \verb | <var:k> := <var:T0> | . This line transfers the condition $ \{ <var:r> = <var:D> \land <var:T0> = <nat:5> \} $ to the postcondition $ \{ <var:r> = <var:D> \land <var:k> = <nat:5> \} $ . \end{proof} \end{document} 
~
Require Import String . From PLF Require Import Imp . From PLF Require Import Hoare . Definition <var:T0> : string := " <var:T0> " . Definition <def:poly> := <var:T0> := <nat:5> ; <var:k> := <var:T0> . Theorem <genH:poly_code_correct> : forall <var:D> : nat , {{ <var:r> = <var:D> }} <def:poly> {{ <var:k> = <nat:5> }} . Proof . intros . apply hoare_seq with ( Q := ( ( <var:r> = <var:D> /\ <var:T0> = <nat:5> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:r> = <var:D> /\ <var:k> = <nat:5> ) ) %assertion ) . all : eapply hoare_consequence_pre ; try ( apply hoare_asgn || assn_auto'' ) . Qed . 