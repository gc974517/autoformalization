\begin{document} \begin{theorem} Consider the following set of commands as \begin{verbatim} <var:M> := <nat:1> ; <var:M> := <nat:3> + <var:M> * <var:n> \end{verbatim} Assume $ <var:n> = <var:r> $ given any integers $ <var:r> $ prior to the evaluation of our set of instructions , it must be that we have $ <var:M> = <nat:1> \times <var:r> + <nat:3> $ . \end{theorem} \begin{proof} Proving correctness for this series of commands is given through typical Hoare reasoning . Going forward , we have \[ \begin{tabular} {rcl} \{ <var:n> = <var:r> \} & <var:M> := <nat:1> & \{ <var:n> = <var:r> \land <var:M> = <nat:1> \} \\ \{ <var:n> = <var:r> \land <var:M> = <nat:1> \} & <var:M> := <nat:3> + <var:M> * <var:n& \{ <var:n> = <var:r> \land <var:M> = <nat:1> \times <var:r> + <nat:3> \} \end{tabular} This is guaranteed using the inference rule defined in Hoare techniques . \end{proof} \end{document} 
~
Require Import String . From PLF Require Import Imp . From PLF Require Import Hoare . Theorem <genH:poly_code_correct> : forall <var:r> : nat , {{ <var:n> = <var:r> }} <var:M> := <nat:1> ; <var:M> := <nat:3> + <var:M> * <var:n> {{ <var:M> = <nat:1> * <var:r> + <nat:3> }} . Proof . intros . apply hoare_seq with ( Q := ( ( <var:n> = <var:r> /\ <var:M> = <nat:1> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:n> = <var:r> /\ <var:M> = <nat:1> * <var:r> + <nat:3> ) ) %assertion ) . all : eapply hoare_consequence_pre ; try ( apply hoare_asgn || assn_auto'' ) . Qed . 