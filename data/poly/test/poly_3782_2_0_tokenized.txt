\begin{document} \begin{theorem} Consider a set of commands such that \begin{verbatim} <var:s0> := <nat:8> ; <var:l> := <var:s0> \end{verbatim} Given that $ <var:J> = <var:p> $ before interpreting the set of commands , it follows that $ <var:l> = <nat:8> $ . \end{theorem} \begin{proof} The application of typical Hoare logic gives us : \begin{eqnarray} \{ <var:J> = <var:p> \} \\ <var:s0> := <nat:8> ; \\ \{ <var:J> = <var:p> \land <var:s0> = <nat:8> \} \\ <var:l> := <var:s0> \\ \{ <var:J> = <var:p> \land <var:l> = <nat:8> \} \end{eqnarray} Considering the preceding argument , our program is proven correct . \end{proof} \end{document} 
~
Require Import String . From PLF Require Import Imp . From PLF Require Import Hoare . Definition <var:s0> : string := " <var:s0> " . Theorem <genH:poly_code_correct> : forall <var:p> : nat , {{ <var:J> = <var:p> }} <var:s0> := <nat:8> ; <var:l> := <var:s0> {{ <var:l> = <nat:8> }} . Proof . intros . apply hoare_seq with ( Q := ( ( <var:J> = <var:p> /\ <var:s0> = <nat:8> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:J> = <var:p> /\ <var:l> = <nat:8> ) ) %assertion ) . all : eapply hoare_consequence_pre ; try ( apply hoare_asgn || assn_auto'' ) . Qed . 