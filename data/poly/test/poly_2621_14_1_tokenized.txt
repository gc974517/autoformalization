\begin{document} \begin{theorem} Consider a code segment in \emph{Imp} as \begin{verbatim} <var:Z1> := <var:G> ; <var:Z2> := <var:Z1> * <var:G> ; <var:Z3> := <var:Z2> * <var:G> ; <var:Z4> := <var:Z3> * <var:G> ; <var:Z0> := <nat:5> ; <var:Z1> := <var:Z1> * <nat:2> ; <var:Z2> := <var:Z2> * <nat:9> ; <var:Z3> := <var:Z3> * <nat:2> ; <var:Z4> := <var:Z4> * <nat:2> ; <var:a> := <var:Z4> <var:a> := <var:a> + <var:Z3> <var:a> := <var:a> + <var:Z2> <var:a> := <var:a> + <var:Z1> <var:a> := <var:a> + <var:Z0> \end{verbatim} Allowing $ <var:G> = <var:A> $ , for positive integers $ <var:A> $ , before the execution of our set of commands it must be that we see $ <var:a> = <nat:2> \cdot <var:A> ^ <nat:4> + <nat:2> \cdot <var:A> ^ <nat:3> + <nat:9> \cdot <var:A> ^ <nat:2> + <nat:2> \cdot <var:A> + <nat:5> $ after code segment has exited . \end{theorem} \begin{proof} The flow of logic for the code segment is shown by Hoare reasoning . Moving onward , we have \[ \begin{tabular} {rcl} \{ <var:G> = <var:A> \} & <var:Z1> := <var:G> & \{ <var:G> = <var:A> \land <var:Z1> = <var:A> \} \\ \{ <var:G> = <var:A> \land <var:Z1> = <var:A> \} & <var:Z2> := <var:Z1> * <var:G> & \{ <var:G> = <var:A> \land <var:Z1> = <var:A> \land <var:Z2> = <var:A> ^ <nat:2> \} \\ \{ <var:G> = <var:A> \land <var:Z1> = <var:A> \land <var:Z2> = <var:A> ^ <nat:2> \} & <var:Z3> := <var:Z2> * <var:G> & \{ <var:G> = <var:A> \land <var:Z1> = <var:A> \land <var:Z2> = <var:A> ^ <nat:2> \land <var:Z3> = <var:A> ^ <nat:3> \} \\ \{ <var:G> = <var:A> \land <var:Z1> = <var:A> \land <var:Z2> = <var:A> ^ <nat:2> \land <var:Z3> = <var:A> ^ <nat:3> \} & <var:Z4> := <var:Z3> * <var:G> & \{ <var:G> = <var:A> \land <var:Z1> = <var:A> \land <var:Z2> = <var:A> ^ <nat:2> \land <var:Z3> = <var:A> ^ <nat:3> \land <var:Z4> = <var:A> ^ <nat:4> \} \\ \{ <var:G> = <var:A> \land <var:Z1> = <var:A> \land <var:Z2> = <var:A> ^ <nat:2> \land <var:Z3> = <var:A> ^ <nat:3> \land <var:Z4> = <var:A> ^ <nat:4> \} & <var:Z0> := <nat:5> & \{ <var:G> = <var:A> \land <var:Z1> = <var:A> \land <var:Z2> = <var:A> ^ <nat:2> \land <var:Z3> = <var:A> ^ <nat:3> \land <var:Z4> = <var:A> ^ <nat:4> \land <var:Z0> = <nat:5> \} \\ \{ <var:G> = <var:A> \land <var:Z1> = <var:A> \land <var:Z2> = <var:A> ^ <nat:2> \land <var:Z3> = <var:A> ^ <nat:3> \land <var:Z4> = <var:A> ^ <nat:4> \land <var:Z0> = <nat:5> \} & <var:Z1> := <var:Z1> * <nat:2> & \{ <var:G> = <var:A> \land <var:Z1> = <nat:2> \times <var:A> \land <var:Z2> = <var:A> ^ <nat:2> \land <var:Z3> = <var:A> ^ <nat:3> \land <var:Z4> = <var:A> ^ <nat:4> \land <var:Z0> = <nat:5> \} \\ \{ <var:G> = <var:A> \land <var:Z1> = <nat:2> \times <var:A> \land <var:Z2> = <var:A> ^ <nat:2> \land <var:Z3> = <var:A> ^ <nat:3> \land <var:Z4> = <var:A> ^ <nat:4> \land <var:Z0> = <nat:5> \} & <var:Z2> := <var:Z2> * <nat:9> & \{ <var:G> = <var:A> \land <var:Z1> = <nat:2> \times <var:A> \land <var:Z2> = <nat:9> \times <var:A> ^ <nat:2> \land <var:Z3> = <var:A> ^ <nat:3> \land <var:Z4> = <var:A> ^ <nat:4> \land <var:Z0> = <nat:5> \} \\ \{ <var:G> = <var:A> \land <var:Z1> = <nat:2> \times <var:A> \land <var:Z2> = <nat:9> \times <var:A> ^ <nat:2> \land <var:Z3> = <var:A> ^ <nat:3> \land <var:Z4> = <var:A> ^ <nat:4> \land <var:Z0> = <nat:5> \} & <var:Z3> := <var:Z3> * <nat:2> & \{ <var:G> = <var:A> \land <var:Z1> = <nat:2> \times <var:A> \land <var:Z2> = <nat:9> \times <var:A> ^ <nat:2> \land <var:Z3> = <nat:2> \times <var:A> ^ <nat:3> \land <var:Z4> = <var:A> ^ <nat:4> \land <var:Z0> = <nat:5> \} \\ \{ <var:G> = <var:A> \land <var:Z1> = <nat:2> \times <var:A> \land <var:Z2> = <nat:9> \times <var:A> ^ <nat:2> \land <var:Z3> = <nat:2> \times <var:A> ^ <nat:3> \land <var:Z4> = <var:A> ^ <nat:4> \land <var:Z0> = <nat:5> \} & <var:Z4> := <var:Z4> * <nat:2> & \{ <var:G> = <var:A> \land <var:Z1> = <nat:2> \times <var:A> \land <var:Z2> = <nat:9> \times <var:A> ^ <nat:2> \land <var:Z3> = <nat:2> \times <var:A> ^ <nat:3> \land <var:Z4> = <nat:2> \times <var:A> ^ <nat:4> \land <var:Z0> = <nat:5> \} \\ \{ <var:G> = <var:A> \land <var:Z1> = <nat:2> \times <var:A> \land <var:Z2> = <nat:9> \times <var:A> ^ <nat:2> \land <var:Z3> = <nat:2> \times <var:A> ^ <nat:3> \land <var:Z4> = <nat:2> \times <var:A> ^ <nat:4> \land <var:Z0> = <nat:5> \} & <var:a> := <var:Z4& \{ <var:G> = <var:A> \land <var:Z1> = <nat:2> \times <var:A> \land <var:Z2> = <nat:9> \times <var:A> ^ <nat:2> \land <var:Z3> = <nat:2> \times <var:A> ^ <nat:3> \land <var:Z0> = <nat:5> \land <var:a> = <nat:2> \times <var:A> ^ <nat:4> \} \\ \{ <var:G> = <var:A> \land <var:Z1> = <nat:2> \times <var:A> \land <var:Z2> = <nat:9> \times <var:A> ^ <nat:2> \land <var:Z3> = <nat:2> \times <var:A> ^ <nat:3> \land <var:Z0> = <nat:5> \land <var:a> = <nat:2> \times <var:A> ^ <nat:4> \} & <var:a> := <var:a> + <var:Z3& \{ <var:G> = <var:A> \land <var:Z1> = <nat:2> \times <var:A> \land <var:Z2> = <nat:9> \times <var:A> ^ <nat:2> \land <var:Z0> = <nat:5> \land <var:a> = <nat:2> \times <var:A> ^ <nat:4> + <nat:2> \times <var:A> ^ <nat:3> \} \\ \{ <var:G> = <var:A> \land <var:Z1> = <nat:2> \times <var:A> \land <var:Z2> = <nat:9> \times <var:A> ^ <nat:2> \land <var:Z0> = <nat:5> \land <var:a> = <nat:2> \times <var:A> ^ <nat:4> + <nat:2> \times <var:A> ^ <nat:3> \} & <var:a> := <var:a> + <var:Z2& \{ <var:G> = <var:A> \land <var:Z1> = <nat:2> \times <var:A> \land <var:Z0> = <nat:5> \land <var:a> = <nat:2> \times <var:A> ^ <nat:4> + <nat:2> \times <var:A> ^ <nat:3> + <nat:9> \times <var:A> ^ <nat:2> \} \\ \{ <var:G> = <var:A> \land <var:Z1> = <nat:2> \times <var:A> \land <var:Z0> = <nat:5> \land <var:a> = <nat:2> \times <var:A> ^ <nat:4> + <nat:2> \times <var:A> ^ <nat:3> + <nat:9> \times <var:A> ^ <nat:2> \} & <var:a> := <var:a> + <var:Z1& \{ <var:G> = <var:A> \land <var:Z0> = <nat:5> \land <var:a> = <nat:2> \times <var:A> ^ <nat:4> + <nat:2> \times <var:A> ^ <nat:3> + <nat:9> \times <var:A> ^ <nat:2> + <nat:2> \times <var:A> \} \\ \{ <var:G> = <var:A> \land <var:Z0> = <nat:5> \land <var:a> = <nat:2> \times <var:A> ^ <nat:4> + <nat:2> \times <var:A> ^ <nat:3> + <nat:9> \times <var:A> ^ <nat:2> + <nat:2> \times <var:A> \} & <var:a> := <var:a> + <var:Z0& \{ <var:G> = <var:A> \land <var:a> = <nat:2> \times <var:A> ^ <nat:4> + <nat:2> \times <var:A> ^ <nat:3> + <nat:9> \times <var:A> ^ <nat:2> + <nat:2> \times <var:A> + <nat:5> \} \end{tabular} \end{proof} \end{document} 
~
Require Import String . From PLF Require Import Imp . From PLF Require Import Hoare . Definition <var:Z0> : string := " <var:Z0> " . Definition <var:Z1> : string := " <var:Z1> " . Definition <var:Z2> : string := " <var:Z2> " . Definition <var:Z3> : string := " <var:Z3> " . Definition <var:Z4> : string := " <var:Z4> " . Theorem <genH:poly_code_correct> : forall <var:A> : nat , {{ <var:G> = <var:A> }} <var:Z1> := <var:G> ; <var:Z2> := <var:Z1> * <var:G> ; <var:Z3> := <var:Z2> * <var:G> ; <var:Z4> := <var:Z3> * <var:G> ; <var:Z0> := <nat:5> ; <var:Z1> := <var:Z1> * <nat:2> ; <var:Z2> := <var:Z2> * <nat:9> ; <var:Z3> := <var:Z3> * <nat:2> ; <var:Z4> := <var:Z4> * <nat:2> ; <var:a> := <var:Z4> <var:a> := <var:a> + <var:Z3> <var:a> := <var:a> + <var:Z2> <var:a> := <var:a> + <var:Z1> <var:a> := <var:a> + <var:Z0> {{ <var:a> = <nat:2> * <var:A> ^ <nat:4> + <nat:2> * <var:A> ^ <nat:3> + <nat:9> * <var:A> ^ <nat:2> + <nat:2> * <var:A> + <nat:5> }} . Proof . intros . apply hoare_seq with ( Q := ( ( <var:G> = <var:A> /\ <var:Z1> = <var:A> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:G> = <var:A> /\ <var:Z1> = <var:A> /\ <var:Z2> = <var:A> ^ <nat:2> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:G> = <var:A> /\ <var:Z1> = <var:A> /\ <var:Z2> = <var:A> ^ <nat:2> /\ <var:Z3> = <var:A> ^ <nat:3> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:G> = <var:A> /\ <var:Z1> = <var:A> /\ <var:Z2> = <var:A> ^ <nat:2> /\ <var:Z3> = <var:A> ^ <nat:3> /\ <var:Z4> = <var:A> ^ <nat:4> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:G> = <var:A> /\ <var:Z1> = <var:A> /\ <var:Z2> = <var:A> ^ <nat:2> /\ <var:Z3> = <var:A> ^ <nat:3> /\ <var:Z4> = <var:A> ^ <nat:4> /\ <var:Z0> = <nat:5> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:G> = <var:A> /\ <var:Z1> = <nat:2> * <var:A> /\ <var:Z2> = <var:A> ^ <nat:2> /\ <var:Z3> = <var:A> ^ <nat:3> /\ <var:Z4> = <var:A> ^ <nat:4> /\ <var:Z0> = <nat:5> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:G> = <var:A> /\ <var:Z1> = <nat:2> * <var:A> /\ <var:Z2> = <nat:9> * <var:A> ^ <nat:2> /\ <var:Z3> = <var:A> ^ <nat:3> /\ <var:Z4> = <var:A> ^ <nat:4> /\ <var:Z0> = <nat:5> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:G> = <var:A> /\ <var:Z1> = <nat:2> * <var:A> /\ <var:Z2> = <nat:9> * <var:A> ^ <nat:2> /\ <var:Z3> = <nat:2> * <var:A> ^ <nat:3> /\ <var:Z4> = <var:A> ^ <nat:4> /\ <var:Z0> = <nat:5> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:G> = <var:A> /\ <var:Z1> = <nat:2> * <var:A> /\ <var:Z2> = <nat:9> * <var:A> ^ <nat:2> /\ <var:Z3> = <nat:2> * <var:A> ^ <nat:3> /\ <var:Z4> = <nat:2> * <var:A> ^ <nat:4> /\ <var:Z0> = <nat:5> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:G> = <var:A> /\ <var:Z1> = <nat:2> * <var:A> /\ <var:Z2> = <nat:9> * <var:A> ^ <nat:2> /\ <var:Z3> = <nat:2> * <var:A> ^ <nat:3> /\ <var:Z0> = <nat:5> /\ <var:a> = <nat:2> * <var:A> ^ <nat:4> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:G> = <var:A> /\ <var:Z1> = <nat:2> * <var:A> /\ <var:Z2> = <nat:9> * <var:A> ^ <nat:2> /\ <var:Z0> = <nat:5> /\ <var:a> = <nat:2> * <var:A> ^ <nat:4> + <nat:2> * <var:A> ^ <nat:3> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:G> = <var:A> /\ <var:Z1> = <nat:2> * <var:A> /\ <var:Z0> = <nat:5> /\ <var:a> = <nat:2> * <var:A> ^ <nat:4> + <nat:2> * <var:A> ^ <nat:3> + <nat:9> * <var:A> ^ <nat:2> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:G> = <var:A> /\ <var:Z0> = <nat:5> /\ <var:a> = <nat:2> * <var:A> ^ <nat:4> + <nat:2> * <var:A> ^ <nat:3> + <nat:9> * <var:A> ^ <nat:2> + <nat:2> * <var:A> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:G> = <var:A> /\ <var:a> = <nat:2> * <var:A> ^ <nat:4> + <nat:2> * <var:A> ^ <nat:3> + <nat:9> * <var:A> ^ <nat:2> + <nat:2> * <var:A> + <nat:5> ) ) %assertion ) . all : eapply hoare_consequence_pre ; try ( apply hoare_asgn || assn_auto'' ) . Qed . 