\begin{document} \begin{theorem} Define a program in \emph{Imp} as \begin{verbatim} <var:F0> := <nat:4> ; <var:F1> := <nat:8> ; <var:F1> := <var:F1> * <var:r> ; <var:F2> := <nat:4> ; <var:F2> := <var:F2> * <var:r> ; <var:F2> := <var:F2> * <var:r> ; <var:F3> := <nat:5> ; <var:F3> := <var:F3> * <var:r> ; <var:F3> := <var:F3> * <var:r> ; <var:F3> := <var:F3> * <var:r> ; <var:D> := <var:F3> ; <var:D> := <var:D> + <var:F2> ; <var:D> := <var:D> + <var:F1> ; <var:D> := <var:D> + <var:F0> \end{verbatim} Given it to be that $ <var:r> = <var:M> $ before the execution of our code , then $ <var:D> = <nat:5> \cdot <var:M> ^ <nat:3> + <nat:4> \cdot <var:M> ^ <nat:2> + <nat:8> \cdot <var:M> + <nat:4> $ . \end{theorem} \begin{proof} The argument for the series of instructions is given using typical Hoare reasoning . Advancing to the proceeding lines seen in the list of commands , we see \[ \begin{tabular} {rcl} \{ <var:r> = <var:M> \} & <var:F0> := <nat:4> & \{ <var:r> = <var:M> \land <var:F0> = <nat:4> \} \\ \{ <var:r> = <var:M> \land <var:F0> = <nat:4> \} & <var:F1> := <nat:8> & \{ <var:r> = <var:M> \land <var:F0> = <nat:4> \land <var:F1> = <nat:8> \} \\ \{ <var:r> = <var:M> \land <var:F0> = <nat:4> \land <var:F1> = <nat:8> \} & <var:F1> := <var:F1> * <var:r> & \{ <var:r> = <var:M> \land <var:F0> = <nat:4> \land <var:F1> = <nat:8> \cdot <var:M> \} \\ \{ <var:r> = <var:M> \land <var:F0> = <nat:4> \land <var:F1> = <nat:8> \cdot <var:M> \} & <var:F2> := <nat:4> & \{ <var:r> = <var:M> \land <var:F0> = <nat:4> \land <var:F1> = <nat:8> \cdot <var:M> \land <var:F2> = <nat:4> \} \\ \{ <var:r> = <var:M> \land <var:F0> = <nat:4> \land <var:F1> = <nat:8> \cdot <var:M> \land <var:F2> = <nat:4> \} & <var:F2> := <var:F2> * <var:r> & \{ <var:r> = <var:M> \land <var:F0> = <nat:4> \land <var:F1> = <nat:8> \cdot <var:M> \land <var:F2> = <nat:4> \cdot <var:M> \} \\ \{ <var:r> = <var:M> \land <var:F0> = <nat:4> \land <var:F1> = <nat:8> \cdot <var:M> \land <var:F2> = <nat:4> \cdot <var:M> \} & <var:F2> := <var:F2> * <var:r> & \{ <var:r> = <var:M> \land <var:F0> = <nat:4> \land <var:F1> = <nat:8> \cdot <var:M> \land <var:F2> = <nat:4> \cdot <var:M> ^ <nat:2> \} \end{tabular} Now , we have \[ \begin{tabular} {rcl} \{ <var:r> = <var:M> \} & <var:F0> := <nat:4> & \{ <var:r> = <var:M> \land <var:F0> = <nat:4> \} \\ \{ <var:r> = <var:M> \land <var:F0> = <nat:4> \} & <var:F1> := <nat:8> & \{ <var:r> = <var:M> \land <var:F0> = <nat:4> \land <var:F1> = <nat:8> \} \\ \{ <var:r> = <var:M> \land <var:F0> = <nat:4> \land <var:F1> = <nat:8> \} & <var:F1> := <var:F1> * <var:r> & \{ <var:r> = <var:M> \land <var:F0> = <nat:4> \land <var:F1> = <nat:8> \cdot <var:M> \} \\ \{ <var:r> = <var:M> \land <var:F0> = <nat:4> \land <var:F1> = <nat:8> \cdot <var:M> \} & <var:F2> := <nat:4> & \{ <var:r> = <var:M> \land <var:F0> = <nat:4> \land <var:F1> = <nat:8> \cdot <var:M> \land <var:F2> = <nat:4> \} \\ \{ <var:r> = <var:M> \land <var:F0> = <nat:4> \land <var:F1> = <nat:8> \cdot <var:M> \land <var:F2> = <nat:4> \} & <var:F2> := <var:F2> * <var:r> & \{ <var:r> = <var:M> \land <var:F0> = <nat:4> \land <var:F1> = <nat:8> \cdot <var:M> \land <var:F2> = <nat:4> \cdot <var:M> \} \\ \{ <var:r> = <var:M> \land <var:F0> = <nat:4> \land <var:F1> = <nat:8> \cdot <var:M> \land <var:F2> = <nat:4> \cdot <var:M> \} & <var:F2> := <var:F2> * <var:r> & \{ <var:r> = <var:M> \land <var:F0> = <nat:4> \land <var:F1> = <nat:8> \cdot <var:M> \land <var:F2> = <nat:4> \cdot <var:M> ^ <nat:2> \} \\ \{ <var:r> = <var:M> \land <var:F0> = <nat:4> \land <var:F1> = <nat:8> \cdot <var:M> \land <var:F2> = <nat:4> \cdot <var:M> ^ <nat:2> \} & <var:F3> := <nat:5> & \{ <var:r> = <var:M> \land <var:F0> = <nat:4> \land <var:F1> = <nat:8> \cdot <var:M> \land <var:F2> = <nat:4> \cdot <var:M> ^ <nat:2> \land <var:F3> = <nat:5> \} \\ \{ <var:r> = <var:M> \land <var:F0> = <nat:4> \land <var:F1> = <nat:8> \cdot <var:M> \land <var:F2> = <nat:4> \cdot <var:M> ^ <nat:2> \land <var:F3> = <nat:5> \} & <var:F3> := <var:F3> * <var:r> & \{ <var:r> = <var:M> \land <var:F0> = <nat:4> \land <var:F1> = <nat:8> \cdot <var:M> \land <var:F2> = <nat:4> \cdot <var:M> ^ <nat:2> \land <var:F3> = <nat:5> \cdot <var:M> \} \end{tabular} \end{proof} \end{document} 
~
Require Import String . From PLF Require Import Imp . From PLF Require Import Hoare . Definition <var:F0> : string := " <var:F0> " . Definition <var:F1> : string := " <var:F1> " . Definition <var:F2> : string := " <var:F2> " . Definition <var:F3> : string := " <var:F3> " . Theorem <genH:poly_code_correct> : forall <var:M> : nat , {{ <var:r> = <var:M> }} <var:F0> := <nat:4> ; <var:F1> := <nat:8> ; <var:F1> := <var:F1> * <var:r> ; <var:F2> := <nat:4> ; <var:F2> := <var:F2> * <var:r> ; <var:F2> := <var:F2> * <var:r> ; <var:F3> := <nat:5> ; <var:F3> := <var:F3> * <var:r> ; <var:F3> := <var:F3> * <var:r> ; <var:F3> := <var:F3> * <var:r> ; <var:D> := <var:F3> ; <var:D> := <var:D> + <var:F2> ; <var:D> := <var:D> + <var:F1> ; <var:D> := <var:D> + <var:F0> {{ <var:D> = <nat:5> * <var:M> ^ <nat:3> + <nat:4> * <var:M> ^ <nat:2> + <nat:8> * <var:M> + <nat:4> }} . Proof . intros . apply hoare_seq with ( Q := ( ( <var:r> = <var:M> /\ <var:F0> = <nat:4> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:r> = <var:M> /\ <var:F0> = <nat:4> /\ <var:F1> = <nat:8> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:r> = <var:M> /\ <var:F0> = <nat:4> /\ <var:F1> = <nat:8> * <var:M> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:r> = <var:M> /\ <var:F0> = <nat:4> /\ <var:F1> = <nat:8> * <var:M> /\ <var:F2> = <nat:4> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:r> = <var:M> /\ <var:F0> = <nat:4> /\ <var:F1> = <nat:8> * <var:M> /\ <var:F2> = <nat:4> * <var:M> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:r> = <var:M> /\ <var:F0> = <nat:4> /\ <var:F1> = <nat:8> * <var:M> /\ <var:F2> = <nat:4> * <var:M> ^ <nat:2> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:r> = <var:M> /\ <var:F0> = <nat:4> /\ <var:F1> = <nat:8> * <var:M> /\ <var:F2> = <nat:4> * <var:M> ^ <nat:2> /\ <var:F3> = <nat:5> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:r> = <var:M> /\ <var:F0> = <nat:4> /\ <var:F1> = <nat:8> * <var:M> /\ <var:F2> = <nat:4> * <var:M> ^ <nat:2> /\ <var:F3> = <nat:5> * <var:M> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:r> = <var:M> /\ <var:F0> = <nat:4> /\ <var:F1> = <nat:8> * <var:M> /\ <var:F2> = <nat:4> * <var:M> ^ <nat:2> /\ <var:F3> = <nat:5> * <var:M> ^ <nat:2> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:r> = <var:M> /\ <var:F0> = <nat:4> /\ <var:F1> = <nat:8> * <var:M> /\ <var:F2> = <nat:4> * <var:M> ^ <nat:2> /\ <var:F3> = <nat:5> * <var:M> ^ <nat:3> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:r> = <var:M> /\ <var:F0> = <nat:4> /\ <var:F1> = <nat:8> * <var:M> /\ <var:F2> = <nat:4> * <var:M> ^ <nat:2> /\ <var:D> = <nat:5> * <var:M> ^ <nat:3> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:r> = <var:M> /\ <var:F0> = <nat:4> /\ <var:F1> = <nat:8> * <var:M> /\ <var:D> = <nat:5> * <var:M> ^ <nat:3> + <nat:4> * <var:M> ^ <nat:2> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:r> = <var:M> /\ <var:F0> = <nat:4> /\ <var:D> = <nat:5> * <var:M> ^ <nat:3> + <nat:4> * <var:M> ^ <nat:2> + <nat:8> * <var:M> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:r> = <var:M> /\ <var:D> = <nat:5> * <var:M> ^ <nat:3> + <nat:4> * <var:M> ^ <nat:2> + <nat:8> * <var:M> + <nat:4> ) ) %assertion ) . all : eapply hoare_consequence_pre ; try ( apply hoare_asgn || assn_auto'' ) . Qed . 