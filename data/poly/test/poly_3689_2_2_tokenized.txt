\begin{document} \begin{definition} We define a set of instructions <def:poly> in \emph{Imp} as follows \begin{verbatim} <var:d> := <nat:4> ; <var:d> := <nat:1> + <var:d> * <var:i> \end{verbatim} \end{definition} \begin{theorem} Take a code <def:poly> in \emph{Imp} . Allowing ( given natural coefficients $ <var:V> $ ) it to hold that $ <var:i> = <var:V> $ before the evaluation of our set of commands , it follows that we see $ <var:d> = <nat:4> * <var:V> + <nat:1> $ . \end{theorem} \begin{proof} Proving correctness for our code is accomplished through Hoare reasoning . Immediately following , \begin{verbatim} { <var:i> = <var:V> } <var:d> := <nat:4> { <var:i> = <var:V> \land <var:d> = <nat:4> } { <var:i> = <var:V> \land <var:d> = <nat:4> } <var:d> := <nat:1> + <var:d> * <var:i{ <var:i> = <var:V> \land <var:d> = <nat:4> \times <var:V> + <nat:1> } \end{verbatim} \end{proof} \end{document} 
~
Require Import String . From PLF Require Import Imp . From PLF Require Import Hoare . Definition <def:poly> := <var:d> := <nat:4> ; <var:d> := <nat:1> + <var:d> * <var:i> . Theorem <genH:poly_code_correct> : forall <var:V> : nat , {{ <var:i> = <var:V> }} <def:poly> {{ <var:d> = <nat:4> * <var:V> + <nat:1> }} . Proof . intros . apply hoare_seq with ( Q := ( ( <var:i> = <var:V> /\ <var:d> = <nat:4> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:i> = <var:V> /\ <var:d> = <nat:4> * <var:V> + <nat:1> ) ) %assertion ) . all : eapply hoare_consequence_pre ; try ( apply hoare_asgn || assn_auto'' ) . Qed . 