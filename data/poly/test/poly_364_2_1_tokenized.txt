\begin{document} \begin{theorem} Let the following list of instructions such that \begin{verbatim} <var:Y0> := <nat:9> ; <var:U> := <var:Y0> \end{verbatim} Given given every whole numbers $ <var:Z> $ it to hold that $ <var:y> = <var:Z> $ prior to executing this code segment it must be that we see $ <var:U> = <nat:9> $ . \end{theorem} \begin{proof} The flow of logic for the code is given through usual Hoare logic . After , we see \verb | { <var:y> = <var:Z> } <var:Y0> := <nat:9> { <var:y> = <var:Z> \land <var:Y0> = <nat:9> } | . After , \verb | { <var:y> = <var:Z> } <var:Y0> := <nat:9> { <var:y> = <var:Z> \land <var:Y0> = <nat:9> } | . \end{proof} \end{document} 
~
Require Import String . From PLF Require Import Imp . From PLF Require Import Hoare . Definition <var:Y0> : string := " <var:Y0> " . Theorem <genH:poly_code_correct> : forall <var:Z> : nat , {{ <var:y> = <var:Z> }} <var:Y0> := <nat:9> ; <var:U> := <var:Y0> {{ <var:U> = <nat:9> }} . Proof . intros . apply hoare_seq with ( Q := ( ( <var:y> = <var:Z> /\ <var:Y0> = <nat:9> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:y> = <var:Z> /\ <var:U> = <nat:9> ) ) %assertion ) . all : eapply hoare_consequence_pre ; try ( apply hoare_asgn || assn_auto'' ) . Qed . 