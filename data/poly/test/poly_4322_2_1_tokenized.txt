\begin{document} \begin{definition} Consider the following set of instructions <def:poly> in \emph{Imp} such that \begin{verbatim} <var:I0> := <nat:8> ; <var:R> := <var:I0> \end{verbatim} \end{definition} \begin{theorem} Given it to be that $ <var:w> = <var:b> $ before interpreting the series of commands , it follows that we have $ <var:R> = <nat:8> $ . \end{theorem} \begin{proof} The proof of this code is given with standard Hoare techniques . Jumping to the proceeding statement found in the program , we see the assignment line yielding $ <nat:8> $ into $ <var:I0>$ . This statement advances the precondition $ \{ <var:w> = <var:b> \} $ into the postcondition $ \{ <var:w> = <var:b> \land <var:I0> = <nat:8> \} $ . Honing in on the subsequent step contained in the series of commands , we have the line \verb | <var:R> := <var:I0> | . This moves $ \{ <var:w> = <var:b> \land <var:I0> = <nat:8> \} $ as $ \{ <var:w> = <var:b> \land <var:R> = <nat:8> \} $ . This is ensured using the assignment scheme given in standard Hoare techniques . \end{proof} \end{document} 
~
Require Import String . From PLF Require Import Imp . From PLF Require Import Hoare . Definition <var:I0> : string := " <var:I0> " . Definition <def:poly> := <var:I0> := <nat:8> ; <var:R> := <var:I0> . Theorem <genH:poly_code_correct> : forall <var:b> : nat , {{ <var:w> = <var:b> }} <def:poly> {{ <var:R> = <nat:8> }} . Proof . intros . apply hoare_seq with ( Q := ( ( <var:w> = <var:b> /\ <var:I0> = <nat:8> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:w> = <var:b> /\ <var:R> = <nat:8> ) ) %assertion ) . all : eapply hoare_consequence_pre ; try ( apply hoare_asgn || assn_auto'' ) . Qed . 