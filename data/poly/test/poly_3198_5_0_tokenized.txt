\begin{document} \begin{definition} Consider the following code <def:poly> in \emph{Imp} : \begin{verbatim} <var:S0> := <nat:7> ; <var:S1> := <nat:9> ; <var:S1> := <var:S1> * <var:r> ; <var:G> := <var:S1> ; <var:G> := <var:G> + <var:S0> \end{verbatim} \end{definition} \begin{theorem} Consider the following list of commands <def:poly> . Assuming it to be that $ <var:r> = <var:O> $ prior to the execution of the list of commands , then we see $ <var:G> = <nat:9> * <var:O> + <nat:7> $ . \end{theorem} \begin{proof} Proving correctness for the set of instructions is shown with usual Hoare reasoning . Looking at the proceeding line found in our list of instructions , we see \verb | { <var:r> = <var:O> } <var:S0> := <nat:7> { <var:r> = <var:O> \land <var:S0> = <nat:7> } | . This is shown to be logically sound through the environment update law defined in standard Hoare logic . Shifting focus toward the subsequent lines found in our series of commands , \verb | { <var:r> = <var:O> } <var:S0> := <nat:7> { <var:r> = <var:O> \land <var:S0> = <nat:7> } | , \verb | { <var:r> = <var:O> \land <var:S0> = <nat:7> } <var:S1> := <nat:9> { <var:r> = <var:O> \land <var:S0> = <nat:7> \land <var:S1> = <nat:9> } | and \verb | { <var:r> = <var:O> \land <var:S0> = <nat:7> \land <var:S1> = <nat:9> } <var:S1> := <var:S1> * <var:r> { <var:r> = <var:O> \land <var:S0> = <nat:7> \land <var:S1> = <nat:9> \times <var:O> } | . Paying attention to the next piece of code in our set of commands , we have \verb | { <var:r> = <var:O> } <var:S0> := <nat:7> { <var:r> = <var:O> \land <var:S0> = <nat:7> } | . This is shown to be logically sound with the environment update law found in Hoare logic . \end{proof} \end{document} 
~
Require Import String . From PLF Require Import Imp . From PLF Require Import Hoare . Definition <var:S0> : string := " <var:S0> " . Definition <var:S1> : string := " <var:S1> " . Definition <def:poly> := <var:S0> := <nat:7> ; <var:S1> := <nat:9> ; <var:S1> := <var:S1> * <var:r> ; <var:G> := <var:S1> ; <var:G> := <var:G> + <var:S0> . Theorem <genH:poly_code_correct> : forall <var:O> : nat , {{ <var:r> = <var:O> }} <def:poly> {{ <var:G> = <nat:9> * <var:O> + <nat:7> }} . Proof . intros . apply hoare_seq with ( Q := ( ( <var:r> = <var:O> /\ <var:S0> = <nat:7> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:r> = <var:O> /\ <var:S0> = <nat:7> /\ <var:S1> = <nat:9> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:r> = <var:O> /\ <var:S0> = <nat:7> /\ <var:S1> = <nat:9> * <var:O> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:r> = <var:O> /\ <var:S0> = <nat:7> /\ <var:G> = <nat:9> * <var:O> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:r> = <var:O> /\ <var:G> = <nat:9> * <var:O> + <nat:7> ) ) %assertion ) . all : eapply hoare_consequence_pre ; try ( apply hoare_asgn || assn_auto'' ) . Qed . 