\begin{document} \begin{definition} Define a set of commands <def:poly> in \emph{Imp} as \begin{verbatim} <var:Y0> := <nat:5> ; <var:D> := <var:Y0> \end{verbatim} \end{definition} \begin{theorem} Assume it to hold that $ <var:r> = <var:b> $ before the evaluation of the set of commands it follows that we see $ <var:D> = <nat:5> $ . \end{theorem} \begin{proof} The proof of our set of commands can be given through standard Hoare reasoning . Observing the subsequent statement seen in our set of instructions , we have \begin{verbatim} { <var:r> = <var:b> } <var:Y0> := <nat:5> { <var:r> = <var:b> \land <var:Y0> = <nat:5> } \end{verbatim} Now , \begin{verbatim} { <var:r> = <var:b> } <var:Y0> := <nat:5> { <var:r> = <var:b> \land <var:Y0> = <nat:5> } \end{verbatim} This is shown to be logically sound using the assignment inference rule given by standard Hoare logic . \end{proof} \end{document} 
~
Require Import String . From PLF Require Import Imp . From PLF Require Import Hoare . Definition <var:Y0> : string := " <var:Y0> " . Definition <def:poly> := <var:Y0> := <nat:5> ; <var:D> := <var:Y0> . Theorem <genH:poly_code_correct> : forall <var:b> : nat , {{ <var:r> = <var:b> }} <def:poly> {{ <var:D> = <nat:5> }} . Proof . intros . apply hoare_seq with ( Q := ( ( <var:r> = <var:b> /\ <var:Y0> = <nat:5> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:r> = <var:b> /\ <var:D> = <nat:5> ) ) %assertion ) . all : eapply hoare_consequence_pre ; try ( apply hoare_asgn || assn_auto'' ) . Qed . 