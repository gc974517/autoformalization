\begin{document} \begin{definition} Define the following list of commands <def:poly> in \emph{Imp} : \begin{verbatim} <var:w0> := <nat:4> ; <var:K> := <var:w0> \end{verbatim} \end{definition} \begin{theorem} Assume $ <var:M> = <var:J> $ ahead of interpreting this list of instructions , it follows that $ <var:K> = <nat:4> $ when list of commands has exited . \end{theorem} \begin{proof} Proving correctness for our list of commands can be accomplished using Hoare techniques . Advancing , \verb | { <var:M> = <var:J> } <var:w0> := <nat:4> { <var:M> = <var:J> \land <var:w0> = <nat:4> } | and \verb | { <var:M> = <var:J> \land <var:w0> = <nat:4> } <var:K> := <var:w0{ <var:M> = <var:J> \land <var:K> = <nat:4> } | . \end{proof} \end{document} 
~
Require Import String . From PLF Require Import Imp . From PLF Require Import Hoare . Definition <var:w0> : string := " <var:w0> " . Definition <def:poly> := <var:w0> := <nat:4> ; <var:K> := <var:w0> . Theorem <genH:poly_code_correct> : forall <var:J> : nat , {{ <var:M> = <var:J> }} <def:poly> {{ <var:K> = <nat:4> }} . Proof . intros . apply hoare_seq with ( Q := ( ( <var:M> = <var:J> /\ <var:w0> = <nat:4> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:M> = <var:J> /\ <var:K> = <nat:4> ) ) %assertion ) . all : eapply hoare_consequence_pre ; try ( apply hoare_asgn || assn_auto'' ) . Qed . 