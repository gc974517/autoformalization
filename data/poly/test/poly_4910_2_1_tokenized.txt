\begin{document} \begin{definition} Consider the following series of instructions <def:poly> in \emph{Imp} as follows \begin{verbatim} <var:y0> := <nat:2> ; <var:h> := <var:y0> \end{verbatim} \end{definition} \begin{theorem} Allow $ <var:C> = <var:S> $ with some natural coefficients $ <var:S> $ prior to the execution of our list of commands , it follows that we see $ <var:h> = <nat:2> $ . \end{theorem} \begin{proof} Applying Hoare techniques produces : \begin{eqnarray} \{ <var:C> = <var:S> \} \\ <var:y0> := <nat:2> ; \\ \{ <var:C> = <var:S> \land <var:y0> = <nat:2> \} \\ <var:h> := <var:y0> \\ \{ <var:C> = <var:S> \land <var:h> = <nat:2> \} \end{eqnarray} Hence , our code is validated as correct . \end{proof} \end{document} 
~
Require Import String . From PLF Require Import Imp . From PLF Require Import Hoare . Definition <var:y0> : string := " <var:y0> " . Definition <def:poly> := <var:y0> := <nat:2> ; <var:h> := <var:y0> . Theorem <genH:poly_code_correct> : forall <var:S> : nat , {{ <var:C> = <var:S> }} <def:poly> {{ <var:h> = <nat:2> }} . Proof . intros . apply hoare_seq with ( Q := ( ( <var:C> = <var:S> /\ <var:y0> = <nat:2> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:C> = <var:S> /\ <var:h> = <nat:2> ) ) %assertion ) . all : eapply hoare_consequence_pre ; try ( apply hoare_asgn || assn_auto'' ) . Qed . 