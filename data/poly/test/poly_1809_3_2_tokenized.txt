\begin{document} \begin{definition} Take the following series of instructions <def:poly> in \emph{Imp} as \begin{verbatim} <var:y> := <nat:2> ; <var:y> := <nat:2> + <var:y> * <var:b> ; <var:y> := <nat:4> + <var:y> * <var:b> \end{verbatim} \end{definition} \begin{theorem} Take the following segment of code <def:poly> . Allow , for any whole numbers $ <var:S> $ , $ <var:b> = <var:S> $ ahead of evaluating our list of instructions then we have $ <var:y> = <nat:2> \times <var:S> ^ <nat:2> + <nat:2> \times <var:S> + <nat:4> $ once list of commands has executed . \end{theorem} \begin{proof} Applying usual Hoare techniques produces : \begin{eqnarray} \{ <var:b> = <var:S> \} \\ <var:y> := <nat:2> ; \\ \{ <var:b> = <var:S> \land <var:y> = <nat:2> \} \\ <var:y> := <nat:2> + <var:y> * <var:b> ; \\ \{ <var:b> = <var:S> \land <var:y> = <nat:2> \cdot <var:S> + <nat:2> \} \\ <var:y> := <nat:4> + <var:y> * <var:b> \\ \{ <var:b> = <var:S> \land <var:y> = <nat:2> \cdot <var:S> ^ <nat:2> + <nat:2> \cdot <var:S> + <nat:4> \} \end{eqnarray} Hence , this list of commands has been proven correct . \end{proof} \end{document} 
~
Require Import String . From PLF Require Import Imp . From PLF Require Import Hoare . Definition <def:poly> := <var:y> := <nat:2> ; <var:y> := <nat:2> + <var:y> * <var:b> ; <var:y> := <nat:4> + <var:y> * <var:b> . Theorem <genH:poly_code_correct> : forall <var:S> : nat , {{ <var:b> = <var:S> }} <def:poly> {{ <var:y> = <nat:2> * <var:S> ^ <nat:2> + <nat:2> * <var:S> + <nat:4> }} . Proof . intros . apply hoare_seq with ( Q := ( ( <var:b> = <var:S> /\ <var:y> = <nat:2> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:b> = <var:S> /\ <var:y> = <nat:2> * <var:S> + <nat:2> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:b> = <var:S> /\ <var:y> = <nat:2> * <var:S> ^ <nat:2> + <nat:2> * <var:S> + <nat:4> ) ) %assertion ) . all : eapply hoare_consequence_pre ; try ( apply hoare_asgn || assn_auto'' ) . Qed . 