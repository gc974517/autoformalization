\begin{document} \begin{definition} Define the following segment of code <def:poly> in \emph{Imp} as \begin{verbatim} <var:t1> := <var:b> ; <var:t2> := <var:t1> * <var:b> ; <var:t3> := <var:t2> * <var:b> ; <var:t4> := <var:t3> * <var:b> ; <var:t0> := <nat:1> ; <var:t1> := <var:t1> * <nat:6> ; <var:t2> := <var:t2> * <nat:4> ; <var:t3> := <var:t3> * <nat:8> ; <var:t4> := <var:t4> * <nat:2> ; <var:V> := <var:t4> <var:V> := <var:V> + <var:t3> <var:V> := <var:V> + <var:t2> <var:V> := <var:V> + <var:t1> <var:V> := <var:V> + <var:t0> \end{verbatim} \end{definition} \begin{theorem} Assume that we have $ <var:b> = <var:A> $ before the execution of the code , it holds that we have $ <var:V> = <nat:2> \cdot <var:A> ^ <nat:4> + <nat:8> \cdot <var:A> ^ <nat:3> + <nat:4> \cdot <var:A> ^ <nat:2> + <nat:6> \cdot <var:A> + <nat:1> $ after set of instructions terminates . \end{theorem} \begin{proof} Demonstrating correctness of this set of instructions is evident with Hoare logic . Following , we see \begin{eqnarray} \{ <var:b> = <var:A> \} \, <var:t1> := <var:b> \, \{ <var:b> = <var:A> \land <var:t1> = <var:A> \} \\ \{ <var:b> = <var:A> \land <var:t1> = <var:A> \} \, <var:t2> := <var:t1> * <var:b> \, \{ <var:b> = <var:A> \land <var:t1> = <var:A> \land <var:t2> = <var:A> ^ <nat:2> \} \\ \{ <var:b> = <var:A> \land <var:t1> = <var:A> \land <var:t2> = <var:A> ^ <nat:2> \} \, <var:t3> := <var:t2> * <var:b> \, \{ <var:b> = <var:A> \land <var:t1> = <var:A> \land <var:t2> = <var:A> ^ <nat:2> \land <var:t3> = <var:A> ^ <nat:3> \} \\ \{ <var:b> = <var:A> \land <var:t1> = <var:A> \land <var:t2> = <var:A> ^ <nat:2> \land <var:t3> = <var:A> ^ <nat:3> \} \, <var:t4> := <var:t3> * <var:b> \, \{ <var:b> = <var:A> \land <var:t1> = <var:A> \land <var:t2> = <var:A> ^ <nat:2> \land <var:t3> = <var:A> ^ <nat:3> \land <var:t4> = <var:A> ^ <nat:4> \} \\ \{ <var:b> = <var:A> \land <var:t1> = <var:A> \land <var:t2> = <var:A> ^ <nat:2> \land <var:t3> = <var:A> ^ <nat:3> \land <var:t4> = <var:A> ^ <nat:4> \} \, <var:t0> := <nat:1> \, \{ <var:b> = <var:A> \land <var:t1> = <var:A> \land <var:t2> = <var:A> ^ <nat:2> \land <var:t3> = <var:A> ^ <nat:3> \land <var:t4> = <var:A> ^ <nat:4> \land <var:t0> = <nat:1> \} \\ \{ <var:b> = <var:A> \land <var:t1> = <var:A> \land <var:t2> = <var:A> ^ <nat:2> \land <var:t3> = <var:A> ^ <nat:3> \land <var:t4> = <var:A> ^ <nat:4> \land <var:t0> = <nat:1> \} \, <var:t1> := <var:t1> * <nat:6> \, \{ <var:b> = <var:A> \land <var:t1> = <nat:6> \cdot <var:A> \land <var:t2> = <var:A> ^ <nat:2> \land <var:t3> = <var:A> ^ <nat:3> \land <var:t4> = <var:A> ^ <nat:4> \land <var:t0> = <nat:1> \} \\ \{ <var:b> = <var:A> \land <var:t1> = <nat:6> \cdot <var:A> \land <var:t2> = <var:A> ^ <nat:2> \land <var:t3> = <var:A> ^ <nat:3> \land <var:t4> = <var:A> ^ <nat:4> \land <var:t0> = <nat:1> \} \, <var:t2> := <var:t2> * <nat:4> \, \{ <var:b> = <var:A> \land <var:t1> = <nat:6> \cdot <var:A> \land <var:t2> = <nat:4> \cdot <var:A> ^ <nat:2> \land <var:t3> = <var:A> ^ <nat:3> \land <var:t4> = <var:A> ^ <nat:4> \land <var:t0> = <nat:1> \} \\ \{ <var:b> = <var:A> \land <var:t1> = <nat:6> \cdot <var:A> \land <var:t2> = <nat:4> \cdot <var:A> ^ <nat:2> \land <var:t3> = <var:A> ^ <nat:3> \land <var:t4> = <var:A> ^ <nat:4> \land <var:t0> = <nat:1> \} \, <var:t3> := <var:t3> * <nat:8> \, \{ <var:b> = <var:A> \land <var:t1> = <nat:6> \cdot <var:A> \land <var:t2> = <nat:4> \cdot <var:A> ^ <nat:2> \land <var:t3> = <nat:8> \cdot <var:A> ^ <nat:3> \land <var:t4> = <var:A> ^ <nat:4> \land <var:t0> = <nat:1> \} \\ \{ <var:b> = <var:A> \land <var:t1> = <nat:6> \cdot <var:A> \land <var:t2> = <nat:4> \cdot <var:A> ^ <nat:2> \land <var:t3> = <nat:8> \cdot <var:A> ^ <nat:3> \land <var:t4> = <var:A> ^ <nat:4> \land <var:t0> = <nat:1> \} \, <var:t4> := <var:t4> * <nat:2> \, \{ <var:b> = <var:A> \land <var:t1> = <nat:6> \cdot <var:A> \land <var:t2> = <nat:4> \cdot <var:A> ^ <nat:2> \land <var:t3> = <nat:8> \cdot <var:A> ^ <nat:3> \land <var:t4> = <nat:2> \cdot <var:A> ^ <nat:4> \land <var:t0> = <nat:1> \} \\ \{ <var:b> = <var:A> \land <var:t1> = <nat:6> \cdot <var:A> \land <var:t2> = <nat:4> \cdot <var:A> ^ <nat:2> \land <var:t3> = <nat:8> \cdot <var:A> ^ <nat:3> \land <var:t4> = <nat:2> \cdot <var:A> ^ <nat:4> \land <var:t0> = <nat:1> \} \, <var:V> := <var:t4\, \{ <var:b> = <var:A> \land <var:t1> = <nat:6> \cdot <var:A> \land <var:t2> = <nat:4> \cdot <var:A> ^ <nat:2> \land <var:t3> = <nat:8> \cdot <var:A> ^ <nat:3> \land <var:t0> = <nat:1> \land <var:V> = <nat:2> \cdot <var:A> ^ <nat:4> \} \\ \{ <var:b> = <var:A> \land <var:t1> = <nat:6> \cdot <var:A> \land <var:t2> = <nat:4> \cdot <var:A> ^ <nat:2> \land <var:t3> = <nat:8> \cdot <var:A> ^ <nat:3> \land <var:t0> = <nat:1> \land <var:V> = <nat:2> \cdot <var:A> ^ <nat:4> \} \, <var:V> := <var:V> + <var:t3\, \{ <var:b> = <var:A> \land <var:t1> = <nat:6> \cdot <var:A> \land <var:t2> = <nat:4> \cdot <var:A> ^ <nat:2> \land <var:t0> = <nat:1> \land <var:V> = <nat:2> \cdot <var:A> ^ <nat:4> + <nat:8> \cdot <var:A> ^ <nat:3> \} \\ \{ <var:b> = <var:A> \land <var:t1> = <nat:6> \cdot <var:A> \land <var:t2> = <nat:4> \cdot <var:A> ^ <nat:2> \land <var:t0> = <nat:1> \land <var:V> = <nat:2> \cdot <var:A> ^ <nat:4> + <nat:8> \cdot <var:A> ^ <nat:3> \} \, <var:V> := <var:V> + <var:t2\, \{ <var:b> = <var:A> \land <var:t1> = <nat:6> \cdot <var:A> \land <var:t0> = <nat:1> \land <var:V> = <nat:2> \cdot <var:A> ^ <nat:4> + <nat:8> \cdot <var:A> ^ <nat:3> + <nat:4> \cdot <var:A> ^ <nat:2> \} \end{eqnarray} Moving onward , we see \begin{eqnarray} \{ <var:b> = <var:A> \} \, <var:t1> := <var:b> \, \{ <var:b> = <var:A> \land <var:t1> = <var:A> \} \\ \{ <var:b> = <var:A> \land <var:t1> = <var:A> \} \, <var:t2> := <var:t1> * <var:b> \, \{ <var:b> = <var:A> \land <var:t1> = <var:A> \land <var:t2> = <var:A> ^ <nat:2> \} \end{eqnarray} This is rigorously given using the variable binding scheme in usual Hoare reasoning . \end{proof} \end{document} 
~
Require Import String . From PLF Require Import Imp . From PLF Require Import Hoare . Definition <var:t0> : string := " <var:t0> " . Definition <var:t1> : string := " <var:t1> " . Definition <var:t2> : string := " <var:t2> " . Definition <var:t3> : string := " <var:t3> " . Definition <var:t4> : string := " <var:t4> " . Definition <def:poly> := <var:t1> := <var:b> ; <var:t2> := <var:t1> * <var:b> ; <var:t3> := <var:t2> * <var:b> ; <var:t4> := <var:t3> * <var:b> ; <var:t0> := <nat:1> ; <var:t1> := <var:t1> * <nat:6> ; <var:t2> := <var:t2> * <nat:4> ; <var:t3> := <var:t3> * <nat:8> ; <var:t4> := <var:t4> * <nat:2> ; <var:V> := <var:t4> <var:V> := <var:V> + <var:t3> <var:V> := <var:V> + <var:t2> <var:V> := <var:V> + <var:t1> <var:V> := <var:V> + <var:t0> . Theorem <genH:poly_code_correct> : forall <var:A> : nat , {{ <var:b> = <var:A> }} <def:poly> {{ <var:V> = <nat:2> * <var:A> ^ <nat:4> + <nat:8> * <var:A> ^ <nat:3> + <nat:4> * <var:A> ^ <nat:2> + <nat:6> * <var:A> + <nat:1> }} . Proof . intros . apply hoare_seq with ( Q := ( ( <var:b> = <var:A> /\ <var:t1> = <var:A> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:b> = <var:A> /\ <var:t1> = <var:A> /\ <var:t2> = <var:A> ^ <nat:2> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:b> = <var:A> /\ <var:t1> = <var:A> /\ <var:t2> = <var:A> ^ <nat:2> /\ <var:t3> = <var:A> ^ <nat:3> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:b> = <var:A> /\ <var:t1> = <var:A> /\ <var:t2> = <var:A> ^ <nat:2> /\ <var:t3> = <var:A> ^ <nat:3> /\ <var:t4> = <var:A> ^ <nat:4> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:b> = <var:A> /\ <var:t1> = <var:A> /\ <var:t2> = <var:A> ^ <nat:2> /\ <var:t3> = <var:A> ^ <nat:3> /\ <var:t4> = <var:A> ^ <nat:4> /\ <var:t0> = <nat:1> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:b> = <var:A> /\ <var:t1> = <nat:6> * <var:A> /\ <var:t2> = <var:A> ^ <nat:2> /\ <var:t3> = <var:A> ^ <nat:3> /\ <var:t4> = <var:A> ^ <nat:4> /\ <var:t0> = <nat:1> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:b> = <var:A> /\ <var:t1> = <nat:6> * <var:A> /\ <var:t2> = <nat:4> * <var:A> ^ <nat:2> /\ <var:t3> = <var:A> ^ <nat:3> /\ <var:t4> = <var:A> ^ <nat:4> /\ <var:t0> = <nat:1> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:b> = <var:A> /\ <var:t1> = <nat:6> * <var:A> /\ <var:t2> = <nat:4> * <var:A> ^ <nat:2> /\ <var:t3> = <nat:8> * <var:A> ^ <nat:3> /\ <var:t4> = <var:A> ^ <nat:4> /\ <var:t0> = <nat:1> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:b> = <var:A> /\ <var:t1> = <nat:6> * <var:A> /\ <var:t2> = <nat:4> * <var:A> ^ <nat:2> /\ <var:t3> = <nat:8> * <var:A> ^ <nat:3> /\ <var:t4> = <nat:2> * <var:A> ^ <nat:4> /\ <var:t0> = <nat:1> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:b> = <var:A> /\ <var:t1> = <nat:6> * <var:A> /\ <var:t2> = <nat:4> * <var:A> ^ <nat:2> /\ <var:t3> = <nat:8> * <var:A> ^ <nat:3> /\ <var:t0> = <nat:1> /\ <var:V> = <nat:2> * <var:A> ^ <nat:4> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:b> = <var:A> /\ <var:t1> = <nat:6> * <var:A> /\ <var:t2> = <nat:4> * <var:A> ^ <nat:2> /\ <var:t0> = <nat:1> /\ <var:V> = <nat:2> * <var:A> ^ <nat:4> + <nat:8> * <var:A> ^ <nat:3> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:b> = <var:A> /\ <var:t1> = <nat:6> * <var:A> /\ <var:t0> = <nat:1> /\ <var:V> = <nat:2> * <var:A> ^ <nat:4> + <nat:8> * <var:A> ^ <nat:3> + <nat:4> * <var:A> ^ <nat:2> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:b> = <var:A> /\ <var:t0> = <nat:1> /\ <var:V> = <nat:2> * <var:A> ^ <nat:4> + <nat:8> * <var:A> ^ <nat:3> + <nat:4> * <var:A> ^ <nat:2> + <nat:6> * <var:A> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:b> = <var:A> /\ <var:V> = <nat:2> * <var:A> ^ <nat:4> + <nat:8> * <var:A> ^ <nat:3> + <nat:4> * <var:A> ^ <nat:2> + <nat:6> * <var:A> + <nat:1> ) ) %assertion ) . all : eapply hoare_consequence_pre ; try ( apply hoare_asgn || assn_auto'' ) . Qed . 