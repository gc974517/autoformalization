\begin{document} \begin{theorem} We define a segment of code such that \begin{verbatim} <var:t> := <nat:3> ; <var:t> := <nat:3> + <var:t> * <var:j> ; <var:t> := <nat:4> + <var:t> * <var:j> ; <var:t> := <nat:2> + <var:t> * <var:j> ; <var:t> := <nat:3> + <var:t> * <var:j> ; <var:t> := <nat:1> + <var:t> * <var:j> ; <var:t> := <nat:1> + <var:t> * <var:j> ; <var:t> := <nat:2> + <var:t> * <var:j> ; <var:t> := <nat:3> + <var:t> * <var:j> ; <var:t> := <var:t> * <var:j> ; <var:t> := <var:t> * <var:j> ; <var:t> := <nat:4> + <var:t> * <var:j> ; <var:t> := <var:t> * <var:j> ; <var:t> := <nat:4> + <var:t> * <var:j> \end{verbatim} Assuming $ <var:j> = <var:v> $ assuming some natural numbers $ <var:v> $ ahead of the execution of our set of commands , it must be that we see $ <var:t> = <nat:3> \cdot <var:v> ^ <nat:13> + <nat:3> \cdot <var:v> ^ <nat:12> + <nat:4> \cdot <var:v> ^ <nat:11> + <nat:2> \cdot <var:v> ^ <nat:10> + <nat:3> \cdot <var:v> ^ <nat:9> + <nat:1> \cdot <var:v> ^ <nat:8> + <nat:1> \cdot <var:v> ^ <nat:7> + <nat:2> \cdot <var:v> ^ <nat:6> + <nat:3> \cdot <var:v> ^ <nat:5> + <nat:4> \cdot <var:v> ^ <nat:2> + <nat:4> $ . \end{theorem} \begin{proof} Utilizing standard Hoare techniques returns : \begin{eqnarray} \{ <var:j> = <var:v> \} \\ <var:t> := <nat:3> ; \\ \{ <var:j> = <var:v> \land <var:t> = <nat:3> \} \\ <var:t> := <nat:3> + <var:t> * <var:j> ; \\ \{ <var:j> = <var:v> \land <var:t> = <nat:3> \times <var:v> + <nat:3> \} \\ <var:t> := <nat:4> + <var:t> * <var:j> ; \\ \{ <var:j> = <var:v> \land <var:t> = <nat:3> \times <var:v> ^ <nat:2> + <nat:3> \times <var:v> + <nat:4> \} \\ <var:t> := <nat:2> + <var:t> * <var:j> ; \\ \{ <var:j> = <var:v> \land <var:t> = <nat:3> \times <var:v> ^ <nat:3> + <nat:3> \times <var:v> ^ <nat:2> + <nat:4> \times <var:v> + <nat:2> \} \\ <var:t> := <nat:3> + <var:t> * <var:j> ; \\ \{ <var:j> = <var:v> \land <var:t> = <nat:3> \times <var:v> ^ <nat:4> + <nat:3> \times <var:v> ^ <nat:3> + <nat:4> \times <var:v> ^ <nat:2> + <nat:2> \times <var:v> + <nat:3> \} \\ <var:t> := <nat:1> + <var:t> * <var:j> ; \\ \{ <var:j> = <var:v> \land <var:t> = <nat:3> \times <var:v> ^ <nat:5> + <nat:3> \times <var:v> ^ <nat:4> + <nat:4> \times <var:v> ^ <nat:3> + <nat:2> \times <var:v> ^ <nat:2> + <nat:3> \times <var:v> + <nat:1> \} \\ <var:t> := <nat:1> + <var:t> * <var:j> ; \\ \{ <var:j> = <var:v> \land <var:t> = <nat:3> \times <var:v> ^ <nat:6> + <nat:3> \times <var:v> ^ <nat:5> + <nat:4> \times <var:v> ^ <nat:4> + <nat:2> \times <var:v> ^ <nat:3> + <nat:3> \times <var:v> ^ <nat:2> + <nat:1> \times <var:v> + <nat:1> \} \\ <var:t> := <nat:2> + <var:t> * <var:j> ; \\ \{ <var:j> = <var:v> \land <var:t> = <nat:3> \times <var:v> ^ <nat:7> + <nat:3> \times <var:v> ^ <nat:6> + <nat:4> \times <var:v> ^ <nat:5> + <nat:2> \times <var:v> ^ <nat:4> + <nat:3> \times <var:v> ^ <nat:3> + <nat:1> \times <var:v> ^ <nat:2> + <nat:1> \times <var:v> + <nat:2> \} \\ <var:t> := <nat:3> + <var:t> * <var:j> ; \\ \{ <var:j> = <var:v> \land <var:t> = <nat:3> \times <var:v> ^ <nat:8> + <nat:3> \times <var:v> ^ <nat:7> + <nat:4> \times <var:v> ^ <nat:6> + <nat:2> \times <var:v> ^ <nat:5> + <nat:3> \times <var:v> ^ <nat:4> + <nat:1> \times <var:v> ^ <nat:3> + <nat:1> \times <var:v> ^ <nat:2> + <nat:2> \times <var:v> + <nat:3> \} \\ <var:t> := <var:t> * <var:j> ; \\ \{ <var:j> = <var:v> \land <var:t> = <nat:3> \times <var:v> ^ <nat:9> + <nat:3> \times <var:v> ^ <nat:8> + <nat:4> \times <var:v> ^ <nat:7> + <nat:2> \times <var:v> ^ <nat:6> + <nat:3> \times <var:v> ^ <nat:5> + <nat:1> \times <var:v> ^ <nat:4> + <nat:1> \times <var:v> ^ <nat:3> + <nat:2> \times <var:v> ^ <nat:2> + <nat:3> \times <var:v> + \} \\ <var:t> := <var:t> * <var:j> ; \\ \{ <var:j> = <var:v> \land <var:t> = <nat:3> \times <var:v> ^ <nat:10> + <nat:3> \times <var:v> ^ <nat:9> + <nat:4> \times <var:v> ^ <nat:8> + <nat:2> \times <var:v> ^ <nat:7> + <nat:3> \times <var:v> ^ <nat:6> + <nat:1> \times <var:v> ^ <nat:5> + <nat:1> \times <var:v> ^ <nat:4> + <nat:2> \times <var:v> ^ <nat:3> + <nat:3> \times <var:v> ^ <nat:2> + \} \\ <var:t> := <nat:4> + <var:t> * <var:j> ; \\ \{ <var:j> = <var:v> \land <var:t> = <nat:3> \times <var:v> ^ <nat:11> + <nat:3> \times <var:v> ^ <nat:10> + <nat:4> \times <var:v> ^ <nat:9> + <nat:2> \times <var:v> ^ <nat:8> + <nat:3> \times <var:v> ^ <nat:7> + <nat:1> \times <var:v> ^ <nat:6> + <nat:1> \times <var:v> ^ <nat:5> + <nat:2> \times <var:v> ^ <nat:4> + <nat:3> \times <var:v> ^ <nat:3> + <nat:4> \} \\ <var:t> := <var:t> * <var:j> ; \\ \{ <var:j> = <var:v> \land <var:t> = <nat:3> \times <var:v> ^ <nat:12> + <nat:3> \times <var:v> ^ <nat:11> + <nat:4> \times <var:v> ^ <nat:10> + <nat:2> \times <var:v> ^ <nat:9> + <nat:3> \times <var:v> ^ <nat:8> + <nat:1> \times <var:v> ^ <nat:7> + <nat:1> \times <var:v> ^ <nat:6> + <nat:2> \times <var:v> ^ <nat:5> + <nat:3> \times <var:v> ^ <nat:4> + <nat:4> \times <var:v> + \} \\ <var:t> := <nat:4> + <var:t> * <var:j> \\ \{ <var:j> = <var:v> \land <var:t> = <nat:3> \times <var:v> ^ <nat:13> + <nat:3> \times <var:v> ^ <nat:12> + <nat:4> \times <var:v> ^ <nat:11> + <nat:2> \times <var:v> ^ <nat:10> + <nat:3> \times <var:v> ^ <nat:9> + <nat:1> \times <var:v> ^ <nat:8> + <nat:1> \times <var:v> ^ <nat:7> + <nat:2> \times <var:v> ^ <nat:6> + <nat:3> \times <var:v> ^ <nat:5> + <nat:4> \times <var:v> ^ <nat:2> + <nat:4> \} \end{eqnarray} Thusly , the code has been shown correct . \end{proof} \end{document} 
~
Require Import String . From PLF Require Import Imp . From PLF Require Import Hoare . Theorem <genH:poly_code_correct> : forall <var:v> : nat , {{ <var:j> = <var:v> }} <var:t> := <nat:3> ; <var:t> := <nat:3> + <var:t> * <var:j> ; <var:t> := <nat:4> + <var:t> * <var:j> ; <var:t> := <nat:2> + <var:t> * <var:j> ; <var:t> := <nat:3> + <var:t> * <var:j> ; <var:t> := <nat:1> + <var:t> * <var:j> ; <var:t> := <nat:1> + <var:t> * <var:j> ; <var:t> := <nat:2> + <var:t> * <var:j> ; <var:t> := <nat:3> + <var:t> * <var:j> ; <var:t> := <var:t> * <var:j> ; <var:t> := <var:t> * <var:j> ; <var:t> := <nat:4> + <var:t> * <var:j> ; <var:t> := <var:t> * <var:j> ; <var:t> := <nat:4> + <var:t> * <var:j> {{ <var:t> = <nat:3> * <var:v> ^ <nat:13> + <nat:3> * <var:v> ^ <nat:12> + <nat:4> * <var:v> ^ <nat:11> + <nat:2> * <var:v> ^ <nat:10> + <nat:3> * <var:v> ^ <nat:9> + <nat:1> * <var:v> ^ <nat:8> + <nat:1> * <var:v> ^ <nat:7> + <nat:2> * <var:v> ^ <nat:6> + <nat:3> * <var:v> ^ <nat:5> + <nat:4> * <var:v> ^ <nat:2> + <nat:4> }} . Proof . intros . apply hoare_seq with ( Q := ( ( <var:j> = <var:v> /\ <var:t> = <nat:3> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:j> = <var:v> /\ <var:t> = <nat:3> * <var:v> + <nat:3> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:j> = <var:v> /\ <var:t> = <nat:3> * <var:v> ^ <nat:2> + <nat:3> * <var:v> + <nat:4> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:j> = <var:v> /\ <var:t> = <nat:3> * <var:v> ^ <nat:3> + <nat:3> * <var:v> ^ <nat:2> + <nat:4> * <var:v> + <nat:2> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:j> = <var:v> /\ <var:t> = <nat:3> * <var:v> ^ <nat:4> + <nat:3> * <var:v> ^ <nat:3> + <nat:4> * <var:v> ^ <nat:2> + <nat:2> * <var:v> + <nat:3> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:j> = <var:v> /\ <var:t> = <nat:3> * <var:v> ^ <nat:5> + <nat:3> * <var:v> ^ <nat:4> + <nat:4> * <var:v> ^ <nat:3> + <nat:2> * <var:v> ^ <nat:2> + <nat:3> * <var:v> + <nat:1> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:j> = <var:v> /\ <var:t> = <nat:3> * <var:v> ^ <nat:6> + <nat:3> * <var:v> ^ <nat:5> + <nat:4> * <var:v> ^ <nat:4> + <nat:2> * <var:v> ^ <nat:3> + <nat:3> * <var:v> ^ <nat:2> + <nat:1> * <var:v> + <nat:1> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:j> = <var:v> /\ <var:t> = <nat:3> * <var:v> ^ <nat:7> + <nat:3> * <var:v> ^ <nat:6> + <nat:4> * <var:v> ^ <nat:5> + <nat:2> * <var:v> ^ <nat:4> + <nat:3> * <var:v> ^ <nat:3> + <nat:1> * <var:v> ^ <nat:2> + <nat:1> * <var:v> + <nat:2> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:j> = <var:v> /\ <var:t> = <nat:3> * <var:v> ^ <nat:8> + <nat:3> * <var:v> ^ <nat:7> + <nat:4> * <var:v> ^ <nat:6> + <nat:2> * <var:v> ^ <nat:5> + <nat:3> * <var:v> ^ <nat:4> + <nat:1> * <var:v> ^ <nat:3> + <nat:1> * <var:v> ^ <nat:2> + <nat:2> * <var:v> + <nat:3> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:j> = <var:v> /\ <var:t> = <nat:3> * <var:v> ^ <nat:9> + <nat:3> * <var:v> ^ <nat:8> + <nat:4> * <var:v> ^ <nat:7> + <nat:2> * <var:v> ^ <nat:6> + <nat:3> * <var:v> ^ <nat:5> + <nat:1> * <var:v> ^ <nat:4> + <nat:1> * <var:v> ^ <nat:3> + <nat:2> * <var:v> ^ <nat:2> + <nat:3> * <var:v> + ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:j> = <var:v> /\ <var:t> = <nat:3> * <var:v> ^ <nat:10> + <nat:3> * <var:v> ^ <nat:9> + <nat:4> * <var:v> ^ <nat:8> + <nat:2> * <var:v> ^ <nat:7> + <nat:3> * <var:v> ^ <nat:6> + <nat:1> * <var:v> ^ <nat:5> + <nat:1> * <var:v> ^ <nat:4> + <nat:2> * <var:v> ^ <nat:3> + <nat:3> * <var:v> ^ <nat:2> + ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:j> = <var:v> /\ <var:t> = <nat:3> * <var:v> ^ <nat:11> + <nat:3> * <var:v> ^ <nat:10> + <nat:4> * <var:v> ^ <nat:9> + <nat:2> * <var:v> ^ <nat:8> + <nat:3> * <var:v> ^ <nat:7> + <nat:1> * <var:v> ^ <nat:6> + <nat:1> * <var:v> ^ <nat:5> + <nat:2> * <var:v> ^ <nat:4> + <nat:3> * <var:v> ^ <nat:3> + <nat:4> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:j> = <var:v> /\ <var:t> = <nat:3> * <var:v> ^ <nat:12> + <nat:3> * <var:v> ^ <nat:11> + <nat:4> * <var:v> ^ <nat:10> + <nat:2> * <var:v> ^ <nat:9> + <nat:3> * <var:v> ^ <nat:8> + <nat:1> * <var:v> ^ <nat:7> + <nat:1> * <var:v> ^ <nat:6> + <nat:2> * <var:v> ^ <nat:5> + <nat:3> * <var:v> ^ <nat:4> + <nat:4> * <var:v> + ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:j> = <var:v> /\ <var:t> = <nat:3> * <var:v> ^ <nat:13> + <nat:3> * <var:v> ^ <nat:12> + <nat:4> * <var:v> ^ <nat:11> + <nat:2> * <var:v> ^ <nat:10> + <nat:3> * <var:v> ^ <nat:9> + <nat:1> * <var:v> ^ <nat:8> + <nat:1> * <var:v> ^ <nat:7> + <nat:2> * <var:v> ^ <nat:6> + <nat:3> * <var:v> ^ <nat:5> + <nat:4> * <var:v> ^ <nat:2> + <nat:4> ) ) %assertion ) . all : eapply hoare_consequence_pre ; try ( apply hoare_asgn || assn_auto'' ) . Qed . 