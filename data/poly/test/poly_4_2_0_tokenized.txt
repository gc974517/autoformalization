\begin{document} \begin{theorem} Take the following set of commands as \begin{verbatim} <var:m0> := <nat:8> ; <var:P> := <var:m0> \end{verbatim} Assume , given all $ <var:L> $ , $ <var:Z> = <var:L> $ prior to interpreting our series of instructions , then $ <var:P> = <nat:8> $ . \end{theorem} \begin{proof} Utilizing Hoare logic results in : \begin{eqnarray} \{ <var:Z> = <var:L> \} \\ <var:m0> := <nat:8> ; \\ \{ <var:Z> = <var:L> \land <var:m0> = <nat:8> \} \\ <var:P> := <var:m0> \\ \{ <var:Z> = <var:L> \land <var:P> = <nat:8> \} \end{eqnarray} Thus , the list of commands is proven correct . \end{proof} \end{document} 
~
Require Import String . From PLF Require Import Imp . From PLF Require Import Hoare . Definition <var:m0> : string := " <var:m0> " . Theorem <genH:poly_code_correct> : forall <var:L> : nat , {{ <var:Z> = <var:L> }} <var:m0> := <nat:8> ; <var:P> := <var:m0> {{ <var:P> = <nat:8> }} . Proof . intros . apply hoare_seq with ( Q := ( ( <var:Z> = <var:L> /\ <var:m0> = <nat:8> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:Z> = <var:L> /\ <var:P> = <nat:8> ) ) %assertion ) . all : eapply hoare_consequence_pre ; try ( apply hoare_asgn || assn_auto'' ) . Qed . 