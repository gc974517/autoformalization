\begin{document} \begin{theorem} Consider the following set of instructions as follows \begin{verbatim} <var:I> := <nat:3> ; <var:I> := <nat:1> + <var:I> * <var:L> ; <var:I> := <nat:4> + <var:I> * <var:L> ; <var:I> := <nat:4> + <var:I> * <var:L> ; <var:I> := <var:I> * <var:L> ; <var:I> := <nat:3> + <var:I> * <var:L> ; <var:I> := <var:I> * <var:L> ; <var:I> := <var:I> * <var:L> ; <var:I> := <nat:2> + <var:I> * <var:L> ; <var:I> := <nat:3> + <var:I> * <var:L> ; <var:I> := <nat:3> + <var:I> * <var:L> ; <var:I> := <var:I> * <var:L> ; <var:I> := <nat:3> + <var:I> * <var:L> \end{verbatim} Assuming , taking $ <var:u> \in \mathbb{N} $ , that we have $ <var:L> = <var:u> $ ahead of the execution of this series of commands , then we see $ <var:I> = <nat:3> \times <var:u> ^ <nat:12> + <nat:1> \times <var:u> ^ <nat:11> + <nat:4> \times <var:u> ^ <nat:10> + <nat:4> \times <var:u> ^ <nat:9> + <nat:3> \times <var:u> ^ <nat:7> + <nat:2> \times <var:u> ^ <nat:4> + <nat:3> \times <var:u> ^ <nat:3> + <nat:3> \times <var:u> ^ <nat:2> + <nat:3> $ once program is done . \end{theorem} \begin{proof} The application of Hoare techniques produces : \begin{eqnarray} \{ <var:L> = <var:u> \} \\ <var:I> := <nat:3> ; \\ \{ <var:L> = <var:u> \land <var:I> = <nat:3> \} \\ <var:I> := <nat:1> + <var:I> * <var:L> ; \\ \{ <var:L> = <var:u> \land <var:I> = <nat:3> * <var:u> + <nat:1> \} \\ <var:I> := <nat:4> + <var:I> * <var:L> ; \\ \{ <var:L> = <var:u> \land <var:I> = <nat:3> * <var:u> ^ <nat:2> + <nat:1> * <var:u> + <nat:4> \} \\ <var:I> := <nat:4> + <var:I> * <var:L> ; \\ \{ <var:L> = <var:u> \land <var:I> = <nat:3> * <var:u> ^ <nat:3> + <nat:1> * <var:u> ^ <nat:2> + <nat:4> * <var:u> + <nat:4> \} \\ <var:I> := <var:I> * <var:L> ; \\ \{ <var:L> = <var:u> \land <var:I> = <nat:3> * <var:u> ^ <nat:4> + <nat:1> * <var:u> ^ <nat:3> + <nat:4> * <var:u> ^ <nat:2> + <nat:4> * <var:u> + \} \\ <var:I> := <nat:3> + <var:I> * <var:L> ; \\ \{ <var:L> = <var:u> \land <var:I> = <nat:3> * <var:u> ^ <nat:5> + <nat:1> * <var:u> ^ <nat:4> + <nat:4> * <var:u> ^ <nat:3> + <nat:4> * <var:u> ^ <nat:2> + <nat:3> \} \\ <var:I> := <var:I> * <var:L> ; \\ \{ <var:L> = <var:u> \land <var:I> = <nat:3> * <var:u> ^ <nat:6> + <nat:1> * <var:u> ^ <nat:5> + <nat:4> * <var:u> ^ <nat:4> + <nat:4> * <var:u> ^ <nat:3> + <nat:3> * <var:u> + \} \\ <var:I> := <var:I> * <var:L> ; \\ \{ <var:L> = <var:u> \land <var:I> = <nat:3> * <var:u> ^ <nat:7> + <nat:1> * <var:u> ^ <nat:6> + <nat:4> * <var:u> ^ <nat:5> + <nat:4> * <var:u> ^ <nat:4> + <nat:3> * <var:u> ^ <nat:2> + \} \end{eqnarray} Allowing the execution of this series of commands yields : \begin{eqnarray} <var:I> := <nat:2> + <var:I> * <var:L> ; \\ \{ <var:L> = <var:u> \land <var:I> = <nat:3> * <var:u> ^ <nat:8> + <nat:1> * <var:u> ^ <nat:7> + <nat:4> * <var:u> ^ <nat:6> + <nat:4> * <var:u> ^ <nat:5> + <nat:3> * <var:u> ^ <nat:3> + <nat:2> \} \end{eqnarray} Allowing executing this series of instructions gives us : \begin{eqnarray} <var:I> := <nat:3> + <var:I> * <var:L> ; \\ \{ <var:L> = <var:u> \land <var:I> = <nat:3> * <var:u> ^ <nat:9> + <nat:1> * <var:u> ^ <nat:8> + <nat:4> * <var:u> ^ <nat:7> + <nat:4> * <var:u> ^ <nat:6> + <nat:3> * <var:u> ^ <nat:4> + <nat:2> * <var:u> + <nat:3> \} \\ <var:I> := <nat:3> + <var:I> * <var:L> ; \\ \{ <var:L> = <var:u> \land <var:I> = <nat:3> * <var:u> ^ <nat:10> + <nat:1> * <var:u> ^ <nat:9> + <nat:4> * <var:u> ^ <nat:8> + <nat:4> * <var:u> ^ <nat:7> + <nat:3> * <var:u> ^ <nat:5> + <nat:2> * <var:u> ^ <nat:2> + <nat:3> * <var:u> + <nat:3> \} \\ <var:I> := <var:I> * <var:L> ; \\ \{ <var:L> = <var:u> \land <var:I> = <nat:3> * <var:u> ^ <nat:11> + <nat:1> * <var:u> ^ <nat:10> + <nat:4> * <var:u> ^ <nat:9> + <nat:4> * <var:u> ^ <nat:8> + <nat:3> * <var:u> ^ <nat:6> + <nat:2> * <var:u> ^ <nat:3> + <nat:3> * <var:u> ^ <nat:2> + <nat:3> * <var:u> + \} \\ <var:I> := <nat:3> + <var:I> * <var:L> \\ \{ <var:L> = <var:u> \land <var:I> = <nat:3> * <var:u> ^ <nat:12> + <nat:1> * <var:u> ^ <nat:11> + <nat:4> * <var:u> ^ <nat:10> + <nat:4> * <var:u> ^ <nat:9> + <nat:3> * <var:u> ^ <nat:7> + <nat:2> * <var:u> ^ <nat:4> + <nat:3> * <var:u> ^ <nat:3> + <nat:3> * <var:u> ^ <nat:2> + <nat:3> \} \end{eqnarray} Given the above , our segment of code has been shown to be correct . \end{proof} \end{document} 
~
Require Import String . From PLF Require Import Imp . From PLF Require Import Hoare . Theorem <genH:poly_code_correct> : forall <var:u> : nat , {{ <var:L> = <var:u> }} <var:I> := <nat:3> ; <var:I> := <nat:1> + <var:I> * <var:L> ; <var:I> := <nat:4> + <var:I> * <var:L> ; <var:I> := <nat:4> + <var:I> * <var:L> ; <var:I> := <var:I> * <var:L> ; <var:I> := <nat:3> + <var:I> * <var:L> ; <var:I> := <var:I> * <var:L> ; <var:I> := <var:I> * <var:L> ; <var:I> := <nat:2> + <var:I> * <var:L> ; <var:I> := <nat:3> + <var:I> * <var:L> ; <var:I> := <nat:3> + <var:I> * <var:L> ; <var:I> := <var:I> * <var:L> ; <var:I> := <nat:3> + <var:I> * <var:L> {{ <var:I> = <nat:3> * <var:u> ^ <nat:12> + <nat:1> * <var:u> ^ <nat:11> + <nat:4> * <var:u> ^ <nat:10> + <nat:4> * <var:u> ^ <nat:9> + <nat:3> * <var:u> ^ <nat:7> + <nat:2> * <var:u> ^ <nat:4> + <nat:3> * <var:u> ^ <nat:3> + <nat:3> * <var:u> ^ <nat:2> + <nat:3> }} . Proof . intros . apply hoare_seq with ( Q := ( ( <var:L> = <var:u> /\ <var:I> = <nat:3> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:L> = <var:u> /\ <var:I> = <nat:3> * <var:u> + <nat:1> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:L> = <var:u> /\ <var:I> = <nat:3> * <var:u> ^ <nat:2> + <nat:1> * <var:u> + <nat:4> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:L> = <var:u> /\ <var:I> = <nat:3> * <var:u> ^ <nat:3> + <nat:1> * <var:u> ^ <nat:2> + <nat:4> * <var:u> + <nat:4> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:L> = <var:u> /\ <var:I> = <nat:3> * <var:u> ^ <nat:4> + <nat:1> * <var:u> ^ <nat:3> + <nat:4> * <var:u> ^ <nat:2> + <nat:4> * <var:u> + ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:L> = <var:u> /\ <var:I> = <nat:3> * <var:u> ^ <nat:5> + <nat:1> * <var:u> ^ <nat:4> + <nat:4> * <var:u> ^ <nat:3> + <nat:4> * <var:u> ^ <nat:2> + <nat:3> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:L> = <var:u> /\ <var:I> = <nat:3> * <var:u> ^ <nat:6> + <nat:1> * <var:u> ^ <nat:5> + <nat:4> * <var:u> ^ <nat:4> + <nat:4> * <var:u> ^ <nat:3> + <nat:3> * <var:u> + ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:L> = <var:u> /\ <var:I> = <nat:3> * <var:u> ^ <nat:7> + <nat:1> * <var:u> ^ <nat:6> + <nat:4> * <var:u> ^ <nat:5> + <nat:4> * <var:u> ^ <nat:4> + <nat:3> * <var:u> ^ <nat:2> + ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:L> = <var:u> /\ <var:I> = <nat:3> * <var:u> ^ <nat:8> + <nat:1> * <var:u> ^ <nat:7> + <nat:4> * <var:u> ^ <nat:6> + <nat:4> * <var:u> ^ <nat:5> + <nat:3> * <var:u> ^ <nat:3> + <nat:2> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:L> = <var:u> /\ <var:I> = <nat:3> * <var:u> ^ <nat:9> + <nat:1> * <var:u> ^ <nat:8> + <nat:4> * <var:u> ^ <nat:7> + <nat:4> * <var:u> ^ <nat:6> + <nat:3> * <var:u> ^ <nat:4> + <nat:2> * <var:u> + <nat:3> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:L> = <var:u> /\ <var:I> = <nat:3> * <var:u> ^ <nat:10> + <nat:1> * <var:u> ^ <nat:9> + <nat:4> * <var:u> ^ <nat:8> + <nat:4> * <var:u> ^ <nat:7> + <nat:3> * <var:u> ^ <nat:5> + <nat:2> * <var:u> ^ <nat:2> + <nat:3> * <var:u> + <nat:3> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:L> = <var:u> /\ <var:I> = <nat:3> * <var:u> ^ <nat:11> + <nat:1> * <var:u> ^ <nat:10> + <nat:4> * <var:u> ^ <nat:9> + <nat:4> * <var:u> ^ <nat:8> + <nat:3> * <var:u> ^ <nat:6> + <nat:2> * <var:u> ^ <nat:3> + <nat:3> * <var:u> ^ <nat:2> + <nat:3> * <var:u> + ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:L> = <var:u> /\ <var:I> = <nat:3> * <var:u> ^ <nat:12> + <nat:1> * <var:u> ^ <nat:11> + <nat:4> * <var:u> ^ <nat:10> + <nat:4> * <var:u> ^ <nat:9> + <nat:3> * <var:u> ^ <nat:7> + <nat:2> * <var:u> ^ <nat:4> + <nat:3> * <var:u> ^ <nat:3> + <nat:3> * <var:u> ^ <nat:2> + <nat:3> ) ) %assertion ) . all : eapply hoare_consequence_pre ; try ( apply hoare_asgn || assn_auto'' ) . Qed . 