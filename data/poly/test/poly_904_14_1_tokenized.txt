\begin{document} \begin{theorem} Let the following list of commands in \emph{Imp} : \begin{verbatim} <var:T1> := <var:q> ; <var:T2> := <var:T1> * <var:q> ; <var:T3> := <var:T2> * <var:q> ; <var:T4> := <var:T3> * <var:q> ; <var:T0> := <nat:5> ; <var:T1> := <var:T1> * <nat:4> ; <var:T2> := <var:T2> * <nat:6> ; <var:T3> := <var:T3> * <nat:6> ; <var:T4> := <var:T4> * <nat:6> ; <var:f> := <var:T4> <var:f> := <var:f> + <var:T3> <var:f> := <var:f> + <var:T2> <var:f> := <var:f> + <var:T1> <var:f> := <var:f> + <var:T0> \end{verbatim} Assume it to be that $ <var:q> = <var:M> $ ahead of executing the set of commands , it follows that we see $ <var:f> = <nat:6> \times <var:M> ^ <nat:4> + <nat:6> \times <var:M> ^ <nat:3> + <nat:6> \times <var:M> ^ <nat:2> + <nat:4> \times <var:M> + <nat:5> $ once set of instructions terminates . \end{theorem} \begin{proof} Applying typical Hoare reasoning gives us : \begin{eqnarray} \{ <var:q> = <var:M> \} \\ <var:T1> := <var:q> ; \\ \{ <var:q> = <var:M> \land <var:T1> = <var:M> \} \\ <var:T2> := <var:T1> * <var:q> ; \\ \{ <var:q> = <var:M> \land <var:T1> = <var:M> \land <var:T2> = <var:M> ^ <nat:2> \} \\ <var:T3> := <var:T2> * <var:q> ; \\ \{ <var:q> = <var:M> \land <var:T1> = <var:M> \land <var:T2> = <var:M> ^ <nat:2> \land <var:T3> = <var:M> ^ <nat:3> \} \\ <var:T4> := <var:T3> * <var:q> ; \\ \{ <var:q> = <var:M> \land <var:T1> = <var:M> \land <var:T2> = <var:M> ^ <nat:2> \land <var:T3> = <var:M> ^ <nat:3> \land <var:T4> = <var:M> ^ <nat:4> \} \\ <var:T0> := <nat:5> ; \\ \{ <var:q> = <var:M> \land <var:T1> = <var:M> \land <var:T2> = <var:M> ^ <nat:2> \land <var:T3> = <var:M> ^ <nat:3> \land <var:T4> = <var:M> ^ <nat:4> \land <var:T0> = <nat:5> \} \\ <var:T1> := <var:T1> * <nat:4> ; \\ \{ <var:q> = <var:M> \land <var:T1> = <nat:4> \cdot <var:M> \land <var:T2> = <var:M> ^ <nat:2> \land <var:T3> = <var:M> ^ <nat:3> \land <var:T4> = <var:M> ^ <nat:4> \land <var:T0> = <nat:5> \} \\ <var:T2> := <var:T2> * <nat:6> ; \\ \{ <var:q> = <var:M> \land <var:T1> = <nat:4> \cdot <var:M> \land <var:T2> = <nat:6> \cdot <var:M> ^ <nat:2> \land <var:T3> = <var:M> ^ <nat:3> \land <var:T4> = <var:M> ^ <nat:4> \land <var:T0> = <nat:5> \} \\ <var:T3> := <var:T3> * <nat:6> ; \\ \{ <var:q> = <var:M> \land <var:T1> = <nat:4> \cdot <var:M> \land <var:T2> = <nat:6> \cdot <var:M> ^ <nat:2> \land <var:T3> = <nat:6> \cdot <var:M> ^ <nat:3> \land <var:T4> = <var:M> ^ <nat:4> \land <var:T0> = <nat:5> \} \\ <var:T4> := <var:T4> * <nat:6> ; \\ \{ <var:q> = <var:M> \land <var:T1> = <nat:4> \cdot <var:M> \land <var:T2> = <nat:6> \cdot <var:M> ^ <nat:2> \land <var:T3> = <nat:6> \cdot <var:M> ^ <nat:3> \land <var:T4> = <nat:6> \cdot <var:M> ^ <nat:4> \land <var:T0> = <nat:5> \} \\ <var:f> := <var:T4> \\ \{ <var:q> = <var:M> \land <var:T1> = <nat:4> \cdot <var:M> \land <var:T2> = <nat:6> \cdot <var:M> ^ <nat:2> \land <var:T3> = <nat:6> \cdot <var:M> ^ <nat:3> \land <var:T0> = <nat:5> \land <var:f> = <nat:6> \cdot <var:M> ^ <nat:4> \} \\ <var:f> := <var:f> + <var:T3> \\ \{ <var:q> = <var:M> \land <var:T1> = <nat:4> \cdot <var:M> \land <var:T2> = <nat:6> \cdot <var:M> ^ <nat:2> \land <var:T0> = <nat:5> \land <var:f> = <nat:6> \cdot <var:M> ^ <nat:4> + <nat:6> \cdot <var:M> ^ <nat:3> \} \\ <var:f> := <var:f> + <var:T2> \\ \{ <var:q> = <var:M> \land <var:T1> = <nat:4> \cdot <var:M> \land <var:T0> = <nat:5> \land <var:f> = <nat:6> \cdot <var:M> ^ <nat:4> + <nat:6> \cdot <var:M> ^ <nat:3> + <nat:6> \cdot <var:M> ^ <nat:2> \} \\ <var:f> := <var:f> + <var:T1> \\ \{ <var:q> = <var:M> \land <var:T0> = <nat:5> \land <var:f> = <nat:6> \cdot <var:M> ^ <nat:4> + <nat:6> \cdot <var:M> ^ <nat:3> + <nat:6> \cdot <var:M> ^ <nat:2> + <nat:4> \cdot <var:M> \} \\ <var:f> := <var:f> + <var:T0> \\ \{ <var:q> = <var:M> \land <var:f> = <nat:6> \cdot <var:M> ^ <nat:4> + <nat:6> \cdot <var:M> ^ <nat:3> + <nat:6> \cdot <var:M> ^ <nat:2> + <nat:4> \cdot <var:M> + <nat:5> \} \end{eqnarray} Hence , our set of commands has been demonstrated to be correct . \end{proof} \end{document} 
~
Require Import String . From PLF Require Import Imp . From PLF Require Import Hoare . Definition <var:T0> : string := " <var:T0> " . Definition <var:T1> : string := " <var:T1> " . Definition <var:T2> : string := " <var:T2> " . Definition <var:T3> : string := " <var:T3> " . Definition <var:T4> : string := " <var:T4> " . Theorem <genH:poly_code_correct> : forall <var:M> : nat , {{ <var:q> = <var:M> }} <var:T1> := <var:q> ; <var:T2> := <var:T1> * <var:q> ; <var:T3> := <var:T2> * <var:q> ; <var:T4> := <var:T3> * <var:q> ; <var:T0> := <nat:5> ; <var:T1> := <var:T1> * <nat:4> ; <var:T2> := <var:T2> * <nat:6> ; <var:T3> := <var:T3> * <nat:6> ; <var:T4> := <var:T4> * <nat:6> ; <var:f> := <var:T4> <var:f> := <var:f> + <var:T3> <var:f> := <var:f> + <var:T2> <var:f> := <var:f> + <var:T1> <var:f> := <var:f> + <var:T0> {{ <var:f> = <nat:6> * <var:M> ^ <nat:4> + <nat:6> * <var:M> ^ <nat:3> + <nat:6> * <var:M> ^ <nat:2> + <nat:4> * <var:M> + <nat:5> }} . Proof . intros . apply hoare_seq with ( Q := ( ( <var:q> = <var:M> /\ <var:T1> = <var:M> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:q> = <var:M> /\ <var:T1> = <var:M> /\ <var:T2> = <var:M> ^ <nat:2> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:q> = <var:M> /\ <var:T1> = <var:M> /\ <var:T2> = <var:M> ^ <nat:2> /\ <var:T3> = <var:M> ^ <nat:3> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:q> = <var:M> /\ <var:T1> = <var:M> /\ <var:T2> = <var:M> ^ <nat:2> /\ <var:T3> = <var:M> ^ <nat:3> /\ <var:T4> = <var:M> ^ <nat:4> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:q> = <var:M> /\ <var:T1> = <var:M> /\ <var:T2> = <var:M> ^ <nat:2> /\ <var:T3> = <var:M> ^ <nat:3> /\ <var:T4> = <var:M> ^ <nat:4> /\ <var:T0> = <nat:5> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:q> = <var:M> /\ <var:T1> = <nat:4> * <var:M> /\ <var:T2> = <var:M> ^ <nat:2> /\ <var:T3> = <var:M> ^ <nat:3> /\ <var:T4> = <var:M> ^ <nat:4> /\ <var:T0> = <nat:5> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:q> = <var:M> /\ <var:T1> = <nat:4> * <var:M> /\ <var:T2> = <nat:6> * <var:M> ^ <nat:2> /\ <var:T3> = <var:M> ^ <nat:3> /\ <var:T4> = <var:M> ^ <nat:4> /\ <var:T0> = <nat:5> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:q> = <var:M> /\ <var:T1> = <nat:4> * <var:M> /\ <var:T2> = <nat:6> * <var:M> ^ <nat:2> /\ <var:T3> = <nat:6> * <var:M> ^ <nat:3> /\ <var:T4> = <var:M> ^ <nat:4> /\ <var:T0> = <nat:5> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:q> = <var:M> /\ <var:T1> = <nat:4> * <var:M> /\ <var:T2> = <nat:6> * <var:M> ^ <nat:2> /\ <var:T3> = <nat:6> * <var:M> ^ <nat:3> /\ <var:T4> = <nat:6> * <var:M> ^ <nat:4> /\ <var:T0> = <nat:5> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:q> = <var:M> /\ <var:T1> = <nat:4> * <var:M> /\ <var:T2> = <nat:6> * <var:M> ^ <nat:2> /\ <var:T3> = <nat:6> * <var:M> ^ <nat:3> /\ <var:T0> = <nat:5> /\ <var:f> = <nat:6> * <var:M> ^ <nat:4> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:q> = <var:M> /\ <var:T1> = <nat:4> * <var:M> /\ <var:T2> = <nat:6> * <var:M> ^ <nat:2> /\ <var:T0> = <nat:5> /\ <var:f> = <nat:6> * <var:M> ^ <nat:4> + <nat:6> * <var:M> ^ <nat:3> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:q> = <var:M> /\ <var:T1> = <nat:4> * <var:M> /\ <var:T0> = <nat:5> /\ <var:f> = <nat:6> * <var:M> ^ <nat:4> + <nat:6> * <var:M> ^ <nat:3> + <nat:6> * <var:M> ^ <nat:2> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:q> = <var:M> /\ <var:T0> = <nat:5> /\ <var:f> = <nat:6> * <var:M> ^ <nat:4> + <nat:6> * <var:M> ^ <nat:3> + <nat:6> * <var:M> ^ <nat:2> + <nat:4> * <var:M> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:q> = <var:M> /\ <var:f> = <nat:6> * <var:M> ^ <nat:4> + <nat:6> * <var:M> ^ <nat:3> + <nat:6> * <var:M> ^ <nat:2> + <nat:4> * <var:M> + <nat:5> ) ) %assertion ) . all : eapply hoare_consequence_pre ; try ( apply hoare_asgn || assn_auto'' ) . Qed . 