\begin{document} \begin{theorem} Consider the following series of instructions : \begin{verbatim} <var:F0> := <nat:6> ; <var:Z> := <var:F0> \end{verbatim} Assuming that we have $ <var:z> = <var:j> $ , taking natural numbers $ <var:j> $ , prior to running this program , it follows that we have $ <var:Z> = <nat:6> $ . \end{theorem} \begin{proof} Demonstrating correctness of our program is shown with Hoare logic . Moving forward to the next step , we have \verb | { <var:z> = <var:j> } <var:F0> := <nat:6> { <var:z> = <var:j> \land <var:F0> = <nat:6> } | and \verb | { <var:z> = <var:j> \land <var:F0> = <nat:6> } <var:Z> := <var:F0{ <var:z> = <var:j> \land <var:Z> = <nat:6> } | . This is deduced through the inference rule defined by typical Hoare logic . \end{proof} \end{document} 
~
Require Import String . From PLF Require Import Imp . From PLF Require Import Hoare . Definition <var:F0> : string := " <var:F0> " . Theorem <genH:poly_code_correct> : forall <var:j> : nat , {{ <var:z> = <var:j> }} <var:F0> := <nat:6> ; <var:Z> := <var:F0> {{ <var:Z> = <nat:6> }} . Proof . intros . apply hoare_seq with ( Q := ( ( <var:z> = <var:j> /\ <var:F0> = <nat:6> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:z> = <var:j> /\ <var:Z> = <nat:6> ) ) %assertion ) . all : eapply hoare_consequence_pre ; try ( apply hoare_asgn || assn_auto'' ) . Qed . 