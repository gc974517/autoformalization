\begin{document} \begin{theorem} Consider a code segment such that \begin{verbatim} <var:l0> := <nat:4> ; <var:Z> := <var:l0> \end{verbatim} Allow , given every whole numbers $ <var:v> $ , that $ <var:N> = <var:v> $ ahead of the execution of this program then we see $ <var:Z> = <nat:4> $ . \end{theorem} \begin{proof} Arguing the correctness of our code segment is evident by Hoare techniques . Jumping to the proceeding piece of code seen in the set of commands , we have the assignment command \verb | <var:l0> := <nat:4> ; | . This transfers the condition $ \{ <var:N> = <var:v> \} $ to the condition $ \{ <var:N> = <var:v> \land <var:l0> = <nat:4> \} $ . Taking a look at the following piece of code in the series of commands , we have the assignment code \verb | <var:Z> := <var:l0> | . This moves the condition $ \{ <var:N> = <var:v> \land <var:l0> = <nat:4> \} $ toward $ \{ <var:N> = <var:v> \land <var:Z> = <nat:4> \} $ . \end{proof} \end{document} 
~
Require Import String . From PLF Require Import Imp . From PLF Require Import Hoare . Definition <var:l0> : string := " <var:l0> " . Theorem <genH:poly_code_correct> : forall <var:v> : nat , {{ <var:N> = <var:v> }} <var:l0> := <nat:4> ; <var:Z> := <var:l0> {{ <var:Z> = <nat:4> }} . Proof . intros . apply hoare_seq with ( Q := ( ( <var:N> = <var:v> /\ <var:l0> = <nat:4> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:N> = <var:v> /\ <var:Z> = <nat:4> ) ) %assertion ) . all : eapply hoare_consequence_pre ; try ( apply hoare_asgn || assn_auto'' ) . Qed . 