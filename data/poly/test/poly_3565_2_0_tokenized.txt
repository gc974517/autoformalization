\begin{document} \begin{theorem} Consider a series of instructions as \begin{verbatim} <var:m0> := <nat:8> ; <var:y> := <var:m0> \end{verbatim} Assuming , given every $ <var:L> $ , that $ <var:Z> = <var:L> $ prior to the execution of this set of commands it holds that we have $ <var:y> = <nat:8> $ . \end{theorem} \begin{proof} Utilizing typical Hoare reasoning returns : \begin{eqnarray} \{ <var:Z> = <var:L> \} \\ <var:m0> := <nat:8> ; \\ \{ <var:Z> = <var:L> \land <var:m0> = <nat:8> \} \\ <var:y> := <var:m0> \\ \{ <var:Z> = <var:L> \land <var:y> = <nat:8> \} \end{eqnarray} As a result , the list of commands has been shown correct . \end{proof} \end{document} 
~
Require Import String . From PLF Require Import Imp . From PLF Require Import Hoare . Definition <var:m0> : string := " <var:m0> " . Theorem <genH:poly_code_correct> : forall <var:L> : nat , {{ <var:Z> = <var:L> }} <var:m0> := <nat:8> ; <var:y> := <var:m0> {{ <var:y> = <nat:8> }} . Proof . intros . apply hoare_seq with ( Q := ( ( <var:Z> = <var:L> /\ <var:m0> = <nat:8> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:Z> = <var:L> /\ <var:y> = <nat:8> ) ) %assertion ) . all : eapply hoare_consequence_pre ; try ( apply hoare_asgn || assn_auto'' ) . Qed . 