\begin{document} \begin{theorem} Take the following code segment such that \begin{verbatim} <var:l0> := <nat:4> ; <var:t> := <var:l0> \end{verbatim} Given --- given every natural numbers $ <var:c> $ --- it to hold that $ <var:W> = <var:c> $ prior to running the code segment it follows that $ <var:t> = <nat:4> $ once list of instructions has finished executing . \end{theorem} \begin{proof} Arguing the correctness of this set of commands is clear with the below decorated list of instructions . \begin{eqnarray} \{ <var:W> = <var:c> \} \\ <var:l0> := <nat:4> ; \\ \{ <var:W> = <var:c> \land <var:l0> = <nat:4> \} \\ <var:t> := <var:l0> \\ \{ <var:W> = <var:c> \land <var:t> = <nat:4> \} \end{eqnarray} The application of Hoare techniques solves the proof . \end{proof} \end{document} 
~
Require Import String . From PLF Require Import Imp . From PLF Require Import Hoare . Definition <var:l0> : string := " <var:l0> " . Theorem <genH:poly_code_correct> : forall <var:c> : nat , {{ <var:W> = <var:c> }} <var:l0> := <nat:4> ; <var:t> := <var:l0> {{ <var:t> = <nat:4> }} . Proof . intros . apply hoare_seq with ( Q := ( ( <var:W> = <var:c> /\ <var:l0> = <nat:4> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:W> = <var:c> /\ <var:t> = <nat:4> ) ) %assertion ) . all : eapply hoare_consequence_pre ; try ( apply hoare_asgn || assn_auto'' ) . Qed . 