\begin{document} \begin{theorem} Let the following series of instructions : \begin{verbatim} <var:m1> := <var:y> ; <var:m2> := <var:m1> * <var:y> ; <var:m3> := <var:m2> * <var:y> ; <var:m0> := <nat:8> ; <var:m1> := <var:m1> * <nat:5> ; <var:m2> := <var:m2> * <nat:7> ; <var:m3> := <var:m3> * <nat:8> ; <var:L> := <var:m3> <var:L> := <var:L> + <var:m2> <var:L> := <var:L> + <var:m1> <var:L> := <var:L> + <var:m0> \end{verbatim} Assuming that $ <var:y> = <var:l> $ ahead of running this set of instructions it follows that $ <var:L> = <nat:8> \times <var:l> ^ <nat:3> + <nat:7> \times <var:l> ^ <nat:2> + <nat:5> \times <var:l> + <nat:8> $ . \end{theorem} \begin{proof} \begin{eqnarray} \{ <var:y> = <var:l> \} \\ <var:m1> := <var:y> ; \\ \{ <var:y> = <var:l> \land <var:m1> = <var:l> \} \\ <var:m2> := <var:m1> * <var:y> ; \\ \{ <var:y> = <var:l> \land <var:m1> = <var:l> \land <var:m2> = <var:l> ^ <nat:2> \} \\ <var:m3> := <var:m2> * <var:y> ; \\ \{ <var:y> = <var:l> \land <var:m1> = <var:l> \land <var:m2> = <var:l> ^ <nat:2> \land <var:m3> = <var:l> ^ <nat:3> \} \\ <var:m0> := <nat:8> ; \\ \{ <var:y> = <var:l> \land <var:m1> = <var:l> \land <var:m2> = <var:l> ^ <nat:2> \land <var:m3> = <var:l> ^ <nat:3> \land <var:m0> = <nat:8> \} \\ <var:m1> := <var:m1> * <nat:5> ; \\ \{ <var:y> = <var:l> \land <var:m1> = <nat:5> \cdot <var:l> \land <var:m2> = <var:l> ^ <nat:2> \land <var:m3> = <var:l> ^ <nat:3> \land <var:m0> = <nat:8> \} \end{eqnarray} Furthering running our set of commands gives : \begin{eqnarray} <var:m2> := <var:m2> * <nat:7> ; \\ \{ <var:y> = <var:l> \land <var:m1> = <nat:5> \cdot <var:l> \land <var:m2> = <nat:7> \cdot <var:l> ^ <nat:2> \land <var:m3> = <var:l> ^ <nat:3> \land <var:m0> = <nat:8> \} \\ <var:m3> := <var:m3> * <nat:8> ; \\ \{ <var:y> = <var:l> \land <var:m1> = <nat:5> \cdot <var:l> \land <var:m2> = <nat:7> \cdot <var:l> ^ <nat:2> \land <var:m3> = <nat:8> \cdot <var:l> ^ <nat:3> \land <var:m0> = <nat:8> \} \\ <var:L> := <var:m3> \\ \{ <var:y> = <var:l> \land <var:m1> = <nat:5> \cdot <var:l> \land <var:m2> = <nat:7> \cdot <var:l> ^ <nat:2> \land <var:m0> = <nat:8> \land <var:L> = <nat:8> \cdot <var:l> ^ <nat:3> \} \\ <var:L> := <var:L> + <var:m2> \\ \{ <var:y> = <var:l> \land <var:m1> = <nat:5> \cdot <var:l> \land <var:m0> = <nat:8> \land <var:L> = <nat:8> \cdot <var:l> ^ <nat:3> + <nat:7> \cdot <var:l> ^ <nat:2> \} \\ <var:L> := <var:L> + <var:m1> \\ \{ <var:y> = <var:l> \land <var:m0> = <nat:8> \land <var:L> = <nat:8> \cdot <var:l> ^ <nat:3> + <nat:7> \cdot <var:l> ^ <nat:2> + <nat:5> \cdot <var:l> \} \\ <var:L> := <var:L> + <var:m0> \\ \{ <var:y> = <var:l> \land <var:L> = <nat:8> \cdot <var:l> ^ <nat:3> + <nat:7> \cdot <var:l> ^ <nat:2> + <nat:5> \cdot <var:l> + <nat:8> \} \end{eqnarray} Utilizing Hoare reasoning completes the proof . \end{proof} \end{document} 
~
Require Import String . From PLF Require Import Imp . From PLF Require Import Hoare . Definition <var:m0> : string := " <var:m0> " . Definition <var:m1> : string := " <var:m1> " . Definition <var:m2> : string := " <var:m2> " . Definition <var:m3> : string := " <var:m3> " . Theorem <genH:poly_code_correct> : forall <var:l> : nat , {{ <var:y> = <var:l> }} <var:m1> := <var:y> ; <var:m2> := <var:m1> * <var:y> ; <var:m3> := <var:m2> * <var:y> ; <var:m0> := <nat:8> ; <var:m1> := <var:m1> * <nat:5> ; <var:m2> := <var:m2> * <nat:7> ; <var:m3> := <var:m3> * <nat:8> ; <var:L> := <var:m3> <var:L> := <var:L> + <var:m2> <var:L> := <var:L> + <var:m1> <var:L> := <var:L> + <var:m0> {{ <var:L> = <nat:8> * <var:l> ^ <nat:3> + <nat:7> * <var:l> ^ <nat:2> + <nat:5> * <var:l> + <nat:8> }} . Proof . intros . apply hoare_seq with ( Q := ( ( <var:y> = <var:l> /\ <var:m1> = <var:l> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:y> = <var:l> /\ <var:m1> = <var:l> /\ <var:m2> = <var:l> ^ <nat:2> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:y> = <var:l> /\ <var:m1> = <var:l> /\ <var:m2> = <var:l> ^ <nat:2> /\ <var:m3> = <var:l> ^ <nat:3> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:y> = <var:l> /\ <var:m1> = <var:l> /\ <var:m2> = <var:l> ^ <nat:2> /\ <var:m3> = <var:l> ^ <nat:3> /\ <var:m0> = <nat:8> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:y> = <var:l> /\ <var:m1> = <nat:5> * <var:l> /\ <var:m2> = <var:l> ^ <nat:2> /\ <var:m3> = <var:l> ^ <nat:3> /\ <var:m0> = <nat:8> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:y> = <var:l> /\ <var:m1> = <nat:5> * <var:l> /\ <var:m2> = <nat:7> * <var:l> ^ <nat:2> /\ <var:m3> = <var:l> ^ <nat:3> /\ <var:m0> = <nat:8> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:y> = <var:l> /\ <var:m1> = <nat:5> * <var:l> /\ <var:m2> = <nat:7> * <var:l> ^ <nat:2> /\ <var:m3> = <nat:8> * <var:l> ^ <nat:3> /\ <var:m0> = <nat:8> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:y> = <var:l> /\ <var:m1> = <nat:5> * <var:l> /\ <var:m2> = <nat:7> * <var:l> ^ <nat:2> /\ <var:m0> = <nat:8> /\ <var:L> = <nat:8> * <var:l> ^ <nat:3> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:y> = <var:l> /\ <var:m1> = <nat:5> * <var:l> /\ <var:m0> = <nat:8> /\ <var:L> = <nat:8> * <var:l> ^ <nat:3> + <nat:7> * <var:l> ^ <nat:2> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:y> = <var:l> /\ <var:m0> = <nat:8> /\ <var:L> = <nat:8> * <var:l> ^ <nat:3> + <nat:7> * <var:l> ^ <nat:2> + <nat:5> * <var:l> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:y> = <var:l> /\ <var:L> = <nat:8> * <var:l> ^ <nat:3> + <nat:7> * <var:l> ^ <nat:2> + <nat:5> * <var:l> + <nat:8> ) ) %assertion ) . all : eapply hoare_consequence_pre ; try ( apply hoare_asgn || assn_auto'' ) . Qed . 