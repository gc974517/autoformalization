\begin{document} \begin{definition} Consider the following segment of code <def:poly> in \emph{Imp} as follows \begin{verbatim} <var:h0> := <nat:3> ; <var:S> := <var:h0> \end{verbatim} \end{definition} \begin{theorem} Allow ( given positive numbers $ <var:Y> $ ) it to hold that $ <var:u> = <var:Y> $ before evaluating this code segment , it follows that we see $ <var:S> = <nat:3> $ . \end{theorem} \begin{proof} The way to prove correctness for our list of commands is evident through Hoare logic . Going to the next step , we have the line binding $ <nat:3> $ into $ <var:h0>$ . This takes $ \{ <var:u> = <var:Y> \} $ toward $ \{ <var:u> = <var:Y> \land <var:h0> = <nat:3> \} $ . This is given with the assignment scheme given by standard Hoare techniques . Shifting focus toward the following line of code seen in the segment of code , we have the variable binding line binding $ <var:h0$ into $ <var:S>$ . This forwards the condition $ \{ <var:u> = <var:Y> \land <var:h0> = <nat:3> \} $ as $ \{ <var:u> = <var:Y> \land <var:S> = <nat:3> \} $ . \end{proof} \end{document} 
~
Require Import String . From PLF Require Import Imp . From PLF Require Import Hoare . Definition <var:h0> : string := " <var:h0> " . Definition <def:poly> := <var:h0> := <nat:3> ; <var:S> := <var:h0> . Theorem <genH:poly_code_correct> : forall <var:Y> : nat , {{ <var:u> = <var:Y> }} <def:poly> {{ <var:S> = <nat:3> }} . Proof . intros . apply hoare_seq with ( Q := ( ( <var:u> = <var:Y> /\ <var:h0> = <nat:3> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:u> = <var:Y> /\ <var:S> = <nat:3> ) ) %assertion ) . all : eapply hoare_consequence_pre ; try ( apply hoare_asgn || assn_auto'' ) . Qed . 