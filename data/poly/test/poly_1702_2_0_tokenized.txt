\begin{document} \begin{definition} Let the following set of instructions <def:poly> in \emph{Imp} such that \begin{verbatim} <var:Y0> := <nat:1> ; <var:j> := <var:Y0> \end{verbatim} \end{definition} \begin{theorem} Take a series of instructions <def:poly> in \emph{Imp} . Allow --- letting integers $ <var:m> $ --- it to hold that $ <var:V> = <var:m> $ before interpreting this series of instructions then $ <var:j> = <nat:1> $ once segment of code has terminated . \end{theorem} \begin{proof} Demonstrating correctness of this set of commands is demonstrated using typical Hoare techniques . Moving on to the next step , we see the variable binding statement \verb | <var:Y0> := <nat:1> ; | . This transfers the precondition $ \{ <var:V> = <var:m> \} $ into the condition $ \{ <var:V> = <var:m> \land <var:Y0> = <nat:1> \} $ . Going forward , we see the environment update line defining $ <var:Y0$ as $ <var:j>$ . This moves the precondition $ \{ <var:V> = <var:m> \land <var:Y0> = <nat:1> \} $ as $ \{ <var:V> = <var:m> \land <var:j> = <nat:1> \} $ . \end{proof} \end{document} 
~
Require Import String . From PLF Require Import Imp . From PLF Require Import Hoare . Definition <var:Y0> : string := " <var:Y0> " . Definition <def:poly> := <var:Y0> := <nat:1> ; <var:j> := <var:Y0> . Theorem <genH:poly_code_correct> : forall <var:m> : nat , {{ <var:V> = <var:m> }} <def:poly> {{ <var:j> = <nat:1> }} . Proof . intros . apply hoare_seq with ( Q := ( ( <var:V> = <var:m> /\ <var:Y0> = <nat:1> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:V> = <var:m> /\ <var:j> = <nat:1> ) ) %assertion ) . all : eapply hoare_consequence_pre ; try ( apply hoare_asgn || assn_auto'' ) . Qed . 