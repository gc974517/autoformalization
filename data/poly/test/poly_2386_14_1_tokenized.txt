\begin{document} \begin{theorem} We define a series of commands in \emph{Imp} such that \begin{verbatim} <var:c1> := <var:s> ; <var:c2> := <var:c1> * <var:s> ; <var:c3> := <var:c2> * <var:s> ; <var:c4> := <var:c3> * <var:s> ; <var:c0> := <nat:3> ; <var:c1> := <var:c1> * <nat:2> ; <var:c2> := <var:c2> * <nat:5> ; <var:c3> := <var:c3> * <nat:6> ; <var:c4> := <var:c4> * <nat:9> ; <var:j> := <var:c4> <var:j> := <var:j> + <var:c3> <var:j> := <var:j> + <var:c2> <var:j> := <var:j> + <var:c1> <var:j> := <var:j> + <var:c0> \end{verbatim} Allow $ <var:s> = <var:R> $ ahead of executing the list of commands it follows that we have $ <var:j> = <nat:9> * <var:R> ^ <nat:4> + <nat:6> * <var:R> ^ <nat:3> + <nat:5> * <var:R> ^ <nat:2> + <nat:2> * <var:R> + <nat:3> $ . \end{theorem} \begin{proof} Demonstrating correctness of our code is done with Hoare reasoning . Moving on to the next step , we see \[ \begin{tabular} {rcl} \{ <var:s> = <var:R> \} & <var:c1> := <var:s> & \{ <var:s> = <var:R> \land <var:c1> = <var:R> \} \\ \{ <var:s> = <var:R> \land <var:c1> = <var:R> \} & <var:c2> := <var:c1> * <var:s> & \{ <var:s> = <var:R> \land <var:c1> = <var:R> \land <var:c2> = <var:R> ^ <nat:2> \} \\ \{ <var:s> = <var:R> \land <var:c1> = <var:R> \land <var:c2> = <var:R> ^ <nat:2> \} & <var:c3> := <var:c2> * <var:s> & \{ <var:s> = <var:R> \land <var:c1> = <var:R> \land <var:c2> = <var:R> ^ <nat:2> \land <var:c3> = <var:R> ^ <nat:3> \} \\ \{ <var:s> = <var:R> \land <var:c1> = <var:R> \land <var:c2> = <var:R> ^ <nat:2> \land <var:c3> = <var:R> ^ <nat:3> \} & <var:c4> := <var:c3> * <var:s> & \{ <var:s> = <var:R> \land <var:c1> = <var:R> \land <var:c2> = <var:R> ^ <nat:2> \land <var:c3> = <var:R> ^ <nat:3> \land <var:c4> = <var:R> ^ <nat:4> \} \\ \{ <var:s> = <var:R> \land <var:c1> = <var:R> \land <var:c2> = <var:R> ^ <nat:2> \land <var:c3> = <var:R> ^ <nat:3> \land <var:c4> = <var:R> ^ <nat:4> \} & <var:c0> := <nat:3> & \{ <var:s> = <var:R> \land <var:c1> = <var:R> \land <var:c2> = <var:R> ^ <nat:2> \land <var:c3> = <var:R> ^ <nat:3> \land <var:c4> = <var:R> ^ <nat:4> \land <var:c0> = <nat:3> \} \end{tabular} This is shown to be logically sound with the scheme given by usual Hoare logic . Keeping momentum , we see \[ \begin{tabular} {rcl} \{ <var:s> = <var:R> \} & <var:c1> := <var:s> & \{ <var:s> = <var:R> \land <var:c1> = <var:R> \} \\ \{ <var:s> = <var:R> \land <var:c1> = <var:R> \} & <var:c2> := <var:c1> * <var:s> & \{ <var:s> = <var:R> \land <var:c1> = <var:R> \land <var:c2> = <var:R> ^ <nat:2> \} \\ \{ <var:s> = <var:R> \land <var:c1> = <var:R> \land <var:c2> = <var:R> ^ <nat:2> \} & <var:c3> := <var:c2> * <var:s> & \{ <var:s> = <var:R> \land <var:c1> = <var:R> \land <var:c2> = <var:R> ^ <nat:2> \land <var:c3> = <var:R> ^ <nat:3> \} \\ \{ <var:s> = <var:R> \land <var:c1> = <var:R> \land <var:c2> = <var:R> ^ <nat:2> \land <var:c3> = <var:R> ^ <nat:3> \} & <var:c4> := <var:c3> * <var:s> & \{ <var:s> = <var:R> \land <var:c1> = <var:R> \land <var:c2> = <var:R> ^ <nat:2> \land <var:c3> = <var:R> ^ <nat:3> \land <var:c4> = <var:R> ^ <nat:4> \} \\ \{ <var:s> = <var:R> \land <var:c1> = <var:R> \land <var:c2> = <var:R> ^ <nat:2> \land <var:c3> = <var:R> ^ <nat:3> \land <var:c4> = <var:R> ^ <nat:4> \} & <var:c0> := <nat:3> & \{ <var:s> = <var:R> \land <var:c1> = <var:R> \land <var:c2> = <var:R> ^ <nat:2> \land <var:c3> = <var:R> ^ <nat:3> \land <var:c4> = <var:R> ^ <nat:4> \land <var:c0> = <nat:3> \} \\ \{ <var:s> = <var:R> \land <var:c1> = <var:R> \land <var:c2> = <var:R> ^ <nat:2> \land <var:c3> = <var:R> ^ <nat:3> \land <var:c4> = <var:R> ^ <nat:4> \land <var:c0> = <nat:3> \} & <var:c1> := <var:c1> * <nat:2> & \{ <var:s> = <var:R> \land <var:c1> = <nat:2> \times <var:R> \land <var:c2> = <var:R> ^ <nat:2> \land <var:c3> = <var:R> ^ <nat:3> \land <var:c4> = <var:R> ^ <nat:4> \land <var:c0> = <nat:3> \} \\ \{ <var:s> = <var:R> \land <var:c1> = <nat:2> \times <var:R> \land <var:c2> = <var:R> ^ <nat:2> \land <var:c3> = <var:R> ^ <nat:3> \land <var:c4> = <var:R> ^ <nat:4> \land <var:c0> = <nat:3> \} & <var:c2> := <var:c2> * <nat:5> & \{ <var:s> = <var:R> \land <var:c1> = <nat:2> \times <var:R> \land <var:c2> = <nat:5> \times <var:R> ^ <nat:2> \land <var:c3> = <var:R> ^ <nat:3> \land <var:c4> = <var:R> ^ <nat:4> \land <var:c0> = <nat:3> \} \\ \{ <var:s> = <var:R> \land <var:c1> = <nat:2> \times <var:R> \land <var:c2> = <nat:5> \times <var:R> ^ <nat:2> \land <var:c3> = <var:R> ^ <nat:3> \land <var:c4> = <var:R> ^ <nat:4> \land <var:c0> = <nat:3> \} & <var:c3> := <var:c3> * <nat:6> & \{ <var:s> = <var:R> \land <var:c1> = <nat:2> \times <var:R> \land <var:c2> = <nat:5> \times <var:R> ^ <nat:2> \land <var:c3> = <nat:6> \times <var:R> ^ <nat:3> \land <var:c4> = <var:R> ^ <nat:4> \land <var:c0> = <nat:3> \} \end{tabular} Further , we see \[ \begin{tabular} {rcl} \{ <var:s> = <var:R> \} & <var:c1> := <var:s> & \{ <var:s> = <var:R> \land <var:c1> = <var:R> \} \end{tabular} This is deduced through the assignment law given in Hoare reasoning . \end{proof} \end{document} 
~
Require Import String . From PLF Require Import Imp . From PLF Require Import Hoare . Definition <var:c0> : string := " <var:c0> " . Definition <var:c1> : string := " <var:c1> " . Definition <var:c2> : string := " <var:c2> " . Definition <var:c3> : string := " <var:c3> " . Definition <var:c4> : string := " <var:c4> " . Theorem <genH:poly_code_correct> : forall <var:R> : nat , {{ <var:s> = <var:R> }} <var:c1> := <var:s> ; <var:c2> := <var:c1> * <var:s> ; <var:c3> := <var:c2> * <var:s> ; <var:c4> := <var:c3> * <var:s> ; <var:c0> := <nat:3> ; <var:c1> := <var:c1> * <nat:2> ; <var:c2> := <var:c2> * <nat:5> ; <var:c3> := <var:c3> * <nat:6> ; <var:c4> := <var:c4> * <nat:9> ; <var:j> := <var:c4> <var:j> := <var:j> + <var:c3> <var:j> := <var:j> + <var:c2> <var:j> := <var:j> + <var:c1> <var:j> := <var:j> + <var:c0> {{ <var:j> = <nat:9> * <var:R> ^ <nat:4> + <nat:6> * <var:R> ^ <nat:3> + <nat:5> * <var:R> ^ <nat:2> + <nat:2> * <var:R> + <nat:3> }} . Proof . intros . apply hoare_seq with ( Q := ( ( <var:s> = <var:R> /\ <var:c1> = <var:R> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:s> = <var:R> /\ <var:c1> = <var:R> /\ <var:c2> = <var:R> ^ <nat:2> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:s> = <var:R> /\ <var:c1> = <var:R> /\ <var:c2> = <var:R> ^ <nat:2> /\ <var:c3> = <var:R> ^ <nat:3> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:s> = <var:R> /\ <var:c1> = <var:R> /\ <var:c2> = <var:R> ^ <nat:2> /\ <var:c3> = <var:R> ^ <nat:3> /\ <var:c4> = <var:R> ^ <nat:4> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:s> = <var:R> /\ <var:c1> = <var:R> /\ <var:c2> = <var:R> ^ <nat:2> /\ <var:c3> = <var:R> ^ <nat:3> /\ <var:c4> = <var:R> ^ <nat:4> /\ <var:c0> = <nat:3> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:s> = <var:R> /\ <var:c1> = <nat:2> * <var:R> /\ <var:c2> = <var:R> ^ <nat:2> /\ <var:c3> = <var:R> ^ <nat:3> /\ <var:c4> = <var:R> ^ <nat:4> /\ <var:c0> = <nat:3> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:s> = <var:R> /\ <var:c1> = <nat:2> * <var:R> /\ <var:c2> = <nat:5> * <var:R> ^ <nat:2> /\ <var:c3> = <var:R> ^ <nat:3> /\ <var:c4> = <var:R> ^ <nat:4> /\ <var:c0> = <nat:3> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:s> = <var:R> /\ <var:c1> = <nat:2> * <var:R> /\ <var:c2> = <nat:5> * <var:R> ^ <nat:2> /\ <var:c3> = <nat:6> * <var:R> ^ <nat:3> /\ <var:c4> = <var:R> ^ <nat:4> /\ <var:c0> = <nat:3> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:s> = <var:R> /\ <var:c1> = <nat:2> * <var:R> /\ <var:c2> = <nat:5> * <var:R> ^ <nat:2> /\ <var:c3> = <nat:6> * <var:R> ^ <nat:3> /\ <var:c4> = <nat:9> * <var:R> ^ <nat:4> /\ <var:c0> = <nat:3> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:s> = <var:R> /\ <var:c1> = <nat:2> * <var:R> /\ <var:c2> = <nat:5> * <var:R> ^ <nat:2> /\ <var:c3> = <nat:6> * <var:R> ^ <nat:3> /\ <var:c0> = <nat:3> /\ <var:j> = <nat:9> * <var:R> ^ <nat:4> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:s> = <var:R> /\ <var:c1> = <nat:2> * <var:R> /\ <var:c2> = <nat:5> * <var:R> ^ <nat:2> /\ <var:c0> = <nat:3> /\ <var:j> = <nat:9> * <var:R> ^ <nat:4> + <nat:6> * <var:R> ^ <nat:3> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:s> = <var:R> /\ <var:c1> = <nat:2> * <var:R> /\ <var:c0> = <nat:3> /\ <var:j> = <nat:9> * <var:R> ^ <nat:4> + <nat:6> * <var:R> ^ <nat:3> + <nat:5> * <var:R> ^ <nat:2> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:s> = <var:R> /\ <var:c0> = <nat:3> /\ <var:j> = <nat:9> * <var:R> ^ <nat:4> + <nat:6> * <var:R> ^ <nat:3> + <nat:5> * <var:R> ^ <nat:2> + <nat:2> * <var:R> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:s> = <var:R> /\ <var:j> = <nat:9> * <var:R> ^ <nat:4> + <nat:6> * <var:R> ^ <nat:3> + <nat:5> * <var:R> ^ <nat:2> + <nat:2> * <var:R> + <nat:3> ) ) %assertion ) . all : eapply hoare_consequence_pre ; try ( apply hoare_asgn || assn_auto'' ) . Qed . 