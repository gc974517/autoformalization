\begin{document} \begin{theorem} Consider a series of commands as \begin{verbatim} <var:G> := <nat:2> ; <var:G> := <nat:1> + <var:G> * <var:f> ; <var:G> := <nat:3> + <var:G> * <var:f> ; <var:G> := <nat:3> + <var:G> * <var:f> ; <var:G> := <nat:3> + <var:G> * <var:f> ; <var:G> := <nat:3> + <var:G> * <var:f> ; <var:G> := <var:G> * <var:f> ; <var:G> := <nat:3> + <var:G> * <var:f> ; <var:G> := <nat:3> + <var:G> * <var:f> ; <var:G> := <nat:4> + <var:G> * <var:f> ; <var:G> := <nat:3> + <var:G> * <var:f> ; <var:G> := <nat:1> + <var:G> * <var:f> ; <var:G> := <nat:3> + <var:G> * <var:f> ; <var:G> := <nat:1> + <var:G> * <var:f> \end{verbatim} Given it to hold that $ <var:f> = <var:m> $ , for all positive integer coefficients $ <var:m> $ , before interpreting our segment of code , it follows that $ <var:G> = <nat:2> \cdot <var:m> ^ <nat:13> + <nat:1> \cdot <var:m> ^ <nat:12> + <nat:3> \cdot <var:m> ^ <nat:11> + <nat:3> \cdot <var:m> ^ <nat:10> + <nat:3> \cdot <var:m> ^ <nat:9> + <nat:3> \cdot <var:m> ^ <nat:8> + <nat:3> \cdot <var:m> ^ <nat:6> + <nat:3> \cdot <var:m> ^ <nat:5> + <nat:4> \cdot <var:m> ^ <nat:4> + <nat:3> \cdot <var:m> ^ <nat:3> + <nat:1> \cdot <var:m> ^ <nat:2> + <nat:3> \cdot <var:m> + <nat:1> $ . \end{theorem} \begin{proof} The course of logic for the set of instructions is shown using Hoare reasoning . After , we have \begin{verbatim} { <var:f> = <var:m> } <var:G> := <nat:2> { <var:f> = <var:m> \land <var:G> = <nat:2> } { <var:f> = <var:m> \land <var:G> = <nat:2> } <var:G> := <nat:1> + <var:G> * <var:f> { <var:f> = <var:m> \land <var:G> = <nat:2> \cdot <var:m> + <nat:1> } { <var:f> = <var:m> \land <var:G> = <nat:2> \cdot <var:m> + <nat:1> } <var:G> := <nat:3> + <var:G> * <var:f> { <var:f> = <var:m> \land <var:G> = <nat:2> \cdot <var:m> ^ <nat:2> + <nat:1> \cdot <var:m> + <nat:3> } { <var:f> = <var:m> \land <var:G> = <nat:2> \cdot <var:m> ^ <nat:2> + <nat:1> \cdot <var:m> + <nat:3> } <var:G> := <nat:3> + <var:G> * <var:f> { <var:f> = <var:m> \land <var:G> = <nat:2> \cdot <var:m> ^ <nat:3> + <nat:1> \cdot <var:m> ^ <nat:2> + <nat:3> \cdot <var:m> + <nat:3> } { <var:f> = <var:m> \land <var:G> = <nat:2> \cdot <var:m> ^ <nat:3> + <nat:1> \cdot <var:m> ^ <nat:2> + <nat:3> \cdot <var:m> + <nat:3> } <var:G> := <nat:3> + <var:G> * <var:f> { <var:f> = <var:m> \land <var:G> = <nat:2> \cdot <var:m> ^ <nat:4> + <nat:1> \cdot <var:m> ^ <nat:3> + <nat:3> \cdot <var:m> ^ <nat:2> + <nat:3> \cdot <var:m> + <nat:3> } { <var:f> = <var:m> \land <var:G> = <nat:2> \cdot <var:m> ^ <nat:4> + <nat:1> \cdot <var:m> ^ <nat:3> + <nat:3> \cdot <var:m> ^ <nat:2> + <nat:3> \cdot <var:m> + <nat:3> } <var:G> := <nat:3> + <var:G> * <var:f> { <var:f> = <var:m> \land <var:G> = <nat:2> \cdot <var:m> ^ <nat:5> + <nat:1> \cdot <var:m> ^ <nat:4> + <nat:3> \cdot <var:m> ^ <nat:3> + <nat:3> \cdot <var:m> ^ <nat:2> + <nat:3> \cdot <var:m> + <nat:3> } { <var:f> = <var:m> \land <var:G> = <nat:2> \cdot <var:m> ^ <nat:5> + <nat:1> \cdot <var:m> ^ <nat:4> + <nat:3> \cdot <var:m> ^ <nat:3> + <nat:3> \cdot <var:m> ^ <nat:2> + <nat:3> \cdot <var:m> + <nat:3> } <var:G> := <var:G> * <var:f> { <var:f> = <var:m> \land <var:G> = <nat:2> \cdot <var:m> ^ <nat:6> + <nat:1> \cdot <var:m> ^ <nat:5> + <nat:3> \cdot <var:m> ^ <nat:4> + <nat:3> \cdot <var:m> ^ <nat:3> + <nat:3> \cdot <var:m> ^ <nat:2> + <nat:3> \cdot <var:m> + } { <var:f> = <var:m> \land <var:G> = <nat:2> \cdot <var:m> ^ <nat:6> + <nat:1> \cdot <var:m> ^ <nat:5> + <nat:3> \cdot <var:m> ^ <nat:4> + <nat:3> \cdot <var:m> ^ <nat:3> + <nat:3> \cdot <var:m> ^ <nat:2> + <nat:3> \cdot <var:m> + } <var:G> := <nat:3> + <var:G> * <var:f> { <var:f> = <var:m> \land <var:G> = <nat:2> \cdot <var:m> ^ <nat:7> + <nat:1> \cdot <var:m> ^ <nat:6> + <nat:3> \cdot <var:m> ^ <nat:5> + <nat:3> \cdot <var:m> ^ <nat:4> + <nat:3> \cdot <var:m> ^ <nat:3> + <nat:3> \cdot <var:m> ^ <nat:2> + <nat:3> } { <var:f> = <var:m> \land <var:G> = <nat:2> \cdot <var:m> ^ <nat:7> + <nat:1> \cdot <var:m> ^ <nat:6> + <nat:3> \cdot <var:m> ^ <nat:5> + <nat:3> \cdot <var:m> ^ <nat:4> + <nat:3> \cdot <var:m> ^ <nat:3> + <nat:3> \cdot <var:m> ^ <nat:2> + <nat:3> } <var:G> := <nat:3> + <var:G> * <var:f> { <var:f> = <var:m> \land <var:G> = <nat:2> \cdot <var:m> ^ <nat:8> + <nat:1> \cdot <var:m> ^ <nat:7> + <nat:3> \cdot <var:m> ^ <nat:6> + <nat:3> \cdot <var:m> ^ <nat:5> + <nat:3> \cdot <var:m> ^ <nat:4> + <nat:3> \cdot <var:m> ^ <nat:3> + <nat:3> \cdot <var:m> + <nat:3> } { <var:f> = <var:m> \land <var:G> = <nat:2> \cdot <var:m> ^ <nat:8> + <nat:1> \cdot <var:m> ^ <nat:7> + <nat:3> \cdot <var:m> ^ <nat:6> + <nat:3> \cdot <var:m> ^ <nat:5> + <nat:3> \cdot <var:m> ^ <nat:4> + <nat:3> \cdot <var:m> ^ <nat:3> + <nat:3> \cdot <var:m> + <nat:3> } <var:G> := <nat:4> + <var:G> * <var:f> { <var:f> = <var:m> \land <var:G> = <nat:2> \cdot <var:m> ^ <nat:9> + <nat:1> \cdot <var:m> ^ <nat:8> + <nat:3> \cdot <var:m> ^ <nat:7> + <nat:3> \cdot <var:m> ^ <nat:6> + <nat:3> \cdot <var:m> ^ <nat:5> + <nat:3> \cdot <var:m> ^ <nat:4> + <nat:3> \cdot <var:m> ^ <nat:2> + <nat:3> \cdot <var:m> + <nat:4> } { <var:f> = <var:m> \land <var:G> = <nat:2> \cdot <var:m> ^ <nat:9> + <nat:1> \cdot <var:m> ^ <nat:8> + <nat:3> \cdot <var:m> ^ <nat:7> + <nat:3> \cdot <var:m> ^ <nat:6> + <nat:3> \cdot <var:m> ^ <nat:5> + <nat:3> \cdot <var:m> ^ <nat:4> + <nat:3> \cdot <var:m> ^ <nat:2> + <nat:3> \cdot <var:m> + <nat:4> } <var:G> := <nat:3> + <var:G> * <var:f> { <var:f> = <var:m> \land <var:G> = <nat:2> \cdot <var:m> ^ <nat:10> + <nat:1> \cdot <var:m> ^ <nat:9> + <nat:3> \cdot <var:m> ^ <nat:8> + <nat:3> \cdot <var:m> ^ <nat:7> + <nat:3> \cdot <var:m> ^ <nat:6> + <nat:3> \cdot <var:m> ^ <nat:5> + <nat:3> \cdot <var:m> ^ <nat:3> + <nat:3> \cdot <var:m> ^ <nat:2> + <nat:4> \cdot <var:m> + <nat:3> } \end{verbatim} This is given by the assignment law in standard Hoare techniques . Moving forward to the next pieces of code found in the series of instructions , we see \begin{verbatim} { <var:f> = <var:m> } <var:G> := <nat:2> { <var:f> = <var:m> \land <var:G> = <nat:2> } { <var:f> = <var:m> \land <var:G> = <nat:2> } <var:G> := <nat:1> + <var:G> * <var:f> { <var:f> = <var:m> \land <var:G> = <nat:2> \cdot <var:m> + <nat:1> } \end{verbatim} Advancing to the next step , we see \begin{verbatim} { <var:f> = <var:m> } <var:G> := <nat:2> { <var:f> = <var:m> \land <var:G> = <nat:2> } \end{verbatim} This is guaranteed through the variable binding scheme given by Hoare techniques . \end{proof} \end{document} 
~
Require Import String . From PLF Require Import Imp . From PLF Require Import Hoare . Theorem <genH:poly_code_correct> : forall <var:m> : nat , {{ <var:f> = <var:m> }} <var:G> := <nat:2> ; <var:G> := <nat:1> + <var:G> * <var:f> ; <var:G> := <nat:3> + <var:G> * <var:f> ; <var:G> := <nat:3> + <var:G> * <var:f> ; <var:G> := <nat:3> + <var:G> * <var:f> ; <var:G> := <nat:3> + <var:G> * <var:f> ; <var:G> := <var:G> * <var:f> ; <var:G> := <nat:3> + <var:G> * <var:f> ; <var:G> := <nat:3> + <var:G> * <var:f> ; <var:G> := <nat:4> + <var:G> * <var:f> ; <var:G> := <nat:3> + <var:G> * <var:f> ; <var:G> := <nat:1> + <var:G> * <var:f> ; <var:G> := <nat:3> + <var:G> * <var:f> ; <var:G> := <nat:1> + <var:G> * <var:f> {{ <var:G> = <nat:2> * <var:m> ^ <nat:13> + <nat:1> * <var:m> ^ <nat:12> + <nat:3> * <var:m> ^ <nat:11> + <nat:3> * <var:m> ^ <nat:10> + <nat:3> * <var:m> ^ <nat:9> + <nat:3> * <var:m> ^ <nat:8> + <nat:3> * <var:m> ^ <nat:6> + <nat:3> * <var:m> ^ <nat:5> + <nat:4> * <var:m> ^ <nat:4> + <nat:3> * <var:m> ^ <nat:3> + <nat:1> * <var:m> ^ <nat:2> + <nat:3> * <var:m> + <nat:1> }} . Proof . intros . apply hoare_seq with ( Q := ( ( <var:f> = <var:m> /\ <var:G> = <nat:2> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:f> = <var:m> /\ <var:G> = <nat:2> * <var:m> + <nat:1> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:f> = <var:m> /\ <var:G> = <nat:2> * <var:m> ^ <nat:2> + <nat:1> * <var:m> + <nat:3> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:f> = <var:m> /\ <var:G> = <nat:2> * <var:m> ^ <nat:3> + <nat:1> * <var:m> ^ <nat:2> + <nat:3> * <var:m> + <nat:3> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:f> = <var:m> /\ <var:G> = <nat:2> * <var:m> ^ <nat:4> + <nat:1> * <var:m> ^ <nat:3> + <nat:3> * <var:m> ^ <nat:2> + <nat:3> * <var:m> + <nat:3> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:f> = <var:m> /\ <var:G> = <nat:2> * <var:m> ^ <nat:5> + <nat:1> * <var:m> ^ <nat:4> + <nat:3> * <var:m> ^ <nat:3> + <nat:3> * <var:m> ^ <nat:2> + <nat:3> * <var:m> + <nat:3> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:f> = <var:m> /\ <var:G> = <nat:2> * <var:m> ^ <nat:6> + <nat:1> * <var:m> ^ <nat:5> + <nat:3> * <var:m> ^ <nat:4> + <nat:3> * <var:m> ^ <nat:3> + <nat:3> * <var:m> ^ <nat:2> + <nat:3> * <var:m> + ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:f> = <var:m> /\ <var:G> = <nat:2> * <var:m> ^ <nat:7> + <nat:1> * <var:m> ^ <nat:6> + <nat:3> * <var:m> ^ <nat:5> + <nat:3> * <var:m> ^ <nat:4> + <nat:3> * <var:m> ^ <nat:3> + <nat:3> * <var:m> ^ <nat:2> + <nat:3> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:f> = <var:m> /\ <var:G> = <nat:2> * <var:m> ^ <nat:8> + <nat:1> * <var:m> ^ <nat:7> + <nat:3> * <var:m> ^ <nat:6> + <nat:3> * <var:m> ^ <nat:5> + <nat:3> * <var:m> ^ <nat:4> + <nat:3> * <var:m> ^ <nat:3> + <nat:3> * <var:m> + <nat:3> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:f> = <var:m> /\ <var:G> = <nat:2> * <var:m> ^ <nat:9> + <nat:1> * <var:m> ^ <nat:8> + <nat:3> * <var:m> ^ <nat:7> + <nat:3> * <var:m> ^ <nat:6> + <nat:3> * <var:m> ^ <nat:5> + <nat:3> * <var:m> ^ <nat:4> + <nat:3> * <var:m> ^ <nat:2> + <nat:3> * <var:m> + <nat:4> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:f> = <var:m> /\ <var:G> = <nat:2> * <var:m> ^ <nat:10> + <nat:1> * <var:m> ^ <nat:9> + <nat:3> * <var:m> ^ <nat:8> + <nat:3> * <var:m> ^ <nat:7> + <nat:3> * <var:m> ^ <nat:6> + <nat:3> * <var:m> ^ <nat:5> + <nat:3> * <var:m> ^ <nat:3> + <nat:3> * <var:m> ^ <nat:2> + <nat:4> * <var:m> + <nat:3> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:f> = <var:m> /\ <var:G> = <nat:2> * <var:m> ^ <nat:11> + <nat:1> * <var:m> ^ <nat:10> + <nat:3> * <var:m> ^ <nat:9> + <nat:3> * <var:m> ^ <nat:8> + <nat:3> * <var:m> ^ <nat:7> + <nat:3> * <var:m> ^ <nat:6> + <nat:3> * <var:m> ^ <nat:4> + <nat:3> * <var:m> ^ <nat:3> + <nat:4> * <var:m> ^ <nat:2> + <nat:3> * <var:m> + <nat:1> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:f> = <var:m> /\ <var:G> = <nat:2> * <var:m> ^ <nat:12> + <nat:1> * <var:m> ^ <nat:11> + <nat:3> * <var:m> ^ <nat:10> + <nat:3> * <var:m> ^ <nat:9> + <nat:3> * <var:m> ^ <nat:8> + <nat:3> * <var:m> ^ <nat:7> + <nat:3> * <var:m> ^ <nat:5> + <nat:3> * <var:m> ^ <nat:4> + <nat:4> * <var:m> ^ <nat:3> + <nat:3> * <var:m> ^ <nat:2> + <nat:1> * <var:m> + <nat:3> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:f> = <var:m> /\ <var:G> = <nat:2> * <var:m> ^ <nat:13> + <nat:1> * <var:m> ^ <nat:12> + <nat:3> * <var:m> ^ <nat:11> + <nat:3> * <var:m> ^ <nat:10> + <nat:3> * <var:m> ^ <nat:9> + <nat:3> * <var:m> ^ <nat:8> + <nat:3> * <var:m> ^ <nat:6> + <nat:3> * <var:m> ^ <nat:5> + <nat:4> * <var:m> ^ <nat:4> + <nat:3> * <var:m> ^ <nat:3> + <nat:1> * <var:m> ^ <nat:2> + <nat:3> * <var:m> + <nat:1> ) ) %assertion ) . all : eapply hoare_consequence_pre ; try ( apply hoare_asgn || assn_auto'' ) . Qed . 