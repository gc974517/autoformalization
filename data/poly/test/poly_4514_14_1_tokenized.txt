\begin{document} \begin{theorem} We define the following set of commands as \begin{verbatim} <var:K1> := <var:j> ; <var:K2> := <var:K1> * <var:j> ; <var:K3> := <var:K2> * <var:j> ; <var:K4> := <var:K3> * <var:j> ; <var:K0> := <nat:4> ; <var:K1> := <var:K1> * <nat:3> ; <var:K2> := <var:K2> * <nat:8> ; <var:K3> := <var:K3> * <nat:2> ; <var:K4> := <var:K4> * <nat:4> ; <var:i> := <var:K4> <var:i> := <var:i> + <var:K3> <var:i> := <var:i> + <var:K2> <var:i> := <var:i> + <var:K1> <var:i> := <var:i> + <var:K0> \end{verbatim} Assume it to be that $ <var:j> = <var:V> $ ahead of the execution of the list of instructions it must be that $ <var:i> = <nat:4> \times <var:V> ^ <nat:4> + <nat:2> \times <var:V> ^ <nat:3> + <nat:8> \times <var:V> ^ <nat:2> + <nat:3> \times <var:V> + <nat:4> $ once program has executed . \end{theorem} \begin{proof} Proving correctness for the series of commands can be shown through Hoare techniques . Advancing on , \begin{eqnarray} \{ <var:j> = <var:V> \} \, <var:K1> := <var:j> \, \{ <var:j> = <var:V> \land <var:K1> = <var:V> \} \\ \{ <var:j> = <var:V> \land <var:K1> = <var:V> \} \, <var:K2> := <var:K1> * <var:j> \, \{ <var:j> = <var:V> \land <var:K1> = <var:V> \land <var:K2> = <var:V> ^ <nat:2> \} \\ \{ <var:j> = <var:V> \land <var:K1> = <var:V> \land <var:K2> = <var:V> ^ <nat:2> \} \, <var:K3> := <var:K2> * <var:j> \, \{ <var:j> = <var:V> \land <var:K1> = <var:V> \land <var:K2> = <var:V> ^ <nat:2> \land <var:K3> = <var:V> ^ <nat:3> \} \\ \{ <var:j> = <var:V> \land <var:K1> = <var:V> \land <var:K2> = <var:V> ^ <nat:2> \land <var:K3> = <var:V> ^ <nat:3> \} \, <var:K4> := <var:K3> * <var:j> \, \{ <var:j> = <var:V> \land <var:K1> = <var:V> \land <var:K2> = <var:V> ^ <nat:2> \land <var:K3> = <var:V> ^ <nat:3> \land <var:K4> = <var:V> ^ <nat:4> \} \\ \{ <var:j> = <var:V> \land <var:K1> = <var:V> \land <var:K2> = <var:V> ^ <nat:2> \land <var:K3> = <var:V> ^ <nat:3> \land <var:K4> = <var:V> ^ <nat:4> \} \, <var:K0> := <nat:4> \, \{ <var:j> = <var:V> \land <var:K1> = <var:V> \land <var:K2> = <var:V> ^ <nat:2> \land <var:K3> = <var:V> ^ <nat:3> \land <var:K4> = <var:V> ^ <nat:4> \land <var:K0> = <nat:4> \} \\ \{ <var:j> = <var:V> \land <var:K1> = <var:V> \land <var:K2> = <var:V> ^ <nat:2> \land <var:K3> = <var:V> ^ <nat:3> \land <var:K4> = <var:V> ^ <nat:4> \land <var:K0> = <nat:4> \} \, <var:K1> := <var:K1> * <nat:3> \, \{ <var:j> = <var:V> \land <var:K1> = <nat:3> \cdot <var:V> \land <var:K2> = <var:V> ^ <nat:2> \land <var:K3> = <var:V> ^ <nat:3> \land <var:K4> = <var:V> ^ <nat:4> \land <var:K0> = <nat:4> \} \\ \{ <var:j> = <var:V> \land <var:K1> = <nat:3> \cdot <var:V> \land <var:K2> = <var:V> ^ <nat:2> \land <var:K3> = <var:V> ^ <nat:3> \land <var:K4> = <var:V> ^ <nat:4> \land <var:K0> = <nat:4> \} \, <var:K2> := <var:K2> * <nat:8> \, \{ <var:j> = <var:V> \land <var:K1> = <nat:3> \cdot <var:V> \land <var:K2> = <nat:8> \cdot <var:V> ^ <nat:2> \land <var:K3> = <var:V> ^ <nat:3> \land <var:K4> = <var:V> ^ <nat:4> \land <var:K0> = <nat:4> \} \\ \{ <var:j> = <var:V> \land <var:K1> = <nat:3> \cdot <var:V> \land <var:K2> = <nat:8> \cdot <var:V> ^ <nat:2> \land <var:K3> = <var:V> ^ <nat:3> \land <var:K4> = <var:V> ^ <nat:4> \land <var:K0> = <nat:4> \} \, <var:K3> := <var:K3> * <nat:2> \, \{ <var:j> = <var:V> \land <var:K1> = <nat:3> \cdot <var:V> \land <var:K2> = <nat:8> \cdot <var:V> ^ <nat:2> \land <var:K3> = <nat:2> \cdot <var:V> ^ <nat:3> \land <var:K4> = <var:V> ^ <nat:4> \land <var:K0> = <nat:4> \} \\ \{ <var:j> = <var:V> \land <var:K1> = <nat:3> \cdot <var:V> \land <var:K2> = <nat:8> \cdot <var:V> ^ <nat:2> \land <var:K3> = <nat:2> \cdot <var:V> ^ <nat:3> \land <var:K4> = <var:V> ^ <nat:4> \land <var:K0> = <nat:4> \} \, <var:K4> := <var:K4> * <nat:4> \, \{ <var:j> = <var:V> \land <var:K1> = <nat:3> \cdot <var:V> \land <var:K2> = <nat:8> \cdot <var:V> ^ <nat:2> \land <var:K3> = <nat:2> \cdot <var:V> ^ <nat:3> \land <var:K4> = <nat:4> \cdot <var:V> ^ <nat:4> \land <var:K0> = <nat:4> \} \\ \{ <var:j> = <var:V> \land <var:K1> = <nat:3> \cdot <var:V> \land <var:K2> = <nat:8> \cdot <var:V> ^ <nat:2> \land <var:K3> = <nat:2> \cdot <var:V> ^ <nat:3> \land <var:K4> = <nat:4> \cdot <var:V> ^ <nat:4> \land <var:K0> = <nat:4> \} \, <var:i> := <var:K4\, \{ <var:j> = <var:V> \land <var:K1> = <nat:3> \cdot <var:V> \land <var:K2> = <nat:8> \cdot <var:V> ^ <nat:2> \land <var:K3> = <nat:2> \cdot <var:V> ^ <nat:3> \land <var:K0> = <nat:4> \land <var:i> = <nat:4> \cdot <var:V> ^ <nat:4> \} \\ \{ <var:j> = <var:V> \land <var:K1> = <nat:3> \cdot <var:V> \land <var:K2> = <nat:8> \cdot <var:V> ^ <nat:2> \land <var:K3> = <nat:2> \cdot <var:V> ^ <nat:3> \land <var:K0> = <nat:4> \land <var:i> = <nat:4> \cdot <var:V> ^ <nat:4> \} \, <var:i> := <var:i> + <var:K3\, \{ <var:j> = <var:V> \land <var:K1> = <nat:3> \cdot <var:V> \land <var:K2> = <nat:8> \cdot <var:V> ^ <nat:2> \land <var:K0> = <nat:4> \land <var:i> = <nat:4> \cdot <var:V> ^ <nat:4> + <nat:2> \cdot <var:V> ^ <nat:3> \} \end{eqnarray} Following , we see \begin{eqnarray} \{ <var:j> = <var:V> \} \, <var:K1> := <var:j> \, \{ <var:j> = <var:V> \land <var:K1> = <var:V> \} \\ \{ <var:j> = <var:V> \land <var:K1> = <var:V> \} \, <var:K2> := <var:K1> * <var:j> \, \{ <var:j> = <var:V> \land <var:K1> = <var:V> \land <var:K2> = <var:V> ^ <nat:2> \} \end{eqnarray} Looking at the next piece of code seen in our segment of code , \begin{eqnarray} \{ <var:j> = <var:V> \} \, <var:K1> := <var:j> \, \{ <var:j> = <var:V> \land <var:K1> = <var:V> \} \end{eqnarray} This is ensured through the variable assignmet scheme given in standard Hoare reasoning . \end{proof} \end{document} 
~
Require Import String . From PLF Require Import Imp . From PLF Require Import Hoare . Definition <var:K0> : string := " <var:K0> " . Definition <var:K1> : string := " <var:K1> " . Definition <var:K2> : string := " <var:K2> " . Definition <var:K3> : string := " <var:K3> " . Definition <var:K4> : string := " <var:K4> " . Theorem <genH:poly_code_correct> : forall <var:V> : nat , {{ <var:j> = <var:V> }} <var:K1> := <var:j> ; <var:K2> := <var:K1> * <var:j> ; <var:K3> := <var:K2> * <var:j> ; <var:K4> := <var:K3> * <var:j> ; <var:K0> := <nat:4> ; <var:K1> := <var:K1> * <nat:3> ; <var:K2> := <var:K2> * <nat:8> ; <var:K3> := <var:K3> * <nat:2> ; <var:K4> := <var:K4> * <nat:4> ; <var:i> := <var:K4> <var:i> := <var:i> + <var:K3> <var:i> := <var:i> + <var:K2> <var:i> := <var:i> + <var:K1> <var:i> := <var:i> + <var:K0> {{ <var:i> = <nat:4> * <var:V> ^ <nat:4> + <nat:2> * <var:V> ^ <nat:3> + <nat:8> * <var:V> ^ <nat:2> + <nat:3> * <var:V> + <nat:4> }} . Proof . intros . apply hoare_seq with ( Q := ( ( <var:j> = <var:V> /\ <var:K1> = <var:V> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:j> = <var:V> /\ <var:K1> = <var:V> /\ <var:K2> = <var:V> ^ <nat:2> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:j> = <var:V> /\ <var:K1> = <var:V> /\ <var:K2> = <var:V> ^ <nat:2> /\ <var:K3> = <var:V> ^ <nat:3> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:j> = <var:V> /\ <var:K1> = <var:V> /\ <var:K2> = <var:V> ^ <nat:2> /\ <var:K3> = <var:V> ^ <nat:3> /\ <var:K4> = <var:V> ^ <nat:4> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:j> = <var:V> /\ <var:K1> = <var:V> /\ <var:K2> = <var:V> ^ <nat:2> /\ <var:K3> = <var:V> ^ <nat:3> /\ <var:K4> = <var:V> ^ <nat:4> /\ <var:K0> = <nat:4> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:j> = <var:V> /\ <var:K1> = <nat:3> * <var:V> /\ <var:K2> = <var:V> ^ <nat:2> /\ <var:K3> = <var:V> ^ <nat:3> /\ <var:K4> = <var:V> ^ <nat:4> /\ <var:K0> = <nat:4> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:j> = <var:V> /\ <var:K1> = <nat:3> * <var:V> /\ <var:K2> = <nat:8> * <var:V> ^ <nat:2> /\ <var:K3> = <var:V> ^ <nat:3> /\ <var:K4> = <var:V> ^ <nat:4> /\ <var:K0> = <nat:4> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:j> = <var:V> /\ <var:K1> = <nat:3> * <var:V> /\ <var:K2> = <nat:8> * <var:V> ^ <nat:2> /\ <var:K3> = <nat:2> * <var:V> ^ <nat:3> /\ <var:K4> = <var:V> ^ <nat:4> /\ <var:K0> = <nat:4> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:j> = <var:V> /\ <var:K1> = <nat:3> * <var:V> /\ <var:K2> = <nat:8> * <var:V> ^ <nat:2> /\ <var:K3> = <nat:2> * <var:V> ^ <nat:3> /\ <var:K4> = <nat:4> * <var:V> ^ <nat:4> /\ <var:K0> = <nat:4> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:j> = <var:V> /\ <var:K1> = <nat:3> * <var:V> /\ <var:K2> = <nat:8> * <var:V> ^ <nat:2> /\ <var:K3> = <nat:2> * <var:V> ^ <nat:3> /\ <var:K0> = <nat:4> /\ <var:i> = <nat:4> * <var:V> ^ <nat:4> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:j> = <var:V> /\ <var:K1> = <nat:3> * <var:V> /\ <var:K2> = <nat:8> * <var:V> ^ <nat:2> /\ <var:K0> = <nat:4> /\ <var:i> = <nat:4> * <var:V> ^ <nat:4> + <nat:2> * <var:V> ^ <nat:3> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:j> = <var:V> /\ <var:K1> = <nat:3> * <var:V> /\ <var:K0> = <nat:4> /\ <var:i> = <nat:4> * <var:V> ^ <nat:4> + <nat:2> * <var:V> ^ <nat:3> + <nat:8> * <var:V> ^ <nat:2> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:j> = <var:V> /\ <var:K0> = <nat:4> /\ <var:i> = <nat:4> * <var:V> ^ <nat:4> + <nat:2> * <var:V> ^ <nat:3> + <nat:8> * <var:V> ^ <nat:2> + <nat:3> * <var:V> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:j> = <var:V> /\ <var:i> = <nat:4> * <var:V> ^ <nat:4> + <nat:2> * <var:V> ^ <nat:3> + <nat:8> * <var:V> ^ <nat:2> + <nat:3> * <var:V> + <nat:4> ) ) %assertion ) . all : eapply hoare_consequence_pre ; try ( apply hoare_asgn || assn_auto'' ) . Qed . 