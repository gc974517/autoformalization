\begin{document} \begin{definition} Consider the following series of commands <def:poly> in \emph{Imp} as follows \begin{verbatim} <var:r0> := <nat:2> ; <var:a> := <var:r0> \end{verbatim} \end{definition} \begin{theorem} Take a set of commands <def:poly> . Assume it to hold that $ <var:F> = <var:G> $ , for $ <var:G> \in \mathbb{N} $ , before interpreting the set of instructions , it holds that we see $ <var:a> = <nat:2> $ . \end{theorem} \begin{proof} Showing our claim about correctness for our list of instructions is given using usual Hoare techniques . Moving forward , the variable assignmet statement yielding $ <nat:2> $ toward $ <var:r0>$ . This command forwards the precondition $ \{ <var:F> = <var:G> \} $ toward the condition $ \{ <var:F> = <var:G> \land <var:r0> = <nat:2> \} $ . Moving forward to the next step in the list of commands , we have the assignment command giving $ <var:r0$ toward $ <var:a>$ . This command forwards $ \{ <var:F> = <var:G> \land <var:r0> = <nat:2> \} $ to the postcondition $ \{ <var:F> = <var:G> \land <var:a> = <nat:2> \} $ . \end{proof} \end{document} 
~
Require Import String . From PLF Require Import Imp . From PLF Require Import Hoare . Definition <var:r0> : string := " <var:r0> " . Definition <def:poly> := <var:r0> := <nat:2> ; <var:a> := <var:r0> . Theorem <genH:poly_code_correct> : forall <var:G> : nat , {{ <var:F> = <var:G> }} <def:poly> {{ <var:a> = <nat:2> }} . Proof . intros . apply hoare_seq with ( Q := ( ( <var:F> = <var:G> /\ <var:r0> = <nat:2> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:F> = <var:G> /\ <var:a> = <nat:2> ) ) %assertion ) . all : eapply hoare_consequence_pre ; try ( apply hoare_asgn || assn_auto'' ) . Qed . 