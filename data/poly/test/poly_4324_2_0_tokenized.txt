\begin{document} \begin{definition} Consider the following set of instructions <def:poly> in \emph{Imp} such that \begin{verbatim} <var:X0> := <nat:3> ; <var:q> := <var:X0> \end{verbatim} \end{definition} \begin{theorem} Assume ( letting natural coefficients $ <var:R> $ ) it to be that $ <var:o> = <var:R> $ before the evaluation of this program , it holds that $ <var:q> = <nat:3> $ . \end{theorem} \begin{proof} The way to prove correctness for the code segment can be demonstrated through typical Hoare logic . Jumping to the next line seen in our series of commands , the code \verb | <var:X0> := <nat:3> ; | . This command forwards the condition $ \{ <var:o> = <var:R> \} $ as $ \{ <var:o> = <var:R> \land <var:X0> = <nat:3> \} $ . This is shown to be logically sound with the assignment scheme of typical Hoare reasoning . Keeping momentum , we have the binding statement \verb | <var:q> := <var:X0> | . This transfers the precondition $ \{ <var:o> = <var:R> \land <var:X0> = <nat:3> \} $ toward $ \{ <var:o> = <var:R> \land <var:q> = <nat:3> \} $ . \end{proof} \end{document} 
~
Require Import String . From PLF Require Import Imp . From PLF Require Import Hoare . Definition <var:X0> : string := " <var:X0> " . Definition <def:poly> := <var:X0> := <nat:3> ; <var:q> := <var:X0> . Theorem <genH:poly_code_correct> : forall <var:R> : nat , {{ <var:o> = <var:R> }} <def:poly> {{ <var:q> = <nat:3> }} . Proof . intros . apply hoare_seq with ( Q := ( ( <var:o> = <var:R> /\ <var:X0> = <nat:3> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:o> = <var:R> /\ <var:q> = <nat:3> ) ) %assertion ) . all : eapply hoare_consequence_pre ; try ( apply hoare_asgn || assn_auto'' ) . Qed . 