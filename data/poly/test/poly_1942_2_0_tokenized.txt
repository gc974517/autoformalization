\begin{document} \begin{definition} Let the following set of instructions <def:poly> in \emph{Imp} as \begin{verbatim} <var:I0> := <nat:4> ; <var:x> := <var:I0> \end{verbatim} \end{definition} \begin{theorem} Consider the following series of commands <def:poly> in \emph{Imp} . Assume , assuming some natural numbers $ <var:h> $ , it to be that $ <var:a> = <var:h> $ ahead of the execution of our list of commands then we have $ <var:x> = <nat:4> $ . \end{theorem} \begin{proof} Using typical Hoare reasoning produces : \begin{eqnarray} \{ <var:a> = <var:h> \} \\ <var:I0> := <nat:4> ; \\ \{ <var:a> = <var:h> \land <var:I0> = <nat:4> \} \\ <var:x> := <var:I0> \\ \{ <var:a> = <var:h> \land <var:x> = <nat:4> \} \end{eqnarray} Continuing the execution of our list of commands yields : \begin{eqnarray} \end{eqnarray} Hence , this list of commands is proven correct . \end{proof} \end{document} 
~
Require Import String . From PLF Require Import Imp . From PLF Require Import Hoare . Definition <var:I0> : string := " <var:I0> " . Definition <def:poly> := <var:I0> := <nat:4> ; <var:x> := <var:I0> . Theorem <genH:poly_code_correct> : forall <var:h> : nat , {{ <var:a> = <var:h> }} <def:poly> {{ <var:x> = <nat:4> }} . Proof . intros . apply hoare_seq with ( Q := ( ( <var:a> = <var:h> /\ <var:I0> = <nat:4> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:a> = <var:h> /\ <var:x> = <nat:4> ) ) %assertion ) . all : eapply hoare_consequence_pre ; try ( apply hoare_asgn || assn_auto'' ) . Qed . 