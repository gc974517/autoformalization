\begin{document} \begin{definition} Consider a program <def:poly> in \emph{Imp} such that \begin{verbatim} <var:r1> := <var:H> ; <var:r2> := <var:r1> * <var:H> ; <var:r3> := <var:r2> * <var:H> ; <var:r4> := <var:r3> * <var:H> ; <var:r0> := <nat:4> ; <var:r1> := <var:r1> * <nat:6> ; <var:r2> := <var:r2> * <nat:7> ; <var:r3> := <var:r3> * <nat:8> ; <var:r4> := <var:r4> * <nat:2> ; <var:t> := <var:r4> <var:t> := <var:t> + <var:r3> <var:t> := <var:t> + <var:r2> <var:t> := <var:t> + <var:r1> <var:t> := <var:t> + <var:r0> \end{verbatim} \end{definition} \begin{theorem} Consider a set of commands <def:poly> in \emph{Imp} . Assume that we have $ <var:H> = <var:N> $ --- given all positive integer coefficients $ <var:N> $ --- prior to executing this list of instructions it follows that we see $ <var:t> = <nat:2> \times <var:N> ^ <nat:4> + <nat:8> \times <var:N> ^ <nat:3> + <nat:7> \times <var:N> ^ <nat:2> + <nat:6> \times <var:N> + <nat:4> $ . \end{theorem} \begin{proof} Using typical Hoare logic returns : \begin{eqnarray} \{ <var:H> = <var:N> \} \\ <var:r1> := <var:H> ; \\ \{ <var:H> = <var:N> \land <var:r1> = <var:N> \} \\ <var:r2> := <var:r1> * <var:H> ; \\ \{ <var:H> = <var:N> \land <var:r1> = <var:N> \land <var:r2> = <var:N> ^ <nat:2> \} \\ <var:r3> := <var:r2> * <var:H> ; \\ \{ <var:H> = <var:N> \land <var:r1> = <var:N> \land <var:r2> = <var:N> ^ <nat:2> \land <var:r3> = <var:N> ^ <nat:3> \} \\ <var:r4> := <var:r3> * <var:H> ; \\ \{ <var:H> = <var:N> \land <var:r1> = <var:N> \land <var:r2> = <var:N> ^ <nat:2> \land <var:r3> = <var:N> ^ <nat:3> \land <var:r4> = <var:N> ^ <nat:4> \} \\ <var:r0> := <nat:4> ; \\ \{ <var:H> = <var:N> \land <var:r1> = <var:N> \land <var:r2> = <var:N> ^ <nat:2> \land <var:r3> = <var:N> ^ <nat:3> \land <var:r4> = <var:N> ^ <nat:4> \land <var:r0> = <nat:4> \} \\ <var:r1> := <var:r1> * <nat:6> ; \\ \{ <var:H> = <var:N> \land <var:r1> = <nat:6> \times <var:N> \land <var:r2> = <var:N> ^ <nat:2> \land <var:r3> = <var:N> ^ <nat:3> \land <var:r4> = <var:N> ^ <nat:4> \land <var:r0> = <nat:4> \} \\ <var:r2> := <var:r2> * <nat:7> ; \\ \{ <var:H> = <var:N> \land <var:r1> = <nat:6> \times <var:N> \land <var:r2> = <nat:7> \times <var:N> ^ <nat:2> \land <var:r3> = <var:N> ^ <nat:3> \land <var:r4> = <var:N> ^ <nat:4> \land <var:r0> = <nat:4> \} \\ <var:r3> := <var:r3> * <nat:8> ; \\ \{ <var:H> = <var:N> \land <var:r1> = <nat:6> \times <var:N> \land <var:r2> = <nat:7> \times <var:N> ^ <nat:2> \land <var:r3> = <nat:8> \times <var:N> ^ <nat:3> \land <var:r4> = <var:N> ^ <nat:4> \land <var:r0> = <nat:4> \} \\ <var:r4> := <var:r4> * <nat:2> ; \\ \{ <var:H> = <var:N> \land <var:r1> = <nat:6> \times <var:N> \land <var:r2> = <nat:7> \times <var:N> ^ <nat:2> \land <var:r3> = <nat:8> \times <var:N> ^ <nat:3> \land <var:r4> = <nat:2> \times <var:N> ^ <nat:4> \land <var:r0> = <nat:4> \} \\ <var:t> := <var:r4> \\ \{ <var:H> = <var:N> \land <var:r1> = <nat:6> \times <var:N> \land <var:r2> = <nat:7> \times <var:N> ^ <nat:2> \land <var:r3> = <nat:8> \times <var:N> ^ <nat:3> \land <var:r0> = <nat:4> \land <var:t> = <nat:2> \times <var:N> ^ <nat:4> \} \\ <var:t> := <var:t> + <var:r3> \\ \{ <var:H> = <var:N> \land <var:r1> = <nat:6> \times <var:N> \land <var:r2> = <nat:7> \times <var:N> ^ <nat:2> \land <var:r0> = <nat:4> \land <var:t> = <nat:2> \times <var:N> ^ <nat:4> + <nat:8> \times <var:N> ^ <nat:3> \} \\ <var:t> := <var:t> + <var:r2> \\ \{ <var:H> = <var:N> \land <var:r1> = <nat:6> \times <var:N> \land <var:r0> = <nat:4> \land <var:t> = <nat:2> \times <var:N> ^ <nat:4> + <nat:8> \times <var:N> ^ <nat:3> + <nat:7> \times <var:N> ^ <nat:2> \} \\ <var:t> := <var:t> + <var:r1> \\ \{ <var:H> = <var:N> \land <var:r0> = <nat:4> \land <var:t> = <nat:2> \times <var:N> ^ <nat:4> + <nat:8> \times <var:N> ^ <nat:3> + <nat:7> \times <var:N> ^ <nat:2> + <nat:6> \times <var:N> \} \\ <var:t> := <var:t> + <var:r0> \\ \{ <var:H> = <var:N> \land <var:t> = <nat:2> \times <var:N> ^ <nat:4> + <nat:8> \times <var:N> ^ <nat:3> + <nat:7> \times <var:N> ^ <nat:2> + <nat:6> \times <var:N> + <nat:4> \} \end{eqnarray} Considering the above , the series of instructions is proven correct . \end{proof} \end{document} 
~
Require Import String . From PLF Require Import Imp . From PLF Require Import Hoare . Definition <var:r0> : string := " <var:r0> " . Definition <var:r1> : string := " <var:r1> " . Definition <var:r2> : string := " <var:r2> " . Definition <var:r3> : string := " <var:r3> " . Definition <var:r4> : string := " <var:r4> " . Definition <def:poly> := <var:r1> := <var:H> ; <var:r2> := <var:r1> * <var:H> ; <var:r3> := <var:r2> * <var:H> ; <var:r4> := <var:r3> * <var:H> ; <var:r0> := <nat:4> ; <var:r1> := <var:r1> * <nat:6> ; <var:r2> := <var:r2> * <nat:7> ; <var:r3> := <var:r3> * <nat:8> ; <var:r4> := <var:r4> * <nat:2> ; <var:t> := <var:r4> <var:t> := <var:t> + <var:r3> <var:t> := <var:t> + <var:r2> <var:t> := <var:t> + <var:r1> <var:t> := <var:t> + <var:r0> . Theorem <genH:poly_code_correct> : forall <var:N> : nat , {{ <var:H> = <var:N> }} <def:poly> {{ <var:t> = <nat:2> * <var:N> ^ <nat:4> + <nat:8> * <var:N> ^ <nat:3> + <nat:7> * <var:N> ^ <nat:2> + <nat:6> * <var:N> + <nat:4> }} . Proof . intros . apply hoare_seq with ( Q := ( ( <var:H> = <var:N> /\ <var:r1> = <var:N> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:H> = <var:N> /\ <var:r1> = <var:N> /\ <var:r2> = <var:N> ^ <nat:2> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:H> = <var:N> /\ <var:r1> = <var:N> /\ <var:r2> = <var:N> ^ <nat:2> /\ <var:r3> = <var:N> ^ <nat:3> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:H> = <var:N> /\ <var:r1> = <var:N> /\ <var:r2> = <var:N> ^ <nat:2> /\ <var:r3> = <var:N> ^ <nat:3> /\ <var:r4> = <var:N> ^ <nat:4> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:H> = <var:N> /\ <var:r1> = <var:N> /\ <var:r2> = <var:N> ^ <nat:2> /\ <var:r3> = <var:N> ^ <nat:3> /\ <var:r4> = <var:N> ^ <nat:4> /\ <var:r0> = <nat:4> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:H> = <var:N> /\ <var:r1> = <nat:6> * <var:N> /\ <var:r2> = <var:N> ^ <nat:2> /\ <var:r3> = <var:N> ^ <nat:3> /\ <var:r4> = <var:N> ^ <nat:4> /\ <var:r0> = <nat:4> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:H> = <var:N> /\ <var:r1> = <nat:6> * <var:N> /\ <var:r2> = <nat:7> * <var:N> ^ <nat:2> /\ <var:r3> = <var:N> ^ <nat:3> /\ <var:r4> = <var:N> ^ <nat:4> /\ <var:r0> = <nat:4> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:H> = <var:N> /\ <var:r1> = <nat:6> * <var:N> /\ <var:r2> = <nat:7> * <var:N> ^ <nat:2> /\ <var:r3> = <nat:8> * <var:N> ^ <nat:3> /\ <var:r4> = <var:N> ^ <nat:4> /\ <var:r0> = <nat:4> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:H> = <var:N> /\ <var:r1> = <nat:6> * <var:N> /\ <var:r2> = <nat:7> * <var:N> ^ <nat:2> /\ <var:r3> = <nat:8> * <var:N> ^ <nat:3> /\ <var:r4> = <nat:2> * <var:N> ^ <nat:4> /\ <var:r0> = <nat:4> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:H> = <var:N> /\ <var:r1> = <nat:6> * <var:N> /\ <var:r2> = <nat:7> * <var:N> ^ <nat:2> /\ <var:r3> = <nat:8> * <var:N> ^ <nat:3> /\ <var:r0> = <nat:4> /\ <var:t> = <nat:2> * <var:N> ^ <nat:4> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:H> = <var:N> /\ <var:r1> = <nat:6> * <var:N> /\ <var:r2> = <nat:7> * <var:N> ^ <nat:2> /\ <var:r0> = <nat:4> /\ <var:t> = <nat:2> * <var:N> ^ <nat:4> + <nat:8> * <var:N> ^ <nat:3> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:H> = <var:N> /\ <var:r1> = <nat:6> * <var:N> /\ <var:r0> = <nat:4> /\ <var:t> = <nat:2> * <var:N> ^ <nat:4> + <nat:8> * <var:N> ^ <nat:3> + <nat:7> * <var:N> ^ <nat:2> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:H> = <var:N> /\ <var:r0> = <nat:4> /\ <var:t> = <nat:2> * <var:N> ^ <nat:4> + <nat:8> * <var:N> ^ <nat:3> + <nat:7> * <var:N> ^ <nat:2> + <nat:6> * <var:N> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:H> = <var:N> /\ <var:t> = <nat:2> * <var:N> ^ <nat:4> + <nat:8> * <var:N> ^ <nat:3> + <nat:7> * <var:N> ^ <nat:2> + <nat:6> * <var:N> + <nat:4> ) ) %assertion ) . all : eapply hoare_consequence_pre ; try ( apply hoare_asgn || assn_auto'' ) . Qed . 