\begin{document} \begin{theorem} Take the following list of commands as follows \begin{verbatim} <var:y> := <nat:4> ; <var:y> := <nat:3> + <var:y> * <var:S> \end{verbatim} Allow that we have $ <var:S> = <var:V> $ given all positive integer coefficients $ <var:V> $ ahead of interpreting the list of commands , it holds that we see $ <var:y> = <nat:4> \times <var:V> + <nat:3> $ . \end{theorem} \begin{proof} Proving correctness for the series of commands can be demonstrated by the below decorated series of instructions . \begin{eqnarray} \{ <var:S> = <var:V> \} \\ <var:y> := <nat:4> ; \\ \{ <var:S> = <var:V> \land <var:y> = <nat:4> \} \\ <var:y> := <nat:3> + <var:y> * <var:S> \\ \{ <var:S> = <var:V> \land <var:y> = <nat:4> \cdot <var:V> + <nat:3> \} \end{eqnarray} Utilizing Hoare techniques accomplishes the argument . \end{proof} \end{document} 
~
Require Import String . From PLF Require Import Imp . From PLF Require Import Hoare . Theorem <genH:poly_code_correct> : forall <var:V> : nat , {{ <var:S> = <var:V> }} <var:y> := <nat:4> ; <var:y> := <nat:3> + <var:y> * <var:S> {{ <var:y> = <nat:4> * <var:V> + <nat:3> }} . Proof . intros . apply hoare_seq with ( Q := ( ( <var:S> = <var:V> /\ <var:y> = <nat:4> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:S> = <var:V> /\ <var:y> = <nat:4> * <var:V> + <nat:3> ) ) %assertion ) . all : eapply hoare_consequence_pre ; try ( apply hoare_asgn || assn_auto'' ) . Qed . 