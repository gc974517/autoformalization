\begin{document} \begin{theorem} We define the following list of commands as \begin{verbatim} <var:B0> := <nat:6> ; <var:B2> := <nat:8> ; <var:B2> := <var:B2> * <var:S> ; <var:B2> := <var:B2> * <var:S> ; <var:N> := <var:B2> ; <var:N> := <var:N> + <var:B0> \end{verbatim} Given ( for every $ <var:q> \in \mathbb{Z}^+ $ ) it to be that $ <var:S> = <var:q> $ ahead of evaluating this list of instructions , it must be that we see $ <var:N> = <nat:8> * <var:q> ^ <nat:2> + <nat:6> $ . \end{theorem} \begin{proof} Demonstrating correctness of our series of instructions can be given by usual Hoare logic . Moving forward , the assignment statement \verb | <var:B0> := <nat:6> ; | . This transfers $ \{ <var:S> = <var:q> \} $ to $ \{ <var:S> = <var:q> \land <var:B0> = <nat:6> \} $ . This is deduced through the assignment scheme given by Hoare logic . Moving forward to the next statement found in the list of commands , we have the binding command defining $ <nat:8> $ as $ <var:B2>$ . This statement redefines the precondition $ \{ <var:S> = <var:q> \land <var:B0> = <nat:6> \} $ to the postcondition $ \{ <var:S> = <var:q> \land <var:B0> = <nat:6> \land <var:B2> = <nat:8> \} $ . Looking at the upcoming line in the set of commands , we see the variable assignmet line \verb | <var:B2> := <var:B2> * <var:S> ; | . This redefines $ \{ <var:S> = <var:q> \land <var:B0> = <nat:6> \land <var:B2> = <nat:8> \} $ into the postcondition $ \{ <var:S> = <var:q> \land <var:B0> = <nat:6> \land <var:B2> = <nat:8> \cdot <var:q> \} $ . Advancing , we have the variable binding command binding $ <var:B2> * <var:S> $ toward $ <var:B2>$ . This takes the condition $ \{ <var:S> = <var:q> \land <var:B0> = <nat:6> \land <var:B2> = <nat:8> \cdot <var:q> \} $ toward $ \{ <var:S> = <var:q> \land <var:B0> = <nat:6> \land <var:B2> = <nat:8> \cdot <var:q> ^ <nat:2> \} $ . This is known to be sound using the assignment scheme of standard Hoare reasoning . Moving on to the next command seen in the code , we see the binding line \verb | <var:N> := <var:B2> ; | . This redefines the precondition $ \{ <var:S> = <var:q> \land <var:B0> = <nat:6> \land <var:B2> = <nat:8> \cdot <var:q> ^ <nat:2> \} $ into $ \{ <var:S> = <var:q> \land <var:B0> = <nat:6> \land <var:N> = <nat:8> \cdot <var:q> ^ <nat:2> \} $ . Paying attention to the proceeding line in the series of commands , we have the environment update statement defining $ <var:N> + <var:B0$ as $ <var:N>$ . This forwards the precondition $ \{ <var:S> = <var:q> \land <var:B0> = <nat:6> \land <var:N> = <nat:8> \cdot <var:q> ^ <nat:2> \} $ toward the postcondition $ \{ <var:S> = <var:q> \land <var:N> = <nat:8> \cdot <var:q> ^ <nat:2> + <nat:6> \} $ . \end{proof} \end{document} 
~
Require Import String . From PLF Require Import Imp . From PLF Require Import Hoare . Definition <var:B0> : string := " <var:B0> " . Definition <var:B2> : string := " <var:B2> " . Theorem <genH:poly_code_correct> : forall <var:q> : nat , {{ <var:S> = <var:q> }} <var:B0> := <nat:6> ; <var:B2> := <nat:8> ; <var:B2> := <var:B2> * <var:S> ; <var:B2> := <var:B2> * <var:S> ; <var:N> := <var:B2> ; <var:N> := <var:N> + <var:B0> {{ <var:N> = <nat:8> * <var:q> ^ <nat:2> + <nat:6> }} . Proof . intros . apply hoare_seq with ( Q := ( ( <var:S> = <var:q> /\ <var:B0> = <nat:6> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:S> = <var:q> /\ <var:B0> = <nat:6> /\ <var:B2> = <nat:8> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:S> = <var:q> /\ <var:B0> = <nat:6> /\ <var:B2> = <nat:8> * <var:q> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:S> = <var:q> /\ <var:B0> = <nat:6> /\ <var:B2> = <nat:8> * <var:q> ^ <nat:2> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:S> = <var:q> /\ <var:B0> = <nat:6> /\ <var:N> = <nat:8> * <var:q> ^ <nat:2> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:S> = <var:q> /\ <var:N> = <nat:8> * <var:q> ^ <nat:2> + <nat:6> ) ) %assertion ) . all : eapply hoare_consequence_pre ; try ( apply hoare_asgn || assn_auto'' ) . Qed . 