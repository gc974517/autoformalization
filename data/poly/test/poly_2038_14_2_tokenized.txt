\begin{document} \begin{theorem} Take the following list of commands as \begin{verbatim} <var:l> := <nat:3> ; <var:l> := <nat:4> + <var:l> * <var:r> ; <var:l> := <nat:3> + <var:l> * <var:r> ; <var:l> := <nat:1> + <var:l> * <var:r> ; <var:l> := <var:l> * <var:r> ; <var:l> := <nat:3> + <var:l> * <var:r> ; <var:l> := <nat:4> + <var:l> * <var:r> ; <var:l> := <nat:4> + <var:l> * <var:r> ; <var:l> := <nat:2> + <var:l> * <var:r> ; <var:l> := <nat:1> + <var:l> * <var:r> ; <var:l> := <var:l> * <var:r> ; <var:l> := <var:l> * <var:r> ; <var:l> := <nat:2> + <var:l> * <var:r> ; <var:l> := <nat:3> + <var:l> * <var:r> \end{verbatim} Given it to be that $ <var:r> = <var:i> $ ( for some integers $ <var:i> $ ) before running the list of instructions , it follows that $ <var:l> = <nat:3> * <var:i> ^ <nat:13> + <nat:4> * <var:i> ^ <nat:12> + <nat:3> * <var:i> ^ <nat:11> + <nat:1> * <var:i> ^ <nat:10> + <nat:3> * <var:i> ^ <nat:8> + <nat:4> * <var:i> ^ <nat:7> + <nat:4> * <var:i> ^ <nat:6> + <nat:2> * <var:i> ^ <nat:5> + <nat:1> * <var:i> ^ <nat:4> + <nat:2> * <var:i> + <nat:3> $ . \end{theorem} \begin{proof} Arguing the correctness of this series of instructions can be given with usual Hoare techniques . Immediately after , we have \begin{eqnarray} \{ <var:r> = <var:i> \} \, <var:l> := <nat:3> \, \{ <var:r> = <var:i> \land <var:l> = <nat:3> \} \\ \{ <var:r> = <var:i> \land <var:l> = <nat:3> \} \, <var:l> := <nat:4> + <var:l> * <var:r> \, \{ <var:r> = <var:i> \land <var:l> = <nat:3> \cdot <var:i> + <nat:4> \} \\ \{ <var:r> = <var:i> \land <var:l> = <nat:3> \cdot <var:i> + <nat:4> \} \, <var:l> := <nat:3> + <var:l> * <var:r> \, \{ <var:r> = <var:i> \land <var:l> = <nat:3> \cdot <var:i> ^ <nat:2> + <nat:4> \cdot <var:i> + <nat:3> \} \\ \{ <var:r> = <var:i> \land <var:l> = <nat:3> \cdot <var:i> ^ <nat:2> + <nat:4> \cdot <var:i> + <nat:3> \} \, <var:l> := <nat:1> + <var:l> * <var:r> \, \{ <var:r> = <var:i> \land <var:l> = <nat:3> \cdot <var:i> ^ <nat:3> + <nat:4> \cdot <var:i> ^ <nat:2> + <nat:3> \cdot <var:i> + <nat:1> \} \\ \{ <var:r> = <var:i> \land <var:l> = <nat:3> \cdot <var:i> ^ <nat:3> + <nat:4> \cdot <var:i> ^ <nat:2> + <nat:3> \cdot <var:i> + <nat:1> \} \, <var:l> := <var:l> * <var:r> \, \{ <var:r> = <var:i> \land <var:l> = <nat:3> \cdot <var:i> ^ <nat:4> + <nat:4> \cdot <var:i> ^ <nat:3> + <nat:3> \cdot <var:i> ^ <nat:2> + <nat:1> \cdot <var:i> + \} \\ \{ <var:r> = <var:i> \land <var:l> = <nat:3> \cdot <var:i> ^ <nat:4> + <nat:4> \cdot <var:i> ^ <nat:3> + <nat:3> \cdot <var:i> ^ <nat:2> + <nat:1> \cdot <var:i> + \} \, <var:l> := <nat:3> + <var:l> * <var:r> \, \{ <var:r> = <var:i> \land <var:l> = <nat:3> \cdot <var:i> ^ <nat:5> + <nat:4> \cdot <var:i> ^ <nat:4> + <nat:3> \cdot <var:i> ^ <nat:3> + <nat:1> \cdot <var:i> ^ <nat:2> + <nat:3> \} \\ \{ <var:r> = <var:i> \land <var:l> = <nat:3> \cdot <var:i> ^ <nat:5> + <nat:4> \cdot <var:i> ^ <nat:4> + <nat:3> \cdot <var:i> ^ <nat:3> + <nat:1> \cdot <var:i> ^ <nat:2> + <nat:3> \} \, <var:l> := <nat:4> + <var:l> * <var:r> \, \{ <var:r> = <var:i> \land <var:l> = <nat:3> \cdot <var:i> ^ <nat:6> + <nat:4> \cdot <var:i> ^ <nat:5> + <nat:3> \cdot <var:i> ^ <nat:4> + <nat:1> \cdot <var:i> ^ <nat:3> + <nat:3> \cdot <var:i> + <nat:4> \} \\ \{ <var:r> = <var:i> \land <var:l> = <nat:3> \cdot <var:i> ^ <nat:6> + <nat:4> \cdot <var:i> ^ <nat:5> + <nat:3> \cdot <var:i> ^ <nat:4> + <nat:1> \cdot <var:i> ^ <nat:3> + <nat:3> \cdot <var:i> + <nat:4> \} \, <var:l> := <nat:4> + <var:l> * <var:r> \, \{ <var:r> = <var:i> \land <var:l> = <nat:3> \cdot <var:i> ^ <nat:7> + <nat:4> \cdot <var:i> ^ <nat:6> + <nat:3> \cdot <var:i> ^ <nat:5> + <nat:1> \cdot <var:i> ^ <nat:4> + <nat:3> \cdot <var:i> ^ <nat:2> + <nat:4> \cdot <var:i> + <nat:4> \} \\ \{ <var:r> = <var:i> \land <var:l> = <nat:3> \cdot <var:i> ^ <nat:7> + <nat:4> \cdot <var:i> ^ <nat:6> + <nat:3> \cdot <var:i> ^ <nat:5> + <nat:1> \cdot <var:i> ^ <nat:4> + <nat:3> \cdot <var:i> ^ <nat:2> + <nat:4> \cdot <var:i> + <nat:4> \} \, <var:l> := <nat:2> + <var:l> * <var:r> \, \{ <var:r> = <var:i> \land <var:l> = <nat:3> \cdot <var:i> ^ <nat:8> + <nat:4> \cdot <var:i> ^ <nat:7> + <nat:3> \cdot <var:i> ^ <nat:6> + <nat:1> \cdot <var:i> ^ <nat:5> + <nat:3> \cdot <var:i> ^ <nat:3> + <nat:4> \cdot <var:i> ^ <nat:2> + <nat:4> \cdot <var:i> + <nat:2> \} \\ \{ <var:r> = <var:i> \land <var:l> = <nat:3> \cdot <var:i> ^ <nat:8> + <nat:4> \cdot <var:i> ^ <nat:7> + <nat:3> \cdot <var:i> ^ <nat:6> + <nat:1> \cdot <var:i> ^ <nat:5> + <nat:3> \cdot <var:i> ^ <nat:3> + <nat:4> \cdot <var:i> ^ <nat:2> + <nat:4> \cdot <var:i> + <nat:2> \} \, <var:l> := <nat:1> + <var:l> * <var:r> \, \{ <var:r> = <var:i> \land <var:l> = <nat:3> \cdot <var:i> ^ <nat:9> + <nat:4> \cdot <var:i> ^ <nat:8> + <nat:3> \cdot <var:i> ^ <nat:7> + <nat:1> \cdot <var:i> ^ <nat:6> + <nat:3> \cdot <var:i> ^ <nat:4> + <nat:4> \cdot <var:i> ^ <nat:3> + <nat:4> \cdot <var:i> ^ <nat:2> + <nat:2> \cdot <var:i> + <nat:1> \} \\ \{ <var:r> = <var:i> \land <var:l> = <nat:3> \cdot <var:i> ^ <nat:9> + <nat:4> \cdot <var:i> ^ <nat:8> + <nat:3> \cdot <var:i> ^ <nat:7> + <nat:1> \cdot <var:i> ^ <nat:6> + <nat:3> \cdot <var:i> ^ <nat:4> + <nat:4> \cdot <var:i> ^ <nat:3> + <nat:4> \cdot <var:i> ^ <nat:2> + <nat:2> \cdot <var:i> + <nat:1> \} \, <var:l> := <var:l> * <var:r> \, \{ <var:r> = <var:i> \land <var:l> = <nat:3> \cdot <var:i> ^ <nat:10> + <nat:4> \cdot <var:i> ^ <nat:9> + <nat:3> \cdot <var:i> ^ <nat:8> + <nat:1> \cdot <var:i> ^ <nat:7> + <nat:3> \cdot <var:i> ^ <nat:5> + <nat:4> \cdot <var:i> ^ <nat:4> + <nat:4> \cdot <var:i> ^ <nat:3> + <nat:2> \cdot <var:i> ^ <nat:2> + <nat:1> \cdot <var:i> + \} \\ \{ <var:r> = <var:i> \land <var:l> = <nat:3> \cdot <var:i> ^ <nat:10> + <nat:4> \cdot <var:i> ^ <nat:9> + <nat:3> \cdot <var:i> ^ <nat:8> + <nat:1> \cdot <var:i> ^ <nat:7> + <nat:3> \cdot <var:i> ^ <nat:5> + <nat:4> \cdot <var:i> ^ <nat:4> + <nat:4> \cdot <var:i> ^ <nat:3> + <nat:2> \cdot <var:i> ^ <nat:2> + <nat:1> \cdot <var:i> + \} \, <var:l> := <var:l> * <var:r> \, \{ <var:r> = <var:i> \land <var:l> = <nat:3> \cdot <var:i> ^ <nat:11> + <nat:4> \cdot <var:i> ^ <nat:10> + <nat:3> \cdot <var:i> ^ <nat:9> + <nat:1> \cdot <var:i> ^ <nat:8> + <nat:3> \cdot <var:i> ^ <nat:6> + <nat:4> \cdot <var:i> ^ <nat:5> + <nat:4> \cdot <var:i> ^ <nat:4> + <nat:2> \cdot <var:i> ^ <nat:3> + <nat:1> \cdot <var:i> ^ <nat:2> + \} \end{eqnarray} Honing in on the proceeding line found in the program , we see \begin{eqnarray} \{ <var:r> = <var:i> \} \, <var:l> := <nat:3> \, \{ <var:r> = <var:i> \land <var:l> = <nat:3> \} \end{eqnarray} This is ensured using the variable update scheme defined by standard Hoare techniques . Moving on to the subsequent command found in our segment of code , \begin{eqnarray} \{ <var:r> = <var:i> \} \, <var:l> := <nat:3> \, \{ <var:r> = <var:i> \land <var:l> = <nat:3> \} \end{eqnarray} \end{proof} \end{document} 
~
Require Import String . From PLF Require Import Imp . From PLF Require Import Hoare . Theorem <genH:poly_code_correct> : forall <var:i> : nat , {{ <var:r> = <var:i> }} <var:l> := <nat:3> ; <var:l> := <nat:4> + <var:l> * <var:r> ; <var:l> := <nat:3> + <var:l> * <var:r> ; <var:l> := <nat:1> + <var:l> * <var:r> ; <var:l> := <var:l> * <var:r> ; <var:l> := <nat:3> + <var:l> * <var:r> ; <var:l> := <nat:4> + <var:l> * <var:r> ; <var:l> := <nat:4> + <var:l> * <var:r> ; <var:l> := <nat:2> + <var:l> * <var:r> ; <var:l> := <nat:1> + <var:l> * <var:r> ; <var:l> := <var:l> * <var:r> ; <var:l> := <var:l> * <var:r> ; <var:l> := <nat:2> + <var:l> * <var:r> ; <var:l> := <nat:3> + <var:l> * <var:r> {{ <var:l> = <nat:3> * <var:i> ^ <nat:13> + <nat:4> * <var:i> ^ <nat:12> + <nat:3> * <var:i> ^ <nat:11> + <nat:1> * <var:i> ^ <nat:10> + <nat:3> * <var:i> ^ <nat:8> + <nat:4> * <var:i> ^ <nat:7> + <nat:4> * <var:i> ^ <nat:6> + <nat:2> * <var:i> ^ <nat:5> + <nat:1> * <var:i> ^ <nat:4> + <nat:2> * <var:i> + <nat:3> }} . Proof . intros . apply hoare_seq with ( Q := ( ( <var:r> = <var:i> /\ <var:l> = <nat:3> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:r> = <var:i> /\ <var:l> = <nat:3> * <var:i> + <nat:4> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:r> = <var:i> /\ <var:l> = <nat:3> * <var:i> ^ <nat:2> + <nat:4> * <var:i> + <nat:3> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:r> = <var:i> /\ <var:l> = <nat:3> * <var:i> ^ <nat:3> + <nat:4> * <var:i> ^ <nat:2> + <nat:3> * <var:i> + <nat:1> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:r> = <var:i> /\ <var:l> = <nat:3> * <var:i> ^ <nat:4> + <nat:4> * <var:i> ^ <nat:3> + <nat:3> * <var:i> ^ <nat:2> + <nat:1> * <var:i> + ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:r> = <var:i> /\ <var:l> = <nat:3> * <var:i> ^ <nat:5> + <nat:4> * <var:i> ^ <nat:4> + <nat:3> * <var:i> ^ <nat:3> + <nat:1> * <var:i> ^ <nat:2> + <nat:3> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:r> = <var:i> /\ <var:l> = <nat:3> * <var:i> ^ <nat:6> + <nat:4> * <var:i> ^ <nat:5> + <nat:3> * <var:i> ^ <nat:4> + <nat:1> * <var:i> ^ <nat:3> + <nat:3> * <var:i> + <nat:4> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:r> = <var:i> /\ <var:l> = <nat:3> * <var:i> ^ <nat:7> + <nat:4> * <var:i> ^ <nat:6> + <nat:3> * <var:i> ^ <nat:5> + <nat:1> * <var:i> ^ <nat:4> + <nat:3> * <var:i> ^ <nat:2> + <nat:4> * <var:i> + <nat:4> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:r> = <var:i> /\ <var:l> = <nat:3> * <var:i> ^ <nat:8> + <nat:4> * <var:i> ^ <nat:7> + <nat:3> * <var:i> ^ <nat:6> + <nat:1> * <var:i> ^ <nat:5> + <nat:3> * <var:i> ^ <nat:3> + <nat:4> * <var:i> ^ <nat:2> + <nat:4> * <var:i> + <nat:2> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:r> = <var:i> /\ <var:l> = <nat:3> * <var:i> ^ <nat:9> + <nat:4> * <var:i> ^ <nat:8> + <nat:3> * <var:i> ^ <nat:7> + <nat:1> * <var:i> ^ <nat:6> + <nat:3> * <var:i> ^ <nat:4> + <nat:4> * <var:i> ^ <nat:3> + <nat:4> * <var:i> ^ <nat:2> + <nat:2> * <var:i> + <nat:1> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:r> = <var:i> /\ <var:l> = <nat:3> * <var:i> ^ <nat:10> + <nat:4> * <var:i> ^ <nat:9> + <nat:3> * <var:i> ^ <nat:8> + <nat:1> * <var:i> ^ <nat:7> + <nat:3> * <var:i> ^ <nat:5> + <nat:4> * <var:i> ^ <nat:4> + <nat:4> * <var:i> ^ <nat:3> + <nat:2> * <var:i> ^ <nat:2> + <nat:1> * <var:i> + ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:r> = <var:i> /\ <var:l> = <nat:3> * <var:i> ^ <nat:11> + <nat:4> * <var:i> ^ <nat:10> + <nat:3> * <var:i> ^ <nat:9> + <nat:1> * <var:i> ^ <nat:8> + <nat:3> * <var:i> ^ <nat:6> + <nat:4> * <var:i> ^ <nat:5> + <nat:4> * <var:i> ^ <nat:4> + <nat:2> * <var:i> ^ <nat:3> + <nat:1> * <var:i> ^ <nat:2> + ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:r> = <var:i> /\ <var:l> = <nat:3> * <var:i> ^ <nat:12> + <nat:4> * <var:i> ^ <nat:11> + <nat:3> * <var:i> ^ <nat:10> + <nat:1> * <var:i> ^ <nat:9> + <nat:3> * <var:i> ^ <nat:7> + <nat:4> * <var:i> ^ <nat:6> + <nat:4> * <var:i> ^ <nat:5> + <nat:2> * <var:i> ^ <nat:4> + <nat:1> * <var:i> ^ <nat:3> + <nat:2> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:r> = <var:i> /\ <var:l> = <nat:3> * <var:i> ^ <nat:13> + <nat:4> * <var:i> ^ <nat:12> + <nat:3> * <var:i> ^ <nat:11> + <nat:1> * <var:i> ^ <nat:10> + <nat:3> * <var:i> ^ <nat:8> + <nat:4> * <var:i> ^ <nat:7> + <nat:4> * <var:i> ^ <nat:6> + <nat:2> * <var:i> ^ <nat:5> + <nat:1> * <var:i> ^ <nat:4> + <nat:2> * <var:i> + <nat:3> ) ) %assertion ) . all : eapply hoare_consequence_pre ; try ( apply hoare_asgn || assn_auto'' ) . Qed . 