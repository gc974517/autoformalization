\begin{document} \begin{theorem} We define a series of commands as \begin{verbatim} <var:c> := <nat:3> ; <var:c> := <nat:1> + <var:c> * <var:j> ; <var:c> := <nat:2> + <var:c> * <var:j> ; <var:c> := <nat:1> + <var:c> * <var:j> ; <var:c> := <nat:2> + <var:c> * <var:j> ; <var:c> := <nat:3> + <var:c> * <var:j> ; <var:c> := <nat:2> + <var:c> * <var:j> ; <var:c> := <var:c> * <var:j> ; <var:c> := <nat:2> + <var:c> * <var:j> ; <var:c> := <nat:4> + <var:c> * <var:j> ; <var:c> := <nat:1> + <var:c> * <var:j> ; <var:c> := <nat:4> + <var:c> * <var:j> \end{verbatim} Allowing it to hold that $ <var:j> = <var:T> $ before the execution of our code , it must be that we have $ <var:c> = <nat:3> * <var:T> ^ <nat:11> + <nat:1> * <var:T> ^ <nat:10> + <nat:2> * <var:T> ^ <nat:9> + <nat:1> * <var:T> ^ <nat:8> + <nat:2> * <var:T> ^ <nat:7> + <nat:3> * <var:T> ^ <nat:6> + <nat:2> * <var:T> ^ <nat:5> + <nat:2> * <var:T> ^ <nat:3> + <nat:4> * <var:T> ^ <nat:2> + <nat:1> * <var:T> + <nat:4> $ . \end{theorem} \begin{proof} \begin{eqnarray} \{ <var:j> = <var:T> \} \\ <var:c> := <nat:3> ; \\ \{ <var:j> = <var:T> \land <var:c> = <nat:3> \} \\ <var:c> := <nat:1> + <var:c> * <var:j> ; \\ \{ <var:j> = <var:T> \land <var:c> = <nat:3> \cdot <var:T> + <nat:1> \} \\ <var:c> := <nat:2> + <var:c> * <var:j> ; \\ \{ <var:j> = <var:T> \land <var:c> = <nat:3> \cdot <var:T> ^ <nat:2> + <nat:1> \cdot <var:T> + <nat:2> \} \\ <var:c> := <nat:1> + <var:c> * <var:j> ; \\ \{ <var:j> = <var:T> \land <var:c> = <nat:3> \cdot <var:T> ^ <nat:3> + <nat:1> \cdot <var:T> ^ <nat:2> + <nat:2> \cdot <var:T> + <nat:1> \} \\ <var:c> := <nat:2> + <var:c> * <var:j> ; \\ \{ <var:j> = <var:T> \land <var:c> = <nat:3> \cdot <var:T> ^ <nat:4> + <nat:1> \cdot <var:T> ^ <nat:3> + <nat:2> \cdot <var:T> ^ <nat:2> + <nat:1> \cdot <var:T> + <nat:2> \} \\ <var:c> := <nat:3> + <var:c> * <var:j> ; \\ \{ <var:j> = <var:T> \land <var:c> = <nat:3> \cdot <var:T> ^ <nat:5> + <nat:1> \cdot <var:T> ^ <nat:4> + <nat:2> \cdot <var:T> ^ <nat:3> + <nat:1> \cdot <var:T> ^ <nat:2> + <nat:2> \cdot <var:T> + <nat:3> \} \\ <var:c> := <nat:2> + <var:c> * <var:j> ; \\ \{ <var:j> = <var:T> \land <var:c> = <nat:3> \cdot <var:T> ^ <nat:6> + <nat:1> \cdot <var:T> ^ <nat:5> + <nat:2> \cdot <var:T> ^ <nat:4> + <nat:1> \cdot <var:T> ^ <nat:3> + <nat:2> \cdot <var:T> ^ <nat:2> + <nat:3> \cdot <var:T> + <nat:2> \} \\ <var:c> := <var:c> * <var:j> ; \\ \{ <var:j> = <var:T> \land <var:c> = <nat:3> \cdot <var:T> ^ <nat:7> + <nat:1> \cdot <var:T> ^ <nat:6> + <nat:2> \cdot <var:T> ^ <nat:5> + <nat:1> \cdot <var:T> ^ <nat:4> + <nat:2> \cdot <var:T> ^ <nat:3> + <nat:3> \cdot <var:T> ^ <nat:2> + <nat:2> \cdot <var:T> + \} \\ <var:c> := <nat:2> + <var:c> * <var:j> ; \\ \{ <var:j> = <var:T> \land <var:c> = <nat:3> \cdot <var:T> ^ <nat:8> + <nat:1> \cdot <var:T> ^ <nat:7> + <nat:2> \cdot <var:T> ^ <nat:6> + <nat:1> \cdot <var:T> ^ <nat:5> + <nat:2> \cdot <var:T> ^ <nat:4> + <nat:3> \cdot <var:T> ^ <nat:3> + <nat:2> \cdot <var:T> ^ <nat:2> + <nat:2> \} \\ <var:c> := <nat:4> + <var:c> * <var:j> ; \\ \{ <var:j> = <var:T> \land <var:c> = <nat:3> \cdot <var:T> ^ <nat:9> + <nat:1> \cdot <var:T> ^ <nat:8> + <nat:2> \cdot <var:T> ^ <nat:7> + <nat:1> \cdot <var:T> ^ <nat:6> + <nat:2> \cdot <var:T> ^ <nat:5> + <nat:3> \cdot <var:T> ^ <nat:4> + <nat:2> \cdot <var:T> ^ <nat:3> + <nat:2> \cdot <var:T> + <nat:4> \} \\ <var:c> := <nat:1> + <var:c> * <var:j> ; \\ \{ <var:j> = <var:T> \land <var:c> = <nat:3> \cdot <var:T> ^ <nat:10> + <nat:1> \cdot <var:T> ^ <nat:9> + <nat:2> \cdot <var:T> ^ <nat:8> + <nat:1> \cdot <var:T> ^ <nat:7> + <nat:2> \cdot <var:T> ^ <nat:6> + <nat:3> \cdot <var:T> ^ <nat:5> + <nat:2> \cdot <var:T> ^ <nat:4> + <nat:2> \cdot <var:T> ^ <nat:2> + <nat:4> \cdot <var:T> + <nat:1> \} \\ <var:c> := <nat:4> + <var:c> * <var:j> \\ \{ <var:j> = <var:T> \land <var:c> = <nat:3> \cdot <var:T> ^ <nat:11> + <nat:1> \cdot <var:T> ^ <nat:10> + <nat:2> \cdot <var:T> ^ <nat:9> + <nat:1> \cdot <var:T> ^ <nat:8> + <nat:2> \cdot <var:T> ^ <nat:7> + <nat:3> \cdot <var:T> ^ <nat:6> + <nat:2> \cdot <var:T> ^ <nat:5> + <nat:2> \cdot <var:T> ^ <nat:3> + <nat:4> \cdot <var:T> ^ <nat:2> + <nat:1> \cdot <var:T> + <nat:4> \} \end{eqnarray} Using standard Hoare reasoning completes the goal . \end{proof} \end{document} 
~
Require Import String . From PLF Require Import Imp . From PLF Require Import Hoare . Theorem <genH:poly_code_correct> : forall <var:T> : nat , {{ <var:j> = <var:T> }} <var:c> := <nat:3> ; <var:c> := <nat:1> + <var:c> * <var:j> ; <var:c> := <nat:2> + <var:c> * <var:j> ; <var:c> := <nat:1> + <var:c> * <var:j> ; <var:c> := <nat:2> + <var:c> * <var:j> ; <var:c> := <nat:3> + <var:c> * <var:j> ; <var:c> := <nat:2> + <var:c> * <var:j> ; <var:c> := <var:c> * <var:j> ; <var:c> := <nat:2> + <var:c> * <var:j> ; <var:c> := <nat:4> + <var:c> * <var:j> ; <var:c> := <nat:1> + <var:c> * <var:j> ; <var:c> := <nat:4> + <var:c> * <var:j> {{ <var:c> = <nat:3> * <var:T> ^ <nat:11> + <nat:1> * <var:T> ^ <nat:10> + <nat:2> * <var:T> ^ <nat:9> + <nat:1> * <var:T> ^ <nat:8> + <nat:2> * <var:T> ^ <nat:7> + <nat:3> * <var:T> ^ <nat:6> + <nat:2> * <var:T> ^ <nat:5> + <nat:2> * <var:T> ^ <nat:3> + <nat:4> * <var:T> ^ <nat:2> + <nat:1> * <var:T> + <nat:4> }} . Proof . intros . apply hoare_seq with ( Q := ( ( <var:j> = <var:T> /\ <var:c> = <nat:3> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:j> = <var:T> /\ <var:c> = <nat:3> * <var:T> + <nat:1> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:j> = <var:T> /\ <var:c> = <nat:3> * <var:T> ^ <nat:2> + <nat:1> * <var:T> + <nat:2> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:j> = <var:T> /\ <var:c> = <nat:3> * <var:T> ^ <nat:3> + <nat:1> * <var:T> ^ <nat:2> + <nat:2> * <var:T> + <nat:1> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:j> = <var:T> /\ <var:c> = <nat:3> * <var:T> ^ <nat:4> + <nat:1> * <var:T> ^ <nat:3> + <nat:2> * <var:T> ^ <nat:2> + <nat:1> * <var:T> + <nat:2> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:j> = <var:T> /\ <var:c> = <nat:3> * <var:T> ^ <nat:5> + <nat:1> * <var:T> ^ <nat:4> + <nat:2> * <var:T> ^ <nat:3> + <nat:1> * <var:T> ^ <nat:2> + <nat:2> * <var:T> + <nat:3> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:j> = <var:T> /\ <var:c> = <nat:3> * <var:T> ^ <nat:6> + <nat:1> * <var:T> ^ <nat:5> + <nat:2> * <var:T> ^ <nat:4> + <nat:1> * <var:T> ^ <nat:3> + <nat:2> * <var:T> ^ <nat:2> + <nat:3> * <var:T> + <nat:2> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:j> = <var:T> /\ <var:c> = <nat:3> * <var:T> ^ <nat:7> + <nat:1> * <var:T> ^ <nat:6> + <nat:2> * <var:T> ^ <nat:5> + <nat:1> * <var:T> ^ <nat:4> + <nat:2> * <var:T> ^ <nat:3> + <nat:3> * <var:T> ^ <nat:2> + <nat:2> * <var:T> + ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:j> = <var:T> /\ <var:c> = <nat:3> * <var:T> ^ <nat:8> + <nat:1> * <var:T> ^ <nat:7> + <nat:2> * <var:T> ^ <nat:6> + <nat:1> * <var:T> ^ <nat:5> + <nat:2> * <var:T> ^ <nat:4> + <nat:3> * <var:T> ^ <nat:3> + <nat:2> * <var:T> ^ <nat:2> + <nat:2> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:j> = <var:T> /\ <var:c> = <nat:3> * <var:T> ^ <nat:9> + <nat:1> * <var:T> ^ <nat:8> + <nat:2> * <var:T> ^ <nat:7> + <nat:1> * <var:T> ^ <nat:6> + <nat:2> * <var:T> ^ <nat:5> + <nat:3> * <var:T> ^ <nat:4> + <nat:2> * <var:T> ^ <nat:3> + <nat:2> * <var:T> + <nat:4> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:j> = <var:T> /\ <var:c> = <nat:3> * <var:T> ^ <nat:10> + <nat:1> * <var:T> ^ <nat:9> + <nat:2> * <var:T> ^ <nat:8> + <nat:1> * <var:T> ^ <nat:7> + <nat:2> * <var:T> ^ <nat:6> + <nat:3> * <var:T> ^ <nat:5> + <nat:2> * <var:T> ^ <nat:4> + <nat:2> * <var:T> ^ <nat:2> + <nat:4> * <var:T> + <nat:1> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:j> = <var:T> /\ <var:c> = <nat:3> * <var:T> ^ <nat:11> + <nat:1> * <var:T> ^ <nat:10> + <nat:2> * <var:T> ^ <nat:9> + <nat:1> * <var:T> ^ <nat:8> + <nat:2> * <var:T> ^ <nat:7> + <nat:3> * <var:T> ^ <nat:6> + <nat:2> * <var:T> ^ <nat:5> + <nat:2> * <var:T> ^ <nat:3> + <nat:4> * <var:T> ^ <nat:2> + <nat:1> * <var:T> + <nat:4> ) ) %assertion ) . all : eapply hoare_consequence_pre ; try ( apply hoare_asgn || assn_auto'' ) . Qed . 