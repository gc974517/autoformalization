\begin{document} \begin{definition} Let the following set of instructions <def:poly> in \emph{Imp} as \begin{verbatim} <var:w0> := <nat:2> ; <var:y> := <var:w0> \end{verbatim} \end{definition} \begin{theorem} Allow it to hold that $ <var:s> = <var:G> $ prior to running the set of commands , it holds that $ <var:y> = <nat:2> $ . \end{theorem} \begin{proof} Demonstrating correctness of our series of commands can be shown using typical Hoare techniques . Moving on to the subsequent bit of code found in our set of commands , the environment update statement letting $ <nat:2> $ as $ <var:w0>$ . This takes $ \{ <var:s> = <var:G> \} $ into the postcondition $ \{ <var:s> = <var:G> \land <var:w0> = <nat:2> \} $ . Moving onward , we see the variable assignmet statement \verb | <var:y> := <var:w0> | . This line advances the precondition $ \{ <var:s> = <var:G> \land <var:w0> = <nat:2> \} $ toward the postcondition $ \{ <var:s> = <var:G> \land <var:y> = <nat:2> \} $ . \end{proof} \end{document} 
~
Require Import String . From PLF Require Import Imp . From PLF Require Import Hoare . Definition <var:w0> : string := " <var:w0> " . Definition <def:poly> := <var:w0> := <nat:2> ; <var:y> := <var:w0> . Theorem <genH:poly_code_correct> : forall <var:G> : nat , {{ <var:s> = <var:G> }} <def:poly> {{ <var:y> = <nat:2> }} . Proof . intros . apply hoare_seq with ( Q := ( ( <var:s> = <var:G> /\ <var:w0> = <nat:2> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:s> = <var:G> /\ <var:y> = <nat:2> ) ) %assertion ) . all : eapply hoare_consequence_pre ; try ( apply hoare_asgn || assn_auto'' ) . Qed . 