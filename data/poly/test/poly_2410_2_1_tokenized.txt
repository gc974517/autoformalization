\begin{document} \begin{theorem} Let the following segment of code in \emph{Imp} as follows \begin{verbatim} <var:O0> := <nat:9> ; <var:r> := <var:O0> \end{verbatim} Assume , for natural coefficients $ <var:Y> $ , that we have $ <var:m> = <var:Y> $ ahead of interpreting our program , it must be that we see $ <var:r> = <nat:9> $ after code segment terminates . \end{theorem} \begin{proof} Applying usual Hoare techniques gives us : \begin{eqnarray} \{ <var:m> = <var:Y> \} \\ <var:O0> := <nat:9> ; \\ \{ <var:m> = <var:Y> \land <var:O0> = <nat:9> \} \\ <var:r> := <var:O0> \\ \{ <var:m> = <var:Y> \land <var:r> = <nat:9> \} \end{eqnarray} As a consequence , this program has been demonstrated to be correct . \end{proof} \end{document} 
~
Require Import String . From PLF Require Import Imp . From PLF Require Import Hoare . Definition <var:O0> : string := " <var:O0> " . Theorem <genH:poly_code_correct> : forall <var:Y> : nat , {{ <var:m> = <var:Y> }} <var:O0> := <nat:9> ; <var:r> := <var:O0> {{ <var:r> = <nat:9> }} . Proof . intros . apply hoare_seq with ( Q := ( ( <var:m> = <var:Y> /\ <var:O0> = <nat:9> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:m> = <var:Y> /\ <var:r> = <nat:9> ) ) %assertion ) . all : eapply hoare_consequence_pre ; try ( apply hoare_asgn || assn_auto'' ) . Qed . 