\begin{document} \begin{theorem} We define the following set of instructions in \emph{Imp} as follows \begin{verbatim} <var:m> := <nat:1> ; <var:m> := <nat:4> + <var:m> * <var:N> ; <var:m> := <nat:2> + <var:m> * <var:N> ; <var:m> := <nat:2> + <var:m> * <var:N> ; <var:m> := <nat:3> + <var:m> * <var:N> ; <var:m> := <nat:2> + <var:m> * <var:N> ; <var:m> := <nat:4> + <var:m> * <var:N> ; <var:m> := <nat:1> + <var:m> * <var:N> ; <var:m> := <nat:4> + <var:m> * <var:N> ; <var:m> := <nat:1> + <var:m> * <var:N> ; <var:m> := <nat:3> + <var:m> * <var:N> ; <var:m> := <nat:2> + <var:m> * <var:N> ; <var:m> := <nat:1> + <var:m> * <var:N> \end{verbatim} Assume $ <var:N> = <var:u> $ , assuming some positive integers $ <var:u> $ , prior to interpreting this code then we have $ <var:m> = <nat:1> \cdot <var:u> ^ <nat:12> + <nat:4> \cdot <var:u> ^ <nat:11> + <nat:2> \cdot <var:u> ^ <nat:10> + <nat:2> \cdot <var:u> ^ <nat:9> + <nat:3> \cdot <var:u> ^ <nat:8> + <nat:2> \cdot <var:u> ^ <nat:7> + <nat:4> \cdot <var:u> ^ <nat:6> + <nat:1> \cdot <var:u> ^ <nat:5> + <nat:4> \cdot <var:u> ^ <nat:4> + <nat:1> \cdot <var:u> ^ <nat:3> + <nat:3> \cdot <var:u> ^ <nat:2> + <nat:2> \cdot <var:u> + <nat:1> $ . \end{theorem} \begin{proof} Applying Hoare techniques yields : \begin{eqnarray} \{ <var:N> = <var:u> \} \\ <var:m> := <nat:1> ; \\ \{ <var:N> = <var:u> \land <var:m> = <nat:1> \} \end{eqnarray} Continuing the evaluation of the segment of code gives : \begin{eqnarray} <var:m> := <nat:4> + <var:m> * <var:N> ; \\ \{ <var:N> = <var:u> \land <var:m> = <nat:1> \cdot <var:u> + <nat:4> \} \\ <var:m> := <nat:2> + <var:m> * <var:N> ; \\ \{ <var:N> = <var:u> \land <var:m> = <nat:1> \cdot <var:u> ^ <nat:2> + <nat:4> \cdot <var:u> + <nat:2> \} \\ <var:m> := <nat:2> + <var:m> * <var:N> ; \\ \{ <var:N> = <var:u> \land <var:m> = <nat:1> \cdot <var:u> ^ <nat:3> + <nat:4> \cdot <var:u> ^ <nat:2> + <nat:2> \cdot <var:u> + <nat:2> \} \\ <var:m> := <nat:3> + <var:m> * <var:N> ; \\ \{ <var:N> = <var:u> \land <var:m> = <nat:1> \cdot <var:u> ^ <nat:4> + <nat:4> \cdot <var:u> ^ <nat:3> + <nat:2> \cdot <var:u> ^ <nat:2> + <nat:2> \cdot <var:u> + <nat:3> \} \\ <var:m> := <nat:2> + <var:m> * <var:N> ; \\ \{ <var:N> = <var:u> \land <var:m> = <nat:1> \cdot <var:u> ^ <nat:5> + <nat:4> \cdot <var:u> ^ <nat:4> + <nat:2> \cdot <var:u> ^ <nat:3> + <nat:2> \cdot <var:u> ^ <nat:2> + <nat:3> \cdot <var:u> + <nat:2> \} \\ <var:m> := <nat:4> + <var:m> * <var:N> ; \\ \{ <var:N> = <var:u> \land <var:m> = <nat:1> \cdot <var:u> ^ <nat:6> + <nat:4> \cdot <var:u> ^ <nat:5> + <nat:2> \cdot <var:u> ^ <nat:4> + <nat:2> \cdot <var:u> ^ <nat:3> + <nat:3> \cdot <var:u> ^ <nat:2> + <nat:2> \cdot <var:u> + <nat:4> \} \\ <var:m> := <nat:1> + <var:m> * <var:N> ; \\ \{ <var:N> = <var:u> \land <var:m> = <nat:1> \cdot <var:u> ^ <nat:7> + <nat:4> \cdot <var:u> ^ <nat:6> + <nat:2> \cdot <var:u> ^ <nat:5> + <nat:2> \cdot <var:u> ^ <nat:4> + <nat:3> \cdot <var:u> ^ <nat:3> + <nat:2> \cdot <var:u> ^ <nat:2> + <nat:4> \cdot <var:u> + <nat:1> \} \\ <var:m> := <nat:4> + <var:m> * <var:N> ; \\ \{ <var:N> = <var:u> \land <var:m> = <nat:1> \cdot <var:u> ^ <nat:8> + <nat:4> \cdot <var:u> ^ <nat:7> + <nat:2> \cdot <var:u> ^ <nat:6> + <nat:2> \cdot <var:u> ^ <nat:5> + <nat:3> \cdot <var:u> ^ <nat:4> + <nat:2> \cdot <var:u> ^ <nat:3> + <nat:4> \cdot <var:u> ^ <nat:2> + <nat:1> \cdot <var:u> + <nat:4> \} \\ <var:m> := <nat:1> + <var:m> * <var:N> ; \\ \{ <var:N> = <var:u> \land <var:m> = <nat:1> \cdot <var:u> ^ <nat:9> + <nat:4> \cdot <var:u> ^ <nat:8> + <nat:2> \cdot <var:u> ^ <nat:7> + <nat:2> \cdot <var:u> ^ <nat:6> + <nat:3> \cdot <var:u> ^ <nat:5> + <nat:2> \cdot <var:u> ^ <nat:4> + <nat:4> \cdot <var:u> ^ <nat:3> + <nat:1> \cdot <var:u> ^ <nat:2> + <nat:4> \cdot <var:u> + <nat:1> \} \\ <var:m> := <nat:3> + <var:m> * <var:N> ; \\ \{ <var:N> = <var:u> \land <var:m> = <nat:1> \cdot <var:u> ^ <nat:10> + <nat:4> \cdot <var:u> ^ <nat:9> + <nat:2> \cdot <var:u> ^ <nat:8> + <nat:2> \cdot <var:u> ^ <nat:7> + <nat:3> \cdot <var:u> ^ <nat:6> + <nat:2> \cdot <var:u> ^ <nat:5> + <nat:4> \cdot <var:u> ^ <nat:4> + <nat:1> \cdot <var:u> ^ <nat:3> + <nat:4> \cdot <var:u> ^ <nat:2> + <nat:1> \cdot <var:u> + <nat:3> \} \\ <var:m> := <nat:2> + <var:m> * <var:N> ; \\ \{ <var:N> = <var:u> \land <var:m> = <nat:1> \cdot <var:u> ^ <nat:11> + <nat:4> \cdot <var:u> ^ <nat:10> + <nat:2> \cdot <var:u> ^ <nat:9> + <nat:2> \cdot <var:u> ^ <nat:8> + <nat:3> \cdot <var:u> ^ <nat:7> + <nat:2> \cdot <var:u> ^ <nat:6> + <nat:4> \cdot <var:u> ^ <nat:5> + <nat:1> \cdot <var:u> ^ <nat:4> + <nat:4> \cdot <var:u> ^ <nat:3> + <nat:1> \cdot <var:u> ^ <nat:2> + <nat:3> \cdot <var:u> + <nat:2> \} \end{eqnarray} Continuing evaluating our program results in : \begin{eqnarray} <var:m> := <nat:1> + <var:m> * <var:N> \\ \{ <var:N> = <var:u> \land <var:m> = <nat:1> \cdot <var:u> ^ <nat:12> + <nat:4> \cdot <var:u> ^ <nat:11> + <nat:2> \cdot <var:u> ^ <nat:10> + <nat:2> \cdot <var:u> ^ <nat:9> + <nat:3> \cdot <var:u> ^ <nat:8> + <nat:2> \cdot <var:u> ^ <nat:7> + <nat:4> \cdot <var:u> ^ <nat:6> + <nat:1> \cdot <var:u> ^ <nat:5> + <nat:4> \cdot <var:u> ^ <nat:4> + <nat:1> \cdot <var:u> ^ <nat:3> + <nat:3> \cdot <var:u> ^ <nat:2> + <nat:2> \cdot <var:u> + <nat:1> \} \end{eqnarray} As a result , our series of instructions has been proven correct . \end{proof} \end{document} 
~
Require Import String . From PLF Require Import Imp . From PLF Require Import Hoare . Theorem <genH:poly_code_correct> : forall <var:u> : nat , {{ <var:N> = <var:u> }} <var:m> := <nat:1> ; <var:m> := <nat:4> + <var:m> * <var:N> ; <var:m> := <nat:2> + <var:m> * <var:N> ; <var:m> := <nat:2> + <var:m> * <var:N> ; <var:m> := <nat:3> + <var:m> * <var:N> ; <var:m> := <nat:2> + <var:m> * <var:N> ; <var:m> := <nat:4> + <var:m> * <var:N> ; <var:m> := <nat:1> + <var:m> * <var:N> ; <var:m> := <nat:4> + <var:m> * <var:N> ; <var:m> := <nat:1> + <var:m> * <var:N> ; <var:m> := <nat:3> + <var:m> * <var:N> ; <var:m> := <nat:2> + <var:m> * <var:N> ; <var:m> := <nat:1> + <var:m> * <var:N> {{ <var:m> = <nat:1> * <var:u> ^ <nat:12> + <nat:4> * <var:u> ^ <nat:11> + <nat:2> * <var:u> ^ <nat:10> + <nat:2> * <var:u> ^ <nat:9> + <nat:3> * <var:u> ^ <nat:8> + <nat:2> * <var:u> ^ <nat:7> + <nat:4> * <var:u> ^ <nat:6> + <nat:1> * <var:u> ^ <nat:5> + <nat:4> * <var:u> ^ <nat:4> + <nat:1> * <var:u> ^ <nat:3> + <nat:3> * <var:u> ^ <nat:2> + <nat:2> * <var:u> + <nat:1> }} . Proof . intros . apply hoare_seq with ( Q := ( ( <var:N> = <var:u> /\ <var:m> = <nat:1> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:N> = <var:u> /\ <var:m> = <nat:1> * <var:u> + <nat:4> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:N> = <var:u> /\ <var:m> = <nat:1> * <var:u> ^ <nat:2> + <nat:4> * <var:u> + <nat:2> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:N> = <var:u> /\ <var:m> = <nat:1> * <var:u> ^ <nat:3> + <nat:4> * <var:u> ^ <nat:2> + <nat:2> * <var:u> + <nat:2> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:N> = <var:u> /\ <var:m> = <nat:1> * <var:u> ^ <nat:4> + <nat:4> * <var:u> ^ <nat:3> + <nat:2> * <var:u> ^ <nat:2> + <nat:2> * <var:u> + <nat:3> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:N> = <var:u> /\ <var:m> = <nat:1> * <var:u> ^ <nat:5> + <nat:4> * <var:u> ^ <nat:4> + <nat:2> * <var:u> ^ <nat:3> + <nat:2> * <var:u> ^ <nat:2> + <nat:3> * <var:u> + <nat:2> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:N> = <var:u> /\ <var:m> = <nat:1> * <var:u> ^ <nat:6> + <nat:4> * <var:u> ^ <nat:5> + <nat:2> * <var:u> ^ <nat:4> + <nat:2> * <var:u> ^ <nat:3> + <nat:3> * <var:u> ^ <nat:2> + <nat:2> * <var:u> + <nat:4> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:N> = <var:u> /\ <var:m> = <nat:1> * <var:u> ^ <nat:7> + <nat:4> * <var:u> ^ <nat:6> + <nat:2> * <var:u> ^ <nat:5> + <nat:2> * <var:u> ^ <nat:4> + <nat:3> * <var:u> ^ <nat:3> + <nat:2> * <var:u> ^ <nat:2> + <nat:4> * <var:u> + <nat:1> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:N> = <var:u> /\ <var:m> = <nat:1> * <var:u> ^ <nat:8> + <nat:4> * <var:u> ^ <nat:7> + <nat:2> * <var:u> ^ <nat:6> + <nat:2> * <var:u> ^ <nat:5> + <nat:3> * <var:u> ^ <nat:4> + <nat:2> * <var:u> ^ <nat:3> + <nat:4> * <var:u> ^ <nat:2> + <nat:1> * <var:u> + <nat:4> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:N> = <var:u> /\ <var:m> = <nat:1> * <var:u> ^ <nat:9> + <nat:4> * <var:u> ^ <nat:8> + <nat:2> * <var:u> ^ <nat:7> + <nat:2> * <var:u> ^ <nat:6> + <nat:3> * <var:u> ^ <nat:5> + <nat:2> * <var:u> ^ <nat:4> + <nat:4> * <var:u> ^ <nat:3> + <nat:1> * <var:u> ^ <nat:2> + <nat:4> * <var:u> + <nat:1> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:N> = <var:u> /\ <var:m> = <nat:1> * <var:u> ^ <nat:10> + <nat:4> * <var:u> ^ <nat:9> + <nat:2> * <var:u> ^ <nat:8> + <nat:2> * <var:u> ^ <nat:7> + <nat:3> * <var:u> ^ <nat:6> + <nat:2> * <var:u> ^ <nat:5> + <nat:4> * <var:u> ^ <nat:4> + <nat:1> * <var:u> ^ <nat:3> + <nat:4> * <var:u> ^ <nat:2> + <nat:1> * <var:u> + <nat:3> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:N> = <var:u> /\ <var:m> = <nat:1> * <var:u> ^ <nat:11> + <nat:4> * <var:u> ^ <nat:10> + <nat:2> * <var:u> ^ <nat:9> + <nat:2> * <var:u> ^ <nat:8> + <nat:3> * <var:u> ^ <nat:7> + <nat:2> * <var:u> ^ <nat:6> + <nat:4> * <var:u> ^ <nat:5> + <nat:1> * <var:u> ^ <nat:4> + <nat:4> * <var:u> ^ <nat:3> + <nat:1> * <var:u> ^ <nat:2> + <nat:3> * <var:u> + <nat:2> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:N> = <var:u> /\ <var:m> = <nat:1> * <var:u> ^ <nat:12> + <nat:4> * <var:u> ^ <nat:11> + <nat:2> * <var:u> ^ <nat:10> + <nat:2> * <var:u> ^ <nat:9> + <nat:3> * <var:u> ^ <nat:8> + <nat:2> * <var:u> ^ <nat:7> + <nat:4> * <var:u> ^ <nat:6> + <nat:1> * <var:u> ^ <nat:5> + <nat:4> * <var:u> ^ <nat:4> + <nat:1> * <var:u> ^ <nat:3> + <nat:3> * <var:u> ^ <nat:2> + <nat:2> * <var:u> + <nat:1> ) ) %assertion ) . all : eapply hoare_consequence_pre ; try ( apply hoare_asgn || assn_auto'' ) . Qed . 