\begin{document} \begin{theorem} We define the following set of instructions as follows \begin{verbatim} <var:O1> := <var:z> ; <var:O2> := <var:O1> * <var:z> ; <var:O0> := <nat:5> ; <var:O1> := <var:O1> * <nat:6> ; <var:O2> := <var:O2> * <nat:8> ; <var:M> := <var:O2> <var:M> := <var:M> + <var:O1> <var:M> := <var:M> + <var:O0> \end{verbatim} Given it to be that $ <var:z> = <var:n> $ ahead of interpreting the code , then we see $ <var:M> = <nat:8> \times <var:n> ^ <nat:2> + <nat:6> \times <var:n> + <nat:5> $ . \end{theorem} \begin{proof} Applying usual Hoare techniques gives : \begin{eqnarray} \{ <var:z> = <var:n> \} \\ <var:O1> := <var:z> ; \\ \{ <var:z> = <var:n> \land <var:O1> = <var:n> \} \\ <var:O2> := <var:O1> * <var:z> ; \\ \{ <var:z> = <var:n> \land <var:O1> = <var:n> \land <var:O2> = <var:n> ^ <nat:2> \} \\ <var:O0> := <nat:5> ; \\ \{ <var:z> = <var:n> \land <var:O1> = <var:n> \land <var:O2> = <var:n> ^ <nat:2> \land <var:O0> = <nat:5> \} \\ <var:O1> := <var:O1> * <nat:6> ; \\ \{ <var:z> = <var:n> \land <var:O1> = <nat:6> \cdot <var:n> \land <var:O2> = <var:n> ^ <nat:2> \land <var:O0> = <nat:5> \} \\ <var:O2> := <var:O2> * <nat:8> ; \\ \{ <var:z> = <var:n> \land <var:O1> = <nat:6> \cdot <var:n> \land <var:O2> = <nat:8> \cdot <var:n> ^ <nat:2> \land <var:O0> = <nat:5> \} \\ <var:M> := <var:O2> \\ \{ <var:z> = <var:n> \land <var:O1> = <nat:6> \cdot <var:n> \land <var:O0> = <nat:5> \land <var:M> = <nat:8> \cdot <var:n> ^ <nat:2> \} \\ <var:M> := <var:M> + <var:O1> \\ \{ <var:z> = <var:n> \land <var:O0> = <nat:5> \land <var:M> = <nat:8> \cdot <var:n> ^ <nat:2> + <nat:6> \cdot <var:n> \} \\ <var:M> := <var:M> + <var:O0> \\ \{ <var:z> = <var:n> \land <var:M> = <nat:8> \cdot <var:n> ^ <nat:2> + <nat:6> \cdot <var:n> + <nat:5> \} \end{eqnarray} Given the above , the set of commands has been shown correct . \end{proof} \end{document} 
~
Require Import String . From PLF Require Import Imp . From PLF Require Import Hoare . Definition <var:O0> : string := " <var:O0> " . Definition <var:O1> : string := " <var:O1> " . Definition <var:O2> : string := " <var:O2> " . Theorem <genH:poly_code_correct> : forall <var:n> : nat , {{ <var:z> = <var:n> }} <var:O1> := <var:z> ; <var:O2> := <var:O1> * <var:z> ; <var:O0> := <nat:5> ; <var:O1> := <var:O1> * <nat:6> ; <var:O2> := <var:O2> * <nat:8> ; <var:M> := <var:O2> <var:M> := <var:M> + <var:O1> <var:M> := <var:M> + <var:O0> {{ <var:M> = <nat:8> * <var:n> ^ <nat:2> + <nat:6> * <var:n> + <nat:5> }} . Proof . intros . apply hoare_seq with ( Q := ( ( <var:z> = <var:n> /\ <var:O1> = <var:n> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:z> = <var:n> /\ <var:O1> = <var:n> /\ <var:O2> = <var:n> ^ <nat:2> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:z> = <var:n> /\ <var:O1> = <var:n> /\ <var:O2> = <var:n> ^ <nat:2> /\ <var:O0> = <nat:5> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:z> = <var:n> /\ <var:O1> = <nat:6> * <var:n> /\ <var:O2> = <var:n> ^ <nat:2> /\ <var:O0> = <nat:5> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:z> = <var:n> /\ <var:O1> = <nat:6> * <var:n> /\ <var:O2> = <nat:8> * <var:n> ^ <nat:2> /\ <var:O0> = <nat:5> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:z> = <var:n> /\ <var:O1> = <nat:6> * <var:n> /\ <var:O0> = <nat:5> /\ <var:M> = <nat:8> * <var:n> ^ <nat:2> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:z> = <var:n> /\ <var:O0> = <nat:5> /\ <var:M> = <nat:8> * <var:n> ^ <nat:2> + <nat:6> * <var:n> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:z> = <var:n> /\ <var:M> = <nat:8> * <var:n> ^ <nat:2> + <nat:6> * <var:n> + <nat:5> ) ) %assertion ) . all : eapply hoare_consequence_pre ; try ( apply hoare_asgn || assn_auto'' ) . Qed . 