\begin{document} \begin{definition} Consider the following series of instructions <def:poly> in \emph{Imp} : \begin{verbatim} <var:l0> := <nat:2> ; <var:S> := <var:l0> \end{verbatim} \end{definition} \begin{theorem} Given --- given positive coefficients $ <var:B> $ --- $ <var:a> = <var:B> $ prior to the evaluation of this code segment it holds that $ <var:S> = <nat:2> $ . \end{theorem} \begin{proof} Applying standard Hoare logic gives : \begin{eqnarray} \{ <var:a> = <var:B> \} \\ <var:l0> := <nat:2> ; \\ \{ <var:a> = <var:B> \land <var:l0> = <nat:2> \} \\ <var:S> := <var:l0> \\ \{ <var:a> = <var:B> \land <var:S> = <nat:2> \} \end{eqnarray} Considering the above , the code is validated as correct . \end{proof} \end{document} 
~
Require Import String . From PLF Require Import Imp . From PLF Require Import Hoare . Definition <var:l0> : string := " <var:l0> " . Definition <def:poly> := <var:l0> := <nat:2> ; <var:S> := <var:l0> . Theorem <genH:poly_code_correct> : forall <var:B> : nat , {{ <var:a> = <var:B> }} <def:poly> {{ <var:S> = <nat:2> }} . Proof . intros . apply hoare_seq with ( Q := ( ( <var:a> = <var:B> /\ <var:l0> = <nat:2> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:a> = <var:B> /\ <var:S> = <nat:2> ) ) %assertion ) . all : eapply hoare_consequence_pre ; try ( apply hoare_asgn || assn_auto'' ) . Qed . 