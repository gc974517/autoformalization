\begin{document} \begin{definition} Take the following code segment <def:poly> in \emph{Imp} such that \begin{verbatim} <var:j0> := <nat:5> ; <var:W> := <var:j0> \end{verbatim} \end{definition} \begin{theorem} Allow --- for all positive numbers $ <var:o> $ --- that $ <var:Y> = <var:o> $ ahead of interpreting our list of commands it holds that we have $ <var:W> = <nat:5> $ when set of commands has executed . \end{theorem} \begin{proof} \begin{eqnarray} \{ <var:Y> = <var:o> \} \\ <var:j0> := <nat:5> ; \\ \{ <var:Y> = <var:o> \land <var:j0> = <nat:5> \} \\ <var:W> := <var:j0> \\ \{ <var:Y> = <var:o> \land <var:W> = <nat:5> \} \end{eqnarray} Utilizing typical Hoare reasoning finishes the proof . \end{proof} \end{document} 
~
Require Import String . From PLF Require Import Imp . From PLF Require Import Hoare . Definition <var:j0> : string := " <var:j0> " . Definition <def:poly> := <var:j0> := <nat:5> ; <var:W> := <var:j0> . Theorem <genH:poly_code_correct> : forall <var:o> : nat , {{ <var:Y> = <var:o> }} <def:poly> {{ <var:W> = <nat:5> }} . Proof . intros . apply hoare_seq with ( Q := ( ( <var:Y> = <var:o> /\ <var:j0> = <nat:5> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:Y> = <var:o> /\ <var:W> = <nat:5> ) ) %assertion ) . all : eapply hoare_consequence_pre ; try ( apply hoare_asgn || assn_auto'' ) . Qed . 