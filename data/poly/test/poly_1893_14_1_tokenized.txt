\begin{document} \begin{theorem} Take the following segment of code in \emph{Imp} as follows \begin{verbatim} <var:C1> := <var:h> ; <var:C2> := <var:C1> * <var:h> ; <var:C3> := <var:C2> * <var:h> ; <var:C4> := <var:C3> * <var:h> ; <var:C0> := <nat:8> ; <var:C1> := <var:C1> * <nat:1> ; <var:C2> := <var:C2> * <nat:9> ; <var:C3> := <var:C3> * <nat:9> ; <var:C4> := <var:C4> * <nat:9> ; <var:N> := <var:C4> <var:N> := <var:N> + <var:C3> <var:N> := <var:N> + <var:C2> <var:N> := <var:N> + <var:C1> <var:N> := <var:N> + <var:C0> \end{verbatim} Assume that we have $ <var:h> = <var:O> $ ( letting integers $ <var:O> $ ) ahead of interpreting this set of instructions it holds that $ <var:N> = <nat:9> * <var:O> ^ <nat:4> + <nat:9> * <var:O> ^ <nat:3> + <nat:9> * <var:O> ^ <nat:2> + <nat:1> * <var:O> + <nat:8> $ once list of commands has executed . \end{theorem} \begin{proof} The flow of logic for this code segment can be done by typical Hoare techniques . Next , we see \begin{eqnarray} \{ <var:h> = <var:O> \} \, <var:C1> := <var:h> \, \{ <var:h> = <var:O> \land <var:C1> = <var:O> \} \\ \{ <var:h> = <var:O> \land <var:C1> = <var:O> \} \, <var:C2> := <var:C1> * <var:h> \, \{ <var:h> = <var:O> \land <var:C1> = <var:O> \land <var:C2> = <var:O> ^ <nat:2> \} \\ \{ <var:h> = <var:O> \land <var:C1> = <var:O> \land <var:C2> = <var:O> ^ <nat:2> \} \, <var:C3> := <var:C2> * <var:h> \, \{ <var:h> = <var:O> \land <var:C1> = <var:O> \land <var:C2> = <var:O> ^ <nat:2> \land <var:C3> = <var:O> ^ <nat:3> \} \\ \{ <var:h> = <var:O> \land <var:C1> = <var:O> \land <var:C2> = <var:O> ^ <nat:2> \land <var:C3> = <var:O> ^ <nat:3> \} \, <var:C4> := <var:C3> * <var:h> \, \{ <var:h> = <var:O> \land <var:C1> = <var:O> \land <var:C2> = <var:O> ^ <nat:2> \land <var:C3> = <var:O> ^ <nat:3> \land <var:C4> = <var:O> ^ <nat:4> \} \\ \{ <var:h> = <var:O> \land <var:C1> = <var:O> \land <var:C2> = <var:O> ^ <nat:2> \land <var:C3> = <var:O> ^ <nat:3> \land <var:C4> = <var:O> ^ <nat:4> \} \, <var:C0> := <nat:8> \, \{ <var:h> = <var:O> \land <var:C1> = <var:O> \land <var:C2> = <var:O> ^ <nat:2> \land <var:C3> = <var:O> ^ <nat:3> \land <var:C4> = <var:O> ^ <nat:4> \land <var:C0> = <nat:8> \} \\ \{ <var:h> = <var:O> \land <var:C1> = <var:O> \land <var:C2> = <var:O> ^ <nat:2> \land <var:C3> = <var:O> ^ <nat:3> \land <var:C4> = <var:O> ^ <nat:4> \land <var:C0> = <nat:8> \} \, <var:C1> := <var:C1> * <nat:1> \, \{ <var:h> = <var:O> \land <var:C1> = <nat:1> \cdot <var:O> \land <var:C2> = <var:O> ^ <nat:2> \land <var:C3> = <var:O> ^ <nat:3> \land <var:C4> = <var:O> ^ <nat:4> \land <var:C0> = <nat:8> \} \\ \{ <var:h> = <var:O> \land <var:C1> = <nat:1> \cdot <var:O> \land <var:C2> = <var:O> ^ <nat:2> \land <var:C3> = <var:O> ^ <nat:3> \land <var:C4> = <var:O> ^ <nat:4> \land <var:C0> = <nat:8> \} \, <var:C2> := <var:C2> * <nat:9> \, \{ <var:h> = <var:O> \land <var:C1> = <nat:1> \cdot <var:O> \land <var:C2> = <nat:9> \cdot <var:O> ^ <nat:2> \land <var:C3> = <var:O> ^ <nat:3> \land <var:C4> = <var:O> ^ <nat:4> \land <var:C0> = <nat:8> \} \\ \{ <var:h> = <var:O> \land <var:C1> = <nat:1> \cdot <var:O> \land <var:C2> = <nat:9> \cdot <var:O> ^ <nat:2> \land <var:C3> = <var:O> ^ <nat:3> \land <var:C4> = <var:O> ^ <nat:4> \land <var:C0> = <nat:8> \} \, <var:C3> := <var:C3> * <nat:9> \, \{ <var:h> = <var:O> \land <var:C1> = <nat:1> \cdot <var:O> \land <var:C2> = <nat:9> \cdot <var:O> ^ <nat:2> \land <var:C3> = <nat:9> \cdot <var:O> ^ <nat:3> \land <var:C4> = <var:O> ^ <nat:4> \land <var:C0> = <nat:8> \} \\ \{ <var:h> = <var:O> \land <var:C1> = <nat:1> \cdot <var:O> \land <var:C2> = <nat:9> \cdot <var:O> ^ <nat:2> \land <var:C3> = <nat:9> \cdot <var:O> ^ <nat:3> \land <var:C4> = <var:O> ^ <nat:4> \land <var:C0> = <nat:8> \} \, <var:C4> := <var:C4> * <nat:9> \, \{ <var:h> = <var:O> \land <var:C1> = <nat:1> \cdot <var:O> \land <var:C2> = <nat:9> \cdot <var:O> ^ <nat:2> \land <var:C3> = <nat:9> \cdot <var:O> ^ <nat:3> \land <var:C4> = <nat:9> \cdot <var:O> ^ <nat:4> \land <var:C0> = <nat:8> \} \\ \{ <var:h> = <var:O> \land <var:C1> = <nat:1> \cdot <var:O> \land <var:C2> = <nat:9> \cdot <var:O> ^ <nat:2> \land <var:C3> = <nat:9> \cdot <var:O> ^ <nat:3> \land <var:C4> = <nat:9> \cdot <var:O> ^ <nat:4> \land <var:C0> = <nat:8> \} \, <var:N> := <var:C4\, \{ <var:h> = <var:O> \land <var:C1> = <nat:1> \cdot <var:O> \land <var:C2> = <nat:9> \cdot <var:O> ^ <nat:2> \land <var:C3> = <nat:9> \cdot <var:O> ^ <nat:3> \land <var:C0> = <nat:8> \land <var:N> = <nat:9> \cdot <var:O> ^ <nat:4> \} \end{eqnarray} Focusing on the next pieces of code in our list of commands , we have \begin{eqnarray} \{ <var:h> = <var:O> \} \, <var:C1> := <var:h> \, \{ <var:h> = <var:O> \land <var:C1> = <var:O> \} \\ \{ <var:h> = <var:O> \land <var:C1> = <var:O> \} \, <var:C2> := <var:C1> * <var:h> \, \{ <var:h> = <var:O> \land <var:C1> = <var:O> \land <var:C2> = <var:O> ^ <nat:2> \} \end{eqnarray} Advancing , we see \begin{eqnarray} \{ <var:h> = <var:O> \} \, <var:C1> := <var:h> \, \{ <var:h> = <var:O> \land <var:C1> = <var:O> \} \\ \{ <var:h> = <var:O> \land <var:C1> = <var:O> \} \, <var:C2> := <var:C1> * <var:h> \, \{ <var:h> = <var:O> \land <var:C1> = <var:O> \land <var:C2> = <var:O> ^ <nat:2> \} \end{eqnarray} This is shown to be logically sound with the assignment law defined by usual Hoare techniques . \end{proof} \end{document} 
~
Require Import String . From PLF Require Import Imp . From PLF Require Import Hoare . Definition <var:C0> : string := " <var:C0> " . Definition <var:C1> : string := " <var:C1> " . Definition <var:C2> : string := " <var:C2> " . Definition <var:C3> : string := " <var:C3> " . Definition <var:C4> : string := " <var:C4> " . Theorem <genH:poly_code_correct> : forall <var:O> : nat , {{ <var:h> = <var:O> }} <var:C1> := <var:h> ; <var:C2> := <var:C1> * <var:h> ; <var:C3> := <var:C2> * <var:h> ; <var:C4> := <var:C3> * <var:h> ; <var:C0> := <nat:8> ; <var:C1> := <var:C1> * <nat:1> ; <var:C2> := <var:C2> * <nat:9> ; <var:C3> := <var:C3> * <nat:9> ; <var:C4> := <var:C4> * <nat:9> ; <var:N> := <var:C4> <var:N> := <var:N> + <var:C3> <var:N> := <var:N> + <var:C2> <var:N> := <var:N> + <var:C1> <var:N> := <var:N> + <var:C0> {{ <var:N> = <nat:9> * <var:O> ^ <nat:4> + <nat:9> * <var:O> ^ <nat:3> + <nat:9> * <var:O> ^ <nat:2> + <nat:1> * <var:O> + <nat:8> }} . Proof . intros . apply hoare_seq with ( Q := ( ( <var:h> = <var:O> /\ <var:C1> = <var:O> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:h> = <var:O> /\ <var:C1> = <var:O> /\ <var:C2> = <var:O> ^ <nat:2> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:h> = <var:O> /\ <var:C1> = <var:O> /\ <var:C2> = <var:O> ^ <nat:2> /\ <var:C3> = <var:O> ^ <nat:3> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:h> = <var:O> /\ <var:C1> = <var:O> /\ <var:C2> = <var:O> ^ <nat:2> /\ <var:C3> = <var:O> ^ <nat:3> /\ <var:C4> = <var:O> ^ <nat:4> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:h> = <var:O> /\ <var:C1> = <var:O> /\ <var:C2> = <var:O> ^ <nat:2> /\ <var:C3> = <var:O> ^ <nat:3> /\ <var:C4> = <var:O> ^ <nat:4> /\ <var:C0> = <nat:8> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:h> = <var:O> /\ <var:C1> = <nat:1> * <var:O> /\ <var:C2> = <var:O> ^ <nat:2> /\ <var:C3> = <var:O> ^ <nat:3> /\ <var:C4> = <var:O> ^ <nat:4> /\ <var:C0> = <nat:8> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:h> = <var:O> /\ <var:C1> = <nat:1> * <var:O> /\ <var:C2> = <nat:9> * <var:O> ^ <nat:2> /\ <var:C3> = <var:O> ^ <nat:3> /\ <var:C4> = <var:O> ^ <nat:4> /\ <var:C0> = <nat:8> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:h> = <var:O> /\ <var:C1> = <nat:1> * <var:O> /\ <var:C2> = <nat:9> * <var:O> ^ <nat:2> /\ <var:C3> = <nat:9> * <var:O> ^ <nat:3> /\ <var:C4> = <var:O> ^ <nat:4> /\ <var:C0> = <nat:8> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:h> = <var:O> /\ <var:C1> = <nat:1> * <var:O> /\ <var:C2> = <nat:9> * <var:O> ^ <nat:2> /\ <var:C3> = <nat:9> * <var:O> ^ <nat:3> /\ <var:C4> = <nat:9> * <var:O> ^ <nat:4> /\ <var:C0> = <nat:8> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:h> = <var:O> /\ <var:C1> = <nat:1> * <var:O> /\ <var:C2> = <nat:9> * <var:O> ^ <nat:2> /\ <var:C3> = <nat:9> * <var:O> ^ <nat:3> /\ <var:C0> = <nat:8> /\ <var:N> = <nat:9> * <var:O> ^ <nat:4> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:h> = <var:O> /\ <var:C1> = <nat:1> * <var:O> /\ <var:C2> = <nat:9> * <var:O> ^ <nat:2> /\ <var:C0> = <nat:8> /\ <var:N> = <nat:9> * <var:O> ^ <nat:4> + <nat:9> * <var:O> ^ <nat:3> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:h> = <var:O> /\ <var:C1> = <nat:1> * <var:O> /\ <var:C0> = <nat:8> /\ <var:N> = <nat:9> * <var:O> ^ <nat:4> + <nat:9> * <var:O> ^ <nat:3> + <nat:9> * <var:O> ^ <nat:2> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:h> = <var:O> /\ <var:C0> = <nat:8> /\ <var:N> = <nat:9> * <var:O> ^ <nat:4> + <nat:9> * <var:O> ^ <nat:3> + <nat:9> * <var:O> ^ <nat:2> + <nat:1> * <var:O> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:h> = <var:O> /\ <var:N> = <nat:9> * <var:O> ^ <nat:4> + <nat:9> * <var:O> ^ <nat:3> + <nat:9> * <var:O> ^ <nat:2> + <nat:1> * <var:O> + <nat:8> ) ) %assertion ) . all : eapply hoare_consequence_pre ; try ( apply hoare_asgn || assn_auto'' ) . Qed . 