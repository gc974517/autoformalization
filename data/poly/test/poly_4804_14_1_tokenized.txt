\begin{document} \begin{theorem} Take a series of instructions : \begin{verbatim} <var:X1> := <var:S> ; <var:X2> := <var:X1> * <var:S> ; <var:X3> := <var:X2> * <var:S> ; <var:X4> := <var:X3> * <var:S> ; <var:X0> := <nat:4> ; <var:X1> := <var:X1> * <nat:3> ; <var:X2> := <var:X2> * <nat:4> ; <var:X3> := <var:X3> * <nat:3> ; <var:X4> := <var:X4> * <nat:4> ; <var:U> := <var:X4> <var:U> := <var:U> + <var:X3> <var:U> := <var:U> + <var:X2> <var:U> := <var:U> + <var:X1> <var:U> := <var:U> + <var:X0> \end{verbatim} Assume it to be that $ <var:S> = <var:r> $ ( assuming some positive integer coefficients $ <var:r> $ ) ahead of evaluating our series of commands , it must be that we see $ <var:U> = <nat:4> * <var:r> ^ <nat:4> + <nat:3> * <var:r> ^ <nat:3> + <nat:4> * <var:r> ^ <nat:2> + <nat:3> * <var:r> + <nat:4> $ . \end{theorem} \begin{proof} The flow of logic for our segment of code is clear by usual Hoare reasoning . Jumping to the subsequent pieces of code found in our set of commands , \[ \begin{tabular} {rcl} \{ <var:S> = <var:r> \} & <var:X1> := <var:S> & \{ <var:S> = <var:r> \land <var:X1> = <var:r> \} \\ \{ <var:S> = <var:r> \land <var:X1> = <var:r> \} & <var:X2> := <var:X1> * <var:S> & \{ <var:S> = <var:r> \land <var:X1> = <var:r> \land <var:X2> = <var:r> ^ <nat:2> \} \\ \{ <var:S> = <var:r> \land <var:X1> = <var:r> \land <var:X2> = <var:r> ^ <nat:2> \} & <var:X3> := <var:X2> * <var:S> & \{ <var:S> = <var:r> \land <var:X1> = <var:r> \land <var:X2> = <var:r> ^ <nat:2> \land <var:X3> = <var:r> ^ <nat:3> \} \\ \{ <var:S> = <var:r> \land <var:X1> = <var:r> \land <var:X2> = <var:r> ^ <nat:2> \land <var:X3> = <var:r> ^ <nat:3> \} & <var:X4> := <var:X3> * <var:S> & \{ <var:S> = <var:r> \land <var:X1> = <var:r> \land <var:X2> = <var:r> ^ <nat:2> \land <var:X3> = <var:r> ^ <nat:3> \land <var:X4> = <var:r> ^ <nat:4> \} \\ \{ <var:S> = <var:r> \land <var:X1> = <var:r> \land <var:X2> = <var:r> ^ <nat:2> \land <var:X3> = <var:r> ^ <nat:3> \land <var:X4> = <var:r> ^ <nat:4> \} & <var:X0> := <nat:4> & \{ <var:S> = <var:r> \land <var:X1> = <var:r> \land <var:X2> = <var:r> ^ <nat:2> \land <var:X3> = <var:r> ^ <nat:3> \land <var:X4> = <var:r> ^ <nat:4> \land <var:X0> = <nat:4> \} \\ \{ <var:S> = <var:r> \land <var:X1> = <var:r> \land <var:X2> = <var:r> ^ <nat:2> \land <var:X3> = <var:r> ^ <nat:3> \land <var:X4> = <var:r> ^ <nat:4> \land <var:X0> = <nat:4> \} & <var:X1> := <var:X1> * <nat:3> & \{ <var:S> = <var:r> \land <var:X1> = <nat:3> * <var:r> \land <var:X2> = <var:r> ^ <nat:2> \land <var:X3> = <var:r> ^ <nat:3> \land <var:X4> = <var:r> ^ <nat:4> \land <var:X0> = <nat:4> \} \\ \{ <var:S> = <var:r> \land <var:X1> = <nat:3> * <var:r> \land <var:X2> = <var:r> ^ <nat:2> \land <var:X3> = <var:r> ^ <nat:3> \land <var:X4> = <var:r> ^ <nat:4> \land <var:X0> = <nat:4> \} & <var:X2> := <var:X2> * <nat:4> & \{ <var:S> = <var:r> \land <var:X1> = <nat:3> * <var:r> \land <var:X2> = <nat:4> * <var:r> ^ <nat:2> \land <var:X3> = <var:r> ^ <nat:3> \land <var:X4> = <var:r> ^ <nat:4> \land <var:X0> = <nat:4> \} \\ \{ <var:S> = <var:r> \land <var:X1> = <nat:3> * <var:r> \land <var:X2> = <nat:4> * <var:r> ^ <nat:2> \land <var:X3> = <var:r> ^ <nat:3> \land <var:X4> = <var:r> ^ <nat:4> \land <var:X0> = <nat:4> \} & <var:X3> := <var:X3> * <nat:3> & \{ <var:S> = <var:r> \land <var:X1> = <nat:3> * <var:r> \land <var:X2> = <nat:4> * <var:r> ^ <nat:2> \land <var:X3> = <nat:3> * <var:r> ^ <nat:3> \land <var:X4> = <var:r> ^ <nat:4> \land <var:X0> = <nat:4> \} \\ \{ <var:S> = <var:r> \land <var:X1> = <nat:3> * <var:r> \land <var:X2> = <nat:4> * <var:r> ^ <nat:2> \land <var:X3> = <nat:3> * <var:r> ^ <nat:3> \land <var:X4> = <var:r> ^ <nat:4> \land <var:X0> = <nat:4> \} & <var:X4> := <var:X4> * <nat:4> & \{ <var:S> = <var:r> \land <var:X1> = <nat:3> * <var:r> \land <var:X2> = <nat:4> * <var:r> ^ <nat:2> \land <var:X3> = <nat:3> * <var:r> ^ <nat:3> \land <var:X4> = <nat:4> * <var:r> ^ <nat:4> \land <var:X0> = <nat:4> \} \\ \{ <var:S> = <var:r> \land <var:X1> = <nat:3> * <var:r> \land <var:X2> = <nat:4> * <var:r> ^ <nat:2> \land <var:X3> = <nat:3> * <var:r> ^ <nat:3> \land <var:X4> = <nat:4> * <var:r> ^ <nat:4> \land <var:X0> = <nat:4> \} & <var:U> := <var:X4& \{ <var:S> = <var:r> \land <var:X1> = <nat:3> * <var:r> \land <var:X2> = <nat:4> * <var:r> ^ <nat:2> \land <var:X3> = <nat:3> * <var:r> ^ <nat:3> \land <var:X0> = <nat:4> \land <var:U> = <nat:4> * <var:r> ^ <nat:4> \} \\ \{ <var:S> = <var:r> \land <var:X1> = <nat:3> * <var:r> \land <var:X2> = <nat:4> * <var:r> ^ <nat:2> \land <var:X3> = <nat:3> * <var:r> ^ <nat:3> \land <var:X0> = <nat:4> \land <var:U> = <nat:4> * <var:r> ^ <nat:4> \} & <var:U> := <var:U> + <var:X3& \{ <var:S> = <var:r> \land <var:X1> = <nat:3> * <var:r> \land <var:X2> = <nat:4> * <var:r> ^ <nat:2> \land <var:X0> = <nat:4> \land <var:U> = <nat:4> * <var:r> ^ <nat:4> + <nat:3> * <var:r> ^ <nat:3> \} \\ \{ <var:S> = <var:r> \land <var:X1> = <nat:3> * <var:r> \land <var:X2> = <nat:4> * <var:r> ^ <nat:2> \land <var:X0> = <nat:4> \land <var:U> = <nat:4> * <var:r> ^ <nat:4> + <nat:3> * <var:r> ^ <nat:3> \} & <var:U> := <var:U> + <var:X2& \{ <var:S> = <var:r> \land <var:X1> = <nat:3> * <var:r> \land <var:X0> = <nat:4> \land <var:U> = <nat:4> * <var:r> ^ <nat:4> + <nat:3> * <var:r> ^ <nat:3> + <nat:4> * <var:r> ^ <nat:2> \} \\ \{ <var:S> = <var:r> \land <var:X1> = <nat:3> * <var:r> \land <var:X0> = <nat:4> \land <var:U> = <nat:4> * <var:r> ^ <nat:4> + <nat:3> * <var:r> ^ <nat:3> + <nat:4> * <var:r> ^ <nat:2> \} & <var:U> := <var:U> + <var:X1& \{ <var:S> = <var:r> \land <var:X0> = <nat:4> \land <var:U> = <nat:4> * <var:r> ^ <nat:4> + <nat:3> * <var:r> ^ <nat:3> + <nat:4> * <var:r> ^ <nat:2> + <nat:3> * <var:r> \} \\ \{ <var:S> = <var:r> \land <var:X0> = <nat:4> \land <var:U> = <nat:4> * <var:r> ^ <nat:4> + <nat:3> * <var:r> ^ <nat:3> + <nat:4> * <var:r> ^ <nat:2> + <nat:3> * <var:r> \} & <var:U> := <var:U> + <var:X0& \{ <var:S> = <var:r> \land <var:U> = <nat:4> * <var:r> ^ <nat:4> + <nat:3> * <var:r> ^ <nat:3> + <nat:4> * <var:r> ^ <nat:2> + <nat:3> * <var:r> + <nat:4> \} \end{tabular} \end{proof} \end{document} 
~
Require Import String . From PLF Require Import Imp . From PLF Require Import Hoare . Definition <var:X0> : string := " <var:X0> " . Definition <var:X1> : string := " <var:X1> " . Definition <var:X2> : string := " <var:X2> " . Definition <var:X3> : string := " <var:X3> " . Definition <var:X4> : string := " <var:X4> " . Theorem <genH:poly_code_correct> : forall <var:r> : nat , {{ <var:S> = <var:r> }} <var:X1> := <var:S> ; <var:X2> := <var:X1> * <var:S> ; <var:X3> := <var:X2> * <var:S> ; <var:X4> := <var:X3> * <var:S> ; <var:X0> := <nat:4> ; <var:X1> := <var:X1> * <nat:3> ; <var:X2> := <var:X2> * <nat:4> ; <var:X3> := <var:X3> * <nat:3> ; <var:X4> := <var:X4> * <nat:4> ; <var:U> := <var:X4> <var:U> := <var:U> + <var:X3> <var:U> := <var:U> + <var:X2> <var:U> := <var:U> + <var:X1> <var:U> := <var:U> + <var:X0> {{ <var:U> = <nat:4> * <var:r> ^ <nat:4> + <nat:3> * <var:r> ^ <nat:3> + <nat:4> * <var:r> ^ <nat:2> + <nat:3> * <var:r> + <nat:4> }} . Proof . intros . apply hoare_seq with ( Q := ( ( <var:S> = <var:r> /\ <var:X1> = <var:r> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:S> = <var:r> /\ <var:X1> = <var:r> /\ <var:X2> = <var:r> ^ <nat:2> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:S> = <var:r> /\ <var:X1> = <var:r> /\ <var:X2> = <var:r> ^ <nat:2> /\ <var:X3> = <var:r> ^ <nat:3> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:S> = <var:r> /\ <var:X1> = <var:r> /\ <var:X2> = <var:r> ^ <nat:2> /\ <var:X3> = <var:r> ^ <nat:3> /\ <var:X4> = <var:r> ^ <nat:4> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:S> = <var:r> /\ <var:X1> = <var:r> /\ <var:X2> = <var:r> ^ <nat:2> /\ <var:X3> = <var:r> ^ <nat:3> /\ <var:X4> = <var:r> ^ <nat:4> /\ <var:X0> = <nat:4> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:S> = <var:r> /\ <var:X1> = <nat:3> * <var:r> /\ <var:X2> = <var:r> ^ <nat:2> /\ <var:X3> = <var:r> ^ <nat:3> /\ <var:X4> = <var:r> ^ <nat:4> /\ <var:X0> = <nat:4> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:S> = <var:r> /\ <var:X1> = <nat:3> * <var:r> /\ <var:X2> = <nat:4> * <var:r> ^ <nat:2> /\ <var:X3> = <var:r> ^ <nat:3> /\ <var:X4> = <var:r> ^ <nat:4> /\ <var:X0> = <nat:4> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:S> = <var:r> /\ <var:X1> = <nat:3> * <var:r> /\ <var:X2> = <nat:4> * <var:r> ^ <nat:2> /\ <var:X3> = <nat:3> * <var:r> ^ <nat:3> /\ <var:X4> = <var:r> ^ <nat:4> /\ <var:X0> = <nat:4> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:S> = <var:r> /\ <var:X1> = <nat:3> * <var:r> /\ <var:X2> = <nat:4> * <var:r> ^ <nat:2> /\ <var:X3> = <nat:3> * <var:r> ^ <nat:3> /\ <var:X4> = <nat:4> * <var:r> ^ <nat:4> /\ <var:X0> = <nat:4> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:S> = <var:r> /\ <var:X1> = <nat:3> * <var:r> /\ <var:X2> = <nat:4> * <var:r> ^ <nat:2> /\ <var:X3> = <nat:3> * <var:r> ^ <nat:3> /\ <var:X0> = <nat:4> /\ <var:U> = <nat:4> * <var:r> ^ <nat:4> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:S> = <var:r> /\ <var:X1> = <nat:3> * <var:r> /\ <var:X2> = <nat:4> * <var:r> ^ <nat:2> /\ <var:X0> = <nat:4> /\ <var:U> = <nat:4> * <var:r> ^ <nat:4> + <nat:3> * <var:r> ^ <nat:3> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:S> = <var:r> /\ <var:X1> = <nat:3> * <var:r> /\ <var:X0> = <nat:4> /\ <var:U> = <nat:4> * <var:r> ^ <nat:4> + <nat:3> * <var:r> ^ <nat:3> + <nat:4> * <var:r> ^ <nat:2> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:S> = <var:r> /\ <var:X0> = <nat:4> /\ <var:U> = <nat:4> * <var:r> ^ <nat:4> + <nat:3> * <var:r> ^ <nat:3> + <nat:4> * <var:r> ^ <nat:2> + <nat:3> * <var:r> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:S> = <var:r> /\ <var:U> = <nat:4> * <var:r> ^ <nat:4> + <nat:3> * <var:r> ^ <nat:3> + <nat:4> * <var:r> ^ <nat:2> + <nat:3> * <var:r> + <nat:4> ) ) %assertion ) . all : eapply hoare_consequence_pre ; try ( apply hoare_asgn || assn_auto'' ) . Qed . 