\begin{document} \begin{theorem} Let the following set of commands as follows \begin{verbatim} <var:i> := <nat:2> ; <var:i> := <nat:4> + <var:i> * <var:v> \end{verbatim} Allow it to hold that $ <var:v> = <var:u> $ ( for any natural coefficients $ <var:u> $ ) ahead of the execution of our program , it follows that we have $ <var:i> = <nat:2> \cdot <var:u> + <nat:4> $ once code has exited . \end{theorem} \begin{proof} Demonstrating correctness of our series of commands is accomplished by usual Hoare reasoning . Paying attention to the following statement seen in our program , \verb | { <var:v> = <var:u> } <var:i> := <nat:2> { <var:v> = <var:u> \land <var:i> = <nat:2> } | . This is shown by the binding rule found in usual Hoare reasoning . Advancing to the next step , we see \verb | { <var:v> = <var:u> } <var:i> := <nat:2> { <var:v> = <var:u> \land <var:i> = <nat:2> } | . \end{proof} \end{document} 
~
Require Import String . From PLF Require Import Imp . From PLF Require Import Hoare . Theorem <genH:poly_code_correct> : forall <var:u> : nat , {{ <var:v> = <var:u> }} <var:i> := <nat:2> ; <var:i> := <nat:4> + <var:i> * <var:v> {{ <var:i> = <nat:2> * <var:u> + <nat:4> }} . Proof . intros . apply hoare_seq with ( Q := ( ( <var:v> = <var:u> /\ <var:i> = <nat:2> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:v> = <var:u> /\ <var:i> = <nat:2> * <var:u> + <nat:4> ) ) %assertion ) . all : eapply hoare_consequence_pre ; try ( apply hoare_asgn || assn_auto'' ) . Qed . 