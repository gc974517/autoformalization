\begin{document} \begin{theorem} Take the following set of instructions in \emph{Imp} as follows \begin{verbatim} <var:q1> := <var:i> ; <var:q0> := <nat:8> ; <var:q1> := <var:q1> * <nat:6> ; <var:T> := <var:q1> <var:T> := <var:T> + <var:q0> \end{verbatim} Assuming for some natural numbers $ <var:l> $ it to be that $ <var:i> = <var:l> $ before evaluating our code it must be that we have $ <var:T> = <nat:6> * <var:l> + <nat:8> $ . \end{theorem} \begin{proof} The way to prove correctness for our list of commands can be done through standard Hoare reasoning . Paying attention to the next step seen in the set of commands , the variable binding command \verb | <var:q1> := <var:i> ; | . This redefines the condition $ \{ <var:i> = <var:l> \} $ toward the postcondition $ \{ <var:i> = <var:l> \land <var:q1> = <var:l> \} $ . Moving on to the upcoming line of code found in the set of commands , we see the assignment statement defining $ <nat:8> $ to $ <var:q0>$ . This line redefines the condition $ \{ <var:i> = <var:l> \land <var:q1> = <var:l> \} $ into $ \{ <var:i> = <var:l> \land <var:q1> = <var:l> \land <var:q0> = <nat:8> \} $ . This is ensured through the assignment law in Hoare techniques . Moving on , we see the variable binding statement assigning $ <var:q1> * <nat:6> $ into $ <var:q1>$ . This line transfers the precondition $ \{ <var:i> = <var:l> \land <var:q1> = <var:l> \land <var:q0> = <nat:8> \} $ toward the condition $ \{ <var:i> = <var:l> \land <var:q1> = <nat:6> * <var:l> \land <var:q0> = <nat:8> \} $ . Moving on to the subsequent statement seen in the list of instructions , we see the binding line letting $ <var:q1$ to $ <var:T>$ . This command advances $ \{ <var:i> = <var:l> \land <var:q1> = <nat:6> * <var:l> \land <var:q0> = <nat:8> \} $ as $ \{ <var:i> = <var:l> \land <var:q0> = <nat:8> \land <var:T> = <nat:6> * <var:l> \} $ . This is sound using the assignment scheme given by Hoare techniques . Stepping through , we see the environment update code \verb | <var:T> := <var:T> + <var:q0> | . This advances the condition $ \{ <var:i> = <var:l> \land <var:q0> = <nat:8> \land <var:T> = <nat:6> * <var:l> \} $ toward $ \{ <var:i> = <var:l> \land <var:T> = <nat:6> * <var:l> + <nat:8> \} $ . \end{proof} \end{document} 
~
Require Import String . From PLF Require Import Imp . From PLF Require Import Hoare . Definition <var:q0> : string := " <var:q0> " . Definition <var:q1> : string := " <var:q1> " . Theorem <genH:poly_code_correct> : forall <var:l> : nat , {{ <var:i> = <var:l> }} <var:q1> := <var:i> ; <var:q0> := <nat:8> ; <var:q1> := <var:q1> * <nat:6> ; <var:T> := <var:q1> <var:T> := <var:T> + <var:q0> {{ <var:T> = <nat:6> * <var:l> + <nat:8> }} . Proof . intros . apply hoare_seq with ( Q := ( ( <var:i> = <var:l> /\ <var:q1> = <var:l> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:i> = <var:l> /\ <var:q1> = <var:l> /\ <var:q0> = <nat:8> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:i> = <var:l> /\ <var:q1> = <nat:6> * <var:l> /\ <var:q0> = <nat:8> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:i> = <var:l> /\ <var:q0> = <nat:8> /\ <var:T> = <nat:6> * <var:l> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:i> = <var:l> /\ <var:T> = <nat:6> * <var:l> + <nat:8> ) ) %assertion ) . all : eapply hoare_consequence_pre ; try ( apply hoare_asgn || assn_auto'' ) . Qed . 