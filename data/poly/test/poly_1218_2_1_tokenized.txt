\begin{document} \begin{theorem} Let the following program in \emph{Imp} such that \begin{verbatim} <var:D0> := <nat:4> ; <var:W> := <var:D0> \end{verbatim} Assuming given every positive coefficients $ <var:H> $ it to hold that $ <var:X> = <var:H> $ prior to the execution of our code segment it holds that we have $ <var:W> = <nat:4> $ . \end{theorem} \begin{proof} See that this decorated set of instructions . \begin{eqnarray} \{ <var:X> = <var:H> \} \\ <var:D0> := <nat:4> ; \\ \{ <var:X> = <var:H> \land <var:D0> = <nat:4> \} \\ <var:W> := <var:D0> \\ \{ <var:X> = <var:H> \land <var:W> = <nat:4> \} \end{eqnarray} The application of usual Hoare techniques solves the proof . \end{proof} \end{document} 
~
Require Import String . From PLF Require Import Imp . From PLF Require Import Hoare . Definition <var:D0> : string := " <var:D0> " . Theorem <genH:poly_code_correct> : forall <var:H> : nat , {{ <var:X> = <var:H> }} <var:D0> := <nat:4> ; <var:W> := <var:D0> {{ <var:W> = <nat:4> }} . Proof . intros . apply hoare_seq with ( Q := ( ( <var:X> = <var:H> /\ <var:D0> = <nat:4> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:X> = <var:H> /\ <var:W> = <nat:4> ) ) %assertion ) . all : eapply hoare_consequence_pre ; try ( apply hoare_asgn || assn_auto'' ) . Qed . 