\begin{document} \begin{theorem} We define a list of commands in \emph{Imp} : \begin{verbatim} <var:J1> := <var:g> ; <var:J0> := <nat:8> ; <var:J1> := <var:J1> * <nat:5> ; <var:Q> := <var:J1> <var:Q> := <var:Q> + <var:J0> \end{verbatim} Assume that we have $ <var:g> = <var:M> $ prior to running this set of commands then $ <var:Q> = <nat:5> \times <var:M> + <nat:8> $ . \end{theorem} \begin{proof} The way to prove correctness for this series of commands is given using standard Hoare reasoning . Moving forward , we see the variable binding statement assigning $ <var:g> $ toward $ <var:J1>$ . This code forwards the condition $ \{ <var:g> = <var:M> \} $ into the postcondition $ \{ <var:g> = <var:M> \land <var:J1> = <var:M> \} $ . Focusing on the following statement seen in our list of commands , the assignment statement giving $ <nat:8> $ toward $ <var:J0>$ . This line transfers the precondition $ \{ <var:g> = <var:M> \land <var:J1> = <var:M> \} $ as $ \{ <var:g> = <var:M> \land <var:J1> = <var:M> \land <var:J0> = <nat:8> \} $ . Going to the next step , we have the command \verb | <var:J1> := <var:J1> * <nat:5> ; | . This moves the condition $ \{ <var:g> = <var:M> \land <var:J1> = <var:M> \land <var:J0> = <nat:8> \} $ to the condition $ \{ <var:g> = <var:M> \land <var:J1> = <nat:5> \cdot <var:M> \land <var:J0> = <nat:8> \} $ . Shifting focus toward the subsequent line of code in the set of commands , the variable binding command \verb | <var:Q> := <var:J1> | . This command forwards $ \{ <var:g> = <var:M> \land <var:J1> = <nat:5> \cdot <var:M> \land <var:J0> = <nat:8> \} $ toward the condition $ \{ <var:g> = <var:M> \land <var:J0> = <nat:8> \land <var:Q> = <nat:5> \cdot <var:M> \} $ . Taking another step toward the next piece of code seen in our list of commands , we have the environment update statement defining $ <var:Q> + <var:J0$ into $ <var:Q>$ . This forwards the precondition $ \{ <var:g> = <var:M> \land <var:J0> = <nat:8> \land <var:Q> = <nat:5> \cdot <var:M> \} $ to the condition $ \{ <var:g> = <var:M> \land <var:Q> = <nat:5> \cdot <var:M> + <nat:8> \} $ . This is deduced through the assignment law found in usual Hoare techniques . \end{proof} \end{document} 
~
Require Import String . From PLF Require Import Imp . From PLF Require Import Hoare . Definition <var:J0> : string := " <var:J0> " . Definition <var:J1> : string := " <var:J1> " . Theorem <genH:poly_code_correct> : forall <var:M> : nat , {{ <var:g> = <var:M> }} <var:J1> := <var:g> ; <var:J0> := <nat:8> ; <var:J1> := <var:J1> * <nat:5> ; <var:Q> := <var:J1> <var:Q> := <var:Q> + <var:J0> {{ <var:Q> = <nat:5> * <var:M> + <nat:8> }} . Proof . intros . apply hoare_seq with ( Q := ( ( <var:g> = <var:M> /\ <var:J1> = <var:M> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:g> = <var:M> /\ <var:J1> = <var:M> /\ <var:J0> = <nat:8> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:g> = <var:M> /\ <var:J1> = <nat:5> * <var:M> /\ <var:J0> = <nat:8> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:g> = <var:M> /\ <var:J0> = <nat:8> /\ <var:Q> = <nat:5> * <var:M> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:g> = <var:M> /\ <var:Q> = <nat:5> * <var:M> + <nat:8> ) ) %assertion ) . all : eapply hoare_consequence_pre ; try ( apply hoare_asgn || assn_auto'' ) . Qed . 