\begin{document} \begin{theorem} Let the following series of commands as \begin{verbatim} <var:h> := <nat:3> ; <var:h> := <nat:2> + <var:h> * <var:K> ; <var:h> := <nat:2> + <var:h> * <var:K> ; <var:h> := <var:h> * <var:K> ; <var:h> := <nat:1> + <var:h> * <var:K> ; <var:h> := <nat:1> + <var:h> * <var:K> ; <var:h> := <nat:4> + <var:h> * <var:K> ; <var:h> := <nat:3> + <var:h> * <var:K> ; <var:h> := <nat:2> + <var:h> * <var:K> ; <var:h> := <nat:2> + <var:h> * <var:K> ; <var:h> := <var:h> * <var:K> ; <var:h> := <nat:1> + <var:h> * <var:K> ; <var:h> := <var:h> * <var:K> ; <var:h> := <nat:2> + <var:h> * <var:K> \end{verbatim} Allow it to be that $ <var:K> = <var:W> $ ahead of running the series of instructions it follows that $ <var:h> = <nat:3> \cdot <var:W> ^ <nat:13> + <nat:2> \cdot <var:W> ^ <nat:12> + <nat:2> \cdot <var:W> ^ <nat:11> + <nat:1> \cdot <var:W> ^ <nat:9> + <nat:1> \cdot <var:W> ^ <nat:8> + <nat:4> \cdot <var:W> ^ <nat:7> + <nat:3> \cdot <var:W> ^ <nat:6> + <nat:2> \cdot <var:W> ^ <nat:5> + <nat:2> \cdot <var:W> ^ <nat:4> + <nat:1> \cdot <var:W> ^ <nat:2> + <nat:2> $ . \end{theorem} \begin{proof} \begin{eqnarray} \{ <var:K> = <var:W> \} \\ <var:h> := <nat:3> ; \\ \{ <var:K> = <var:W> \land <var:h> = <nat:3> \} \\ <var:h> := <nat:2> + <var:h> * <var:K> ; \\ \{ <var:K> = <var:W> \land <var:h> = <nat:3> * <var:W> + <nat:2> \} \\ <var:h> := <nat:2> + <var:h> * <var:K> ; \\ \{ <var:K> = <var:W> \land <var:h> = <nat:3> * <var:W> ^ <nat:2> + <nat:2> * <var:W> + <nat:2> \} \\ <var:h> := <var:h> * <var:K> ; \\ \{ <var:K> = <var:W> \land <var:h> = <nat:3> * <var:W> ^ <nat:3> + <nat:2> * <var:W> ^ <nat:2> + <nat:2> * <var:W> + \} \\ <var:h> := <nat:1> + <var:h> * <var:K> ; \\ \{ <var:K> = <var:W> \land <var:h> = <nat:3> * <var:W> ^ <nat:4> + <nat:2> * <var:W> ^ <nat:3> + <nat:2> * <var:W> ^ <nat:2> + <nat:1> \} \\ <var:h> := <nat:1> + <var:h> * <var:K> ; \\ \{ <var:K> = <var:W> \land <var:h> = <nat:3> * <var:W> ^ <nat:5> + <nat:2> * <var:W> ^ <nat:4> + <nat:2> * <var:W> ^ <nat:3> + <nat:1> * <var:W> + <nat:1> \} \\ <var:h> := <nat:4> + <var:h> * <var:K> ; \\ \{ <var:K> = <var:W> \land <var:h> = <nat:3> * <var:W> ^ <nat:6> + <nat:2> * <var:W> ^ <nat:5> + <nat:2> * <var:W> ^ <nat:4> + <nat:1> * <var:W> ^ <nat:2> + <nat:1> * <var:W> + <nat:4> \} \\ <var:h> := <nat:3> + <var:h> * <var:K> ; \\ \{ <var:K> = <var:W> \land <var:h> = <nat:3> * <var:W> ^ <nat:7> + <nat:2> * <var:W> ^ <nat:6> + <nat:2> * <var:W> ^ <nat:5> + <nat:1> * <var:W> ^ <nat:3> + <nat:1> * <var:W> ^ <nat:2> + <nat:4> * <var:W> + <nat:3> \} \\ <var:h> := <nat:2> + <var:h> * <var:K> ; \\ \{ <var:K> = <var:W> \land <var:h> = <nat:3> * <var:W> ^ <nat:8> + <nat:2> * <var:W> ^ <nat:7> + <nat:2> * <var:W> ^ <nat:6> + <nat:1> * <var:W> ^ <nat:4> + <nat:1> * <var:W> ^ <nat:3> + <nat:4> * <var:W> ^ <nat:2> + <nat:3> * <var:W> + <nat:2> \} \\ <var:h> := <nat:2> + <var:h> * <var:K> ; \\ \{ <var:K> = <var:W> \land <var:h> = <nat:3> * <var:W> ^ <nat:9> + <nat:2> * <var:W> ^ <nat:8> + <nat:2> * <var:W> ^ <nat:7> + <nat:1> * <var:W> ^ <nat:5> + <nat:1> * <var:W> ^ <nat:4> + <nat:4> * <var:W> ^ <nat:3> + <nat:3> * <var:W> ^ <nat:2> + <nat:2> * <var:W> + <nat:2> \} \\ <var:h> := <var:h> * <var:K> ; \\ \{ <var:K> = <var:W> \land <var:h> = <nat:3> * <var:W> ^ <nat:10> + <nat:2> * <var:W> ^ <nat:9> + <nat:2> * <var:W> ^ <nat:8> + <nat:1> * <var:W> ^ <nat:6> + <nat:1> * <var:W> ^ <nat:5> + <nat:4> * <var:W> ^ <nat:4> + <nat:3> * <var:W> ^ <nat:3> + <nat:2> * <var:W> ^ <nat:2> + <nat:2> * <var:W> + \} \\ <var:h> := <nat:1> + <var:h> * <var:K> ; \\ \{ <var:K> = <var:W> \land <var:h> = <nat:3> * <var:W> ^ <nat:11> + <nat:2> * <var:W> ^ <nat:10> + <nat:2> * <var:W> ^ <nat:9> + <nat:1> * <var:W> ^ <nat:7> + <nat:1> * <var:W> ^ <nat:6> + <nat:4> * <var:W> ^ <nat:5> + <nat:3> * <var:W> ^ <nat:4> + <nat:2> * <var:W> ^ <nat:3> + <nat:2> * <var:W> ^ <nat:2> + <nat:1> \} \\ <var:h> := <var:h> * <var:K> ; \\ \{ <var:K> = <var:W> \land <var:h> = <nat:3> * <var:W> ^ <nat:12> + <nat:2> * <var:W> ^ <nat:11> + <nat:2> * <var:W> ^ <nat:10> + <nat:1> * <var:W> ^ <nat:8> + <nat:1> * <var:W> ^ <nat:7> + <nat:4> * <var:W> ^ <nat:6> + <nat:3> * <var:W> ^ <nat:5> + <nat:2> * <var:W> ^ <nat:4> + <nat:2> * <var:W> ^ <nat:3> + <nat:1> * <var:W> + \} \\ <var:h> := <nat:2> + <var:h> * <var:K> \\ \{ <var:K> = <var:W> \land <var:h> = <nat:3> * <var:W> ^ <nat:13> + <nat:2> * <var:W> ^ <nat:12> + <nat:2> * <var:W> ^ <nat:11> + <nat:1> * <var:W> ^ <nat:9> + <nat:1> * <var:W> ^ <nat:8> + <nat:4> * <var:W> ^ <nat:7> + <nat:3> * <var:W> ^ <nat:6> + <nat:2> * <var:W> ^ <nat:5> + <nat:2> * <var:W> ^ <nat:4> + <nat:1> * <var:W> ^ <nat:2> + <nat:2> \} \end{eqnarray} Using standard Hoare techniques accomplishes the argument . \end{proof} \end{document} 
~
Require Import String . From PLF Require Import Imp . From PLF Require Import Hoare . Theorem <genH:poly_code_correct> : forall <var:W> : nat , {{ <var:K> = <var:W> }} <var:h> := <nat:3> ; <var:h> := <nat:2> + <var:h> * <var:K> ; <var:h> := <nat:2> + <var:h> * <var:K> ; <var:h> := <var:h> * <var:K> ; <var:h> := <nat:1> + <var:h> * <var:K> ; <var:h> := <nat:1> + <var:h> * <var:K> ; <var:h> := <nat:4> + <var:h> * <var:K> ; <var:h> := <nat:3> + <var:h> * <var:K> ; <var:h> := <nat:2> + <var:h> * <var:K> ; <var:h> := <nat:2> + <var:h> * <var:K> ; <var:h> := <var:h> * <var:K> ; <var:h> := <nat:1> + <var:h> * <var:K> ; <var:h> := <var:h> * <var:K> ; <var:h> := <nat:2> + <var:h> * <var:K> {{ <var:h> = <nat:3> * <var:W> ^ <nat:13> + <nat:2> * <var:W> ^ <nat:12> + <nat:2> * <var:W> ^ <nat:11> + <nat:1> * <var:W> ^ <nat:9> + <nat:1> * <var:W> ^ <nat:8> + <nat:4> * <var:W> ^ <nat:7> + <nat:3> * <var:W> ^ <nat:6> + <nat:2> * <var:W> ^ <nat:5> + <nat:2> * <var:W> ^ <nat:4> + <nat:1> * <var:W> ^ <nat:2> + <nat:2> }} . Proof . intros . apply hoare_seq with ( Q := ( ( <var:K> = <var:W> /\ <var:h> = <nat:3> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:K> = <var:W> /\ <var:h> = <nat:3> * <var:W> + <nat:2> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:K> = <var:W> /\ <var:h> = <nat:3> * <var:W> ^ <nat:2> + <nat:2> * <var:W> + <nat:2> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:K> = <var:W> /\ <var:h> = <nat:3> * <var:W> ^ <nat:3> + <nat:2> * <var:W> ^ <nat:2> + <nat:2> * <var:W> + ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:K> = <var:W> /\ <var:h> = <nat:3> * <var:W> ^ <nat:4> + <nat:2> * <var:W> ^ <nat:3> + <nat:2> * <var:W> ^ <nat:2> + <nat:1> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:K> = <var:W> /\ <var:h> = <nat:3> * <var:W> ^ <nat:5> + <nat:2> * <var:W> ^ <nat:4> + <nat:2> * <var:W> ^ <nat:3> + <nat:1> * <var:W> + <nat:1> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:K> = <var:W> /\ <var:h> = <nat:3> * <var:W> ^ <nat:6> + <nat:2> * <var:W> ^ <nat:5> + <nat:2> * <var:W> ^ <nat:4> + <nat:1> * <var:W> ^ <nat:2> + <nat:1> * <var:W> + <nat:4> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:K> = <var:W> /\ <var:h> = <nat:3> * <var:W> ^ <nat:7> + <nat:2> * <var:W> ^ <nat:6> + <nat:2> * <var:W> ^ <nat:5> + <nat:1> * <var:W> ^ <nat:3> + <nat:1> * <var:W> ^ <nat:2> + <nat:4> * <var:W> + <nat:3> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:K> = <var:W> /\ <var:h> = <nat:3> * <var:W> ^ <nat:8> + <nat:2> * <var:W> ^ <nat:7> + <nat:2> * <var:W> ^ <nat:6> + <nat:1> * <var:W> ^ <nat:4> + <nat:1> * <var:W> ^ <nat:3> + <nat:4> * <var:W> ^ <nat:2> + <nat:3> * <var:W> + <nat:2> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:K> = <var:W> /\ <var:h> = <nat:3> * <var:W> ^ <nat:9> + <nat:2> * <var:W> ^ <nat:8> + <nat:2> * <var:W> ^ <nat:7> + <nat:1> * <var:W> ^ <nat:5> + <nat:1> * <var:W> ^ <nat:4> + <nat:4> * <var:W> ^ <nat:3> + <nat:3> * <var:W> ^ <nat:2> + <nat:2> * <var:W> + <nat:2> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:K> = <var:W> /\ <var:h> = <nat:3> * <var:W> ^ <nat:10> + <nat:2> * <var:W> ^ <nat:9> + <nat:2> * <var:W> ^ <nat:8> + <nat:1> * <var:W> ^ <nat:6> + <nat:1> * <var:W> ^ <nat:5> + <nat:4> * <var:W> ^ <nat:4> + <nat:3> * <var:W> ^ <nat:3> + <nat:2> * <var:W> ^ <nat:2> + <nat:2> * <var:W> + ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:K> = <var:W> /\ <var:h> = <nat:3> * <var:W> ^ <nat:11> + <nat:2> * <var:W> ^ <nat:10> + <nat:2> * <var:W> ^ <nat:9> + <nat:1> * <var:W> ^ <nat:7> + <nat:1> * <var:W> ^ <nat:6> + <nat:4> * <var:W> ^ <nat:5> + <nat:3> * <var:W> ^ <nat:4> + <nat:2> * <var:W> ^ <nat:3> + <nat:2> * <var:W> ^ <nat:2> + <nat:1> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:K> = <var:W> /\ <var:h> = <nat:3> * <var:W> ^ <nat:12> + <nat:2> * <var:W> ^ <nat:11> + <nat:2> * <var:W> ^ <nat:10> + <nat:1> * <var:W> ^ <nat:8> + <nat:1> * <var:W> ^ <nat:7> + <nat:4> * <var:W> ^ <nat:6> + <nat:3> * <var:W> ^ <nat:5> + <nat:2> * <var:W> ^ <nat:4> + <nat:2> * <var:W> ^ <nat:3> + <nat:1> * <var:W> + ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:K> = <var:W> /\ <var:h> = <nat:3> * <var:W> ^ <nat:13> + <nat:2> * <var:W> ^ <nat:12> + <nat:2> * <var:W> ^ <nat:11> + <nat:1> * <var:W> ^ <nat:9> + <nat:1> * <var:W> ^ <nat:8> + <nat:4> * <var:W> ^ <nat:7> + <nat:3> * <var:W> ^ <nat:6> + <nat:2> * <var:W> ^ <nat:5> + <nat:2> * <var:W> ^ <nat:4> + <nat:1> * <var:W> ^ <nat:2> + <nat:2> ) ) %assertion ) . all : eapply hoare_consequence_pre ; try ( apply hoare_asgn || assn_auto'' ) . Qed . 