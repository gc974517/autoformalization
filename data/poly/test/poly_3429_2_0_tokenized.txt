\begin{document} \begin{definition} Let the following series of commands <def:poly> in \emph{Imp} : \begin{verbatim} <var:A0> := <nat:6> ; <var:H> := <var:A0> \end{verbatim} \end{definition} \begin{theorem} Assume that $ <var:J> = <var:X> $ before interpreting our series of commands , it must be that we see $ <var:H> = <nat:6> $ after segment of code executes . \end{theorem} \begin{proof} We can see that the following decorated code segment . \begin{eqnarray} \{ <var:J> = <var:X> \} \\ <var:A0> := <nat:6> ; \\ \{ <var:J> = <var:X> \land <var:A0> = <nat:6> \} \\ <var:H> := <var:A0> \\ \{ <var:J> = <var:X> \land <var:H> = <nat:6> \} \end{eqnarray} Applying Hoare reasoning finalizes the argument . \end{proof} \end{document} 
~
Require Import String . From PLF Require Import Imp . From PLF Require Import Hoare . Definition <var:A0> : string := " <var:A0> " . Definition <def:poly> := <var:A0> := <nat:6> ; <var:H> := <var:A0> . Theorem <genH:poly_code_correct> : forall <var:X> : nat , {{ <var:J> = <var:X> }} <def:poly> {{ <var:H> = <nat:6> }} . Proof . intros . apply hoare_seq with ( Q := ( ( <var:J> = <var:X> /\ <var:A0> = <nat:6> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:J> = <var:X> /\ <var:H> = <nat:6> ) ) %assertion ) . all : eapply hoare_consequence_pre ; try ( apply hoare_asgn || assn_auto'' ) . Qed . 