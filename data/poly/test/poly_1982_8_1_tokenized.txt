\begin{document} \begin{definition} Consider the following series of instructions <def:poly> in \emph{Imp} as \begin{verbatim} <var:x1> := <var:H> ; <var:x2> := <var:x1> * <var:H> ; <var:x0> := <nat:6> ; <var:x1> := <var:x1> * <nat:5> ; <var:x2> := <var:x2> * <nat:3> ; <var:T> := <var:x2> <var:T> := <var:T> + <var:x1> <var:T> := <var:T> + <var:x0> \end{verbatim} \end{definition} \begin{theorem} Assume , given every natural numbers $ <var:A> $ , $ <var:H> = <var:A> $ ahead of executing this code segment , it follows that we see $ <var:T> = <nat:3> * <var:A> ^ <nat:2> + <nat:5> * <var:A> + <nat:6> $ . \end{theorem} \begin{proof} The application of Hoare techniques produces : \begin{eqnarray} \{ <var:H> = <var:A> \} \\ <var:x1> := <var:H> ; \\ \{ <var:H> = <var:A> \land <var:x1> = <var:A> \} \\ <var:x2> := <var:x1> * <var:H> ; \\ \{ <var:H> = <var:A> \land <var:x1> = <var:A> \land <var:x2> = <var:A> ^ <nat:2> \} \\ <var:x0> := <nat:6> ; \\ \{ <var:H> = <var:A> \land <var:x1> = <var:A> \land <var:x2> = <var:A> ^ <nat:2> \land <var:x0> = <nat:6> \} \\ <var:x1> := <var:x1> * <nat:5> ; \\ \{ <var:H> = <var:A> \land <var:x1> = <nat:5> \cdot <var:A> \land <var:x2> = <var:A> ^ <nat:2> \land <var:x0> = <nat:6> \} \\ <var:x2> := <var:x2> * <nat:3> ; \\ \{ <var:H> = <var:A> \land <var:x1> = <nat:5> \cdot <var:A> \land <var:x2> = <nat:3> \cdot <var:A> ^ <nat:2> \land <var:x0> = <nat:6> \} \\ <var:T> := <var:x2> \\ \{ <var:H> = <var:A> \land <var:x1> = <nat:5> \cdot <var:A> \land <var:x0> = <nat:6> \land <var:T> = <nat:3> \cdot <var:A> ^ <nat:2> \} \\ <var:T> := <var:T> + <var:x1> \\ \{ <var:H> = <var:A> \land <var:x0> = <nat:6> \land <var:T> = <nat:3> \cdot <var:A> ^ <nat:2> + <nat:5> \cdot <var:A> \} \\ <var:T> := <var:T> + <var:x0> \\ \{ <var:H> = <var:A> \land <var:T> = <nat:3> \cdot <var:A> ^ <nat:2> + <nat:5> \cdot <var:A> + <nat:6> \} \end{eqnarray} Therefore , our series of commands has been shown correct . \end{proof} \end{document} 
~
Require Import String . From PLF Require Import Imp . From PLF Require Import Hoare . Definition <var:x0> : string := " <var:x0> " . Definition <var:x1> : string := " <var:x1> " . Definition <var:x2> : string := " <var:x2> " . Definition <def:poly> := <var:x1> := <var:H> ; <var:x2> := <var:x1> * <var:H> ; <var:x0> := <nat:6> ; <var:x1> := <var:x1> * <nat:5> ; <var:x2> := <var:x2> * <nat:3> ; <var:T> := <var:x2> <var:T> := <var:T> + <var:x1> <var:T> := <var:T> + <var:x0> . Theorem <genH:poly_code_correct> : forall <var:A> : nat , {{ <var:H> = <var:A> }} <def:poly> {{ <var:T> = <nat:3> * <var:A> ^ <nat:2> + <nat:5> * <var:A> + <nat:6> }} . Proof . intros . apply hoare_seq with ( Q := ( ( <var:H> = <var:A> /\ <var:x1> = <var:A> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:H> = <var:A> /\ <var:x1> = <var:A> /\ <var:x2> = <var:A> ^ <nat:2> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:H> = <var:A> /\ <var:x1> = <var:A> /\ <var:x2> = <var:A> ^ <nat:2> /\ <var:x0> = <nat:6> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:H> = <var:A> /\ <var:x1> = <nat:5> * <var:A> /\ <var:x2> = <var:A> ^ <nat:2> /\ <var:x0> = <nat:6> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:H> = <var:A> /\ <var:x1> = <nat:5> * <var:A> /\ <var:x2> = <nat:3> * <var:A> ^ <nat:2> /\ <var:x0> = <nat:6> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:H> = <var:A> /\ <var:x1> = <nat:5> * <var:A> /\ <var:x0> = <nat:6> /\ <var:T> = <nat:3> * <var:A> ^ <nat:2> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:H> = <var:A> /\ <var:x0> = <nat:6> /\ <var:T> = <nat:3> * <var:A> ^ <nat:2> + <nat:5> * <var:A> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:H> = <var:A> /\ <var:T> = <nat:3> * <var:A> ^ <nat:2> + <nat:5> * <var:A> + <nat:6> ) ) %assertion ) . all : eapply hoare_consequence_pre ; try ( apply hoare_asgn || assn_auto'' ) . Qed . 