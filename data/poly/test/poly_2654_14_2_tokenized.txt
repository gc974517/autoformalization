\begin{document} \begin{theorem} Let the following set of instructions : \begin{verbatim} <var:Y> := <nat:3> ; <var:Y> := <nat:4> + <var:Y> * <var:h> ; <var:Y> := <var:Y> * <var:h> ; <var:Y> := <nat:1> + <var:Y> * <var:h> ; <var:Y> := <nat:3> + <var:Y> * <var:h> ; <var:Y> := <nat:4> + <var:Y> * <var:h> ; <var:Y> := <nat:3> + <var:Y> * <var:h> ; <var:Y> := <nat:2> + <var:Y> * <var:h> ; <var:Y> := <nat:2> + <var:Y> * <var:h> ; <var:Y> := <nat:1> + <var:Y> * <var:h> ; <var:Y> := <nat:2> + <var:Y> * <var:h> ; <var:Y> := <nat:3> + <var:Y> * <var:h> ; <var:Y> := <nat:4> + <var:Y> * <var:h> ; <var:Y> := <nat:4> + <var:Y> * <var:h> \end{verbatim} Assuming it to hold that $ <var:h> = <var:a> $ prior to interpreting this series of commands , it follows that we have $ <var:Y> = <nat:3> * <var:a> ^ <nat:13> + <nat:4> * <var:a> ^ <nat:12> + <nat:1> * <var:a> ^ <nat:10> + <nat:3> * <var:a> ^ <nat:9> + <nat:4> * <var:a> ^ <nat:8> + <nat:3> * <var:a> ^ <nat:7> + <nat:2> * <var:a> ^ <nat:6> + <nat:2> * <var:a> ^ <nat:5> + <nat:1> * <var:a> ^ <nat:4> + <nat:2> * <var:a> ^ <nat:3> + <nat:3> * <var:a> ^ <nat:2> + <nat:4> * <var:a> + <nat:4> $ . \end{theorem} \begin{proof} Arguing the correctness of our code segment is evident through the below decorated set of commands . \begin{eqnarray} \{ <var:h> = <var:a> \} \\ <var:Y> := <nat:3> ; \\ \{ <var:h> = <var:a> \land <var:Y> = <nat:3> \} \\ <var:Y> := <nat:4> + <var:Y> * <var:h> ; \\ \{ <var:h> = <var:a> \land <var:Y> = <nat:3> \times <var:a> + <nat:4> \} \\ <var:Y> := <var:Y> * <var:h> ; \\ \{ <var:h> = <var:a> \land <var:Y> = <nat:3> \times <var:a> ^ <nat:2> + <nat:4> \times <var:a> + \} \\ <var:Y> := <nat:1> + <var:Y> * <var:h> ; \\ \{ <var:h> = <var:a> \land <var:Y> = <nat:3> \times <var:a> ^ <nat:3> + <nat:4> \times <var:a> ^ <nat:2> + <nat:1> \} \\ <var:Y> := <nat:3> + <var:Y> * <var:h> ; \\ \{ <var:h> = <var:a> \land <var:Y> = <nat:3> \times <var:a> ^ <nat:4> + <nat:4> \times <var:a> ^ <nat:3> + <nat:1> \times <var:a> + <nat:3> \} \\ <var:Y> := <nat:4> + <var:Y> * <var:h> ; \\ \{ <var:h> = <var:a> \land <var:Y> = <nat:3> \times <var:a> ^ <nat:5> + <nat:4> \times <var:a> ^ <nat:4> + <nat:1> \times <var:a> ^ <nat:2> + <nat:3> \times <var:a> + <nat:4> \} \\ <var:Y> := <nat:3> + <var:Y> * <var:h> ; \\ \{ <var:h> = <var:a> \land <var:Y> = <nat:3> \times <var:a> ^ <nat:6> + <nat:4> \times <var:a> ^ <nat:5> + <nat:1> \times <var:a> ^ <nat:3> + <nat:3> \times <var:a> ^ <nat:2> + <nat:4> \times <var:a> + <nat:3> \} \\ <var:Y> := <nat:2> + <var:Y> * <var:h> ; \\ \{ <var:h> = <var:a> \land <var:Y> = <nat:3> \times <var:a> ^ <nat:7> + <nat:4> \times <var:a> ^ <nat:6> + <nat:1> \times <var:a> ^ <nat:4> + <nat:3> \times <var:a> ^ <nat:3> + <nat:4> \times <var:a> ^ <nat:2> + <nat:3> \times <var:a> + <nat:2> \} \\ <var:Y> := <nat:2> + <var:Y> * <var:h> ; \\ \{ <var:h> = <var:a> \land <var:Y> = <nat:3> \times <var:a> ^ <nat:8> + <nat:4> \times <var:a> ^ <nat:7> + <nat:1> \times <var:a> ^ <nat:5> + <nat:3> \times <var:a> ^ <nat:4> + <nat:4> \times <var:a> ^ <nat:3> + <nat:3> \times <var:a> ^ <nat:2> + <nat:2> \times <var:a> + <nat:2> \} \\ <var:Y> := <nat:1> + <var:Y> * <var:h> ; \\ \{ <var:h> = <var:a> \land <var:Y> = <nat:3> \times <var:a> ^ <nat:9> + <nat:4> \times <var:a> ^ <nat:8> + <nat:1> \times <var:a> ^ <nat:6> + <nat:3> \times <var:a> ^ <nat:5> + <nat:4> \times <var:a> ^ <nat:4> + <nat:3> \times <var:a> ^ <nat:3> + <nat:2> \times <var:a> ^ <nat:2> + <nat:2> \times <var:a> + <nat:1> \} \\ <var:Y> := <nat:2> + <var:Y> * <var:h> ; \\ \{ <var:h> = <var:a> \land <var:Y> = <nat:3> \times <var:a> ^ <nat:10> + <nat:4> \times <var:a> ^ <nat:9> + <nat:1> \times <var:a> ^ <nat:7> + <nat:3> \times <var:a> ^ <nat:6> + <nat:4> \times <var:a> ^ <nat:5> + <nat:3> \times <var:a> ^ <nat:4> + <nat:2> \times <var:a> ^ <nat:3> + <nat:2> \times <var:a> ^ <nat:2> + <nat:1> \times <var:a> + <nat:2> \} \\ <var:Y> := <nat:3> + <var:Y> * <var:h> ; \\ \{ <var:h> = <var:a> \land <var:Y> = <nat:3> \times <var:a> ^ <nat:11> + <nat:4> \times <var:a> ^ <nat:10> + <nat:1> \times <var:a> ^ <nat:8> + <nat:3> \times <var:a> ^ <nat:7> + <nat:4> \times <var:a> ^ <nat:6> + <nat:3> \times <var:a> ^ <nat:5> + <nat:2> \times <var:a> ^ <nat:4> + <nat:2> \times <var:a> ^ <nat:3> + <nat:1> \times <var:a> ^ <nat:2> + <nat:2> \times <var:a> + <nat:3> \} \\ <var:Y> := <nat:4> + <var:Y> * <var:h> ; \\ \{ <var:h> = <var:a> \land <var:Y> = <nat:3> \times <var:a> ^ <nat:12> + <nat:4> \times <var:a> ^ <nat:11> + <nat:1> \times <var:a> ^ <nat:9> + <nat:3> \times <var:a> ^ <nat:8> + <nat:4> \times <var:a> ^ <nat:7> + <nat:3> \times <var:a> ^ <nat:6> + <nat:2> \times <var:a> ^ <nat:5> + <nat:2> \times <var:a> ^ <nat:4> + <nat:1> \times <var:a> ^ <nat:3> + <nat:2> \times <var:a> ^ <nat:2> + <nat:3> \times <var:a> + <nat:4> \} \\ <var:Y> := <nat:4> + <var:Y> * <var:h> \\ \{ <var:h> = <var:a> \land <var:Y> = <nat:3> \times <var:a> ^ <nat:13> + <nat:4> \times <var:a> ^ <nat:12> + <nat:1> \times <var:a> ^ <nat:10> + <nat:3> \times <var:a> ^ <nat:9> + <nat:4> \times <var:a> ^ <nat:8> + <nat:3> \times <var:a> ^ <nat:7> + <nat:2> \times <var:a> ^ <nat:6> + <nat:2> \times <var:a> ^ <nat:5> + <nat:1> \times <var:a> ^ <nat:4> + <nat:2> \times <var:a> ^ <nat:3> + <nat:3> \times <var:a> ^ <nat:2> + <nat:4> \times <var:a> + <nat:4> \} \end{eqnarray} Utilizing typical Hoare reasoning solves the proof . \end{proof} \end{document} 
~
Require Import String . From PLF Require Import Imp . From PLF Require Import Hoare . Theorem <genH:poly_code_correct> : forall <var:a> : nat , {{ <var:h> = <var:a> }} <var:Y> := <nat:3> ; <var:Y> := <nat:4> + <var:Y> * <var:h> ; <var:Y> := <var:Y> * <var:h> ; <var:Y> := <nat:1> + <var:Y> * <var:h> ; <var:Y> := <nat:3> + <var:Y> * <var:h> ; <var:Y> := <nat:4> + <var:Y> * <var:h> ; <var:Y> := <nat:3> + <var:Y> * <var:h> ; <var:Y> := <nat:2> + <var:Y> * <var:h> ; <var:Y> := <nat:2> + <var:Y> * <var:h> ; <var:Y> := <nat:1> + <var:Y> * <var:h> ; <var:Y> := <nat:2> + <var:Y> * <var:h> ; <var:Y> := <nat:3> + <var:Y> * <var:h> ; <var:Y> := <nat:4> + <var:Y> * <var:h> ; <var:Y> := <nat:4> + <var:Y> * <var:h> {{ <var:Y> = <nat:3> * <var:a> ^ <nat:13> + <nat:4> * <var:a> ^ <nat:12> + <nat:1> * <var:a> ^ <nat:10> + <nat:3> * <var:a> ^ <nat:9> + <nat:4> * <var:a> ^ <nat:8> + <nat:3> * <var:a> ^ <nat:7> + <nat:2> * <var:a> ^ <nat:6> + <nat:2> * <var:a> ^ <nat:5> + <nat:1> * <var:a> ^ <nat:4> + <nat:2> * <var:a> ^ <nat:3> + <nat:3> * <var:a> ^ <nat:2> + <nat:4> * <var:a> + <nat:4> }} . Proof . intros . apply hoare_seq with ( Q := ( ( <var:h> = <var:a> /\ <var:Y> = <nat:3> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:h> = <var:a> /\ <var:Y> = <nat:3> * <var:a> + <nat:4> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:h> = <var:a> /\ <var:Y> = <nat:3> * <var:a> ^ <nat:2> + <nat:4> * <var:a> + ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:h> = <var:a> /\ <var:Y> = <nat:3> * <var:a> ^ <nat:3> + <nat:4> * <var:a> ^ <nat:2> + <nat:1> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:h> = <var:a> /\ <var:Y> = <nat:3> * <var:a> ^ <nat:4> + <nat:4> * <var:a> ^ <nat:3> + <nat:1> * <var:a> + <nat:3> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:h> = <var:a> /\ <var:Y> = <nat:3> * <var:a> ^ <nat:5> + <nat:4> * <var:a> ^ <nat:4> + <nat:1> * <var:a> ^ <nat:2> + <nat:3> * <var:a> + <nat:4> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:h> = <var:a> /\ <var:Y> = <nat:3> * <var:a> ^ <nat:6> + <nat:4> * <var:a> ^ <nat:5> + <nat:1> * <var:a> ^ <nat:3> + <nat:3> * <var:a> ^ <nat:2> + <nat:4> * <var:a> + <nat:3> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:h> = <var:a> /\ <var:Y> = <nat:3> * <var:a> ^ <nat:7> + <nat:4> * <var:a> ^ <nat:6> + <nat:1> * <var:a> ^ <nat:4> + <nat:3> * <var:a> ^ <nat:3> + <nat:4> * <var:a> ^ <nat:2> + <nat:3> * <var:a> + <nat:2> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:h> = <var:a> /\ <var:Y> = <nat:3> * <var:a> ^ <nat:8> + <nat:4> * <var:a> ^ <nat:7> + <nat:1> * <var:a> ^ <nat:5> + <nat:3> * <var:a> ^ <nat:4> + <nat:4> * <var:a> ^ <nat:3> + <nat:3> * <var:a> ^ <nat:2> + <nat:2> * <var:a> + <nat:2> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:h> = <var:a> /\ <var:Y> = <nat:3> * <var:a> ^ <nat:9> + <nat:4> * <var:a> ^ <nat:8> + <nat:1> * <var:a> ^ <nat:6> + <nat:3> * <var:a> ^ <nat:5> + <nat:4> * <var:a> ^ <nat:4> + <nat:3> * <var:a> ^ <nat:3> + <nat:2> * <var:a> ^ <nat:2> + <nat:2> * <var:a> + <nat:1> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:h> = <var:a> /\ <var:Y> = <nat:3> * <var:a> ^ <nat:10> + <nat:4> * <var:a> ^ <nat:9> + <nat:1> * <var:a> ^ <nat:7> + <nat:3> * <var:a> ^ <nat:6> + <nat:4> * <var:a> ^ <nat:5> + <nat:3> * <var:a> ^ <nat:4> + <nat:2> * <var:a> ^ <nat:3> + <nat:2> * <var:a> ^ <nat:2> + <nat:1> * <var:a> + <nat:2> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:h> = <var:a> /\ <var:Y> = <nat:3> * <var:a> ^ <nat:11> + <nat:4> * <var:a> ^ <nat:10> + <nat:1> * <var:a> ^ <nat:8> + <nat:3> * <var:a> ^ <nat:7> + <nat:4> * <var:a> ^ <nat:6> + <nat:3> * <var:a> ^ <nat:5> + <nat:2> * <var:a> ^ <nat:4> + <nat:2> * <var:a> ^ <nat:3> + <nat:1> * <var:a> ^ <nat:2> + <nat:2> * <var:a> + <nat:3> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:h> = <var:a> /\ <var:Y> = <nat:3> * <var:a> ^ <nat:12> + <nat:4> * <var:a> ^ <nat:11> + <nat:1> * <var:a> ^ <nat:9> + <nat:3> * <var:a> ^ <nat:8> + <nat:4> * <var:a> ^ <nat:7> + <nat:3> * <var:a> ^ <nat:6> + <nat:2> * <var:a> ^ <nat:5> + <nat:2> * <var:a> ^ <nat:4> + <nat:1> * <var:a> ^ <nat:3> + <nat:2> * <var:a> ^ <nat:2> + <nat:3> * <var:a> + <nat:4> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:h> = <var:a> /\ <var:Y> = <nat:3> * <var:a> ^ <nat:13> + <nat:4> * <var:a> ^ <nat:12> + <nat:1> * <var:a> ^ <nat:10> + <nat:3> * <var:a> ^ <nat:9> + <nat:4> * <var:a> ^ <nat:8> + <nat:3> * <var:a> ^ <nat:7> + <nat:2> * <var:a> ^ <nat:6> + <nat:2> * <var:a> ^ <nat:5> + <nat:1> * <var:a> ^ <nat:4> + <nat:2> * <var:a> ^ <nat:3> + <nat:3> * <var:a> ^ <nat:2> + <nat:4> * <var:a> + <nat:4> ) ) %assertion ) . all : eapply hoare_consequence_pre ; try ( apply hoare_asgn || assn_auto'' ) . Qed . 