\begin{document} \begin{definition} Consider the following series of commands <def:poly> in \emph{Imp} such that \begin{verbatim} <var:y1> := <var:Q> ; <var:y2> := <var:y1> * <var:Q> ; <var:y3> := <var:y2> * <var:Q> ; <var:y4> := <var:y3> * <var:Q> ; <var:y0> := <nat:9> ; <var:y1> := <var:y1> * <nat:7> ; <var:y2> := <var:y2> * <nat:7> ; <var:y3> := <var:y3> * <nat:2> ; <var:y4> := <var:y4> * <nat:6> ; <var:C> := <var:y4> <var:C> := <var:C> + <var:y3> <var:C> := <var:C> + <var:y2> <var:C> := <var:C> + <var:y1> <var:C> := <var:C> + <var:y0> \end{verbatim} \end{definition} \begin{theorem} Assuming that $ <var:Q> = <var:v> $ prior to running the set of commands it must be that $ <var:C> = <nat:6> * <var:v> ^ <nat:4> + <nat:2> * <var:v> ^ <nat:3> + <nat:7> * <var:v> ^ <nat:2> + <nat:7> * <var:v> + <nat:9> $ when set of commands is done executing . \end{theorem} \begin{proof} Applying typical Hoare techniques produces : \begin{eqnarray} \{ <var:Q> = <var:v> \} \\ <var:y1> := <var:Q> ; \\ \{ <var:Q> = <var:v> \land <var:y1> = <var:v> \} \\ <var:y2> := <var:y1> * <var:Q> ; \\ \{ <var:Q> = <var:v> \land <var:y1> = <var:v> \land <var:y2> = <var:v> ^ <nat:2> \} \\ <var:y3> := <var:y2> * <var:Q> ; \\ \{ <var:Q> = <var:v> \land <var:y1> = <var:v> \land <var:y2> = <var:v> ^ <nat:2> \land <var:y3> = <var:v> ^ <nat:3> \} \\ <var:y4> := <var:y3> * <var:Q> ; \\ \{ <var:Q> = <var:v> \land <var:y1> = <var:v> \land <var:y2> = <var:v> ^ <nat:2> \land <var:y3> = <var:v> ^ <nat:3> \land <var:y4> = <var:v> ^ <nat:4> \} \\ <var:y0> := <nat:9> ; \\ \{ <var:Q> = <var:v> \land <var:y1> = <var:v> \land <var:y2> = <var:v> ^ <nat:2> \land <var:y3> = <var:v> ^ <nat:3> \land <var:y4> = <var:v> ^ <nat:4> \land <var:y0> = <nat:9> \} \\ <var:y1> := <var:y1> * <nat:7> ; \\ \{ <var:Q> = <var:v> \land <var:y1> = <nat:7> \times <var:v> \land <var:y2> = <var:v> ^ <nat:2> \land <var:y3> = <var:v> ^ <nat:3> \land <var:y4> = <var:v> ^ <nat:4> \land <var:y0> = <nat:9> \} \end{eqnarray} Continuing running our series of instructions returns : \begin{eqnarray} <var:y2> := <var:y2> * <nat:7> ; \\ \{ <var:Q> = <var:v> \land <var:y1> = <nat:7> \times <var:v> \land <var:y2> = <nat:7> \times <var:v> ^ <nat:2> \land <var:y3> = <var:v> ^ <nat:3> \land <var:y4> = <var:v> ^ <nat:4> \land <var:y0> = <nat:9> \} \\ <var:y3> := <var:y3> * <nat:2> ; \\ \{ <var:Q> = <var:v> \land <var:y1> = <nat:7> \times <var:v> \land <var:y2> = <nat:7> \times <var:v> ^ <nat:2> \land <var:y3> = <nat:2> \times <var:v> ^ <nat:3> \land <var:y4> = <var:v> ^ <nat:4> \land <var:y0> = <nat:9> \} \\ <var:y4> := <var:y4> * <nat:6> ; \\ \{ <var:Q> = <var:v> \land <var:y1> = <nat:7> \times <var:v> \land <var:y2> = <nat:7> \times <var:v> ^ <nat:2> \land <var:y3> = <nat:2> \times <var:v> ^ <nat:3> \land <var:y4> = <nat:6> \times <var:v> ^ <nat:4> \land <var:y0> = <nat:9> \} \\ <var:C> := <var:y4> \\ \{ <var:Q> = <var:v> \land <var:y1> = <nat:7> \times <var:v> \land <var:y2> = <nat:7> \times <var:v> ^ <nat:2> \land <var:y3> = <nat:2> \times <var:v> ^ <nat:3> \land <var:y0> = <nat:9> \land <var:C> = <nat:6> \times <var:v> ^ <nat:4> \} \\ <var:C> := <var:C> + <var:y3> \\ \{ <var:Q> = <var:v> \land <var:y1> = <nat:7> \times <var:v> \land <var:y2> = <nat:7> \times <var:v> ^ <nat:2> \land <var:y0> = <nat:9> \land <var:C> = <nat:6> \times <var:v> ^ <nat:4> + <nat:2> \times <var:v> ^ <nat:3> \} \\ <var:C> := <var:C> + <var:y2> \\ \{ <var:Q> = <var:v> \land <var:y1> = <nat:7> \times <var:v> \land <var:y0> = <nat:9> \land <var:C> = <nat:6> \times <var:v> ^ <nat:4> + <nat:2> \times <var:v> ^ <nat:3> + <nat:7> \times <var:v> ^ <nat:2> \} \\ <var:C> := <var:C> + <var:y1> \\ \{ <var:Q> = <var:v> \land <var:y0> = <nat:9> \land <var:C> = <nat:6> \times <var:v> ^ <nat:4> + <nat:2> \times <var:v> ^ <nat:3> + <nat:7> \times <var:v> ^ <nat:2> + <nat:7> \times <var:v> \} \\ <var:C> := <var:C> + <var:y0> \\ \{ <var:Q> = <var:v> \land <var:C> = <nat:6> \times <var:v> ^ <nat:4> + <nat:2> \times <var:v> ^ <nat:3> + <nat:7> \times <var:v> ^ <nat:2> + <nat:7> \times <var:v> + <nat:9> \} \end{eqnarray} Considering the preceding argument , our series of instructions has been proven correct . \end{proof} \end{document} 
~
Require Import String . From PLF Require Import Imp . From PLF Require Import Hoare . Definition <var:y0> : string := " <var:y0> " . Definition <var:y1> : string := " <var:y1> " . Definition <var:y2> : string := " <var:y2> " . Definition <var:y3> : string := " <var:y3> " . Definition <var:y4> : string := " <var:y4> " . Definition <def:poly> := <var:y1> := <var:Q> ; <var:y2> := <var:y1> * <var:Q> ; <var:y3> := <var:y2> * <var:Q> ; <var:y4> := <var:y3> * <var:Q> ; <var:y0> := <nat:9> ; <var:y1> := <var:y1> * <nat:7> ; <var:y2> := <var:y2> * <nat:7> ; <var:y3> := <var:y3> * <nat:2> ; <var:y4> := <var:y4> * <nat:6> ; <var:C> := <var:y4> <var:C> := <var:C> + <var:y3> <var:C> := <var:C> + <var:y2> <var:C> := <var:C> + <var:y1> <var:C> := <var:C> + <var:y0> . Theorem <genH:poly_code_correct> : forall <var:v> : nat , {{ <var:Q> = <var:v> }} <def:poly> {{ <var:C> = <nat:6> * <var:v> ^ <nat:4> + <nat:2> * <var:v> ^ <nat:3> + <nat:7> * <var:v> ^ <nat:2> + <nat:7> * <var:v> + <nat:9> }} . Proof . intros . apply hoare_seq with ( Q := ( ( <var:Q> = <var:v> /\ <var:y1> = <var:v> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:Q> = <var:v> /\ <var:y1> = <var:v> /\ <var:y2> = <var:v> ^ <nat:2> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:Q> = <var:v> /\ <var:y1> = <var:v> /\ <var:y2> = <var:v> ^ <nat:2> /\ <var:y3> = <var:v> ^ <nat:3> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:Q> = <var:v> /\ <var:y1> = <var:v> /\ <var:y2> = <var:v> ^ <nat:2> /\ <var:y3> = <var:v> ^ <nat:3> /\ <var:y4> = <var:v> ^ <nat:4> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:Q> = <var:v> /\ <var:y1> = <var:v> /\ <var:y2> = <var:v> ^ <nat:2> /\ <var:y3> = <var:v> ^ <nat:3> /\ <var:y4> = <var:v> ^ <nat:4> /\ <var:y0> = <nat:9> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:Q> = <var:v> /\ <var:y1> = <nat:7> * <var:v> /\ <var:y2> = <var:v> ^ <nat:2> /\ <var:y3> = <var:v> ^ <nat:3> /\ <var:y4> = <var:v> ^ <nat:4> /\ <var:y0> = <nat:9> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:Q> = <var:v> /\ <var:y1> = <nat:7> * <var:v> /\ <var:y2> = <nat:7> * <var:v> ^ <nat:2> /\ <var:y3> = <var:v> ^ <nat:3> /\ <var:y4> = <var:v> ^ <nat:4> /\ <var:y0> = <nat:9> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:Q> = <var:v> /\ <var:y1> = <nat:7> * <var:v> /\ <var:y2> = <nat:7> * <var:v> ^ <nat:2> /\ <var:y3> = <nat:2> * <var:v> ^ <nat:3> /\ <var:y4> = <var:v> ^ <nat:4> /\ <var:y0> = <nat:9> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:Q> = <var:v> /\ <var:y1> = <nat:7> * <var:v> /\ <var:y2> = <nat:7> * <var:v> ^ <nat:2> /\ <var:y3> = <nat:2> * <var:v> ^ <nat:3> /\ <var:y4> = <nat:6> * <var:v> ^ <nat:4> /\ <var:y0> = <nat:9> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:Q> = <var:v> /\ <var:y1> = <nat:7> * <var:v> /\ <var:y2> = <nat:7> * <var:v> ^ <nat:2> /\ <var:y3> = <nat:2> * <var:v> ^ <nat:3> /\ <var:y0> = <nat:9> /\ <var:C> = <nat:6> * <var:v> ^ <nat:4> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:Q> = <var:v> /\ <var:y1> = <nat:7> * <var:v> /\ <var:y2> = <nat:7> * <var:v> ^ <nat:2> /\ <var:y0> = <nat:9> /\ <var:C> = <nat:6> * <var:v> ^ <nat:4> + <nat:2> * <var:v> ^ <nat:3> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:Q> = <var:v> /\ <var:y1> = <nat:7> * <var:v> /\ <var:y0> = <nat:9> /\ <var:C> = <nat:6> * <var:v> ^ <nat:4> + <nat:2> * <var:v> ^ <nat:3> + <nat:7> * <var:v> ^ <nat:2> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:Q> = <var:v> /\ <var:y0> = <nat:9> /\ <var:C> = <nat:6> * <var:v> ^ <nat:4> + <nat:2> * <var:v> ^ <nat:3> + <nat:7> * <var:v> ^ <nat:2> + <nat:7> * <var:v> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:Q> = <var:v> /\ <var:C> = <nat:6> * <var:v> ^ <nat:4> + <nat:2> * <var:v> ^ <nat:3> + <nat:7> * <var:v> ^ <nat:2> + <nat:7> * <var:v> + <nat:9> ) ) %assertion ) . all : eapply hoare_consequence_pre ; try ( apply hoare_asgn || assn_auto'' ) . Qed . 