\begin{document} \begin{definition} We define the following series of commands <def:poly> in \emph{Imp} as follows \begin{verbatim} <var:G0> := <nat:9> ; <var:L> := <var:G0> \end{verbatim} \end{definition} \begin{theorem} Let the following series of commands <def:poly> . Assuming ( for all natural coefficients $ <var:Q> $ ) that $ <var:k> = <var:Q> $ ahead of executing the segment of code it follows that we see $ <var:L> = <nat:9> $ . \end{theorem} \begin{proof} The course of logic for the series of instructions can be accomplished with typical Hoare techniques . Observing the proceeding line found in our list of commands , we have the environment update line binding $ <nat:9> $ toward $ <var:G0>$ . This moves the precondition $ \{ <var:k> = <var:Q> \} $ as $ \{ <var:k> = <var:Q> \land <var:G0> = <nat:9> \} $ . Looking at the next bit of code seen in our set of commands , we have the environment update line \verb | <var:L> := <var:G0> | . This forwards the condition $ \{ <var:k> = <var:Q> \land <var:G0> = <nat:9> \} $ to the postcondition $ \{ <var:k> = <var:Q> \land <var:L> = <nat:9> \} $ . \end{proof} \end{document} 
~
Require Import String . From PLF Require Import Imp . From PLF Require Import Hoare . Definition <var:G0> : string := " <var:G0> " . Definition <def:poly> := <var:G0> := <nat:9> ; <var:L> := <var:G0> . Theorem <genH:poly_code_correct> : forall <var:Q> : nat , {{ <var:k> = <var:Q> }} <def:poly> {{ <var:L> = <nat:9> }} . Proof . intros . apply hoare_seq with ( Q := ( ( <var:k> = <var:Q> /\ <var:G0> = <nat:9> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:k> = <var:Q> /\ <var:L> = <nat:9> ) ) %assertion ) . all : eapply hoare_consequence_pre ; try ( apply hoare_asgn || assn_auto'' ) . Qed . 