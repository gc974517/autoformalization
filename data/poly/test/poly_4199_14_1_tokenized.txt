\begin{document} \begin{definition} We define the following set of commands <def:poly> in \emph{Imp} as follows \begin{verbatim} <var:Y1> := <var:X> ; <var:Y2> := <var:Y1> * <var:X> ; <var:Y3> := <var:Y2> * <var:X> ; <var:Y4> := <var:Y3> * <var:X> ; <var:Y0> := <nat:9> ; <var:Y1> := <var:Y1> * <nat:2> ; <var:Y2> := <var:Y2> * <nat:8> ; <var:Y3> := <var:Y3> * <nat:3> ; <var:Y4> := <var:Y4> * <nat:9> ; <var:F> := <var:Y4> <var:F> := <var:F> + <var:Y3> <var:F> := <var:F> + <var:Y2> <var:F> := <var:F> + <var:Y1> <var:F> := <var:F> + <var:Y0> \end{verbatim} \end{definition} \begin{theorem} We define the following set of instructions <def:poly> in \emph{Imp} . Assuming that $ <var:X> = <var:I> $ ( letting positive numbers $ <var:I> $ ) ahead of executing our list of instructions , then we see $ <var:F> = <nat:9> \times <var:I> ^ <nat:4> + <nat:3> \times <var:I> ^ <nat:3> + <nat:8> \times <var:I> ^ <nat:2> + <nat:2> \times <var:I> + <nat:9> $ . \end{theorem} \begin{proof} Showing our claim about correctness for this segment of code is done using typical Hoare techniques . Following , \[ \begin{tabular} {rcl} \{ <var:X> = <var:I> \} & <var:Y1> := <var:X> & \{ <var:X> = <var:I> \land <var:Y1> = <var:I> \} \\ \{ <var:X> = <var:I> \land <var:Y1> = <var:I> \} & <var:Y2> := <var:Y1> * <var:X> & \{ <var:X> = <var:I> \land <var:Y1> = <var:I> \land <var:Y2> = <var:I> ^ <nat:2> \} \\ \{ <var:X> = <var:I> \land <var:Y1> = <var:I> \land <var:Y2> = <var:I> ^ <nat:2> \} & <var:Y3> := <var:Y2> * <var:X> & \{ <var:X> = <var:I> \land <var:Y1> = <var:I> \land <var:Y2> = <var:I> ^ <nat:2> \land <var:Y3> = <var:I> ^ <nat:3> \} \\ \{ <var:X> = <var:I> \land <var:Y1> = <var:I> \land <var:Y2> = <var:I> ^ <nat:2> \land <var:Y3> = <var:I> ^ <nat:3> \} & <var:Y4> := <var:Y3> * <var:X> & \{ <var:X> = <var:I> \land <var:Y1> = <var:I> \land <var:Y2> = <var:I> ^ <nat:2> \land <var:Y3> = <var:I> ^ <nat:3> \land <var:Y4> = <var:I> ^ <nat:4> \} \\ \{ <var:X> = <var:I> \land <var:Y1> = <var:I> \land <var:Y2> = <var:I> ^ <nat:2> \land <var:Y3> = <var:I> ^ <nat:3> \land <var:Y4> = <var:I> ^ <nat:4> \} & <var:Y0> := <nat:9> & \{ <var:X> = <var:I> \land <var:Y1> = <var:I> \land <var:Y2> = <var:I> ^ <nat:2> \land <var:Y3> = <var:I> ^ <nat:3> \land <var:Y4> = <var:I> ^ <nat:4> \land <var:Y0> = <nat:9> \} \\ \{ <var:X> = <var:I> \land <var:Y1> = <var:I> \land <var:Y2> = <var:I> ^ <nat:2> \land <var:Y3> = <var:I> ^ <nat:3> \land <var:Y4> = <var:I> ^ <nat:4> \land <var:Y0> = <nat:9> \} & <var:Y1> := <var:Y1> * <nat:2> & \{ <var:X> = <var:I> \land <var:Y1> = <nat:2> \cdot <var:I> \land <var:Y2> = <var:I> ^ <nat:2> \land <var:Y3> = <var:I> ^ <nat:3> \land <var:Y4> = <var:I> ^ <nat:4> \land <var:Y0> = <nat:9> \} \\ \{ <var:X> = <var:I> \land <var:Y1> = <nat:2> \cdot <var:I> \land <var:Y2> = <var:I> ^ <nat:2> \land <var:Y3> = <var:I> ^ <nat:3> \land <var:Y4> = <var:I> ^ <nat:4> \land <var:Y0> = <nat:9> \} & <var:Y2> := <var:Y2> * <nat:8> & \{ <var:X> = <var:I> \land <var:Y1> = <nat:2> \cdot <var:I> \land <var:Y2> = <nat:8> \cdot <var:I> ^ <nat:2> \land <var:Y3> = <var:I> ^ <nat:3> \land <var:Y4> = <var:I> ^ <nat:4> \land <var:Y0> = <nat:9> \} \\ \{ <var:X> = <var:I> \land <var:Y1> = <nat:2> \cdot <var:I> \land <var:Y2> = <nat:8> \cdot <var:I> ^ <nat:2> \land <var:Y3> = <var:I> ^ <nat:3> \land <var:Y4> = <var:I> ^ <nat:4> \land <var:Y0> = <nat:9> \} & <var:Y3> := <var:Y3> * <nat:3> & \{ <var:X> = <var:I> \land <var:Y1> = <nat:2> \cdot <var:I> \land <var:Y2> = <nat:8> \cdot <var:I> ^ <nat:2> \land <var:Y3> = <nat:3> \cdot <var:I> ^ <nat:3> \land <var:Y4> = <var:I> ^ <nat:4> \land <var:Y0> = <nat:9> \} \\ \{ <var:X> = <var:I> \land <var:Y1> = <nat:2> \cdot <var:I> \land <var:Y2> = <nat:8> \cdot <var:I> ^ <nat:2> \land <var:Y3> = <nat:3> \cdot <var:I> ^ <nat:3> \land <var:Y4> = <var:I> ^ <nat:4> \land <var:Y0> = <nat:9> \} & <var:Y4> := <var:Y4> * <nat:9> & \{ <var:X> = <var:I> \land <var:Y1> = <nat:2> \cdot <var:I> \land <var:Y2> = <nat:8> \cdot <var:I> ^ <nat:2> \land <var:Y3> = <nat:3> \cdot <var:I> ^ <nat:3> \land <var:Y4> = <nat:9> \cdot <var:I> ^ <nat:4> \land <var:Y0> = <nat:9> \} \end{tabular} This is sound by the variable update law in usual Hoare reasoning . Considering the upcoming steps found in our list of commands , we have \[ \begin{tabular} {rcl} \{ <var:X> = <var:I> \} & <var:Y1> := <var:X> & \{ <var:X> = <var:I> \land <var:Y1> = <var:I> \} \\ \{ <var:X> = <var:I> \land <var:Y1> = <var:I> \} & <var:Y2> := <var:Y1> * <var:X> & \{ <var:X> = <var:I> \land <var:Y1> = <var:I> \land <var:Y2> = <var:I> ^ <nat:2> \} \\ \{ <var:X> = <var:I> \land <var:Y1> = <var:I> \land <var:Y2> = <var:I> ^ <nat:2> \} & <var:Y3> := <var:Y2> * <var:X> & \{ <var:X> = <var:I> \land <var:Y1> = <var:I> \land <var:Y2> = <var:I> ^ <nat:2> \land <var:Y3> = <var:I> ^ <nat:3> \} \\ \{ <var:X> = <var:I> \land <var:Y1> = <var:I> \land <var:Y2> = <var:I> ^ <nat:2> \land <var:Y3> = <var:I> ^ <nat:3> \} & <var:Y4> := <var:Y3> * <var:X> & \{ <var:X> = <var:I> \land <var:Y1> = <var:I> \land <var:Y2> = <var:I> ^ <nat:2> \land <var:Y3> = <var:I> ^ <nat:3> \land <var:Y4> = <var:I> ^ <nat:4> \} \end{tabular} Considering the proceeding step in the program , \[ \begin{tabular} {rcl} \{ <var:X> = <var:I> \} & <var:Y1> := <var:X> & \{ <var:X> = <var:I> \land <var:Y1> = <var:I> \} \end{tabular} \end{proof} \end{document} 
~
Require Import String . From PLF Require Import Imp . From PLF Require Import Hoare . Definition <var:Y0> : string := " <var:Y0> " . Definition <var:Y1> : string := " <var:Y1> " . Definition <var:Y2> : string := " <var:Y2> " . Definition <var:Y3> : string := " <var:Y3> " . Definition <var:Y4> : string := " <var:Y4> " . Definition <def:poly> := <var:Y1> := <var:X> ; <var:Y2> := <var:Y1> * <var:X> ; <var:Y3> := <var:Y2> * <var:X> ; <var:Y4> := <var:Y3> * <var:X> ; <var:Y0> := <nat:9> ; <var:Y1> := <var:Y1> * <nat:2> ; <var:Y2> := <var:Y2> * <nat:8> ; <var:Y3> := <var:Y3> * <nat:3> ; <var:Y4> := <var:Y4> * <nat:9> ; <var:F> := <var:Y4> <var:F> := <var:F> + <var:Y3> <var:F> := <var:F> + <var:Y2> <var:F> := <var:F> + <var:Y1> <var:F> := <var:F> + <var:Y0> . Theorem <genH:poly_code_correct> : forall <var:I> : nat , {{ <var:X> = <var:I> }} <def:poly> {{ <var:F> = <nat:9> * <var:I> ^ <nat:4> + <nat:3> * <var:I> ^ <nat:3> + <nat:8> * <var:I> ^ <nat:2> + <nat:2> * <var:I> + <nat:9> }} . Proof . intros . apply hoare_seq with ( Q := ( ( <var:X> = <var:I> /\ <var:Y1> = <var:I> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:X> = <var:I> /\ <var:Y1> = <var:I> /\ <var:Y2> = <var:I> ^ <nat:2> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:X> = <var:I> /\ <var:Y1> = <var:I> /\ <var:Y2> = <var:I> ^ <nat:2> /\ <var:Y3> = <var:I> ^ <nat:3> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:X> = <var:I> /\ <var:Y1> = <var:I> /\ <var:Y2> = <var:I> ^ <nat:2> /\ <var:Y3> = <var:I> ^ <nat:3> /\ <var:Y4> = <var:I> ^ <nat:4> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:X> = <var:I> /\ <var:Y1> = <var:I> /\ <var:Y2> = <var:I> ^ <nat:2> /\ <var:Y3> = <var:I> ^ <nat:3> /\ <var:Y4> = <var:I> ^ <nat:4> /\ <var:Y0> = <nat:9> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:X> = <var:I> /\ <var:Y1> = <nat:2> * <var:I> /\ <var:Y2> = <var:I> ^ <nat:2> /\ <var:Y3> = <var:I> ^ <nat:3> /\ <var:Y4> = <var:I> ^ <nat:4> /\ <var:Y0> = <nat:9> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:X> = <var:I> /\ <var:Y1> = <nat:2> * <var:I> /\ <var:Y2> = <nat:8> * <var:I> ^ <nat:2> /\ <var:Y3> = <var:I> ^ <nat:3> /\ <var:Y4> = <var:I> ^ <nat:4> /\ <var:Y0> = <nat:9> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:X> = <var:I> /\ <var:Y1> = <nat:2> * <var:I> /\ <var:Y2> = <nat:8> * <var:I> ^ <nat:2> /\ <var:Y3> = <nat:3> * <var:I> ^ <nat:3> /\ <var:Y4> = <var:I> ^ <nat:4> /\ <var:Y0> = <nat:9> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:X> = <var:I> /\ <var:Y1> = <nat:2> * <var:I> /\ <var:Y2> = <nat:8> * <var:I> ^ <nat:2> /\ <var:Y3> = <nat:3> * <var:I> ^ <nat:3> /\ <var:Y4> = <nat:9> * <var:I> ^ <nat:4> /\ <var:Y0> = <nat:9> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:X> = <var:I> /\ <var:Y1> = <nat:2> * <var:I> /\ <var:Y2> = <nat:8> * <var:I> ^ <nat:2> /\ <var:Y3> = <nat:3> * <var:I> ^ <nat:3> /\ <var:Y0> = <nat:9> /\ <var:F> = <nat:9> * <var:I> ^ <nat:4> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:X> = <var:I> /\ <var:Y1> = <nat:2> * <var:I> /\ <var:Y2> = <nat:8> * <var:I> ^ <nat:2> /\ <var:Y0> = <nat:9> /\ <var:F> = <nat:9> * <var:I> ^ <nat:4> + <nat:3> * <var:I> ^ <nat:3> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:X> = <var:I> /\ <var:Y1> = <nat:2> * <var:I> /\ <var:Y0> = <nat:9> /\ <var:F> = <nat:9> * <var:I> ^ <nat:4> + <nat:3> * <var:I> ^ <nat:3> + <nat:8> * <var:I> ^ <nat:2> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:X> = <var:I> /\ <var:Y0> = <nat:9> /\ <var:F> = <nat:9> * <var:I> ^ <nat:4> + <nat:3> * <var:I> ^ <nat:3> + <nat:8> * <var:I> ^ <nat:2> + <nat:2> * <var:I> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:X> = <var:I> /\ <var:F> = <nat:9> * <var:I> ^ <nat:4> + <nat:3> * <var:I> ^ <nat:3> + <nat:8> * <var:I> ^ <nat:2> + <nat:2> * <var:I> + <nat:9> ) ) %assertion ) . all : eapply hoare_consequence_pre ; try ( apply hoare_asgn || assn_auto'' ) . Qed . 