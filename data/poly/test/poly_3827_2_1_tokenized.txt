\begin{document} \begin{definition} We define a code <def:poly> in \emph{Imp} as follows \begin{verbatim} <var:w0> := <nat:9> ; <var:z> := <var:w0> \end{verbatim} \end{definition} \begin{theorem} Assuming $ <var:y> = <var:u> $ prior to the evaluation of the series of commands it holds that $ <var:z> = <nat:9> $ after code segment has terminated . \end{theorem} \begin{proof} Showing our claim about correctness for this code segment can be demonstrated using standard Hoare reasoning . Going forward , \verb | { <var:y> = <var:u> } <var:w0> := <nat:9> { <var:y> = <var:u> \land <var:w0> = <nat:9> } | and \verb | { <var:y> = <var:u> \land <var:w0> = <nat:9> } <var:z> := <var:w0{ <var:y> = <var:u> \land <var:z> = <nat:9> } | . \end{proof} \end{document} 
~
Require Import String . From PLF Require Import Imp . From PLF Require Import Hoare . Definition <var:w0> : string := " <var:w0> " . Definition <def:poly> := <var:w0> := <nat:9> ; <var:z> := <var:w0> . Theorem <genH:poly_code_correct> : forall <var:u> : nat , {{ <var:y> = <var:u> }} <def:poly> {{ <var:z> = <nat:9> }} . Proof . intros . apply hoare_seq with ( Q := ( ( <var:y> = <var:u> /\ <var:w0> = <nat:9> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:y> = <var:u> /\ <var:z> = <nat:9> ) ) %assertion ) . all : eapply hoare_consequence_pre ; try ( apply hoare_asgn || assn_auto'' ) . Qed . 