\begin{document} \begin{definition} Consider a list of commands <def:poly> in \emph{Imp} as follows \begin{verbatim} <var:c0> := <nat:9> ; <var:T> := <var:c0> \end{verbatim} \end{definition} \begin{theorem} Given it to hold that $ <var:b> = <var:O> $ --- given all positive integer coefficients $ <var:O> $ --- before executing this segment of code , it must be that we see $ <var:T> = <nat:9> $ . \end{theorem} \begin{proof} The course of logic for our code can be shown by Hoare logic . Considering the proceeding command contained in our code segment , we have \verb | { <var:b> = <var:O> } <var:c0> := <nat:9> { <var:b> = <var:O> \land <var:c0> = <nat:9> } | . Shifting focus toward the following step seen in our code segment , we see \verb | { <var:b> = <var:O> } <var:c0> := <nat:9> { <var:b> = <var:O> \land <var:c0> = <nat:9> } | . \end{proof} \end{document} 
~
Require Import String . From PLF Require Import Imp . From PLF Require Import Hoare . Definition <var:c0> : string := " <var:c0> " . Definition <def:poly> := <var:c0> := <nat:9> ; <var:T> := <var:c0> . Theorem <genH:poly_code_correct> : forall <var:O> : nat , {{ <var:b> = <var:O> }} <def:poly> {{ <var:T> = <nat:9> }} . Proof . intros . apply hoare_seq with ( Q := ( ( <var:b> = <var:O> /\ <var:c0> = <nat:9> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:b> = <var:O> /\ <var:T> = <nat:9> ) ) %assertion ) . all : eapply hoare_consequence_pre ; try ( apply hoare_asgn || assn_auto'' ) . Qed . 