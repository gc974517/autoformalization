\begin{document} \begin{definition} Take a list of instructions <def:poly> in \emph{Imp} as follows \begin{verbatim} <var:L1> := <var:Y> ; <var:L2> := <var:L1> * <var:Y> ; <var:L3> := <var:L2> * <var:Y> ; <var:L4> := <var:L3> * <var:Y> ; <var:L0> := <nat:2> ; <var:L1> := <var:L1> * <nat:7> ; <var:L2> := <var:L2> * <nat:9> ; <var:L3> := <var:L3> * <nat:5> ; <var:L4> := <var:L4> * <nat:6> ; <var:g> := <var:L4> <var:g> := <var:g> + <var:L3> <var:g> := <var:g> + <var:L2> <var:g> := <var:g> + <var:L1> <var:g> := <var:g> + <var:L0> \end{verbatim} \end{definition} \begin{theorem} Define a set of instructions <def:poly> . Assuming $ <var:Y> = <var:l> $ before the evaluation of our list of commands it must be that we have $ <var:g> = <nat:6> * <var:l> ^ <nat:4> + <nat:5> * <var:l> ^ <nat:3> + <nat:9> * <var:l> ^ <nat:2> + <nat:7> * <var:l> + <nat:2> $ when series of instructions is done executing . \end{theorem} \begin{proof} The flow of logic for this program is shown through typical Hoare logic . Taking another step toward the next steps contained in the series of commands , \begin{verbatim} { <var:Y> = <var:l> } <var:L1> := <var:Y> { <var:Y> = <var:l> \land <var:L1> = <var:l> } { <var:Y> = <var:l> \land <var:L1> = <var:l> } <var:L2> := <var:L1> * <var:Y> { <var:Y> = <var:l> \land <var:L1> = <var:l> \land <var:L2> = <var:l> ^ <nat:2> } { <var:Y> = <var:l> \land <var:L1> = <var:l> \land <var:L2> = <var:l> ^ <nat:2> } <var:L3> := <var:L2> * <var:Y> { <var:Y> = <var:l> \land <var:L1> = <var:l> \land <var:L2> = <var:l> ^ <nat:2> \land <var:L3> = <var:l> ^ <nat:3> } { <var:Y> = <var:l> \land <var:L1> = <var:l> \land <var:L2> = <var:l> ^ <nat:2> \land <var:L3> = <var:l> ^ <nat:3> } <var:L4> := <var:L3> * <var:Y> { <var:Y> = <var:l> \land <var:L1> = <var:l> \land <var:L2> = <var:l> ^ <nat:2> \land <var:L3> = <var:l> ^ <nat:3> \land <var:L4> = <var:l> ^ <nat:4> } { <var:Y> = <var:l> \land <var:L1> = <var:l> \land <var:L2> = <var:l> ^ <nat:2> \land <var:L3> = <var:l> ^ <nat:3> \land <var:L4> = <var:l> ^ <nat:4> } <var:L0> := <nat:2> { <var:Y> = <var:l> \land <var:L1> = <var:l> \land <var:L2> = <var:l> ^ <nat:2> \land <var:L3> = <var:l> ^ <nat:3> \land <var:L4> = <var:l> ^ <nat:4> \land <var:L0> = <nat:2> } { <var:Y> = <var:l> \land <var:L1> = <var:l> \land <var:L2> = <var:l> ^ <nat:2> \land <var:L3> = <var:l> ^ <nat:3> \land <var:L4> = <var:l> ^ <nat:4> \land <var:L0> = <nat:2> } <var:L1> := <var:L1> * <nat:7> { <var:Y> = <var:l> \land <var:L1> = <nat:7> \times <var:l> \land <var:L2> = <var:l> ^ <nat:2> \land <var:L3> = <var:l> ^ <nat:3> \land <var:L4> = <var:l> ^ <nat:4> \land <var:L0> = <nat:2> } { <var:Y> = <var:l> \land <var:L1> = <nat:7> \times <var:l> \land <var:L2> = <var:l> ^ <nat:2> \land <var:L3> = <var:l> ^ <nat:3> \land <var:L4> = <var:l> ^ <nat:4> \land <var:L0> = <nat:2> } <var:L2> := <var:L2> * <nat:9> { <var:Y> = <var:l> \land <var:L1> = <nat:7> \times <var:l> \land <var:L2> = <nat:9> \times <var:l> ^ <nat:2> \land <var:L3> = <var:l> ^ <nat:3> \land <var:L4> = <var:l> ^ <nat:4> \land <var:L0> = <nat:2> } { <var:Y> = <var:l> \land <var:L1> = <nat:7> \times <var:l> \land <var:L2> = <nat:9> \times <var:l> ^ <nat:2> \land <var:L3> = <var:l> ^ <nat:3> \land <var:L4> = <var:l> ^ <nat:4> \land <var:L0> = <nat:2> } <var:L3> := <var:L3> * <nat:5> { <var:Y> = <var:l> \land <var:L1> = <nat:7> \times <var:l> \land <var:L2> = <nat:9> \times <var:l> ^ <nat:2> \land <var:L3> = <nat:5> \times <var:l> ^ <nat:3> \land <var:L4> = <var:l> ^ <nat:4> \land <var:L0> = <nat:2> } { <var:Y> = <var:l> \land <var:L1> = <nat:7> \times <var:l> \land <var:L2> = <nat:9> \times <var:l> ^ <nat:2> \land <var:L3> = <nat:5> \times <var:l> ^ <nat:3> \land <var:L4> = <var:l> ^ <nat:4> \land <var:L0> = <nat:2> } <var:L4> := <var:L4> * <nat:6> { <var:Y> = <var:l> \land <var:L1> = <nat:7> \times <var:l> \land <var:L2> = <nat:9> \times <var:l> ^ <nat:2> \land <var:L3> = <nat:5> \times <var:l> ^ <nat:3> \land <var:L4> = <nat:6> \times <var:l> ^ <nat:4> \land <var:L0> = <nat:2> } { <var:Y> = <var:l> \land <var:L1> = <nat:7> \times <var:l> \land <var:L2> = <nat:9> \times <var:l> ^ <nat:2> \land <var:L3> = <nat:5> \times <var:l> ^ <nat:3> \land <var:L4> = <nat:6> \times <var:l> ^ <nat:4> \land <var:L0> = <nat:2> } <var:g> := <var:L4{ <var:Y> = <var:l> \land <var:L1> = <nat:7> \times <var:l> \land <var:L2> = <nat:9> \times <var:l> ^ <nat:2> \land <var:L3> = <nat:5> \times <var:l> ^ <nat:3> \land <var:L0> = <nat:2> \land <var:g> = <nat:6> \times <var:l> ^ <nat:4> } { <var:Y> = <var:l> \land <var:L1> = <nat:7> \times <var:l> \land <var:L2> = <nat:9> \times <var:l> ^ <nat:2> \land <var:L3> = <nat:5> \times <var:l> ^ <nat:3> \land <var:L0> = <nat:2> \land <var:g> = <nat:6> \times <var:l> ^ <nat:4> } <var:g> := <var:g> + <var:L3{ <var:Y> = <var:l> \land <var:L1> = <nat:7> \times <var:l> \land <var:L2> = <nat:9> \times <var:l> ^ <nat:2> \land <var:L0> = <nat:2> \land <var:g> = <nat:6> \times <var:l> ^ <nat:4> + <nat:5> \times <var:l> ^ <nat:3> } { <var:Y> = <var:l> \land <var:L1> = <nat:7> \times <var:l> \land <var:L2> = <nat:9> \times <var:l> ^ <nat:2> \land <var:L0> = <nat:2> \land <var:g> = <nat:6> \times <var:l> ^ <nat:4> + <nat:5> \times <var:l> ^ <nat:3> } <var:g> := <var:g> + <var:L2{ <var:Y> = <var:l> \land <var:L1> = <nat:7> \times <var:l> \land <var:L0> = <nat:2> \land <var:g> = <nat:6> \times <var:l> ^ <nat:4> + <nat:5> \times <var:l> ^ <nat:3> + <nat:9> \times <var:l> ^ <nat:2> } { <var:Y> = <var:l> \land <var:L1> = <nat:7> \times <var:l> \land <var:L0> = <nat:2> \land <var:g> = <nat:6> \times <var:l> ^ <nat:4> + <nat:5> \times <var:l> ^ <nat:3> + <nat:9> \times <var:l> ^ <nat:2> } <var:g> := <var:g> + <var:L1{ <var:Y> = <var:l> \land <var:L0> = <nat:2> \land <var:g> = <nat:6> \times <var:l> ^ <nat:4> + <nat:5> \times <var:l> ^ <nat:3> + <nat:9> \times <var:l> ^ <nat:2> + <nat:7> \times <var:l> } \end{verbatim} Going to the next step , \begin{verbatim} { <var:Y> = <var:l> } <var:L1> := <var:Y> { <var:Y> = <var:l> \land <var:L1> = <var:l> } \end{verbatim} This is known to be sound through the environment update scheme from usual Hoare techniques . \end{proof} \end{document} 
~
Require Import String . From PLF Require Import Imp . From PLF Require Import Hoare . Definition <var:L0> : string := " <var:L0> " . Definition <var:L1> : string := " <var:L1> " . Definition <var:L2> : string := " <var:L2> " . Definition <var:L3> : string := " <var:L3> " . Definition <var:L4> : string := " <var:L4> " . Definition <def:poly> := <var:L1> := <var:Y> ; <var:L2> := <var:L1> * <var:Y> ; <var:L3> := <var:L2> * <var:Y> ; <var:L4> := <var:L3> * <var:Y> ; <var:L0> := <nat:2> ; <var:L1> := <var:L1> * <nat:7> ; <var:L2> := <var:L2> * <nat:9> ; <var:L3> := <var:L3> * <nat:5> ; <var:L4> := <var:L4> * <nat:6> ; <var:g> := <var:L4> <var:g> := <var:g> + <var:L3> <var:g> := <var:g> + <var:L2> <var:g> := <var:g> + <var:L1> <var:g> := <var:g> + <var:L0> . Theorem <genH:poly_code_correct> : forall <var:l> : nat , {{ <var:Y> = <var:l> }} <def:poly> {{ <var:g> = <nat:6> * <var:l> ^ <nat:4> + <nat:5> * <var:l> ^ <nat:3> + <nat:9> * <var:l> ^ <nat:2> + <nat:7> * <var:l> + <nat:2> }} . Proof . intros . apply hoare_seq with ( Q := ( ( <var:Y> = <var:l> /\ <var:L1> = <var:l> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:Y> = <var:l> /\ <var:L1> = <var:l> /\ <var:L2> = <var:l> ^ <nat:2> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:Y> = <var:l> /\ <var:L1> = <var:l> /\ <var:L2> = <var:l> ^ <nat:2> /\ <var:L3> = <var:l> ^ <nat:3> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:Y> = <var:l> /\ <var:L1> = <var:l> /\ <var:L2> = <var:l> ^ <nat:2> /\ <var:L3> = <var:l> ^ <nat:3> /\ <var:L4> = <var:l> ^ <nat:4> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:Y> = <var:l> /\ <var:L1> = <var:l> /\ <var:L2> = <var:l> ^ <nat:2> /\ <var:L3> = <var:l> ^ <nat:3> /\ <var:L4> = <var:l> ^ <nat:4> /\ <var:L0> = <nat:2> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:Y> = <var:l> /\ <var:L1> = <nat:7> * <var:l> /\ <var:L2> = <var:l> ^ <nat:2> /\ <var:L3> = <var:l> ^ <nat:3> /\ <var:L4> = <var:l> ^ <nat:4> /\ <var:L0> = <nat:2> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:Y> = <var:l> /\ <var:L1> = <nat:7> * <var:l> /\ <var:L2> = <nat:9> * <var:l> ^ <nat:2> /\ <var:L3> = <var:l> ^ <nat:3> /\ <var:L4> = <var:l> ^ <nat:4> /\ <var:L0> = <nat:2> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:Y> = <var:l> /\ <var:L1> = <nat:7> * <var:l> /\ <var:L2> = <nat:9> * <var:l> ^ <nat:2> /\ <var:L3> = <nat:5> * <var:l> ^ <nat:3> /\ <var:L4> = <var:l> ^ <nat:4> /\ <var:L0> = <nat:2> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:Y> = <var:l> /\ <var:L1> = <nat:7> * <var:l> /\ <var:L2> = <nat:9> * <var:l> ^ <nat:2> /\ <var:L3> = <nat:5> * <var:l> ^ <nat:3> /\ <var:L4> = <nat:6> * <var:l> ^ <nat:4> /\ <var:L0> = <nat:2> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:Y> = <var:l> /\ <var:L1> = <nat:7> * <var:l> /\ <var:L2> = <nat:9> * <var:l> ^ <nat:2> /\ <var:L3> = <nat:5> * <var:l> ^ <nat:3> /\ <var:L0> = <nat:2> /\ <var:g> = <nat:6> * <var:l> ^ <nat:4> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:Y> = <var:l> /\ <var:L1> = <nat:7> * <var:l> /\ <var:L2> = <nat:9> * <var:l> ^ <nat:2> /\ <var:L0> = <nat:2> /\ <var:g> = <nat:6> * <var:l> ^ <nat:4> + <nat:5> * <var:l> ^ <nat:3> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:Y> = <var:l> /\ <var:L1> = <nat:7> * <var:l> /\ <var:L0> = <nat:2> /\ <var:g> = <nat:6> * <var:l> ^ <nat:4> + <nat:5> * <var:l> ^ <nat:3> + <nat:9> * <var:l> ^ <nat:2> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:Y> = <var:l> /\ <var:L0> = <nat:2> /\ <var:g> = <nat:6> * <var:l> ^ <nat:4> + <nat:5> * <var:l> ^ <nat:3> + <nat:9> * <var:l> ^ <nat:2> + <nat:7> * <var:l> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:Y> = <var:l> /\ <var:g> = <nat:6> * <var:l> ^ <nat:4> + <nat:5> * <var:l> ^ <nat:3> + <nat:9> * <var:l> ^ <nat:2> + <nat:7> * <var:l> + <nat:2> ) ) %assertion ) . all : eapply hoare_consequence_pre ; try ( apply hoare_asgn || assn_auto'' ) . Qed . 