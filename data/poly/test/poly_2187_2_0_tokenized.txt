\begin{document} \begin{theorem} Consider a list of instructions in \emph{Imp} as \begin{verbatim} <var:Q0> := <nat:4> ; <var:F> := <var:Q0> \end{verbatim} Given --- for all natural numbers $ <var:P> $ --- that $ <var:n> = <var:P> $ prior to interpreting the series of instructions it follows that we have $ <var:F> = <nat:4> $ when set of instructions is done . \end{theorem} \begin{proof} Arguing the correctness of the list of commands can be accomplished with standard Hoare logic . Considering the proceeding statement found in our list of instructions , the command assigning $ <nat:4> $ toward $ <var:Q0>$ . This line transfers the condition $ \{ <var:n> = <var:P> \} $ toward $ \{ <var:n> = <var:P> \land <var:Q0> = <nat:4> \} $ . This is given using the assignment scheme given in Hoare logic . Looking at the subsequent bit of code found in the list of instructions , we see the binding command giving $ <var:Q0$ into $ <var:F>$ . This statement moves the condition $ \{ <var:n> = <var:P> \land <var:Q0> = <nat:4> \} $ to the condition $ \{ <var:n> = <var:P> \land <var:F> = <nat:4> \} $ . \end{proof} \end{document} 
~
Require Import String . From PLF Require Import Imp . From PLF Require Import Hoare . Definition <var:Q0> : string := " <var:Q0> " . Theorem <genH:poly_code_correct> : forall <var:P> : nat , {{ <var:n> = <var:P> }} <var:Q0> := <nat:4> ; <var:F> := <var:Q0> {{ <var:F> = <nat:4> }} . Proof . intros . apply hoare_seq with ( Q := ( ( <var:n> = <var:P> /\ <var:Q0> = <nat:4> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:n> = <var:P> /\ <var:F> = <nat:4> ) ) %assertion ) . all : eapply hoare_consequence_pre ; try ( apply hoare_asgn || assn_auto'' ) . Qed . 