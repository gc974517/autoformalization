\begin{document} \begin{theorem} Define a series of commands in \emph{Imp} : \begin{verbatim} <var:o> := <nat:3> ; <var:o> := <nat:3> + <var:o> * <var:e> ; <var:o> := <nat:4> + <var:o> * <var:e> \end{verbatim} Given $ <var:e> = <var:q> $ ( given any $ <var:q> \in \mathbb{N} $ ) before interpreting the code segment it follows that we have $ <var:o> = <nat:3> \times <var:q> ^ <nat:2> + <nat:3> \times <var:q> + <nat:4> $ . \end{theorem} \begin{proof} Applying standard Hoare logic results in : \begin{eqnarray} \{ <var:e> = <var:q> \} \\ <var:o> := <nat:3> ; \\ \{ <var:e> = <var:q> \land <var:o> = <nat:3> \} \\ <var:o> := <nat:3> + <var:o> * <var:e> ; \\ \{ <var:e> = <var:q> \land <var:o> = <nat:3> \cdot <var:q> + <nat:3> \} \\ <var:o> := <nat:4> + <var:o> * <var:e> \\ \{ <var:e> = <var:q> \land <var:o> = <nat:3> \cdot <var:q> ^ <nat:2> + <nat:3> \cdot <var:q> + <nat:4> \} \end{eqnarray} Thus , the set of commands has been demonstrated to be correct . \end{proof} \end{document} 
~
Require Import String . From PLF Require Import Imp . From PLF Require Import Hoare . Theorem <genH:poly_code_correct> : forall <var:q> : nat , {{ <var:e> = <var:q> }} <var:o> := <nat:3> ; <var:o> := <nat:3> + <var:o> * <var:e> ; <var:o> := <nat:4> + <var:o> * <var:e> {{ <var:o> = <nat:3> * <var:q> ^ <nat:2> + <nat:3> * <var:q> + <nat:4> }} . Proof . intros . apply hoare_seq with ( Q := ( ( <var:e> = <var:q> /\ <var:o> = <nat:3> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:e> = <var:q> /\ <var:o> = <nat:3> * <var:q> + <nat:3> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:e> = <var:q> /\ <var:o> = <nat:3> * <var:q> ^ <nat:2> + <nat:3> * <var:q> + <nat:4> ) ) %assertion ) . all : eapply hoare_consequence_pre ; try ( apply hoare_asgn || assn_auto'' ) . Qed . 