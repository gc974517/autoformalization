\begin{document} \begin{theorem} We define the following program as follows \begin{verbatim} <var:j> := <nat:3> ; <var:j> := <nat:2> + <var:j> * <var:V> ; <var:j> := <nat:4> + <var:j> * <var:V> \end{verbatim} Assume , taking positive integer coefficients $ <var:o> $ , that we have $ <var:V> = <var:o> $ before the execution of this list of instructions it must be that we see $ <var:j> = <nat:3> * <var:o> ^ <nat:2> + <nat:2> * <var:o> + <nat:4> $ after list of commands executes . \end{theorem} \begin{proof} We can see that this decorated set of instructions . \begin{eqnarray} \{ <var:V> = <var:o> \} \\ <var:j> := <nat:3> ; \\ \{ <var:V> = <var:o> \land <var:j> = <nat:3> \} \\ <var:j> := <nat:2> + <var:j> * <var:V> ; \\ \{ <var:V> = <var:o> \land <var:j> = <nat:3> \cdot <var:o> + <nat:2> \} \\ <var:j> := <nat:4> + <var:j> * <var:V> \\ \{ <var:V> = <var:o> \land <var:j> = <nat:3> \cdot <var:o> ^ <nat:2> + <nat:2> \cdot <var:o> + <nat:4> \} \end{eqnarray} The application of standard Hoare techniques finishes the proof . \end{proof} \end{document} 
~
Require Import String . From PLF Require Import Imp . From PLF Require Import Hoare . Theorem <genH:poly_code_correct> : forall <var:o> : nat , {{ <var:V> = <var:o> }} <var:j> := <nat:3> ; <var:j> := <nat:2> + <var:j> * <var:V> ; <var:j> := <nat:4> + <var:j> * <var:V> {{ <var:j> = <nat:3> * <var:o> ^ <nat:2> + <nat:2> * <var:o> + <nat:4> }} . Proof . intros . apply hoare_seq with ( Q := ( ( <var:V> = <var:o> /\ <var:j> = <nat:3> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:V> = <var:o> /\ <var:j> = <nat:3> * <var:o> + <nat:2> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:V> = <var:o> /\ <var:j> = <nat:3> * <var:o> ^ <nat:2> + <nat:2> * <var:o> + <nat:4> ) ) %assertion ) . all : eapply hoare_consequence_pre ; try ( apply hoare_asgn || assn_auto'' ) . Qed . 