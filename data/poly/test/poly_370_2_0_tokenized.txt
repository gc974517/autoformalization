\begin{document} \begin{theorem} Let the following series of instructions as follows \begin{verbatim} <var:L0> := <nat:1> ; <var:Q> := <var:L0> \end{verbatim} Allow for $ <var:C> \in \mathbb{N} $ that we have $ <var:a> = <var:C> $ prior to executing the set of commands it holds that $ <var:Q> = <nat:1> $ . \end{theorem} \begin{proof} The method of proof for our series of commands can be demonstrated using Hoare techniques . Next , we have \[ \begin{tabular} {rcl} \{ <var:a> = <var:C> \} & <var:L0> := <nat:1> & \{ <var:a> = <var:C> \land <var:L0> = <nat:1> \} \\ \{ <var:a> = <var:C> \land <var:L0> = <nat:1> \} & <var:Q> := <var:L0& \{ <var:a> = <var:C> \land <var:Q> = <nat:1> \} \end{tabular} \end{proof} \end{document} 
~
Require Import String . From PLF Require Import Imp . From PLF Require Import Hoare . Definition <var:L0> : string := " <var:L0> " . Theorem <genH:poly_code_correct> : forall <var:C> : nat , {{ <var:a> = <var:C> }} <var:L0> := <nat:1> ; <var:Q> := <var:L0> {{ <var:Q> = <nat:1> }} . Proof . intros . apply hoare_seq with ( Q := ( ( <var:a> = <var:C> /\ <var:L0> = <nat:1> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:a> = <var:C> /\ <var:Q> = <nat:1> ) ) %assertion ) . all : eapply hoare_consequence_pre ; try ( apply hoare_asgn || assn_auto'' ) . Qed . 