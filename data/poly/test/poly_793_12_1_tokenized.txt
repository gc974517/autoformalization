\begin{document} \begin{theorem} Take the following code as follows \begin{verbatim} <var:q1> := <var:w> ; <var:q2> := <var:q1> * <var:w> ; <var:q3> := <var:q2> * <var:w> ; <var:q4> := <var:q3> * <var:w> ; <var:q0> := <nat:2> ; <var:q1> := <var:q1> * <nat:4> ; <var:q2> := <var:q2> * <nat:1> ; <var:q4> := <var:q4> * <nat:2> ; <var:P> := <var:q4> <var:P> := <var:P> + <var:q2> <var:P> := <var:P> + <var:q1> <var:P> := <var:P> + <var:q0> \end{verbatim} Allow ( for any natural numbers $ <var:O> $ ) it to be that $ <var:w> = <var:O> $ prior to evaluating our segment of code , it holds that we see $ <var:P> = <nat:2> \cdot <var:O> ^ <nat:4> + <nat:1> \cdot <var:O> ^ <nat:2> + <nat:4> \cdot <var:O> + <nat:2> $ . \end{theorem} \begin{proof} Arguing the correctness of our code segment is given by Hoare reasoning . Advancing , we have \begin{verbatim} { <var:w> = <var:O> } <var:q1> := <var:w> { <var:w> = <var:O> \land <var:q1> = <var:O> } { <var:w> = <var:O> \land <var:q1> = <var:O> } <var:q2> := <var:q1> * <var:w> { <var:w> = <var:O> \land <var:q1> = <var:O> \land <var:q2> = <var:O> ^ <nat:2> } { <var:w> = <var:O> \land <var:q1> = <var:O> \land <var:q2> = <var:O> ^ <nat:2> } <var:q3> := <var:q2> * <var:w> { <var:w> = <var:O> \land <var:q1> = <var:O> \land <var:q2> = <var:O> ^ <nat:2> \land <var:q3> = <var:O> ^ <nat:3> } { <var:w> = <var:O> \land <var:q1> = <var:O> \land <var:q2> = <var:O> ^ <nat:2> \land <var:q3> = <var:O> ^ <nat:3> } <var:q4> := <var:q3> * <var:w> { <var:w> = <var:O> \land <var:q1> = <var:O> \land <var:q2> = <var:O> ^ <nat:2> \land <var:q3> = <var:O> ^ <nat:3> \land <var:q4> = <var:O> ^ <nat:4> } { <var:w> = <var:O> \land <var:q1> = <var:O> \land <var:q2> = <var:O> ^ <nat:2> \land <var:q3> = <var:O> ^ <nat:3> \land <var:q4> = <var:O> ^ <nat:4> } <var:q0> := <nat:2> { <var:w> = <var:O> \land <var:q1> = <var:O> \land <var:q2> = <var:O> ^ <nat:2> \land <var:q3> = <var:O> ^ <nat:3> \land <var:q4> = <var:O> ^ <nat:4> \land <var:q0> = <nat:2> } { <var:w> = <var:O> \land <var:q1> = <var:O> \land <var:q2> = <var:O> ^ <nat:2> \land <var:q3> = <var:O> ^ <nat:3> \land <var:q4> = <var:O> ^ <nat:4> \land <var:q0> = <nat:2> } <var:q1> := <var:q1> * <nat:4> { <var:w> = <var:O> \land <var:q1> = <nat:4> \cdot <var:O> \land <var:q2> = <var:O> ^ <nat:2> \land <var:q3> = <var:O> ^ <nat:3> \land <var:q4> = <var:O> ^ <nat:4> \land <var:q0> = <nat:2> } { <var:w> = <var:O> \land <var:q1> = <nat:4> \cdot <var:O> \land <var:q2> = <var:O> ^ <nat:2> \land <var:q3> = <var:O> ^ <nat:3> \land <var:q4> = <var:O> ^ <nat:4> \land <var:q0> = <nat:2> } <var:q2> := <var:q2> * <nat:1> { <var:w> = <var:O> \land <var:q1> = <nat:4> \cdot <var:O> \land <var:q2> = <nat:1> \cdot <var:O> ^ <nat:2> \land <var:q3> = <var:O> ^ <nat:3> \land <var:q4> = <var:O> ^ <nat:4> \land <var:q0> = <nat:2> } { <var:w> = <var:O> \land <var:q1> = <nat:4> \cdot <var:O> \land <var:q2> = <nat:1> \cdot <var:O> ^ <nat:2> \land <var:q3> = <var:O> ^ <nat:3> \land <var:q4> = <var:O> ^ <nat:4> \land <var:q0> = <nat:2> } <var:q4> := <var:q4> * <nat:2> { <var:w> = <var:O> \land <var:q1> = <nat:4> \cdot <var:O> \land <var:q2> = <nat:1> \cdot <var:O> ^ <nat:2> \land <var:q3> = <var:O> ^ <nat:3> \land <var:q4> = <nat:2> \cdot <var:O> ^ <nat:4> \land <var:q0> = <nat:2> } { <var:w> = <var:O> \land <var:q1> = <nat:4> \cdot <var:O> \land <var:q2> = <nat:1> \cdot <var:O> ^ <nat:2> \land <var:q3> = <var:O> ^ <nat:3> \land <var:q4> = <nat:2> \cdot <var:O> ^ <nat:4> \land <var:q0> = <nat:2> } <var:P> := <var:q4{ <var:w> = <var:O> \land <var:q1> = <nat:4> \cdot <var:O> \land <var:q2> = <nat:1> \cdot <var:O> ^ <nat:2> \land <var:q3> = <var:O> ^ <nat:3> \land <var:q0> = <nat:2> \land <var:P> = <nat:2> \cdot <var:O> ^ <nat:4> } { <var:w> = <var:O> \land <var:q1> = <nat:4> \cdot <var:O> \land <var:q2> = <nat:1> \cdot <var:O> ^ <nat:2> \land <var:q3> = <var:O> ^ <nat:3> \land <var:q0> = <nat:2> \land <var:P> = <nat:2> \cdot <var:O> ^ <nat:4> } <var:P> := <var:P> + <var:q2{ <var:w> = <var:O> \land <var:q1> = <nat:4> \cdot <var:O> \land <var:q0> = <nat:2> \land <var:P> = <nat:2> \cdot <var:O> ^ <nat:4> + <nat:1> \cdot <var:O> ^ <nat:2> } { <var:w> = <var:O> \land <var:q1> = <nat:4> \cdot <var:O> \land <var:q0> = <nat:2> \land <var:P> = <nat:2> \cdot <var:O> ^ <nat:4> + <nat:1> \cdot <var:O> ^ <nat:2> } <var:P> := <var:P> + <var:q1{ <var:w> = <var:O> \land <var:q0> = <nat:2> \land <var:P> = <nat:2> \cdot <var:O> ^ <nat:4> + <nat:1> \cdot <var:O> ^ <nat:2> + <nat:4> \cdot <var:O> } { <var:w> = <var:O> \land <var:q0> = <nat:2> \land <var:P> = <nat:2> \cdot <var:O> ^ <nat:4> + <nat:1> \cdot <var:O> ^ <nat:2> + <nat:4> \cdot <var:O> } <var:P> := <var:P> + <var:q0{ <var:w> = <var:O> \land <var:P> = <nat:2> \cdot <var:O> ^ <nat:4> + <nat:1> \cdot <var:O> ^ <nat:2> + <nat:4> \cdot <var:O> + <nat:2> } \end{verbatim} \end{proof} \end{document} 
~
Require Import String . From PLF Require Import Imp . From PLF Require Import Hoare . Definition <var:q0> : string := " <var:q0> " . Definition <var:q1> : string := " <var:q1> " . Definition <var:q2> : string := " <var:q2> " . Definition <var:q3> : string := " <var:q3> " . Definition <var:q4> : string := " <var:q4> " . Theorem <genH:poly_code_correct> : forall <var:O> : nat , {{ <var:w> = <var:O> }} <var:q1> := <var:w> ; <var:q2> := <var:q1> * <var:w> ; <var:q3> := <var:q2> * <var:w> ; <var:q4> := <var:q3> * <var:w> ; <var:q0> := <nat:2> ; <var:q1> := <var:q1> * <nat:4> ; <var:q2> := <var:q2> * <nat:1> ; <var:q4> := <var:q4> * <nat:2> ; <var:P> := <var:q4> <var:P> := <var:P> + <var:q2> <var:P> := <var:P> + <var:q1> <var:P> := <var:P> + <var:q0> {{ <var:P> = <nat:2> * <var:O> ^ <nat:4> + <nat:1> * <var:O> ^ <nat:2> + <nat:4> * <var:O> + <nat:2> }} . Proof . intros . apply hoare_seq with ( Q := ( ( <var:w> = <var:O> /\ <var:q1> = <var:O> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:w> = <var:O> /\ <var:q1> = <var:O> /\ <var:q2> = <var:O> ^ <nat:2> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:w> = <var:O> /\ <var:q1> = <var:O> /\ <var:q2> = <var:O> ^ <nat:2> /\ <var:q3> = <var:O> ^ <nat:3> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:w> = <var:O> /\ <var:q1> = <var:O> /\ <var:q2> = <var:O> ^ <nat:2> /\ <var:q3> = <var:O> ^ <nat:3> /\ <var:q4> = <var:O> ^ <nat:4> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:w> = <var:O> /\ <var:q1> = <var:O> /\ <var:q2> = <var:O> ^ <nat:2> /\ <var:q3> = <var:O> ^ <nat:3> /\ <var:q4> = <var:O> ^ <nat:4> /\ <var:q0> = <nat:2> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:w> = <var:O> /\ <var:q1> = <nat:4> * <var:O> /\ <var:q2> = <var:O> ^ <nat:2> /\ <var:q3> = <var:O> ^ <nat:3> /\ <var:q4> = <var:O> ^ <nat:4> /\ <var:q0> = <nat:2> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:w> = <var:O> /\ <var:q1> = <nat:4> * <var:O> /\ <var:q2> = <nat:1> * <var:O> ^ <nat:2> /\ <var:q3> = <var:O> ^ <nat:3> /\ <var:q4> = <var:O> ^ <nat:4> /\ <var:q0> = <nat:2> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:w> = <var:O> /\ <var:q1> = <nat:4> * <var:O> /\ <var:q2> = <nat:1> * <var:O> ^ <nat:2> /\ <var:q3> = <var:O> ^ <nat:3> /\ <var:q4> = <nat:2> * <var:O> ^ <nat:4> /\ <var:q0> = <nat:2> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:w> = <var:O> /\ <var:q1> = <nat:4> * <var:O> /\ <var:q2> = <nat:1> * <var:O> ^ <nat:2> /\ <var:q3> = <var:O> ^ <nat:3> /\ <var:q0> = <nat:2> /\ <var:P> = <nat:2> * <var:O> ^ <nat:4> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:w> = <var:O> /\ <var:q1> = <nat:4> * <var:O> /\ <var:q0> = <nat:2> /\ <var:P> = <nat:2> * <var:O> ^ <nat:4> + <nat:1> * <var:O> ^ <nat:2> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:w> = <var:O> /\ <var:q0> = <nat:2> /\ <var:P> = <nat:2> * <var:O> ^ <nat:4> + <nat:1> * <var:O> ^ <nat:2> + <nat:4> * <var:O> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:w> = <var:O> /\ <var:P> = <nat:2> * <var:O> ^ <nat:4> + <nat:1> * <var:O> ^ <nat:2> + <nat:4> * <var:O> + <nat:2> ) ) %assertion ) . all : eapply hoare_consequence_pre ; try ( apply hoare_asgn || assn_auto'' ) . Qed . 