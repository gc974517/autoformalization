\begin{document} \begin{definition} Let the following list of commands <def:poly> in \emph{Imp} as \begin{verbatim} <var:T1> := <var:i> ; <var:T2> := <var:T1> * <var:i> ; <var:T0> := <nat:5> ; <var:T2> := <var:T2> * <nat:7> ; <var:m> := <var:T2> <var:m> := <var:m> + <var:T0> \end{verbatim} \end{definition} \begin{theorem} Take the following series of instructions <def:poly> . Allowing that we have $ <var:i> = <var:S> $ ( for every natural coefficients $ <var:S> $ ) prior to interpreting the list of instructions , then we have $ <var:m> = <nat:7> * <var:S> ^ <nat:2> + <nat:5> $ when code has exited . \end{theorem} \begin{proof} Proving correctness for the code segment is shown by standard Hoare reasoning . Paying attention to the subsequent lines of codefound in our set of instructions , \begin{eqnarray} \{ <var:i> = <var:S> \} \, <var:T1> := <var:i> \, \{ <var:i> = <var:S> \land <var:T1> = <var:S> \} \\ \{ <var:i> = <var:S> \land <var:T1> = <var:S> \} \, <var:T2> := <var:T1> * <var:i> \, \{ <var:i> = <var:S> \land <var:T1> = <var:S> \land <var:T2> = <var:S> ^ <nat:2> \} \\ \{ <var:i> = <var:S> \land <var:T1> = <var:S> \land <var:T2> = <var:S> ^ <nat:2> \} \, <var:T0> := <nat:5> \, \{ <var:i> = <var:S> \land <var:T1> = <var:S> \land <var:T2> = <var:S> ^ <nat:2> \land <var:T0> = <nat:5> \} \\ \{ <var:i> = <var:S> \land <var:T1> = <var:S> \land <var:T2> = <var:S> ^ <nat:2> \land <var:T0> = <nat:5> \} \, <var:T2> := <var:T2> * <nat:7> \, \{ <var:i> = <var:S> \land <var:T1> = <var:S> \land <var:T2> = <nat:7> * <var:S> ^ <nat:2> \land <var:T0> = <nat:5> \} \\ \{ <var:i> = <var:S> \land <var:T1> = <var:S> \land <var:T2> = <nat:7> * <var:S> ^ <nat:2> \land <var:T0> = <nat:5> \} \, <var:m> := <var:T2\, \{ <var:i> = <var:S> \land <var:T1> = <var:S> \land <var:T0> = <nat:5> \land <var:m> = <nat:7> * <var:S> ^ <nat:2> \} \end{eqnarray} Going to the next step , we have \begin{eqnarray} \{ <var:i> = <var:S> \} \, <var:T1> := <var:i> \, \{ <var:i> = <var:S> \land <var:T1> = <var:S> \} \end{eqnarray} This is deduced by the variable update inference rule given in standard Hoare reasoning . \end{proof} \end{document} 
~
Require Import String . From PLF Require Import Imp . From PLF Require Import Hoare . Definition <var:T0> : string := " <var:T0> " . Definition <var:T1> : string := " <var:T1> " . Definition <var:T2> : string := " <var:T2> " . Definition <def:poly> := <var:T1> := <var:i> ; <var:T2> := <var:T1> * <var:i> ; <var:T0> := <nat:5> ; <var:T2> := <var:T2> * <nat:7> ; <var:m> := <var:T2> <var:m> := <var:m> + <var:T0> . Theorem <genH:poly_code_correct> : forall <var:S> : nat , {{ <var:i> = <var:S> }} <def:poly> {{ <var:m> = <nat:7> * <var:S> ^ <nat:2> + <nat:5> }} . Proof . intros . apply hoare_seq with ( Q := ( ( <var:i> = <var:S> /\ <var:T1> = <var:S> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:i> = <var:S> /\ <var:T1> = <var:S> /\ <var:T2> = <var:S> ^ <nat:2> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:i> = <var:S> /\ <var:T1> = <var:S> /\ <var:T2> = <var:S> ^ <nat:2> /\ <var:T0> = <nat:5> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:i> = <var:S> /\ <var:T1> = <var:S> /\ <var:T2> = <nat:7> * <var:S> ^ <nat:2> /\ <var:T0> = <nat:5> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:i> = <var:S> /\ <var:T1> = <var:S> /\ <var:T0> = <nat:5> /\ <var:m> = <nat:7> * <var:S> ^ <nat:2> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:i> = <var:S> /\ <var:m> = <nat:7> * <var:S> ^ <nat:2> + <nat:5> ) ) %assertion ) . all : eapply hoare_consequence_pre ; try ( apply hoare_asgn || assn_auto'' ) . Qed . 