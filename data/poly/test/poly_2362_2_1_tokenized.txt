\begin{document} \begin{definition} Take the following set of instructions <def:poly> in \emph{Imp} : \begin{verbatim} <var:n0> := <nat:8> ; <var:t> := <var:n0> \end{verbatim} \end{definition} \begin{theorem} Allow that we have $ <var:H> = <var:e> $ prior to executing the code segment it holds that we see $ <var:t> = <nat:8> $ once series of commands executes . \end{theorem} \begin{proof} Showing our claim about correctness for our code segment is done with Hoare techniques . Honing in on the proceeding step found in the set of instructions , the variable binding statement assigning $ <nat:8> $ to $ <var:n0>$ . This line moves the condition $ \{ <var:H> = <var:e> \} $ to the condition $ \{ <var:H> = <var:e> \land <var:n0> = <nat:8> \} $ . Moving on , the assignment code \verb | <var:t> := <var:n0> | . This forwards the condition $ \{ <var:H> = <var:e> \land <var:n0> = <nat:8> \} $ as the postcondition $ \{ <var:H> = <var:e> \land <var:t> = <nat:8> \} $ . \end{proof} \end{document} 
~
Require Import String . From PLF Require Import Imp . From PLF Require Import Hoare . Definition <var:n0> : string := " <var:n0> " . Definition <def:poly> := <var:n0> := <nat:8> ; <var:t> := <var:n0> . Theorem <genH:poly_code_correct> : forall <var:e> : nat , {{ <var:H> = <var:e> }} <def:poly> {{ <var:t> = <nat:8> }} . Proof . intros . apply hoare_seq with ( Q := ( ( <var:H> = <var:e> /\ <var:n0> = <nat:8> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:H> = <var:e> /\ <var:t> = <nat:8> ) ) %assertion ) . all : eapply hoare_consequence_pre ; try ( apply hoare_asgn || assn_auto'' ) . Qed . 