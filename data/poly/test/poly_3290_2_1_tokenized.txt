\begin{document} \begin{theorem} Consider the following set of commands as \begin{verbatim} <var:Y0> := <nat:8> ; <var:Z> := <var:Y0> \end{verbatim} Given ( for natural numbers $ <var:r> $ ) that $ <var:G> = <var:r> $ ahead of interpreting the code segment then $ <var:Z> = <nat:8> $ . \end{theorem} \begin{proof} The argument for this code is accomplished with usual Hoare reasoning . Stepping through , \verb | { <var:G> = <var:r> } <var:Y0> := <nat:8> { <var:G> = <var:r> \land <var:Y0> = <nat:8> } | . This is shown by the environment update scheme given by Hoare logic . Observing the following line of code contained in our program , we have \verb | { <var:G> = <var:r> } <var:Y0> := <nat:8> { <var:G> = <var:r> \land <var:Y0> = <nat:8> } | . \end{proof} \end{document} 
~
Require Import String . From PLF Require Import Imp . From PLF Require Import Hoare . Definition <var:Y0> : string := " <var:Y0> " . Theorem <genH:poly_code_correct> : forall <var:r> : nat , {{ <var:G> = <var:r> }} <var:Y0> := <nat:8> ; <var:Z> := <var:Y0> {{ <var:Z> = <nat:8> }} . Proof . intros . apply hoare_seq with ( Q := ( ( <var:G> = <var:r> /\ <var:Y0> = <nat:8> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:G> = <var:r> /\ <var:Z> = <nat:8> ) ) %assertion ) . all : eapply hoare_consequence_pre ; try ( apply hoare_asgn || assn_auto'' ) . Qed . 