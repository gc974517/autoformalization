\begin{document} \begin{theorem} Take a set of commands : \begin{verbatim} <var:c> := <nat:4> ; <var:c> := <nat:4> + <var:c> * <var:W> ; <var:c> := <nat:1> + <var:c> * <var:W> \end{verbatim} Given --- letting $ <var:K> \in \mathbb{N} $ --- it to be that $ <var:W> = <var:K> $ ahead of executing the list of instructions it holds that we have $ <var:c> = <nat:4> \times <var:K> ^ <nat:2> + <nat:4> \times <var:K> + <nat:1> $ once list of instructions has executed . \end{theorem} \begin{proof} Applying usual Hoare reasoning gives us : \begin{eqnarray} \{ <var:W> = <var:K> \} \\ <var:c> := <nat:4> ; \\ \{ <var:W> = <var:K> \land <var:c> = <nat:4> \} \\ <var:c> := <nat:4> + <var:c> * <var:W> ; \\ \{ <var:W> = <var:K> \land <var:c> = <nat:4> \cdot <var:K> + <nat:4> \} \\ <var:c> := <nat:1> + <var:c> * <var:W> \\ \{ <var:W> = <var:K> \land <var:c> = <nat:4> \cdot <var:K> ^ <nat:2> + <nat:4> \cdot <var:K> + <nat:1> \} \end{eqnarray} Considering the above , the list of commands is demonstrated to be correct . \end{proof} \end{document} 
~
Require Import String . From PLF Require Import Imp . From PLF Require Import Hoare . Theorem <genH:poly_code_correct> : forall <var:K> : nat , {{ <var:W> = <var:K> }} <var:c> := <nat:4> ; <var:c> := <nat:4> + <var:c> * <var:W> ; <var:c> := <nat:1> + <var:c> * <var:W> {{ <var:c> = <nat:4> * <var:K> ^ <nat:2> + <nat:4> * <var:K> + <nat:1> }} . Proof . intros . apply hoare_seq with ( Q := ( ( <var:W> = <var:K> /\ <var:c> = <nat:4> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:W> = <var:K> /\ <var:c> = <nat:4> * <var:K> + <nat:4> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:W> = <var:K> /\ <var:c> = <nat:4> * <var:K> ^ <nat:2> + <nat:4> * <var:K> + <nat:1> ) ) %assertion ) . all : eapply hoare_consequence_pre ; try ( apply hoare_asgn || assn_auto'' ) . Qed . 