\begin{document} \begin{definition} Take a list of instructions <def:poly> in \emph{Imp} : \begin{verbatim} <var:v0> := <nat:5> ; <var:F> := <var:v0> \end{verbatim} \end{definition} \begin{theorem} Given it to hold that $ <var:y> = <var:w> $ ( given $ <var:w> $ ) ahead of interpreting the series of instructions it holds that we see $ <var:F> = <nat:5> $ when series of instructions has executed . \end{theorem} \begin{proof} The application of standard Hoare techniques yields : \begin{eqnarray} \{ <var:y> = <var:w> \} \\ <var:v0> := <nat:5> ; \\ \{ <var:y> = <var:w> \land <var:v0> = <nat:5> \} \\ <var:F> := <var:v0> \\ \{ <var:y> = <var:w> \land <var:F> = <nat:5> \} \end{eqnarray} Therefore , the code has been shown to be correct . \end{proof} \end{document} 
~
Require Import String . From PLF Require Import Imp . From PLF Require Import Hoare . Definition <var:v0> : string := " <var:v0> " . Definition <def:poly> := <var:v0> := <nat:5> ; <var:F> := <var:v0> . Theorem <genH:poly_code_correct> : forall <var:w> : nat , {{ <var:y> = <var:w> }} <def:poly> {{ <var:F> = <nat:5> }} . Proof . intros . apply hoare_seq with ( Q := ( ( <var:y> = <var:w> /\ <var:v0> = <nat:5> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:y> = <var:w> /\ <var:F> = <nat:5> ) ) %assertion ) . all : eapply hoare_consequence_pre ; try ( apply hoare_asgn || assn_auto'' ) . Qed . 