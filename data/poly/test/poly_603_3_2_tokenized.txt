\begin{document} \begin{definition} Define the following list of instructions <def:poly> in \emph{Imp} such that \begin{verbatim} <var:a> := <nat:4> ; <var:a> := <nat:1> + <var:a> * <var:t> ; <var:a> := <nat:3> + <var:a> * <var:t> \end{verbatim} \end{definition} \begin{theorem} Allow it to be that $ <var:t> = <var:c> $ ahead of interpreting the set of commands it holds that we have $ <var:a> = <nat:4> \cdot <var:c> ^ <nat:2> + <nat:1> \cdot <var:c> + <nat:3> $ . \end{theorem} \begin{proof} Applying standard Hoare reasoning results in : \begin{eqnarray} \{ <var:t> = <var:c> \} \\ <var:a> := <nat:4> ; \\ \{ <var:t> = <var:c> \land <var:a> = <nat:4> \} \\ <var:a> := <nat:1> + <var:a> * <var:t> ; \\ \{ <var:t> = <var:c> \land <var:a> = <nat:4> \times <var:c> + <nat:1> \} \\ <var:a> := <nat:3> + <var:a> * <var:t> \\ \{ <var:t> = <var:c> \land <var:a> = <nat:4> \times <var:c> ^ <nat:2> + <nat:1> \times <var:c> + <nat:3> \} \end{eqnarray} Hence , this list of instructions is shown correct . \end{proof} \end{document} 
~
Require Import String . From PLF Require Import Imp . From PLF Require Import Hoare . Definition <def:poly> := <var:a> := <nat:4> ; <var:a> := <nat:1> + <var:a> * <var:t> ; <var:a> := <nat:3> + <var:a> * <var:t> . Theorem <genH:poly_code_correct> : forall <var:c> : nat , {{ <var:t> = <var:c> }} <def:poly> {{ <var:a> = <nat:4> * <var:c> ^ <nat:2> + <nat:1> * <var:c> + <nat:3> }} . Proof . intros . apply hoare_seq with ( Q := ( ( <var:t> = <var:c> /\ <var:a> = <nat:4> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:t> = <var:c> /\ <var:a> = <nat:4> * <var:c> + <nat:1> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:t> = <var:c> /\ <var:a> = <nat:4> * <var:c> ^ <nat:2> + <nat:1> * <var:c> + <nat:3> ) ) %assertion ) . all : eapply hoare_consequence_pre ; try ( apply hoare_asgn || assn_auto'' ) . Qed . 