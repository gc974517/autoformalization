\begin{document} \begin{definition} Define a code <def:poly> in \emph{Imp} as \begin{verbatim} <var:G0> := <nat:4> ; <var:W> := <var:G0> \end{verbatim} \end{definition} \begin{theorem} Assume it to be that $ <var:J> = <var:v> $ taking positive numbers $ <var:v> $ prior to the execution of the set of commands , it holds that $ <var:W> = <nat:4> $ once series of commands has executed . \end{theorem} \begin{proof} The method of proof for our code segment is accomplished by standard Hoare reasoning . Moving on to the following statement found in our series of commands , the command defining $ <nat:4> $ to $ <var:G0>$ . This command takes $ \{ <var:J> = <var:v> \} $ into $ \{ <var:J> = <var:v> \land <var:G0> = <nat:4> \} $ . Paying attention to the following bit of code contained in our list of commands , we see the variable binding statement giving $ <var:G0$ as $ <var:W>$ . This forwards the condition $ \{ <var:J> = <var:v> \land <var:G0> = <nat:4> \} $ into $ \{ <var:J> = <var:v> \land <var:W> = <nat:4> \} $ . \end{proof} \end{document} 
~
Require Import String . From PLF Require Import Imp . From PLF Require Import Hoare . Definition <var:G0> : string := " <var:G0> " . Definition <def:poly> := <var:G0> := <nat:4> ; <var:W> := <var:G0> . Theorem <genH:poly_code_correct> : forall <var:v> : nat , {{ <var:J> = <var:v> }} <def:poly> {{ <var:W> = <nat:4> }} . Proof . intros . apply hoare_seq with ( Q := ( ( <var:J> = <var:v> /\ <var:G0> = <nat:4> ) ) %assertion ) . apply hoare_seq with ( Q := ( ( <var:J> = <var:v> /\ <var:W> = <nat:4> ) ) %assertion ) . all : eapply hoare_consequence_pre ; try ( apply hoare_asgn || assn_auto'' ) . Qed . 